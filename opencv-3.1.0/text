3rdparty/jinja2/debug.py:                         code.co_lnotab, (), ())
3rdparty/jinja2/parser.py:                message.append('You probably made a nesting mistake. Jinja '
3rdparty/jinja2/parser.py:        with a human readable error message that could help to identify
3rdparty/jinja2/parser.py:        if self.stream.current.type in ('variable_end', 'block_end', 'rparen'):
3rdparty/jinja2/parser.py:        default assignments to tuples are parsed, that can be disable however
3rdparty/jinja2/parser.py:                elif token.type == 'variable_begin':
3rdparty/jinja2/parser.py:                    self.stream.expect('variable_end')
3rdparty/jinja2/compiler.py:        # variables that are known to be declared (probably from outer
3rdparty/jinja2/compiler.py:        # undeclared variables from outer scopes
3rdparty/jinja2/compiler.py:        # is buffered this variable points to the name of the list used as
3rdparty/jinja2/compiler.py:        """Find all the shadowed names.  extra is an iterable of variables
3rdparty/jinja2/compiler.py:            # we have to remember the undeclared variables of this branch
3rdparty/jinja2/compiler.py:        # undeclared variables
3rdparty/jinja2/compiler.py:        """Enable buffering for the frame from that point onwards."""
3rdparty/jinja2/compiler.py:        """Disable Python optimizations for the frame."""
3rdparty/jinja2/compiler.py:        """This function returns all the shadowed variables in a dict
3rdparty/jinja2/compiler.py:        This also predefines locally declared variables from the loop
3rdparty/jinja2/compiler.py:        """Restore all aliases and delete unused variables."""
3rdparty/jinja2/compiler.py:        variable in a scope where the initial value is coming from an
3rdparty/jinja2/compiler.py:        # variables that are undeclared (accessed before declaration) and
3rdparty/jinja2/compiler.py:        # assertion error. Reason: we can't generate reasonable code from
3rdparty/jinja2/compiler.py:        # it without aliasing all the variables.
3rdparty/jinja2/compiler.py:            self.fail('It\'s not possible to set and access variables '
3rdparty/jinja2/compiler.py:        # remove variables from a closure from the frame's undeclared
3rdparty/jinja2/compiler.py:        # no special variables for this scope, abort early
3rdparty/jinja2/compiler.py:        """Return a human readable position for the node."""
3rdparty/jinja2/compiler.py:        # variable is accessed in the body.
3rdparty/jinja2/compiler.py:        # variables at that point.  Because loops can be nested but the loop
3rdparty/jinja2/compiler.py:        # variable is a special one we have to enforce aliasing for it.
3rdparty/jinja2/compiler.py:        # make sure the loop variable is a special one and raise a template
3rdparty/jinja2/compiler.py:                self.fail('Can\'t assign to special loop variable '
3rdparty/jinja2/compiler.py:        # loop is accessing the special loop variable and no parent loop
3rdparty/jinja2/compiler.py:                 " variable of the current loop.  Because there is no parent "
3rdparty/jinja2/compiler.py:    def binop(operator, interceptable=True):
3rdparty/jinja2/compiler.py:    def uaop(operator, interceptable=True):
3rdparty/jinja2/compiler.py:    visit_And = binop('and', interceptable=False)
3rdparty/jinja2/compiler.py:    visit_Or = binop('or', interceptable=False)
3rdparty/jinja2/compiler.py:    visit_Not = uaop('not ', interceptable=False)
3rdparty/jinja2/utils.py:_letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
3rdparty/jinja2/utils.py:    """This decorator can be used to mark a function or method context callable.
3rdparty/jinja2/utils.py:    A context callable is passed the active :class:`Context` as first argument when
3rdparty/jinja2/utils.py:    a function that returns a sorted list of template variables the current
3rdparty/jinja2/utils.py:    context callable.  This is similar to the :func:`contextfunction`
3rdparty/jinja2/utils.py:    passed.  For more information about the eval context, see
3rdparty/jinja2/utils.py:    callable.  This decorator works exactly like the :func:`contextfunction`
3rdparty/jinja2/utils.py:    undefined variables.  For example a custom default filter can look like
3rdparty/jinja2/utils.py:def consume(iterable):
3rdparty/jinja2/utils.py:    """Consumes an iterable without doing anything with it."""
3rdparty/jinja2/utils.py:    for event in iterable:
3rdparty/jinja2/utils.py:    the time.  Normally you don't have to care about that but if you are
3rdparty/jinja2/utils.py:    """Converts any URLs in text into clickable links. Works on http://,
3rdparty/jinja2/utils.py:    given charset if applicable to URL safe quoting under all rules
3rdparty/jinja2/utils.py:# register the LRU cache as mutable mapping if possible
3rdparty/jinja2/utils.py:    from collections import MutableMapping
3rdparty/jinja2/utils.py:    MutableMapping.register(LRUCache)
3rdparty/jinja2/meta.py:    This module implements various functions that exposes information about
3rdparty/jinja2/meta.py:    """We abuse the code generator for introspection."""
3rdparty/jinja2/meta.py:def find_undeclared_variables(ast):
3rdparty/jinja2/meta.py:    """Returns a set of all variables in the AST that will be looked up from
3rdparty/jinja2/meta.py:    variables will be used depending on the path the execution takes at
3rdparty/jinja2/meta.py:    runtime, all variables are returned.
3rdparty/jinja2/meta.py:    >>> meta.find_undeclared_variables(ast)
3rdparty/jinja2/meta.py:       Internally the code generator is used for finding undeclared variables.
3rdparty/jinja2/meta.py:            # something dynamic we don't know about here
3rdparty/jinja2/meta.py:        # something else we don't care about, we could warn here
3rdparty/jinja2/AUTHORS:- Clovis Fabricio (nosklo)
3rdparty/jinja2/AUTHORS:- Peter van Dijk (Habbie)
3rdparty/jinja2/runtime.py:# these variables are exported to the template runtime
3rdparty/jinja2/runtime.py:    """The template context holds the variables of a template.  It stores the
3rdparty/jinja2/runtime.py:    The context is immutable.  Modifications on :attr:`parent` **must not**
3rdparty/jinja2/runtime.py:    :class:`Undefined` object for missing variables.
3rdparty/jinja2/runtime.py:        """Looks up a variable like `__getitem__` or `get` but returns an
3rdparty/jinja2/runtime.py:        """Get a new dict with the exported variables."""
3rdparty/jinja2/runtime.py:        exported variables.
3rdparty/jinja2/runtime.py:        """Call the callable with the arguments and keyword arguments
3rdparty/jinja2/runtime.py:        argument if the callable is a :func:`contextfunction` or
3rdparty/jinja2/runtime.py:        # Allow callable classes to take a context
3rdparty/jinja2/runtime.py:                                                'a callable raised a '
3rdparty/jinja2/runtime.py:    # not available on python 3
3rdparty/jinja2/runtime.py:        """Lookup a variable or raise `KeyError` if the variable is
3rdparty/jinja2/runtime.py:    def __init__(self, iterable, recurse=None, depth0=0):
3rdparty/jinja2/runtime.py:        self._iterator = iter(iterable)
3rdparty/jinja2/runtime.py:        # try to get the length of the iterable early.  This must be done
3rdparty/jinja2/runtime.py:            self._length = len(iterable)
3rdparty/jinja2/runtime.py:    def loop(self, iterable):
3rdparty/jinja2/runtime.py:        return self._recurse(iterable, self._recurse, self.depth0 + 1)
3rdparty/jinja2/runtime.py:            # we have to convert the iterable into a sequence and use the
3rdparty/jinja2/runtime.py:            iterable = tuple(self._iterator)
3rdparty/jinja2/runtime.py:            self._iterator = iter(iterable)
3rdparty/jinja2/runtime.py:            self._length = len(iterable) + self.index0 + 1
3rdparty/jinja2/filters.py:    about the eval context, see :ref:`eval-context`.
3rdparty/jinja2/filters.py:    """Returns a callable that looks up the given attribute from a
3rdparty/jinja2/filters.py:    """Enforce HTML escaping.  This will probably double escape variables."""
3rdparty/jinja2/filters.py:    dictionaries and regular strings as well as pairwise iterables.
3rdparty/jinja2/filters.py:                'id': 'list-%d'|format(variable)}|xmlattr }}>
3rdparty/jinja2/filters.py:    """Sort an iterable.  Per default it sorts ascending, if you pass it
3rdparty/jinja2/filters.py:    If the iterable is made of strings the third parameter can be used to
3rdparty/jinja2/filters.py:    control the case sensitiveness of the comparison which is disabled by
3rdparty/jinja2/filters.py:        {% for item in iterable|sort %}
3rdparty/jinja2/filters.py:        {% for item in iterable|sort(attribute='date') %}
3rdparty/jinja2/filters.py:    otherwise the value of the variable:
3rdparty/jinja2/filters.py:        {{ my_variable|default('my_variable is not defined') }}
3rdparty/jinja2/filters.py:    This will output the value of ``my_variable`` if the variable was
3rdparty/jinja2/filters.py:    defined, otherwise ``'my_variable is not defined'``. If you want
3rdparty/jinja2/filters.py:    to use default with variables that evaluate to false you have to
3rdparty/jinja2/filters.py:    """Format the value like a 'human-readable' file size (i.e. 13 kB,
3rdparty/jinja2/filters.py:    """Pretty print a variable. Useful for debugging.
3rdparty/jinja2/filters.py:    """Converts URLs in plain text into clickable links.
3rdparty/jinja2/filters.py:    return wrapstring.join(textwrap.wrap(s, width=width, expand_tabs=False,
3rdparty/jinja2/filters.py:        <table>
3rdparty/jinja2/filters.py:        </table>
3rdparty/jinja2/filters.py:def do_sum(environment, iterable, attribute=None, start=0):
3rdparty/jinja2/filters.py:        iterable = imap(make_attrgetter(environment, attribute), iterable)
3rdparty/jinja2/filters.py:    return sum(iterable, start)
3rdparty/jinja2/filters.py:    escaping enabled this variable will not be escaped.
3rdparty/jinja2/filters.py:            raise FilterArgumentError('argument must be iterable')
3rdparty/jinja2/filters.py:    'abs':                  abs,
3rdparty/jinja2/ext.py:        to filter tokens returned.  This method has to return an iterable of
3rdparty/jinja2/ext.py:    def gettext(__context, __string, **variables):
3rdparty/jinja2/ext.py:        return rv % variables
3rdparty/jinja2/ext.py:    def ngettext(__context, __singular, __plural, __num, **variables):
3rdparty/jinja2/ext.py:        variables.setdefault('num', __num)
3rdparty/jinja2/ext.py:        return rv % variables
3rdparty/jinja2/ext.py:            install_gettext_callables=self._install_callables,
3rdparty/jinja2/ext.py:        self._install_callables(gettext, ngettext, newstyle)
3rdparty/jinja2/ext.py:        self._install_callables(
3rdparty/jinja2/ext.py:    def _install_callables(self, gettext, ngettext, newstyle=None):
3rdparty/jinja2/ext.py:        """Parse a translatable tag."""
3rdparty/jinja2/ext.py:        # find all the variables referenced.  Additionally a variable can be
3rdparty/jinja2/ext.py:        variables = {}
3rdparty/jinja2/ext.py:            if variables:
3rdparty/jinja2/ext.py:            if name.value in variables:
3rdparty/jinja2/ext.py:                parser.fail('translatable variable %r defined twice.' %
3rdparty/jinja2/ext.py:                variables[name.value] = var = parser.parse_expression()
3rdparty/jinja2/ext.py:                variables[name.value] = var = nodes.Name(name.value, 'load')
3rdparty/jinja2/ext.py:                    variables[name.value] = plural_expr
3rdparty/jinja2/ext.py:                if name.value not in variables:
3rdparty/jinja2/ext.py:                    parser.fail('unknown variable %r for pluralization' %
3rdparty/jinja2/ext.py:                plural_expr = variables[name.value]
3rdparty/jinja2/ext.py:            if var not in variables:
3rdparty/jinja2/ext.py:                variables[var] = nodes.Name(var, 'load')
3rdparty/jinja2/ext.py:            parser.fail('pluralize without variables', lineno)
3rdparty/jinja2/ext.py:        node = self._make_node(singular, plural, variables, plural_expr,
3rdparty/jinja2/ext.py:            elif parser.stream.current.type == 'variable_begin':
3rdparty/jinja2/ext.py:                parser.stream.expect('variable_end')
3rdparty/jinja2/ext.py:                    parser.fail('a translatable section can have only one '
3rdparty/jinja2/ext.py:                parser.fail('control structures in translatable sections are '
3rdparty/jinja2/ext.py:    def _make_node(self, singular, plural, variables, plural_expr,
3rdparty/jinja2/ext.py:        # no variables referenced?  no need to escape for old style
3rdparty/jinja2/ext.py:        # enough to handle the variable expansion and autoescape
3rdparty/jinja2/ext.py:            for key, value in iteritems(variables):
3rdparty/jinja2/ext.py:            if variables:
3rdparty/jinja2/ext.py:                    for key, value in variables.items()
3rdparty/jinja2/ext.py:                     babel_style=True):
3rdparty/jinja2/ext.py:    """Extract localizable strings from the given template node.  Per
3rdparty/jinja2/ext.py:    default this function returns matches in babel style that means non string
3rdparty/jinja2/ext.py:    allows Babel to figure out what you really meant if you are using
3rdparty/jinja2/ext.py:    If you don't want that behavior set the `babel_style` parameter to `False`
3rdparty/jinja2/ext.py:    >>> list(extract_from_ast(node, babel_style=False))
3rdparty/jinja2/ext.py:    This extraction function operates on the AST and is because of that unable
3rdparty/jinja2/ext.py:    to extract any comments.  For comment support you have to use the babel
3rdparty/jinja2/ext.py:        if not babel_style:
3rdparty/jinja2/ext.py:    usable value.
3rdparty/jinja2/ext.py:def babel_extract(fileobj, keywords, comment_tags, options):
3rdparty/jinja2/ext.py:    """Babel extraction method for Jinja templates.
3rdparty/jinja2/ext.py:       The `newstyle_gettext` flag can be set to `True` to enable newstyle
3rdparty/jinja2/ext.py:        options.get('variable_start_string', VARIABLE_START_STRING),
3rdparty/jinja2/ext.py:        options.get('variable_end_string', VARIABLE_END_STRING),
3rdparty/jinja2/nodes.py:        d.setdefault('abstract', False)
3rdparty/jinja2/nodes.py:        if callable(environment.autoescape):
3rdparty/jinja2/nodes.py:    """Baseclass for all Jinja2 nodes.  There are a number of nodes available
3rdparty/jinja2/nodes.py:    abstract = True
3rdparty/jinja2/nodes.py:        if self.abstract:
3rdparty/jinja2/nodes.py:            raise TypeError('abstract nodes are not instanciable')
3rdparty/jinja2/nodes.py:    abstract = True
3rdparty/jinja2/nodes.py:    abstract = True
3rdparty/jinja2/nodes.py:    :class:`Name` or :class:`Tuple`), `iter` the iterable.  `body` is a list
3rdparty/jinja2/nodes.py:    subscript callback of the interface.  As exported variables may not
3rdparty/jinja2/nodes.py:    abstract = True
3rdparty/jinja2/nodes.py:    abstract = True
3rdparty/jinja2/nodes.py:    abstract = True
3rdparty/jinja2/nodes.py:    abstract = True
3rdparty/jinja2/nodes.py:        """Return a const object if the value is representable as
3rdparty/jinja2/nodes.py:        # if this variable would be called filter, 2to3 would wrap the
3rdparty/jinja2/nodes.py:        # call in a list beause it is assuming we are talking about the
3rdparty/jinja2/nodes.py:    Operand.__doc__ += '\nThe following operators are available: ' + \
3rdparty/jinja2/nodes.py:    compiler so there is no need to assign them to local variables.
3rdparty/jinja2/nodes.py:    a new identifier for you.  This identifier is not available from the
3rdparty/jinja2/nodes.py:    variable named `foo`::
3rdparty/jinja2/LICENSE:    * Redistributions of source code must retain the above copyright
3rdparty/jinja2/LICENSE:    * Redistributions in binary form must reproduce the above
3rdparty/jinja2/exceptions.py:    # bogusly warns us about message being deprecated
3rdparty/jinja2/exceptions.py:    sandbox is enabled.
3rdparty/jinja2/markupsafe/_constants.py:    'nabla': 8711,
3rdparty/jinja2/markupsafe/__init__.py:                  'translate', 'expandtabs', 'swapcase', 'zfill':
3rdparty/jinja2/markupsafe/__init__.py:def _escape_argspec(obj, iterable, escape):
3rdparty/jinja2/markupsafe/__init__.py:    for key, value in iterable:
3rdparty/jinja2/markupsafe/__init__.py:# modules imports the markup type which is define above.
3rdparty/jinja2/lexer.py:# cache for the lexers. Exists in order to be able to have multiple
3rdparty/jinja2/lexer.py:# we use the unicode identifier rule if this python version is able
3rdparty/jinja2/lexer.py:TOKEN_VARIABLE_BEGIN = intern('variable_begin')
3rdparty/jinja2/lexer.py:TOKEN_VARIABLE_END = intern('variable_end')
3rdparty/jinja2/lexer.py:        (len(environment.variable_start_string), 'variable',
3rdparty/jinja2/lexer.py:         e(environment.variable_start_string))
3rdparty/jinja2/lexer.py:        # passed an iterable of not interned strings.
3rdparty/jinja2/lexer.py:    def test_any(self, *iterable):
3rdparty/jinja2/lexer.py:        for expr in iterable:
3rdparty/jinja2/lexer.py:    """A token stream is an iterable that yields :class:`Token`\s.  The
3rdparty/jinja2/lexer.py:    """Return a lexer which is probably cached."""
3rdparty/jinja2/lexer.py:           environment.variable_start_string,
3rdparty/jinja2/lexer.py:           environment.variable_end_string,
3rdparty/jinja2/lexer.py:        # <%= for variables. (if someone wants asp like syntax)
3rdparty/jinja2/lexer.py:        # variables are just part of the rules if variable processing
3rdparty/jinja2/lexer.py:        # block suffix if trimming is enabled
3rdparty/jinja2/lexer.py:        # strip leading spaces if lstrip_blocks is enabled
3rdparty/jinja2/lexer.py:            # use '{%+' to manually disable lstrip_blocks behavior
3rdparty/jinja2/lexer.py:            # detect overlap between block and variable or comment strings
3rdparty/jinja2/lexer.py:            # make sure we don't mistake a block for a variable or a comment
3rdparty/jinja2/lexer.py:            m = block_diff.match(environment.variable_start_string)
3rdparty/jinja2/lexer.py:            # detect overlap between comment and variable strings
3rdparty/jinja2/lexer.py:            m = comment_diff.match(environment.variable_start_string)
3rdparty/jinja2/lexer.py:            no_variable_re = m and r'(?!%s)' % e(m.group(1)) or ''
3rdparty/jinja2/lexer.py:                    no_variable_re,
3rdparty/jinja2/lexer.py:            # variables
3rdparty/jinja2/lexer.py:                    e(environment.variable_end_string),
3rdparty/jinja2/lexer.py:                    e(environment.variable_end_string)
3rdparty/jinja2/lexer.py:            assert state in ('variable', 'block'), 'invalid state'
3rdparty/jinja2/lexer.py:                # we only match blocks and variables if braces / parentheses
3rdparty/jinja2/lexer.py:                   tokens in ('variable_end', 'block_end',
3rdparty/jinja2/lexer.py:                # fetch new position into new variable so that we can check
3rdparty/jinja2/tests.py:test_callable = callable
3rdparty/jinja2/tests.py:    """Return true if the variable is odd."""
3rdparty/jinja2/tests.py:    """Return true if the variable is even."""
3rdparty/jinja2/tests.py:    """Check if a variable is divisible by a number."""
3rdparty/jinja2/tests.py:    """Return true if the variable is defined:
3rdparty/jinja2/tests.py:        {% if variable is defined %}
3rdparty/jinja2/tests.py:            value of variable: {{ variable }}
3rdparty/jinja2/tests.py:            variable is not defined
3rdparty/jinja2/tests.py:    variables.
3rdparty/jinja2/tests.py:    """Return true if the variable is none."""
3rdparty/jinja2/tests.py:    """Return true if the variable is lowercased."""
3rdparty/jinja2/tests.py:    """Return true if the variable is uppercased."""
3rdparty/jinja2/tests.py:    """Return true if the variable is a number."""
3rdparty/jinja2/tests.py:    """Return true if the variable is a sequence. Sequences are variables
3rdparty/jinja2/tests.py:    that are iterable.
3rdparty/jinja2/tests.py:def test_iterable(value):
3rdparty/jinja2/tests.py:    'iterable':         test_iterable,
3rdparty/jinja2/tests.py:    'callable':         test_callable,
3rdparty/jinja2/bccache.py:    cache subclasses don't have to care about cache invalidation.
3rdparty/jinja2/bccache.py:        bucket.  If they are not able to find code in the cache for the
3rdparty/jinja2/bccache.py:        from a bucket back to the cache.  If it unable to do so it must not
3rdparty/jinja2/bccache.py:    the underlying cache client to the bytecode cache which is available
3rdparty/jinja2/visitor.py:    """Walks the abstract syntax tree and call visitor functions for every
3rdparty/jinja2/visitor.py:    """Walks the abstract syntax tree and allows modifications of nodes.
3rdparty/jinja2/environment.py:           environment.variable_start_string != \
3rdparty/jinja2/environment.py:           environment.comment_start_string, 'block, variable and comment ' \
3rdparty/jinja2/environment.py:    important shared variables like configuration, filters, tests,
3rdparty/jinja2/environment.py:        `variable_start_string`
3rdparty/jinja2/environment.py:        `variable_end_string`
3rdparty/jinja2/environment.py:            removed (block, not variable tag!).  Defaults to `False`.
3rdparty/jinja2/environment.py:            If this is set to ``True`` leading spaces and tabs are stripped
3rdparty/jinja2/environment.py:            should the optimizer be enabled?  Default is `True`.
3rdparty/jinja2/environment.py:            A callable that can be used to process the result of a variable
3rdparty/jinja2/environment.py:            If set to true the XML/HTML autoescaping feature is enabled by
3rdparty/jinja2/environment.py:            default.  For more details about auto escaping see
3rdparty/jinja2/environment.py:            be a callable that is passed the template name and has to
3rdparty/jinja2/environment.py:            enabled by default.
3rdparty/jinja2/environment.py:            sources may change (ie: file system or database).  If
3rdparty/jinja2/environment.py:            disable that.
3rdparty/jinja2/environment.py:    #: if this environment is sandboxed.  Modifying this variable won't make
3rdparty/jinja2/environment.py:                 variable_start_string=VARIABLE_START_STRING,
3rdparty/jinja2/environment.py:                 variable_end_string=VARIABLE_END_STRING,
3rdparty/jinja2/environment.py:        self.variable_start_string = variable_start_string
3rdparty/jinja2/environment.py:        self.variable_end_string = variable_end_string
3rdparty/jinja2/environment.py:                variable_start_string=missing, variable_end_string=missing,
3rdparty/jinja2/environment.py:        """Parse the sourcecode and return the abstract syntax tree.  This
3rdparty/jinja2/environment.py:        executable source- or bytecode.  This is useful for debugging or to
3rdparty/jinja2/environment.py:        the file system.  If the template came from a database or memory this
3rdparty/jinja2/environment.py:        causes the generated code to be able to import without the global
3rdparty/jinja2/environment.py:        environment variable to be set.
3rdparty/jinja2/environment.py:        """A handy helper method that returns a callable that accepts keyword
3rdparty/jinja2/environment.py:        arguments that appear as variables in the expression.  If called it
3rdparty/jinja2/environment.py:        parser = Parser(self, source, state='variable')
3rdparty/jinja2/environment.py:        syntax errors to abort the compilation you can set `ignore_errors`
3rdparty/jinja2/environment.py:        templates, or a `filter_func` can be provided which is a callable that
3rdparty/jinja2/environment.py:        These variables are available in the context at render time.
3rdparty/jinja2/environment.py:        if an iterable of template names is given, otherwise to
3rdparty/jinja2/environment.py:    considered immutable.  Modifications on the object are not supported.
3rdparty/jinja2/environment.py:    that is probably shared with other templates created with the constructor
3rdparty/jinja2/environment.py:                variable_start_string=VARIABLE_START_STRING,
3rdparty/jinja2/environment.py:                variable_end_string=VARIABLE_END_STRING,
3rdparty/jinja2/environment.py:            block_start_string, block_end_string, variable_start_string,
3rdparty/jinja2/environment.py:            variable_end_string, comment_start_string, comment_end_string,
3rdparty/jinja2/environment.py:        `locals` can be a dict of local variables for internal usage.
3rdparty/jinja2/environment.py:        exported template variables from the Python layer:
3rdparty/jinja2/environment.py:        """If this variable is `False` there is a newer version available."""
3rdparty/jinja2/environment.py:    template are available as attributes on this object.  Additionally
3rdparty/jinja2/environment.py:    If buffering is enabled with a buffer size of 5, five items are combined
3rdparty/jinja2/environment.py:        self.disable_buffering()
3rdparty/jinja2/environment.py:                iterable = (x.encode(encoding, errors) for x in self)
3rdparty/jinja2/environment.py:                iterable = self
3rdparty/jinja2/environment.py:                fp.writelines(iterable)
3rdparty/jinja2/environment.py:                for item in iterable:
3rdparty/jinja2/environment.py:    def disable_buffering(self):
3rdparty/jinja2/environment.py:        """Disable the output buffering."""
3rdparty/jinja2/environment.py:    def enable_buffering(self, size=5):
3rdparty/jinja2/environment.py:        """Enable buffering.  Buffer `size` items before yielding them."""
3rdparty/jinja2/constants.py:consequat conubia convallis cras cubilia cum curabitur curae cursus dapibus
3rdparty/jinja2/constants.py:faucibus felis fermentum feugiat fringilla fusce gravida habitant habitasse hac
3rdparty/jinja2/loaders.py:        reloading is enabled it's always called to check if the template
3rdparty/jinja2/loaders.py:        # if the bytecode cache is available and the bucket doesn't
3rdparty/jinja2/loaders.py:    Because auto reloading is rarely useful this is disabled per default.
3rdparty/jinja2/loaders.py:    The `uptodatefunc` is a function that is called if autoreload is enabled
3rdparty/jinja2/_stringdefs.py:Cn = u'\u0242\u0243\u0244\u0245\u0246\u0247\u0248\u0249\u024a\u024b\u024c\u024d\u024e\u024f\u0370\u0371\u0372\u0373\u0376\u0377\u0378\u0379\u037b\u037c\u037d\u037f\u0380\u0381\u0382\u0383\u038b\u038d\u03a2\u03cf\u0487\u04cf\u04fa\u04fb\u04fc\u04fd\u04fe\u04ff\u0510\u0511\u0512\u0513\u0514\u0515\u0516\u0517\u0518\u0519\u051a\u051b\u051c\u051d\u051e\u051f\u0520\u0521\u0522\u0523\u0524\u0525\u0526\u0527\u0528\u0529\u052a\u052b\u052c\u052d\u052e\u052f\u0530\u0557\u0558\u0560\u0588\u058b\u058c\u058d\u058e\u058f\u0590\u05ba\u05c8\u05c9\u05ca\u05cb\u05cc\u05cd\u05ce\u05cf\u05eb\u05ec\u05ed\u05ee\u05ef\u05f5\u05f6\u05f7\u05f8\u05f9\u05fa\u05fb\u05fc\u05fd\u05fe\u05ff\u0604\u0605\u0606\u0607\u0608\u0609\u060a\u0616\u0617\u0618\u0619\u061a\u061c\u061d\u0620\u063b\u063c\u063d\u063e\u063f\u065f\u070e\u074b\u074c\u076e\u076f\u0770\u0771\u0772\u0773\u0774\u0775\u0776\u0777\u0778\u0779\u077a\u077b\u077c\u077d\u077e\u077f\u07b2\u07b3\u07b4\u07b5\u07b6\u07b7\u07b8\u07b9\u07ba\u07bb\u07bc\u07bd\u07be\u07bf\u07c0\u07c1\u07c2\u07c3\u07c4\u07c5\u07c6\u07c7\u07c8\u07c9\u07ca\u07cb\u07cc\u07cd\u07ce\u07cf\u07d0\u07d1\u07d2\u07d3\u07d4\u07d5\u07d6\u07d7\u07d8\u07d9\u07da\u07db\u07dc\u07dd\u07de\u07df\u07e0\u07e1\u07e2\u07e3\u07e4\u07e5\u07e6\u07e7\u07e8\u07e9\u07ea\u07eb\u07ec\u07ed\u07ee\u07ef\u07f0\u07f1\u07f2\u07f3\u07f4\u07f5\u07f6\u07f7\u07f8\u07f9\u07fa\u07fb\u07fc\u07fd\u07fe\u07ff\u0800\u0801\u0802\u0803\u0804\u0805\u0806\u0807\u0808\u0809\u080a\u080b\u080c\u080d\u080e\u080f\u0810\u0811\u0812\u0813\u0814\u0815\u0816\u0817\u0818\u0819\u081a\u081b\u081c\u081d\u081e\u081f\u0820\u0821\u0822\u0823\u0824\u0825\u0826\u0827\u0828\u0829\u082a\u082b\u082c\u082d\u082e\u082f\u0830\u0831\u0832\u0833\u0834\u0835\u0836\u0837\u0838\u0839\u083a\u083b\u083c\u083d\u083e\u083f\u0840\u0841\u0842\u0843\u0844\u0845\u0846\u0847\u0848\u0849\u084a\u084b\u084c\u084d\u084e\u084f\u0850\u0851\u0852\u0853\u0854\u0855\u0856\u0857\u0858\u0859\u085a\u085b\u085c\u085d\u085e\u085f\u0860\u0861\u0862\u0863\u0864\u0865\u0866\u0867\u0868\u0869\u086a\u086b\u086c\u086d\u086e\u086f\u0870\u0871\u0872\u0873\u0874\u0875\u0876\u0877\u0878\u0879\u087a\u087b\u087c\u087d\u087e\u087f\u0880\u0881\u0882\u0883\u0884\u0885\u0886\u0887\u0888\u0889\u088a\u088b\u088c\u088d\u088e\u088f\u0890\u0891\u0892\u0893\u0894\u0895\u0896\u0897\u0898\u0899\u089a\u089b\u089c\u089d\u089e\u089f\u08a0\u08a1\u08a2\u08a3\u08a4\u08a5\u08a6\u08a7\u08a8\u08a9\u08aa\u08ab\u08ac\u08ad\u08ae\u08af\u08b0\u08b1\u08b2\u08b3\u08b4\u08b5\u08b6\u08b7\u08b8\u08b9\u08ba\u08bb\u08bc\u08bd\u08be\u08bf\u08c0\u08c1\u08c2\u08c3\u08c4\u08c5\u08c6\u08c7\u08c8\u08c9\u08ca\u08cb\u08cc\u08cd\u08ce\u08cf\u08d0\u08d1\u08d2\u08d3\u08d4\u08d5\u08d6\u08d7\u08d8\u08d9\u08da\u08db\u08dc\u08dd\u08de\u08df\u08e0\u08e1\u08e2\u08e3\u08e4\u08e5\u08e6\u08e7\u08e8\u08e9\u08ea\u08eb\u08ec\u08ed\u08ee\u08ef\u08f0\u08f1\u08f2\u08f3\u08f4\u08f5\u08f6\u08f7\u08f8\u08f9\u08fa\u08fb\u08fc\u08fd\u08fe\u08ff\u0900\u093a\u093b\u094e\u094f\u0955\u0956\u0957\u0971\u0972\u0973\u0974\u0975\u0976\u0977\u0978\u0979\u097a\u097b\u097c\u097e\u097f\u0980\u0984\u098d\u098e\u0991\u0992\u09a9\u09b1\u09b3\u09b4\u09b5\u09ba\u09bb\u09c5\u09c6\u09c9\u09ca\u09cf\u09d0\u09d1\u09d2\u09d3\u09d4\u09d5\u09d6\u09d8\u09d9\u09da\u09db\u09de\u09e4\u09e5\u09fb\u09fc\u09fd\u09fe\u09ff\u0a00\u0a04\u0a0b\u0a0c\u0a0d\u0a0e\u0a11\u0a12\u0a29\u0a31\u0a34\u0a37\u0a3a\u0a3b\u0a3d\u0a43\u0a44\u0a45\u0a46\u0a49\u0a4a\u0a4e\u0a4f\u0a50\u0a51\u0a52\u0a53\u0a54\u0a55\u0a56\u0a57\u0a58\u0a5d\u0a5f\u0a60\u0a61\u0a62\u0a63\u0a64\u0a65\u0a75\u0a76\u0a77\u0a78\u0a79\u0a7a\u0a7b\u0a7c\u0a7d\u0a7e\u0a7f\u0a80\u0a84\u0a8e\u0a92\u0aa9\u0ab1\u0ab4\u0aba\u0abb\u0ac6\u0aca\u0ace\u0acf\u0ad1\u0ad2\u0ad3\u0ad4\u0ad5\u0ad6\u0ad7\u0ad8\u0ad9\u0ada\u0adb\u0adc\u0add\u0ade\u0adf\u0ae4\u0ae5\u0af0\u0af2\u0af3\u0af4\u0af5\u0af6\u0af7\u0af8\u0af9\u0afa\u0afb\u0afc\u0afd\u0afe\u0aff\u0b00\u0b04\u0b0d\u0b0e\u0b11\u0b12\u0b29\u0b31\u0b34\u0b3a\u0b3b\u0b44\u0b45\u0b46\u0b49\u0b4a\u0b4e\u0b4f\u0b50\u0b51\u0b52\u0b53\u0b54\u0b55\u0b58\u0b59\u0b5a\u0b5b\u0b5e\u0b62\u0b63\u0b64\u0b65\u0b72\u0b73\u0b74\u0b75\u0b76\u0b77\u0b78\u0b79\u0b7a\u0b7b\u0b7c\u0b7d\u0b7e\u0b7f\u0b80\u0b81\u0b84\u0b8b\u0b8c\u0b8d\u0b91\u0b96\u0b97\u0b98\u0b9b\u0b9d\u0ba0\u0ba1\u0ba2\u0ba5\u0ba6\u0ba7\u0bab\u0bac\u0bad\u0bba\u0bbb\u0bbc\u0bbd\u0bc3\u0bc4\u0bc5\u0bc9\u0bce\u0bcf\u0bd0\u0bd1\u0bd2\u0bd3\u0bd4\u0bd5\u0bd6\u0bd8\u0bd9\u0bda\u0bdb\u0bdc\u0bdd\u0bde\u0bdf\u0be0\u0be1\u0be2\u0be3\u0be4\u0be5\u0bfb\u0bfc\u0bfd\u0bfe\u0bff\u0c00\u0c04\u0c0d\u0c11\u0c29\u0c34\u0c3a\u0c3b\u0c3c\u0c3d\u0c45\u0c49\u0c4e\u0c4f\u0c50\u0c51\u0c52\u0c53\u0c54\u0c57\u0c58\u0c59\u0c5a\u0c5b\u0c5c\u0c5d\u0c5e\u0c5f\u0c62\u0c63\u0c64\u0c65\u0c70\u0c71\u0c72\u0c73\u0c74\u0c75\u0c76\u0c77\u0c78\u0c79\u0c7a\u0c7b\u0c7c\u0c7d\u0c7e\u0c7f\u0c80\u0c81\u0c84\u0c8d\u0c91\u0ca9\u0cb4\u0cba\u0cbb\u0cc5\u0cc9\u0cce\u0ccf\u0cd0\u0cd1\u0cd2\u0cd3\u0cd4\u0cd7\u0cd8\u0cd9\u0cda\u0cdb\u0cdc\u0cdd\u0cdf\u0ce2\u0ce3\u0ce4\u0ce5\u0cf0\u0cf1\u0cf2\u0cf3\u0cf4\u0cf5\u0cf6\u0cf7\u0cf8\u0cf9\u0cfa\u0cfb\u0cfc\u0cfd\u0cfe\u0cff\u0d00\u0d01\u0d04\u0d0d\u0d11\u0d29\u0d3a\u0d3b\u0d3c\u0d3d\u0d44\u0d45\u0d49\u0d4e\u0d4f\u0d50\u0d51\u0d52\u0d53\u0d54\u0d55\u0d56\u0d58\u0d59\u0d5a\u0d5b\u0d5c\u0d5d\u0d5e\u0d5f\u0d62\u0d63\u0d64\u0d65\u0d70\u0d71\u0d72\u0d73\u0d74\u0d75\u0d76\u0d77\u0d78\u0d79\u0d7a\u0d7b\u0d7c\u0d7d\u0d7e\u0d7f\u0d80\u0d81\u0d84\u0d97\u0d98\u0d99\u0db2\u0dbc\u0dbe\u0dbf\u0dc7\u0dc8\u0dc9\u0dcb\u0dcc\u0dcd\u0dce\u0dd5\u0dd7\u0de0\u0de1\u0de2\u0de3\u0de4\u0de5\u0de6\u0de7\u0de8\u0de9\u0dea\u0deb\u0dec\u0ded\u0dee\u0def\u0df0\u0df1\u0df5\u0df6\u0df7\u0df8\u0df9\u0dfa\u0dfb\u0dfc\u0dfd\u0dfe\u0dff\u0e00\u0e3b\u0e3c\u0e3d\u0e3e\u0e5c\u0e5d\u0e5e\u0e5f\u0e60\u0e61\u0e62\u0e63\u0e64\u0e65\u0e66\u0e67\u0e68\u0e69\u0e6a\u0e6b\u0e6c\u0e6d\u0e6e\u0e6f\u0e70\u0e71\u0e72\u0e73\u0e74\u0e75\u0e76\u0e77\u0e78\u0e79\u0e7a\u0e7b\u0e7c\u0e7d\u0e7e\u0e7f\u0e80\u0e83\u0e85\u0e86\u0e89\u0e8b\u0e8c\u0e8e\u0e8f\u0e90\u0e91\u0e92\u0e93\u0e98\u0ea0\u0ea4\u0ea6\u0ea8\u0ea9\u0eac\u0eba\u0ebe\u0ebf\u0ec5\u0ec7\u0ece\u0ecf\u0eda\u0edb\u0ede\u0edf\u0ee0\u0ee1\u0ee2\u0ee3\u0ee4\u0ee5\u0ee6\u0ee7\u0ee8\u0ee9\u0eea\u0eeb\u0eec\u0eed\u0eee\u0eef\u0ef0\u0ef1\u0ef2\u0ef3\u0ef4\u0ef5\u0ef6\u0ef7\u0ef8\u0ef9\u0efa\u0efb\u0efc\u0efd\u0efe\u0eff\u0f48\u0f6b\u0f6c\u0f6d\u0f6e\u0f6f\u0f70\u0f8c\u0f8d\u0f8e\u0f8f\u0f98\u0fbd\u0fcd\u0fce\u0fd2\u0fd3\u0fd4\u0fd5\u0fd6\u0fd7\u0fd8\u0fd9\u0fda\u0fdb\u0fdc\u0fdd\u0fde\u0fdf\u0fe0\u0fe1\u0fe2\u0fe3\u0fe4\u0fe5\u0fe6\u0fe7\u0fe8\u0fe9\u0fea\u0feb\u0fec\u0fed\u0fee\u0fef\u0ff0\u0ff1\u0ff2\u0ff3\u0ff4\u0ff5\u0ff6\u0ff7\u0ff8\u0ff9\u0ffa\u0ffb\u0ffc\u0ffd\u0ffe\u0fff\u1022\u1028\u102b\u1033\u1034\u1035\u103a\u103b\u103c\u103d\u103e\u103f\u105a\u105b\u105c\u105d\u105e\u105f\u1060\u1061\u1062\u1063\u1064\u1065\u1066\u1067\u1068\u1069\u106a\u106b\u106c\u106d\u106e\u106f\u1070\u1071\u1072\u1073\u1074\u1075\u1076\u1077\u1078\u1079\u107a\u107b\u107c\u107d\u107e\u107f\u1080\u1081\u1082\u1083\u1084\u1085\u1086\u1087\u1088\u1089\u108a\u108b\u108c\u108d\u108e\u108f\u1090\u1091\u1092\u1093\u1094\u1095\u1096\u1097\u1098\u1099\u109a\u109b\u109c\u109d\u109e\u109f\u10c6\u10c7\u10c8\u10c9\u10ca\u10cb\u10cc\u10cd\u10ce\u10cf\u10fd\u10fe\u10ff\u115a\u115b\u115c\u115d\u115e\u11a3\u11a4\u11a5\u11a6\u11a7\u11fa\u11fb\u11fc\u11fd\u11fe\u11ff\u1249\u124e\u124f\u1257\u1259\u125e\u125f\u1289\u128e\u128f\u12b1\u12b6\u12b7\u12bf\u12c1\u12c6\u12c7\u12d7\u1311\u1316\u1317\u135b\u135c\u135d\u135e\u137d\u137e\u137f\u139a\u139b\u139c\u139d\u139e\u139f\u13f5\u13f6\u13f7\u13f8\u13f9\u13fa\u13fb\u13fc\u13fd\u13fe\u13ff\u1400\u1677\u1678\u1679\u167a\u167b\u167c\u167d\u167e\u167f\u169d\u169e\u169f\u16f1\u16f2\u16f3\u16f4\u16f5\u16f6\u16f7\u16f8\u16f9\u16fa\u16fb\u16fc\u16fd\u16fe\u16ff\u170d\u1715\u1716\u1717\u1718\u1719\u171a\u171b\u171c\u171d\u171e\u171f\u1737\u1738\u1739\u173a\u173b\u173c\u173d\u173e\u173f\u1754\u1755\u1756\u1757\u1758\u1759\u175a\u175b\u175c\u175d\u175e\u175f\u176d\u1771\u1774\u1775\u1776\u1777\u1778\u1779\u177a\u177b\u177c\u177d\u177e\u177f\u17de\u17df\u17ea\u17eb\u17ec\u17ed\u17ee\u17ef\u17fa\u17fb\u17fc\u17fd\u17fe\u17ff\u180f\u181a\u181b\u181c\u181d\u181e\u181f\u1878\u1879\u187a\u187b\u187c\u187d\u187e\u187f\u18aa\u18ab\u18ac\u18ad\u18ae\u18af\u18b0\u18b1\u18b2\u18b3\u18b4\u18b5\u18b6\u18b7\u18b8\u18b9\u18ba\u18bb\u18bc\u18bd\u18be\u18bf\u18c0\u18c1\u18c2\u18c3\u18c4\u18c5\u18c6\u18c7\u18c8\u18c9\u18ca\u18cb\u18cc\u18cd\u18ce\u18cf\u18d0\u18d1\u18d2\u18d3\u18d4\u18d5\u18d6\u18d7\u18d8\u18d9\u18da\u18db\u18dc\u18dd\u18de\u18df\u18e0\u18e1\u18e2\u18e3\u18e4\u18e5\u18e6\u18e7\u18e8\u18e9\u18ea\u18eb\u18ec\u18ed\u18ee\u18ef\u18f0\u18f1\u18f2\u18f3\u18f4\u18f5\u18f6\u18f7\u18f8\u18f9\u18fa\u18fb\u18fc\u18fd\u18fe\u18ff\u191d\u191e\u191f\u192c\u192d\u192e\u192f\u193c\u193d\u193e\u193f\u1941\u1942\u1943\u196e\u196f\u1975\u1976\u1977\u1978\u1979\u197a\u197b\u197c\u197d\u197e\u197f\u19aa\u19ab\u19ac\u19ad\u19ae\u19af\u19ca\u19cb\u19cc\u19cd\u19ce\u19cf\u19da\u19db\u19dc\u19dd\u1a1c\u1a1d\u1a20\u1a21\u1a22\u1a23\u1a24\u1a25\u1a26\u1a27\u1a28\u1a29\u1a2a\u1a2b\u1a2c\u1a2d\u1a2e\u1a2f\u1a30\u1a31\u1a32\u1a33\u1a34\u1a35\u1a36\u1a37\u1a38\u1a39\u1a3a\u1a3b\u1a3c\u1a3d\u1a3e\u1a3f\u1a40\u1a41\u1a42\u1a43\u1a44\u1a45\u1a46\u1a47\u1a48\u1a49\u1a4a\u1a4b\u1a4c\u1a4d\u1a4e\u1a4f\u1a50\u1a51\u1a52\u1a53\u1a54\u1a55\u1a56\u1a57\u1a58\u1a59\u1a5a\u1a5b\u1a5c\u1a5d\u1a5e\u1a5f\u1a60\u1a61\u1a62\u1a63\u1a64\u1a65\u1a66\u1a67\u1a68\u1a69\u1a6a\u1a6b\u1a6c\u1a6d\u1a6e\u1a6f\u1a70\u1a71\u1a72\u1a73\u1a74\u1a75\u1a76\u1a77\u1a78\u1a79\u1a7a\u1a7b\u1a7c\u1a7d\u1a7e\u1a7f\u1a80\u1a81\u1a82\u1a83\u1a84\u1a85\u1a86\u1a87\u1a88\u1a89\u1a8a\u1a8b\u1a8c\u1a8d\u1a8e\u1a8f\u1a90\u1a91\u1a92\u1a93\u1a94\u1a95\u1a96\u1a97\u1a98\u1a99\u1a9a\u1a9b\u1a9c\u1a9d\u1a9e\u1a9f\u1aa0\u1aa1\u1aa2\u1aa3\u1aa4\u1aa5\u1aa6\u1aa7\u1aa8\u1aa9\u1aaa\u1aab\u1aac\u1aad\u1aae\u1aaf\u1ab0\u1ab1\u1ab2\u1ab3\u1ab4\u1ab5\u1ab6\u1ab7\u1ab8\u1ab9\u1aba\u1abb\u1abc\u1abd\u1abe\u1abf\u1ac0\u1ac1\u1ac2\u1ac3\u1ac4\u1ac5\u1ac6\u1ac7\u1ac8\u1ac9\u1aca\u1acb\u1acc\u1acd\u1ace\u1acf\u1ad0\u1ad1\u1ad2\u1ad3\u1ad4\u1ad5\u1ad6\u1ad7\u1ad8\u1ad9\u1ada\u1adb\u1adc\u1add\u1ade\u1adf\u1ae0\u1ae1\u1ae2\u1ae3\u1ae4\u1ae5\u1ae6\u1ae7\u1ae8\u1ae9\u1aea\u1aeb\u1aec\u1aed\u1aee\u1aef\u1af0\u1af1\u1af2\u1af3\u1af4\u1af5\u1af6\u1af7\u1af8\u1af9\u1afa\u1afb\u1afc\u1afd\u1afe\u1aff\u1b00\u1b01\u1b02\u1b03\u1b04\u1b05\u1b06\u1b07\u1b08\u1b09\u1b0a\u1b0b\u1b0c\u1b0d\u1b0e\u1b0f\u1b10\u1b11\u1b12\u1b13\u1b14\u1b15\u1b16\u1b17\u1b18\u1b19\u1b1a\u1b1b\u1b1c\u1b1d\u1b1e\u1b1f\u1b20\u1b21\u1b22\u1b23\u1b24\u1b25\u1b26\u1b27\u1b28\u1b29\u1b2a\u1b2b\u1b2c\u1b2d\u1b2e\u1b2f\u1b30\u1b31\u1b32\u1b33\u1b34\u1b35\u1b36\u1b37\u1b38\u1b39\u1b3a\u1b3b\u1b3c\u1b3d\u1b3e\u1b3f\u1b40\u1b41\u1b42\u1b43\u1b44\u1b45\u1b46\u1b47\u1b48\u1b49\u1b4a\u1b4b\u1b4c\u1b4d\u1b4e\u1b4f\u1b50\u1b51\u1b52\u1b53\u1b54\u1b55\u1b56\u1b57\u1b58\u1b59\u1b5a\u1b5b\u1b5c\u1b5d\u1b5e\u1b5f\u1b60\u1b61\u1b62\u1b63\u1b64\u1b65\u1b66\u1b67\u1b68\u1b69\u1b6a\u1b6b\u1b6c\u1b6d\u1b6e\u1b6f\u1b70\u1b71\u1b72\u1b73\u1b74\u1b75\u1b76\u1b77\u1b78\u1b79\u1b7a\u1b7b\u1b7c\u1b7d\u1b7e\u1b7f\u1b80\u1b81\u1b82\u1b83\u1b84\u1b85\u1b86\u1b87\u1b88\u1b89\u1b8a\u1b8b\u1b8c\u1b8d\u1b8e\u1b8f\u1b90\u1b91\u1b92\u1b93\u1b94\u1b95\u1b96\u1b97\u1b98\u1b99\u1b9a\u1b9b\u1b9c\u1b9d\u1b9e\u1b9f\u1ba0\u1ba1\u1ba2\u1ba3\u1ba4\u1ba5\u1ba6\u1ba7\u1ba8\u1ba9\u1baa\u1bab\u1bac\u1bad\u1bae\u1baf\u1bb0\u1bb1\u1bb2\u1bb3\u1bb4\u1bb5\u1bb6\u1bb7\u1bb8\u1bb9\u1bba\u1bbb\u1bbc\u1bbd\u1bbe\u1bbf\u1bc0\u1bc1\u1bc2\u1bc3\u1bc4\u1bc5\u1bc6\u1bc7\u1bc8\u1bc9\u1bca\u1bcb\u1bcc\u1bcd\u1bce\u1bcf\u1bd0\u1bd1\u1bd2\u1bd3\u1bd4\u1bd5\u1bd6\u1bd7\u1bd8\u1bd9\u1bda\u1bdb\u1bdc\u1bdd\u1bde\u1bdf\u1be0\u1be1\u1be2\u1be3\u1be4\u1be5\u1be6\u1be7\u1be8\u1be9\u1bea\u1beb\u1bec\u1bed\u1bee\u1bef\u1bf0\u1bf1\u1bf2\u1bf3\u1bf4\u1bf5\u1bf6\u1bf7\u1bf8\u1bf9\u1bfa\u1bfb\u1bfc\u1bfd\u1bfe\u1bff\u1c00\u1c01\u1c02\u1c03\u1c04\u1c05\u1c06\u1c07\u1c08\u1c09\u1c0a\u1c0b\u1c0c\u1c0d\u1c0e\u1c0f\u1c10\u1c11\u1c12\u1c13\u1c14\u1c15\u1c16\u1c17\u1c18\u1c19\u1c1a\u1c1b\u1c1c\u1c1d\u1c1e\u1c1f\u1c20\u1c21\u1c22\u1c23\u1c24\u1c25\u1c26\u1c27\u1c28\u1c29\u1c2a\u1c2b\u1c2c\u1c2d\u1c2e\u1c2f\u1c30\u1c31\u1c32\u1c33\u1c34\u1c35\u1c36\u1c37\u1c38\u1c39\u1c3a\u1c3b\u1c3c\u1c3d\u1c3e\u1c3f\u1c40\u1c41\u1c42\u1c43\u1c44\u1c45\u1c46\u1c47\u1c48\u1c49\u1c4a\u1c4b\u1c4c\u1c4d\u1c4e\u1c4f\u1c50\u1c51\u1c52\u1c53\u1c54\u1c55\u1c56\u1c57\u1c58\u1c59\u1c5a\u1c5b\u1c5c\u1c5d\u1c5e\u1c5f\u1c60\u1c61\u1c62\u1c63\u1c64\u1c65\u1c66\u1c67\u1c68\u1c69\u1c6a\u1c6b\u1c6c\u1c6d\u1c6e\u1c6f\u1c70\u1c71\u1c72\u1c73\u1c74\u1c75\u1c76\u1c77\u1c78\u1c79\u1c7a\u1c7b\u1c7c\u1c7d\u1c7e\u1c7f\u1c80\u1c81\u1c82\u1c83\u1c84\u1c85\u1c86\u1c87\u1c88\u1c89\u1c8a\u1c8b\u1c8c\u1c8d\u1c8e\u1c8f\u1c90\u1c91\u1c92\u1c93\u1c94\u1c95\u1c96\u1c97\u1c98\u1c99\u1c9a\u1c9b\u1c9c\u1c9d\u1c9e\u1c9f\u1ca0\u1ca1\u1ca2\u1ca3\u1ca4\u1ca5\u1ca6\u1ca7\u1ca8\u1ca9\u1caa\u1cab\u1cac\u1cad\u1cae\u1caf\u1cb0\u1cb1\u1cb2\u1cb3\u1cb4\u1cb5\u1cb6\u1cb7\u1cb8\u1cb9\u1cba\u1cbb\u1cbc\u1cbd\u1cbe\u1cbf\u1cc0\u1cc1\u1cc2\u1cc3\u1cc4\u1cc5\u1cc6\u1cc7\u1cc8\u1cc9\u1cca\u1ccb\u1ccc\u1ccd\u1cce\u1ccf\u1cd0\u1cd1\u1cd2\u1cd3\u1cd4\u1cd5\u1cd6\u1cd7\u1cd8\u1cd9\u1cda\u1cdb\u1cdc\u1cdd\u1cde\u1cdf\u1ce0\u1ce1\u1ce2\u1ce3\u1ce4\u1ce5\u1ce6\u1ce7\u1ce8\u1ce9\u1cea\u1ceb\u1cec\u1ced\u1cee\u1cef\u1cf0\u1cf1\u1cf2\u1cf3\u1cf4\u1cf5\u1cf6\u1cf7\u1cf8\u1cf9\u1cfa\u1cfb\u1cfc\u1cfd\u1cfe\u1cff\u1dc4\u1dc5\u1dc6\u1dc7\u1dc8\u1dc9\u1dca\u1dcb\u1dcc\u1dcd\u1dce\u1dcf\u1dd0\u1dd1\u1dd2\u1dd3\u1dd4\u1dd5\u1dd6\u1dd7\u1dd8\u1dd9\u1dda\u1ddb\u1ddc\u1ddd\u1dde\u1ddf\u1de0\u1de1\u1de2\u1de3\u1de4\u1de5\u1de6\u1de7\u1de8\u1de9\u1dea\u1deb\u1dec\u1ded\u1dee\u1def\u1df0\u1df1\u1df2\u1df3\u1df4\u1df5\u1df6\u1df7\u1df8\u1df9\u1dfa\u1dfb\u1dfc\u1dfd\u1dfe\u1dff\u1e9c\u1e9d\u1e9e\u1e9f\u1efa\u1efb\u1efc\u1efd\u1efe\u1eff\u1f16\u1f17\u1f1e\u1f1f\u1f46\u1f47\u1f4e\u1f4f\u1f58\u1f5a\u1f5c\u1f5e\u1f7e\u1f7f\u1fb5\u1fc5\u1fd4\u1fd5\u1fdc\u1ff0\u1ff1\u1ff5\u1fff\u2064\u2065\u2066\u2067\u2068\u2069\u2072\u2073\u208f\u2095\u2096\u2097\u2098\u2099\u209a\u209b\u209c\u209d\u209e\u209f\u20b6\u20b7\u20b8\u20b9\u20ba\u20bb\u20bc\u20bd\u20be\u20bf\u20c0\u20c1\u20c2\u20c3\u20c4\u20c5\u20c6\u20c7\u20c8\u20c9\u20ca\u20cb\u20cc\u20cd\u20ce\u20cf\u20ec\u20ed\u20ee\u20ef\u20f0\u20f1\u20f2\u20f3\u20f4\u20f5\u20f6\u20f7\u20f8\u20f9\u20fa\u20fb\u20fc\u20fd\u20fe\u20ff\u214d\u214e\u214f\u2150\u2151\u2152\u2184\u2185\u2186\u2187\u2188\u2189\u218a\u218b\u218c\u218d\u218e\u218f\u23dc\u23dd\u23de\u23df\u23e0\u23e1\u23e2\u23e3\u23e4\u23e5\u23e6\u23e7\u23e8\u23e9\u23ea\u23eb\u23ec\u23ed\u23ee\u23ef\u23f0\u23f1\u23f2\u23f3\u23f4\u23f5\u23f6\u23f7\u23f8\u23f9\u23fa\u23fb\u23fc\u23fd\u23fe\u23ff\u2427\u2428\u2429\u242a\u242b\u242c\u242d\u242e\u242f\u2430\u2431\u2432\u2433\u2434\u2435\u2436\u2437\u2438\u2439\u243a\u243b\u243c\u243d\u243e\u243f\u244b\u244c\u244d\u244e\u244f\u2450\u2451\u2452\u2453\u2454\u2455\u2456\u2457\u2458\u2459\u245a\u245b\u245c\u245d\u245e\u245f\u269d\u269e\u269f\u26b2\u26b3\u26b4\u26b5\u26b6\u26b7\u26b8\u26b9\u26ba\u26bb\u26bc\u26bd\u26be\u26bf\u26c0\u26c1\u26c2\u26c3\u26c4\u26c5\u26c6\u26c7\u26c8\u26c9\u26ca\u26cb\u26cc\u26cd\u26ce\u26cf\u26d0\u26d1\u26d2\u26d3\u26d4\u26d5\u26d6\u26d7\u26d8\u26d9\u26da\u26db\u26dc\u26dd\u26de\u26df\u26e0\u26e1\u26e2\u26e3\u26e4\u26e5\u26e6\u26e7\u26e8\u26e9\u26ea\u26eb\u26ec\u26ed\u26ee\u26ef\u26f0\u26f1\u26f2\u26f3\u26f4\u26f5\u26f6\u26f7\u26f8\u26f9\u26fa\u26fb\u26fc\u26fd\u26fe\u26ff\u2700\u2705\u270a\u270b\u2728\u274c\u274e\u2753\u2754\u2755\u2757\u275f\u2760\u2795\u2796\u2797\u27b0\u27bf\u27c7\u27c8\u27c9\u27ca\u27cb\u27cc\u27cd\u27ce\u27cf\u27ec\u27ed\u27ee\u27ef\u2b14\u2b15\u2b16\u2b17\u2b18\u2b19\u2b1a\u2b1b\u2b1c\u2b1d\u2b1e\u2b1f\u2b20\u2b21\u2b22\u2b23\u2b24\u2b25\u2b26\u2b27\u2b28\u2b29\u2b2a\u2b2b\u2b2c\u2b2d\u2b2e\u2b2f\u2b30\u2b31\u2b32\u2b33\u2b34\u2b35\u2b36\u2b37\u2b38\u2b39\u2b3a\u2b3b\u2b3c\u2b3d\u2b3e\u2b3f\u2b40\u2b41\u2b42\u2b43\u2b44\u2b45\u2b46\u2b47\u2b48\u2b49\u2b4a\u2b4b\u2b4c\u2b4d\u2b4e\u2b4f\u2b50\u2b51\u2b52\u2b53\u2b54\u2b55\u2b56\u2b57\u2b58\u2b59\u2b5a\u2b5b\u2b5c\u2b5d\u2b5e\u2b5f\u2b60\u2b61\u2b62\u2b63\u2b64\u2b65\u2b66\u2b67\u2b68\u2b69\u2b6a\u2b6b\u2b6c\u2b6d\u2b6e\u2b6f\u2b70\u2b71\u2b72\u2b73\u2b74\u2b75\u2b76\u2b77\u2b78\u2b79\u2b7a\u2b7b\u2b7c\u2b7d\u2b7e\u2b7f\u2b80\u2b81\u2b82\u2b83\u2b84\u2b85\u2b86\u2b87\u2b88\u2b89\u2b8a\u2b8b\u2b8c\u2b8d\u2b8e\u2b8f\u2b90\u2b91\u2b92\u2b93\u2b94\u2b95\u2b96\u2b97\u2b98\u2b99\u2b9a\u2b9b\u2b9c\u2b9d\u2b9e\u2b9f\u2ba0\u2ba1\u2ba2\u2ba3\u2ba4\u2ba5\u2ba6\u2ba7\u2ba8\u2ba9\u2baa\u2bab\u2bac\u2bad\u2bae\u2baf\u2bb0\u2bb1\u2bb2\u2bb3\u2bb4\u2bb5\u2bb6\u2bb7\u2bb8\u2bb9\u2bba\u2bbb\u2bbc\u2bbd\u2bbe\u2bbf\u2bc0\u2bc1\u2bc2\u2bc3\u2bc4\u2bc5\u2bc6\u2bc7\u2bc8\u2bc9\u2bca\u2bcb\u2bcc\u2bcd\u2bce\u2bcf\u2bd0\u2bd1\u2bd2\u2bd3\u2bd4\u2bd5\u2bd6\u2bd7\u2bd8\u2bd9\u2bda\u2bdb\u2bdc\u2bdd\u2bde\u2bdf\u2be0\u2be1\u2be2\u2be3\u2be4\u2be5\u2be6\u2be7\u2be8\u2be9\u2bea\u2beb\u2bec\u2bed\u2bee\u2bef\u2bf0\u2bf1\u2bf2\u2bf3\u2bf4\u2bf5\u2bf6\u2bf7\u2bf8\u2bf9\u2bfa\u2bfb\u2bfc\u2bfd\u2bfe\u2bff\u2c2f\u2c5f\u2c60\u2c61\u2c62\u2c63\u2c64\u2c65\u2c66\u2c67\u2c68\u2c69\u2c6a\u2c6b\u2c6c\u2c6d\u2c6e\u2c6f\u2c70\u2c71\u2c72\u2c73\u2c74\u2c75\u2c76\u2c77\u2c78\u2c79\u2c7a\u2c7b\u2c7c\u2c7d\u2c7e\u2c7f\u2ceb\u2cec\u2ced\u2cee\u2cef\u2cf0\u2cf1\u2cf2\u2cf3\u2cf4\u2cf5\u2cf6\u2cf7\u2cf8\u2d26\u2d27\u2d28\u2d29\u2d2a\u2d2b\u2d2c\u2d2d\u2d2e\u2d2f\u2d66\u2d67\u2d68\u2d69\u2d6a\u2d6b\u2d6c\u2d6d\u2d6e\u2d70\u2d71\u2d72\u2d73\u2d74\u2d75\u2d76\u2d77\u2d78\u2d79\u2d7a\u2d7b\u2d7c\u2d7d\u2d7e\u2d7f\u2d97\u2d98\u2d99\u2d9a\u2d9b\u2d9c\u2d9d\u2d9e\u2d9f\u2da7\u2daf\u2db7\u2dbf\u2dc7\u2dcf\u2dd7\u2ddf\u2de0\u2de1\u2de2\u2de3\u2de4\u2de5\u2de6\u2de7\u2de8\u2de9\u2dea\u2deb\u2dec\u2ded\u2dee\u2def\u2df0\u2df1\u2df2\u2df3\u2df4\u2df5\u2df6\u2df7\u2df8\u2df9\u2dfa\u2dfb\u2dfc\u2dfd\u2dfe\u2dff\u2e18\u2e19\u2e1a\u2e1b\u2e1e\u2e1f\u2e20\u2e21\u2e22\u2e23\u2e24\u2e25\u2e26\u2e27\u2e28\u2e29\u2e2a\u2e2b\u2e2c\u2e2d\u2e2e\u2e2f\u2e30\u2e31\u2e32\u2e33\u2e34\u2e35\u2e36\u2e37\u2e38\u2e39\u2e3a\u2e3b\u2e3c\u2e3d\u2e3e\u2e3f\u2e40\u2e41\u2e42\u2e43\u2e44\u2e45\u2e46\u2e47\u2e48\u2e49\u2e4a\u2e4b\u2e4c\u2e4d\u2e4e\u2e4f\u2e50\u2e51\u2e52\u2e53\u2e54\u2e55\u2e56\u2e57\u2e58\u2e59\u2e5a\u2e5b\u2e5c\u2e5d\u2e5e\u2e5f\u2e60\u2e61\u2e62\u2e63\u2e64\u2e65\u2e66\u2e67\u2e68\u2e69\u2e6a\u2e6b\u2e6c\u2e6d\u2e6e\u2e6f\u2e70\u2e71\u2e72\u2e73\u2e74\u2e75\u2e76\u2e77\u2e78\u2e79\u2e7a\u2e7b\u2e7c\u2e7d\u2e7e\u2e7f\u2e9a\u2ef4\u2ef5\u2ef6\u2ef7\u2ef8\u2ef9\u2efa\u2efb\u2efc\u2efd\u2efe\u2eff\u2fd6\u2fd7\u2fd8\u2fd9\u2fda\u2fdb\u2fdc\u2fdd\u2fde\u2fdf\u2fe0\u2fe1\u2fe2\u2fe3\u2fe4\u2fe5\u2fe6\u2fe7\u2fe8\u2fe9\u2fea\u2feb\u2fec\u2fed\u2fee\u2fef\u2ffc\u2ffd\u2ffe\u2fff\u3040\u3097\u3098\u3100\u3101\u3102\u3103\u3104\u312d\u312e\u312f\u3130\u318f\u31b8\u31b9\u31ba\u31bb\u31bc\u31bd\u31be\u31bf\u31d0\u31d1\u31d2\u31d3\u31d4\u31d5\u31d6\u31d7\u31d8\u31d9\u31da\u31db\u31dc\u31dd\u31de\u31df\u31e0\u31e1\u31e2\u31e3\u31e4\u31e5\u31e6\u31e7\u31e8\u31e9\u31ea\u31eb\u31ec\u31ed\u31ee\u31ef\u321f\u3244\u3245\u3246\u3247\u3248\u3249\u324a\u324b\u324c\u324d\u324e\u324f\u32ff\u4db6\u4db7\u4db8\u4db9\u4dba\u4dbb\u4dbc\u4dbd\u4dbe\u4dbf\u9fbc\u9fbd\u9fbe\u9fbf\u9fc0\u9fc1\u9fc2\u9fc3\u9fc4\u9fc5\u9fc6\u9fc7\u9fc8\u9fc9\u9fca\u9fcb\u9fcc\u9fcd\u9fce\u9fcf\u9fd0\u9fd1\u9fd2\u9fd3\u9fd4\u9fd5\u9fd6\u9fd7\u9fd8\u9fd9\u9fda\u9fdb\u9fdc\u9fdd\u9fde\u9fdf\u9fe0\u9fe1\u9fe2\u9fe3\u9fe4\u9fe5\u9fe6\u9fe7\u9fe8\u9fe9\u9fea\u9feb\u9fec\u9fed\u9fee\u9fef\u9ff0\u9ff1\u9ff2\u9ff3\u9ff4\u9ff5\u9ff6\u9ff7\u9ff8\u9ff9\u9ffa\u9ffb\u9ffc\u9ffd\u9ffe\u9fff\ua48d\ua48e\ua48f\ua4c7\ua4c8\ua4c9\ua4ca\ua4cb\ua4cc\ua4cd\ua4ce\ua4cf\ua4d0\ua4d1\ua4d2\ua4d3\ua4d4\ua4d5\ua4d6\ua4d7\ua4d8\ua4d9\ua4da\ua4db\ua4dc\ua4dd\ua4de\ua4df\ua4e0\ua4e1\ua4e2\ua4e3\ua4e4\ua4e5\ua4e6\ua4e7\ua4e8\ua4e9\ua4ea\ua4eb\ua4ec\ua4ed\ua4ee\ua4ef\ua4f0\ua4f1\ua4f2\ua4f3\ua4f4\ua4f5\ua4f6\ua4f7\ua4f8\ua4f9\ua4fa\ua4fb\ua4fc\ua4fd\ua4fe\ua4ff\ua500\ua501\ua502\ua503\ua504\ua505\ua506\ua507\ua508\ua509\ua50a\ua50b\ua50c\ua50d\ua50e\ua50f\ua510\ua511\ua512\ua513\ua514\ua515\ua516\ua517\ua518\ua519\ua51a\ua51b\ua51c\ua51d\ua51e\ua51f\ua520\ua521\ua522\ua523\ua524\ua525\ua526\ua527\ua528\ua529\ua52a\ua52b\ua52c\ua52d\ua52e\ua52f\ua530\ua531\ua532\ua533\ua534\ua535\ua536\ua537\ua538\ua539\ua53a\ua53b\ua53c\ua53d\ua53e\ua53f\ua540\ua541\ua542\ua543\ua544\ua545\ua546\ua547\ua548\ua549\ua54a\ua54b\ua54c\ua54d\ua54e\ua54f\ua550\ua551\ua552\ua553\ua554\ua555\ua556\ua557\ua558\ua559\ua55a\ua55b\ua55c\ua55d\ua55e\ua55f\ua560\ua561\ua562\ua563\ua564\ua565\ua566\ua567\ua568\ua569\ua56a\ua56b\ua56c\ua56d\ua56e\ua56f\ua570\ua571\ua572\ua573\ua574\ua575\ua576\ua577\ua578\ua579\ua57a\ua57b\ua57c\ua57d\ua57e\ua57f\ua580\ua581\ua582\ua583\ua584\ua585\ua586\ua587\ua588\ua589\ua58a\ua58b\ua58c\ua58d\ua58e\ua58f\ua590\ua591\ua592\ua593\ua594\ua595\ua596\ua597\ua598\ua599\ua59a\ua59b\ua59c\ua59d\ua59e\ua59f\ua5a0\ua5a1\ua5a2\ua5a3\ua5a4\ua5a5\ua5a6\ua5a7\ua5a8\ua5a9\ua5aa\ua5ab\ua5ac\ua5ad\ua5ae\ua5af\ua5b0\ua5b1\ua5b2\ua5b3\ua5b4\ua5b5\ua5b6\ua5b7\ua5b8\ua5b9\ua5ba\ua5bb\ua5bc\ua5bd\ua5be\ua5bf\ua5c0\ua5c1\ua5c2\ua5c3\ua5c4\ua5c5\ua5c6\ua5c7\ua5c8\ua5c9\ua5ca\ua5cb\ua5cc\ua5cd\ua5ce\ua5cf\ua5d0\ua5d1\ua5d2\ua5d3\ua5d4\ua5d5\ua5d6\ua5d7\ua5d8\ua5d9\ua5da\ua5db\ua5dc\ua5dd\ua5de\ua5df\ua5e0\ua5e1\ua5e2\ua5e3\ua5e4\ua5e5\ua5e6\ua5e7\ua5e8\ua5e9\ua5ea\ua5eb\ua5ec\ua5ed\ua5ee\ua5ef\ua5f0\ua5f1\ua5f2\ua5f3\ua5f4\ua5f5\ua5f6\ua5f7\ua5f8\ua5f9\ua5fa\ua5fb\ua5fc\ua5fd\ua5fe\ua5ff\ua600\ua601\ua602\ua603\ua604\ua605\ua606\ua607\ua608\ua609\ua60a\ua60b\ua60c\ua60d\ua60e\ua60f\ua610\ua611\ua612\ua613\ua614\ua615\ua616\ua617\ua618\ua619\ua61a\ua61b\ua61c\ua61d\ua61e\ua61f\ua620\ua621\ua622\ua623\ua624\ua625\ua626\ua627\ua628\ua629\ua62a\ua62b\ua62c\ua62d\ua62e\ua62f\ua630\ua631\ua632\ua633\ua634\ua635\ua636\ua637\ua638\ua639\ua63a\ua63b\ua63c\ua63d\ua63e\ua63f\ua640\ua641\ua642\ua643\ua644\ua645\ua646\ua647\ua648\ua649\ua64a\ua64b\ua64c\ua64d\ua64e\ua64f\ua650\ua651\ua652\ua653\ua654\ua655\ua656\ua657\ua658\ua659\ua65a\ua65b\ua65c\ua65d\ua65e\ua65f\ua660\ua661\ua662\ua663\ua664\ua665\ua666\ua667\ua668\ua669\ua66a\ua66b\ua66c\ua66d\ua66e\ua66f\ua670\ua671\ua672\ua673\ua674\ua675\ua676\ua677\ua678\ua679\ua67a\ua67b\ua67c\ua67d\ua67e\ua67f\ua680\ua681\ua682\ua683\ua684\ua685\ua686\ua687\ua688\ua689\ua68a\ua68b\ua68c\ua68d\ua68e\ua68f\ua690\ua691\ua692\ua693\ua694\ua695\ua696\ua697\ua698\ua699\ua69a\ua69b\ua69c\ua69d\ua69e\ua69f\ua6a0\ua6a1\ua6a2\ua6a3\ua6a4\ua6a5\ua6a6\ua6a7\ua6a8\ua6a9\ua6aa\ua6ab\ua6ac\ua6ad\ua6ae\ua6af\ua6b0\ua6b1\ua6b2\ua6b3\ua6b4\ua6b5\ua6b6\ua6b7\ua6b8\ua6b9\ua6ba\ua6bb\ua6bc\ua6bd\ua6be\ua6bf\ua6c0\ua6c1\ua6c2\ua6c3\ua6c4\ua6c5\ua6c6\ua6c7\ua6c8\ua6c9\ua6ca\ua6cb\ua6cc\ua6cd\ua6ce\ua6cf\ua6d0\ua6d1\ua6d2\ua6d3\ua6d4\ua6d5\ua6d6\ua6d7\ua6d8\ua6d9\ua6da\ua6db\ua6dc\ua6dd\ua6de\ua6df\ua6e0\ua6e1\ua6e2\ua6e3\ua6e4\ua6e5\ua6e6\ua6e7\ua6e8\ua6e9\ua6ea\ua6eb\ua6ec\ua6ed\ua6ee\ua6ef\ua6f0\ua6f1\ua6f2\ua6f3\ua6f4\ua6f5\ua6f6\ua6f7\ua6f8\ua6f9\ua6fa\ua6fb\ua6fc\ua6fd\ua6fe\ua6ff\ua717\ua718\ua719\ua71a\ua71b\ua71c\ua71d\ua71e\ua71f\ua720\ua721\ua722\ua723\ua724\ua725\ua726\ua727\ua728\ua729\ua72a\ua72b\ua72c\ua72d\ua72e\ua72f\ua730\ua731\ua732\ua733\ua734\ua735\ua736\ua737\ua738\ua739\ua73a\ua73b\ua73c\ua73d\ua73e\ua73f\ua740\ua741\ua742\ua743\ua744\ua745\ua746\ua747\ua748\ua749\ua74a\ua74b\ua74c\ua74d\ua74e\ua74f\ua750\ua751\ua752\ua753\ua754\ua755\ua756\ua757\ua758\ua759\ua75a\ua75b\ua75c\ua75d\ua75e\ua75f\ua760\ua761\ua762\ua763\ua764\ua765\ua766\ua767\ua768\ua769\ua76a\ua76b\ua76c\ua76d\ua76e\ua76f\ua770\ua771\ua772\ua773\ua774\ua775\ua776\ua777\ua778\ua779\ua77a\ua77b\ua77c\ua77d\ua77e\ua77f\ua780\ua781\ua782\ua783\ua784\ua785\ua786\ua787\ua788\ua789\ua78a\ua78b\ua78c\ua78d\ua78e\ua78f\ua790\ua791\ua792\ua793\ua794\ua795\ua796\ua797\ua798\ua799\ua79a\ua79b\ua79c\ua79d\ua79e\ua79f\ua7a0\ua7a1\ua7a2\ua7a3\ua7a4\ua7a5\ua7a6\ua7a7\ua7a8\ua7a9\ua7aa\ua7ab\ua7ac\ua7ad\ua7ae\ua7af\ua7b0\ua7b1\ua7b2\ua7b3\ua7b4\ua7b5\ua7b6\ua7b7\ua7b8\ua7b9\ua7ba\ua7bb\ua7bc\ua7bd\ua7be\ua7bf\ua7c0\ua7c1\ua7c2\ua7c3\ua7c4\ua7c5\ua7c6\ua7c7\ua7c8\ua7c9\ua7ca\ua7cb\ua7cc\ua7cd\ua7ce\ua7cf\ua7d0\ua7d1\ua7d2\ua7d3\ua7d4\ua7d5\ua7d6\ua7d7\ua7d8\ua7d9\ua7da\ua7db\ua7dc\ua7dd\ua7de\ua7df\ua7e0\ua7e1\ua7e2\ua7e3\ua7e4\ua7e5\ua7e6\ua7e7\ua7e8\ua7e9\ua7ea\ua7eb\ua7ec\ua7ed\ua7ee\ua7ef\ua7f0\ua7f1\ua7f2\ua7f3\ua7f4\ua7f5\ua7f6\ua7f7\ua7f8\ua7f9\ua7fa\ua7fb\ua7fc\ua7fd\ua7fe\ua7ff\ua82c\ua82d\ua82e\ua82f\ua830\ua831\ua832\ua833\ua834\ua835\ua836\ua837\ua838\ua839\ua83a\ua83b\ua83c\ua83d\ua83e\ua83f\ua840\ua841\ua842\ua843\ua844\ua845\ua846\ua847\ua848\ua849\ua84a\ua84b\ua84c\ua84d\ua84e\ua84f\ua850\ua851\ua852\ua853\ua854\ua855\ua856\ua857\ua858\ua859\ua85a\ua85b\ua85c\ua85d\ua85e\ua85f\ua860\ua861\ua862\ua863\ua864\ua865\ua866\ua867\ua868\ua869\ua86a\ua86b\ua86c\ua86d\ua86e\ua86f\ua870\ua871\ua872\ua873\ua874\ua875\ua876\ua877\ua878\ua879\ua87a\ua87b\ua87c\ua87d\ua87e\ua87f\ua880\ua881\ua882\ua883\ua884\ua885\ua886\ua887\ua888\ua889\ua88a\ua88b\ua88c\ua88d\ua88e\ua88f\ua890\ua891\ua892\ua893\ua894\ua895\ua896\ua897\ua898\ua899\ua89a\ua89b\ua89c\ua89d\ua89e\ua89f\ua8a0\ua8a1\ua8a2\ua8a3\ua8a4\ua8a5\ua8a6\ua8a7\ua8a8\ua8a9\ua8aa\ua8ab\ua8ac\ua8ad\ua8ae\ua8af\ua8b0\ua8b1\ua8b2\ua8b3\ua8b4\ua8b5\ua8b6\ua8b7\ua8b8\ua8b9\ua8ba\ua8bb\ua8bc\ua8bd\ua8be\ua8bf\ua8c0\ua8c1\ua8c2\ua8c3\ua8c4\ua8c5\ua8c6\ua8c7\ua8c8\ua8c9\ua8ca\ua8cb\ua8cc\ua8cd\ua8ce\ua8cf\ua8d0\ua8d1\ua8d2\ua8d3\ua8d4\ua8d5\ua8d6\ua8d7\ua8d8\ua8d9\ua8da\ua8db\ua8dc\ua8dd\ua8de\ua8df\ua8e0\ua8e1\ua8e2\ua8e3\ua8e4\ua8e5\ua8e6\ua8e7\ua8e8\ua8e9\ua8ea\ua8eb\ua8ec\ua8ed\ua8ee\ua8ef\ua8f0\ua8f1\ua8f2\ua8f3\ua8f4\ua8f5\ua8f6\ua8f7\ua8f8\ua8f9\ua8fa\ua8fb\ua8fc\ua8fd\ua8fe\ua8ff\ua900\ua901\ua902\ua903\ua904\ua905\ua906\ua907\ua908\ua909\ua90a\ua90b\ua90c\ua90d\ua90e\ua90f\ua910\ua911\ua912\ua913\ua914\ua915\ua916\ua917\ua918\ua919\ua91a\ua91b\ua91c\ua91d\ua91e\ua91f\ua920\ua921\ua922\ua923\ua924\ua925\ua926\ua927\ua928\ua929\ua92a\ua92b\ua92c\ua92d\ua92e\ua92f\ua930\ua931\ua932\ua933\ua934\ua935\ua936\ua937\ua938\ua939\ua93a\ua93b\ua93c\ua93d\ua93e\ua93f\ua940\ua941\ua942\ua943\ua944\ua945\ua946\ua947\ua948\ua949\ua94a\ua94b\ua94c\ua94d\ua94e\ua94f\ua950\ua951\ua952\ua953\ua954\ua955\ua956\ua957\ua958\ua959\ua95a\ua95b\ua95c\ua95d\ua95e\ua95f\ua960\ua961\ua962\ua963\ua964\ua965\ua966\ua967\ua968\ua969\ua96a\ua96b\ua96c\ua96d\ua96e\ua96f\ua970\ua971\ua972\ua973\ua974\ua975\ua976\ua977\ua978\ua979\ua97a\ua97b\ua97c\ua97d\ua97e\ua97f\ua980\ua981\ua982\ua983\ua984\ua985\ua986\ua987\ua988\ua989\ua98a\ua98b\ua98c\ua98d\ua98e\ua98f\ua990\ua991\ua992\ua993\ua994\ua995\ua996\ua997\ua998\ua999\ua99a\ua99b\ua99c\ua99d\ua99e\ua99f\ua9a0\ua9a1\ua9a2\ua9a3\ua9a4\ua9a5\ua9a6\ua9a7\ua9a8\ua9a9\ua9aa\ua9ab\ua9ac\ua9ad\ua9ae\ua9af\ua9b0\ua9b1\ua9b2\ua9b3\ua9b4\ua9b5\ua9b6\ua9b7\ua9b8\ua9b9\ua9ba\ua9bb\ua9bc\ua9bd\ua9be\ua9bf\ua9c0\ua9c1\ua9c2\ua9c3\ua9c4\ua9c5\ua9c6\ua9c7\ua9c8\ua9c9\ua9ca\ua9cb\ua9cc\ua9cd\ua9ce\ua9cf\ua9d0\ua9d1\ua9d2\ua9d3\ua9d4\ua9d5\ua9d6\ua9d7\ua9d8\ua9d9\ua9da\ua9db\ua9dc\ua9dd\ua9de\ua9df\ua9e0\ua9e1\ua9e2\ua9e3\ua9e4\ua9e5\ua9e6\ua9e7\ua9e8\ua9e9\ua9ea\ua9eb\ua9ec\ua9ed\ua9ee\ua9ef\ua9f0\ua9f1\ua9f2\ua9f3\ua9f4\ua9f5\ua9f6\ua9f7\ua9f8\ua9f9\ua9fa\ua9fb\ua9fc\ua9fd\ua9fe\ua9ff\uaa00\uaa01\uaa02\uaa03\uaa04\uaa05\uaa06\uaa07\uaa08\uaa09\uaa0a\uaa0b\uaa0c\uaa0d\uaa0e\uaa0f\uaa10\uaa11\uaa12\uaa13\uaa14\uaa15\uaa16\uaa17\uaa18\uaa19\uaa1a\uaa1b\uaa1c\uaa1d\uaa1e\uaa1f\uaa20\uaa21\uaa22\uaa23\uaa24\uaa25\uaa26\uaa27\uaa28\uaa29\uaa2a\uaa2b\uaa2c\uaa2d\uaa2e\uaa2f\uaa30\uaa31\uaa32\uaa33\uaa34\uaa35\uaa36\uaa37\uaa38\uaa39\uaa3a\uaa3b\uaa3c\uaa3d\uaa3e\uaa3f\uaa40\uaa41\uaa42\uaa43\uaa44\uaa45\uaa46\uaa47\uaa48\uaa49\uaa4a\uaa4b\uaa4c\uaa4d\uaa4e\uaa4f\uaa50\uaa51\uaa52\uaa53\uaa54\uaa55\uaa56\uaa57\uaa58\uaa59\uaa5a\uaa5b\uaa5c\uaa5d\uaa5e\uaa5f\uaa60\uaa61\uaa62\uaa63\uaa64\uaa65\uaa66\uaa67\uaa68\uaa69\uaa6a\uaa6b\uaa6c\uaa6d\uaa6e\uaa6f\uaa70\uaa71\uaa72\uaa73\uaa74\uaa75\uaa76\uaa77\uaa78\uaa79\uaa7a\uaa7b\uaa7c\uaa7d\uaa7e\uaa7f\uaa80\uaa81\uaa82\uaa83\uaa84\uaa85\uaa86\uaa87\uaa88\uaa89\uaa8a\uaa8b\uaa8c\uaa8d\uaa8e\uaa8f\uaa90\uaa91\uaa92\uaa93\uaa94\uaa95\uaa96\uaa97\uaa98\uaa99\uaa9a\uaa9b\uaa9c\uaa9d\uaa9e\uaa9f\uaaa0\uaaa1\uaaa2\uaaa3\uaaa4\uaaa5\uaaa6\uaaa7\uaaa8\uaaa9\uaaaa\uaaab\uaaac\uaaad\uaaae\uaaaf\uaab0\uaab1\uaab2\uaab3\uaab4\uaab5\uaab6\uaab7\uaab8\uaab9\uaaba\uaabb\uaabc\uaabd\uaabe\uaabf\uaac0\uaac1\uaac2\uaac3\uaac4\uaac5\uaac6\uaac7\uaac8\uaac9\uaaca\uaacb\uaacc\uaacd\uaace\uaacf\uaad0\uaad1\uaad2\uaad3\uaad4\uaad5\uaad6\uaad7\uaad8\uaad9\uaada\uaadb\uaadc\uaadd\uaade\uaadf\uaae0\uaae1\uaae2\uaae3\uaae4\uaae5\uaae6\uaae7\uaae8\uaae9\uaaea\uaaeb\uaaec\uaaed\uaaee\uaaef\uaaf0\uaaf1\uaaf2\uaaf3\uaaf4\uaaf5\uaaf6\uaaf7\uaaf8\uaaf9\uaafa\uaafb\uaafc\uaafd\uaafe\uaaff\uab00\uab01\uab02\uab03\uab04\uab05\uab06\uab07\uab08\uab09\uab0a\uab0b\uab0c\uab0d\uab0e\uab0f\uab10\uab11\uab12\uab13\uab14\uab15\uab16\uab17\uab18\uab19\uab1a\uab1b\uab1c\uab1d\uab1e\uab1f\uab20\uab21\uab22\uab23\uab24\uab25\uab26\uab27\uab28\uab29\uab2a\uab2b\uab2c\uab2d\uab2e\uab2f\uab30\uab31\uab32\uab33\uab34\uab35\uab36\uab37\uab38\uab39\uab3a\uab3b\uab3c\uab3d\uab3e\uab3f\uab40\uab41\uab42\uab43\uab44\uab45\uab46\uab47\uab48\uab49\uab4a\uab4b\uab4c\uab4d\uab4e\uab4f\uab50\uab51\uab52\uab53\uab54\uab55\uab56\uab57\uab58\uab59\uab5a\uab5b\uab5c\uab5d\uab5e\uab5f\uab60\uab61\uab62\uab63\uab64\uab65\uab66\uab67\uab68\uab69\uab6a\uab6b\uab6c\uab6d\uab6e\uab6f\uab70\uab71\uab72\uab73\uab74\uab75\uab76\uab77\uab78\uab79\uab7a\uab7b\uab7c\uab7d\uab7e\uab7f\uab80\uab81\uab82\uab83\uab84\uab85\uab86\uab87\uab88\uab89\uab8a\uab8b\uab8c\uab8d\uab8e\uab8f\uab90\uab91\uab92\uab93\uab94\uab95\uab96\uab97\uab98\uab99\uab9a\uab9b\uab9c\uab9d\uab9e\uab9f\uaba0\uaba1\uaba2\uaba3\uaba4\uaba5\uaba6\uaba7\uaba8\uaba9\uabaa\uabab\uabac\uabad\uabae\uabaf\uabb0\uabb1\uabb2\uabb3\uabb4\uabb5\uabb6\uabb7\uabb8\uabb9\uabba\uabbb\uabbc\uabbd\uabbe\uabbf\uabc0\uabc1\uabc2\uabc3\uabc4\uabc5\uabc6\uabc7\uabc8\uabc9\uabca\uabcb\uabcc\uabcd\uabce\uabcf\uabd0\uabd1\uabd2\uabd3\uabd4\uabd5\uabd6\uabd7\uabd8\uabd9\uabda\uabdb\uabdc\uabdd\uabde\uabdf\uabe0\uabe1\uabe2\uabe3\uabe4\uabe5\uabe6\uabe7\uabe8\uabe9\uabea\uabeb\uabec\uabed\uabee\uabef\uabf0\uabf1\uabf2\uabf3\uabf4\uabf5\uabf6\uabf7\uabf8\uabf9\uabfa\uabfb\uabfc\uabfd\uabfe\uabff\ud7a4\ud7a5\ud7a6\ud7a7\ud7a8\ud7a9\ud7aa\ud7ab\ud7ac\ud7ad\ud7ae\ud7af\ud7b0\ud7b1\ud7b2\ud7b3\ud7b4\ud7b5\ud7b6\ud7b7\ud7b8\ud7b9\ud7ba\ud7bb\ud7bc\ud7bd\ud7be\ud7bf\ud7c0\ud7c1\ud7c2\ud7c3\ud7c4\ud7c5\ud7c6\ud7c7\ud7c8\ud7c9\ud7ca\ud7cb\ud7cc\ud7cd\ud7ce\ud7cf\ud7d0\ud7d1\ud7d2\ud7d3\ud7d4\ud7d5\ud7d6\ud7d7\ud7d8\ud7d9\ud7da\ud7db\ud7dc\ud7dd\ud7de\ud7df\ud7e0\ud7e1\ud7e2\ud7e3\ud7e4\ud7e5\ud7e6\ud7e7\ud7e8\ud7e9\ud7ea\ud7eb\ud7ec\ud7ed\ud7ee\ud7ef\ud7f0\ud7f1\ud7f2\ud7f3\ud7f4\ud7f5\ud7f6\ud7f7\ud7f8\ud7f9\ud7fa\ud7fb\ud7fc\ud7fd\ud7fe\ud7ff\ufa2e\ufa2f\ufa6b\ufa6c\ufa6d\ufa6e\ufa6f\ufada\ufadb\ufadc\ufadd\ufade\ufadf\ufae0\ufae1\ufae2\ufae3\ufae4\ufae5\ufae6\ufae7\ufae8\ufae9\ufaea\ufaeb\ufaec\ufaed\ufaee\ufaef\ufaf0\ufaf1\ufaf2\ufaf3\ufaf4\ufaf5\ufaf6\ufaf7\ufaf8\ufaf9\ufafa\ufafb\ufafc\ufafd\ufafe\ufaff\ufb07\ufb08\ufb09\ufb0a\ufb0b\ufb0c\ufb0d\ufb0e\ufb0f\ufb10\ufb11\ufb12\ufb18\ufb19\ufb1a\ufb1b\ufb1c\ufb37\ufb3d\ufb3f\ufb42\ufb45\ufbb2\ufbb3\ufbb4\ufbb5\ufbb6\ufbb7\ufbb8\ufbb9\ufbba\ufbbb\ufbbc\ufbbd\ufbbe\ufbbf\ufbc0\ufbc1\ufbc2\ufbc3\ufbc4\ufbc5\ufbc6\ufbc7\ufbc8\ufbc9\ufbca\ufbcb\ufbcc\ufbcd\ufbce\ufbcf\ufbd0\ufbd1\ufbd2\ufd40\ufd41\ufd42\ufd43\ufd44\ufd45\ufd46\ufd47\ufd48\ufd49\ufd4a\ufd4b\ufd4c\ufd4d\ufd4e\ufd4f\ufd90\ufd91\ufdc8\ufdc9\ufdca\ufdcb\ufdcc\ufdcd\ufdce\ufdcf\ufdd0\ufdd1\ufdd2\ufdd3\ufdd4\ufdd5\ufdd6\ufdd7\ufdd8\ufdd9\ufdda\ufddb\ufddc\ufddd\ufdde\ufddf\ufde0\ufde1\ufde2\ufde3\ufde4\ufde5\ufde6\ufde7\ufde8\ufde9\ufdea\ufdeb\ufdec\ufded\ufdee\ufdef\ufdfe\ufdff\ufe1a\ufe1b\ufe1c\ufe1d\ufe1e\ufe1f\ufe24\ufe25\ufe26\ufe27\ufe28\ufe29\ufe2a\ufe2b\ufe2c\ufe2d\ufe2e\ufe2f\ufe53\ufe67\ufe6c\ufe6d\ufe6e\ufe6f\ufe75\ufefd\ufefe\uff00\uffbf\uffc0\uffc1\uffc8\uffc9\uffd0\uffd1\uffd8\uffd9\uffdd\uffde\uffdf\uffe7\uffef\ufff0\ufff1\ufff2\ufff3\ufff4\ufff5\ufff6\ufff7\ufff8\ufffe'
3rdparty/jinja2/_stringdefs.py:Co = u'\ue000\ue001\ue002\ue003\ue004\ue005\ue006\ue007\ue008\ue009\ue00a\ue00b\ue00c\ue00d\ue00e\ue00f\ue010\ue011\ue012\ue013\ue014\ue015\ue016\ue017\ue018\ue019\ue01a\ue01b\ue01c\ue01d\ue01e\ue01f\ue020\ue021\ue022\ue023\ue024\ue025\ue026\ue027\ue028\ue029\ue02a\ue02b\ue02c\ue02d\ue02e\ue02f\ue030\ue031\ue032\ue033\ue034\ue035\ue036\ue037\ue038\ue039\ue03a\ue03b\ue03c\ue03d\ue03e\ue03f\ue040\ue041\ue042\ue043\ue044\ue045\ue046\ue047\ue048\ue049\ue04a\ue04b\ue04c\ue04d\ue04e\ue04f\ue050\ue051\ue052\ue053\ue054\ue055\ue056\ue057\ue058\ue059\ue05a\ue05b\ue05c\ue05d\ue05e\ue05f\ue060\ue061\ue062\ue063\ue064\ue065\ue066\ue067\ue068\ue069\ue06a\ue06b\ue06c\ue06d\ue06e\ue06f\ue070\ue071\ue072\ue073\ue074\ue075\ue076\ue077\ue078\ue079\ue07a\ue07b\ue07c\ue07d\ue07e\ue07f\ue080\ue081\ue082\ue083\ue084\ue085\ue086\ue087\ue088\ue089\ue08a\ue08b\ue08c\ue08d\ue08e\ue08f\ue090\ue091\ue092\ue093\ue094\ue095\ue096\ue097\ue098\ue099\ue09a\ue09b\ue09c\ue09d\ue09e\ue09f\ue0a0\ue0a1\ue0a2\ue0a3\ue0a4\ue0a5\ue0a6\ue0a7\ue0a8\ue0a9\ue0aa\ue0ab\ue0ac\ue0ad\ue0ae\ue0af\ue0b0\ue0b1\ue0b2\ue0b3\ue0b4\ue0b5\ue0b6\ue0b7\ue0b8\ue0b9\ue0ba\ue0bb\ue0bc\ue0bd\ue0be\ue0bf\ue0c0\ue0c1\ue0c2\ue0c3\ue0c4\ue0c5\ue0c6\ue0c7\ue0c8\ue0c9\ue0ca\ue0cb\ue0cc\ue0cd\ue0ce\ue0cf\ue0d0\ue0d1\ue0d2\ue0d3\ue0d4\ue0d5\ue0d6\ue0d7\ue0d8\ue0d9\ue0da\ue0db\ue0dc\ue0dd\ue0de\ue0df\ue0e0\ue0e1\ue0e2\ue0e3\ue0e4\ue0e5\ue0e6\ue0e7\ue0e8\ue0e9\ue0ea\ue0eb\ue0ec\ue0ed\ue0ee\ue0ef\ue0f0\ue0f1\ue0f2\ue0f3\ue0f4\ue0f5\ue0f6\ue0f7\ue0f8\ue0f9\ue0fa\ue0fb\ue0fc\ue0fd\ue0fe\ue0ff\ue100\ue101\ue102\ue103\ue104\ue105\ue106\ue107\ue108\ue109\ue10a\ue10b\ue10c\ue10d\ue10e\ue10f\ue110\ue111\ue112\ue113\ue114\ue115\ue116\ue117\ue118\ue119\ue11a\ue11b\ue11c\ue11d\ue11e\ue11f\ue120\ue121\ue122\ue123\ue124\ue125\ue126\ue127\ue128\ue129\ue12a\ue12b\ue12c\ue12d\ue12e\ue12f\ue130\ue131\ue132\ue133\ue134\ue135\ue136\ue137\ue138\ue139\ue13a\ue13b\ue13c\ue13d\ue13e\ue13f\ue140\ue141\ue142\ue143\ue144\ue145\ue146\ue147\ue148\ue149\ue14a\ue14b\ue14c\ue14d\ue14e\ue14f\ue150\ue151\ue152\ue153\ue154\ue155\ue156\ue157\ue158\ue159\ue15a\ue15b\ue15c\ue15d\ue15e\ue15f\ue160\ue161\ue162\ue163\ue164\ue165\ue166\ue167\ue168\ue169\ue16a\ue16b\ue16c\ue16d\ue16e\ue16f\ue170\ue171\ue172\ue173\ue174\ue175\ue176\ue177\ue178\ue179\ue17a\ue17b\ue17c\ue17d\ue17e\ue17f\ue180\ue181\ue182\ue183\ue184\ue185\ue186\ue187\ue188\ue189\ue18a\ue18b\ue18c\ue18d\ue18e\ue18f\ue190\ue191\ue192\ue193\ue194\ue195\ue196\ue197\ue198\ue199\ue19a\ue19b\ue19c\ue19d\ue19e\ue19f\ue1a0\ue1a1\ue1a2\ue1a3\ue1a4\ue1a5\ue1a6\ue1a7\ue1a8\ue1a9\ue1aa\ue1ab\ue1ac\ue1ad\ue1ae\ue1af\ue1b0\ue1b1\ue1b2\ue1b3\ue1b4\ue1b5\ue1b6\ue1b7\ue1b8\ue1b9\ue1ba\ue1bb\ue1bc\ue1bd\ue1be\ue1bf\ue1c0\ue1c1\ue1c2\ue1c3\ue1c4\ue1c5\ue1c6\ue1c7\ue1c8\ue1c9\ue1ca\ue1cb\ue1cc\ue1cd\ue1ce\ue1cf\ue1d0\ue1d1\ue1d2\ue1d3\ue1d4\ue1d5\ue1d6\ue1d7\ue1d8\ue1d9\ue1da\ue1db\ue1dc\ue1dd\ue1de\ue1df\ue1e0\ue1e1\ue1e2\ue1e3\ue1e4\ue1e5\ue1e6\ue1e7\ue1e8\ue1e9\ue1ea\ue1eb\ue1ec\ue1ed\ue1ee\ue1ef\ue1f0\ue1f1\ue1f2\ue1f3\ue1f4\ue1f5\ue1f6\ue1f7\ue1f8\ue1f9\ue1fa\ue1fb\ue1fc\ue1fd\ue1fe\ue1ff\ue200\ue201\ue202\ue203\ue204\ue205\ue206\ue207\ue208\ue209\ue20a\ue20b\ue20c\ue20d\ue20e\ue20f\ue210\ue211\ue212\ue213\ue214\ue215\ue216\ue217\ue218\ue219\ue21a\ue21b\ue21c\ue21d\ue21e\ue21f\ue220\ue221\ue222\ue223\ue224\ue225\ue226\ue227\ue228\ue229\ue22a\ue22b\ue22c\ue22d\ue22e\ue22f\ue230\ue231\ue232\ue233\ue234\ue235\ue236\ue237\ue238\ue239\ue23a\ue23b\ue23c\ue23d\ue23e\ue23f\ue240\ue241\ue242\ue243\ue244\ue245\ue246\ue247\ue248\ue249\ue24a\ue24b\ue24c\ue24d\ue24e\ue24f\ue250\ue251\ue252\ue253\ue254\ue255\ue256\ue257\ue258\ue259\ue25a\ue25b\ue25c\ue25d\ue25e\ue25f\ue260\ue261\ue262\ue263\ue264\ue265\ue266\ue267\ue268\ue269\ue26a\ue26b\ue26c\ue26d\ue26e\ue26f\ue270\ue271\ue272\ue273\ue274\ue275\ue276\ue277\ue278\ue279\ue27a\ue27b\ue27c\ue27d\ue27e\ue27f\ue280\ue281\ue282\ue283\ue284\ue285\ue286\ue287\ue288\ue289\ue28a\ue28b\ue28c\ue28d\ue28e\ue28f\ue290\ue291\ue292\ue293\ue294\ue295\ue296\ue297\ue298\ue299\ue29a\ue29b\ue29c\ue29d\ue29e\ue29f\ue2a0\ue2a1\ue2a2\ue2a3\ue2a4\ue2a5\ue2a6\ue2a7\ue2a8\ue2a9\ue2aa\ue2ab\ue2ac\ue2ad\ue2ae\ue2af\ue2b0\ue2b1\ue2b2\ue2b3\ue2b4\ue2b5\ue2b6\ue2b7\ue2b8\ue2b9\ue2ba\ue2bb\ue2bc\ue2bd\ue2be\ue2bf\ue2c0\ue2c1\ue2c2\ue2c3\ue2c4\ue2c5\ue2c6\ue2c7\ue2c8\ue2c9\ue2ca\ue2cb\ue2cc\ue2cd\ue2ce\ue2cf\ue2d0\ue2d1\ue2d2\ue2d3\ue2d4\ue2d5\ue2d6\ue2d7\ue2d8\ue2d9\ue2da\ue2db\ue2dc\ue2dd\ue2de\ue2df\ue2e0\ue2e1\ue2e2\ue2e3\ue2e4\ue2e5\ue2e6\ue2e7\ue2e8\ue2e9\ue2ea\ue2eb\ue2ec\ue2ed\ue2ee\ue2ef\ue2f0\ue2f1\ue2f2\ue2f3\ue2f4\ue2f5\ue2f6\ue2f7\ue2f8\ue2f9\ue2fa\ue2fb\ue2fc\ue2fd\ue2fe\ue2ff\ue300\ue301\ue302\ue303\ue304\ue305\ue306\ue307\ue308\ue309\ue30a\ue30b\ue30c\ue30d\ue30e\ue30f\ue310\ue311\ue312\ue313\ue314\ue315\ue316\ue317\ue318\ue319\ue31a\ue31b\ue31c\ue31d\ue31e\ue31f\ue320\ue321\ue322\ue323\ue324\ue325\ue326\ue327\ue328\ue329\ue32a\ue32b\ue32c\ue32d\ue32e\ue32f\ue330\ue331\ue332\ue333\ue334\ue335\ue336\ue337\ue338\ue339\ue33a\ue33b\ue33c\ue33d\ue33e\ue33f\ue340\ue341\ue342\ue343\ue344\ue345\ue346\ue347\ue348\ue349\ue34a\ue34b\ue34c\ue34d\ue34e\ue34f\ue350\ue351\ue352\ue353\ue354\ue355\ue356\ue357\ue358\ue359\ue35a\ue35b\ue35c\ue35d\ue35e\ue35f\ue360\ue361\ue362\ue363\ue364\ue365\ue366\ue367\ue368\ue369\ue36a\ue36b\ue36c\ue36d\ue36e\ue36f\ue370\ue371\ue372\ue373\ue374\ue375\ue376\ue377\ue378\ue379\ue37a\ue37b\ue37c\ue37d\ue37e\ue37f\ue380\ue381\ue382\ue383\ue384\ue385\ue386\ue387\ue388\ue389\ue38a\ue38b\ue38c\ue38d\ue38e\ue38f\ue390\ue391\ue392\ue393\ue394\ue395\ue396\ue397\ue398\ue399\ue39a\ue39b\ue39c\ue39d\ue39e\ue39f\ue3a0\ue3a1\ue3a2\ue3a3\ue3a4\ue3a5\ue3a6\ue3a7\ue3a8\ue3a9\ue3aa\ue3ab\ue3ac\ue3ad\ue3ae\ue3af\ue3b0\ue3b1\ue3b2\ue3b3\ue3b4\ue3b5\ue3b6\ue3b7\ue3b8\ue3b9\ue3ba\ue3bb\ue3bc\ue3bd\ue3be\ue3bf\ue3c0\ue3c1\ue3c2\ue3c3\ue3c4\ue3c5\ue3c6\ue3c7\ue3c8\ue3c9\ue3ca\ue3cb\ue3cc\ue3cd\ue3ce\ue3cf\ue3d0\ue3d1\ue3d2\ue3d3\ue3d4\ue3d5\ue3d6\ue3d7\ue3d8\ue3d9\ue3da\ue3db\ue3dc\ue3dd\ue3de\ue3df\ue3e0\ue3e1\ue3e2\ue3e3\ue3e4\ue3e5\ue3e6\ue3e7\ue3e8\ue3e9\ue3ea\ue3eb\ue3ec\ue3ed\ue3ee\ue3ef\ue3f0\ue3f1\ue3f2\ue3f3\ue3f4\ue3f5\ue3f6\ue3f7\ue3f8\ue3f9\ue3fa\ue3fb\ue3fc\ue3fd\ue3fe\ue3ff\ue400\ue401\ue402\ue403\ue404\ue405\ue406\ue407\ue408\ue409\ue40a\ue40b\ue40c\ue40d\ue40e\ue40f\ue410\ue411\ue412\ue413\ue414\ue415\ue416\ue417\ue418\ue419\ue41a\ue41b\ue41c\ue41d\ue41e\ue41f\ue420\ue421\ue422\ue423\ue424\ue425\ue426\ue427\ue428\ue429\ue42a\ue42b\ue42c\ue42d\ue42e\ue42f\ue430\ue431\ue432\ue433\ue434\ue435\ue436\ue437\ue438\ue439\ue43a\ue43b\ue43c\ue43d\ue43e\ue43f\ue440\ue441\ue442\ue443\ue444\ue445\ue446\ue447\ue448\ue449\ue44a\ue44b\ue44c\ue44d\ue44e\ue44f\ue450\ue451\ue452\ue453\ue454\ue455\ue456\ue457\ue458\ue459\ue45a\ue45b\ue45c\ue45d\ue45e\ue45f\ue460\ue461\ue462\ue463\ue464\ue465\ue466\ue467\ue468\ue469\ue46a\ue46b\ue46c\ue46d\ue46e\ue46f\ue470\ue471\ue472\ue473\ue474\ue475\ue476\ue477\ue478\ue479\ue47a\ue47b\ue47c\ue47d\ue47e\ue47f\ue480\ue481\ue482\ue483\ue484\ue485\ue486\ue487\ue488\ue489\ue48a\ue48b\ue48c\ue48d\ue48e\ue48f\ue490\ue491\ue492\ue493\ue494\ue495\ue496\ue497\ue498\ue499\ue49a\ue49b\ue49c\ue49d\ue49e\ue49f\ue4a0\ue4a1\ue4a2\ue4a3\ue4a4\ue4a5\ue4a6\ue4a7\ue4a8\ue4a9\ue4aa\ue4ab\ue4ac\ue4ad\ue4ae\ue4af\ue4b0\ue4b1\ue4b2\ue4b3\ue4b4\ue4b5\ue4b6\ue4b7\ue4b8\ue4b9\ue4ba\ue4bb\ue4bc\ue4bd\ue4be\ue4bf\ue4c0\ue4c1\ue4c2\ue4c3\ue4c4\ue4c5\ue4c6\ue4c7\ue4c8\ue4c9\ue4ca\ue4cb\ue4cc\ue4cd\ue4ce\ue4cf\ue4d0\ue4d1\ue4d2\ue4d3\ue4d4\ue4d5\ue4d6\ue4d7\ue4d8\ue4d9\ue4da\ue4db\ue4dc\ue4dd\ue4de\ue4df\ue4e0\ue4e1\ue4e2\ue4e3\ue4e4\ue4e5\ue4e6\ue4e7\ue4e8\ue4e9\ue4ea\ue4eb\ue4ec\ue4ed\ue4ee\ue4ef\ue4f0\ue4f1\ue4f2\ue4f3\ue4f4\ue4f5\ue4f6\ue4f7\ue4f8\ue4f9\ue4fa\ue4fb\ue4fc\ue4fd\ue4fe\ue4ff\ue500\ue501\ue502\ue503\ue504\ue505\ue506\ue507\ue508\ue509\ue50a\ue50b\ue50c\ue50d\ue50e\ue50f\ue510\ue511\ue512\ue513\ue514\ue515\ue516\ue517\ue518\ue519\ue51a\ue51b\ue51c\ue51d\ue51e\ue51f\ue520\ue521\ue522\ue523\ue524\ue525\ue526\ue527\ue528\ue529\ue52a\ue52b\ue52c\ue52d\ue52e\ue52f\ue530\ue531\ue532\ue533\ue534\ue535\ue536\ue537\ue538\ue539\ue53a\ue53b\ue53c\ue53d\ue53e\ue53f\ue540\ue541\ue542\ue543\ue544\ue545\ue546\ue547\ue548\ue549\ue54a\ue54b\ue54c\ue54d\ue54e\ue54f\ue550\ue551\ue552\ue553\ue554\ue555\ue556\ue557\ue558\ue559\ue55a\ue55b\ue55c\ue55d\ue55e\ue55f\ue560\ue561\ue562\ue563\ue564\ue565\ue566\ue567\ue568\ue569\ue56a\ue56b\ue56c\ue56d\ue56e\ue56f\ue570\ue571\ue572\ue573\ue574\ue575\ue576\ue577\ue578\ue579\ue57a\ue57b\ue57c\ue57d\ue57e\ue57f\ue580\ue581\ue582\ue583\ue584\ue585\ue586\ue587\ue588\ue589\ue58a\ue58b\ue58c\ue58d\ue58e\ue58f\ue590\ue591\ue592\ue593\ue594\ue595\ue596\ue597\ue598\ue599\ue59a\ue59b\ue59c\ue59d\ue59e\ue59f\ue5a0\ue5a1\ue5a2\ue5a3\ue5a4\ue5a5\ue5a6\ue5a7\ue5a8\ue5a9\ue5aa\ue5ab\ue5ac\ue5ad\ue5ae\ue5af\ue5b0\ue5b1\ue5b2\ue5b3\ue5b4\ue5b5\ue5b6\ue5b7\ue5b8\ue5b9\ue5ba\ue5bb\ue5bc\ue5bd\ue5be\ue5bf\ue5c0\ue5c1\ue5c2\ue5c3\ue5c4\ue5c5\ue5c6\ue5c7\ue5c8\ue5c9\ue5ca\ue5cb\ue5cc\ue5cd\ue5ce\ue5cf\ue5d0\ue5d1\ue5d2\ue5d3\ue5d4\ue5d5\ue5d6\ue5d7\ue5d8\ue5d9\ue5da\ue5db\ue5dc\ue5dd\ue5de\ue5df\ue5e0\ue5e1\ue5e2\ue5e3\ue5e4\ue5e5\ue5e6\ue5e7\ue5e8\ue5e9\ue5ea\ue5eb\ue5ec\ue5ed\ue5ee\ue5ef\ue5f0\ue5f1\ue5f2\ue5f3\ue5f4\ue5f5\ue5f6\ue5f7\ue5f8\ue5f9\ue5fa\ue5fb\ue5fc\ue5fd\ue5fe\ue5ff\ue600\ue601\ue602\ue603\ue604\ue605\ue606\ue607\ue608\ue609\ue60a\ue60b\ue60c\ue60d\ue60e\ue60f\ue610\ue611\ue612\ue613\ue614\ue615\ue616\ue617\ue618\ue619\ue61a\ue61b\ue61c\ue61d\ue61e\ue61f\ue620\ue621\ue622\ue623\ue624\ue625\ue626\ue627\ue628\ue629\ue62a\ue62b\ue62c\ue62d\ue62e\ue62f\ue630\ue631\ue632\ue633\ue634\ue635\ue636\ue637\ue638\ue639\ue63a\ue63b\ue63c\ue63d\ue63e\ue63f\ue640\ue641\ue642\ue643\ue644\ue645\ue646\ue647\ue648\ue649\ue64a\ue64b\ue64c\ue64d\ue64e\ue64f\ue650\ue651\ue652\ue653\ue654\ue655\ue656\ue657\ue658\ue659\ue65a\ue65b\ue65c\ue65d\ue65e\ue65f\ue660\ue661\ue662\ue663\ue664\ue665\ue666\ue667\ue668\ue669\ue66a\ue66b\ue66c\ue66d\ue66e\ue66f\ue670\ue671\ue672\ue673\ue674\ue675\ue676\ue677\ue678\ue679\ue67a\ue67b\ue67c\ue67d\ue67e\ue67f\ue680\ue681\ue682\ue683\ue684\ue685\ue686\ue687\ue688\ue689\ue68a\ue68b\ue68c\ue68d\ue68e\ue68f\ue690\ue691\ue692\ue693\ue694\ue695\ue696\ue697\ue698\ue699\ue69a\ue69b\ue69c\ue69d\ue69e\ue69f\ue6a0\ue6a1\ue6a2\ue6a3\ue6a4\ue6a5\ue6a6\ue6a7\ue6a8\ue6a9\ue6aa\ue6ab\ue6ac\ue6ad\ue6ae\ue6af\ue6b0\ue6b1\ue6b2\ue6b3\ue6b4\ue6b5\ue6b6\ue6b7\ue6b8\ue6b9\ue6ba\ue6bb\ue6bc\ue6bd\ue6be\ue6bf\ue6c0\ue6c1\ue6c2\ue6c3\ue6c4\ue6c5\ue6c6\ue6c7\ue6c8\ue6c9\ue6ca\ue6cb\ue6cc\ue6cd\ue6ce\ue6cf\ue6d0\ue6d1\ue6d2\ue6d3\ue6d4\ue6d5\ue6d6\ue6d7\ue6d8\ue6d9\ue6da\ue6db\ue6dc\ue6dd\ue6de\ue6df\ue6e0\ue6e1\ue6e2\ue6e3\ue6e4\ue6e5\ue6e6\ue6e7\ue6e8\ue6e9\ue6ea\ue6eb\ue6ec\ue6ed\ue6ee\ue6ef\ue6f0\ue6f1\ue6f2\ue6f3\ue6f4\ue6f5\ue6f6\ue6f7\ue6f8\ue6f9\ue6fa\ue6fb\ue6fc\ue6fd\ue6fe\ue6ff\ue700\ue701\ue702\ue703\ue704\ue705\ue706\ue707\ue708\ue709\ue70a\ue70b\ue70c\ue70d\ue70e\ue70f\ue710\ue711\ue712\ue713\ue714\ue715\ue716\ue717\ue718\ue719\ue71a\ue71b\ue71c\ue71d\ue71e\ue71f\ue720\ue721\ue722\ue723\ue724\ue725\ue726\ue727\ue728\ue729\ue72a\ue72b\ue72c\ue72d\ue72e\ue72f\ue730\ue731\ue732\ue733\ue734\ue735\ue736\ue737\ue738\ue739\ue73a\ue73b\ue73c\ue73d\ue73e\ue73f\ue740\ue741\ue742\ue743\ue744\ue745\ue746\ue747\ue748\ue749\ue74a\ue74b\ue74c\ue74d\ue74e\ue74f\ue750\ue751\ue752\ue753\ue754\ue755\ue756\ue757\ue758\ue759\ue75a\ue75b\ue75c\ue75d\ue75e\ue75f\ue760\ue761\ue762\ue763\ue764\ue765\ue766\ue767\ue768\ue769\ue76a\ue76b\ue76c\ue76d\ue76e\ue76f\ue770\ue771\ue772\ue773\ue774\ue775\ue776\ue777\ue778\ue779\ue77a\ue77b\ue77c\ue77d\ue77e\ue77f\ue780\ue781\ue782\ue783\ue784\ue785\ue786\ue787\ue788\ue789\ue78a\ue78b\ue78c\ue78d\ue78e\ue78f\ue790\ue791\ue792\ue793\ue794\ue795\ue796\ue797\ue798\ue799\ue79a\ue79b\ue79c\ue79d\ue79e\ue79f\ue7a0\ue7a1\ue7a2\ue7a3\ue7a4\ue7a5\ue7a6\ue7a7\ue7a8\ue7a9\ue7aa\ue7ab\ue7ac\ue7ad\ue7ae\ue7af\ue7b0\ue7b1\ue7b2\ue7b3\ue7b4\ue7b5\ue7b6\ue7b7\ue7b8\ue7b9\ue7ba\ue7bb\ue7bc\ue7bd\ue7be\ue7bf\ue7c0\ue7c1\ue7c2\ue7c3\ue7c4\ue7c5\ue7c6\ue7c7\ue7c8\ue7c9\ue7ca\ue7cb\ue7cc\ue7cd\ue7ce\ue7cf\ue7d0\ue7d1\ue7d2\ue7d3\ue7d4\ue7d5\ue7d6\ue7d7\ue7d8\ue7d9\ue7da\ue7db\ue7dc\ue7dd\ue7de\ue7df\ue7e0\ue7e1\ue7e2\ue7e3\ue7e4\ue7e5\ue7e6\ue7e7\ue7e8\ue7e9\ue7ea\ue7eb\ue7ec\ue7ed\ue7ee\ue7ef\ue7f0\ue7f1\ue7f2\ue7f3\ue7f4\ue7f5\ue7f6\ue7f7\ue7f8\ue7f9\ue7fa\ue7fb\ue7fc\ue7fd\ue7fe\ue7ff\ue800\ue801\ue802\ue803\ue804\ue805\ue806\ue807\ue808\ue809\ue80a\ue80b\ue80c\ue80d\ue80e\ue80f\ue810\ue811\ue812\ue813\ue814\ue815\ue816\ue817\ue818\ue819\ue81a\ue81b\ue81c\ue81d\ue81e\ue81f\ue820\ue821\ue822\ue823\ue824\ue825\ue826\ue827\ue828\ue829\ue82a\ue82b\ue82c\ue82d\ue82e\ue82f\ue830\ue831\ue832\ue833\ue834\ue835\ue836\ue837\ue838\ue839\ue83a\ue83b\ue83c\ue83d\ue83e\ue83f\ue840\ue841\ue842\ue843\ue844\ue845\ue846\ue847\ue848\ue849\ue84a\ue84b\ue84c\ue84d\ue84e\ue84f\ue850\ue851\ue852\ue853\ue854\ue855\ue856\ue857\ue858\ue859\ue85a\ue85b\ue85c\ue85d\ue85e\ue85f\ue860\ue861\ue862\ue863\ue864\ue865\ue866\ue867\ue868\ue869\ue86a\ue86b\ue86c\ue86d\ue86e\ue86f\ue870\ue871\ue872\ue873\ue874\ue875\ue876\ue877\ue878\ue879\ue87a\ue87b\ue87c\ue87d\ue87e\ue87f\ue880\ue881\ue882\ue883\ue884\ue885\ue886\ue887\ue888\ue889\ue88a\ue88b\ue88c\ue88d\ue88e\ue88f\ue890\ue891\ue892\ue893\ue894\ue895\ue896\ue897\ue898\ue899\ue89a\ue89b\ue89c\ue89d\ue89e\ue89f\ue8a0\ue8a1\ue8a2\ue8a3\ue8a4\ue8a5\ue8a6\ue8a7\ue8a8\ue8a9\ue8aa\ue8ab\ue8ac\ue8ad\ue8ae\ue8af\ue8b0\ue8b1\ue8b2\ue8b3\ue8b4\ue8b5\ue8b6\ue8b7\ue8b8\ue8b9\ue8ba\ue8bb\ue8bc\ue8bd\ue8be\ue8bf\ue8c0\ue8c1\ue8c2\ue8c3\ue8c4\ue8c5\ue8c6\ue8c7\ue8c8\ue8c9\ue8ca\ue8cb\ue8cc\ue8cd\ue8ce\ue8cf\ue8d0\ue8d1\ue8d2\ue8d3\ue8d4\ue8d5\ue8d6\ue8d7\ue8d8\ue8d9\ue8da\ue8db\ue8dc\ue8dd\ue8de\ue8df\ue8e0\ue8e1\ue8e2\ue8e3\ue8e4\ue8e5\ue8e6\ue8e7\ue8e8\ue8e9\ue8ea\ue8eb\ue8ec\ue8ed\ue8ee\ue8ef\ue8f0\ue8f1\ue8f2\ue8f3\ue8f4\ue8f5\ue8f6\ue8f7\ue8f8\ue8f9\ue8fa\ue8fb\ue8fc\ue8fd\ue8fe\ue8ff\ue900\ue901\ue902\ue903\ue904\ue905\ue906\ue907\ue908\ue909\ue90a\ue90b\ue90c\ue90d\ue90e\ue90f\ue910\ue911\ue912\ue913\ue914\ue915\ue916\ue917\ue918\ue919\ue91a\ue91b\ue91c\ue91d\ue91e\ue91f\ue920\ue921\ue922\ue923\ue924\ue925\ue926\ue927\ue928\ue929\ue92a\ue92b\ue92c\ue92d\ue92e\ue92f\ue930\ue931\ue932\ue933\ue934\ue935\ue936\ue937\ue938\ue939\ue93a\ue93b\ue93c\ue93d\ue93e\ue93f\ue940\ue941\ue942\ue943\ue944\ue945\ue946\ue947\ue948\ue949\ue94a\ue94b\ue94c\ue94d\ue94e\ue94f\ue950\ue951\ue952\ue953\ue954\ue955\ue956\ue957\ue958\ue959\ue95a\ue95b\ue95c\ue95d\ue95e\ue95f\ue960\ue961\ue962\ue963\ue964\ue965\ue966\ue967\ue968\ue969\ue96a\ue96b\ue96c\ue96d\ue96e\ue96f\ue970\ue971\ue972\ue973\ue974\ue975\ue976\ue977\ue978\ue979\ue97a\ue97b\ue97c\ue97d\ue97e\ue97f\ue980\ue981\ue982\ue983\ue984\ue985\ue986\ue987\ue988\ue989\ue98a\ue98b\ue98c\ue98d\ue98e\ue98f\ue990\ue991\ue992\ue993\ue994\ue995\ue996\ue997\ue998\ue999\ue99a\ue99b\ue99c\ue99d\ue99e\ue99f\ue9a0\ue9a1\ue9a2\ue9a3\ue9a4\ue9a5\ue9a6\ue9a7\ue9a8\ue9a9\ue9aa\ue9ab\ue9ac\ue9ad\ue9ae\ue9af\ue9b0\ue9b1\ue9b2\ue9b3\ue9b4\ue9b5\ue9b6\ue9b7\ue9b8\ue9b9\ue9ba\ue9bb\ue9bc\ue9bd\ue9be\ue9bf\ue9c0\ue9c1\ue9c2\ue9c3\ue9c4\ue9c5\ue9c6\ue9c7\ue9c8\ue9c9\ue9ca\ue9cb\ue9cc\ue9cd\ue9ce\ue9cf\ue9d0\ue9d1\ue9d2\ue9d3\ue9d4\ue9d5\ue9d6\ue9d7\ue9d8\ue9d9\ue9da\ue9db\ue9dc\ue9dd\ue9de\ue9df\ue9e0\ue9e1\ue9e2\ue9e3\ue9e4\ue9e5\ue9e6\ue9e7\ue9e8\ue9e9\ue9ea\ue9eb\ue9ec\ue9ed\ue9ee\ue9ef\ue9f0\ue9f1\ue9f2\ue9f3\ue9f4\ue9f5\ue9f6\ue9f7\ue9f8\ue9f9\ue9fa\ue9fb\ue9fc\ue9fd\ue9fe\ue9ff\uea00\uea01\uea02\uea03\uea04\uea05\uea06\uea07\uea08\uea09\uea0a\uea0b\uea0c\uea0d\uea0e\uea0f\uea10\uea11\uea12\uea13\uea14\uea15\uea16\uea17\uea18\uea19\uea1a\uea1b\uea1c\uea1d\uea1e\uea1f\uea20\uea21\uea22\uea23\uea24\uea25\uea26\uea27\uea28\uea29\uea2a\uea2b\uea2c\uea2d\uea2e\uea2f\uea30\uea31\uea32\uea33\uea34\uea35\uea36\uea37\uea38\uea39\uea3a\uea3b\uea3c\uea3d\uea3e\uea3f\uea40\uea41\uea42\uea43\uea44\uea45\uea46\uea47\uea48\uea49\uea4a\uea4b\uea4c\uea4d\uea4e\uea4f\uea50\uea51\uea52\uea53\uea54\uea55\uea56\uea57\uea58\uea59\uea5a\uea5b\uea5c\uea5d\uea5e\uea5f\uea60\uea61\uea62\uea63\uea64\uea65\uea66\uea67\uea68\uea69\uea6a\uea6b\uea6c\uea6d\uea6e\uea6f\uea70\uea71\uea72\uea73\uea74\uea75\uea76\uea77\uea78\uea79\uea7a\uea7b\uea7c\uea7d\uea7e\uea7f\uea80\uea81\uea82\uea83\uea84\uea85\uea86\uea87\uea88\uea89\uea8a\uea8b\uea8c\uea8d\uea8e\uea8f\uea90\uea91\uea92\uea93\uea94\uea95\uea96\uea97\uea98\uea99\uea9a\uea9b\uea9c\uea9d\uea9e\uea9f\ueaa0\ueaa1\ueaa2\ueaa3\ueaa4\ueaa5\ueaa6\ueaa7\ueaa8\ueaa9\ueaaa\ueaab\ueaac\ueaad\ueaae\ueaaf\ueab0\ueab1\ueab2\ueab3\ueab4\ueab5\ueab6\ueab7\ueab8\ueab9\ueaba\ueabb\ueabc\ueabd\ueabe\ueabf\ueac0\ueac1\ueac2\ueac3\ueac4\ueac5\ueac6\ueac7\ueac8\ueac9\ueaca\ueacb\ueacc\ueacd\ueace\ueacf\uead0\uead1\uead2\uead3\uead4\uead5\uead6\uead7\uead8\uead9\ueada\ueadb\ueadc\ueadd\ueade\ueadf\ueae0\ueae1\ueae2\ueae3\ueae4\ueae5\ueae6\ueae7\ueae8\ueae9\ueaea\ueaeb\ueaec\ueaed\ueaee\ueaef\ueaf0\ueaf1\ueaf2\ueaf3\ueaf4\ueaf5\ueaf6\ueaf7\ueaf8\ueaf9\ueafa\ueafb\ueafc\ueafd\ueafe\ueaff\ueb00\ueb01\ueb02\ueb03\ueb04\ueb05\ueb06\ueb07\ueb08\ueb09\ueb0a\ueb0b\ueb0c\ueb0d\ueb0e\ueb0f\ueb10\ueb11\ueb12\ueb13\ueb14\ueb15\ueb16\ueb17\ueb18\ueb19\ueb1a\ueb1b\ueb1c\ueb1d\ueb1e\ueb1f\ueb20\ueb21\ueb22\ueb23\ueb24\ueb25\ueb26\ueb27\ueb28\ueb29\ueb2a\ueb2b\ueb2c\ueb2d\ueb2e\ueb2f\ueb30\ueb31\ueb32\ueb33\ueb34\ueb35\ueb36\ueb37\ueb38\ueb39\ueb3a\ueb3b\ueb3c\ueb3d\ueb3e\ueb3f\ueb40\ueb41\ueb42\ueb43\ueb44\ueb45\ueb46\ueb47\ueb48\ueb49\ueb4a\ueb4b\ueb4c\ueb4d\ueb4e\ueb4f\ueb50\ueb51\ueb52\ueb53\ueb54\ueb55\ueb56\ueb57\ueb58\ueb59\ueb5a\ueb5b\ueb5c\ueb5d\ueb5e\ueb5f\ueb60\ueb61\ueb62\ueb63\ueb64\ueb65\ueb66\ueb67\ueb68\ueb69\ueb6a\ueb6b\ueb6c\ueb6d\ueb6e\ueb6f\ueb70\ueb71\ueb72\ueb73\ueb74\ueb75\ueb76\ueb77\ueb78\ueb79\ueb7a\ueb7b\ueb7c\ueb7d\ueb7e\ueb7f\ueb80\ueb81\ueb82\ueb83\ueb84\ueb85\ueb86\ueb87\ueb88\ueb89\ueb8a\ueb8b\ueb8c\ueb8d\ueb8e\ueb8f\ueb90\ueb91\ueb92\ueb93\ueb94\ueb95\ueb96\ueb97\ueb98\ueb99\ueb9a\ueb9b\ueb9c\ueb9d\ueb9e\ueb9f\ueba0\ueba1\ueba2\ueba3\ueba4\ueba5\ueba6\ueba7\ueba8\ueba9\uebaa\uebab\uebac\uebad\uebae\uebaf\uebb0\uebb1\uebb2\uebb3\uebb4\uebb5\uebb6\uebb7\uebb8\uebb9\uebba\uebbb\uebbc\uebbd\uebbe\uebbf\uebc0\uebc1\uebc2\uebc3\uebc4\uebc5\uebc6\uebc7\uebc8\uebc9\uebca\uebcb\uebcc\uebcd\uebce\uebcf\uebd0\uebd1\uebd2\uebd3\uebd4\uebd5\uebd6\uebd7\uebd8\uebd9\uebda\uebdb\uebdc\uebdd\uebde\uebdf\uebe0\uebe1\uebe2\uebe3\uebe4\uebe5\uebe6\uebe7\uebe8\uebe9\uebea\uebeb\uebec\uebed\uebee\uebef\uebf0\uebf1\uebf2\uebf3\uebf4\uebf5\uebf6\uebf7\uebf8\uebf9\uebfa\uebfb\uebfc\uebfd\uebfe\uebff\uec00\uec01\uec02\uec03\uec04\uec05\uec06\uec07\uec08\uec09\uec0a\uec0b\uec0c\uec0d\uec0e\uec0f\uec10\uec11\uec12\uec13\uec14\uec15\uec16\uec17\uec18\uec19\uec1a\uec1b\uec1c\uec1d\uec1e\uec1f\uec20\uec21\uec22\uec23\uec24\uec25\uec26\uec27\uec28\uec29\uec2a\uec2b\uec2c\uec2d\uec2e\uec2f\uec30\uec31\uec32\uec33\uec34\uec35\uec36\uec37\uec38\uec39\uec3a\uec3b\uec3c\uec3d\uec3e\uec3f\uec40\uec41\uec42\uec43\uec44\uec45\uec46\uec47\uec48\uec49\uec4a\uec4b\uec4c\uec4d\uec4e\uec4f\uec50\uec51\uec52\uec53\uec54\uec55\uec56\uec57\uec58\uec59\uec5a\uec5b\uec5c\uec5d\uec5e\uec5f\uec60\uec61\uec62\uec63\uec64\uec65\uec66\uec67\uec68\uec69\uec6a\uec6b\uec6c\uec6d\uec6e\uec6f\uec70\uec71\uec72\uec73\uec74\uec75\uec76\uec77\uec78\uec79\uec7a\uec7b\uec7c\uec7d\uec7e\uec7f\uec80\uec81\uec82\uec83\uec84\uec85\uec86\uec87\uec88\uec89\uec8a\uec8b\uec8c\uec8d\uec8e\uec8f\uec90\uec91\uec92\uec93\uec94\uec95\uec96\uec97\uec98\uec99\uec9a\uec9b\uec9c\uec9d\uec9e\uec9f\ueca0\ueca1\ueca2\ueca3\ueca4\ueca5\ueca6\ueca7\ueca8\ueca9\uecaa\uecab\uecac\uecad\uecae\uecaf\uecb0\uecb1\uecb2\uecb3\uecb4\uecb5\uecb6\uecb7\uecb8\uecb9\uecba\uecbb\uecbc\uecbd\uecbe\uecbf\uecc0\uecc1\uecc2\uecc3\uecc4\uecc5\uecc6\uecc7\uecc8\uecc9\uecca\ueccb\ueccc\ueccd\uecce\ueccf\uecd0\uecd1\uecd2\uecd3\uecd4\uecd5\uecd6\uecd7\uecd8\uecd9\uecda\uecdb\uecdc\uecdd\uecde\uecdf\uece0\uece1\uece2\uece3\uece4\uece5\uece6\uece7\uece8\uece9\uecea\ueceb\uecec\ueced\uecee\uecef\uecf0\uecf1\uecf2\uecf3\uecf4\uecf5\uecf6\uecf7\uecf8\uecf9\uecfa\uecfb\uecfc\uecfd\uecfe\uecff\ued00\ued01\ued02\ued03\ued04\ued05\ued06\ued07\ued08\ued09\ued0a\ued0b\ued0c\ued0d\ued0e\ued0f\ued10\ued11\ued12\ued13\ued14\ued15\ued16\ued17\ued18\ued19\ued1a\ued1b\ued1c\ued1d\ued1e\ued1f\ued20\ued21\ued22\ued23\ued24\ued25\ued26\ued27\ued28\ued29\ued2a\ued2b\ued2c\ued2d\ued2e\ued2f\ued30\ued31\ued32\ued33\ued34\ued35\ued36\ued37\ued38\ued39\ued3a\ued3b\ued3c\ued3d\ued3e\ued3f\ued40\ued41\ued42\ued43\ued44\ued45\ued46\ued47\ued48\ued49\ued4a\ued4b\ued4c\ued4d\ued4e\ued4f\ued50\ued51\ued52\ued53\ued54\ued55\ued56\ued57\ued58\ued59\ued5a\ued5b\ued5c\ued5d\ued5e\ued5f\ued60\ued61\ued62\ued63\ued64\ued65\ued66\ued67\ued68\ued69\ued6a\ued6b\ued6c\ued6d\ued6e\ued6f\ued70\ued71\ued72\ued73\ued74\ued75\ued76\ued77\ued78\ued79\ued7a\ued7b\ued7c\ued7d\ued7e\ued7f\ued80\ued81\ued82\ued83\ued84\ued85\ued86\ued87\ued88\ued89\ued8a\ued8b\ued8c\ued8d\ued8e\ued8f\ued90\ued91\ued92\ued93\ued94\ued95\ued96\ued97\ued98\ued99\ued9a\ued9b\ued9c\ued9d\ued9e\ued9f\ueda0\ueda1\ueda2\ueda3\ueda4\ueda5\ueda6\ueda7\ueda8\ueda9\uedaa\uedab\uedac\uedad\uedae\uedaf\uedb0\uedb1\uedb2\uedb3\uedb4\uedb5\uedb6\uedb7\uedb8\uedb9\uedba\uedbb\uedbc\uedbd\uedbe\uedbf\uedc0\uedc1\uedc2\uedc3\uedc4\uedc5\uedc6\uedc7\uedc8\uedc9\uedca\uedcb\uedcc\uedcd\uedce\uedcf\uedd0\uedd1\uedd2\uedd3\uedd4\uedd5\uedd6\uedd7\uedd8\uedd9\uedda\ueddb\ueddc\ueddd\uedde\ueddf\uede0\uede1\uede2\uede3\uede4\uede5\uede6\uede7\uede8\uede9\uedea\uedeb\uedec\ueded\uedee\uedef\uedf0\uedf1\uedf2\uedf3\uedf4\uedf5\uedf6\uedf7\uedf8\uedf9\uedfa\uedfb\uedfc\uedfd\uedfe\uedff\uee00\uee01\uee02\uee03\uee04\uee05\uee06\uee07\uee08\uee09\uee0a\uee0b\uee0c\uee0d\uee0e\uee0f\uee10\uee11\uee12\uee13\uee14\uee15\uee16\uee17\uee18\uee19\uee1a\uee1b\uee1c\uee1d\uee1e\uee1f\uee20\uee21\uee22\uee23\uee24\uee25\uee26\uee27\uee28\uee29\uee2a\uee2b\uee2c\uee2d\uee2e\uee2f\uee30\uee31\uee32\uee33\uee34\uee35\uee36\uee37\uee38\uee39\uee3a\uee3b\uee3c\uee3d\uee3e\uee3f\uee40\uee41\uee42\uee43\uee44\uee45\uee46\uee47\uee48\uee49\uee4a\uee4b\uee4c\uee4d\uee4e\uee4f\uee50\uee51\uee52\uee53\uee54\uee55\uee56\uee57\uee58\uee59\uee5a\uee5b\uee5c\uee5d\uee5e\uee5f\uee60\uee61\uee62\uee63\uee64\uee65\uee66\uee67\uee68\uee69\uee6a\uee6b\uee6c\uee6d\uee6e\uee6f\uee70\uee71\uee72\uee73\uee74\uee75\uee76\uee77\uee78\uee79\uee7a\uee7b\uee7c\uee7d\uee7e\uee7f\uee80\uee81\uee82\uee83\uee84\uee85\uee86\uee87\uee88\uee89\uee8a\uee8b\uee8c\uee8d\uee8e\uee8f\uee90\uee91\uee92\uee93\uee94\uee95\uee96\uee97\uee98\uee99\uee9a\uee9b\uee9c\uee9d\uee9e\uee9f\ueea0\ueea1\ueea2\ueea3\ueea4\ueea5\ueea6\ueea7\ueea8\ueea9\ueeaa\ueeab\ueeac\ueead\ueeae\ueeaf\ueeb0\ueeb1\ueeb2\ueeb3\ueeb4\ueeb5\ueeb6\ueeb7\ueeb8\ueeb9\ueeba\ueebb\ueebc\ueebd\ueebe\ueebf\ueec0\ueec1\ueec2\ueec3\ueec4\ueec5\ueec6\ueec7\ueec8\ueec9\ueeca\ueecb\ueecc\ueecd\ueece\ueecf\ueed0\ueed1\ueed2\ueed3\ueed4\ueed5\ueed6\ueed7\ueed8\ueed9\ueeda\ueedb\ueedc\ueedd\ueede\ueedf\ueee0\ueee1\ueee2\ueee3\ueee4\ueee5\ueee6\ueee7\ueee8\ueee9\ueeea\ueeeb\ueeec\ueeed\ueeee\ueeef\ueef0\ueef1\ueef2\ueef3\ueef4\ueef5\ueef6\ueef7\ueef8\ueef9\ueefa\ueefb\ueefc\ueefd\ueefe\ueeff\uef00\uef01\uef02\uef03\uef04\uef05\uef06\uef07\uef08\uef09\uef0a\uef0b\uef0c\uef0d\uef0e\uef0f\uef10\uef11\uef12\uef13\uef14\uef15\uef16\uef17\uef18\uef19\uef1a\uef1b\uef1c\uef1d\uef1e\uef1f\uef20\uef21\uef22\uef23\uef24\uef25\uef26\uef27\uef28\uef29\uef2a\uef2b\uef2c\uef2d\uef2e\uef2f\uef30\uef31\uef32\uef33\uef34\uef35\uef36\uef37\uef38\uef39\uef3a\uef3b\uef3c\uef3d\uef3e\uef3f\uef40\uef41\uef42\uef43\uef44\uef45\uef46\uef47\uef48\uef49\uef4a\uef4b\uef4c\uef4d\uef4e\uef4f\uef50\uef51\uef52\uef53\uef54\uef55\uef56\uef57\uef58\uef59\uef5a\uef5b\uef5c\uef5d\uef5e\uef5f\uef60\uef61\uef62\uef63\uef64\uef65\uef66\uef67\uef68\uef69\uef6a\uef6b\uef6c\uef6d\uef6e\uef6f\uef70\uef71\uef72\uef73\uef74\uef75\uef76\uef77\uef78\uef79\uef7a\uef7b\uef7c\uef7d\uef7e\uef7f\uef80\uef81\uef82\uef83\uef84\uef85\uef86\uef87\uef88\uef89\uef8a\uef8b\uef8c\uef8d\uef8e\uef8f\uef90\uef91\uef92\uef93\uef94\uef95\uef96\uef97\uef98\uef99\uef9a\uef9b\uef9c\uef9d\uef9e\uef9f\uefa0\uefa1\uefa2\uefa3\uefa4\uefa5\uefa6\uefa7\uefa8\uefa9\uefaa\uefab\uefac\uefad\uefae\uefaf\uefb0\uefb1\uefb2\uefb3\uefb4\uefb5\uefb6\uefb7\uefb8\uefb9\uefba\uefbb\uefbc\uefbd\uefbe\uefbf\uefc0\uefc1\uefc2\uefc3\uefc4\uefc5\uefc6\uefc7\uefc8\uefc9\uefca\uefcb\uefcc\uefcd\uefce\uefcf\uefd0\uefd1\uefd2\uefd3\uefd4\uefd5\uefd6\uefd7\uefd8\uefd9\uefda\uefdb\uefdc\uefdd\uefde\uefdf\uefe0\uefe1\uefe2\uefe3\uefe4\uefe5\uefe6\uefe7\uefe8\uefe9\uefea\uefeb\uefec\uefed\uefee\uefef\ueff0\ueff1\ueff2\ueff3\ueff4\ueff5\ueff6\ueff7\ueff8\ueff9\ueffa\ueffb\ueffc\ueffd\ueffe\uefff\uf000\uf001\uf002\uf003\uf004\uf005\uf006\uf007\uf008\uf009\uf00a\uf00b\uf00c\uf00d\uf00e\uf00f\uf010\uf011\uf012\uf013\uf014\uf015\uf016\uf017\uf018\uf019\uf01a\uf01b\uf01c\uf01d\uf01e\uf01f\uf020\uf021\uf022\uf023\uf024\uf025\uf026\uf027\uf028\uf029\uf02a\uf02b\uf02c\uf02d\uf02e\uf02f\uf030\uf031\uf032\uf033\uf034\uf035\uf036\uf037\uf038\uf039\uf03a\uf03b\uf03c\uf03d\uf03e\uf03f\uf040\uf041\uf042\uf043\uf044\uf045\uf046\uf047\uf048\uf049\uf04a\uf04b\uf04c\uf04d\uf04e\uf04f\uf050\uf051\uf052\uf053\uf054\uf055\uf056\uf057\uf058\uf059\uf05a\uf05b\uf05c\uf05d\uf05e\uf05f\uf060\uf061\uf062\uf063\uf064\uf065\uf066\uf067\uf068\uf069\uf06a\uf06b\uf06c\uf06d\uf06e\uf06f\uf070\uf071\uf072\uf073\uf074\uf075\uf076\uf077\uf078\uf079\uf07a\uf07b\uf07c\uf07d\uf07e\uf07f\uf080\uf081\uf082\uf083\uf084\uf085\uf086\uf087\uf088\uf089\uf08a\uf08b\uf08c\uf08d\uf08e\uf08f\uf090\uf091\uf092\uf093\uf094\uf095\uf096\uf097\uf098\uf099\uf09a\uf09b\uf09c\uf09d\uf09e\uf09f\uf0a0\uf0a1\uf0a2\uf0a3\uf0a4\uf0a5\uf0a6\uf0a7\uf0a8\uf0a9\uf0aa\uf0ab\uf0ac\uf0ad\uf0ae\uf0af\uf0b0\uf0b1\uf0b2\uf0b3\uf0b4\uf0b5\uf0b6\uf0b7\uf0b8\uf0b9\uf0ba\uf0bb\uf0bc\uf0bd\uf0be\uf0bf\uf0c0\uf0c1\uf0c2\uf0c3\uf0c4\uf0c5\uf0c6\uf0c7\uf0c8\uf0c9\uf0ca\uf0cb\uf0cc\uf0cd\uf0ce\uf0cf\uf0d0\uf0d1\uf0d2\uf0d3\uf0d4\uf0d5\uf0d6\uf0d7\uf0d8\uf0d9\uf0da\uf0db\uf0dc\uf0dd\uf0de\uf0df\uf0e0\uf0e1\uf0e2\uf0e3\uf0e4\uf0e5\uf0e6\uf0e7\uf0e8\uf0e9\uf0ea\uf0eb\uf0ec\uf0ed\uf0ee\uf0ef\uf0f0\uf0f1\uf0f2\uf0f3\uf0f4\uf0f5\uf0f6\uf0f7\uf0f8\uf0f9\uf0fa\uf0fb\uf0fc\uf0fd\uf0fe\uf0ff\uf100\uf101\uf102\uf103\uf104\uf105\uf106\uf107\uf108\uf109\uf10a\uf10b\uf10c\uf10d\uf10e\uf10f\uf110\uf111\uf112\uf113\uf114\uf115\uf116\uf117\uf118\uf119\uf11a\uf11b\uf11c\uf11d\uf11e\uf11f\uf120\uf121\uf122\uf123\uf124\uf125\uf126\uf127\uf128\uf129\uf12a\uf12b\uf12c\uf12d\uf12e\uf12f\uf130\uf131\uf132\uf133\uf134\uf135\uf136\uf137\uf138\uf139\uf13a\uf13b\uf13c\uf13d\uf13e\uf13f\uf140\uf141\uf142\uf143\uf144\uf145\uf146\uf147\uf148\uf149\uf14a\uf14b\uf14c\uf14d\uf14e\uf14f\uf150\uf151\uf152\uf153\uf154\uf155\uf156\uf157\uf158\uf159\uf15a\uf15b\uf15c\uf15d\uf15e\uf15f\uf160\uf161\uf162\uf163\uf164\uf165\uf166\uf167\uf168\uf169\uf16a\uf16b\uf16c\uf16d\uf16e\uf16f\uf170\uf171\uf172\uf173\uf174\uf175\uf176\uf177\uf178\uf179\uf17a\uf17b\uf17c\uf17d\uf17e\uf17f\uf180\uf181\uf182\uf183\uf184\uf185\uf186\uf187\uf188\uf189\uf18a\uf18b\uf18c\uf18d\uf18e\uf18f\uf190\uf191\uf192\uf193\uf194\uf195\uf196\uf197\uf198\uf199\uf19a\uf19b\uf19c\uf19d\uf19e\uf19f\uf1a0\uf1a1\uf1a2\uf1a3\uf1a4\uf1a5\uf1a6\uf1a7\uf1a8\uf1a9\uf1aa\uf1ab\uf1ac\uf1ad\uf1ae\uf1af\uf1b0\uf1b1\uf1b2\uf1b3\uf1b4\uf1b5\uf1b6\uf1b7\uf1b8\uf1b9\uf1ba\uf1bb\uf1bc\uf1bd\uf1be\uf1bf\uf1c0\uf1c1\uf1c2\uf1c3\uf1c4\uf1c5\uf1c6\uf1c7\uf1c8\uf1c9\uf1ca\uf1cb\uf1cc\uf1cd\uf1ce\uf1cf\uf1d0\uf1d1\uf1d2\uf1d3\uf1d4\uf1d5\uf1d6\uf1d7\uf1d8\uf1d9\uf1da\uf1db\uf1dc\uf1dd\uf1de\uf1df\uf1e0\uf1e1\uf1e2\uf1e3\uf1e4\uf1e5\uf1e6\uf1e7\uf1e8\uf1e9\uf1ea\uf1eb\uf1ec\uf1ed\uf1ee\uf1ef\uf1f0\uf1f1\uf1f2\uf1f3\uf1f4\uf1f5\uf1f6\uf1f7\uf1f8\uf1f9\uf1fa\uf1fb\uf1fc\uf1fd\uf1fe\uf1ff\uf200\uf201\uf202\uf203\uf204\uf205\uf206\uf207\uf208\uf209\uf20a\uf20b\uf20c\uf20d\uf20e\uf20f\uf210\uf211\uf212\uf213\uf214\uf215\uf216\uf217\uf218\uf219\uf21a\uf21b\uf21c\uf21d\uf21e\uf21f\uf220\uf221\uf222\uf223\uf224\uf225\uf226\uf227\uf228\uf229\uf22a\uf22b\uf22c\uf22d\uf22e\uf22f\uf230\uf231\uf232\uf233\uf234\uf235\uf236\uf237\uf238\uf239\uf23a\uf23b\uf23c\uf23d\uf23e\uf23f\uf240\uf241\uf242\uf243\uf244\uf245\uf246\uf247\uf248\uf249\uf24a\uf24b\uf24c\uf24d\uf24e\uf24f\uf250\uf251\uf252\uf253\uf254\uf255\uf256\uf257\uf258\uf259\uf25a\uf25b\uf25c\uf25d\uf25e\uf25f\uf260\uf261\uf262\uf263\uf264\uf265\uf266\uf267\uf268\uf269\uf26a\uf26b\uf26c\uf26d\uf26e\uf26f\uf270\uf271\uf272\uf273\uf274\uf275\uf276\uf277\uf278\uf279\uf27a\uf27b\uf27c\uf27d\uf27e\uf27f\uf280\uf281\uf282\uf283\uf284\uf285\uf286\uf287\uf288\uf289\uf28a\uf28b\uf28c\uf28d\uf28e\uf28f\uf290\uf291\uf292\uf293\uf294\uf295\uf296\uf297\uf298\uf299\uf29a\uf29b\uf29c\uf29d\uf29e\uf29f\uf2a0\uf2a1\uf2a2\uf2a3\uf2a4\uf2a5\uf2a6\uf2a7\uf2a8\uf2a9\uf2aa\uf2ab\uf2ac\uf2ad\uf2ae\uf2af\uf2b0\uf2b1\uf2b2\uf2b3\uf2b4\uf2b5\uf2b6\uf2b7\uf2b8\uf2b9\uf2ba\uf2bb\uf2bc\uf2bd\uf2be\uf2bf\uf2c0\uf2c1\uf2c2\uf2c3\uf2c4\uf2c5\uf2c6\uf2c7\uf2c8\uf2c9\uf2ca\uf2cb\uf2cc\uf2cd\uf2ce\uf2cf\uf2d0\uf2d1\uf2d2\uf2d3\uf2d4\uf2d5\uf2d6\uf2d7\uf2d8\uf2d9\uf2da\uf2db\uf2dc\uf2dd\uf2de\uf2df\uf2e0\uf2e1\uf2e2\uf2e3\uf2e4\uf2e5\uf2e6\uf2e7\uf2e8\uf2e9\uf2ea\uf2eb\uf2ec\uf2ed\uf2ee\uf2ef\uf2f0\uf2f1\uf2f2\uf2f3\uf2f4\uf2f5\uf2f6\uf2f7\uf2f8\uf2f9\uf2fa\uf2fb\uf2fc\uf2fd\uf2fe\uf2ff\uf300\uf301\uf302\uf303\uf304\uf305\uf306\uf307\uf308\uf309\uf30a\uf30b\uf30c\uf30d\uf30e\uf30f\uf310\uf311\uf312\uf313\uf314\uf315\uf316\uf317\uf318\uf319\uf31a\uf31b\uf31c\uf31d\uf31e\uf31f\uf320\uf321\uf322\uf323\uf324\uf325\uf326\uf327\uf328\uf329\uf32a\uf32b\uf32c\uf32d\uf32e\uf32f\uf330\uf331\uf332\uf333\uf334\uf335\uf336\uf337\uf338\uf339\uf33a\uf33b\uf33c\uf33d\uf33e\uf33f\uf340\uf341\uf342\uf343\uf344\uf345\uf346\uf347\uf348\uf349\uf34a\uf34b\uf34c\uf34d\uf34e\uf34f\uf350\uf351\uf352\uf353\uf354\uf355\uf356\uf357\uf358\uf359\uf35a\uf35b\uf35c\uf35d\uf35e\uf35f\uf360\uf361\uf362\uf363\uf364\uf365\uf366\uf367\uf368\uf369\uf36a\uf36b\uf36c\uf36d\uf36e\uf36f\uf370\uf371\uf372\uf373\uf374\uf375\uf376\uf377\uf378\uf379\uf37a\uf37b\uf37c\uf37d\uf37e\uf37f\uf380\uf381\uf382\uf383\uf384\uf385\uf386\uf387\uf388\uf389\uf38a\uf38b\uf38c\uf38d\uf38e\uf38f\uf390\uf391\uf392\uf393\uf394\uf395\uf396\uf397\uf398\uf399\uf39a\uf39b\uf39c\uf39d\uf39e\uf39f\uf3a0\uf3a1\uf3a2\uf3a3\uf3a4\uf3a5\uf3a6\uf3a7\uf3a8\uf3a9\uf3aa\uf3ab\uf3ac\uf3ad\uf3ae\uf3af\uf3b0\uf3b1\uf3b2\uf3b3\uf3b4\uf3b5\uf3b6\uf3b7\uf3b8\uf3b9\uf3ba\uf3bb\uf3bc\uf3bd\uf3be\uf3bf\uf3c0\uf3c1\uf3c2\uf3c3\uf3c4\uf3c5\uf3c6\uf3c7\uf3c8\uf3c9\uf3ca\uf3cb\uf3cc\uf3cd\uf3ce\uf3cf\uf3d0\uf3d1\uf3d2\uf3d3\uf3d4\uf3d5\uf3d6\uf3d7\uf3d8\uf3d9\uf3da\uf3db\uf3dc\uf3dd\uf3de\uf3df\uf3e0\uf3e1\uf3e2\uf3e3\uf3e4\uf3e5\uf3e6\uf3e7\uf3e8\uf3e9\uf3ea\uf3eb\uf3ec\uf3ed\uf3ee\uf3ef\uf3f0\uf3f1\uf3f2\uf3f3\uf3f4\uf3f5\uf3f6\uf3f7\uf3f8\uf3f9\uf3fa\uf3fb\uf3fc\uf3fd\uf3fe\uf3ff\uf400\uf401\uf402\uf403\uf404\uf405\uf406\uf407\uf408\uf409\uf40a\uf40b\uf40c\uf40d\uf40e\uf40f\uf410\uf411\uf412\uf413\uf414\uf415\uf416\uf417\uf418\uf419\uf41a\uf41b\uf41c\uf41d\uf41e\uf41f\uf420\uf421\uf422\uf423\uf424\uf425\uf426\uf427\uf428\uf429\uf42a\uf42b\uf42c\uf42d\uf42e\uf42f\uf430\uf431\uf432\uf433\uf434\uf435\uf436\uf437\uf438\uf439\uf43a\uf43b\uf43c\uf43d\uf43e\uf43f\uf440\uf441\uf442\uf443\uf444\uf445\uf446\uf447\uf448\uf449\uf44a\uf44b\uf44c\uf44d\uf44e\uf44f\uf450\uf451\uf452\uf453\uf454\uf455\uf456\uf457\uf458\uf459\uf45a\uf45b\uf45c\uf45d\uf45e\uf45f\uf460\uf461\uf462\uf463\uf464\uf465\uf466\uf467\uf468\uf469\uf46a\uf46b\uf46c\uf46d\uf46e\uf46f\uf470\uf471\uf472\uf473\uf474\uf475\uf476\uf477\uf478\uf479\uf47a\uf47b\uf47c\uf47d\uf47e\uf47f\uf480\uf481\uf482\uf483\uf484\uf485\uf486\uf487\uf488\uf489\uf48a\uf48b\uf48c\uf48d\uf48e\uf48f\uf490\uf491\uf492\uf493\uf494\uf495\uf496\uf497\uf498\uf499\uf49a\uf49b\uf49c\uf49d\uf49e\uf49f\uf4a0\uf4a1\uf4a2\uf4a3\uf4a4\uf4a5\uf4a6\uf4a7\uf4a8\uf4a9\uf4aa\uf4ab\uf4ac\uf4ad\uf4ae\uf4af\uf4b0\uf4b1\uf4b2\uf4b3\uf4b4\uf4b5\uf4b6\uf4b7\uf4b8\uf4b9\uf4ba\uf4bb\uf4bc\uf4bd\uf4be\uf4bf\uf4c0\uf4c1\uf4c2\uf4c3\uf4c4\uf4c5\uf4c6\uf4c7\uf4c8\uf4c9\uf4ca\uf4cb\uf4cc\uf4cd\uf4ce\uf4cf\uf4d0\uf4d1\uf4d2\uf4d3\uf4d4\uf4d5\uf4d6\uf4d7\uf4d8\uf4d9\uf4da\uf4db\uf4dc\uf4dd\uf4de\uf4df\uf4e0\uf4e1\uf4e2\uf4e3\uf4e4\uf4e5\uf4e6\uf4e7\uf4e8\uf4e9\uf4ea\uf4eb\uf4ec\uf4ed\uf4ee\uf4ef\uf4f0\uf4f1\uf4f2\uf4f3\uf4f4\uf4f5\uf4f6\uf4f7\uf4f8\uf4f9\uf4fa\uf4fb\uf4fc\uf4fd\uf4fe\uf4ff\uf500\uf501\uf502\uf503\uf504\uf505\uf506\uf507\uf508\uf509\uf50a\uf50b\uf50c\uf50d\uf50e\uf50f\uf510\uf511\uf512\uf513\uf514\uf515\uf516\uf517\uf518\uf519\uf51a\uf51b\uf51c\uf51d\uf51e\uf51f\uf520\uf521\uf522\uf523\uf524\uf525\uf526\uf527\uf528\uf529\uf52a\uf52b\uf52c\uf52d\uf52e\uf52f\uf530\uf531\uf532\uf533\uf534\uf535\uf536\uf537\uf538\uf539\uf53a\uf53b\uf53c\uf53d\uf53e\uf53f\uf540\uf541\uf542\uf543\uf544\uf545\uf546\uf547\uf548\uf549\uf54a\uf54b\uf54c\uf54d\uf54e\uf54f\uf550\uf551\uf552\uf553\uf554\uf555\uf556\uf557\uf558\uf559\uf55a\uf55b\uf55c\uf55d\uf55e\uf55f\uf560\uf561\uf562\uf563\uf564\uf565\uf566\uf567\uf568\uf569\uf56a\uf56b\uf56c\uf56d\uf56e\uf56f\uf570\uf571\uf572\uf573\uf574\uf575\uf576\uf577\uf578\uf579\uf57a\uf57b\uf57c\uf57d\uf57e\uf57f\uf580\uf581\uf582\uf583\uf584\uf585\uf586\uf587\uf588\uf589\uf58a\uf58b\uf58c\uf58d\uf58e\uf58f\uf590\uf591\uf592\uf593\uf594\uf595\uf596\uf597\uf598\uf599\uf59a\uf59b\uf59c\uf59d\uf59e\uf59f\uf5a0\uf5a1\uf5a2\uf5a3\uf5a4\uf5a5\uf5a6\uf5a7\uf5a8\uf5a9\uf5aa\uf5ab\uf5ac\uf5ad\uf5ae\uf5af\uf5b0\uf5b1\uf5b2\uf5b3\uf5b4\uf5b5\uf5b6\uf5b7\uf5b8\uf5b9\uf5ba\uf5bb\uf5bc\uf5bd\uf5be\uf5bf\uf5c0\uf5c1\uf5c2\uf5c3\uf5c4\uf5c5\uf5c6\uf5c7\uf5c8\uf5c9\uf5ca\uf5cb\uf5cc\uf5cd\uf5ce\uf5cf\uf5d0\uf5d1\uf5d2\uf5d3\uf5d4\uf5d5\uf5d6\uf5d7\uf5d8\uf5d9\uf5da\uf5db\uf5dc\uf5dd\uf5de\uf5df\uf5e0\uf5e1\uf5e2\uf5e3\uf5e4\uf5e5\uf5e6\uf5e7\uf5e8\uf5e9\uf5ea\uf5eb\uf5ec\uf5ed\uf5ee\uf5ef\uf5f0\uf5f1\uf5f2\uf5f3\uf5f4\uf5f5\uf5f6\uf5f7\uf5f8\uf5f9\uf5fa\uf5fb\uf5fc\uf5fd\uf5fe\uf5ff\uf600\uf601\uf602\uf603\uf604\uf605\uf606\uf607\uf608\uf609\uf60a\uf60b\uf60c\uf60d\uf60e\uf60f\uf610\uf611\uf612\uf613\uf614\uf615\uf616\uf617\uf618\uf619\uf61a\uf61b\uf61c\uf61d\uf61e\uf61f\uf620\uf621\uf622\uf623\uf624\uf625\uf626\uf627\uf628\uf629\uf62a\uf62b\uf62c\uf62d\uf62e\uf62f\uf630\uf631\uf632\uf633\uf634\uf635\uf636\uf637\uf638\uf639\uf63a\uf63b\uf63c\uf63d\uf63e\uf63f\uf640\uf641\uf642\uf643\uf644\uf645\uf646\uf647\uf648\uf649\uf64a\uf64b\uf64c\uf64d\uf64e\uf64f\uf650\uf651\uf652\uf653\uf654\uf655\uf656\uf657\uf658\uf659\uf65a\uf65b\uf65c\uf65d\uf65e\uf65f\uf660\uf661\uf662\uf663\uf664\uf665\uf666\uf667\uf668\uf669\uf66a\uf66b\uf66c\uf66d\uf66e\uf66f\uf670\uf671\uf672\uf673\uf674\uf675\uf676\uf677\uf678\uf679\uf67a\uf67b\uf67c\uf67d\uf67e\uf67f\uf680\uf681\uf682\uf683\uf684\uf685\uf686\uf687\uf688\uf689\uf68a\uf68b\uf68c\uf68d\uf68e\uf68f\uf690\uf691\uf692\uf693\uf694\uf695\uf696\uf697\uf698\uf699\uf69a\uf69b\uf69c\uf69d\uf69e\uf69f\uf6a0\uf6a1\uf6a2\uf6a3\uf6a4\uf6a5\uf6a6\uf6a7\uf6a8\uf6a9\uf6aa\uf6ab\uf6ac\uf6ad\uf6ae\uf6af\uf6b0\uf6b1\uf6b2\uf6b3\uf6b4\uf6b5\uf6b6\uf6b7\uf6b8\uf6b9\uf6ba\uf6bb\uf6bc\uf6bd\uf6be\uf6bf\uf6c0\uf6c1\uf6c2\uf6c3\uf6c4\uf6c5\uf6c6\uf6c7\uf6c8\uf6c9\uf6ca\uf6cb\uf6cc\uf6cd\uf6ce\uf6cf\uf6d0\uf6d1\uf6d2\uf6d3\uf6d4\uf6d5\uf6d6\uf6d7\uf6d8\uf6d9\uf6da\uf6db\uf6dc\uf6dd\uf6de\uf6df\uf6e0\uf6e1\uf6e2\uf6e3\uf6e4\uf6e5\uf6e6\uf6e7\uf6e8\uf6e9\uf6ea\uf6eb\uf6ec\uf6ed\uf6ee\uf6ef\uf6f0\uf6f1\uf6f2\uf6f3\uf6f4\uf6f5\uf6f6\uf6f7\uf6f8\uf6f9\uf6fa\uf6fb\uf6fc\uf6fd\uf6fe\uf6ff\uf700\uf701\uf702\uf703\uf704\uf705\uf706\uf707\uf708\uf709\uf70a\uf70b\uf70c\uf70d\uf70e\uf70f\uf710\uf711\uf712\uf713\uf714\uf715\uf716\uf717\uf718\uf719\uf71a\uf71b\uf71c\uf71d\uf71e\uf71f\uf720\uf721\uf722\uf723\uf724\uf725\uf726\uf727\uf728\uf729\uf72a\uf72b\uf72c\uf72d\uf72e\uf72f\uf730\uf731\uf732\uf733\uf734\uf735\uf736\uf737\uf738\uf739\uf73a\uf73b\uf73c\uf73d\uf73e\uf73f\uf740\uf741\uf742\uf743\uf744\uf745\uf746\uf747\uf748\uf749\uf74a\uf74b\uf74c\uf74d\uf74e\uf74f\uf750\uf751\uf752\uf753\uf754\uf755\uf756\uf757\uf758\uf759\uf75a\uf75b\uf75c\uf75d\uf75e\uf75f\uf760\uf761\uf762\uf763\uf764\uf765\uf766\uf767\uf768\uf769\uf76a\uf76b\uf76c\uf76d\uf76e\uf76f\uf770\uf771\uf772\uf773\uf774\uf775\uf776\uf777\uf778\uf779\uf77a\uf77b\uf77c\uf77d\uf77e\uf77f\uf780\uf781\uf782\uf783\uf784\uf785\uf786\uf787\uf788\uf789\uf78a\uf78b\uf78c\uf78d\uf78e\uf78f\uf790\uf791\uf792\uf793\uf794\uf795\uf796\uf797\uf798\uf799\uf79a\uf79b\uf79c\uf79d\uf79e\uf79f\uf7a0\uf7a1\uf7a2\uf7a3\uf7a4\uf7a5\uf7a6\uf7a7\uf7a8\uf7a9\uf7aa\uf7ab\uf7ac\uf7ad\uf7ae\uf7af\uf7b0\uf7b1\uf7b2\uf7b3\uf7b4\uf7b5\uf7b6\uf7b7\uf7b8\uf7b9\uf7ba\uf7bb\uf7bc\uf7bd\uf7be\uf7bf\uf7c0\uf7c1\uf7c2\uf7c3\uf7c4\uf7c5\uf7c6\uf7c7\uf7c8\uf7c9\uf7ca\uf7cb\uf7cc\uf7cd\uf7ce\uf7cf\uf7d0\uf7d1\uf7d2\uf7d3\uf7d4\uf7d5\uf7d6\uf7d7\uf7d8\uf7d9\uf7da\uf7db\uf7dc\uf7dd\uf7de\uf7df\uf7e0\uf7e1\uf7e2\uf7e3\uf7e4\uf7e5\uf7e6\uf7e7\uf7e8\uf7e9\uf7ea\uf7eb\uf7ec\uf7ed\uf7ee\uf7ef\uf7f0\uf7f1\uf7f2\uf7f3\uf7f4\uf7f5\uf7f6\uf7f7\uf7f8\uf7f9\uf7fa\uf7fb\uf7fc\uf7fd\uf7fe\uf7ff\uf800\uf801\uf802\uf803\uf804\uf805\uf806\uf807\uf808\uf809\uf80a\uf80b\uf80c\uf80d\uf80e\uf80f\uf810\uf811\uf812\uf813\uf814\uf815\uf816\uf817\uf818\uf819\uf81a\uf81b\uf81c\uf81d\uf81e\uf81f\uf820\uf821\uf822\uf823\uf824\uf825\uf826\uf827\uf828\uf829\uf82a\uf82b\uf82c\uf82d\uf82e\uf82f\uf830\uf831\uf832\uf833\uf834\uf835\uf836\uf837\uf838\uf839\uf83a\uf83b\uf83c\uf83d\uf83e\uf83f\uf840\uf841\uf842\uf843\uf844\uf845\uf846\uf847\uf848\uf849\uf84a\uf84b\uf84c\uf84d\uf84e\uf84f\uf850\uf851\uf852\uf853\uf854\uf855\uf856\uf857\uf858\uf859\uf85a\uf85b\uf85c\uf85d\uf85e\uf85f\uf860\uf861\uf862\uf863\uf864\uf865\uf866\uf867\uf868\uf869\uf86a\uf86b\uf86c\uf86d\uf86e\uf86f\uf870\uf871\uf872\uf873\uf874\uf875\uf876\uf877\uf878\uf879\uf87a\uf87b\uf87c\uf87d\uf87e\uf87f\uf880\uf881\uf882\uf883\uf884\uf885\uf886\uf887\uf888\uf889\uf88a\uf88b\uf88c\uf88d\uf88e\uf88f\uf890\uf891\uf892\uf893\uf894\uf895\uf896\uf897\uf898\uf899\uf89a\uf89b\uf89c\uf89d\uf89e\uf89f\uf8a0\uf8a1\uf8a2\uf8a3\uf8a4\uf8a5\uf8a6\uf8a7\uf8a8\uf8a9\uf8aa\uf8ab\uf8ac\uf8ad\uf8ae\uf8af\uf8b0\uf8b1\uf8b2\uf8b3\uf8b4\uf8b5\uf8b6\uf8b7\uf8b8\uf8b9\uf8ba\uf8bb\uf8bc\uf8bd\uf8be\uf8bf\uf8c0\uf8c1\uf8c2\uf8c3\uf8c4\uf8c5\uf8c6\uf8c7\uf8c8\uf8c9\uf8ca\uf8cb\uf8cc\uf8cd\uf8ce\uf8cf\uf8d0\uf8d1\uf8d2\uf8d3\uf8d4\uf8d5\uf8d6\uf8d7\uf8d8\uf8d9\uf8da\uf8db\uf8dc\uf8dd\uf8de\uf8df\uf8e0\uf8e1\uf8e2\uf8e3\uf8e4\uf8e5\uf8e6\uf8e7\uf8e8\uf8e9\uf8ea\uf8eb\uf8ec\uf8ed\uf8ee\uf8ef\uf8f0\uf8f1\uf8f2\uf8f3\uf8f4\uf8f5\uf8f6\uf8f7\uf8f8\uf8f9\uf8fa\uf8fb\uf8fc\uf8fd\uf8fe\uf8ff'
3rdparty/jinja2/_stringdefs.py:    Cs = eval(r"'\ud800\ud801\ud802\ud803\ud804\ud805\ud806\ud807\ud808\ud809\ud80a\ud80b\ud80c\ud80d\ud80e\ud80f\ud810\ud811\ud812\ud813\ud814\ud815\ud816\ud817\ud818\ud819\ud81a\ud81b\ud81c\ud81d\ud81e\ud81f\ud820\ud821\ud822\ud823\ud824\ud825\ud826\ud827\ud828\ud829\ud82a\ud82b\ud82c\ud82d\ud82e\ud82f\ud830\ud831\ud832\ud833\ud834\ud835\ud836\ud837\ud838\ud839\ud83a\ud83b\ud83c\ud83d\ud83e\ud83f\ud840\ud841\ud842\ud843\ud844\ud845\ud846\ud847\ud848\ud849\ud84a\ud84b\ud84c\ud84d\ud84e\ud84f\ud850\ud851\ud852\ud853\ud854\ud855\ud856\ud857\ud858\ud859\ud85a\ud85b\ud85c\ud85d\ud85e\ud85f\ud860\ud861\ud862\ud863\ud864\ud865\ud866\ud867\ud868\ud869\ud86a\ud86b\ud86c\ud86d\ud86e\ud86f\ud870\ud871\ud872\ud873\ud874\ud875\ud876\ud877\ud878\ud879\ud87a\ud87b\ud87c\ud87d\ud87e\ud87f\ud880\ud881\ud882\ud883\ud884\ud885\ud886\ud887\ud888\ud889\ud88a\ud88b\ud88c\ud88d\ud88e\ud88f\ud890\ud891\ud892\ud893\ud894\ud895\ud896\ud897\ud898\ud899\ud89a\ud89b\ud89c\ud89d\ud89e\ud89f\ud8a0\ud8a1\ud8a2\ud8a3\ud8a4\ud8a5\ud8a6\ud8a7\ud8a8\ud8a9\ud8aa\ud8ab\ud8ac\ud8ad\ud8ae\ud8af\ud8b0\ud8b1\ud8b2\ud8b3\ud8b4\ud8b5\ud8b6\ud8b7\ud8b8\ud8b9\ud8ba\ud8bb\ud8bc\ud8bd\ud8be\ud8bf\ud8c0\ud8c1\ud8c2\ud8c3\ud8c4\ud8c5\ud8c6\ud8c7\ud8c8\ud8c9\ud8ca\ud8cb\ud8cc\ud8cd\ud8ce\ud8cf\ud8d0\ud8d1\ud8d2\ud8d3\ud8d4\ud8d5\ud8d6\ud8d7\ud8d8\ud8d9\ud8da\ud8db\ud8dc\ud8dd\ud8de\ud8df\ud8e0\ud8e1\ud8e2\ud8e3\ud8e4\ud8e5\ud8e6\ud8e7\ud8e8\ud8e9\ud8ea\ud8eb\ud8ec\ud8ed\ud8ee\ud8ef\ud8f0\ud8f1\ud8f2\ud8f3\ud8f4\ud8f5\ud8f6\ud8f7\ud8f8\ud8f9\ud8fa\ud8fb\ud8fc\ud8fd\ud8fe\ud8ff\ud900\ud901\ud902\ud903\ud904\ud905\ud906\ud907\ud908\ud909\ud90a\ud90b\ud90c\ud90d\ud90e\ud90f\ud910\ud911\ud912\ud913\ud914\ud915\ud916\ud917\ud918\ud919\ud91a\ud91b\ud91c\ud91d\ud91e\ud91f\ud920\ud921\ud922\ud923\ud924\ud925\ud926\ud927\ud928\ud929\ud92a\ud92b\ud92c\ud92d\ud92e\ud92f\ud930\ud931\ud932\ud933\ud934\ud935\ud936\ud937\ud938\ud939\ud93a\ud93b\ud93c\ud93d\ud93e\ud93f\ud940\ud941\ud942\ud943\ud944\ud945\ud946\ud947\ud948\ud949\ud94a\ud94b\ud94c\ud94d\ud94e\ud94f\ud950\ud951\ud952\ud953\ud954\ud955\ud956\ud957\ud958\ud959\ud95a\ud95b\ud95c\ud95d\ud95e\ud95f\ud960\ud961\ud962\ud963\ud964\ud965\ud966\ud967\ud968\ud969\ud96a\ud96b\ud96c\ud96d\ud96e\ud96f\ud970\ud971\ud972\ud973\ud974\ud975\ud976\ud977\ud978\ud979\ud97a\ud97b\ud97c\ud97d\ud97e\ud97f\ud980\ud981\ud982\ud983\ud984\ud985\ud986\ud987\ud988\ud989\ud98a\ud98b\ud98c\ud98d\ud98e\ud98f\ud990\ud991\ud992\ud993\ud994\ud995\ud996\ud997\ud998\ud999\ud99a\ud99b\ud99c\ud99d\ud99e\ud99f\ud9a0\ud9a1\ud9a2\ud9a3\ud9a4\ud9a5\ud9a6\ud9a7\ud9a8\ud9a9\ud9aa\ud9ab\ud9ac\ud9ad\ud9ae\ud9af\ud9b0\ud9b1\ud9b2\ud9b3\ud9b4\ud9b5\ud9b6\ud9b7\ud9b8\ud9b9\ud9ba\ud9bb\ud9bc\ud9bd\ud9be\ud9bf\ud9c0\ud9c1\ud9c2\ud9c3\ud9c4\ud9c5\ud9c6\ud9c7\ud9c8\ud9c9\ud9ca\ud9cb\ud9cc\ud9cd\ud9ce\ud9cf\ud9d0\ud9d1\ud9d2\ud9d3\ud9d4\ud9d5\ud9d6\ud9d7\ud9d8\ud9d9\ud9da\ud9db\ud9dc\ud9dd\ud9de\ud9df\ud9e0\ud9e1\ud9e2\ud9e3\ud9e4\ud9e5\ud9e6\ud9e7\ud9e8\ud9e9\ud9ea\ud9eb\ud9ec\ud9ed\ud9ee\ud9ef\ud9f0\ud9f1\ud9f2\ud9f3\ud9f4\ud9f5\ud9f6\ud9f7\ud9f8\ud9f9\ud9fa\ud9fb\ud9fc\ud9fd\ud9fe\ud9ff\uda00\uda01\uda02\uda03\uda04\uda05\uda06\uda07\uda08\uda09\uda0a\uda0b\uda0c\uda0d\uda0e\uda0f\uda10\uda11\uda12\uda13\uda14\uda15\uda16\uda17\uda18\uda19\uda1a\uda1b\uda1c\uda1d\uda1e\uda1f\uda20\uda21\uda22\uda23\uda24\uda25\uda26\uda27\uda28\uda29\uda2a\uda2b\uda2c\uda2d\uda2e\uda2f\uda30\uda31\uda32\uda33\uda34\uda35\uda36\uda37\uda38\uda39\uda3a\uda3b\uda3c\uda3d\uda3e\uda3f\uda40\uda41\uda42\uda43\uda44\uda45\uda46\uda47\uda48\uda49\uda4a\uda4b\uda4c\uda4d\uda4e\uda4f\uda50\uda51\uda52\uda53\uda54\uda55\uda56\uda57\uda58\uda59\uda5a\uda5b\uda5c\uda5d\uda5e\uda5f\uda60\uda61\uda62\uda63\uda64\uda65\uda66\uda67\uda68\uda69\uda6a\uda6b\uda6c\uda6d\uda6e\uda6f\uda70\uda71\uda72\uda73\uda74\uda75\uda76\uda77\uda78\uda79\uda7a\uda7b\uda7c\uda7d\uda7e\uda7f\uda80\uda81\uda82\uda83\uda84\uda85\uda86\uda87\uda88\uda89\uda8a\uda8b\uda8c\uda8d\uda8e\uda8f\uda90\uda91\uda92\uda93\uda94\uda95\uda96\uda97\uda98\uda99\uda9a\uda9b\uda9c\uda9d\uda9e\uda9f\udaa0\udaa1\udaa2\udaa3\udaa4\udaa5\udaa6\udaa7\udaa8\udaa9\udaaa\udaab\udaac\udaad\udaae\udaaf\udab0\udab1\udab2\udab3\udab4\udab5\udab6\udab7\udab8\udab9\udaba\udabb\udabc\udabd\udabe\udabf\udac0\udac1\udac2\udac3\udac4\udac5\udac6\udac7\udac8\udac9\udaca\udacb\udacc\udacd\udace\udacf\udad0\udad1\udad2\udad3\udad4\udad5\udad6\udad7\udad8\udad9\udada\udadb\udadc\udadd\udade\udadf\udae0\udae1\udae2\udae3\udae4\udae5\udae6\udae7\udae8\udae9\udaea\udaeb\udaec\udaed\udaee\udaef\udaf0\udaf1\udaf2\udaf3\udaf4\udaf5\udaf6\udaf7\udaf8\udaf9\udafa\udafb\udafc\udafd\udafe\udaff\udb00\udb01\udb02\udb03\udb04\udb05\udb06\udb07\udb08\udb09\udb0a\udb0b\udb0c\udb0d\udb0e\udb0f\udb10\udb11\udb12\udb13\udb14\udb15\udb16\udb17\udb18\udb19\udb1a\udb1b\udb1c\udb1d\udb1e\udb1f\udb20\udb21\udb22\udb23\udb24\udb25\udb26\udb27\udb28\udb29\udb2a\udb2b\udb2c\udb2d\udb2e\udb2f\udb30\udb31\udb32\udb33\udb34\udb35\udb36\udb37\udb38\udb39\udb3a\udb3b\udb3c\udb3d\udb3e\udb3f\udb40\udb41\udb42\udb43\udb44\udb45\udb46\udb47\udb48\udb49\udb4a\udb4b\udb4c\udb4d\udb4e\udb4f\udb50\udb51\udb52\udb53\udb54\udb55\udb56\udb57\udb58\udb59\udb5a\udb5b\udb5c\udb5d\udb5e\udb5f\udb60\udb61\udb62\udb63\udb64\udb65\udb66\udb67\udb68\udb69\udb6a\udb6b\udb6c\udb6d\udb6e\udb6f\udb70\udb71\udb72\udb73\udb74\udb75\udb76\udb77\udb78\udb79\udb7a\udb7b\udb7c\udb7d\udb7e\udb7f\udb80\udb81\udb82\udb83\udb84\udb85\udb86\udb87\udb88\udb89\udb8a\udb8b\udb8c\udb8d\udb8e\udb8f\udb90\udb91\udb92\udb93\udb94\udb95\udb96\udb97\udb98\udb99\udb9a\udb9b\udb9c\udb9d\udb9e\udb9f\udba0\udba1\udba2\udba3\udba4\udba5\udba6\udba7\udba8\udba9\udbaa\udbab\udbac\udbad\udbae\udbaf\udbb0\udbb1\udbb2\udbb3\udbb4\udbb5\udbb6\udbb7\udbb8\udbb9\udbba\udbbb\udbbc\udbbd\udbbe\udbbf\udbc0\udbc1\udbc2\udbc3\udbc4\udbc5\udbc6\udbc7\udbc8\udbc9\udbca\udbcb\udbcc\udbcd\udbce\udbcf\udbd0\udbd1\udbd2\udbd3\udbd4\udbd5\udbd6\udbd7\udbd8\udbd9\udbda\udbdb\udbdc\udbdd\udbde\udbdf\udbe0\udbe1\udbe2\udbe3\udbe4\udbe5\udbe6\udbe7\udbe8\udbe9\udbea\udbeb\udbec\udbed\udbee\udbef\udbf0\udbf1\udbf2\udbf3\udbf4\udbf5\udbf6\udbf7\udbf8\udbf9\udbfa\udbfb\udbfc\udbfd\udbfe\U0010fc00\udc01\udc02\udc03\udc04\udc05\udc06\udc07\udc08\udc09\udc0a\udc0b\udc0c\udc0d\udc0e\udc0f\udc10\udc11\udc12\udc13\udc14\udc15\udc16\udc17\udc18\udc19\udc1a\udc1b\udc1c\udc1d\udc1e\udc1f\udc20\udc21\udc22\udc23\udc24\udc25\udc26\udc27\udc28\udc29\udc2a\udc2b\udc2c\udc2d\udc2e\udc2f\udc30\udc31\udc32\udc33\udc34\udc35\udc36\udc37\udc38\udc39\udc3a\udc3b\udc3c\udc3d\udc3e\udc3f\udc40\udc41\udc42\udc43\udc44\udc45\udc46\udc47\udc48\udc49\udc4a\udc4b\udc4c\udc4d\udc4e\udc4f\udc50\udc51\udc52\udc53\udc54\udc55\udc56\udc57\udc58\udc59\udc5a\udc5b\udc5c\udc5d\udc5e\udc5f\udc60\udc61\udc62\udc63\udc64\udc65\udc66\udc67\udc68\udc69\udc6a\udc6b\udc6c\udc6d\udc6e\udc6f\udc70\udc71\udc72\udc73\udc74\udc75\udc76\udc77\udc78\udc79\udc7a\udc7b\udc7c\udc7d\udc7e\udc7f\udc80\udc81\udc82\udc83\udc84\udc85\udc86\udc87\udc88\udc89\udc8a\udc8b\udc8c\udc8d\udc8e\udc8f\udc90\udc91\udc92\udc93\udc94\udc95\udc96\udc97\udc98\udc99\udc9a\udc9b\udc9c\udc9d\udc9e\udc9f\udca0\udca1\udca2\udca3\udca4\udca5\udca6\udca7\udca8\udca9\udcaa\udcab\udcac\udcad\udcae\udcaf\udcb0\udcb1\udcb2\udcb3\udcb4\udcb5\udcb6\udcb7\udcb8\udcb9\udcba\udcbb\udcbc\udcbd\udcbe\udcbf\udcc0\udcc1\udcc2\udcc3\udcc4\udcc5\udcc6\udcc7\udcc8\udcc9\udcca\udccb\udccc\udccd\udcce\udccf\udcd0\udcd1\udcd2\udcd3\udcd4\udcd5\udcd6\udcd7\udcd8\udcd9\udcda\udcdb\udcdc\udcdd\udcde\udcdf\udce0\udce1\udce2\udce3\udce4\udce5\udce6\udce7\udce8\udce9\udcea\udceb\udcec\udced\udcee\udcef\udcf0\udcf1\udcf2\udcf3\udcf4\udcf5\udcf6\udcf7\udcf8\udcf9\udcfa\udcfb\udcfc\udcfd\udcfe\udcff\udd00\udd01\udd02\udd03\udd04\udd05\udd06\udd07\udd08\udd09\udd0a\udd0b\udd0c\udd0d\udd0e\udd0f\udd10\udd11\udd12\udd13\udd14\udd15\udd16\udd17\udd18\udd19\udd1a\udd1b\udd1c\udd1d\udd1e\udd1f\udd20\udd21\udd22\udd23\udd24\udd25\udd26\udd27\udd28\udd29\udd2a\udd2b\udd2c\udd2d\udd2e\udd2f\udd30\udd31\udd32\udd33\udd34\udd35\udd36\udd37\udd38\udd39\udd3a\udd3b\udd3c\udd3d\udd3e\udd3f\udd40\udd41\udd42\udd43\udd44\udd45\udd46\udd47\udd48\udd49\udd4a\udd4b\udd4c\udd4d\udd4e\udd4f\udd50\udd51\udd52\udd53\udd54\udd55\udd56\udd57\udd58\udd59\udd5a\udd5b\udd5c\udd5d\udd5e\udd5f\udd60\udd61\udd62\udd63\udd64\udd65\udd66\udd67\udd68\udd69\udd6a\udd6b\udd6c\udd6d\udd6e\udd6f\udd70\udd71\udd72\udd73\udd74\udd75\udd76\udd77\udd78\udd79\udd7a\udd7b\udd7c\udd7d\udd7e\udd7f\udd80\udd81\udd82\udd83\udd84\udd85\udd86\udd87\udd88\udd89\udd8a\udd8b\udd8c\udd8d\udd8e\udd8f\udd90\udd91\udd92\udd93\udd94\udd95\udd96\udd97\udd98\udd99\udd9a\udd9b\udd9c\udd9d\udd9e\udd9f\udda0\udda1\udda2\udda3\udda4\udda5\udda6\udda7\udda8\udda9\uddaa\uddab\uddac\uddad\uddae\uddaf\uddb0\uddb1\uddb2\uddb3\uddb4\uddb5\uddb6\uddb7\uddb8\uddb9\uddba\uddbb\uddbc\uddbd\uddbe\uddbf\uddc0\uddc1\uddc2\uddc3\uddc4\uddc5\uddc6\uddc7\uddc8\uddc9\uddca\uddcb\uddcc\uddcd\uddce\uddcf\uddd0\uddd1\uddd2\uddd3\uddd4\uddd5\uddd6\uddd7\uddd8\uddd9\uddda\udddb\udddc\udddd\uddde\udddf\udde0\udde1\udde2\udde3\udde4\udde5\udde6\udde7\udde8\udde9\uddea\uddeb\uddec\udded\uddee\uddef\uddf0\uddf1\uddf2\uddf3\uddf4\uddf5\uddf6\uddf7\uddf8\uddf9\uddfa\uddfb\uddfc\uddfd\uddfe\uddff\ude00\ude01\ude02\ude03\ude04\ude05\ude06\ude07\ude08\ude09\ude0a\ude0b\ude0c\ude0d\ude0e\ude0f\ude10\ude11\ude12\ude13\ude14\ude15\ude16\ude17\ude18\ude19\ude1a\ude1b\ude1c\ude1d\ude1e\ude1f\ude20\ude21\ude22\ude23\ude24\ude25\ude26\ude27\ude28\ude29\ude2a\ude2b\ude2c\ude2d\ude2e\ude2f\ude30\ude31\ude32\ude33\ude34\ude35\ude36\ude37\ude38\ude39\ude3a\ude3b\ude3c\ude3d\ude3e\ude3f\ude40\ude41\ude42\ude43\ude44\ude45\ude46\ude47\ude48\ude49\ude4a\ude4b\ude4c\ude4d\ude4e\ude4f\ude50\ude51\ude52\ude53\ude54\ude55\ude56\ude57\ude58\ude59\ude5a\ude5b\ude5c\ude5d\ude5e\ude5f\ude60\ude61\ude62\ude63\ude64\ude65\ude66\ude67\ude68\ude69\ude6a\ude6b\ude6c\ude6d\ude6e\ude6f\ude70\ude71\ude72\ude73\ude74\ude75\ude76\ude77\ude78\ude79\ude7a\ude7b\ude7c\ude7d\ude7e\ude7f\ude80\ude81\ude82\ude83\ude84\ude85\ude86\ude87\ude88\ude89\ude8a\ude8b\ude8c\ude8d\ude8e\ude8f\ude90\ude91\ude92\ude93\ude94\ude95\ude96\ude97\ude98\ude99\ude9a\ude9b\ude9c\ude9d\ude9e\ude9f\udea0\udea1\udea2\udea3\udea4\udea5\udea6\udea7\udea8\udea9\udeaa\udeab\udeac\udead\udeae\udeaf\udeb0\udeb1\udeb2\udeb3\udeb4\udeb5\udeb6\udeb7\udeb8\udeb9\udeba\udebb\udebc\udebd\udebe\udebf\udec0\udec1\udec2\udec3\udec4\udec5\udec6\udec7\udec8\udec9\udeca\udecb\udecc\udecd\udece\udecf\uded0\uded1\uded2\uded3\uded4\uded5\uded6\uded7\uded8\uded9\udeda\udedb\udedc\udedd\udede\udedf\udee0\udee1\udee2\udee3\udee4\udee5\udee6\udee7\udee8\udee9\udeea\udeeb\udeec\udeed\udeee\udeef\udef0\udef1\udef2\udef3\udef4\udef5\udef6\udef7\udef8\udef9\udefa\udefb\udefc\udefd\udefe\udeff\udf00\udf01\udf02\udf03\udf04\udf05\udf06\udf07\udf08\udf09\udf0a\udf0b\udf0c\udf0d\udf0e\udf0f\udf10\udf11\udf12\udf13\udf14\udf15\udf16\udf17\udf18\udf19\udf1a\udf1b\udf1c\udf1d\udf1e\udf1f\udf20\udf21\udf22\udf23\udf24\udf25\udf26\udf27\udf28\udf29\udf2a\udf2b\udf2c\udf2d\udf2e\udf2f\udf30\udf31\udf32\udf33\udf34\udf35\udf36\udf37\udf38\udf39\udf3a\udf3b\udf3c\udf3d\udf3e\udf3f\udf40\udf41\udf42\udf43\udf44\udf45\udf46\udf47\udf48\udf49\udf4a\udf4b\udf4c\udf4d\udf4e\udf4f\udf50\udf51\udf52\udf53\udf54\udf55\udf56\udf57\udf58\udf59\udf5a\udf5b\udf5c\udf5d\udf5e\udf5f\udf60\udf61\udf62\udf63\udf64\udf65\udf66\udf67\udf68\udf69\udf6a\udf6b\udf6c\udf6d\udf6e\udf6f\udf70\udf71\udf72\udf73\udf74\udf75\udf76\udf77\udf78\udf79\udf7a\udf7b\udf7c\udf7d\udf7e\udf7f\udf80\udf81\udf82\udf83\udf84\udf85\udf86\udf87\udf88\udf89\udf8a\udf8b\udf8c\udf8d\udf8e\udf8f\udf90\udf91\udf92\udf93\udf94\udf95\udf96\udf97\udf98\udf99\udf9a\udf9b\udf9c\udf9d\udf9e\udf9f\udfa0\udfa1\udfa2\udfa3\udfa4\udfa5\udfa6\udfa7\udfa8\udfa9\udfaa\udfab\udfac\udfad\udfae\udfaf\udfb0\udfb1\udfb2\udfb3\udfb4\udfb5\udfb6\udfb7\udfb8\udfb9\udfba\udfbb\udfbc\udfbd\udfbe\udfbf\udfc0\udfc1\udfc2\udfc3\udfc4\udfc5\udfc6\udfc7\udfc8\udfc9\udfca\udfcb\udfcc\udfcd\udfce\udfcf\udfd0\udfd1\udfd2\udfd3\udfd4\udfd5\udfd6\udfd7\udfd8\udfd9\udfda\udfdb\udfdc\udfdd\udfde\udfdf\udfe0\udfe1\udfe2\udfe3\udfe4\udfe5\udfe6\udfe7\udfe8\udfe9\udfea\udfeb\udfec\udfed\udfee\udfef\udff0\udff1\udff2\udff3\udff4\udff5\udff6\udff7\udff8\udff9\udffa\udffb\udffc\udffd\udffe\udfff'")
3rdparty/jinja2/_stringdefs.py:Ll = u'abcdefghijklmnopqrstuvwxyz\xaa\xb5\xba\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\u0101\u0103\u0105\u0107\u0109\u010b\u010d\u010f\u0111\u0113\u0115\u0117\u0119\u011b\u011d\u011f\u0121\u0123\u0125\u0127\u0129\u012b\u012d\u012f\u0131\u0133\u0135\u0137\u0138\u013a\u013c\u013e\u0140\u0142\u0144\u0146\u0148\u0149\u014b\u014d\u014f\u0151\u0153\u0155\u0157\u0159\u015b\u015d\u015f\u0161\u0163\u0165\u0167\u0169\u016b\u016d\u016f\u0171\u0173\u0175\u0177\u017a\u017c\u017e\u017f\u0180\u0183\u0185\u0188\u018c\u018d\u0192\u0195\u0199\u019a\u019b\u019e\u01a1\u01a3\u01a5\u01a8\u01aa\u01ab\u01ad\u01b0\u01b4\u01b6\u01b9\u01ba\u01bd\u01be\u01bf\u01c6\u01c9\u01cc\u01ce\u01d0\u01d2\u01d4\u01d6\u01d8\u01da\u01dc\u01dd\u01df\u01e1\u01e3\u01e5\u01e7\u01e9\u01eb\u01ed\u01ef\u01f0\u01f3\u01f5\u01f9\u01fb\u01fd\u01ff\u0201\u0203\u0205\u0207\u0209\u020b\u020d\u020f\u0211\u0213\u0215\u0217\u0219\u021b\u021d\u021f\u0221\u0223\u0225\u0227\u0229\u022b\u022d\u022f\u0231\u0233\u0234\u0235\u0236\u0237\u0238\u0239\u023c\u023f\u0240\u0250\u0251\u0252\u0253\u0254\u0255\u0256\u0257\u0258\u0259\u025a\u025b\u025c\u025d\u025e\u025f\u0260\u0261\u0262\u0263\u0264\u0265\u0266\u0267\u0268\u0269\u026a\u026b\u026c\u026d\u026e\u026f\u0270\u0271\u0272\u0273\u0274\u0275\u0276\u0277\u0278\u0279\u027a\u027b\u027c\u027d\u027e\u027f\u0280\u0281\u0282\u0283\u0284\u0285\u0286\u0287\u0288\u0289\u028a\u028b\u028c\u028d\u028e\u028f\u0290\u0291\u0292\u0293\u0294\u0295\u0296\u0297\u0298\u0299\u029a\u029b\u029c\u029d\u029e\u029f\u02a0\u02a1\u02a2\u02a3\u02a4\u02a5\u02a6\u02a7\u02a8\u02a9\u02aa\u02ab\u02ac\u02ad\u02ae\u02af\u0390\u03ac\u03ad\u03ae\u03af\u03b0\u03b1\u03b2\u03b3\u03b4\u03b5\u03b6\u03b7\u03b8\u03b9\u03ba\u03bb\u03bc\u03bd\u03be\u03bf\u03c0\u03c1\u03c2\u03c3\u03c4\u03c5\u03c6\u03c7\u03c8\u03c9\u03ca\u03cb\u03cc\u03cd\u03ce\u03d0\u03d1\u03d5\u03d6\u03d7\u03d9\u03db\u03dd\u03df\u03e1\u03e3\u03e5\u03e7\u03e9\u03eb\u03ed\u03ef\u03f0\u03f1\u03f2\u03f3\u03f5\u03f8\u03fb\u03fc\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f\u0450\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045a\u045b\u045c\u045d\u045e\u045f\u0461\u0463\u0465\u0467\u0469\u046b\u046d\u046f\u0471\u0473\u0475\u0477\u0479\u047b\u047d\u047f\u0481\u048b\u048d\u048f\u0491\u0493\u0495\u0497\u0499\u049b\u049d\u049f\u04a1\u04a3\u04a5\u04a7\u04a9\u04ab\u04ad\u04af\u04b1\u04b3\u04b5\u04b7\u04b9\u04bb\u04bd\u04bf\u04c2\u04c4\u04c6\u04c8\u04ca\u04cc\u04ce\u04d1\u04d3\u04d5\u04d7\u04d9\u04db\u04dd\u04df\u04e1\u04e3\u04e5\u04e7\u04e9\u04eb\u04ed\u04ef\u04f1\u04f3\u04f5\u04f7\u04f9\u0501\u0503\u0505\u0507\u0509\u050b\u050d\u050f\u0561\u0562\u0563\u0564\u0565\u0566\u0567\u0568\u0569\u056a\u056b\u056c\u056d\u056e\u056f\u0570\u0571\u0572\u0573\u0574\u0575\u0576\u0577\u0578\u0579\u057a\u057b\u057c\u057d\u057e\u057f\u0580\u0581\u0582\u0583\u0584\u0585\u0586\u0587\u1d00\u1d01\u1d02\u1d03\u1d04\u1d05\u1d06\u1d07\u1d08\u1d09\u1d0a\u1d0b\u1d0c\u1d0d\u1d0e\u1d0f\u1d10\u1d11\u1d12\u1d13\u1d14\u1d15\u1d16\u1d17\u1d18\u1d19\u1d1a\u1d1b\u1d1c\u1d1d\u1d1e\u1d1f\u1d20\u1d21\u1d22\u1d23\u1d24\u1d25\u1d26\u1d27\u1d28\u1d29\u1d2a\u1d2b\u1d62\u1d63\u1d64\u1d65\u1d66\u1d67\u1d68\u1d69\u1d6a\u1d6b\u1d6c\u1d6d\u1d6e\u1d6f\u1d70\u1d71\u1d72\u1d73\u1d74\u1d75\u1d76\u1d77\u1d79\u1d7a\u1d7b\u1d7c\u1d7d\u1d7e\u1d7f\u1d80\u1d81\u1d82\u1d83\u1d84\u1d85\u1d86\u1d87\u1d88\u1d89\u1d8a\u1d8b\u1d8c\u1d8d\u1d8e\u1d8f\u1d90\u1d91\u1d92\u1d93\u1d94\u1d95\u1d96\u1d97\u1d98\u1d99\u1d9a\u1e01\u1e03\u1e05\u1e07\u1e09\u1e0b\u1e0d\u1e0f\u1e11\u1e13\u1e15\u1e17\u1e19\u1e1b\u1e1d\u1e1f\u1e21\u1e23\u1e25\u1e27\u1e29\u1e2b\u1e2d\u1e2f\u1e31\u1e33\u1e35\u1e37\u1e39\u1e3b\u1e3d\u1e3f\u1e41\u1e43\u1e45\u1e47\u1e49\u1e4b\u1e4d\u1e4f\u1e51\u1e53\u1e55\u1e57\u1e59\u1e5b\u1e5d\u1e5f\u1e61\u1e63\u1e65\u1e67\u1e69\u1e6b\u1e6d\u1e6f\u1e71\u1e73\u1e75\u1e77\u1e79\u1e7b\u1e7d\u1e7f\u1e81\u1e83\u1e85\u1e87\u1e89\u1e8b\u1e8d\u1e8f\u1e91\u1e93\u1e95\u1e96\u1e97\u1e98\u1e99\u1e9a\u1e9b\u1ea1\u1ea3\u1ea5\u1ea7\u1ea9\u1eab\u1ead\u1eaf\u1eb1\u1eb3\u1eb5\u1eb7\u1eb9\u1ebb\u1ebd\u1ebf\u1ec1\u1ec3\u1ec5\u1ec7\u1ec9\u1ecb\u1ecd\u1ecf\u1ed1\u1ed3\u1ed5\u1ed7\u1ed9\u1edb\u1edd\u1edf\u1ee1\u1ee3\u1ee5\u1ee7\u1ee9\u1eeb\u1eed\u1eef\u1ef1\u1ef3\u1ef5\u1ef7\u1ef9\u1f00\u1f01\u1f02\u1f03\u1f04\u1f05\u1f06\u1f07\u1f10\u1f11\u1f12\u1f13\u1f14\u1f15\u1f20\u1f21\u1f22\u1f23\u1f24\u1f25\u1f26\u1f27\u1f30\u1f31\u1f32\u1f33\u1f34\u1f35\u1f36\u1f37\u1f40\u1f41\u1f42\u1f43\u1f44\u1f45\u1f50\u1f51\u1f52\u1f53\u1f54\u1f55\u1f56\u1f57\u1f60\u1f61\u1f62\u1f63\u1f64\u1f65\u1f66\u1f67\u1f70\u1f71\u1f72\u1f73\u1f74\u1f75\u1f76\u1f77\u1f78\u1f79\u1f7a\u1f7b\u1f7c\u1f7d\u1f80\u1f81\u1f82\u1f83\u1f84\u1f85\u1f86\u1f87\u1f90\u1f91\u1f92\u1f93\u1f94\u1f95\u1f96\u1f97\u1fa0\u1fa1\u1fa2\u1fa3\u1fa4\u1fa5\u1fa6\u1fa7\u1fb0\u1fb1\u1fb2\u1fb3\u1fb4\u1fb6\u1fb7\u1fbe\u1fc2\u1fc3\u1fc4\u1fc6\u1fc7\u1fd0\u1fd1\u1fd2\u1fd3\u1fd6\u1fd7\u1fe0\u1fe1\u1fe2\u1fe3\u1fe4\u1fe5\u1fe6\u1fe7\u1ff2\u1ff3\u1ff4\u1ff6\u1ff7\u2071\u207f\u210a\u210e\u210f\u2113\u212f\u2134\u2139\u213c\u213d\u2146\u2147\u2148\u2149\u2c30\u2c31\u2c32\u2c33\u2c34\u2c35\u2c36\u2c37\u2c38\u2c39\u2c3a\u2c3b\u2c3c\u2c3d\u2c3e\u2c3f\u2c40\u2c41\u2c42\u2c43\u2c44\u2c45\u2c46\u2c47\u2c48\u2c49\u2c4a\u2c4b\u2c4c\u2c4d\u2c4e\u2c4f\u2c50\u2c51\u2c52\u2c53\u2c54\u2c55\u2c56\u2c57\u2c58\u2c59\u2c5a\u2c5b\u2c5c\u2c5d\u2c5e\u2c81\u2c83\u2c85\u2c87\u2c89\u2c8b\u2c8d\u2c8f\u2c91\u2c93\u2c95\u2c97\u2c99\u2c9b\u2c9d\u2c9f\u2ca1\u2ca3\u2ca5\u2ca7\u2ca9\u2cab\u2cad\u2caf\u2cb1\u2cb3\u2cb5\u2cb7\u2cb9\u2cbb\u2cbd\u2cbf\u2cc1\u2cc3\u2cc5\u2cc7\u2cc9\u2ccb\u2ccd\u2ccf\u2cd1\u2cd3\u2cd5\u2cd7\u2cd9\u2cdb\u2cdd\u2cdf\u2ce1\u2ce3\u2ce4\u2d00\u2d01\u2d02\u2d03\u2d04\u2d05\u2d06\u2d07\u2d08\u2d09\u2d0a\u2d0b\u2d0c\u2d0d\u2d0e\u2d0f\u2d10\u2d11\u2d12\u2d13\u2d14\u2d15\u2d16\u2d17\u2d18\u2d19\u2d1a\u2d1b\u2d1c\u2d1d\u2d1e\u2d1f\u2d20\u2d21\u2d22\u2d23\u2d24\u2d25\ufb00\ufb01\ufb02\ufb03\ufb04\ufb05\ufb06\ufb13\ufb14\ufb15\ufb16\ufb17\uff41\uff42\uff43\uff44\uff45\uff46\uff47\uff48\uff49\uff4a\uff4b\uff4c\uff4d\uff4e\uff4f\uff50\uff51\uff52\uff53\uff54\uff55\uff56\uff57\uff58\uff59\uff5a'
3rdparty/jinja2/_stringdefs.py:Lm = u'\u02b0\u02b1\u02b2\u02b3\u02b4\u02b5\u02b6\u02b7\u02b8\u02b9\u02ba\u02bb\u02bc\u02bd\u02be\u02bf\u02c0\u02c1\u02c6\u02c7\u02c8\u02c9\u02ca\u02cb\u02cc\u02cd\u02ce\u02cf\u02d0\u02d1\u02e0\u02e1\u02e2\u02e3\u02e4\u02ee\u037a\u0559\u0640\u06e5\u06e6\u0e46\u0ec6\u10fc\u17d7\u1843\u1d2c\u1d2d\u1d2e\u1d2f\u1d30\u1d31\u1d32\u1d33\u1d34\u1d35\u1d36\u1d37\u1d38\u1d39\u1d3a\u1d3b\u1d3c\u1d3d\u1d3e\u1d3f\u1d40\u1d41\u1d42\u1d43\u1d44\u1d45\u1d46\u1d47\u1d48\u1d49\u1d4a\u1d4b\u1d4c\u1d4d\u1d4e\u1d4f\u1d50\u1d51\u1d52\u1d53\u1d54\u1d55\u1d56\u1d57\u1d58\u1d59\u1d5a\u1d5b\u1d5c\u1d5d\u1d5e\u1d5f\u1d60\u1d61\u1d78\u1d9b\u1d9c\u1d9d\u1d9e\u1d9f\u1da0\u1da1\u1da2\u1da3\u1da4\u1da5\u1da6\u1da7\u1da8\u1da9\u1daa\u1dab\u1dac\u1dad\u1dae\u1daf\u1db0\u1db1\u1db2\u1db3\u1db4\u1db5\u1db6\u1db7\u1db8\u1db9\u1dba\u1dbb\u1dbc\u1dbd\u1dbe\u1dbf\u2090\u2091\u2092\u2093\u2094\u2d6f\u3005\u3031\u3032\u3033\u3034\u3035\u303b\u309d\u309e\u30fc\u30fd\u30fe\ua015\uff70\uff9e\uff9f'
3rdparty/jinja2/_stringdefs.py:Lo = u'\u01bb\u01c0\u01c1\u01c2\u01c3\u05d0\u05d1\u05d2\u05d3\u05d4\u05d5\u05d6\u05d7\u05d8\u05d9\u05da\u05db\u05dc\u05dd\u05de\u05df\u05e0\u05e1\u05e2\u05e3\u05e4\u05e5\u05e6\u05e7\u05e8\u05e9\u05ea\u05f0\u05f1\u05f2\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062a\u062b\u062c\u062d\u062e\u062f\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063a\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064a\u066e\u066f\u0671\u0672\u0673\u0674\u0675\u0676\u0677\u0678\u0679\u067a\u067b\u067c\u067d\u067e\u067f\u0680\u0681\u0682\u0683\u0684\u0685\u0686\u0687\u0688\u0689\u068a\u068b\u068c\u068d\u068e\u068f\u0690\u0691\u0692\u0693\u0694\u0695\u0696\u0697\u0698\u0699\u069a\u069b\u069c\u069d\u069e\u069f\u06a0\u06a1\u06a2\u06a3\u06a4\u06a5\u06a6\u06a7\u06a8\u06a9\u06aa\u06ab\u06ac\u06ad\u06ae\u06af\u06b0\u06b1\u06b2\u06b3\u06b4\u06b5\u06b6\u06b7\u06b8\u06b9\u06ba\u06bb\u06bc\u06bd\u06be\u06bf\u06c0\u06c1\u06c2\u06c3\u06c4\u06c5\u06c6\u06c7\u06c8\u06c9\u06ca\u06cb\u06cc\u06cd\u06ce\u06cf\u06d0\u06d1\u06d2\u06d3\u06d5\u06ee\u06ef\u06fa\u06fb\u06fc\u06ff\u0710\u0712\u0713\u0714\u0715\u0716\u0717\u0718\u0719\u071a\u071b\u071c\u071d\u071e\u071f\u0720\u0721\u0722\u0723\u0724\u0725\u0726\u0727\u0728\u0729\u072a\u072b\u072c\u072d\u072e\u072f\u074d\u074e\u074f\u0750\u0751\u0752\u0753\u0754\u0755\u0756\u0757\u0758\u0759\u075a\u075b\u075c\u075d\u075e\u075f\u0760\u0761\u0762\u0763\u0764\u0765\u0766\u0767\u0768\u0769\u076a\u076b\u076c\u076d\u0780\u0781\u0782\u0783\u0784\u0785\u0786\u0787\u0788\u0789\u078a\u078b\u078c\u078d\u078e\u078f\u0790\u0791\u0792\u0793\u0794\u0795\u0796\u0797\u0798\u0799\u079a\u079b\u079c\u079d\u079e\u079f\u07a0\u07a1\u07a2\u07a3\u07a4\u07a5\u07b1\u0904\u0905\u0906\u0907\u0908\u0909\u090a\u090b\u090c\u090d\u090e\u090f\u0910\u0911\u0912\u0913\u0914\u0915\u0916\u0917\u0918\u0919\u091a\u091b\u091c\u091d\u091e\u091f\u0920\u0921\u0922\u0923\u0924\u0925\u0926\u0927\u0928\u0929\u092a\u092b\u092c\u092d\u092e\u092f\u0930\u0931\u0932\u0933\u0934\u0935\u0936\u0937\u0938\u0939\u093d\u0950\u0958\u0959\u095a\u095b\u095c\u095d\u095e\u095f\u0960\u0961\u097d\u0985\u0986\u0987\u0988\u0989\u098a\u098b\u098c\u098f\u0990\u0993\u0994\u0995\u0996\u0997\u0998\u0999\u099a\u099b\u099c\u099d\u099e\u099f\u09a0\u09a1\u09a2\u09a3\u09a4\u09a5\u09a6\u09a7\u09a8\u09aa\u09ab\u09ac\u09ad\u09ae\u09af\u09b0\u09b2\u09b6\u09b7\u09b8\u09b9\u09bd\u09ce\u09dc\u09dd\u09df\u09e0\u09e1\u09f0\u09f1\u0a05\u0a06\u0a07\u0a08\u0a09\u0a0a\u0a0f\u0a10\u0a13\u0a14\u0a15\u0a16\u0a17\u0a18\u0a19\u0a1a\u0a1b\u0a1c\u0a1d\u0a1e\u0a1f\u0a20\u0a21\u0a22\u0a23\u0a24\u0a25\u0a26\u0a27\u0a28\u0a2a\u0a2b\u0a2c\u0a2d\u0a2e\u0a2f\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59\u0a5a\u0a5b\u0a5c\u0a5e\u0a72\u0a73\u0a74\u0a85\u0a86\u0a87\u0a88\u0a89\u0a8a\u0a8b\u0a8c\u0a8d\u0a8f\u0a90\u0a91\u0a93\u0a94\u0a95\u0a96\u0a97\u0a98\u0a99\u0a9a\u0a9b\u0a9c\u0a9d\u0a9e\u0a9f\u0aa0\u0aa1\u0aa2\u0aa3\u0aa4\u0aa5\u0aa6\u0aa7\u0aa8\u0aaa\u0aab\u0aac\u0aad\u0aae\u0aaf\u0ab0\u0ab2\u0ab3\u0ab5\u0ab6\u0ab7\u0ab8\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05\u0b06\u0b07\u0b08\u0b09\u0b0a\u0b0b\u0b0c\u0b0f\u0b10\u0b13\u0b14\u0b15\u0b16\u0b17\u0b18\u0b19\u0b1a\u0b1b\u0b1c\u0b1d\u0b1e\u0b1f\u0b20\u0b21\u0b22\u0b23\u0b24\u0b25\u0b26\u0b27\u0b28\u0b2a\u0b2b\u0b2c\u0b2d\u0b2e\u0b2f\u0b30\u0b32\u0b33\u0b35\u0b36\u0b37\u0b38\u0b39\u0b3d\u0b5c\u0b5d\u0b5f\u0b60\u0b61\u0b71\u0b83\u0b85\u0b86\u0b87\u0b88\u0b89\u0b8a\u0b8e\u0b8f\u0b90\u0b92\u0b93\u0b94\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8\u0ba9\u0baa\u0bae\u0baf\u0bb0\u0bb1\u0bb2\u0bb3\u0bb4\u0bb5\u0bb6\u0bb7\u0bb8\u0bb9\u0c05\u0c06\u0c07\u0c08\u0c09\u0c0a\u0c0b\u0c0c\u0c0e\u0c0f\u0c10\u0c12\u0c13\u0c14\u0c15\u0c16\u0c17\u0c18\u0c19\u0c1a\u0c1b\u0c1c\u0c1d\u0c1e\u0c1f\u0c20\u0c21\u0c22\u0c23\u0c24\u0c25\u0c26\u0c27\u0c28\u0c2a\u0c2b\u0c2c\u0c2d\u0c2e\u0c2f\u0c30\u0c31\u0c32\u0c33\u0c35\u0c36\u0c37\u0c38\u0c39\u0c60\u0c61\u0c85\u0c86\u0c87\u0c88\u0c89\u0c8a\u0c8b\u0c8c\u0c8e\u0c8f\u0c90\u0c92\u0c93\u0c94\u0c95\u0c96\u0c97\u0c98\u0c99\u0c9a\u0c9b\u0c9c\u0c9d\u0c9e\u0c9f\u0ca0\u0ca1\u0ca2\u0ca3\u0ca4\u0ca5\u0ca6\u0ca7\u0ca8\u0caa\u0cab\u0cac\u0cad\u0cae\u0caf\u0cb0\u0cb1\u0cb2\u0cb3\u0cb5\u0cb6\u0cb7\u0cb8\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0d05\u0d06\u0d07\u0d08\u0d09\u0d0a\u0d0b\u0d0c\u0d0e\u0d0f\u0d10\u0d12\u0d13\u0d14\u0d15\u0d16\u0d17\u0d18\u0d19\u0d1a\u0d1b\u0d1c\u0d1d\u0d1e\u0d1f\u0d20\u0d21\u0d22\u0d23\u0d24\u0d25\u0d26\u0d27\u0d28\u0d2a\u0d2b\u0d2c\u0d2d\u0d2e\u0d2f\u0d30\u0d31\u0d32\u0d33\u0d34\u0d35\u0d36\u0d37\u0d38\u0d39\u0d60\u0d61\u0d85\u0d86\u0d87\u0d88\u0d89\u0d8a\u0d8b\u0d8c\u0d8d\u0d8e\u0d8f\u0d90\u0d91\u0d92\u0d93\u0d94\u0d95\u0d96\u0d9a\u0d9b\u0d9c\u0d9d\u0d9e\u0d9f\u0da0\u0da1\u0da2\u0da3\u0da4\u0da5\u0da6\u0da7\u0da8\u0da9\u0daa\u0dab\u0dac\u0dad\u0dae\u0daf\u0db0\u0db1\u0db3\u0db4\u0db5\u0db6\u0db7\u0db8\u0db9\u0dba\u0dbb\u0dbd\u0dc0\u0dc1\u0dc2\u0dc3\u0dc4\u0dc5\u0dc6\u0e01\u0e02\u0e03\u0e04\u0e05\u0e06\u0e07\u0e08\u0e09\u0e0a\u0e0b\u0e0c\u0e0d\u0e0e\u0e0f\u0e10\u0e11\u0e12\u0e13\u0e14\u0e15\u0e16\u0e17\u0e18\u0e19\u0e1a\u0e1b\u0e1c\u0e1d\u0e1e\u0e1f\u0e20\u0e21\u0e22\u0e23\u0e24\u0e25\u0e26\u0e27\u0e28\u0e29\u0e2a\u0e2b\u0e2c\u0e2d\u0e2e\u0e2f\u0e30\u0e32\u0e33\u0e40\u0e41\u0e42\u0e43\u0e44\u0e45\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94\u0e95\u0e96\u0e97\u0e99\u0e9a\u0e9b\u0e9c\u0e9d\u0e9e\u0e9f\u0ea1\u0ea2\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead\u0eae\u0eaf\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0\u0ec1\u0ec2\u0ec3\u0ec4\u0edc\u0edd\u0f00\u0f40\u0f41\u0f42\u0f43\u0f44\u0f45\u0f46\u0f47\u0f49\u0f4a\u0f4b\u0f4c\u0f4d\u0f4e\u0f4f\u0f50\u0f51\u0f52\u0f53\u0f54\u0f55\u0f56\u0f57\u0f58\u0f59\u0f5a\u0f5b\u0f5c\u0f5d\u0f5e\u0f5f\u0f60\u0f61\u0f62\u0f63\u0f64\u0f65\u0f66\u0f67\u0f68\u0f69\u0f6a\u0f88\u0f89\u0f8a\u0f8b\u1000\u1001\u1002\u1003\u1004\u1005\u1006\u1007\u1008\u1009\u100a\u100b\u100c\u100d\u100e\u100f\u1010\u1011\u1012\u1013\u1014\u1015\u1016\u1017\u1018\u1019\u101a\u101b\u101c\u101d\u101e\u101f\u1020\u1021\u1023\u1024\u1025\u1026\u1027\u1029\u102a\u1050\u1051\u1052\u1053\u1054\u1055\u10d0\u10d1\u10d2\u10d3\u10d4\u10d5\u10d6\u10d7\u10d8\u10d9\u10da\u10db\u10dc\u10dd\u10de\u10df\u10e0\u10e1\u10e2\u10e3\u10e4\u10e5\u10e6\u10e7\u10e8\u10e9\u10ea\u10eb\u10ec\u10ed\u10ee\u10ef\u10f0\u10f1\u10f2\u10f3\u10f4\u10f5\u10f6\u10f7\u10f8\u10f9\u10fa\u1100\u1101\u1102\u1103\u1104\u1105\u1106\u1107\u1108\u1109\u110a\u110b\u110c\u110d\u110e\u110f\u1110\u1111\u1112\u1113\u1114\u1115\u1116\u1117\u1118\u1119\u111a\u111b\u111c\u111d\u111e\u111f\u1120\u1121\u1122\u1123\u1124\u1125\u1126\u1127\u1128\u1129\u112a\u112b\u112c\u112d\u112e\u112f\u1130\u1131\u1132\u1133\u1134\u1135\u1136\u1137\u1138\u1139\u113a\u113b\u113c\u113d\u113e\u113f\u1140\u1141\u1142\u1143\u1144\u1145\u1146\u1147\u1148\u1149\u114a\u114b\u114c\u114d\u114e\u114f\u1150\u1151\u1152\u1153\u1154\u1155\u1156\u1157\u1158\u1159\u115f\u1160\u1161\u1162\u1163\u1164\u1165\u1166\u1167\u1168\u1169\u116a\u116b\u116c\u116d\u116e\u116f\u1170\u1171\u1172\u1173\u1174\u1175\u1176\u1177\u1178\u1179\u117a\u117b\u117c\u117d\u117e\u117f\u1180\u1181\u1182\u1183\u1184\u1185\u1186\u1187\u1188\u1189\u118a\u118b\u118c\u118d\u118e\u118f\u1190\u1191\u1192\u1193\u1194\u1195\u1196\u1197\u1198\u1199\u119a\u119b\u119c\u119d\u119e\u119f\u11a0\u11a1\u11a2\u11a8\u11a9\u11aa\u11ab\u11ac\u11ad\u11ae\u11af\u11b0\u11b1\u11b2\u11b3\u11b4\u11b5\u11b6\u11b7\u11b8\u11b9\u11ba\u11bb\u11bc\u11bd\u11be\u11bf\u11c0\u11c1\u11c2\u11c3\u11c4\u11c5\u11c6\u11c7\u11c8\u11c9\u11ca\u11cb\u11cc\u11cd\u11ce\u11cf\u11d0\u11d1\u11d2\u11d3\u11d4\u11d5\u11d6\u11d7\u11d8\u11d9\u11da\u11db\u11dc\u11dd\u11de\u11df\u11e0\u11e1\u11e2\u11e3\u11e4\u11e5\u11e6\u11e7\u11e8\u11e9\u11ea\u11eb\u11ec\u11ed\u11ee\u11ef\u11f0\u11f1\u11f2\u11f3\u11f4\u11f5\u11f6\u11f7\u11f8\u11f9\u1200\u1201\u1202\u1203\u1204\u1205\u1206\u1207\u1208\u1209\u120a\u120b\u120c\u120d\u120e\u120f\u1210\u1211\u1212\u1213\u1214\u1215\u1216\u1217\u1218\u1219\u121a\u121b\u121c\u121d\u121e\u121f\u1220\u1221\u1222\u1223\u1224\u1225\u1226\u1227\u1228\u1229\u122a\u122b\u122c\u122d\u122e\u122f\u1230\u1231\u1232\u1233\u1234\u1235\u1236\u1237\u1238\u1239\u123a\u123b\u123c\u123d\u123e\u123f\u1240\u1241\u1242\u1243\u1244\u1245\u1246\u1247\u1248\u124a\u124b\u124c\u124d\u1250\u1251\u1252\u1253\u1254\u1255\u1256\u1258\u125a\u125b\u125c\u125d\u1260\u1261\u1262\u1263\u1264\u1265\u1266\u1267\u1268\u1269\u126a\u126b\u126c\u126d\u126e\u126f\u1270\u1271\u1272\u1273\u1274\u1275\u1276\u1277\u1278\u1279\u127a\u127b\u127c\u127d\u127e\u127f\u1280\u1281\u1282\u1283\u1284\u1285\u1286\u1287\u1288\u128a\u128b\u128c\u128d\u1290\u1291\u1292\u1293\u1294\u1295\u1296\u1297\u1298\u1299\u129a\u129b\u129c\u129d\u129e\u129f\u12a0\u12a1\u12a2\u12a3\u12a4\u12a5\u12a6\u12a7\u12a8\u12a9\u12aa\u12ab\u12ac\u12ad\u12ae\u12af\u12b0\u12b2\u12b3\u12b4\u12b5\u12b8\u12b9\u12ba\u12bb\u12bc\u12bd\u12be\u12c0\u12c2\u12c3\u12c4\u12c5\u12c8\u12c9\u12ca\u12cb\u12cc\u12cd\u12ce\u12cf\u12d0\u12d1\u12d2\u12d3\u12d4\u12d5\u12d6\u12d8\u12d9\u12da\u12db\u12dc\u12dd\u12de\u12df\u12e0\u12e1\u12e2\u12e3\u12e4\u12e5\u12e6\u12e7\u12e8\u12e9\u12ea\u12eb\u12ec\u12ed\u12ee\u12ef\u12f0\u12f1\u12f2\u12f3\u12f4\u12f5\u12f6\u12f7\u12f8\u12f9\u12fa\u12fb\u12fc\u12fd\u12fe\u12ff\u1300\u1301\u1302\u1303\u1304\u1305\u1306\u1307\u1308\u1309\u130a\u130b\u130c\u130d\u130e\u130f\u1310\u1312\u1313\u1314\u1315\u1318\u1319\u131a\u131b\u131c\u131d\u131e\u131f\u1320\u1321\u1322\u1323\u1324\u1325\u1326\u1327\u1328\u1329\u132a\u132b\u132c\u132d\u132e\u132f\u1330\u1331\u1332\u1333\u1334\u1335\u1336\u1337\u1338\u1339\u133a\u133b\u133c\u133d\u133e\u133f\u1340\u1341\u1342\u1343\u1344\u1345\u1346\u1347\u1348\u1349\u134a\u134b\u134c\u134d\u134e\u134f\u1350\u1351\u1352\u1353\u1354\u1355\u1356\u1357\u1358\u1359\u135a\u1380\u1381\u1382\u1383\u1384\u1385\u1386\u1387\u1388\u1389\u138a\u138b\u138c\u138d\u138e\u138f\u13a0\u13a1\u13a2\u13a3\u13a4\u13a5\u13a6\u13a7\u13a8\u13a9\u13aa\u13ab\u13ac\u13ad\u13ae\u13af\u13b0\u13b1\u13b2\u13b3\u13b4\u13b5\u13b6\u13b7\u13b8\u13b9\u13ba\u13bb\u13bc\u13bd\u13be\u13bf\u13c0\u13c1\u13c2\u13c3\u13c4\u13c5\u13c6\u13c7\u13c8\u13c9\u13ca\u13cb\u13cc\u13cd\u13ce\u13cf\u13d0\u13d1\u13d2\u13d3\u13d4\u13d5\u13d6\u13d7\u13d8\u13d9\u13da\u13db\u13dc\u13dd\u13de\u13df\u13e0\u13e1\u13e2\u13e3\u13e4\u13e5\u13e6\u13e7\u13e8\u13e9\u13ea\u13eb\u13ec\u13ed\u13ee\u13ef\u13f0\u13f1\u13f2\u13f3\u13f4\u1401\u1402\u1403\u1404\u1405\u1406\u1407\u1408\u1409\u140a\u140b\u140c\u140d\u140e\u140f\u1410\u1411\u1412\u1413\u1414\u1415\u1416\u1417\u1418\u1419\u141a\u141b\u141c\u141d\u141e\u141f\u1420\u1421\u1422\u1423\u1424\u1425\u1426\u1427\u1428\u1429\u142a\u142b\u142c\u142d\u142e\u142f\u1430\u1431\u1432\u1433\u1434\u1435\u1436\u1437\u1438\u1439\u143a\u143b\u143c\u143d\u143e\u143f\u1440\u1441\u1442\u1443\u1444\u1445\u1446\u1447\u1448\u1449\u144a\u144b\u144c\u144d\u144e\u144f\u1450\u1451\u1452\u1453\u1454\u1455\u1456\u1457\u1458\u1459\u145a\u145b\u145c\u145d\u145e\u145f\u1460\u1461\u1462\u1463\u1464\u1465\u1466\u1467\u1468\u1469\u146a\u146b\u146c\u146d\u146e\u146f\u1470\u1471\u1472\u1473\u1474\u1475\u1476\u1477\u1478\u1479\u147a\u147b\u147c\u147d\u147e\u147f\u1480\u1481\u1482\u1483\u1484\u1485\u1486\u1487\u1488\u1489\u148a\u148b\u148c\u148d\u148e\u148f\u1490\u1491\u1492\u1493\u1494\u1495\u1496\u1497\u1498\u1499\u149a\u149b\u149c\u149d\u149e\u149f\u14a0\u14a1\u14a2\u14a3\u14a4\u14a5\u14a6\u14a7\u14a8\u14a9\u14aa\u14ab\u14ac\u14ad\u14ae\u14af\u14b0\u14b1\u14b2\u14b3\u14b4\u14b5\u14b6\u14b7\u14b8\u14b9\u14ba\u14bb\u14bc\u14bd\u14be\u14bf\u14c0\u14c1\u14c2\u14c3\u14c4\u14c5\u14c6\u14c7\u14c8\u14c9\u14ca\u14cb\u14cc\u14cd\u14ce\u14cf\u14d0\u14d1\u14d2\u14d3\u14d4\u14d5\u14d6\u14d7\u14d8\u14d9\u14da\u14db\u14dc\u14dd\u14de\u14df\u14e0\u14e1\u14e2\u14e3\u14e4\u14e5\u14e6\u14e7\u14e8\u14e9\u14ea\u14eb\u14ec\u14ed\u14ee\u14ef\u14f0\u14f1\u14f2\u14f3\u14f4\u14f5\u14f6\u14f7\u14f8\u14f9\u14fa\u14fb\u14fc\u14fd\u14fe\u14ff\u1500\u1501\u1502\u1503\u1504\u1505\u1506\u1507\u1508\u1509\u150a\u150b\u150c\u150d\u150e\u150f\u1510\u1511\u1512\u1513\u1514\u1515\u1516\u1517\u1518\u1519\u151a\u151b\u151c\u151d\u151e\u151f\u1520\u1521\u1522\u1523\u1524\u1525\u1526\u1527\u1528\u1529\u152a\u152b\u152c\u152d\u152e\u152f\u1530\u1531\u1532\u1533\u1534\u1535\u1536\u1537\u1538\u1539\u153a\u153b\u153c\u153d\u153e\u153f\u1540\u1541\u1542\u1543\u1544\u1545\u1546\u1547\u1548\u1549\u154a\u154b\u154c\u154d\u154e\u154f\u1550\u1551\u1552\u1553\u1554\u1555\u1556\u1557\u1558\u1559\u155a\u155b\u155c\u155d\u155e\u155f\u1560\u1561\u1562\u1563\u1564\u1565\u1566\u1567\u1568\u1569\u156a\u156b\u156c\u156d\u156e\u156f\u1570\u1571\u1572\u1573\u1574\u1575\u1576\u1577\u1578\u1579\u157a\u157b\u157c\u157d\u157e\u157f\u1580\u1581\u1582\u1583\u1584\u1585\u1586\u1587\u1588\u1589\u158a\u158b\u158c\u158d\u158e\u158f\u1590\u1591\u1592\u1593\u1594\u1595\u1596\u1597\u1598\u1599\u159a\u159b\u159c\u159d\u159e\u159f\u15a0\u15a1\u15a2\u15a3\u15a4\u15a5\u15a6\u15a7\u15a8\u15a9\u15aa\u15ab\u15ac\u15ad\u15ae\u15af\u15b0\u15b1\u15b2\u15b3\u15b4\u15b5\u15b6\u15b7\u15b8\u15b9\u15ba\u15bb\u15bc\u15bd\u15be\u15bf\u15c0\u15c1\u15c2\u15c3\u15c4\u15c5\u15c6\u15c7\u15c8\u15c9\u15ca\u15cb\u15cc\u15cd\u15ce\u15cf\u15d0\u15d1\u15d2\u15d3\u15d4\u15d5\u15d6\u15d7\u15d8\u15d9\u15da\u15db\u15dc\u15dd\u15de\u15df\u15e0\u15e1\u15e2\u15e3\u15e4\u15e5\u15e6\u15e7\u15e8\u15e9\u15ea\u15eb\u15ec\u15ed\u15ee\u15ef\u15f0\u15f1\u15f2\u15f3\u15f4\u15f5\u15f6\u15f7\u15f8\u15f9\u15fa\u15fb\u15fc\u15fd\u15fe\u15ff\u1600\u1601\u1602\u1603\u1604\u1605\u1606\u1607\u1608\u1609\u160a\u160b\u160c\u160d\u160e\u160f\u1610\u1611\u1612\u1613\u1614\u1615\u1616\u1617\u1618\u1619\u161a\u161b\u161c\u161d\u161e\u161f\u1620\u1621\u1622\u1623\u1624\u1625\u1626\u1627\u1628\u1629\u162a\u162b\u162c\u162d\u162e\u162f\u1630\u1631\u1632\u1633\u1634\u1635\u1636\u1637\u1638\u1639\u163a\u163b\u163c\u163d\u163e\u163f\u1640\u1641\u1642\u1643\u1644\u1645\u1646\u1647\u1648\u1649\u164a\u164b\u164c\u164d\u164e\u164f\u1650\u1651\u1652\u1653\u1654\u1655\u1656\u1657\u1658\u1659\u165a\u165b\u165c\u165d\u165e\u165f\u1660\u1661\u1662\u1663\u1664\u1665\u1666\u1667\u1668\u1669\u166a\u166b\u166c\u166f\u1670\u1671\u1672\u1673\u1674\u1675\u1676\u1681\u1682\u1683\u1684\u1685\u1686\u1687\u1688\u1689\u168a\u168b\u168c\u168d\u168e\u168f\u1690\u1691\u1692\u1693\u1694\u1695\u1696\u1697\u1698\u1699\u169a\u16a0\u16a1\u16a2\u16a3\u16a4\u16a5\u16a6\u16a7\u16a8\u16a9\u16aa\u16ab\u16ac\u16ad\u16ae\u16af\u16b0\u16b1\u16b2\u16b3\u16b4\u16b5\u16b6\u16b7\u16b8\u16b9\u16ba\u16bb\u16bc\u16bd\u16be\u16bf\u16c0\u16c1\u16c2\u16c3\u16c4\u16c5\u16c6\u16c7\u16c8\u16c9\u16ca\u16cb\u16cc\u16cd\u16ce\u16cf\u16d0\u16d1\u16d2\u16d3\u16d4\u16d5\u16d6\u16d7\u16d8\u16d9\u16da\u16db\u16dc\u16dd\u16de\u16df\u16e0\u16e1\u16e2\u16e3\u16e4\u16e5\u16e6\u16e7\u16e8\u16e9\u16ea\u1700\u1701\u1702\u1703\u1704\u1705\u1706\u1707\u1708\u1709\u170a\u170b\u170c\u170e\u170f\u1710\u1711\u1720\u1721\u1722\u1723\u1724\u1725\u1726\u1727\u1728\u1729\u172a\u172b\u172c\u172d\u172e\u172f\u1730\u1731\u1740\u1741\u1742\u1743\u1744\u1745\u1746\u1747\u1748\u1749\u174a\u174b\u174c\u174d\u174e\u174f\u1750\u1751\u1760\u1761\u1762\u1763\u1764\u1765\u1766\u1767\u1768\u1769\u176a\u176b\u176c\u176e\u176f\u1770\u1780\u1781\u1782\u1783\u1784\u1785\u1786\u1787\u1788\u1789\u178a\u178b\u178c\u178d\u178e\u178f\u1790\u1791\u1792\u1793\u1794\u1795\u1796\u1797\u1798\u1799\u179a\u179b\u179c\u179d\u179e\u179f\u17a0\u17a1\u17a2\u17a3\u17a4\u17a5\u17a6\u17a7\u17a8\u17a9\u17aa\u17ab\u17ac\u17ad\u17ae\u17af\u17b0\u17b1\u17b2\u17b3\u17dc\u1820\u1821\u1822\u1823\u1824\u1825\u1826\u1827\u1828\u1829\u182a\u182b\u182c\u182d\u182e\u182f\u1830\u1831\u1832\u1833\u1834\u1835\u1836\u1837\u1838\u1839\u183a\u183b\u183c\u183d\u183e\u183f\u1840\u1841\u1842\u1844\u1845\u1846\u1847\u1848\u1849\u184a\u184b\u184c\u184d\u184e\u184f\u1850\u1851\u1852\u1853\u1854\u1855\u1856\u1857\u1858\u1859\u185a\u185b\u185c\u185d\u185e\u185f\u1860\u1861\u1862\u1863\u1864\u1865\u1866\u1867\u1868\u1869\u186a\u186b\u186c\u186d\u186e\u186f\u1870\u1871\u1872\u1873\u1874\u1875\u1876\u1877\u1880\u1881\u1882\u1883\u1884\u1885\u1886\u1887\u1888\u1889\u188a\u188b\u188c\u188d\u188e\u188f\u1890\u1891\u1892\u1893\u1894\u1895\u1896\u1897\u1898\u1899\u189a\u189b\u189c\u189d\u189e\u189f\u18a0\u18a1\u18a2\u18a3\u18a4\u18a5\u18a6\u18a7\u18a8\u1900\u1901\u1902\u1903\u1904\u1905\u1906\u1907\u1908\u1909\u190a\u190b\u190c\u190d\u190e\u190f\u1910\u1911\u1912\u1913\u1914\u1915\u1916\u1917\u1918\u1919\u191a\u191b\u191c\u1950\u1951\u1952\u1953\u1954\u1955\u1956\u1957\u1958\u1959\u195a\u195b\u195c\u195d\u195e\u195f\u1960\u1961\u1962\u1963\u1964\u1965\u1966\u1967\u1968\u1969\u196a\u196b\u196c\u196d\u1970\u1971\u1972\u1973\u1974\u1980\u1981\u1982\u1983\u1984\u1985\u1986\u1987\u1988\u1989\u198a\u198b\u198c\u198d\u198e\u198f\u1990\u1991\u1992\u1993\u1994\u1995\u1996\u1997\u1998\u1999\u199a\u199b\u199c\u199d\u199e\u199f\u19a0\u19a1\u19a2\u19a3\u19a4\u19a5\u19a6\u19a7\u19a8\u19a9\u19c1\u19c2\u19c3\u19c4\u19c5\u19c6\u19c7\u1a00\u1a01\u1a02\u1a03\u1a04\u1a05\u1a06\u1a07\u1a08\u1a09\u1a0a\u1a0b\u1a0c\u1a0d\u1a0e\u1a0f\u1a10\u1a11\u1a12\u1a13\u1a14\u1a15\u1a16\u2135\u2136\u2137\u2138\u2d30\u2d31\u2d32\u2d33\u2d34\u2d35\u2d36\u2d37\u2d38\u2d39\u2d3a\u2d3b\u2d3c\u2d3d\u2d3e\u2d3f\u2d40\u2d41\u2d42\u2d43\u2d44\u2d45\u2d46\u2d47\u2d48\u2d49\u2d4a\u2d4b\u2d4c\u2d4d\u2d4e\u2d4f\u2d50\u2d51\u2d52\u2d53\u2d54\u2d55\u2d56\u2d57\u2d58\u2d59\u2d5a\u2d5b\u2d5c\u2d5d\u2d5e\u2d5f\u2d60\u2d61\u2d62\u2d63\u2d64\u2d65\u2d80\u2d81\u2d82\u2d83\u2d84\u2d85\u2d86\u2d87\u2d88\u2d89\u2d8a\u2d8b\u2d8c\u2d8d\u2d8e\u2d8f\u2d90\u2d91\u2d92\u2d93\u2d94\u2d95\u2d96\u2da0\u2da1\u2da2\u2da3\u2da4\u2da5\u2da6\u2da8\u2da9\u2daa\u2dab\u2dac\u2dad\u2dae\u2db0\u2db1\u2db2\u2db3\u2db4\u2db5\u2db6\u2db8\u2db9\u2dba\u2dbb\u2dbc\u2dbd\u2dbe\u2dc0\u2dc1\u2dc2\u2dc3\u2dc4\u2dc5\u2dc6\u2dc8\u2dc9\u2dca\u2dcb\u2dcc\u2dcd\u2dce\u2dd0\u2dd1\u2dd2\u2dd3\u2dd4\u2dd5\u2dd6\u2dd8\u2dd9\u2dda\u2ddb\u2ddc\u2ddd\u2dde\u3006\u303c\u3041\u3042\u3043\u3044\u3045\u3046\u3047\u3048\u3049\u304a\u304b\u304c\u304d\u304e\u304f\u3050\u3051\u3052\u3053\u3054\u3055\u3056\u3057\u3058\u3059\u305a\u305b\u305c\u305d\u305e\u305f\u3060\u3061\u3062\u3063\u3064\u3065\u3066\u3067\u3068\u3069\u306a\u306b\u306c\u306d\u306e\u306f\u3070\u3071\u3072\u3073\u3074\u3075\u3076\u3077\u3078\u3079\u307a\u307b\u307c\u307d\u307e\u307f\u3080\u3081\u3082\u3083\u3084\u3085\u3086\u3087\u3088\u3089\u308a\u308b\u308c\u308d\u308e\u308f\u3090\u3091\u3092\u3093\u3094\u3095\u3096\u309f\u30a1\u30a2\u30a3\u30a4\u30a5\u30a6\u30a7\u30a8\u30a9\u30aa\u30ab\u30ac\u30ad\u30ae\u30af\u30b0\u30b1\u30b2\u30b3\u30b4\u30b5\u30b6\u30b7\u30b8\u30b9\u30ba\u30bb\u30bc\u30bd\u30be\u30bf\u30c0\u30c1\u30c2\u30c3\u30c4\u30c5\u30c6\u30c7\u30c8\u30c9\u30ca\u30cb\u30cc\u30cd\u30ce\u30cf\u30d0\u30d1\u30d2\u30d3\u30d4\u30d5\u30d6\u30d7\u30d8\u30d9\u30da\u30db\u30dc\u30dd\u30de\u30df\u30e0\u30e1\u30e2\u30e3\u30e4\u30e5\u30e6\u30e7\u30e8\u30e9\u30ea\u30eb\u30ec\u30ed\u30ee\u30ef\u30f0\u30f1\u30f2\u30f3\u30f4\u30f5\u30f6\u30f7\u30f8\u30f9\u30fa\u30ff\u3105\u3106\u3107\u3108\u3109\u310a\u310b\u310c\u310d\u310e\u310f\u3110\u3111\u3112\u3113\u3114\u3115\u3116\u3117\u3118\u3119\u311a\u311b\u311c\u311d\u311e\u311f\u3120\u3121\u3122\u3123\u3124\u3125\u3126\u3127\u3128\u3129\u312a\u312b\u312c\u3131\u3132\u3133\u3134\u3135\u3136\u3137\u3138\u3139\u313a\u313b\u313c\u313d\u313e\u313f\u3140\u3141\u3142\u3143\u3144\u3145\u3146\u3147\u3148\u3149\u314a\u314b\u314c\u314d\u314e\u314f\u3150\u3151\u3152\u3153\u3154\u3155\u3156\u3157\u3158\u3159\u315a\u315b\u315c\u315d\u315e\u315f\u3160\u3161\u3162\u3163\u3164\u3165\u3166\u3167\u3168\u3169\u316a\u316b\u316c\u316d\u316e\u316f\u3170\u3171\u3172\u3173\u3174\u3175\u3176\u3177\u3178\u3179\u317a\u317b\u317c\u317d\u317e\u317f\u3180\u3181\u3182\u3183\u3184\u3185\u3186\u3187\u3188\u3189\u318a\u318b\u318c\u318d\u318e\u31a0\u31a1\u31a2\u31a3\u31a4\u31a5\u31a6\u31a7\u31a8\u31a9\u31aa\u31ab\u31ac\u31ad\u31ae\u31af\u31b0\u31b1\u31b2\u31b3\u31b4\u31b5\u31b6\u31b7\u31f0\u31f1\u31f2\u31f3\u31f4\u31f5\u31f6\u31f7\u31f8\u31f9\u31fa\u31fb\u31fc\u31fd\u31fe\u31ff\u3400\u3401\u3402\u3403\u3404\u3405\u3406\u3407\u3408\u3409\u340a\u340b\u340c\u340d\u340e\u340f\u3410\u3411\u3412\u3413\u3414\u3415\u3416\u3417\u3418\u3419\u341a\u341b\u341c\u341d\u341e\u341f\u3420\u3421\u3422\u3423\u3424\u3425\u3426\u3427\u3428\u3429\u342a\u342b\u342c\u342d\u342e\u342f\u3430\u3431\u3432\u3433\u3434\u3435\u3436\u3437\u3438\u3439\u343a\u343b\u343c\u343d\u343e\u343f\u3440\u3441\u3442\u3443\u3444\u3445\u3446\u3447\u3448\u3449\u344a\u344b\u344c\u344d\u344e\u344f\u3450\u3451\u3452\u3453\u3454\u3455\u3456\u3457\u3458\u3459\u345a\u345b\u345c\u345d\u345e\u345f\u3460\u3461\u3462\u3463\u3464\u3465\u3466\u3467\u3468\u3469\u346a\u346b\u346c\u346d\u346e\u346f\u3470\u3471\u3472\u3473\u3474\u3475\u3476\u3477\u3478\u3479\u347a\u347b\u347c\u347d\u347e\u347f\u3480\u3481\u3482\u3483\u3484\u3485\u3486\u3487\u3488\u3489\u348a\u348b\u348c\u348d\u348e\u348f\u3490\u3491\u3492\u3493\u3494\u3495\u3496\u3497\u3498\u3499\u349a\u349b\u349c\u349d\u349e\u349f\u34a0\u34a1\u34a2\u34a3\u34a4\u34a5\u34a6\u34a7\u34a8\u34a9\u34aa\u34ab\u34ac\u34ad\u34ae\u34af\u34b0\u34b1\u34b2\u34b3\u34b4\u34b5\u34b6\u34b7\u34b8\u34b9\u34ba\u34bb\u34bc\u34bd\u34be\u34bf\u34c0\u34c1\u34c2\u34c3\u34c4\u34c5\u34c6\u34c7\u34c8\u34c9\u34ca\u34cb\u34cc\u34cd\u34ce\u34cf\u34d0\u34d1\u34d2\u34d3\u34d4\u34d5\u34d6\u34d7\u34d8\u34d9\u34da\u34db\u34dc\u34dd\u34de\u34df\u34e0\u34e1\u34e2\u34e3\u34e4\u34e5\u34e6\u34e7\u34e8\u34e9\u34ea\u34eb\u34ec\u34ed\u34ee\u34ef\u34f0\u34f1\u34f2\u34f3\u34f4\u34f5\u34f6\u34f7\u34f8\u34f9\u34fa\u34fb\u34fc\u34fd\u34fe\u34ff\u3500\u3501\u3502\u3503\u3504\u3505\u3506\u3507\u3508\u3509\u350a\u350b\u350c\u350d\u350e\u350f\u3510\u3511\u3512\u3513\u3514\u3515\u3516\u3517\u3518\u3519\u351a\u351b\u351c\u351d\u351e\u351f\u3520\u3521\u3522\u3523\u3524\u3525\u3526\u3527\u3528\u3529\u352a\u352b\u352c\u352d\u352e\u352f\u3530\u3531\u3532\u3533\u3534\u3535\u3536\u3537\u3538\u3539\u353a\u353b\u353c\u353d\u353e\u353f\u3540\u3541\u3542\u3543\u3544\u3545\u3546\u3547\u3548\u3549\u354a\u354b\u354c\u354d\u354e\u354f\u3550\u3551\u3552\u3553\u3554\u3555\u3556\u3557\u3558\u3559\u355a\u355b\u355c\u355d\u355e\u355f\u3560\u3561\u3562\u3563\u3564\u3565\u3566\u3567\u3568\u3569\u356a\u356b\u356c\u356d\u356e\u356f\u3570\u3571\u3572\u3573\u3574\u3575\u3576\u3577\u3578\u3579\u357a\u357b\u357c\u357d\u357e\u357f\u3580\u3581\u3582\u3583\u3584\u3585\u3586\u3587\u3588\u3589\u358a\u358b\u358c\u358d\u358e\u358f\u3590\u3591\u3592\u3593\u3594\u3595\u3596\u3597\u3598\u3599\u359a\u359b\u359c\u359d\u359e\u359f\u35a0\u35a1\u35a2\u35a3\u35a4\u35a5\u35a6\u35a7\u35a8\u35a9\u35aa\u35ab\u35ac\u35ad\u35ae\u35af\u35b0\u35b1\u35b2\u35b3\u35b4\u35b5\u35b6\u35b7\u35b8\u35b9\u35ba\u35bb\u35bc\u35bd\u35be\u35bf\u35c0\u35c1\u35c2\u35c3\u35c4\u35c5\u35c6\u35c7\u35c8\u35c9\u35ca\u35cb\u35cc\u35cd\u35ce\u35cf\u35d0\u35d1\u35d2\u35d3\u35d4\u35d5\u35d6\u35d7\u35d8\u35d9\u35da\u35db\u35dc\u35dd\u35de\u35df\u35e0\u35e1\u35e2\u35e3\u35e4\u35e5\u35e6\u35e7\u35e8\u35e9\u35ea\u35eb\u35ec\u35ed\u35ee\u35ef\u35f0\u35f1\u35f2\u35f3\u35f4\u35f5\u35f6\u35f7\u35f8\u35f9\u35fa\u35fb\u35fc\u35fd\u35fe\u35ff\u3600\u3601\u3602\u3603\u3604\u3605\u3606\u3607\u3608\u3609\u360a\u360b\u360c\u360d\u360e\u360f\u3610\u3611\u3612\u3613\u3614\u3615\u3616\u3617\u3618\u3619\u361a\u361b\u361c\u361d\u361e\u361f\u3620\u3621\u3622\u3623\u3624\u3625\u3626\u3627\u3628\u3629\u362a\u362b\u362c\u362d\u362e\u362f\u3630\u3631\u3632\u3633\u3634\u3635\u3636\u3637\u3638\u3639\u363a\u363b\u363c\u363d\u363e\u363f\u3640\u3641\u3642\u3643\u3644\u3645\u3646\u3647\u3648\u3649\u364a\u364b\u364c\u364d\u364e\u364f\u3650\u3651\u3652\u3653\u3654\u3655\u3656\u3657\u3658\u3659\u365a\u365b\u365c\u365d\u365e\u365f\u3660\u3661\u3662\u3663\u3664\u3665\u3666\u3667\u3668\u3669\u366a\u366b\u366c\u366d\u366e\u366f\u3670\u3671\u3672\u3673\u3674\u3675\u3676\u3677\u3678\u3679\u367a\u367b\u367c\u367d\u367e\u367f\u3680\u3681\u3682\u3683\u3684\u3685\u3686\u3687\u3688\u3689\u368a\u368b\u368c\u368d\u368e\u368f\u3690\u3691\u3692\u3693\u3694\u3695\u3696\u3697\u3698\u3699\u369a\u369b\u369c\u369d\u369e\u369f\u36a0\u36a1\u36a2\u36a3\u36a4\u36a5\u36a6\u36a7\u36a8\u36a9\u36aa\u36ab\u36ac\u36ad\u36ae\u36af\u36b0\u36b1\u36b2\u36b3\u36b4\u36b5\u36b6\u36b7\u36b8\u36b9\u36ba\u36bb\u36bc\u36bd\u36be\u36bf\u36c0\u36c1\u36c2\u36c3\u36c4\u36c5\u36c6\u36c7\u36c8\u36c9\u36ca\u36cb\u36cc\u36cd\u36ce\u36cf\u36d0\u36d1\u36d2\u36d3\u36d4\u36d5\u36d6\u36d7\u36d8\u36d9\u36da\u36db\u36dc\u36dd\u36de\u36df\u36e0\u36e1\u36e2\u36e3\u36e4\u36e5\u36e6\u36e7\u36e8\u36e9\u36ea\u36eb\u36ec\u36ed\u36ee\u36ef\u36f0\u36f1\u36f2\u36f3\u36f4\u36f5\u36f6\u36f7\u36f8\u36f9\u36fa\u36fb\u36fc\u36fd\u36fe\u36ff\u3700\u3701\u3702\u3703\u3704\u3705\u3706\u3707\u3708\u3709\u370a\u370b\u370c\u370d\u370e\u370f\u3710\u3711\u3712\u3713\u3714\u3715\u3716\u3717\u3718\u3719\u371a\u371b\u371c\u371d\u371e\u371f\u3720\u3721\u3722\u3723\u3724\u3725\u3726\u3727\u3728\u3729\u372a\u372b\u372c\u372d\u372e\u372f\u3730\u3731\u3732\u3733\u3734\u3735\u3736\u3737\u3738\u3739\u373a\u373b\u373c\u373d\u373e\u373f\u3740\u3741\u3742\u3743\u3744\u3745\u3746\u3747\u3748\u3749\u374a\u374b\u374c\u374d\u374e\u374f\u3750\u3751\u3752\u3753\u3754\u3755\u3756\u3757\u3758\u3759\u375a\u375b\u375c\u375d\u375e\u375f\u3760\u3761\u3762\u3763\u3764\u3765\u3766\u3767\u3768\u3769\u376a\u376b\u376c\u376d\u376e\u376f\u3770\u3771\u3772\u3773\u3774\u3775\u3776\u3777\u3778\u3779\u377a\u377b\u377c\u377d\u377e\u377f\u3780\u3781\u3782\u3783\u3784\u3785\u3786\u3787\u3788\u3789\u378a\u378b\u378c\u378d\u378e\u378f\u3790\u3791\u3792\u3793\u3794\u3795\u3796\u3797\u3798\u3799\u379a\u379b\u379c\u379d\u379e\u379f\u37a0\u37a1\u37a2\u37a3\u37a4\u37a5\u37a6\u37a7\u37a8\u37a9\u37aa\u37ab\u37ac\u37ad\u37ae\u37af\u37b0\u37b1\u37b2\u37b3\u37b4\u37b5\u37b6\u37b7\u37b8\u37b9\u37ba\u37bb\u37bc\u37bd\u37be\u37bf\u37c0\u37c1\u37c2\u37c3\u37c4\u37c5\u37c6\u37c7\u37c8\u37c9\u37ca\u37cb\u37cc\u37cd\u37ce\u37cf\u37d0\u37d1\u37d2\u37d3\u37d4\u37d5\u37d6\u37d7\u37d8\u37d9\u37da\u37db\u37dc\u37dd\u37de\u37df\u37e0\u37e1\u37e2\u37e3\u37e4\u37e5\u37e6\u37e7\u37e8\u37e9\u37ea\u37eb\u37ec\u37ed\u37ee\u37ef\u37f0\u37f1\u37f2\u37f3\u37f4\u37f5\u37f6\u37f7\u37f8\u37f9\u37fa\u37fb\u37fc\u37fd\u37fe\u37ff\u3800\u3801\u3802\u3803\u3804\u3805\u3806\u3807\u3808\u3809\u380a\u380b\u380c\u380d\u380e\u380f\u3810\u3811\u3812\u3813\u3814\u3815\u3816\u3817\u3818\u3819\u381a\u381b\u381c\u381d\u381e\u381f\u3820\u3821\u3822\u3823\u3824\u3825\u3826\u3827\u3828\u3829\u382a\u382b\u382c\u382d\u382e\u382f\u3830\u3831\u3832\u3833\u3834\u3835\u3836\u3837\u3838\u3839\u383a\u383b\u383c\u383d\u383e\u383f\u3840\u3841\u3842\u3843\u3844\u3845\u3846\u3847\u3848\u3849\u384a\u384b\u384c\u384d\u384e\u384f\u3850\u3851\u3852\u3853\u3854\u3855\u3856\u3857\u3858\u3859\u385a\u385b\u385c\u385d\u385e\u385f\u3860\u3861\u3862\u3863\u3864\u3865\u3866\u3867\u3868\u3869\u386a\u386b\u386c\u386d\u386e\u386f\u3870\u3871\u3872\u3873\u3874\u3875\u3876\u3877\u3878\u3879\u387a\u387b\u387c\u387d\u387e\u387f\u3880\u3881\u3882\u3883\u3884\u3885\u3886\u3887\u3888\u3889\u388a\u388b\u388c\u388d\u388e\u388f\u3890\u3891\u3892\u3893\u3894\u3895\u3896\u3897\u3898\u3899\u389a\u389b\u389c\u389d\u389e\u389f\u38a0\u38a1\u38a2\u38a3\u38a4\u38a5\u38a6\u38a7\u38a8\u38a9\u38aa\u38ab\u38ac\u38ad\u38ae\u38af\u38b0\u38b1\u38b2\u38b3\u38b4\u38b5\u38b6\u38b7\u38b8\u38b9\u38ba\u38bb\u38bc\u38bd\u38be\u38bf\u38c0\u38c1\u38c2\u38c3\u38c4\u38c5\u38c6\u38c7\u38c8\u38c9\u38ca\u38cb\u38cc\u38cd\u38ce\u38cf\u38d0\u38d1\u38d2\u38d3\u38d4\u38d5\u38d6\u38d7\u38d8\u38d9\u38da\u38db\u38dc\u38dd\u38de\u38df\u38e0\u38e1\u38e2\u38e3\u38e4\u38e5\u38e6\u38e7\u38e8\u38e9\u38ea\u38eb\u38ec\u38ed\u38ee\u38ef\u38f0\u38f1\u38f2\u38f3\u38f4\u38f5\u38f6\u38f7\u38f8\u38f9\u38fa\u38fb\u38fc\u38fd\u38fe\u38ff\u3900\u3901\u3902\u3903\u3904\u3905\u3906\u3907\u3908\u3909\u390a\u390b\u390c\u390d\u390e\u390f\u3910\u3911\u3912\u3913\u3914\u3915\u3916\u3917\u3918\u3919\u391a\u391b\u391c\u391d\u391e\u391f\u3920\u3921\u3922\u3923\u3924\u3925\u3926\u3927\u3928\u3929\u392a\u392b\u392c\u392d\u392e\u392f\u3930\u3931\u3932\u3933\u3934\u3935\u3936\u3937\u3938\u3939\u393a\u393b\u393c\u393d\u393e\u393f\u3940\u3941\u3942\u3943\u3944\u3945\u3946\u3947\u3948\u3949\u394a\u394b\u394c\u394d\u394e\u394f\u3950\u3951\u3952\u3953\u3954\u3955\u3956\u3957\u3958\u3959\u395a\u395b\u395c\u395d\u395e\u395f\u3960\u3961\u3962\u3963\u3964\u3965\u3966\u3967\u3968\u3969\u396a\u396b\u396c\u396d\u396e\u396f\u3970\u3971\u3972\u3973\u3974\u3975\u3976\u3977\u3978\u3979\u397a\u397b\u397c\u397d\u397e\u397f\u3980\u3981\u3982\u3983\u3984\u3985\u3986\u3987\u3988\u3989\u398a\u398b\u398c\u398d\u398e\u398f\u3990\u3991\u3992\u3993\u3994\u3995\u3996\u3997\u3998\u3999\u399a\u399b\u399c\u399d\u399e\u399f\u39a0\u39a1\u39a2\u39a3\u39a4\u39a5\u39a6\u39a7\u39a8\u39a9\u39aa\u39ab\u39ac\u39ad\u39ae\u39af\u39b0\u39b1\u39b2\u39b3\u39b4\u39b5\u39b6\u39b7\u39b8\u39b9\u39ba\u39bb\u39bc\u39bd\u39be\u39bf\u39c0\u39c1\u39c2\u39c3\u39c4\u39c5\u39c6\u39c7\u39c8\u39c9\u39ca\u39cb\u39cc\u39cd\u39ce\u39cf\u39d0\u39d1\u39d2\u39d3\u39d4\u39d5\u39d6\u39d7\u39d8\u39d9\u39da\u39db\u39dc\u39dd\u39de\u39df\u39e0\u39e1\u39e2\u39e3\u39e4\u39e5\u39e6\u39e7\u39e8\u39e9\u39ea\u39eb\u39ec\u39ed\u39ee\u39ef\u39f0\u39f1\u39f2\u39f3\u39f4\u39f5\u39f6\u39f7\u39f8\u39f9\u39fa\u39fb\u39fc\u39fd\u39fe\u39ff\u3a00\u3a01\u3a02\u3a03\u3a04\u3a05\u3a06\u3a07\u3a08\u3a09\u3a0a\u3a0b\u3a0c\u3a0d\u3a0e\u3a0f\u3a10\u3a11\u3a12\u3a13\u3a14\u3a15\u3a16\u3a17\u3a18\u3a19\u3a1a\u3a1b\u3a1c\u3a1d\u3a1e\u3a1f\u3a20\u3a21\u3a22\u3a23\u3a24\u3a25\u3a26\u3a27\u3a28\u3a29\u3a2a\u3a2b\u3a2c\u3a2d\u3a2e\u3a2f\u3a30\u3a31\u3a32\u3a33\u3a34\u3a35\u3a36\u3a37\u3a38\u3a39\u3a3a\u3a3b\u3a3c\u3a3d\u3a3e\u3a3f\u3a40\u3a41\u3a42\u3a43\u3a44\u3a45\u3a46\u3a47\u3a48\u3a49\u3a4a\u3a4b\u3a4c\u3a4d\u3a4e\u3a4f\u3a50\u3a51\u3a52\u3a53\u3a54\u3a55\u3a56\u3a57\u3a58\u3a59\u3a5a\u3a5b\u3a5c\u3a5d\u3a5e\u3a5f\u3a60\u3a61\u3a62\u3a63\u3a64\u3a65\u3a66\u3a67\u3a68\u3a69\u3a6a\u3a6b\u3a6c\u3a6d\u3a6e\u3a6f\u3a70\u3a71\u3a72\u3a73\u3a74\u3a75\u3a76\u3a77\u3a78\u3a79\u3a7a\u3a7b\u3a7c\u3a7d\u3a7e\u3a7f\u3a80\u3a81\u3a82\u3a83\u3a84\u3a85\u3a86\u3a87\u3a88\u3a89\u3a8a\u3a8b\u3a8c\u3a8d\u3a8e\u3a8f\u3a90\u3a91\u3a92\u3a93\u3a94\u3a95\u3a96\u3a97\u3a98\u3a99\u3a9a\u3a9b\u3a9c\u3a9d\u3a9e\u3a9f\u3aa0\u3aa1\u3aa2\u3aa3\u3aa4\u3aa5\u3aa6\u3aa7\u3aa8\u3aa9\u3aaa\u3aab\u3aac\u3aad\u3aae\u3aaf\u3ab0\u3ab1\u3ab2\u3ab3\u3ab4\u3ab5\u3ab6\u3ab7\u3ab8\u3ab9\u3aba\u3abb\u3abc\u3abd\u3abe\u3abf\u3ac0\u3ac1\u3ac2\u3ac3\u3ac4\u3ac5\u3ac6\u3ac7\u3ac8\u3ac9\u3aca\u3acb\u3acc\u3acd\u3ace\u3acf\u3ad0\u3ad1\u3ad2\u3ad3\u3ad4\u3ad5\u3ad6\u3ad7\u3ad8\u3ad9\u3ada\u3adb\u3adc\u3add\u3ade\u3adf\u3ae0\u3ae1\u3ae2\u3ae3\u3ae4\u3ae5\u3ae6\u3ae7\u3ae8\u3ae9\u3aea\u3aeb\u3aec\u3aed\u3aee\u3aef\u3af0\u3af1\u3af2\u3af3\u3af4\u3af5\u3af6\u3af7\u3af8\u3af9\u3afa\u3afb\u3afc\u3afd\u3afe\u3aff\u3b00\u3b01\u3b02\u3b03\u3b04\u3b05\u3b06\u3b07\u3b08\u3b09\u3b0a\u3b0b\u3b0c\u3b0d\u3b0e\u3b0f\u3b10\u3b11\u3b12\u3b13\u3b14\u3b15\u3b16\u3b17\u3b18\u3b19\u3b1a\u3b1b\u3b1c\u3b1d\u3b1e\u3b1f\u3b20\u3b21\u3b22\u3b23\u3b24\u3b25\u3b26\u3b27\u3b28\u3b29\u3b2a\u3b2b\u3b2c\u3b2d\u3b2e\u3b2f\u3b30\u3b31\u3b32\u3b33\u3b34\u3b35\u3b36\u3b37\u3b38\u3b39\u3b3a\u3b3b\u3b3c\u3b3d\u3b3e\u3b3f\u3b40\u3b41\u3b42\u3b43\u3b44\u3b45\u3b46\u3b47\u3b48\u3b49\u3b4a\u3b4b\u3b4c\u3b4d\u3b4e\u3b4f\u3b50\u3b51\u3b52\u3b53\u3b54\u3b55\u3b56\u3b57\u3b58\u3b59\u3b5a\u3b5b\u3b5c\u3b5d\u3b5e\u3b5f\u3b60\u3b61\u3b62\u3b63\u3b64\u3b65\u3b66\u3b67\u3b68\u3b69\u3b6a\u3b6b\u3b6c\u3b6d\u3b6e\u3b6f\u3b70\u3b71\u3b72\u3b73\u3b74\u3b75\u3b76\u3b77\u3b78\u3b79\u3b7a\u3b7b\u3b7c\u3b7d\u3b7e\u3b7f\u3b80\u3b81\u3b82\u3b83\u3b84\u3b85\u3b86\u3b87\u3b88\u3b89\u3b8a\u3b8b\u3b8c\u3b8d\u3b8e\u3b8f\u3b90\u3b91\u3b92\u3b93\u3b94\u3b95\u3b96\u3b97\u3b98\u3b99\u3b9a\u3b9b\u3b9c\u3b9d\u3b9e\u3b9f\u3ba0\u3ba1\u3ba2\u3ba3\u3ba4\u3ba5\u3ba6\u3ba7\u3ba8\u3ba9\u3baa\u3bab\u3bac\u3bad\u3bae\u3baf\u3bb0\u3bb1\u3bb2\u3bb3\u3bb4\u3bb5\u3bb6\u3bb7\u3bb8\u3bb9\u3bba\u3bbb\u3bbc\u3bbd\u3bbe\u3bbf\u3bc0\u3bc1\u3bc2\u3bc3\u3bc4\u3bc5\u3bc6\u3bc7\u3bc8\u3bc9\u3bca\u3bcb\u3bcc\u3bcd\u3bce\u3bcf\u3bd0\u3bd1\u3bd2\u3bd3\u3bd4\u3bd5\u3bd6\u3bd7\u3bd8\u3bd9\u3bda\u3bdb\u3bdc\u3bdd\u3bde\u3bdf\u3be0\u3be1\u3be2\u3be3\u3be4\u3be5\u3be6\u3be7\u3be8\u3be9\u3bea\u3beb\u3bec\u3bed\u3bee\u3bef\u3bf0\u3bf1\u3bf2\u3bf3\u3bf4\u3bf5\u3bf6\u3bf7\u3bf8\u3bf9\u3bfa\u3bfb\u3bfc\u3bfd\u3bfe\u3bff\u3c00\u3c01\u3c02\u3c03\u3c04\u3c05\u3c06\u3c07\u3c08\u3c09\u3c0a\u3c0b\u3c0c\u3c0d\u3c0e\u3c0f\u3c10\u3c11\u3c12\u3c13\u3c14\u3c15\u3c16\u3c17\u3c18\u3c19\u3c1a\u3c1b\u3c1c\u3c1d\u3c1e\u3c1f\u3c20\u3c21\u3c22\u3c23\u3c24\u3c25\u3c26\u3c27\u3c28\u3c29\u3c2a\u3c2b\u3c2c\u3c2d\u3c2e\u3c2f\u3c30\u3c31\u3c32\u3c33\u3c34\u3c35\u3c36\u3c37\u3c38\u3c39\u3c3a\u3c3b\u3c3c\u3c3d\u3c3e\u3c3f\u3c40\u3c41\u3c42\u3c43\u3c44\u3c45\u3c46\u3c47\u3c48\u3c49\u3c4a\u3c4b\u3c4c\u3c4d\u3c4e\u3c4f\u3c50\u3c51\u3c52\u3c53\u3c54\u3c55\u3c56\u3c57\u3c58\u3c59\u3c5a\u3c5b\u3c5c\u3c5d\u3c5e\u3c5f\u3c60\u3c61\u3c62\u3c63\u3c64\u3c65\u3c66\u3c67\u3c68\u3c69\u3c6a\u3c6b\u3c6c\u3c6d\u3c6e\u3c6f\u3c70\u3c71\u3c72\u3c73\u3c74\u3c75\u3c76\u3c77\u3c78\u3c79\u3c7a\u3c7b\u3c7c\u3c7d\u3c7e\u3c7f\u3c80\u3c81\u3c82\u3c83\u3c84\u3c85\u3c86\u3c87\u3c88\u3c89\u3c8a\u3c8b\u3c8c\u3c8d\u3c8e\u3c8f\u3c90\u3c91\u3c92\u3c93\u3c94\u3c95\u3c96\u3c97\u3c98\u3c99\u3c9a\u3c9b\u3c9c\u3c9d\u3c9e\u3c9f\u3ca0\u3ca1\u3ca2\u3ca3\u3ca4\u3ca5\u3ca6\u3ca7\u3ca8\u3ca9\u3caa\u3cab\u3cac\u3cad\u3cae\u3caf\u3cb0\u3cb1\u3cb2\u3cb3\u3cb4\u3cb5\u3cb6\u3cb7\u3cb8\u3cb9\u3cba\u3cbb\u3cbc\u3cbd\u3cbe\u3cbf\u3cc0\u3cc1\u3cc2\u3cc3\u3cc4\u3cc5\u3cc6\u3cc7\u3cc8\u3cc9\u3cca\u3ccb\u3ccc\u3ccd\u3cce\u3ccf\u3cd0\u3cd1\u3cd2\u3cd3\u3cd4\u3cd5\u3cd6\u3cd7\u3cd8\u3cd9\u3cda\u3cdb\u3cdc\u3cdd\u3cde\u3cdf\u3ce0\u3ce1\u3ce2\u3ce3\u3ce4\u3ce5\u3ce6\u3ce7\u3ce8\u3ce9\u3cea\u3ceb\u3cec\u3ced\u3cee\u3cef\u3cf0\u3cf1\u3cf2\u3cf3\u3cf4\u3cf5\u3cf6\u3cf7\u3cf8\u3cf9\u3cfa\u3cfb\u3cfc\u3cfd\u3cfe\u3cff\u3d00\u3d01\u3d02\u3d03\u3d04\u3d05\u3d06\u3d07\u3d08\u3d09\u3d0a\u3d0b\u3d0c\u3d0d\u3d0e\u3d0f\u3d10\u3d11\u3d12\u3d13\u3d14\u3d15\u3d16\u3d17\u3d18\u3d19\u3d1a\u3d1b\u3d1c\u3d1d\u3d1e\u3d1f\u3d20\u3d21\u3d22\u3d23\u3d24\u3d25\u3d26\u3d27\u3d28\u3d29\u3d2a\u3d2b\u3d2c\u3d2d\u3d2e\u3d2f\u3d30\u3d31\u3d32\u3d33\u3d34\u3d35\u3d36\u3d37\u3d38\u3d39\u3d3a\u3d3b\u3d3c\u3d3d\u3d3e\u3d3f\u3d40\u3d41\u3d42\u3d43\u3d44\u3d45\u3d46\u3d47\u3d48\u3d49\u3d4a\u3d4b\u3d4c\u3d4d\u3d4e\u3d4f\u3d50\u3d51\u3d52\u3d53\u3d54\u3d55\u3d56\u3d57\u3d58\u3d59\u3d5a\u3d5b\u3d5c\u3d5d\u3d5e\u3d5f\u3d60\u3d61\u3d62\u3d63\u3d64\u3d65\u3d66\u3d67\u3d68\u3d69\u3d6a\u3d6b\u3d6c\u3d6d\u3d6e\u3d6f\u3d70\u3d71\u3d72\u3d73\u3d74\u3d75\u3d76\u3d77\u3d78\u3d79\u3d7a\u3d7b\u3d7c\u3d7d\u3d7e\u3d7f\u3d80\u3d81\u3d82\u3d83\u3d84\u3d85\u3d86\u3d87\u3d88\u3d89\u3d8a\u3d8b\u3d8c\u3d8d\u3d8e\u3d8f\u3d90\u3d91\u3d92\u3d93\u3d94\u3d95\u3d96\u3d97\u3d98\u3d99\u3d9a\u3d9b\u3d9c\u3d9d\u3d9e\u3d9f\u3da0\u3da1\u3da2\u3da3\u3da4\u3da5\u3da6\u3da7\u3da8\u3da9\u3daa\u3dab\u3dac\u3dad\u3dae\u3daf\u3db0\u3db1\u3db2\u3db3\u3db4\u3db5\u3db6\u3db7\u3db8\u3db9\u3dba\u3dbb\u3dbc\u3dbd\u3dbe\u3dbf\u3dc0\u3dc1\u3dc2\u3dc3\u3dc4\u3dc5\u3dc6\u3dc7\u3dc8\u3dc9\u3dca\u3dcb\u3dcc\u3dcd\u3dce\u3dcf\u3dd0\u3dd1\u3dd2\u3dd3\u3dd4\u3dd5\u3dd6\u3dd7\u3dd8\u3dd9\u3dda\u3ddb\u3ddc\u3ddd\u3dde\u3ddf\u3de0\u3de1\u3de2\u3de3\u3de4\u3de5\u3de6\u3de7\u3de8\u3de9\u3dea\u3deb\u3dec\u3ded\u3dee\u3def\u3df0\u3df1\u3df2\u3df3\u3df4\u3df5\u3df6\u3df7\u3df8\u3df9\u3dfa\u3dfb\u3dfc\u3dfd\u3dfe\u3dff\u3e00\u3e01\u3e02\u3e03\u3e04\u3e05\u3e06\u3e07\u3e08\u3e09\u3e0a\u3e0b\u3e0c\u3e0d\u3e0e\u3e0f\u3e10\u3e11\u3e12\u3e13\u3e14\u3e15\u3e16\u3e17\u3e18\u3e19\u3e1a\u3e1b\u3e1c\u3e1d\u3e1e\u3e1f\u3e20\u3e21\u3e22\u3e23\u3e24\u3e25\u3e26\u3e27\u3e28\u3e29\u3e2a\u3e2b\u3e2c\u3e2d\u3e2e\u3e2f\u3e30\u3e31\u3e32\u3e33\u3e34\u3e35\u3e36\u3e37\u3e38\u3e39\u3e3a\u3e3b\u3e3c\u3e3d\u3e3e\u3e3f\u3e40\u3e41\u3e42\u3e43\u3e44\u3e45\u3e46\u3e47\u3e48\u3e49\u3e4a\u3e4b\u3e4c\u3e4d\u3e4e\u3e4f\u3e50\u3e51\u3e52\u3e53\u3e54\u3e55\u3e56\u3e57\u3e58\u3e59\u3e5a\u3e5b\u3e5c\u3e5d\u3e5e\u3e5f\u3e60\u3e61\u3e62\u3e63\u3e64\u3e65\u3e66\u3e67\u3e68\u3e69\u3e6a\u3e6b\u3e6c\u3e6d\u3e6e\u3e6f\u3e70\u3e71\u3e72\u3e73\u3e74\u3e75\u3e76\u3e77\u3e78\u3e79\u3e7a\u3e7b\u3e7c\u3e7d\u3e7e\u3e7f\u3e80\u3e81\u3e82\u3e83\u3e84\u3e85\u3e86\u3e87\u3e88\u3e89\u3e8a\u3e8b\u3e8c\u3e8d\u3e8e\u3e8f\u3e90\u3e91\u3e92\u3e93\u3e94\u3e95\u3e96\u3e97\u3e98\u3e99\u3e9a\u3e9b\u3e9c\u3e9d\u3e9e\u3e9f\u3ea0\u3ea1\u3ea2\u3ea3\u3ea4\u3ea5\u3ea6\u3ea7\u3ea8\u3ea9\u3eaa\u3eab\u3eac\u3ead\u3eae\u3eaf\u3eb0\u3eb1\u3eb2\u3eb3\u3eb4\u3eb5\u3eb6\u3eb7\u3eb8\u3eb9\u3eba\u3ebb\u3ebc\u3ebd\u3ebe\u3ebf\u3ec0\u3ec1\u3ec2\u3ec3\u3ec4\u3ec5\u3ec6\u3ec7\u3ec8\u3ec9\u3eca\u3ecb\u3ecc\u3ecd\u3ece\u3ecf\u3ed0\u3ed1\u3ed2\u3ed3\u3ed4\u3ed5\u3ed6\u3ed7\u3ed8\u3ed9\u3eda\u3edb\u3edc\u3edd\u3ede\u3edf\u3ee0\u3ee1\u3ee2\u3ee3\u3ee4\u3ee5\u3ee6\u3ee7\u3ee8\u3ee9\u3eea\u3eeb\u3eec\u3eed\u3eee\u3eef\u3ef0\u3ef1\u3ef2\u3ef3\u3ef4\u3ef5\u3ef6\u3ef7\u3ef8\u3ef9\u3efa\u3efb\u3efc\u3efd\u3efe\u3eff\u3f00\u3f01\u3f02\u3f03\u3f04\u3f05\u3f06\u3f07\u3f08\u3f09\u3f0a\u3f0b\u3f0c\u3f0d\u3f0e\u3f0f\u3f10\u3f11\u3f12\u3f13\u3f14\u3f15\u3f16\u3f17\u3f18\u3f19\u3f1a\u3f1b\u3f1c\u3f1d\u3f1e\u3f1f\u3f20\u3f21\u3f22\u3f23\u3f24\u3f25\u3f26\u3f27\u3f28\u3f29\u3f2a\u3f2b\u3f2c\u3f2d\u3f2e\u3f2f\u3f30\u3f31\u3f32\u3f33\u3f34\u3f35\u3f36\u3f37\u3f38\u3f39\u3f3a\u3f3b\u3f3c\u3f3d\u3f3e\u3f3f\u3f40\u3f41\u3f42\u3f43\u3f44\u3f45\u3f46\u3f47\u3f48\u3f49\u3f4a\u3f4b\u3f4c\u3f4d\u3f4e\u3f4f\u3f50\u3f51\u3f52\u3f53\u3f54\u3f55\u3f56\u3f57\u3f58\u3f59\u3f5a\u3f5b\u3f5c\u3f5d\u3f5e\u3f5f\u3f60\u3f61\u3f62\u3f63\u3f64\u3f65\u3f66\u3f67\u3f68\u3f69\u3f6a\u3f6b\u3f6c\u3f6d\u3f6e\u3f6f\u3f70\u3f71\u3f72\u3f73\u3f74\u3f75\u3f76\u3f77\u3f78\u3f79\u3f7a\u3f7b\u3f7c\u3f7d\u3f7e\u3f7f\u3f80\u3f81\u3f82\u3f83\u3f84\u3f85\u3f86\u3f87\u3f88\u3f89\u3f8a\u3f8b\u3f8c\u3f8d\u3f8e\u3f8f\u3f90\u3f91\u3f92\u3f93\u3f94\u3f95\u3f96\u3f97\u3f98\u3f99\u3f9a\u3f9b\u3f9c\u3f9d\u3f9e\u3f9f\u3fa0\u3fa1\u3fa2\u3fa3\u3fa4\u3fa5\u3fa6\u3fa7\u3fa8\u3fa9\u3faa\u3fab\u3fac\u3fad\u3fae\u3faf\u3fb0\u3fb1\u3fb2\u3fb3\u3fb4\u3fb5\u3fb6\u3fb7\u3fb8\u3fb9\u3fba\u3fbb\u3fbc\u3fbd\u3fbe\u3fbf\u3fc0\u3fc1\u3fc2\u3fc3\u3fc4\u3fc5\u3fc6\u3fc7\u3fc8\u3fc9\u3fca\u3fcb\u3fcc\u3fcd\u3fce\u3fcf\u3fd0\u3fd1\u3fd2\u3fd3\u3fd4\u3fd5\u3fd6\u3fd7\u3fd8\u3fd9\u3fda\u3fdb\u3fdc\u3fdd\u3fde\u3fdf\u3fe0\u3fe1\u3fe2\u3fe3\u3fe4\u3fe5\u3fe6\u3fe7\u3fe8\u3fe9\u3fea\u3feb\u3fec\u3fed\u3fee\u3fef\u3ff0\u3ff1\u3ff2\u3ff3\u3ff4\u3ff5\u3ff6\u3ff7\u3ff8\u3ff9\u3ffa\u3ffb\u3ffc\u3ffd\u3ffe\u3fff\u4000\u4001\u4002\u4003\u4004\u4005\u4006\u4007\u4008\u4009\u400a\u400b\u400c\u400d\u400e\u400f\u4010\u4011\u4012\u4013\u4014\u4015\u4016\u4017\u4018\u4019\u401a\u401b\u401c\u401d\u401e\u401f\u4020\u4021\u4022\u4023\u4024\u4025\u4026\u4027\u4028\u4029\u402a\u402b\u402c\u402d\u402e\u402f\u4030\u4031\u4032\u4033\u4034\u4035\u4036\u4037\u4038\u4039\u403a\u403b\u403c\u403d\u403e\u403f\u4040\u4041\u4042\u4043\u4044\u4045\u4046\u4047\u4048\u4049\u404a\u404b\u404c\u404d\u404e\u404f\u4050\u4051\u4052\u4053\u4054\u4055\u4056\u4057\u4058\u4059\u405a\u405b\u405c\u405d\u405e\u405f\u4060\u4061\u4062\u4063\u4064\u4065\u4066\u4067\u4068\u4069\u406a\u406b\u406c\u406d\u406e\u406f\u4070\u4071\u4072\u4073\u4074\u4075\u4076\u4077\u4078\u4079\u407a\u407b\u407c\u407d\u407e\u407f\u4080\u4081\u4082\u4083\u4084\u4085\u4086\u4087\u4088\u4089\u408a\u408b\u408c\u408d\u408e\u408f\u4090\u4091\u4092\u4093\u4094\u4095\u4096\u4097\u4098\u4099\u409a\u409b\u409c\u409d\u409e\u409f\u40a0\u40a1\u40a2\u40a3\u40a4\u40a5\u40a6\u40a7\u40a8\u40a9\u40aa\u40ab\u40ac\u40ad\u40ae\u40af\u40b0\u40b1\u40b2\u40b3\u40b4\u40b5\u40b6\u40b7\u40b8\u40b9\u40ba\u40bb\u40bc\u40bd\u40be\u40bf\u40c0\u40c1\u40c2\u40c3\u40c4\u40c5\u40c6\u40c7\u40c8\u40c9\u40ca\u40cb\u40cc\u40cd\u40ce\u40cf\u40d0\u40d1\u40d2\u40d3\u40d4\u40d5\u40d6\u40d7\u40d8\u40d9\u40da\u40db\u40dc\u40dd\u40de\u40df\u40e0\u40e1\u40e2\u40e3\u40e4\u40e5\u40e6\u40e7\u40e8\u40e9\u40ea\u40eb\u40ec\u40ed\u40ee\u40ef\u40f0\u40f1\u40f2\u40f3\u40f4\u40f5\u40f6\u40f7\u40f8\u40f9\u40fa\u40fb\u40fc\u40fd\u40fe\u40ff\u4100\u4101\u4102\u4103\u4104\u4105\u4106\u4107\u4108\u4109\u410a\u410b\u410c\u410d\u410e\u410f\u4110\u4111\u4112\u4113\u4114\u4115\u4116\u4117\u4118\u4119\u411a\u411b\u411c\u411d\u411e\u411f\u4120\u4121\u4122\u4123\u4124\u4125\u4126\u4127\u4128\u4129\u412a\u412b\u412c\u412d\u412e\u412f\u4130\u4131\u4132\u4133\u4134\u4135\u4136\u4137\u4138\u4139\u413a\u413b\u413c\u413d\u413e\u413f\u4140\u4141\u4142\u4143\u4144\u4145\u4146\u4147\u4148\u4149\u414a\u414b\u414c\u414d\u414e\u414f\u4150\u4151\u4152\u4153\u4154\u4155\u4156\u4157\u4158\u4159\u415a\u415b\u415c\u415d\u415e\u415f\u4160\u4161\u4162\u4163\u4164\u4165\u4166\u4167\u4168\u4169\u416a\u416b\u416c\u416d\u416e\u416f\u4170\u4171\u4172\u4173\u4174\u4175\u4176\u4177\u4178\u4179\u417a\u417b\u417c\u417d\u417e\u417f\u4180\u4181\u4182\u4183\u4184\u4185\u4186\u4187\u4188\u4189\u418a\u418b\u418c\u418d\u418e\u418f\u4190\u4191\u4192\u4193\u4194\u4195\u4196\u4197\u4198\u4199\u419a\u419b\u419c\u419d\u419e\u419f\u41a0\u41a1\u41a2\u41a3\u41a4\u41a5\u41a6\u41a7\u41a8\u41a9\u41aa\u41ab\u41ac\u41ad\u41ae\u41af\u41b0\u41b1\u41b2\u41b3\u41b4\u41b5\u41b6\u41b7\u41b8\u41b9\u41ba\u41bb\u41bc\u41bd\u41be\u41bf\u41c0\u41c1\u41c2\u41c3\u41c4\u41c5\u41c6\u41c7\u41c8\u41c9\u41ca\u41cb\u41cc\u41cd\u41ce\u41cf\u41d0\u41d1\u41d2\u41d3\u41d4\u41d5\u41d6\u41d7\u41d8\u41d9\u41da\u41db\u41dc\u41dd\u41de\u41df\u41e0\u41e1\u41e2\u41e3\u41e4\u41e5\u41e6\u41e7\u41e8\u41e9\u41ea\u41eb\u41ec\u41ed\u41ee\u41ef\u41f0\u41f1\u41f2\u41f3\u41f4\u41f5\u41f6\u41f7\u41f8\u41f9\u41fa\u41fb\u41fc\u41fd\u41fe\u41ff\u4200\u4201\u4202\u4203\u4204\u4205\u4206\u4207\u4208\u4209\u420a\u420b\u420c\u420d\u420e\u420f\u4210\u4211\u4212\u4213\u4214\u4215\u4216\u4217\u4218\u4219\u421a\u421b\u421c\u421d\u421e\u421f\u4220\u4221\u4222\u4223\u4224\u4225\u4226\u4227\u4228\u4229\u422a\u422b\u422c\u422d\u422e\u422f\u4230\u4231\u4232\u4233\u4234\u4235\u4236\u4237\u4238\u4239\u423a\u423b\u423c\u423d\u423e\u423f\u4240\u4241\u4242\u4243\u4244\u4245\u4246\u4247\u4248\u4249\u424a\u424b\u424c\u424d\u424e\u424f\u4250\u4251\u4252\u4253\u4254\u4255\u4256\u4257\u4258\u4259\u425a\u425b\u425c\u425d\u425e\u425f\u4260\u4261\u4262\u4263\u4264\u4265\u4266\u4267\u4268\u4269\u426a\u426b\u426c\u426d\u426e\u426f\u4270\u4271\u4272\u4273\u4274\u4275\u4276\u4277\u4278\u4279\u427a\u427b\u427c\u427d\u427e\u427f\u4280\u4281\u4282\u4283\u4284\u4285\u4286\u4287\u4288\u4289\u428a\u428b\u428c\u428d\u428e\u428f\u4290\u4291\u4292\u4293\u4294\u4295\u4296\u4297\u4298\u4299\u429a\u429b\u429c\u429d\u429e\u429f\u42a0\u42a1\u42a2\u42a3\u42a4\u42a5\u42a6\u42a7\u42a8\u42a9\u42aa\u42ab\u42ac\u42ad\u42ae\u42af\u42b0\u42b1\u42b2\u42b3\u42b4\u42b5\u42b6\u42b7\u42b8\u42b9\u42ba\u42bb\u42bc\u42bd\u42be\u42bf\u42c0\u42c1\u42c2\u42c3\u42c4\u42c5\u42c6\u42c7\u42c8\u42c9\u42ca\u42cb\u42cc\u42cd\u42ce\u42cf\u42d0\u42d1\u42d2\u42d3\u42d4\u42d5\u42d6\u42d7\u42d8\u42d9\u42da\u42db\u42dc\u42dd\u42de\u42df\u42e0\u42e1\u42e2\u42e3\u42e4\u42e5\u42e6\u42e7\u42e8\u42e9\u42ea\u42eb\u42ec\u42ed\u42ee\u42ef\u42f0\u42f1\u42f2\u42f3\u42f4\u42f5\u42f6\u42f7\u42f8\u42f9\u42fa\u42fb\u42fc\u42fd\u42fe\u42ff\u4300\u4301\u4302\u4303\u4304\u4305\u4306\u4307\u4308\u4309\u430a\u430b\u430c\u430d\u430e\u430f\u4310\u4311\u4312\u4313\u4314\u4315\u4316\u4317\u4318\u4319\u431a\u431b\u431c\u431d\u431e\u431f\u4320\u4321\u4322\u4323\u4324\u4325\u4326\u4327\u4328\u4329\u432a\u432b\u432c\u432d\u432e\u432f\u4330\u4331\u4332\u4333\u4334\u4335\u4336\u4337\u4338\u4339\u433a\u433b\u433c\u433d\u433e\u433f\u4340\u4341\u4342\u4343\u4344\u4345\u4346\u4347\u4348\u4349\u434a\u434b\u434c\u434d\u434e\u434f\u4350\u4351\u4352\u4353\u4354\u4355\u4356\u4357\u4358\u4359\u435a\u435b\u435c\u435d\u435e\u435f\u4360\u4361\u4362\u4363\u4364\u4365\u4366\u4367\u4368\u4369\u436a\u436b\u436c\u436d\u436e\u436f\u4370\u4371\u4372\u4373\u4374\u4375\u4376\u4377\u4378\u4379\u437a\u437b\u437c\u437d\u437e\u437f\u4380\u4381\u4382\u4383\u4384\u4385\u4386\u4387\u4388\u4389\u438a\u438b\u438c\u438d\u438e\u438f\u4390\u4391\u4392\u4393\u4394\u4395\u4396\u4397\u4398\u4399\u439a\u439b\u439c\u439d\u439e\u439f\u43a0\u43a1\u43a2\u43a3\u43a4\u43a5\u43a6\u43a7\u43a8\u43a9\u43aa\u43ab\u43ac\u43ad\u43ae\u43af\u43b0\u43b1\u43b2\u43b3\u43b4\u43b5\u43b6\u43b7\u43b8\u43b9\u43ba\u43bb\u43bc\u43bd\u43be\u43bf\u43c0\u43c1\u43c2\u43c3\u43c4\u43c5\u43c6\u43c7\u43c8\u43c9\u43ca\u43cb\u43cc\u43cd\u43ce\u43cf\u43d0\u43d1\u43d2\u43d3\u43d4\u43d5\u43d6\u43d7\u43d8\u43d9\u43da\u43db\u43dc\u43dd\u43de\u43df\u43e0\u43e1\u43e2\u43e3\u43e4\u43e5\u43e6\u43e7\u43e8\u43e9\u43ea\u43eb\u43ec\u43ed\u43ee\u43ef\u43f0\u43f1\u43f2\u43f3\u43f4\u43f5\u43f6\u43f7\u43f8\u43f9\u43fa\u43fb\u43fc\u43fd\u43fe\u43ff\u4400\u4401\u4402\u4403\u4404\u4405\u4406\u4407\u4408\u4409\u440a\u440b\u440c\u440d\u440e\u440f\u4410\u4411\u4412\u4413\u4414\u4415\u4416\u4417\u4418\u4419\u441a\u441b\u441c\u441d\u441e\u441f\u4420\u4421\u4422\u4423\u4424\u4425\u4426\u4427\u4428\u4429\u442a\u442b\u442c\u442d\u442e\u442f\u4430\u4431\u4432\u4433\u4434\u4435\u4436\u4437\u4438\u4439\u443a\u443b\u443c\u443d\u443e\u443f\u4440\u4441\u4442\u4443\u4444\u4445\u4446\u4447\u4448\u4449\u444a\u444b\u444c\u444d\u444e\u444f\u4450\u4451\u4452\u4453\u4454\u4455\u4456\u4457\u4458\u4459\u445a\u445b\u445c\u445d\u445e\u445f\u4460\u4461\u4462\u4463\u4464\u4465\u4466\u4467\u4468\u4469\u446a\u446b\u446c\u446d\u446e\u446f\u4470\u4471\u4472\u4473\u4474\u4475\u4476\u4477\u4478\u4479\u447a\u447b\u447c\u447d\u447e\u447f\u4480\u4481\u4482\u4483\u4484\u4485\u4486\u4487\u4488\u4489\u448a\u448b\u448c\u448d\u448e\u448f\u4490\u4491\u4492\u4493\u4494\u4495\u4496\u4497\u4498\u4499\u449a\u449b\u449c\u449d\u449e\u449f\u44a0\u44a1\u44a2\u44a3\u44a4\u44a5\u44a6\u44a7\u44a8\u44a9\u44aa\u44ab\u44ac\u44ad\u44ae\u44af\u44b0\u44b1\u44b2\u44b3\u44b4\u44b5\u44b6\u44b7\u44b8\u44b9\u44ba\u44bb\u44bc\u44bd\u44be\u44bf\u44c0\u44c1\u44c2\u44c3\u44c4\u44c5\u44c6\u44c7\u44c8\u44c9\u44ca\u44cb\u44cc\u44cd\u44ce\u44cf\u44d0\u44d1\u44d2\u44d3\u44d4\u44d5\u44d6\u44d7\u44d8\u44d9\u44da\u44db\u44dc\u44dd\u44de\u44df\u44e0\u44e1\u44e2\u44e3\u44e4\u44e5\u44e6\u44e7\u44e8\u44e9\u44ea\u44eb\u44ec\u44ed\u44ee\u44ef\u44f0\u44f1\u44f2\u44f3\u44f4\u44f5\u44f6\u44f7\u44f8\u44f9\u44fa\u44fb\u44fc\u44fd\u44fe\u44ff\u4500\u4501\u4502\u4503\u4504\u4505\u4506\u4507\u4508\u4509\u450a\u450b\u450c\u450d\u450e\u450f\u4510\u4511\u4512\u4513\u4514\u4515\u4516\u4517\u4518\u4519\u451a\u451b\u451c\u451d\u451e\u451f\u4520\u4521\u4522\u4523\u4524\u4525\u4526\u4527\u4528\u4529\u452a\u452b\u452c\u452d\u452e\u452f\u4530\u4531\u4532\u4533\u4534\u4535\u4536\u4537\u4538\u4539\u453a\u453b\u453c\u453d\u453e\u453f\u4540\u4541\u4542\u4543\u4544\u4545\u4546\u4547\u4548\u4549\u454a\u454b\u454c\u454d\u454e\u454f\u4550\u4551\u4552\u4553\u4554\u4555\u4556\u4557\u4558\u4559\u455a\u455b\u455c\u455d\u455e\u455f\u4560\u4561\u4562\u4563\u4564\u4565\u4566\u4567\u4568\u4569\u456a\u456b\u456c\u456d\u456e\u456f\u4570\u4571\u4572\u4573\u4574\u4575\u4576\u4577\u4578\u4579\u457a\u457b\u457c\u457d\u457e\u457f\u4580\u4581\u4582\u4583\u4584\u4585\u4586\u4587\u4588\u4589\u458a\u458b\u458c\u458d\u458e\u458f\u4590\u4591\u4592\u4593\u4594\u4595\u4596\u4597\u4598\u4599\u459a\u459b\u459c\u459d\u459e\u459f\u45a0\u45a1\u45a2\u45a3\u45a4\u45a5\u45a6\u45a7\u45a8\u45a9\u45aa\u45ab\u45ac\u45ad\u45ae\u45af\u45b0\u45b1\u45b2\u45b3\u45b4\u45b5\u45b6\u45b7\u45b8\u45b9\u45ba\u45bb\u45bc\u45bd\u45be\u45bf\u45c0\u45c1\u45c2\u45c3\u45c4\u45c5\u45c6\u45c7\u45c8\u45c9\u45ca\u45cb\u45cc\u45cd\u45ce\u45cf\u45d0\u45d1\u45d2\u45d3\u45d4\u45d5\u45d6\u45d7\u45d8\u45d9\u45da\u45db\u45dc\u45dd\u45de\u45df\u45e0\u45e1\u45e2\u45e3\u45e4\u45e5\u45e6\u45e7\u45e8\u45e9\u45ea\u45eb\u45ec\u45ed\u45ee\u45ef\u45f0\u45f1\u45f2\u45f3\u45f4\u45f5\u45f6\u45f7\u45f8\u45f9\u45fa\u45fb\u45fc\u45fd\u45fe\u45ff\u4600\u4601\u4602\u4603\u4604\u4605\u4606\u4607\u4608\u4609\u460a\u460b\u460c\u460d\u460e\u460f\u4610\u4611\u4612\u4613\u4614\u4615\u4616\u4617\u4618\u4619\u461a\u461b\u461c\u461d\u461e\u461f\u4620\u4621\u4622\u4623\u4624\u4625\u4626\u4627\u4628\u4629\u462a\u462b\u462c\u462d\u462e\u462f\u4630\u4631\u4632\u4633\u4634\u4635\u4636\u4637\u4638\u4639\u463a\u463b\u463c\u463d\u463e\u463f\u4640\u4641\u4642\u4643\u4644\u4645\u4646\u4647\u4648\u4649\u464a\u464b\u464c\u464d\u464e\u464f\u4650\u4651\u4652\u4653\u4654\u4655\u4656\u4657\u4658\u4659\u465a\u465b\u465c\u465d\u465e\u465f\u4660\u4661\u4662\u4663\u4664\u4665\u4666\u4667\u4668\u4669\u466a\u466b\u466c\u466d\u466e\u466f\u4670\u4671\u4672\u4673\u4674\u4675\u4676\u4677\u4678\u4679\u467a\u467b\u467c\u467d\u467e\u467f\u4680\u4681\u4682\u4683\u4684\u4685\u4686\u4687\u4688\u4689\u468a\u468b\u468c\u468d\u468e\u468f\u4690\u4691\u4692\u4693\u4694\u4695\u4696\u4697\u4698\u4699\u469a\u469b\u469c\u469d\u469e\u469f\u46a0\u46a1\u46a2\u46a3\u46a4\u46a5\u46a6\u46a7\u46a8\u46a9\u46aa\u46ab\u46ac\u46ad\u46ae\u46af\u46b0\u46b1\u46b2\u46b3\u46b4\u46b5\u46b6\u46b7\u46b8\u46b9\u46ba\u46bb\u46bc\u46bd\u46be\u46bf\u46c0\u46c1\u46c2\u46c3\u46c4\u46c5\u46c6\u46c7\u46c8\u46c9\u46ca\u46cb\u46cc\u46cd\u46ce\u46cf\u46d0\u46d1\u46d2\u46d3\u46d4\u46d5\u46d6\u46d7\u46d8\u46d9\u46da\u46db\u46dc\u46dd\u46de\u46df\u46e0\u46e1\u46e2\u46e3\u46e4\u46e5\u46e6\u46e7\u46e8\u46e9\u46ea\u46eb\u46ec\u46ed\u46ee\u46ef\u46f0\u46f1\u46f2\u46f3\u46f4\u46f5\u46f6\u46f7\u46f8\u46f9\u46fa\u46fb\u46fc\u46fd\u46fe\u46ff\u4700\u4701\u4702\u4703\u4704\u4705\u4706\u4707\u4708\u4709\u470a\u470b\u470c\u470d\u470e\u470f\u4710\u4711\u4712\u4713\u4714\u4715\u4716\u4717\u4718\u4719\u471a\u471b\u471c\u471d\u471e\u471f\u4720\u4721\u4722\u4723\u4724\u4725\u4726\u4727\u4728\u4729\u472a\u472b\u472c\u472d\u472e\u472f\u4730\u4731\u4732\u4733\u4734\u4735\u4736\u4737\u4738\u4739\u473a\u473b\u473c\u473d\u473e\u473f\u4740\u4741\u4742\u4743\u4744\u4745\u4746\u4747\u4748\u4749\u474a\u474b\u474c\u474d\u474e\u474f\u4750\u4751\u4752\u4753\u4754\u4755\u4756\u4757\u4758\u4759\u475a\u475b\u475c\u475d\u475e\u475f\u4760\u4761\u4762\u4763\u4764\u4765\u4766\u4767\u4768\u4769\u476a\u476b\u476c\u476d\u476e\u476f\u4770\u4771\u4772\u4773\u4774\u4775\u4776\u4777\u4778\u4779\u477a\u477b\u477c\u477d\u477e\u477f\u4780\u4781\u4782\u4783\u4784\u4785\u4786\u4787\u4788\u4789\u478a\u478b\u478c\u478d\u478e\u478f\u4790\u4791\u4792\u4793\u4794\u4795\u4796\u4797\u4798\u4799\u479a\u479b\u479c\u479d\u479e\u479f\u47a0\u47a1\u47a2\u47a3\u47a4\u47a5\u47a6\u47a7\u47a8\u47a9\u47aa\u47ab\u47ac\u47ad\u47ae\u47af\u47b0\u47b1\u47b2\u47b3\u47b4\u47b5\u47b6\u47b7\u47b8\u47b9\u47ba\u47bb\u47bc\u47bd\u47be\u47bf\u47c0\u47c1\u47c2\u47c3\u47c4\u47c5\u47c6\u47c7\u47c8\u47c9\u47ca\u47cb\u47cc\u47cd\u47ce\u47cf\u47d0\u47d1\u47d2\u47d3\u47d4\u47d5\u47d6\u47d7\u47d8\u47d9\u47da\u47db\u47dc\u47dd\u47de\u47df\u47e0\u47e1\u47e2\u47e3\u47e4\u47e5\u47e6\u47e7\u47e8\u47e9\u47ea\u47eb\u47ec\u47ed\u47ee\u47ef\u47f0\u47f1\u47f2\u47f3\u47f4\u47f5\u47f6\u47f7\u47f8\u47f9\u47fa\u47fb\u47fc\u47fd\u47fe\u47ff\u4800\u4801\u4802\u4803\u4804\u4805\u4806\u4807\u4808\u4809\u480a\u480b\u480c\u480d\u480e\u480f\u4810\u4811\u4812\u4813\u4814\u4815\u4816\u4817\u4818\u4819\u481a\u481b\u481c\u481d\u481e\u481f\u4820\u4821\u4822\u4823\u4824\u4825\u4826\u4827\u4828\u4829\u482a\u482b\u482c\u482d\u482e\u482f\u4830\u4831\u4832\u4833\u4834\u4835\u4836\u4837\u4838\u4839\u483a\u483b\u483c\u483d\u483e\u483f\u4840\u4841\u4842\u4843\u4844\u4845\u4846\u4847\u4848\u4849\u484a\u484b\u484c\u484d\u484e\u484f\u4850\u4851\u4852\u4853\u4854\u4855\u4856\u4857\u4858\u4859\u485a\u485b\u485c\u485d\u485e\u485f\u4860\u4861\u4862\u4863\u4864\u4865\u4866\u4867\u4868\u4869\u486a\u486b\u486c\u486d\u486e\u486f\u4870\u4871\u4872\u4873\u4874\u4875\u4876\u4877\u4878\u4879\u487a\u487b\u487c\u487d\u487e\u487f\u4880\u4881\u4882\u4883\u4884\u4885\u4886\u4887\u4888\u4889\u488a\u488b\u488c\u488d\u488e\u488f\u4890\u4891\u4892\u4893\u4894\u4895\u4896\u4897\u4898\u4899\u489a\u489b\u489c\u489d\u489e\u489f\u48a0\u48a1\u48a2\u48a3\u48a4\u48a5\u48a6\u48a7\u48a8\u48a9\u48aa\u48ab\u48ac\u48ad\u48ae\u48af\u48b0\u48b1\u48b2\u48b3\u48b4\u48b5\u48b6\u48b7\u48b8\u48b9\u48ba\u48bb\u48bc\u48bd\u48be\u48bf\u48c0\u48c1\u48c2\u48c3\u48c4\u48c5\u48c6\u48c7\u48c8\u48c9\u48ca\u48cb\u48cc\u48cd\u48ce\u48cf\u48d0\u48d1\u48d2\u48d3\u48d4\u48d5\u48d6\u48d7\u48d8\u48d9\u48da\u48db\u48dc\u48dd\u48de\u48df\u48e0\u48e1\u48e2\u48e3\u48e4\u48e5\u48e6\u48e7\u48e8\u48e9\u48ea\u48eb\u48ec\u48ed\u48ee\u48ef\u48f0\u48f1\u48f2\u48f3\u48f4\u48f5\u48f6\u48f7\u48f8\u48f9\u48fa\u48fb\u48fc\u48fd\u48fe\u48ff\u4900\u4901\u4902\u4903\u4904\u4905\u4906\u4907\u4908\u4909\u490a\u490b\u490c\u490d\u490e\u490f\u4910\u4911\u4912\u4913\u4914\u4915\u4916\u4917\u4918\u4919\u491a\u491b\u491c\u491d\u491e\u491f\u4920\u4921\u4922\u4923\u4924\u4925\u4926\u4927\u4928\u4929\u492a\u492b\u492c\u492d\u492e\u492f\u4930\u4931\u4932\u4933\u4934\u4935\u4936\u4937\u4938\u4939\u493a\u493b\u493c\u493d\u493e\u493f\u4940\u4941\u4942\u4943\u4944\u4945\u4946\u4947\u4948\u4949\u494a\u494b\u494c\u494d\u494e\u494f\u4950\u4951\u4952\u4953\u4954\u4955\u4956\u4957\u4958\u4959\u495a\u495b\u495c\u495d\u495e\u495f\u4960\u4961\u4962\u4963\u4964\u4965\u4966\u4967\u4968\u4969\u496a\u496b\u496c\u496d\u496e\u496f\u4970\u4971\u4972\u4973\u4974\u4975\u4976\u4977\u4978\u4979\u497a\u497b\u497c\u497d\u497e\u497f\u4980\u4981\u4982\u4983\u4984\u4985\u4986\u4987\u4988\u4989\u498a\u498b\u498c\u498d\u498e\u498f\u4990\u4991\u4992\u4993\u4994\u4995\u4996\u4997\u4998\u4999\u499a\u499b\u499c\u499d\u499e\u499f\u49a0\u49a1\u49a2\u49a3\u49a4\u49a5\u49a6\u49a7\u49a8\u49a9\u49aa\u49ab\u49ac\u49ad\u49ae\u49af\u49b0\u49b1\u49b2\u49b3\u49b4\u49b5\u49b6\u49b7\u49b8\u49b9\u49ba\u49bb\u49bc\u49bd\u49be\u49bf\u49c0\u49c1\u49c2\u49c3\u49c4\u49c5\u49c6\u49c7\u49c8\u49c9\u49ca\u49cb\u49cc\u49cd\u49ce\u49cf\u49d0\u49d1\u49d2\u49d3\u49d4\u49d5\u49d6\u49d7\u49d8\u49d9\u49da\u49db\u49dc\u49dd\u49de\u49df\u49e0\u49e1\u49e2\u49e3\u49e4\u49e5\u49e6\u49e7\u49e8\u49e9\u49ea\u49eb\u49ec\u49ed\u49ee\u49ef\u49f0\u49f1\u49f2\u49f3\u49f4\u49f5\u49f6\u49f7\u49f8\u49f9\u49fa\u49fb\u49fc\u49fd\u49fe\u49ff\u4a00\u4a01\u4a02\u4a03\u4a04\u4a05\u4a06\u4a07\u4a08\u4a09\u4a0a\u4a0b\u4a0c\u4a0d\u4a0e\u4a0f\u4a10\u4a11\u4a12\u4a13\u4a14\u4a15\u4a16\u4a17\u4a18\u4a19\u4a1a\u4a1b\u4a1c\u4a1d\u4a1e\u4a1f\u4a20\u4a21\u4a22\u4a23\u4a24\u4a25\u4a26\u4a27\u4a28\u4a29\u4a2a\u4a2b\u4a2c\u4a2d\u4a2e\u4a2f\u4a30\u4a31\u4a32\u4a33\u4a34\u4a35\u4a36\u4a37\u4a38\u4a39\u4a3a\u4a3b\u4a3c\u4a3d\u4a3e\u4a3f\u4a40\u4a41\u4a42\u4a43\u4a44\u4a45\u4a46\u4a47\u4a48\u4a49\u4a4a\u4a4b\u4a4c\u4a4d\u4a4e\u4a4f\u4a50\u4a51\u4a52\u4a53\u4a54\u4a55\u4a56\u4a57\u4a58\u4a59\u4a5a\u4a5b\u4a5c\u4a5d\u4a5e\u4a5f\u4a60\u4a61\u4a62\u4a63\u4a64\u4a65\u4a66\u4a67\u4a68\u4a69\u4a6a\u4a6b\u4a6c\u4a6d\u4a6e\u4a6f\u4a70\u4a71\u4a72\u4a73\u4a74\u4a75\u4a76\u4a77\u4a78\u4a79\u4a7a\u4a7b\u4a7c\u4a7d\u4a7e\u4a7f\u4a80\u4a81\u4a82\u4a83\u4a84\u4a85\u4a86\u4a87\u4a88\u4a89\u4a8a\u4a8b\u4a8c\u4a8d\u4a8e\u4a8f\u4a90\u4a91\u4a92\u4a93\u4a94\u4a95\u4a96\u4a97\u4a98\u4a99\u4a9a\u4a9b\u4a9c\u4a9d\u4a9e\u4a9f\u4aa0\u4aa1\u4aa2\u4aa3\u4aa4\u4aa5\u4aa6\u4aa7\u4aa8\u4aa9\u4aaa\u4aab\u4aac\u4aad\u4aae\u4aaf\u4ab0\u4ab1\u4ab2\u4ab3\u4ab4\u4ab5\u4ab6\u4ab7\u4ab8\u4ab9\u4aba\u4abb\u4abc\u4abd\u4abe\u4abf\u4ac0\u4ac1\u4ac2\u4ac3\u4ac4\u4ac5\u4ac6\u4ac7\u4ac8\u4ac9\u4aca\u4acb\u4acc\u4acd\u4ace\u4acf\u4ad0\u4ad1\u4ad2\u4ad3\u4ad4\u4ad5\u4ad6\u4ad7\u4ad8\u4ad9\u4ada\u4adb\u4adc\u4add\u4ade\u4adf\u4ae0\u4ae1\u4ae2\u4ae3\u4ae4\u4ae5\u4ae6\u4ae7\u4ae8\u4ae9\u4aea\u4aeb\u4aec\u4aed\u4aee\u4aef\u4af0\u4af1\u4af2\u4af3\u4af4\u4af5\u4af6\u4af7\u4af8\u4af9\u4afa\u4afb\u4afc\u4afd\u4afe\u4aff\u4b00\u4b01\u4b02\u4b03\u4b04\u4b05\u4b06\u4b07\u4b08\u4b09\u4b0a\u4b0b\u4b0c\u4b0d\u4b0e\u4b0f\u4b10\u4b11\u4b12\u4b13\u4b14\u4b15\u4b16\u4b17\u4b18\u4b19\u4b1a\u4b1b\u4b1c\u4b1d\u4b1e\u4b1f\u4b20\u4b21\u4b22\u4b23\u4b24\u4b25\u4b26\u4b27\u4b28\u4b29\u4b2a\u4b2b\u4b2c\u4b2d\u4b2e\u4b2f\u4b30\u4b31\u4b32\u4b33\u4b34\u4b35\u4b36\u4b37\u4b38\u4b39\u4b3a\u4b3b\u4b3c\u4b3d\u4b3e\u4b3f\u4b40\u4b41\u4b42\u4b43\u4b44\u4b45\u4b46\u4b47\u4b48\u4b49\u4b4a\u4b4b\u4b4c\u4b4d\u4b4e\u4b4f\u4b50\u4b51\u4b52\u4b53\u4b54\u4b55\u4b56\u4b57\u4b58\u4b59\u4b5a\u4b5b\u4b5c\u4b5d\u4b5e\u4b5f\u4b60\u4b61\u4b62\u4b63\u4b64\u4b65\u4b66\u4b67\u4b68\u4b69\u4b6a\u4b6b\u4b6c\u4b6d\u4b6e\u4b6f\u4b70\u4b71\u4b72\u4b73\u4b74\u4b75\u4b76\u4b77\u4b78\u4b79\u4b7a\u4b7b\u4b7c\u4b7d\u4b7e\u4b7f\u4b80\u4b81\u4b82\u4b83\u4b84\u4b85\u4b86\u4b87\u4b88\u4b89\u4b8a\u4b8b\u4b8c\u4b8d\u4b8e\u4b8f\u4b90\u4b91\u4b92\u4b93\u4b94\u4b95\u4b96\u4b97\u4b98\u4b99\u4b9a\u4b9b\u4b9c\u4b9d\u4b9e\u4b9f\u4ba0\u4ba1\u4ba2\u4ba3\u4ba4\u4ba5\u4ba6\u4ba7\u4ba8\u4ba9\u4baa\u4bab\u4bac\u4bad\u4bae\u4baf\u4bb0\u4bb1\u4bb2\u4bb3\u4bb4\u4bb5\u4bb6\u4bb7\u4bb8\u4bb9\u4bba\u4bbb\u4bbc\u4bbd\u4bbe\u4bbf\u4bc0\u4bc1\u4bc2\u4bc3\u4bc4\u4bc5\u4bc6\u4bc7\u4bc8\u4bc9\u4bca\u4bcb\u4bcc\u4bcd\u4bce\u4bcf\u4bd0\u4bd1\u4bd2\u4bd3\u4bd4\u4bd5\u4bd6\u4bd7\u4bd8\u4bd9\u4bda\u4bdb\u4bdc\u4bdd\u4bde\u4bdf\u4be0\u4be1\u4be2\u4be3\u4be4\u4be5\u4be6\u4be7\u4be8\u4be9\u4bea\u4beb\u4bec\u4bed\u4bee\u4bef\u4bf0\u4bf1\u4bf2\u4bf3\u4bf4\u4bf5\u4bf6\u4bf7\u4bf8\u4bf9\u4bfa\u4bfb\u4bfc\u4bfd\u4bfe\u4bff\u4c00\u4c01\u4c02\u4c03\u4c04\u4c05\u4c06\u4c07\u4c08\u4c09\u4c0a\u4c0b\u4c0c\u4c0d\u4c0e\u4c0f\u4c10\u4c11\u4c12\u4c13\u4c14\u4c15\u4c16\u4c17\u4c18\u4c19\u4c1a\u4c1b\u4c1c\u4c1d\u4c1e\u4c1f\u4c20\u4c21\u4c22\u4c23\u4c24\u4c25\u4c26\u4c27\u4c28\u4c29\u4c2a\u4c2b\u4c2c\u4c2d\u4c2e\u4c2f\u4c30\u4c31\u4c32\u4c33\u4c34\u4c35\u4c36\u4c37\u4c38\u4c39\u4c3a\u4c3b\u4c3c\u4c3d\u4c3e\u4c3f\u4c40\u4c41\u4c42\u4c43\u4c44\u4c45\u4c46\u4c47\u4c48\u4c49\u4c4a\u4c4b\u4c4c\u4c4d\u4c4e\u4c4f\u4c50\u4c51\u4c52\u4c53\u4c54\u4c55\u4c56\u4c57\u4c58\u4c59\u4c5a\u4c5b\u4c5c\u4c5d\u4c5e\u4c5f\u4c60\u4c61\u4c62\u4c63\u4c64\u4c65\u4c66\u4c67\u4c68\u4c69\u4c6a\u4c6b\u4c6c\u4c6d\u4c6e\u4c6f\u4c70\u4c71\u4c72\u4c73\u4c74\u4c75\u4c76\u4c77\u4c78\u4c79\u4c7a\u4c7b\u4c7c\u4c7d\u4c7e\u4c7f\u4c80\u4c81\u4c82\u4c83\u4c84\u4c85\u4c86\u4c87\u4c88\u4c89\u4c8a\u4c8b\u4c8c\u4c8d\u4c8e\u4c8f\u4c90\u4c91\u4c92\u4c93\u4c94\u4c95\u4c96\u4c97\u4c98\u4c99\u4c9a\u4c9b\u4c9c\u4c9d\u4c9e\u4c9f\u4ca0\u4ca1\u4ca2\u4ca3\u4ca4\u4ca5\u4ca6\u4ca7\u4ca8\u4ca9\u4caa\u4cab\u4cac\u4cad\u4cae\u4caf\u4cb0\u4cb1\u4cb2\u4cb3\u4cb4\u4cb5\u4cb6\u4cb7\u4cb8\u4cb9\u4cba\u4cbb\u4cbc\u4cbd\u4cbe\u4cbf\u4cc0\u4cc1\u4cc2\u4cc3\u4cc4\u4cc5\u4cc6\u4cc7\u4cc8\u4cc9\u4cca\u4ccb\u4ccc\u4ccd\u4cce\u4ccf\u4cd0\u4cd1\u4cd2\u4cd3\u4cd4\u4cd5\u4cd6\u4cd7\u4cd8\u4cd9\u4cda\u4cdb\u4cdc\u4cdd\u4cde\u4cdf\u4ce0\u4ce1\u4ce2\u4ce3\u4ce4\u4ce5\u4ce6\u4ce7\u4ce8\u4ce9\u4cea\u4ceb\u4cec\u4ced\u4cee\u4cef\u4cf0\u4cf1\u4cf2\u4cf3\u4cf4\u4cf5\u4cf6\u4cf7\u4cf8\u4cf9\u4cfa\u4cfb\u4cfc\u4cfd\u4cfe\u4cff\u4d00\u4d01\u4d02\u4d03\u4d04\u4d05\u4d06\u4d07\u4d08\u4d09\u4d0a\u4d0b\u4d0c\u4d0d\u4d0e\u4d0f\u4d10\u4d11\u4d12\u4d13\u4d14\u4d15\u4d16\u4d17\u4d18\u4d19\u4d1a\u4d1b\u4d1c\u4d1d\u4d1e\u4d1f\u4d20\u4d21\u4d22\u4d23\u4d24\u4d25\u4d26\u4d27\u4d28\u4d29\u4d2a\u4d2b\u4d2c\u4d2d\u4d2e\u4d2f\u4d30\u4d31\u4d32\u4d33\u4d34\u4d35\u4d36\u4d37\u4d38\u4d39\u4d3a\u4d3b\u4d3c\u4d3d\u4d3e\u4d3f\u4d40\u4d41\u4d42\u4d43\u4d44\u4d45\u4d46\u4d47\u4d48\u4d49\u4d4a\u4d4b\u4d4c\u4d4d\u4d4e\u4d4f\u4d50\u4d51\u4d52\u4d53\u4d54\u4d55\u4d56\u4d57\u4d58\u4d59\u4d5a\u4d5b\u4d5c\u4d5d\u4d5e\u4d5f\u4d60\u4d61\u4d62\u4d63\u4d64\u4d65\u4d66\u4d67\u4d68\u4d69\u4d6a\u4d6b\u4d6c\u4d6d\u4d6e\u4d6f\u4d70\u4d71\u4d72\u4d73\u4d74\u4d75\u4d76\u4d77\u4d78\u4d79\u4d7a\u4d7b\u4d7c\u4d7d\u4d7e\u4d7f\u4d80\u4d81\u4d82\u4d83\u4d84\u4d85\u4d86\u4d87\u4d88\u4d89\u4d8a\u4d8b\u4d8c\u4d8d\u4d8e\u4d8f\u4d90\u4d91\u4d92\u4d93\u4d94\u4d95\u4d96\u4d97\u4d98\u4d99\u4d9a\u4d9b\u4d9c\u4d9d\u4d9e\u4d9f\u4da0\u4da1\u4da2\u4da3\u4da4\u4da5\u4da6\u4da7\u4da8\u4da9\u4daa\u4dab\u4dac\u4dad\u4dae\u4daf\u4db0\u4db1\u4db2\u4db3\u4db4\u4db5\u4e00\u4e01\u4e02\u4e03\u4e04\u4e05\u4e06\u4e07\u4e08\u4e09\u4e0a\u4e0b\u4e0c\u4e0d\u4e0e\u4e0f\u4e10\u4e11\u4e12\u4e13\u4e14\u4e15\u4e16\u4e17\u4e18\u4e19\u4e1a\u4e1b\u4e1c\u4e1d\u4e1e\u4e1f\u4e20\u4e21\u4e22\u4e23\u4e24\u4e25\u4e26\u4e27\u4e28\u4e29\u4e2a\u4e2b\u4e2c\u4e2d\u4e2e\u4e2f\u4e30\u4e31\u4e32\u4e33\u4e34\u4e35\u4e36\u4e37\u4e38\u4e39\u4e3a\u4e3b\u4e3c\u4e3d\u4e3e\u4e3f\u4e40\u4e41\u4e42\u4e43\u4e44\u4e45\u4e46\u4e47\u4e48\u4e49\u4e4a\u4e4b\u4e4c\u4e4d\u4e4e\u4e4f\u4e50\u4e51\u4e52\u4e53\u4e54\u4e55\u4e56\u4e57\u4e58\u4e59\u4e5a\u4e5b\u4e5c\u4e5d\u4e5e\u4e5f\u4e60\u4e61\u4e62\u4e63\u4e64\u4e65\u4e66\u4e67\u4e68\u4e69\u4e6a\u4e6b\u4e6c\u4e6d\u4e6e\u4e6f\u4e70\u4e71\u4e72\u4e73\u4e74\u4e75\u4e76\u4e77\u4e78\u4e79\u4e7a\u4e7b\u4e7c\u4e7d\u4e7e\u4e7f\u4e80\u4e81\u4e82\u4e83\u4e84\u4e85\u4e86\u4e87\u4e88\u4e89\u4e8a\u4e8b\u4e8c\u4e8d\u4e8e\u4e8f\u4e90\u4e91\u4e92\u4e93\u4e94\u4e95\u4e96\u4e97\u4e98\u4e99\u4e9a\u4e9b\u4e9c\u4e9d\u4e9e\u4e9f\u4ea0\u4ea1\u4ea2\u4ea3\u4ea4\u4ea5\u4ea6\u4ea7\u4ea8\u4ea9\u4eaa\u4eab\u4eac\u4ead\u4eae\u4eaf\u4eb0\u4eb1\u4eb2\u4eb3\u4eb4\u4eb5\u4eb6\u4eb7\u4eb8\u4eb9\u4eba\u4ebb\u4ebc\u4ebd\u4ebe\u4ebf\u4ec0\u4ec1\u4ec2\u4ec3\u4ec4\u4ec5\u4ec6\u4ec7\u4ec8\u4ec9\u4eca\u4ecb\u4ecc\u4ecd\u4ece\u4ecf\u4ed0\u4ed1\u4ed2\u4ed3\u4ed4\u4ed5\u4ed6\u4ed7\u4ed8\u4ed9\u4eda\u4edb\u4edc\u4edd\u4ede\u4edf\u4ee0\u4ee1\u4ee2\u4ee3\u4ee4\u4ee5\u4ee6\u4ee7\u4ee8\u4ee9\u4eea\u4eeb\u4eec\u4eed\u4eee\u4eef\u4ef0\u4ef1\u4ef2\u4ef3\u4ef4\u4ef5\u4ef6\u4ef7\u4ef8\u4ef9\u4efa\u4efb\u4efc\u4efd\u4efe\u4eff\u4f00\u4f01\u4f02\u4f03\u4f04\u4f05\u4f06\u4f07\u4f08\u4f09\u4f0a\u4f0b\u4f0c\u4f0d\u4f0e\u4f0f\u4f10\u4f11\u4f12\u4f13\u4f14\u4f15\u4f16\u4f17\u4f18\u4f19\u4f1a\u4f1b\u4f1c\u4f1d\u4f1e\u4f1f\u4f20\u4f21\u4f22\u4f23\u4f24\u4f25\u4f26\u4f27\u4f28\u4f29\u4f2a\u4f2b\u4f2c\u4f2d\u4f2e\u4f2f\u4f30\u4f31\u4f32\u4f33\u4f34\u4f35\u4f36\u4f37\u4f38\u4f39\u4f3a\u4f3b\u4f3c\u4f3d\u4f3e\u4f3f\u4f40\u4f41\u4f42\u4f43\u4f44\u4f45\u4f46\u4f47\u4f48\u4f49\u4f4a\u4f4b\u4f4c\u4f4d\u4f4e\u4f4f\u4f50\u4f51\u4f52\u4f53\u4f54\u4f55\u4f56\u4f57\u4f58\u4f59\u4f5a\u4f5b\u4f5c\u4f5d\u4f5e\u4f5f\u4f60\u4f61\u4f62\u4f63\u4f64\u4f65\u4f66\u4f67\u4f68\u4f69\u4f6a\u4f6b\u4f6c\u4f6d\u4f6e\u4f6f\u4f70\u4f71\u4f72\u4f73\u4f74\u4f75\u4f76\u4f77\u4f78\u4f79\u4f7a\u4f7b\u4f7c\u4f7d\u4f7e\u4f7f\u4f80\u4f81\u4f82\u4f83\u4f84\u4f85\u4f86\u4f87\u4f88\u4f89\u4f8a\u4f8b\u4f8c\u4f8d\u4f8e\u4f8f\u4f90\u4f91\u4f92\u4f93\u4f94\u4f95\u4f96\u4f97\u4f98\u4f99\u4f9a\u4f9b\u4f9c\u4f9d\u4f9e\u4f9f\u4fa0\u4fa1\u4fa2\u4fa3\u4fa4\u4fa5\u4fa6\u4fa7\u4fa8\u4fa9\u4faa\u4fab\u4fac\u4fad\u4fae\u4faf\u4fb0\u4fb1\u4fb2\u4fb3\u4fb4\u4fb5\u4fb6\u4fb7\u4fb8\u4fb9\u4fba\u4fbb\u4fbc\u4fbd\u4fbe\u4fbf\u4fc0\u4fc1\u4fc2\u4fc3\u4fc4\u4fc5\u4fc6\u4fc7\u4fc8\u4fc9\u4fca\u4fcb\u4fcc\u4fcd\u4fce\u4fcf\u4fd0\u4fd1\u4fd2\u4fd3\u4fd4\u4fd5\u4fd6\u4fd7\u4fd8\u4fd9\u4fda\u4fdb\u4fdc\u4fdd\u4fde\u4fdf\u4fe0\u4fe1\u4fe2\u4fe3\u4fe4\u4fe5\u4fe6\u4fe7\u4fe8\u4fe9\u4fea\u4feb\u4fec\u4fed\u4fee\u4fef\u4ff0\u4ff1\u4ff2\u4ff3\u4ff4\u4ff5\u4ff6\u4ff7\u4ff8\u4ff9\u4ffa\u4ffb\u4ffc\u4ffd\u4ffe\u4fff\u5000\u5001\u5002\u5003\u5004\u5005\u5006\u5007\u5008\u5009\u500a\u500b\u500c\u500d\u500e\u500f\u5010\u5011\u5012\u5013\u5014\u5015\u5016\u5017\u5018\u5019\u501a\u501b\u501c\u501d\u501e\u501f\u5020\u5021\u5022\u5023\u5024\u5025\u5026\u5027\u5028\u5029\u502a\u502b\u502c\u502d\u502e\u502f\u5030\u5031\u5032\u5033\u5034\u5035\u5036\u5037\u5038\u5039\u503a\u503b\u503c\u503d\u503e\u503f\u5040\u5041\u5042\u5043\u5044\u5045\u5046\u5047\u5048\u5049\u504a\u504b\u504c\u504d\u504e\u504f\u5050\u5051\u5052\u5053\u5054\u5055\u5056\u5057\u5058\u5059\u505a\u505b\u505c\u505d\u505e\u505f\u5060\u5061\u5062\u5063\u5064\u5065\u5066\u5067\u5068\u5069\u506a\u506b\u506c\u506d\u506e\u506f\u5070\u5071\u5072\u5073\u5074\u5075\u5076\u5077\u5078\u5079\u507a\u507b\u507c\u507d\u507e\u507f\u5080\u5081\u5082\u5083\u5084\u5085\u5086\u5087\u5088\u5089\u508a\u508b\u508c\u508d\u508e\u508f\u5090\u5091\u5092\u5093\u5094\u5095\u5096\u5097\u5098\u5099\u509a\u509b\u509c\u509d\u509e\u509f\u50a0\u50a1\u50a2\u50a3\u50a4\u50a5\u50a6\u50a7\u50a8\u50a9\u50aa\u50ab\u50ac\u50ad\u50ae\u50af\u50b0\u50b1\u50b2\u50b3\u50b4\u50b5\u50b6\u50b7\u50b8\u50b9\u50ba\u50bb\u50bc\u50bd\u50be\u50bf\u50c0\u50c1\u50c2\u50c3\u50c4\u50c5\u50c6\u50c7\u50c8\u50c9\u50ca\u50cb\u50cc\u50cd\u50ce\u50cf\u50d0\u50d1\u50d2\u50d3\u50d4\u50d5\u50d6\u50d7\u50d8\u50d9\u50da\u50db\u50dc\u50dd\u50de\u50df\u50e0\u50e1\u50e2\u50e3\u50e4\u50e5\u50e6\u50e7\u50e8\u50e9\u50ea\u50eb\u50ec\u50ed\u50ee\u50ef\u50f0\u50f1\u50f2\u50f3\u50f4\u50f5\u50f6\u50f7\u50f8\u50f9\u50fa\u50fb\u50fc\u50fd\u50fe\u50ff\u5100\u5101\u5102\u5103\u5104\u5105\u5106\u5107\u5108\u5109\u510a\u510b\u510c\u510d\u510e\u510f\u5110\u5111\u5112\u5113\u5114\u5115\u5116\u5117\u5118\u5119\u511a\u511b\u511c\u511d\u511e\u511f\u5120\u5121\u5122\u5123\u5124\u5125\u5126\u5127\u5128\u5129\u512a\u512b\u512c\u512d\u512e\u512f\u5130\u5131\u5132\u5133\u5134\u5135\u5136\u5137\u5138\u5139\u513a\u513b\u513c\u513d\u513e\u513f\u5140\u5141\u5142\u5143\u5144\u5145\u5146\u5147\u5148\u5149\u514a\u514b\u514c\u514d\u514e\u514f\u5150\u5151\u5152\u5153\u5154\u5155\u5156\u5157\u5158\u5159\u515a\u515b\u515c\u515d\u515e\u515f\u5160\u5161\u5162\u5163\u5164\u5165\u5166\u5167\u5168\u5169\u516a\u516b\u516c\u516d\u516e\u516f\u5170\u5171\u5172\u5173\u5174\u5175\u5176\u5177\u5178\u5179\u517a\u517b\u517c\u517d\u517e\u517f\u5180\u5181\u5182\u5183\u5184\u5185\u5186\u5187\u5188\u5189\u518a\u518b\u518c\u518d\u518e\u518f\u5190\u5191\u5192\u5193\u5194\u5195\u5196\u5197\u5198\u5199\u519a\u519b\u519c\u519d\u519e\u519f\u51a0\u51a1\u51a2\u51a3\u51a4\u51a5\u51a6\u51a7\u51a8\u51a9\u51aa\u51ab\u51ac\u51ad\u51ae\u51af\u51b0\u51b1\u51b2\u51b3\u51b4\u51b5\u51b6\u51b7\u51b8\u51b9\u51ba\u51bb\u51bc\u51bd\u51be\u51bf\u51c0\u51c1\u51c2\u51c3\u51c4\u51c5\u51c6\u51c7\u51c8\u51c9\u51ca\u51cb\u51cc\u51cd\u51ce\u51cf\u51d0\u51d1\u51d2\u51d3\u51d4\u51d5\u51d6\u51d7\u51d8\u51d9\u51da\u51db\u51dc\u51dd\u51de\u51df\u51e0\u51e1\u51e2\u51e3\u51e4\u51e5\u51e6\u51e7\u51e8\u51e9\u51ea\u51eb\u51ec\u51ed\u51ee\u51ef\u51f0\u51f1\u51f2\u51f3\u51f4\u51f5\u51f6\u51f7\u51f8\u51f9\u51fa\u51fb\u51fc\u51fd\u51fe\u51ff\u5200\u5201\u5202\u5203\u5204\u5205\u5206\u5207\u5208\u5209\u520a\u520b\u520c\u520d\u520e\u520f\u5210\u5211\u5212\u5213\u5214\u5215\u5216\u5217\u5218\u5219\u521a\u521b\u521c\u521d\u521e\u521f\u5220\u5221\u5222\u5223\u5224\u5225\u5226\u5227\u5228\u5229\u522a\u522b\u522c\u522d\u522e\u522f\u5230\u5231\u5232\u5233\u5234\u5235\u5236\u5237\u5238\u5239\u523a\u523b\u523c\u523d\u523e\u523f\u5240\u5241\u5242\u5243\u5244\u5245\u5246\u5247\u5248\u5249\u524a\u524b\u524c\u524d\u524e\u524f\u5250\u5251\u5252\u5253\u5254\u5255\u5256\u5257\u5258\u5259\u525a\u525b\u525c\u525d\u525e\u525f\u5260\u5261\u5262\u5263\u5264\u5265\u5266\u5267\u5268\u5269\u526a\u526b\u526c\u526d\u526e\u526f\u5270\u5271\u5272\u5273\u5274\u5275\u5276\u5277\u5278\u5279\u527a\u527b\u527c\u527d\u527e\u527f\u5280\u5281\u5282\u5283\u5284\u5285\u5286\u5287\u5288\u5289\u528a\u528b\u528c\u528d\u528e\u528f\u5290\u5291\u5292\u5293\u5294\u5295\u5296\u5297\u5298\u5299\u529a\u529b\u529c\u529d\u529e\u529f\u52a0\u52a1\u52a2\u52a3\u52a4\u52a5\u52a6\u52a7\u52a8\u52a9\u52aa\u52ab\u52ac\u52ad\u52ae\u52af\u52b0\u52b1\u52b2\u52b3\u52b4\u52b5\u52b6\u52b7\u52b8\u52b9\u52ba\u52bb\u52bc\u52bd\u52be\u52bf\u52c0\u52c1\u52c2\u52c3\u52c4\u52c5\u52c6\u52c7\u52c8\u52c9\u52ca\u52cb\u52cc\u52cd\u52ce\u52cf\u52d0\u52d1\u52d2\u52d3\u52d4\u52d5\u52d6\u52d7\u52d8\u52d9\u52da\u52db\u52dc\u52dd\u52de\u52df\u52e0\u52e1\u52e2\u52e3\u52e4\u52e5\u52e6\u52e7\u52e8\u52e9\u52ea\u52eb\u52ec\u52ed\u52ee\u52ef\u52f0\u52f1\u52f2\u52f3\u52f4\u52f5\u52f6\u52f7\u52f8\u52f9\u52fa\u52fb\u52fc\u52fd\u52fe\u52ff\u5300\u5301\u5302\u5303\u5304\u5305\u5306\u5307\u5308\u5309\u530a\u530b\u530c\u530d\u530e\u530f\u5310\u5311\u5312\u5313\u5314\u5315\u5316\u5317\u5318\u5319\u531a\u531b\u531c\u531d\u531e\u531f\u5320\u5321\u5322\u5323\u5324\u5325\u5326\u5327\u5328\u5329\u532a\u532b\u532c\u532d\u532e\u532f\u5330\u5331\u5332\u5333\u5334\u5335\u5336\u5337\u5338\u5339\u533a\u533b\u533c\u533d\u533e\u533f\u5340\u5341\u5342\u5343\u5344\u5345\u5346\u5347\u5348\u5349\u534a\u534b\u534c\u534d\u534e\u534f\u5350\u5351\u5352\u5353\u5354\u5355\u5356\u5357\u5358\u5359\u535a\u535b\u535c\u535d\u535e\u535f\u5360\u5361\u5362\u5363\u5364\u5365\u5366\u5367\u5368\u5369\u536a\u536b\u536c\u536d\u536e\u536f\u5370\u5371\u5372\u5373\u5374\u5375\u5376\u5377\u5378\u5379\u537a\u537b\u537c\u537d\u537e\u537f\u5380\u5381\u5382\u5383\u5384\u5385\u5386\u5387\u5388\u5389\u538a\u538b\u538c\u538d\u538e\u538f\u5390\u5391\u5392\u5393\u5394\u5395\u5396\u5397\u5398\u5399\u539a\u539b\u539c\u539d\u539e\u539f\u53a0\u53a1\u53a2\u53a3\u53a4\u53a5\u53a6\u53a7\u53a8\u53a9\u53aa\u53ab\u53ac\u53ad\u53ae\u53af\u53b0\u53b1\u53b2\u53b3\u53b4\u53b5\u53b6\u53b7\u53b8\u53b9\u53ba\u53bb\u53bc\u53bd\u53be\u53bf\u53c0\u53c1\u53c2\u53c3\u53c4\u53c5\u53c6\u53c7\u53c8\u53c9\u53ca\u53cb\u53cc\u53cd\u53ce\u53cf\u53d0\u53d1\u53d2\u53d3\u53d4\u53d5\u53d6\u53d7\u53d8\u53d9\u53da\u53db\u53dc\u53dd\u53de\u53df\u53e0\u53e1\u53e2\u53e3\u53e4\u53e5\u53e6\u53e7\u53e8\u53e9\u53ea\u53eb\u53ec\u53ed\u53ee\u53ef\u53f0\u53f1\u53f2\u53f3\u53f4\u53f5\u53f6\u53f7\u53f8\u53f9\u53fa\u53fb\u53fc\u53fd\u53fe\u53ff\u5400\u5401\u5402\u5403\u5404\u5405\u5406\u5407\u5408\u5409\u540a\u540b\u540c\u540d\u540e\u540f\u5410\u5411\u5412\u5413\u5414\u5415\u5416\u5417\u5418\u5419\u541a\u541b\u541c\u541d\u541e\u541f\u5420\u5421\u5422\u5423\u5424\u5425\u5426\u5427\u5428\u5429\u542a\u542b\u542c\u542d\u542e\u542f\u5430\u5431\u5432\u5433\u5434\u5435\u5436\u5437\u5438\u5439\u543a\u543b\u543c\u543d\u543e\u543f\u5440\u5441\u5442\u5443\u5444\u5445\u5446\u5447\u5448\u5449\u544a\u544b\u544c\u544d\u544e\u544f\u5450\u5451\u5452\u5453\u5454\u5455\u5456\u5457\u5458\u5459\u545a\u545b\u545c\u545d\u545e\u545f\u5460\u5461\u5462\u5463\u5464\u5465\u5466\u5467\u5468\u5469\u546a\u546b\u546c\u546d\u546e\u546f\u5470\u5471\u5472\u5473\u5474\u5475\u5476\u5477\u5478\u5479\u547a\u547b\u547c\u547d\u547e\u547f\u5480\u5481\u5482\u5483\u5484\u5485\u5486\u5487\u5488\u5489\u548a\u548b\u548c\u548d\u548e\u548f\u5490\u5491\u5492\u5493\u5494\u5495\u5496\u5497\u5498\u5499\u549a\u549b\u549c\u549d\u549e\u549f\u54a0\u54a1\u54a2\u54a3\u54a4\u54a5\u54a6\u54a7\u54a8\u54a9\u54aa\u54ab\u54ac\u54ad\u54ae\u54af\u54b0\u54b1\u54b2\u54b3\u54b4\u54b5\u54b6\u54b7\u54b8\u54b9\u54ba\u54bb\u54bc\u54bd\u54be\u54bf\u54c0\u54c1\u54c2\u54c3\u54c4\u54c5\u54c6\u54c7\u54c8\u54c9\u54ca\u54cb\u54cc\u54cd\u54ce\u54cf\u54d0\u54d1\u54d2\u54d3\u54d4\u54d5\u54d6\u54d7\u54d8\u54d9\u54da\u54db\u54dc\u54dd\u54de\u54df\u54e0\u54e1\u54e2\u54e3\u54e4\u54e5\u54e6\u54e7\u54e8\u54e9\u54ea\u54eb\u54ec\u54ed\u54ee\u54ef\u54f0\u54f1\u54f2\u54f3\u54f4\u54f5\u54f6\u54f7\u54f8\u54f9\u54fa\u54fb\u54fc\u54fd\u54fe\u54ff\u5500\u5501\u5502\u5503\u5504\u5505\u5506\u5507\u5508\u5509\u550a\u550b\u550c\u550d\u550e\u550f\u5510\u5511\u5512\u5513\u5514\u5515\u5516\u5517\u5518\u5519\u551a\u551b\u551c\u551d\u551e\u551f\u5520\u5521\u5522\u5523\u5524\u5525\u5526\u5527\u5528\u5529\u552a\u552b\u552c\u552d\u552e\u552f\u5530\u5531\u5532\u5533\u5534\u5535\u5536\u5537\u5538\u5539\u553a\u553b\u553c\u553d\u553e\u553f\u5540\u5541\u5542\u5543\u5544\u5545\u5546\u5547\u5548\u5549\u554a\u554b\u554c\u554d\u554e\u554f\u5550\u5551\u5552\u5553\u5554\u5555\u5556\u5557\u5558\u5559\u555a\u555b\u555c\u555d\u555e\u555f\u5560\u5561\u5562\u5563\u5564\u5565\u5566\u5567\u5568\u5569\u556a\u556b\u556c\u556d\u556e\u556f\u5570\u5571\u5572\u5573\u5574\u5575\u5576\u5577\u5578\u5579\u557a\u557b\u557c\u557d\u557e\u557f\u5580\u5581\u5582\u5583\u5584\u5585\u5586\u5587\u5588\u5589\u558a\u558b\u558c\u558d\u558e\u558f\u5590\u5591\u5592\u5593\u5594\u5595\u5596\u5597\u5598\u5599\u559a\u559b\u559c\u559d\u559e\u559f\u55a0\u55a1\u55a2\u55a3\u55a4\u55a5\u55a6\u55a7\u55a8\u55a9\u55aa\u55ab\u55ac\u55ad\u55ae\u55af\u55b0\u55b1\u55b2\u55b3\u55b4\u55b5\u55b6\u55b7\u55b8\u55b9\u55ba\u55bb\u55bc\u55bd\u55be\u55bf\u55c0\u55c1\u55c2\u55c3\u55c4\u55c5\u55c6\u55c7\u55c8\u55c9\u55ca\u55cb\u55cc\u55cd\u55ce\u55cf\u55d0\u55d1\u55d2\u55d3\u55d4\u55d5\u55d6\u55d7\u55d8\u55d9\u55da\u55db\u55dc\u55dd\u55de\u55df\u55e0\u55e1\u55e2\u55e3\u55e4\u55e5\u55e6\u55e7\u55e8\u55e9\u55ea\u55eb\u55ec\u55ed\u55ee\u55ef\u55f0\u55f1\u55f2\u55f3\u55f4\u55f5\u55f6\u55f7\u55f8\u55f9\u55fa\u55fb\u55fc\u55fd\u55fe\u55ff\u5600\u5601\u5602\u5603\u5604\u5605\u5606\u5607\u5608\u5609\u560a\u560b\u560c\u560d\u560e\u560f\u5610\u5611\u5612\u5613\u5614\u5615\u5616\u5617\u5618\u5619\u561a\u561b\u561c\u561d\u561e\u561f\u5620\u5621\u5622\u5623\u5624\u5625\u5626\u5627\u5628\u5629\u562a\u562b\u562c\u562d\u562e\u562f\u5630\u5631\u5632\u5633\u5634\u5635\u5636\u5637\u5638\u5639\u563a\u563b\u563c\u563d\u563e\u563f\u5640\u5641\u5642\u5643\u5644\u5645\u5646\u5647\u5648\u5649\u564a\u564b\u564c\u564d\u564e\u564f\u5650\u5651\u5652\u5653\u5654\u5655\u5656\u5657\u5658\u5659\u565a\u565b\u565c\u565d\u565e\u565f\u5660\u5661\u5662\u5663\u5664\u5665\u5666\u5667\u5668\u5669\u566a\u566b\u566c\u566d\u566e\u566f\u5670\u5671\u5672\u5673\u5674\u5675\u5676\u5677\u5678\u5679\u567a\u567b\u567c\u567d\u567e\u567f\u5680\u5681\u5682\u5683\u5684\u5685\u5686\u5687\u5688\u5689\u568a\u568b\u568c\u568d\u568e\u568f\u5690\u5691\u5692\u5693\u5694\u5695\u5696\u5697\u5698\u5699\u569a\u569b\u569c\u569d\u569e\u569f\u56a0\u56a1\u56a2\u56a3\u56a4\u56a5\u56a6\u56a7\u56a8\u56a9\u56aa\u56ab\u56ac\u56ad\u56ae\u56af\u56b0\u56b1\u56b2\u56b3\u56b4\u56b5\u56b6\u56b7\u56b8\u56b9\u56ba\u56bb\u56bc\u56bd\u56be\u56bf\u56c0\u56c1\u56c2\u56c3\u56c4\u56c5\u56c6\u56c7\u56c8\u56c9\u56ca\u56cb\u56cc\u56cd\u56ce\u56cf\u56d0\u56d1\u56d2\u56d3\u56d4\u56d5\u56d6\u56d7\u56d8\u56d9\u56da\u56db\u56dc\u56dd\u56de\u56df\u56e0\u56e1\u56e2\u56e3\u56e4\u56e5\u56e6\u56e7\u56e8\u56e9\u56ea\u56eb\u56ec\u56ed\u56ee\u56ef\u56f0\u56f1\u56f2\u56f3\u56f4\u56f5\u56f6\u56f7\u56f8\u56f9\u56fa\u56fb\u56fc\u56fd\u56fe\u56ff\u5700\u5701\u5702\u5703\u5704\u5705\u5706\u5707\u5708\u5709\u570a\u570b\u570c\u570d\u570e\u570f\u5710\u5711\u5712\u5713\u5714\u5715\u5716\u5717\u5718\u5719\u571a\u571b\u571c\u571d\u571e\u571f\u5720\u5721\u5722\u5723\u5724\u5725\u5726\u5727\u5728\u5729\u572a\u572b\u572c\u572d\u572e\u572f\u5730\u5731\u5732\u5733\u5734\u5735\u5736\u5737\u5738\u5739\u573a\u573b\u573c\u573d\u573e\u573f\u5740\u5741\u5742\u5743\u5744\u5745\u5746\u5747\u5748\u5749\u574a\u574b\u574c\u574d\u574e\u574f\u5750\u5751\u5752\u5753\u5754\u5755\u5756\u5757\u5758\u5759\u575a\u575b\u575c\u575d\u575e\u575f\u5760\u5761\u5762\u5763\u5764\u5765\u5766\u5767\u5768\u5769\u576a\u576b\u576c\u576d\u576e\u576f\u5770\u5771\u5772\u5773\u5774\u5775\u5776\u5777\u5778\u5779\u577a\u577b\u577c\u577d\u577e\u577f\u5780\u5781\u5782\u5783\u5784\u5785\u5786\u5787\u5788\u5789\u578a\u578b\u578c\u578d\u578e\u578f\u5790\u5791\u5792\u5793\u5794\u5795\u5796\u5797\u5798\u5799\u579a\u579b\u579c\u579d\u579e\u579f\u57a0\u57a1\u57a2\u57a3\u57a4\u57a5\u57a6\u57a7\u57a8\u57a9\u57aa\u57ab\u57ac\u57ad\u57ae\u57af\u57b0\u57b1\u57b2\u57b3\u57b4\u57b5\u57b6\u57b7\u57b8\u57b9\u57ba\u57bb\u57bc\u57bd\u57be\u57bf\u57c0\u57c1\u57c2\u57c3\u57c4\u57c5\u57c6\u57c7\u57c8\u57c9\u57ca\u57cb\u57cc\u57cd\u57ce\u57cf\u57d0\u57d1\u57d2\u57d3\u57d4\u57d5\u57d6\u57d7\u57d8\u57d9\u57da\u57db\u57dc\u57dd\u57de\u57df\u57e0\u57e1\u57e2\u57e3\u57e4\u57e5\u57e6\u57e7\u57e8\u57e9\u57ea\u57eb\u57ec\u57ed\u57ee\u57ef\u57f0\u57f1\u57f2\u57f3\u57f4\u57f5\u57f6\u57f7\u57f8\u57f9\u57fa\u57fb\u57fc\u57fd\u57fe\u57ff\u5800\u5801\u5802\u5803\u5804\u5805\u5806\u5807\u5808\u5809\u580a\u580b\u580c\u580d\u580e\u580f\u5810\u5811\u5812\u5813\u5814\u5815\u5816\u5817\u5818\u5819\u581a\u581b\u581c\u581d\u581e\u581f\u5820\u5821\u5822\u5823\u5824\u5825\u5826\u5827\u5828\u5829\u582a\u582b\u582c\u582d\u582e\u582f\u5830\u5831\u5832\u5833\u5834\u5835\u5836\u5837\u5838\u5839\u583a\u583b\u583c\u583d\u583e\u583f\u5840\u5841\u5842\u5843\u5844\u5845\u5846\u5847\u5848\u5849\u584a\u584b\u584c\u584d\u584e\u584f\u5850\u5851\u5852\u5853\u5854\u5855\u5856\u5857\u5858\u5859\u585a\u585b\u585c\u585d\u585e\u585f\u5860\u5861\u5862\u5863\u5864\u5865\u5866\u5867\u5868\u5869\u586a\u586b\u586c\u586d\u586e\u586f\u5870\u5871\u5872\u5873\u5874\u5875\u5876\u5877\u5878\u5879\u587a\u587b\u587c\u587d\u587e\u587f\u5880\u5881\u5882\u5883\u5884\u5885\u5886\u5887\u5888\u5889\u588a\u588b\u588c\u588d\u588e\u588f\u5890\u5891\u5892\u5893\u5894\u5895\u5896\u5897\u5898\u5899\u589a\u589b\u589c\u589d\u589e\u589f\u58a0\u58a1\u58a2\u58a3\u58a4\u58a5\u58a6\u58a7\u58a8\u58a9\u58aa\u58ab\u58ac\u58ad\u58ae\u58af\u58b0\u58b1\u58b2\u58b3\u58b4\u58b5\u58b6\u58b7\u58b8\u58b9\u58ba\u58bb\u58bc\u58bd\u58be\u58bf\u58c0\u58c1\u58c2\u58c3\u58c4\u58c5\u58c6\u58c7\u58c8\u58c9\u58ca\u58cb\u58cc\u58cd\u58ce\u58cf\u58d0\u58d1\u58d2\u58d3\u58d4\u58d5\u58d6\u58d7\u58d8\u58d9\u58da\u58db\u58dc\u58dd\u58de\u58df\u58e0\u58e1\u58e2\u58e3\u58e4\u58e5\u58e6\u58e7\u58e8\u58e9\u58ea\u58eb\u58ec\u58ed\u58ee\u58ef\u58f0\u58f1\u58f2\u58f3\u58f4\u58f5\u58f6\u58f7\u58f8\u58f9\u58fa\u58fb\u58fc\u58fd\u58fe\u58ff\u5900\u5901\u5902\u5903\u5904\u5905\u5906\u5907\u5908\u5909\u590a\u590b\u590c\u590d\u590e\u590f\u5910\u5911\u5912\u5913\u5914\u5915\u5916\u5917\u5918\u5919\u591a\u591b\u591c\u591d\u591e\u591f\u5920\u5921\u5922\u5923\u5924\u5925\u5926\u5927\u5928\u5929\u592a\u592b\u592c\u592d\u592e\u592f\u5930\u5931\u5932\u5933\u5934\u5935\u5936\u5937\u5938\u5939\u593a\u593b\u593c\u593d\u593e\u593f\u5940\u5941\u5942\u5943\u5944\u5945\u5946\u5947\u5948\u5949\u594a\u594b\u594c\u594d\u594e\u594f\u5950\u5951\u5952\u5953\u5954\u5955\u5956\u5957\u5958\u5959\u595a\u595b\u595c\u595d\u595e\u595f\u5960\u5961\u5962\u5963\u5964\u5965\u5966\u5967\u5968\u5969\u596a\u596b\u596c\u596d\u596e\u596f\u5970\u5971\u5972\u5973\u5974\u5975\u5976\u5977\u5978\u5979\u597a\u597b\u597c\u597d\u597e\u597f\u5980\u5981\u5982\u5983\u5984\u5985\u5986\u5987\u5988\u5989\u598a\u598b\u598c\u598d\u598e\u598f\u5990\u5991\u5992\u5993\u5994\u5995\u5996\u5997\u5998\u5999\u599a\u599b\u599c\u599d\u599e\u599f\u59a0\u59a1\u59a2\u59a3\u59a4\u59a5\u59a6\u59a7\u59a8\u59a9\u59aa\u59ab\u59ac\u59ad\u59ae\u59af\u59b0\u59b1\u59b2\u59b3\u59b4\u59b5\u59b6\u59b7\u59b8\u59b9\u59ba\u59bb\u59bc\u59bd\u59be\u59bf\u59c0\u59c1\u59c2\u59c3\u59c4\u59c5\u59c6\u59c7\u59c8\u59c9\u59ca\u59cb\u59cc\u59cd\u59ce\u59cf\u59d0\u59d1\u59d2\u59d3\u59d4\u59d5\u59d6\u59d7\u59d8\u59d9\u59da\u59db\u59dc\u59dd\u59de\u59df\u59e0\u59e1\u59e2\u59e3\u59e4\u59e5\u59e6\u59e7\u59e8\u59e9\u59ea\u59eb\u59ec\u59ed\u59ee\u59ef\u59f0\u59f1\u59f2\u59f3\u59f4\u59f5\u59f6\u59f7\u59f8\u59f9\u59fa\u59fb\u59fc\u59fd\u59fe\u59ff\u5a00\u5a01\u5a02\u5a03\u5a04\u5a05\u5a06\u5a07\u5a08\u5a09\u5a0a\u5a0b\u5a0c\u5a0d\u5a0e\u5a0f\u5a10\u5a11\u5a12\u5a13\u5a14\u5a15\u5a16\u5a17\u5a18\u5a19\u5a1a\u5a1b\u5a1c\u5a1d\u5a1e\u5a1f\u5a20\u5a21\u5a22\u5a23\u5a24\u5a25\u5a26\u5a27\u5a28\u5a29\u5a2a\u5a2b\u5a2c\u5a2d\u5a2e\u5a2f\u5a30\u5a31\u5a32\u5a33\u5a34\u5a35\u5a36\u5a37\u5a38\u5a39\u5a3a\u5a3b\u5a3c\u5a3d\u5a3e\u5a3f\u5a40\u5a41\u5a42\u5a43\u5a44\u5a45\u5a46\u5a47\u5a48\u5a49\u5a4a\u5a4b\u5a4c\u5a4d\u5a4e\u5a4f\u5a50\u5a51\u5a52\u5a53\u5a54\u5a55\u5a56\u5a57\u5a58\u5a59\u5a5a\u5a5b\u5a5c\u5a5d\u5a5e\u5a5f\u5a60\u5a61\u5a62\u5a63\u5a64\u5a65\u5a66\u5a67\u5a68\u5a69\u5a6a\u5a6b\u5a6c\u5a6d\u5a6e\u5a6f\u5a70\u5a71\u5a72\u5a73\u5a74\u5a75\u5a76\u5a77\u5a78\u5a79\u5a7a\u5a7b\u5a7c\u5a7d\u5a7e\u5a7f\u5a80\u5a81\u5a82\u5a83\u5a84\u5a85\u5a86\u5a87\u5a88\u5a89\u5a8a\u5a8b\u5a8c\u5a8d\u5a8e\u5a8f\u5a90\u5a91\u5a92\u5a93\u5a94\u5a95\u5a96\u5a97\u5a98\u5a99\u5a9a\u5a9b\u5a9c\u5a9d\u5a9e\u5a9f\u5aa0\u5aa1\u5aa2\u5aa3\u5aa4\u5aa5\u5aa6\u5aa7\u5aa8\u5aa9\u5aaa\u5aab\u5aac\u5aad\u5aae\u5aaf\u5ab0\u5ab1\u5ab2\u5ab3\u5ab4\u5ab5\u5ab6\u5ab7\u5ab8\u5ab9\u5aba\u5abb\u5abc\u5abd\u5abe\u5abf\u5ac0\u5ac1\u5ac2\u5ac3\u5ac4\u5ac5\u5ac6\u5ac7\u5ac8\u5ac9\u5aca\u5acb\u5acc\u5acd\u5ace\u5acf\u5ad0\u5ad1\u5ad2\u5ad3\u5ad4\u5ad5\u5ad6\u5ad7\u5ad8\u5ad9\u5ada\u5adb\u5adc\u5add\u5ade\u5adf\u5ae0\u5ae1\u5ae2\u5ae3\u5ae4\u5ae5\u5ae6\u5ae7\u5ae8\u5ae9\u5aea\u5aeb\u5aec\u5aed\u5aee\u5aef\u5af0\u5af1\u5af2\u5af3\u5af4\u5af5\u5af6\u5af7\u5af8\u5af9\u5afa\u5afb\u5afc\u5afd\u5afe\u5aff\u5b00\u5b01\u5b02\u5b03\u5b04\u5b05\u5b06\u5b07\u5b08\u5b09\u5b0a\u5b0b\u5b0c\u5b0d\u5b0e\u5b0f\u5b10\u5b11\u5b12\u5b13\u5b14\u5b15\u5b16\u5b17\u5b18\u5b19\u5b1a\u5b1b\u5b1c\u5b1d\u5b1e\u5b1f\u5b20\u5b21\u5b22\u5b23\u5b24\u5b25\u5b26\u5b27\u5b28\u5b29\u5b2a\u5b2b\u5b2c\u5b2d\u5b2e\u5b2f\u5b30\u5b31\u5b32\u5b33\u5b34\u5b35\u5b36\u5b37\u5b38\u5b39\u5b3a\u5b3b\u5b3c\u5b3d\u5b3e\u5b3f\u5b40\u5b41\u5b42\u5b43\u5b44\u5b45\u5b46\u5b47\u5b48\u5b49\u5b4a\u5b4b\u5b4c\u5b4d\u5b4e\u5b4f\u5b50\u5b51\u5b52\u5b53\u5b54\u5b55\u5b56\u5b57\u5b58\u5b59\u5b5a\u5b5b\u5b5c\u5b5d\u5b5e\u5b5f\u5b60\u5b61\u5b62\u5b63\u5b64\u5b65\u5b66\u5b67\u5b68\u5b69\u5b6a\u5b6b\u5b6c\u5b6d\u5b6e\u5b6f\u5b70\u5b71\u5b72\u5b73\u5b74\u5b75\u5b76\u5b77\u5b78\u5b79\u5b7a\u5b7b\u5b7c\u5b7d\u5b7e\u5b7f\u5b80\u5b81\u5b82\u5b83\u5b84\u5b85\u5b86\u5b87\u5b88\u5b89\u5b8a\u5b8b\u5b8c\u5b8d\u5b8e\u5b8f\u5b90\u5b91\u5b92\u5b93\u5b94\u5b95\u5b96\u5b97\u5b98\u5b99\u5b9a\u5b9b\u5b9c\u5b9d\u5b9e\u5b9f\u5ba0\u5ba1\u5ba2\u5ba3\u5ba4\u5ba5\u5ba6\u5ba7\u5ba8\u5ba9\u5baa\u5bab\u5bac\u5bad\u5bae\u5baf\u5bb0\u5bb1\u5bb2\u5bb3\u5bb4\u5bb5\u5bb6\u5bb7\u5bb8\u5bb9\u5bba\u5bbb\u5bbc\u5bbd\u5bbe\u5bbf\u5bc0\u5bc1\u5bc2\u5bc3\u5bc4\u5bc5\u5bc6\u5bc7\u5bc8\u5bc9\u5bca\u5bcb\u5bcc\u5bcd\u5bce\u5bcf\u5bd0\u5bd1\u5bd2\u5bd3\u5bd4\u5bd5\u5bd6\u5bd7\u5bd8\u5bd9\u5bda\u5bdb\u5bdc\u5bdd\u5bde\u5bdf\u5be0\u5be1\u5be2\u5be3\u5be4\u5be5\u5be6\u5be7\u5be8\u5be9\u5bea\u5beb\u5bec\u5bed\u5bee\u5bef\u5bf0\u5bf1\u5bf2\u5bf3\u5bf4\u5bf5\u5bf6\u5bf7\u5bf8\u5bf9\u5bfa\u5bfb\u5bfc\u5bfd\u5bfe\u5bff\u5c00\u5c01\u5c02\u5c03\u5c04\u5c05\u5c06\u5c07\u5c08\u5c09\u5c0a\u5c0b\u5c0c\u5c0d\u5c0e\u5c0f\u5c10\u5c11\u5c12\u5c13\u5c14\u5c15\u5c16\u5c17\u5c18\u5c19\u5c1a\u5c1b\u5c1c\u5c1d\u5c1e\u5c1f\u5c20\u5c21\u5c22\u5c23\u5c24\u5c25\u5c26\u5c27\u5c28\u5c29\u5c2a\u5c2b\u5c2c\u5c2d\u5c2e\u5c2f\u5c30\u5c31\u5c32\u5c33\u5c34\u5c35\u5c36\u5c37\u5c38\u5c39\u5c3a\u5c3b\u5c3c\u5c3d\u5c3e\u5c3f\u5c40\u5c41\u5c42\u5c43\u5c44\u5c45\u5c46\u5c47\u5c48\u5c49\u5c4a\u5c4b\u5c4c\u5c4d\u5c4e\u5c4f\u5c50\u5c51\u5c52\u5c53\u5c54\u5c55\u5c56\u5c57\u5c58\u5c59\u5c5a\u5c5b\u5c5c\u5c5d\u5c5e\u5c5f\u5c60\u5c61\u5c62\u5c63\u5c64\u5c65\u5c66\u5c67\u5c68\u5c69\u5c6a\u5c6b\u5c6c\u5c6d\u5c6e\u5c6f\u5c70\u5c71\u5c72\u5c73\u5c74\u5c75\u5c76\u5c77\u5c78\u5c79\u5c7a\u5c7b\u5c7c\u5c7d\u5c7e\u5c7f\u5c80\u5c81\u5c82\u5c83\u5c84\u5c85\u5c86\u5c87\u5c88\u5c89\u5c8a\u5c8b\u5c8c\u5c8d\u5c8e\u5c8f\u5c90\u5c91\u5c92\u5c93\u5c94\u5c95\u5c96\u5c97\u5c98\u5c99\u5c9a\u5c9b\u5c9c\u5c9d\u5c9e\u5c9f\u5ca0\u5ca1\u5ca2\u5ca3\u5ca4\u5ca5\u5ca6\u5ca7\u5ca8\u5ca9\u5caa\u5cab\u5cac\u5cad\u5cae\u5caf\u5cb0\u5cb1\u5cb2\u5cb3\u5cb4\u5cb5\u5cb6\u5cb7\u5cb8\u5cb9\u5cba\u5cbb\u5cbc\u5cbd\u5cbe\u5cbf\u5cc0\u5cc1\u5cc2\u5cc3\u5cc4\u5cc5\u5cc6\u5cc7\u5cc8\u5cc9\u5cca\u5ccb\u5ccc\u5ccd\u5cce\u5ccf\u5cd0\u5cd1\u5cd2\u5cd3\u5cd4\u5cd5\u5cd6\u5cd7\u5cd8\u5cd9\u5cda\u5cdb\u5cdc\u5cdd\u5cde\u5cdf\u5ce0\u5ce1\u5ce2\u5ce3\u5ce4\u5ce5\u5ce6\u5ce7\u5ce8\u5ce9\u5cea\u5ceb\u5cec\u5ced\u5cee\u5cef\u5cf0\u5cf1\u5cf2\u5cf3\u5cf4\u5cf5\u5cf6\u5cf7\u5cf8\u5cf9\u5cfa\u5cfb\u5cfc\u5cfd\u5cfe\u5cff\u5d00\u5d01\u5d02\u5d03\u5d04\u5d05\u5d06\u5d07\u5d08\u5d09\u5d0a\u5d0b\u5d0c\u5d0d\u5d0e\u5d0f\u5d10\u5d11\u5d12\u5d13\u5d14\u5d15\u5d16\u5d17\u5d18\u5d19\u5d1a\u5d1b\u5d1c\u5d1d\u5d1e\u5d1f\u5d20\u5d21\u5d22\u5d23\u5d24\u5d25\u5d26\u5d27\u5d28\u5d29\u5d2a\u5d2b\u5d2c\u5d2d\u5d2e\u5d2f\u5d30\u5d31\u5d32\u5d33\u5d34\u5d35\u5d36\u5d37\u5d38\u5d39\u5d3a\u5d3b\u5d3c\u5d3d\u5d3e\u5d3f\u5d40\u5d41\u5d42\u5d43\u5d44\u5d45\u5d46\u5d47\u5d48\u5d49\u5d4a\u5d4b\u5d4c\u5d4d\u5d4e\u5d4f\u5d50\u5d51\u5d52\u5d53\u5d54\u5d55\u5d56\u5d57\u5d58\u5d59\u5d5a\u5d5b\u5d5c\u5d5d\u5d5e\u5d5f\u5d60\u5d61\u5d62\u5d63\u5d64\u5d65\u5d66\u5d67\u5d68\u5d69\u5d6a\u5d6b\u5d6c\u5d6d\u5d6e\u5d6f\u5d70\u5d71\u5d72\u5d73\u5d74\u5d75\u5d76\u5d77\u5d78\u5d79\u5d7a\u5d7b\u5d7c\u5d7d\u5d7e\u5d7f\u5d80\u5d81\u5d82\u5d83\u5d84\u5d85\u5d86\u5d87\u5d88\u5d89\u5d8a\u5d8b\u5d8c\u5d8d\u5d8e\u5d8f\u5d90\u5d91\u5d92\u5d93\u5d94\u5d95\u5d96\u5d97\u5d98\u5d99\u5d9a\u5d9b\u5d9c\u5d9d\u5d9e\u5d9f\u5da0\u5da1\u5da2\u5da3\u5da4\u5da5\u5da6\u5da7\u5da8\u5da9\u5daa\u5dab\u5dac\u5dad\u5dae\u5daf\u5db0\u5db1\u5db2\u5db3\u5db4\u5db5\u5db6\u5db7\u5db8\u5db9\u5dba\u5dbb\u5dbc\u5dbd\u5dbe\u5dbf\u5dc0\u5dc1\u5dc2\u5dc3\u5dc4\u5dc5\u5dc6\u5dc7\u5dc8\u5dc9\u5dca\u5dcb\u5dcc\u5dcd\u5dce\u5dcf\u5dd0\u5dd1\u5dd2\u5dd3\u5dd4\u5dd5\u5dd6\u5dd7\u5dd8\u5dd9\u5dda\u5ddb\u5ddc\u5ddd\u5dde\u5ddf\u5de0\u5de1\u5de2\u5de3\u5de4\u5de5\u5de6\u5de7\u5de8\u5de9\u5dea\u5deb\u5dec\u5ded\u5dee\u5def\u5df0\u5df1\u5df2\u5df3\u5df4\u5df5\u5df6\u5df7\u5df8\u5df9\u5dfa\u5dfb\u5dfc\u5dfd\u5dfe\u5dff\u5e00\u5e01\u5e02\u5e03\u5e04\u5e05\u5e06\u5e07\u5e08\u5e09\u5e0a\u5e0b\u5e0c\u5e0d\u5e0e\u5e0f\u5e10\u5e11\u5e12\u5e13\u5e14\u5e15\u5e16\u5e17\u5e18\u5e19\u5e1a\u5e1b\u5e1c\u5e1d\u5e1e\u5e1f\u5e20\u5e21\u5e22\u5e23\u5e24\u5e25\u5e26\u5e27\u5e28\u5e29\u5e2a\u5e2b\u5e2c\u5e2d\u5e2e\u5e2f\u5e30\u5e31\u5e32\u5e33\u5e34\u5e35\u5e36\u5e37\u5e38\u5e39\u5e3a\u5e3b\u5e3c\u5e3d\u5e3e\u5e3f\u5e40\u5e41\u5e42\u5e43\u5e44\u5e45\u5e46\u5e47\u5e48\u5e49\u5e4a\u5e4b\u5e4c\u5e4d\u5e4e\u5e4f\u5e50\u5e51\u5e52\u5e53\u5e54\u5e55\u5e56\u5e57\u5e58\u5e59\u5e5a\u5e5b\u5e5c\u5e5d\u5e5e\u5e5f\u5e60\u5e61\u5e62\u5e63\u5e64\u5e65\u5e66\u5e67\u5e68\u5e69\u5e6a\u5e6b\u5e6c\u5e6d\u5e6e\u5e6f\u5e70\u5e71\u5e72\u5e73\u5e74\u5e75\u5e76\u5e77\u5e78\u5e79\u5e7a\u5e7b\u5e7c\u5e7d\u5e7e\u5e7f\u5e80\u5e81\u5e82\u5e83\u5e84\u5e85\u5e86\u5e87\u5e88\u5e89\u5e8a\u5e8b\u5e8c\u5e8d\u5e8e\u5e8f\u5e90\u5e91\u5e92\u5e93\u5e94\u5e95\u5e96\u5e97\u5e98\u5e99\u5e9a\u5e9b\u5e9c\u5e9d\u5e9e\u5e9f\u5ea0\u5ea1\u5ea2\u5ea3\u5ea4\u5ea5\u5ea6\u5ea7\u5ea8\u5ea9\u5eaa\u5eab\u5eac\u5ead\u5eae\u5eaf\u5eb0\u5eb1\u5eb2\u5eb3\u5eb4\u5eb5\u5eb6\u5eb7\u5eb8\u5eb9\u5eba\u5ebb\u5ebc\u5ebd\u5ebe\u5ebf\u5ec0\u5ec1\u5ec2\u5ec3\u5ec4\u5ec5\u5ec6\u5ec7\u5ec8\u5ec9\u5eca\u5ecb\u5ecc\u5ecd\u5ece\u5ecf\u5ed0\u5ed1\u5ed2\u5ed3\u5ed4\u5ed5\u5ed6\u5ed7\u5ed8\u5ed9\u5eda\u5edb\u5edc\u5edd\u5ede\u5edf\u5ee0\u5ee1\u5ee2\u5ee3\u5ee4\u5ee5\u5ee6\u5ee7\u5ee8\u5ee9\u5eea\u5eeb\u5eec\u5eed\u5eee\u5eef\u5ef0\u5ef1\u5ef2\u5ef3\u5ef4\u5ef5\u5ef6\u5ef7\u5ef8\u5ef9\u5efa\u5efb\u5efc\u5efd\u5efe\u5eff\u5f00\u5f01\u5f02\u5f03\u5f04\u5f05\u5f06\u5f07\u5f08\u5f09\u5f0a\u5f0b\u5f0c\u5f0d\u5f0e\u5f0f\u5f10\u5f11\u5f12\u5f13\u5f14\u5f15\u5f16\u5f17\u5f18\u5f19\u5f1a\u5f1b\u5f1c\u5f1d\u5f1e\u5f1f\u5f20\u5f21\u5f22\u5f23\u5f24\u5f25\u5f26\u5f27\u5f28\u5f29\u5f2a\u5f2b\u5f2c\u5f2d\u5f2e\u5f2f\u5f30\u5f31\u5f32\u5f33\u5f34\u5f35\u5f36\u5f37\u5f38\u5f39\u5f3a\u5f3b\u5f3c\u5f3d\u5f3e\u5f3f\u5f40\u5f41\u5f42\u5f43\u5f44\u5f45\u5f46\u5f47\u5f48\u5f49\u5f4a\u5f4b\u5f4c\u5f4d\u5f4e\u5f4f\u5f50\u5f51\u5f52\u5f53\u5f54\u5f55\u5f56\u5f57\u5f58\u5f59\u5f5a\u5f5b\u5f5c\u5f5d\u5f5e\u5f5f\u5f60\u5f61\u5f62\u5f63\u5f64\u5f65\u5f66\u5f67\u5f68\u5f69\u5f6a\u5f6b\u5f6c\u5f6d\u5f6e\u5f6f\u5f70\u5f71\u5f72\u5f73\u5f74\u5f75\u5f76\u5f77\u5f78\u5f79\u5f7a\u5f7b\u5f7c\u5f7d\u5f7e\u5f7f\u5f80\u5f81\u5f82\u5f83\u5f84\u5f85\u5f86\u5f87\u5f88\u5f89\u5f8a\u5f8b\u5f8c\u5f8d\u5f8e\u5f8f\u5f90\u5f91\u5f92\u5f93\u5f94\u5f95\u5f96\u5f97\u5f98\u5f99\u5f9a\u5f9b\u5f9c\u5f9d\u5f9e\u5f9f\u5fa0\u5fa1\u5fa2\u5fa3\u5fa4\u5fa5\u5fa6\u5fa7\u5fa8\u5fa9\u5faa\u5fab\u5fac\u5fad\u5fae\u5faf\u5fb0\u5fb1\u5fb2\u5fb3\u5fb4\u5fb5\u5fb6\u5fb7\u5fb8\u5fb9\u5fba\u5fbb\u5fbc\u5fbd\u5fbe\u5fbf\u5fc0\u5fc1\u5fc2\u5fc3\u5fc4\u5fc5\u5fc6\u5fc7\u5fc8\u5fc9\u5fca\u5fcb\u5fcc\u5fcd\u5fce\u5fcf\u5fd0\u5fd1\u5fd2\u5fd3\u5fd4\u5fd5\u5fd6\u5fd7\u5fd8\u5fd9\u5fda\u5fdb\u5fdc\u5fdd\u5fde\u5fdf\u5fe0\u5fe1\u5fe2\u5fe3\u5fe4\u5fe5\u5fe6\u5fe7\u5fe8\u5fe9\u5fea\u5feb\u5fec\u5fed\u5fee\u5fef\u5ff0\u5ff1\u5ff2\u5ff3\u5ff4\u5ff5\u5ff6\u5ff7\u5ff8\u5ff9\u5ffa\u5ffb\u5ffc\u5ffd\u5ffe\u5fff\u6000\u6001\u6002\u6003\u6004\u6005\u6006\u6007\u6008\u6009\u600a\u600b\u600c\u600d\u600e\u600f\u6010\u6011\u6012\u6013\u6014\u6015\u6016\u6017\u6018\u6019\u601a\u601b\u601c\u601d\u601e\u601f\u6020\u6021\u6022\u6023\u6024\u6025\u6026\u6027\u6028\u6029\u602a\u602b\u602c\u602d\u602e\u602f\u6030\u6031\u6032\u6033\u6034\u6035\u6036\u6037\u6038\u6039\u603a\u603b\u603c\u603d\u603e\u603f\u6040\u6041\u6042\u6043\u6044\u6045\u6046\u6047\u6048\u6049\u604a\u604b\u604c\u604d\u604e\u604f\u6050\u6051\u6052\u6053\u6054\u6055\u6056\u6057\u6058\u6059\u605a\u605b\u605c\u605d\u605e\u605f\u6060\u6061\u6062\u6063\u6064\u6065\u6066\u6067\u6068\u6069\u606a\u606b\u606c\u606d\u606e\u606f\u6070\u6071\u6072\u6073\u6074\u6075\u6076\u6077\u6078\u6079\u607a\u607b\u607c\u607d\u607e\u607f\u6080\u6081\u6082\u6083\u6084\u6085\u6086\u6087\u6088\u6089\u608a\u608b\u608c\u608d\u608e\u608f\u6090\u6091\u6092\u6093\u6094\u6095\u6096\u6097\u6098\u6099\u609a\u609b\u609c\u609d\u609e\u609f\u60a0\u60a1\u60a2\u60a3\u60a4\u60a5\u60a6\u60a7\u60a8\u60a9\u60aa\u60ab\u60ac\u60ad\u60ae\u60af\u60b0\u60b1\u60b2\u60b3\u60b4\u60b5\u60b6\u60b7\u60b8\u60b9\u60ba\u60bb\u60bc\u60bd\u60be\u60bf\u60c0\u60c1\u60c2\u60c3\u60c4\u60c5\u60c6\u60c7\u60c8\u60c9\u60ca\u60cb\u60cc\u60cd\u60ce\u60cf\u60d0\u60d1\u60d2\u60d3\u60d4\u60d5\u60d6\u60d7\u60d8\u60d9\u60da\u60db\u60dc\u60dd\u60de\u60df\u60e0\u60e1\u60e2\u60e3\u60e4\u60e5\u60e6\u60e7\u60e8\u60e9\u60ea\u60eb\u60ec\u60ed\u60ee\u60ef\u60f0\u60f1\u60f2\u60f3\u60f4\u60f5\u60f6\u60f7\u60f8\u60f9\u60fa\u60fb\u60fc\u60fd\u60fe\u60ff\u6100\u6101\u6102\u6103\u6104\u6105\u6106\u6107\u6108\u6109\u610a\u610b\u610c\u610d\u610e\u610f\u6110\u6111\u6112\u6113\u6114\u6115\u6116\u6117\u6118\u6119\u611a\u611b\u611c\u611d\u611e\u611f\u6120\u6121\u6122\u6123\u6124\u6125\u6126\u6127\u6128\u6129\u612a\u612b\u612c\u612d\u612e\u612f\u6130\u6131\u6132\u6133\u6134\u6135\u6136\u6137\u6138\u6139\u613a\u613b\u613c\u613d\u613e\u613f\u6140\u6141\u6142\u6143\u6144\u6145\u6146\u6147\u6148\u6149\u614a\u614b\u614c\u614d\u614e\u614f\u6150\u6151\u6152\u6153\u6154\u6155\u6156\u6157\u6158\u6159\u615a\u615b\u615c\u615d\u615e\u615f\u6160\u6161\u6162\u6163\u6164\u6165\u6166\u6167\u6168\u6169\u616a\u616b\u616c\u616d\u616e\u616f\u6170\u6171\u6172\u6173\u6174\u6175\u6176\u6177\u6178\u6179\u617a\u617b\u617c\u617d\u617e\u617f\u6180\u6181\u6182\u6183\u6184\u6185\u6186\u6187\u6188\u6189\u618a\u618b\u618c\u618d\u618e\u618f\u6190\u6191\u6192\u6193\u6194\u6195\u6196\u6197\u6198\u6199\u619a\u619b\u619c\u619d\u619e\u619f\u61a0\u61a1\u61a2\u61a3\u61a4\u61a5\u61a6\u61a7\u61a8\u61a9\u61aa\u61ab\u61ac\u61ad\u61ae\u61af\u61b0\u61b1\u61b2\u61b3\u61b4\u61b5\u61b6\u61b7\u61b8\u61b9\u61ba\u61bb\u61bc\u61bd\u61be\u61bf\u61c0\u61c1\u61c2\u61c3\u61c4\u61c5\u61c6\u61c7\u61c8\u61c9\u61ca\u61cb\u61cc\u61cd\u61ce\u61cf\u61d0\u61d1\u61d2\u61d3\u61d4\u61d5\u61d6\u61d7\u61d8\u61d9\u61da\u61db\u61dc\u61dd\u61de\u61df\u61e0\u61e1\u61e2\u61e3\u61e4\u61e5\u61e6\u61e7\u61e8\u61e9\u61ea\u61eb\u61ec\u61ed\u61ee\u61ef\u61f0\u61f1\u61f2\u61f3\u61f4\u61f5\u61f6\u61f7\u61f8\u61f9\u61fa\u61fb\u61fc\u61fd\u61fe\u61ff\u6200\u6201\u6202\u6203\u6204\u6205\u6206\u6207\u6208\u6209\u620a\u620b\u620c\u620d\u620e\u620f\u6210\u6211\u6212\u6213\u6214\u6215\u6216\u6217\u6218\u6219\u621a\u621b\u621c\u621d\u621e\u621f\u6220\u6221\u6222\u6223\u6224\u6225\u6226\u6227\u6228\u6229\u622a\u622b\u622c\u622d\u622e\u622f\u6230\u6231\u6232\u6233\u6234\u6235\u6236\u6237\u6238\u6239\u623a\u623b\u623c\u623d\u623e\u623f\u6240\u6241\u6242\u6243\u6244\u6245\u6246\u6247\u6248\u6249\u624a\u624b\u624c\u624d\u624e\u624f\u6250\u6251\u6252\u6253\u6254\u6255\u6256\u6257\u6258\u6259\u625a\u625b\u625c\u625d\u625e\u625f\u6260\u6261\u6262\u6263\u6264\u6265\u6266\u6267\u6268\u6269\u626a\u626b\u626c\u626d\u626e\u626f\u6270\u6271\u6272\u6273\u6274\u6275\u6276\u6277\u6278\u6279\u627a\u627b\u627c\u627d\u627e\u627f\u6280\u6281\u6282\u6283\u6284\u6285\u6286\u6287\u6288\u6289\u628a\u628b\u628c\u628d\u628e\u628f\u6290\u6291\u6292\u6293\u6294\u6295\u6296\u6297\u6298\u6299\u629a\u629b\u629c\u629d\u629e\u629f\u62a0\u62a1\u62a2\u62a3\u62a4\u62a5\u62a6\u62a7\u62a8\u62a9\u62aa\u62ab\u62ac\u62ad\u62ae\u62af\u62b0\u62b1\u62b2\u62b3\u62b4\u62b5\u62b6\u62b7\u62b8\u62b9\u62ba\u62bb\u62bc\u62bd\u62be\u62bf\u62c0\u62c1\u62c2\u62c3\u62c4\u62c5\u62c6\u62c7\u62c8\u62c9\u62ca\u62cb\u62cc\u62cd\u62ce\u62cf\u62d0\u62d1\u62d2\u62d3\u62d4\u62d5\u62d6\u62d7\u62d8\u62d9\u62da\u62db\u62dc\u62dd\u62de\u62df\u62e0\u62e1\u62e2\u62e3\u62e4\u62e5\u62e6\u62e7\u62e8\u62e9\u62ea\u62eb\u62ec\u62ed\u62ee\u62ef\u62f0\u62f1\u62f2\u62f3\u62f4\u62f5\u62f6\u62f7\u62f8\u62f9\u62fa\u62fb\u62fc\u62fd\u62fe\u62ff\u6300\u6301\u6302\u6303\u6304\u6305\u6306\u6307\u6308\u6309\u630a\u630b\u630c\u630d\u630e\u630f\u6310\u6311\u6312\u6313\u6314\u6315\u6316\u6317\u6318\u6319\u631a\u631b\u631c\u631d\u631e\u631f\u6320\u6321\u6322\u6323\u6324\u6325\u6326\u6327\u6328\u6329\u632a\u632b\u632c\u632d\u632e\u632f\u6330\u6331\u6332\u6333\u6334\u6335\u6336\u6337\u6338\u6339\u633a\u633b\u633c\u633d\u633e\u633f\u6340\u6341\u6342\u6343\u6344\u6345\u6346\u6347\u6348\u6349\u634a\u634b\u634c\u634d\u634e\u634f\u6350\u6351\u6352\u6353\u6354\u6355\u6356\u6357\u6358\u6359\u635a\u635b\u635c\u635d\u635e\u635f\u6360\u6361\u6362\u6363\u6364\u6365\u6366\u6367\u6368\u6369\u636a\u636b\u636c\u636d\u636e\u636f\u6370\u6371\u6372\u6373\u6374\u6375\u6376\u6377\u6378\u6379\u637a\u637b\u637c\u637d\u637e\u637f\u6380\u6381\u6382\u6383\u6384\u6385\u6386\u6387\u6388\u6389\u638a\u638b\u638c\u638d\u638e\u638f\u6390\u6391\u6392\u6393\u6394\u6395\u6396\u6397\u6398\u6399\u639a\u639b\u639c\u639d\u639e\u639f\u63a0\u63a1\u63a2\u63a3\u63a4\u63a5\u63a6\u63a7\u63a8\u63a9\u63aa\u63ab\u63ac\u63ad\u63ae\u63af\u63b0\u63b1\u63b2\u63b3\u63b4\u63b5\u63b6\u63b7\u63b8\u63b9\u63ba\u63bb\u63bc\u63bd\u63be\u63bf\u63c0\u63c1\u63c2\u63c3\u63c4\u63c5\u63c6\u63c7\u63c8\u63c9\u63ca\u63cb\u63cc\u63cd\u63ce\u63cf\u63d0\u63d1\u63d2\u63d3\u63d4\u63d5\u63d6\u63d7\u63d8\u63d9\u63da\u63db\u63dc\u63dd\u63de\u63df\u63e0\u63e1\u63e2\u63e3\u63e4\u63e5\u63e6\u63e7\u63e8\u63e9\u63ea\u63eb\u63ec\u63ed\u63ee\u63ef\u63f0\u63f1\u63f2\u63f3\u63f4\u63f5\u63f6\u63f7\u63f8\u63f9\u63fa\u63fb\u63fc\u63fd\u63fe\u63ff\u6400\u6401\u6402\u6403\u6404\u6405\u6406\u6407\u6408\u6409\u640a\u640b\u640c\u640d\u640e\u640f\u6410\u6411\u6412\u6413\u6414\u6415\u6416\u6417\u6418\u6419\u641a\u641b\u641c\u641d\u641e\u641f\u6420\u6421\u6422\u6423\u6424\u6425\u6426\u6427\u6428\u6429\u642a\u642b\u642c\u642d\u642e\u642f\u6430\u6431\u6432\u6433\u6434\u6435\u6436\u6437\u6438\u6439\u643a\u643b\u643c\u643d\u643e\u643f\u6440\u6441\u6442\u6443\u6444\u6445\u6446\u6447\u6448\u6449\u644a\u644b\u644c\u644d\u644e\u644f\u6450\u6451\u6452\u6453\u6454\u6455\u6456\u6457\u6458\u6459\u645a\u645b\u645c\u645d\u645e\u645f\u6460\u6461\u6462\u6463\u6464\u6465\u6466\u6467\u6468\u6469\u646a\u646b\u646c\u646d\u646e\u646f\u6470\u6471\u6472\u6473\u6474\u6475\u6476\u6477\u6478\u6479\u647a\u647b\u647c\u647d\u647e\u647f\u6480\u6481\u6482\u6483\u6484\u6485\u6486\u6487\u6488\u6489\u648a\u648b\u648c\u648d\u648e\u648f\u6490\u6491\u6492\u6493\u6494\u6495\u6496\u6497\u6498\u6499\u649a\u649b\u649c\u649d\u649e\u649f\u64a0\u64a1\u64a2\u64a3\u64a4\u64a5\u64a6\u64a7\u64a8\u64a9\u64aa\u64ab\u64ac\u64ad\u64ae\u64af\u64b0\u64b1\u64b2\u64b3\u64b4\u64b5\u64b6\u64b7\u64b8\u64b9\u64ba\u64bb\u64bc\u64bd\u64be\u64bf\u64c0\u64c1\u64c2\u64c3\u64c4\u64c5\u64c6\u64c7\u64c8\u64c9\u64ca\u64cb\u64cc\u64cd\u64ce\u64cf\u64d0\u64d1\u64d2\u64d3\u64d4\u64d5\u64d6\u64d7\u64d8\u64d9\u64da\u64db\u64dc\u64dd\u64de\u64df\u64e0\u64e1\u64e2\u64e3\u64e4\u64e5\u64e6\u64e7\u64e8\u64e9\u64ea\u64eb\u64ec\u64ed\u64ee\u64ef\u64f0\u64f1\u64f2\u64f3\u64f4\u64f5\u64f6\u64f7\u64f8\u64f9\u64fa\u64fb\u64fc\u64fd\u64fe\u64ff\u6500\u6501\u6502\u6503\u6504\u6505\u6506\u6507\u6508\u6509\u650a\u650b\u650c\u650d\u650e\u650f\u6510\u6511\u6512\u6513\u6514\u6515\u6516\u6517\u6518\u6519\u651a\u651b\u651c\u651d\u651e\u651f\u6520\u6521\u6522\u6523\u6524\u6525\u6526\u6527\u6528\u6529\u652a\u652b\u652c\u652d\u652e\u652f\u6530\u6531\u6532\u6533\u6534\u6535\u6536\u6537\u6538\u6539\u653a\u653b\u653c\u653d\u653e\u653f\u6540\u6541\u6542\u6543\u6544\u6545\u6546\u6547\u6548\u6549\u654a\u654b\u654c\u654d\u654e\u654f\u6550\u6551\u6552\u6553\u6554\u6555\u6556\u6557\u6558\u6559\u655a\u655b\u655c\u655d\u655e\u655f\u6560\u6561\u6562\u6563\u6564\u6565\u6566\u6567\u6568\u6569\u656a\u656b\u656c\u656d\u656e\u656f\u6570\u6571\u6572\u6573\u6574\u6575\u6576\u6577\u6578\u6579\u657a\u657b\u657c\u657d\u657e\u657f\u6580\u6581\u6582\u6583\u6584\u6585\u6586\u6587\u6588\u6589\u658a\u658b\u658c\u658d\u658e\u658f\u6590\u6591\u6592\u6593\u6594\u6595\u6596\u6597\u6598\u6599\u659a\u659b\u659c\u659d\u659e\u659f\u65a0\u65a1\u65a2\u65a3\u65a4\u65a5\u65a6\u65a7\u65a8\u65a9\u65aa\u65ab\u65ac\u65ad\u65ae\u65af\u65b0\u65b1\u65b2\u65b3\u65b4\u65b5\u65b6\u65b7\u65b8\u65b9\u65ba\u65bb\u65bc\u65bd\u65be\u65bf\u65c0\u65c1\u65c2\u65c3\u65c4\u65c5\u65c6\u65c7\u65c8\u65c9\u65ca\u65cb\u65cc\u65cd\u65ce\u65cf\u65d0\u65d1\u65d2\u65d3\u65d4\u65d5\u65d6\u65d7\u65d8\u65d9\u65da\u65db\u65dc\u65dd\u65de\u65df\u65e0\u65e1\u65e2\u65e3\u65e4\u65e5\u65e6\u65e7\u65e8\u65e9\u65ea\u65eb\u65ec\u65ed\u65ee\u65ef\u65f0\u65f1\u65f2\u65f3\u65f4\u65f5\u65f6\u65f7\u65f8\u65f9\u65fa\u65fb\u65fc\u65fd\u65fe\u65ff\u6600\u6601\u6602\u6603\u6604\u6605\u6606\u6607\u6608\u6609\u660a\u660b\u660c\u660d\u660e\u660f\u6610\u6611\u6612\u6613\u6614\u6615\u6616\u6617\u6618\u6619\u661a\u661b\u661c\u661d\u661e\u661f\u6620\u6621\u6622\u6623\u6624\u6625\u6626\u6627\u6628\u6629\u662a\u662b\u662c\u662d\u662e\u662f\u6630\u6631\u6632\u6633\u6634\u6635\u6636\u6637\u6638\u6639\u663a\u663b\u663c\u663d\u663e\u663f\u6640\u6641\u6642\u6643\u6644\u6645\u6646\u6647\u6648\u6649\u664a\u664b\u664c\u664d\u664e\u664f\u6650\u6651\u6652\u6653\u6654\u6655\u6656\u6657\u6658\u6659\u665a\u665b\u665c\u665d\u665e\u665f\u6660\u6661\u6662\u6663\u6664\u6665\u6666\u6667\u6668\u6669\u666a\u666b\u666c\u666d\u666e\u666f\u6670\u6671\u6672\u6673\u6674\u6675\u6676\u6677\u6678\u6679\u667a\u667b\u667c\u667d\u667e\u667f\u6680\u6681\u6682\u6683\u6684\u6685\u6686\u6687\u6688\u6689\u668a\u668b\u668c\u668d\u668e\u668f\u6690\u6691\u6692\u6693\u6694\u6695\u6696\u6697\u6698\u6699\u669a\u669b\u669c\u669d\u669e\u669f\u66a0\u66a1\u66a2\u66a3\u66a4\u66a5\u66a6\u66a7\u66a8\u66a9\u66aa\u66ab\u66ac\u66ad\u66ae\u66af\u66b0\u66b1\u66b2\u66b3\u66b4\u66b5\u66b6\u66b7\u66b8\u66b9\u66ba\u66bb\u66bc\u66bd\u66be\u66bf\u66c0\u66c1\u66c2\u66c3\u66c4\u66c5\u66c6\u66c7\u66c8\u66c9\u66ca\u66cb\u66cc\u66cd\u66ce\u66cf\u66d0\u66d1\u66d2\u66d3\u66d4\u66d5\u66d6\u66d7\u66d8\u66d9\u66da\u66db\u66dc\u66dd\u66de\u66df\u66e0\u66e1\u66e2\u66e3\u66e4\u66e5\u66e6\u66e7\u66e8\u66e9\u66ea\u66eb\u66ec\u66ed\u66ee\u66ef\u66f0\u66f1\u66f2\u66f3\u66f4\u66f5\u66f6\u66f7\u66f8\u66f9\u66fa\u66fb\u66fc\u66fd\u66fe\u66ff\u6700\u6701\u6702\u6703\u6704\u6705\u6706\u6707\u6708\u6709\u670a\u670b\u670c\u670d\u670e\u670f\u6710\u6711\u6712\u6713\u6714\u6715\u6716\u6717\u6718\u6719\u671a\u671b\u671c\u671d\u671e\u671f\u6720\u6721\u6722\u6723\u6724\u6725\u6726\u6727\u6728\u6729\u672a\u672b\u672c\u672d\u672e\u672f\u6730\u6731\u6732\u6733\u6734\u6735\u6736\u6737\u6738\u6739\u673a\u673b\u673c\u673d\u673e\u673f\u6740\u6741\u6742\u6743\u6744\u6745\u6746\u6747\u6748\u6749\u674a\u674b\u674c\u674d\u674e\u674f\u6750\u6751\u6752\u6753\u6754\u6755\u6756\u6757\u6758\u6759\u675a\u675b\u675c\u675d\u675e\u675f\u6760\u6761\u6762\u6763\u6764\u6765\u6766\u6767\u6768\u6769\u676a\u676b\u676c\u676d\u676e\u676f\u6770\u6771\u6772\u6773\u6774\u6775\u6776\u6777\u6778\u6779\u677a\u677b\u677c\u677d\u677e\u677f\u6780\u6781\u6782\u6783\u6784\u6785\u6786\u6787\u6788\u6789\u678a\u678b\u678c\u678d\u678e\u678f\u6790\u6791\u6792\u6793\u6794\u6795\u6796\u6797\u6798\u6799\u679a\u679b\u679c\u679d\u679e\u679f\u67a0\u67a1\u67a2\u67a3\u67a4\u67a5\u67a6\u67a7\u67a8\u67a9\u67aa\u67ab\u67ac\u67ad\u67ae\u67af\u67b0\u67b1\u67b2\u67b3\u67b4\u67b5\u67b6\u67b7\u67b8\u67b9\u67ba\u67bb\u67bc\u67bd\u67be\u67bf\u67c0\u67c1\u67c2\u67c3\u67c4\u67c5\u67c6\u67c7\u67c8\u67c9\u67ca\u67cb\u67cc\u67cd\u67ce\u67cf\u67d0\u67d1\u67d2\u67d3\u67d4\u67d5\u67d6\u67d7\u67d8\u67d9\u67da\u67db\u67dc\u67dd\u67de\u67df\u67e0\u67e1\u67e2\u67e3\u67e4\u67e5\u67e6\u67e7\u67e8\u67e9\u67ea\u67eb\u67ec\u67ed\u67ee\u67ef\u67f0\u67f1\u67f2\u67f3\u67f4\u67f5\u67f6\u67f7\u67f8\u67f9\u67fa\u67fb\u67fc\u67fd\u67fe\u67ff\u6800\u6801\u6802\u6803\u6804\u6805\u6806\u6807\u6808\u6809\u680a\u680b\u680c\u680d\u680e\u680f\u6810\u6811\u6812\u6813\u6814\u6815\u6816\u6817\u6818\u6819\u681a\u681b\u681c\u681d\u681e\u681f\u6820\u6821\u6822\u6823\u6824\u6825\u6826\u6827\u6828\u6829\u682a\u682b\u682c\u682d\u682e\u682f\u6830\u6831\u6832\u6833\u6834\u6835\u6836\u6837\u6838\u6839\u683a\u683b\u683c\u683d\u683e\u683f\u6840\u6841\u6842\u6843\u6844\u6845\u6846\u6847\u6848\u6849\u684a\u684b\u684c\u684d\u684e\u684f\u6850\u6851\u6852\u6853\u6854\u6855\u6856\u6857\u6858\u6859\u685a\u685b\u685c\u685d\u685e\u685f\u6860\u6861\u6862\u6863\u6864\u6865\u6866\u6867\u6868\u6869\u686a\u686b\u686c\u686d\u686e\u686f\u6870\u6871\u6872\u6873\u6874\u6875\u6876\u6877\u6878\u6879\u687a\u687b\u687c\u687d\u687e\u687f\u6880\u6881\u6882\u6883\u6884\u6885\u6886\u6887\u6888\u6889\u688a\u688b\u688c\u688d\u688e\u688f\u6890\u6891\u6892\u6893\u6894\u6895\u6896\u6897\u6898\u6899\u689a\u689b\u689c\u689d\u689e\u689f\u68a0\u68a1\u68a2\u68a3\u68a4\u68a5\u68a6\u68a7\u68a8\u68a9\u68aa\u68ab\u68ac\u68ad\u68ae\u68af\u68b0\u68b1\u68b2\u68b3\u68b4\u68b5\u68b6\u68b7\u68b8\u68b9\u68ba\u68bb\u68bc\u68bd\u68be\u68bf\u68c0\u68c1\u68c2\u68c3\u68c4\u68c5\u68c6\u68c7\u68c8\u68c9\u68ca\u68cb\u68cc\u68cd\u68ce\u68cf\u68d0\u68d1\u68d2\u68d3\u68d4\u68d5\u68d6\u68d7\u68d8\u68d9\u68da\u68db\u68dc\u68dd\u68de\u68df\u68e0\u68e1\u68e2\u68e3\u68e4\u68e5\u68e6\u68e7\u68e8\u68e9\u68ea\u68eb\u68ec\u68ed\u68ee\u68ef\u68f0\u68f1\u68f2\u68f3\u68f4\u68f5\u68f6\u68f7\u68f8\u68f9\u68fa\u68fb\u68fc\u68fd\u68fe\u68ff\u6900\u6901\u6902\u6903\u6904\u6905\u6906\u6907\u6908\u6909\u690a\u690b\u690c\u690d\u690e\u690f\u6910\u6911\u6912\u6913\u6914\u6915\u6916\u6917\u6918\u6919\u691a\u691b\u691c\u691d\u691e\u691f\u6920\u6921\u6922\u6923\u6924\u6925\u6926\u6927\u6928\u6929\u692a\u692b\u692c\u692d\u692e\u692f\u6930\u6931\u6932\u6933\u6934\u6935\u6936\u6937\u6938\u6939\u693a\u693b\u693c\u693d\u693e\u693f\u6940\u6941\u6942\u6943\u6944\u6945\u6946\u6947\u6948\u6949\u694a\u694b\u694c\u694d\u694e\u694f\u6950\u6951\u6952\u6953\u6954\u6955\u6956\u6957\u6958\u6959\u695a\u695b\u695c\u695d\u695e\u695f\u6960\u6961\u6962\u6963\u6964\u6965\u6966\u6967\u6968\u6969\u696a\u696b\u696c\u696d\u696e\u696f\u6970\u6971\u6972\u6973\u6974\u6975\u6976\u6977\u6978\u6979\u697a\u697b\u697c\u697d\u697e\u697f\u6980\u6981\u6982\u6983\u6984\u6985\u6986\u6987\u6988\u6989\u698a\u698b\u698c\u698d\u698e\u698f\u6990\u6991\u6992\u6993\u6994\u6995\u6996\u6997\u6998\u6999\u699a\u699b\u699c\u699d\u699e\u699f\u69a0\u69a1\u69a2\u69a3\u69a4\u69a5\u69a6\u69a7\u69a8\u69a9\u69aa\u69ab\u69ac\u69ad\u69ae\u69af\u69b0\u69b1\u69b2\u69b3\u69b4\u69b5\u69b6\u69b7\u69b8\u69b9\u69ba\u69bb\u69bc\u69bd\u69be\u69bf\u69c0\u69c1\u69c2\u69c3\u69c4\u69c5\u69c6\u69c7\u69c8\u69c9\u69ca\u69cb\u69cc\u69cd\u69ce\u69cf\u69d0\u69d1\u69d2\u69d3\u69d4\u69d5\u69d6\u69d7\u69d8\u69d9\u69da\u69db\u69dc\u69dd\u69de\u69df\u69e0\u69e1\u69e2\u69e3\u69e4\u69e5\u69e6\u69e7\u69e8\u69e9\u69ea\u69eb\u69ec\u69ed\u69ee\u69ef\u69f0\u69f1\u69f2\u69f3\u69f4\u69f5\u69f6\u69f7\u69f8\u69f9\u69fa\u69fb\u69fc\u69fd\u69fe\u69ff\u6a00\u6a01\u6a02\u6a03\u6a04\u6a05\u6a06\u6a07\u6a08\u6a09\u6a0a\u6a0b\u6a0c\u6a0d\u6a0e\u6a0f\u6a10\u6a11\u6a12\u6a13\u6a14\u6a15\u6a16\u6a17\u6a18\u6a19\u6a1a\u6a1b\u6a1c\u6a1d\u6a1e\u6a1f\u6a20\u6a21\u6a22\u6a23\u6a24\u6a25\u6a26\u6a27\u6a28\u6a29\u6a2a\u6a2b\u6a2c\u6a2d\u6a2e\u6a2f\u6a30\u6a31\u6a32\u6a33\u6a34\u6a35\u6a36\u6a37\u6a38\u6a39\u6a3a\u6a3b\u6a3c\u6a3d\u6a3e\u6a3f\u6a40\u6a41\u6a42\u6a43\u6a44\u6a45\u6a46\u6a47\u6a48\u6a49\u6a4a\u6a4b\u6a4c\u6a4d\u6a4e\u6a4f\u6a50\u6a51\u6a52\u6a53\u6a54\u6a55\u6a56\u6a57\u6a58\u6a59\u6a5a\u6a5b\u6a5c\u6a5d\u6a5e\u6a5f\u6a60\u6a61\u6a62\u6a63\u6a64\u6a65\u6a66\u6a67\u6a68\u6a69\u6a6a\u6a6b\u6a6c\u6a6d\u6a6e\u6a6f\u6a70\u6a71\u6a72\u6a73\u6a74\u6a75\u6a76\u6a77\u6a78\u6a79\u6a7a\u6a7b\u6a7c\u6a7d\u6a7e\u6a7f\u6a80\u6a81\u6a82\u6a83\u6a84\u6a85\u6a86\u6a87\u6a88\u6a89\u6a8a\u6a8b\u6a8c\u6a8d\u6a8e\u6a8f\u6a90\u6a91\u6a92\u6a93\u6a94\u6a95\u6a96\u6a97\u6a98\u6a99\u6a9a\u6a9b\u6a9c\u6a9d\u6a9e\u6a9f\u6aa0\u6aa1\u6aa2\u6aa3\u6aa4\u6aa5\u6aa6\u6aa7\u6aa8\u6aa9\u6aaa\u6aab\u6aac\u6aad\u6aae\u6aaf\u6ab0\u6ab1\u6ab2\u6ab3\u6ab4\u6ab5\u6ab6\u6ab7\u6ab8\u6ab9\u6aba\u6abb\u6abc\u6abd\u6abe\u6abf\u6ac0\u6ac1\u6ac2\u6ac3\u6ac4\u6ac5\u6ac6\u6ac7\u6ac8\u6ac9\u6aca\u6acb\u6acc\u6acd\u6ace\u6acf\u6ad0\u6ad1\u6ad2\u6ad3\u6ad4\u6ad5\u6ad6\u6ad7\u6ad8\u6ad9\u6ada\u6adb\u6adc\u6add\u6ade\u6adf\u6ae0\u6ae1\u6ae2\u6ae3\u6ae4\u6ae5\u6ae6\u6ae7\u6ae8\u6ae9\u6aea\u6aeb\u6aec\u6aed\u6aee\u6aef\u6af0\u6af1\u6af2\u6af3\u6af4\u6af5\u6af6\u6af7\u6af8\u6af9\u6afa\u6afb\u6afc\u6afd\u6afe\u6aff\u6b00\u6b01\u6b02\u6b03\u6b04\u6b05\u6b06\u6b07\u6b08\u6b09\u6b0a\u6b0b\u6b0c\u6b0d\u6b0e\u6b0f\u6b10\u6b11\u6b12\u6b13\u6b14\u6b15\u6b16\u6b17\u6b18\u6b19\u6b1a\u6b1b\u6b1c\u6b1d\u6b1e\u6b1f\u6b20\u6b21\u6b22\u6b23\u6b24\u6b25\u6b26\u6b27\u6b28\u6b29\u6b2a\u6b2b\u6b2c\u6b2d\u6b2e\u6b2f\u6b30\u6b31\u6b32\u6b33\u6b34\u6b35\u6b36\u6b37\u6b38\u6b39\u6b3a\u6b3b\u6b3c\u6b3d\u6b3e\u6b3f\u6b40\u6b41\u6b42\u6b43\u6b44\u6b45\u6b46\u6b47\u6b48\u6b49\u6b4a\u6b4b\u6b4c\u6b4d\u6b4e\u6b4f\u6b50\u6b51\u6b52\u6b53\u6b54\u6b55\u6b56\u6b57\u6b58\u6b59\u6b5a\u6b5b\u6b5c\u6b5d\u6b5e\u6b5f\u6b60\u6b61\u6b62\u6b63\u6b64\u6b65\u6b66\u6b67\u6b68\u6b69\u6b6a\u6b6b\u6b6c\u6b6d\u6b6e\u6b6f\u6b70\u6b71\u6b72\u6b73\u6b74\u6b75\u6b76\u6b77\u6b78\u6b79\u6b7a\u6b7b\u6b7c\u6b7d\u6b7e\u6b7f\u6b80\u6b81\u6b82\u6b83\u6b84\u6b85\u6b86\u6b87\u6b88\u6b89\u6b8a\u6b8b\u6b8c\u6b8d\u6b8e\u6b8f\u6b90\u6b91\u6b92\u6b93\u6b94\u6b95\u6b96\u6b97\u6b98\u6b99\u6b9a\u6b9b\u6b9c\u6b9d\u6b9e\u6b9f\u6ba0\u6ba1\u6ba2\u6ba3\u6ba4\u6ba5\u6ba6\u6ba7\u6ba8\u6ba9\u6baa\u6bab\u6bac\u6bad\u6bae\u6baf\u6bb0\u6bb1\u6bb2\u6bb3\u6bb4\u6bb5\u6bb6\u6bb7\u6bb8\u6bb9\u6bba\u6bbb\u6bbc\u6bbd\u6bbe\u6bbf\u6bc0\u6bc1\u6bc2\u6bc3\u6bc4\u6bc5\u6bc6\u6bc7\u6bc8\u6bc9\u6bca\u6bcb\u6bcc\u6bcd\u6bce\u6bcf\u6bd0\u6bd1\u6bd2\u6bd3\u6bd4\u6bd5\u6bd6\u6bd7\u6bd8\u6bd9\u6bda\u6bdb\u6bdc\u6bdd\u6bde\u6bdf\u6be0\u6be1\u6be2\u6be3\u6be4\u6be5\u6be6\u6be7\u6be8\u6be9\u6bea\u6beb\u6bec\u6bed\u6bee\u6bef\u6bf0\u6bf1\u6bf2\u6bf3\u6bf4\u6bf5\u6bf6\u6bf7\u6bf8\u6bf9\u6bfa\u6bfb\u6bfc\u6bfd\u6bfe\u6bff\u6c00\u6c01\u6c02\u6c03\u6c04\u6c05\u6c06\u6c07\u6c08\u6c09\u6c0a\u6c0b\u6c0c\u6c0d\u6c0e\u6c0f\u6c10\u6c11\u6c12\u6c13\u6c14\u6c15\u6c16\u6c17\u6c18\u6c19\u6c1a\u6c1b\u6c1c\u6c1d\u6c1e\u6c1f\u6c20\u6c21\u6c22\u6c23\u6c24\u6c25\u6c26\u6c27\u6c28\u6c29\u6c2a\u6c2b\u6c2c\u6c2d\u6c2e\u6c2f\u6c30\u6c31\u6c32\u6c33\u6c34\u6c35\u6c36\u6c37\u6c38\u6c39\u6c3a\u6c3b\u6c3c\u6c3d\u6c3e\u6c3f\u6c40\u6c41\u6c42\u6c43\u6c44\u6c45\u6c46\u6c47\u6c48\u6c49\u6c4a\u6c4b\u6c4c\u6c4d\u6c4e\u6c4f\u6c50\u6c51\u6c52\u6c53\u6c54\u6c55\u6c56\u6c57\u6c58\u6c59\u6c5a\u6c5b\u6c5c\u6c5d\u6c5e\u6c5f\u6c60\u6c61\u6c62\u6c63\u6c64\u6c65\u6c66\u6c67\u6c68\u6c69\u6c6a\u6c6b\u6c6c\u6c6d\u6c6e\u6c6f\u6c70\u6c71\u6c72\u6c73\u6c74\u6c75\u6c76\u6c77\u6c78\u6c79\u6c7a\u6c7b\u6c7c\u6c7d\u6c7e\u6c7f\u6c80\u6c81\u6c82\u6c83\u6c84\u6c85\u6c86\u6c87\u6c88\u6c89\u6c8a\u6c8b\u6c8c\u6c8d\u6c8e\u6c8f\u6c90\u6c91\u6c92\u6c93\u6c94\u6c95\u6c96\u6c97\u6c98\u6c99\u6c9a\u6c9b\u6c9c\u6c9d\u6c9e\u6c9f\u6ca0\u6ca1\u6ca2\u6ca3\u6ca4\u6ca5\u6ca6\u6ca7\u6ca8\u6ca9\u6caa\u6cab\u6cac\u6cad\u6cae\u6caf\u6cb0\u6cb1\u6cb2\u6cb3\u6cb4\u6cb5\u6cb6\u6cb7\u6cb8\u6cb9\u6cba\u6cbb\u6cbc\u6cbd\u6cbe\u6cbf\u6cc0\u6cc1\u6cc2\u6cc3\u6cc4\u6cc5\u6cc6\u6cc7\u6cc8\u6cc9\u6cca\u6ccb\u6ccc\u6ccd\u6cce\u6ccf\u6cd0\u6cd1\u6cd2\u6cd3\u6cd4\u6cd5\u6cd6\u6cd7\u6cd8\u6cd9\u6cda\u6cdb\u6cdc\u6cdd\u6cde\u6cdf\u6ce0\u6ce1\u6ce2\u6ce3\u6ce4\u6ce5\u6ce6\u6ce7\u6ce8\u6ce9\u6cea\u6ceb\u6cec\u6ced\u6cee\u6cef\u6cf0\u6cf1\u6cf2\u6cf3\u6cf4\u6cf5\u6cf6\u6cf7\u6cf8\u6cf9\u6cfa\u6cfb\u6cfc\u6cfd\u6cfe\u6cff\u6d00\u6d01\u6d02\u6d03\u6d04\u6d05\u6d06\u6d07\u6d08\u6d09\u6d0a\u6d0b\u6d0c\u6d0d\u6d0e\u6d0f\u6d10\u6d11\u6d12\u6d13\u6d14\u6d15\u6d16\u6d17\u6d18\u6d19\u6d1a\u6d1b\u6d1c\u6d1d\u6d1e\u6d1f\u6d20\u6d21\u6d22\u6d23\u6d24\u6d25\u6d26\u6d27\u6d28\u6d29\u6d2a\u6d2b\u6d2c\u6d2d\u6d2e\u6d2f\u6d30\u6d31\u6d32\u6d33\u6d34\u6d35\u6d36\u6d37\u6d38\u6d39\u6d3a\u6d3b\u6d3c\u6d3d\u6d3e\u6d3f\u6d40\u6d41\u6d42\u6d43\u6d44\u6d45\u6d46\u6d47\u6d48\u6d49\u6d4a\u6d4b\u6d4c\u6d4d\u6d4e\u6d4f\u6d50\u6d51\u6d52\u6d53\u6d54\u6d55\u6d56\u6d57\u6d58\u6d59\u6d5a\u6d5b\u6d5c\u6d5d\u6d5e\u6d5f\u6d60\u6d61\u6d62\u6d63\u6d64\u6d65\u6d66\u6d67\u6d68\u6d69\u6d6a\u6d6b\u6d6c\u6d6d\u6d6e\u6d6f\u6d70\u6d71\u6d72\u6d73\u6d74\u6d75\u6d76\u6d77\u6d78\u6d79\u6d7a\u6d7b\u6d7c\u6d7d\u6d7e\u6d7f\u6d80\u6d81\u6d82\u6d83\u6d84\u6d85\u6d86\u6d87\u6d88\u6d89\u6d8a\u6d8b\u6d8c\u6d8d\u6d8e\u6d8f\u6d90\u6d91\u6d92\u6d93\u6d94\u6d95\u6d96\u6d97\u6d98\u6d99\u6d9a\u6d9b\u6d9c\u6d9d\u6d9e\u6d9f\u6da0\u6da1\u6da2\u6da3\u6da4\u6da5\u6da6\u6da7\u6da8\u6da9\u6daa\u6dab\u6dac\u6dad\u6dae\u6daf\u6db0\u6db1\u6db2\u6db3\u6db4\u6db5\u6db6\u6db7\u6db8\u6db9\u6dba\u6dbb\u6dbc\u6dbd\u6dbe\u6dbf\u6dc0\u6dc1\u6dc2\u6dc3\u6dc4\u6dc5\u6dc6\u6dc7\u6dc8\u6dc9\u6dca\u6dcb\u6dcc\u6dcd\u6dce\u6dcf\u6dd0\u6dd1\u6dd2\u6dd3\u6dd4\u6dd5\u6dd6\u6dd7\u6dd8\u6dd9\u6dda\u6ddb\u6ddc\u6ddd\u6dde\u6ddf\u6de0\u6de1\u6de2\u6de3\u6de4\u6de5\u6de6\u6de7\u6de8\u6de9\u6dea\u6deb\u6dec\u6ded\u6dee\u6def\u6df0\u6df1\u6df2\u6df3\u6df4\u6df5\u6df6\u6df7\u6df8\u6df9\u6dfa\u6dfb\u6dfc\u6dfd\u6dfe\u6dff\u6e00\u6e01\u6e02\u6e03\u6e04\u6e05\u6e06\u6e07\u6e08\u6e09\u6e0a\u6e0b\u6e0c\u6e0d\u6e0e\u6e0f\u6e10\u6e11\u6e12\u6e13\u6e14\u6e15\u6e16\u6e17\u6e18\u6e19\u6e1a\u6e1b\u6e1c\u6e1d\u6e1e\u6e1f\u6e20\u6e21\u6e22\u6e23\u6e24\u6e25\u6e26\u6e27\u6e28\u6e29\u6e2a\u6e2b\u6e2c\u6e2d\u6e2e\u6e2f\u6e30\u6e31\u6e32\u6e33\u6e34\u6e35\u6e36\u6e37\u6e38\u6e39\u6e3a\u6e3b\u6e3c\u6e3d\u6e3e\u6e3f\u6e40\u6e41\u6e42\u6e43\u6e44\u6e45\u6e46\u6e47\u6e48\u6e49\u6e4a\u6e4b\u6e4c\u6e4d\u6e4e\u6e4f\u6e50\u6e51\u6e52\u6e53\u6e54\u6e55\u6e56\u6e57\u6e58\u6e59\u6e5a\u6e5b\u6e5c\u6e5d\u6e5e\u6e5f\u6e60\u6e61\u6e62\u6e63\u6e64\u6e65\u6e66\u6e67\u6e68\u6e69\u6e6a\u6e6b\u6e6c\u6e6d\u6e6e\u6e6f\u6e70\u6e71\u6e72\u6e73\u6e74\u6e75\u6e76\u6e77\u6e78\u6e79\u6e7a\u6e7b\u6e7c\u6e7d\u6e7e\u6e7f\u6e80\u6e81\u6e82\u6e83\u6e84\u6e85\u6e86\u6e87\u6e88\u6e89\u6e8a\u6e8b\u6e8c\u6e8d\u6e8e\u6e8f\u6e90\u6e91\u6e92\u6e93\u6e94\u6e95\u6e96\u6e97\u6e98\u6e99\u6e9a\u6e9b\u6e9c\u6e9d\u6e9e\u6e9f\u6ea0\u6ea1\u6ea2\u6ea3\u6ea4\u6ea5\u6ea6\u6ea7\u6ea8\u6ea9\u6eaa\u6eab\u6eac\u6ead\u6eae\u6eaf\u6eb0\u6eb1\u6eb2\u6eb3\u6eb4\u6eb5\u6eb6\u6eb7\u6eb8\u6eb9\u6eba\u6ebb\u6ebc\u6ebd\u6ebe\u6ebf\u6ec0\u6ec1\u6ec2\u6ec3\u6ec4\u6ec5\u6ec6\u6ec7\u6ec8\u6ec9\u6eca\u6ecb\u6ecc\u6ecd\u6ece\u6ecf\u6ed0\u6ed1\u6ed2\u6ed3\u6ed4\u6ed5\u6ed6\u6ed7\u6ed8\u6ed9\u6eda\u6edb\u6edc\u6edd\u6ede\u6edf\u6ee0\u6ee1\u6ee2\u6ee3\u6ee4\u6ee5\u6ee6\u6ee7\u6ee8\u6ee9\u6eea\u6eeb\u6eec\u6eed\u6eee\u6eef\u6ef0\u6ef1\u6ef2\u6ef3\u6ef4\u6ef5\u6ef6\u6ef7\u6ef8\u6ef9\u6efa\u6efb\u6efc\u6efd\u6efe\u6eff\u6f00\u6f01\u6f02\u6f03\u6f04\u6f05\u6f06\u6f07\u6f08\u6f09\u6f0a\u6f0b\u6f0c\u6f0d\u6f0e\u6f0f\u6f10\u6f11\u6f12\u6f13\u6f14\u6f15\u6f16\u6f17\u6f18\u6f19\u6f1a\u6f1b\u6f1c\u6f1d\u6f1e\u6f1f\u6f20\u6f21\u6f22\u6f23\u6f24\u6f25\u6f26\u6f27\u6f28\u6f29\u6f2a\u6f2b\u6f2c\u6f2d\u6f2e\u6f2f\u6f30\u6f31\u6f32\u6f33\u6f34\u6f35\u6f36\u6f37\u6f38\u6f39\u6f3a\u6f3b\u6f3c\u6f3d\u6f3e\u6f3f\u6f40\u6f41\u6f42\u6f43\u6f44\u6f45\u6f46\u6f47\u6f48\u6f49\u6f4a\u6f4b\u6f4c\u6f4d\u6f4e\u6f4f\u6f50\u6f51\u6f52\u6f53\u6f54\u6f55\u6f56\u6f57\u6f58\u6f59\u6f5a\u6f5b\u6f5c\u6f5d\u6f5e\u6f5f\u6f60\u6f61\u6f62\u6f63\u6f64\u6f65\u6f66\u6f67\u6f68\u6f69\u6f6a\u6f6b\u6f6c\u6f6d\u6f6e\u6f6f\u6f70\u6f71\u6f72\u6f73\u6f74\u6f75\u6f76\u6f77\u6f78\u6f79\u6f7a\u6f7b\u6f7c\u6f7d\u6f7e\u6f7f\u6f80\u6f81\u6f82\u6f83\u6f84\u6f85\u6f86\u6f87\u6f88\u6f89\u6f8a\u6f8b\u6f8c\u6f8d\u6f8e\u6f8f\u6f90\u6f91\u6f92\u6f93\u6f94\u6f95\u6f96\u6f97\u6f98\u6f99\u6f9a\u6f9b\u6f9c\u6f9d\u6f9e\u6f9f\u6fa0\u6fa1\u6fa2\u6fa3\u6fa4\u6fa5\u6fa6\u6fa7\u6fa8\u6fa9\u6faa\u6fab\u6fac\u6fad\u6fae\u6faf\u6fb0\u6fb1\u6fb2\u6fb3\u6fb4\u6fb5\u6fb6\u6fb7\u6fb8\u6fb9\u6fba\u6fbb\u6fbc\u6fbd\u6fbe\u6fbf\u6fc0\u6fc1\u6fc2\u6fc3\u6fc4\u6fc5\u6fc6\u6fc7\u6fc8\u6fc9\u6fca\u6fcb\u6fcc\u6fcd\u6fce\u6fcf\u6fd0\u6fd1\u6fd2\u6fd3\u6fd4\u6fd5\u6fd6\u6fd7\u6fd8\u6fd9\u6fda\u6fdb\u6fdc\u6fdd\u6fde\u6fdf\u6fe0\u6fe1\u6fe2\u6fe3\u6fe4\u6fe5\u6fe6\u6fe7\u6fe8\u6fe9\u6fea\u6feb\u6fec\u6fed\u6fee\u6fef\u6ff0\u6ff1\u6ff2\u6ff3\u6ff4\u6ff5\u6ff6\u6ff7\u6ff8\u6ff9\u6ffa\u6ffb\u6ffc\u6ffd\u6ffe\u6fff\u7000\u7001\u7002\u7003\u7004\u7005\u7006\u7007\u7008\u7009\u700a\u700b\u700c\u700d\u700e\u700f\u7010\u7011\u7012\u7013\u7014\u7015\u7016\u7017\u7018\u7019\u701a\u701b\u701c\u701d\u701e\u701f\u7020\u7021\u7022\u7023\u7024\u7025\u7026\u7027\u7028\u7029\u702a\u702b\u702c\u702d\u702e\u702f\u7030\u7031\u7032\u7033\u7034\u7035\u7036\u7037\u7038\u7039\u703a\u703b\u703c\u703d\u703e\u703f\u7040\u7041\u7042\u7043\u7044\u7045\u7046\u7047\u7048\u7049\u704a\u704b\u704c\u704d\u704e\u704f\u7050\u7051\u7052\u7053\u7054\u7055\u7056\u7057\u7058\u7059\u705a\u705b\u705c\u705d\u705e\u705f\u7060\u7061\u7062\u7063\u7064\u7065\u7066\u7067\u7068\u7069\u706a\u706b\u706c\u706d\u706e\u706f\u7070\u7071\u7072\u7073\u7074\u7075\u7076\u7077\u7078\u7079\u707a\u707b\u707c\u707d\u707e\u707f\u7080\u7081\u7082\u7083\u7084\u7085\u7086\u7087\u7088\u7089\u708a\u708b\u708c\u708d\u708e\u708f\u7090\u7091\u7092\u7093\u7094\u7095\u7096\u7097\u7098\u7099\u709a\u709b\u709c\u709d\u709e\u709f\u70a0\u70a1\u70a2\u70a3\u70a4\u70a5\u70a6\u70a7\u70a8\u70a9\u70aa\u70ab\u70ac\u70ad\u70ae\u70af\u70b0\u70b1\u70b2\u70b3\u70b4\u70b5\u70b6\u70b7\u70b8\u70b9\u70ba\u70bb\u70bc\u70bd\u70be\u70bf\u70c0\u70c1\u70c2\u70c3\u70c4\u70c5\u70c6\u70c7\u70c8\u70c9\u70ca\u70cb\u70cc\u70cd\u70ce\u70cf\u70d0\u70d1\u70d2\u70d3\u70d4\u70d5\u70d6\u70d7\u70d8\u70d9\u70da\u70db\u70dc\u70dd\u70de\u70df\u70e0\u70e1\u70e2\u70e3\u70e4\u70e5\u70e6\u70e7\u70e8\u70e9\u70ea\u70eb\u70ec\u70ed\u70ee\u70ef\u70f0\u70f1\u70f2\u70f3\u70f4\u70f5\u70f6\u70f7\u70f8\u70f9\u70fa\u70fb\u70fc\u70fd\u70fe\u70ff\u7100\u7101\u7102\u7103\u7104\u7105\u7106\u7107\u7108\u7109\u710a\u710b\u710c\u710d\u710e\u710f\u7110\u7111\u7112\u7113\u7114\u7115\u7116\u7117\u7118\u7119\u711a\u711b\u711c\u711d\u711e\u711f\u7120\u7121\u7122\u7123\u7124\u7125\u7126\u7127\u7128\u7129\u712a\u712b\u712c\u712d\u712e\u712f\u7130\u7131\u7132\u7133\u7134\u7135\u7136\u7137\u7138\u7139\u713a\u713b\u713c\u713d\u713e\u713f\u7140\u7141\u7142\u7143\u7144\u7145\u7146\u7147\u7148\u7149\u714a\u714b\u714c\u714d\u714e\u714f\u7150\u7151\u7152\u7153\u7154\u7155\u7156\u7157\u7158\u7159\u715a\u715b\u715c\u715d\u715e\u715f\u7160\u7161\u7162\u7163\u7164\u7165\u7166\u7167\u7168\u7169\u716a\u716b\u716c\u716d\u716e\u716f\u7170\u7171\u7172\u7173\u7174\u7175\u7176\u7177\u7178\u7179\u717a\u717b\u717c\u717d\u717e\u717f\u7180\u7181\u7182\u7183\u7184\u7185\u7186\u7187\u7188\u7189\u718a\u718b\u718c\u718d\u718e\u718f\u7190\u7191\u7192\u7193\u7194\u7195\u7196\u7197\u7198\u7199\u719a\u719b\u719c\u719d\u719e\u719f\u71a0\u71a1\u71a2\u71a3\u71a4\u71a5\u71a6\u71a7\u71a8\u71a9\u71aa\u71ab\u71ac\u71ad\u71ae\u71af\u71b0\u71b1\u71b2\u71b3\u71b4\u71b5\u71b6\u71b7\u71b8\u71b9\u71ba\u71bb\u71bc\u71bd\u71be\u71bf\u71c0\u71c1\u71c2\u71c3\u71c4\u71c5\u71c6\u71c7\u71c8\u71c9\u71ca\u71cb\u71cc\u71cd\u71ce\u71cf\u71d0\u71d1\u71d2\u71d3\u71d4\u71d5\u71d6\u71d7\u71d8\u71d9\u71da\u71db\u71dc\u71dd\u71de\u71df\u71e0\u71e1\u71e2\u71e3\u71e4\u71e5\u71e6\u71e7\u71e8\u71e9\u71ea\u71eb\u71ec\u71ed\u71ee\u71ef\u71f0\u71f1\u71f2\u71f3\u71f4\u71f5\u71f6\u71f7\u71f8\u71f9\u71fa\u71fb\u71fc\u71fd\u71fe\u71ff\u7200\u7201\u7202\u7203\u7204\u7205\u7206\u7207\u7208\u7209\u720a\u720b\u720c\u720d\u720e\u720f\u7210\u7211\u7212\u7213\u7214\u7215\u7216\u7217\u7218\u7219\u721a\u721b\u721c\u721d\u721e\u721f\u7220\u7221\u7222\u7223\u7224\u7225\u7226\u7227\u7228\u7229\u722a\u722b\u722c\u722d\u722e\u722f\u7230\u7231\u7232\u7233\u7234\u7235\u7236\u7237\u7238\u7239\u723a\u723b\u723c\u723d\u723e\u723f\u7240\u7241\u7242\u7243\u7244\u7245\u7246\u7247\u7248\u7249\u724a\u724b\u724c\u724d\u724e\u724f\u7250\u7251\u7252\u7253\u7254\u7255\u7256\u7257\u7258\u7259\u725a\u725b\u725c\u725d\u725e\u725f\u7260\u7261\u7262\u7263\u7264\u7265\u7266\u7267\u7268\u7269\u726a\u726b\u726c\u726d\u726e\u726f\u7270\u7271\u7272\u7273\u7274\u7275\u7276\u7277\u7278\u7279\u727a\u727b\u727c\u727d\u727e\u727f\u7280\u7281\u7282\u7283\u7284\u7285\u7286\u7287\u7288\u7289\u728a\u728b\u728c\u728d\u728e\u728f\u7290\u7291\u7292\u7293\u7294\u7295\u7296\u7297\u7298\u7299\u729a\u729b\u729c\u729d\u729e\u729f\u72a0\u72a1\u72a2\u72a3\u72a4\u72a5\u72a6\u72a7\u72a8\u72a9\u72aa\u72ab\u72ac\u72ad\u72ae\u72af\u72b0\u72b1\u72b2\u72b3\u72b4\u72b5\u72b6\u72b7\u72b8\u72b9\u72ba\u72bb\u72bc\u72bd\u72be\u72bf\u72c0\u72c1\u72c2\u72c3\u72c4\u72c5\u72c6\u72c7\u72c8\u72c9\u72ca\u72cb\u72cc\u72cd\u72ce\u72cf\u72d0\u72d1\u72d2\u72d3\u72d4\u72d5\u72d6\u72d7\u72d8\u72d9\u72da\u72db\u72dc\u72dd\u72de\u72df\u72e0\u72e1\u72e2\u72e3\u72e4\u72e5\u72e6\u72e7\u72e8\u72e9\u72ea\u72eb\u72ec\u72ed\u72ee\u72ef\u72f0\u72f1\u72f2\u72f3\u72f4\u72f5\u72f6\u72f7\u72f8\u72f9\u72fa\u72fb\u72fc\u72fd\u72fe\u72ff\u7300\u7301\u7302\u7303\u7304\u7305\u7306\u7307\u7308\u7309\u730a\u730b\u730c\u730d\u730e\u730f\u7310\u7311\u7312\u7313\u7314\u7315\u7316\u7317\u7318\u7319\u731a\u731b\u731c\u731d\u731e\u731f\u7320\u7321\u7322\u7323\u7324\u7325\u7326\u7327\u7328\u7329\u732a\u732b\u732c\u732d\u732e\u732f\u7330\u7331\u7332\u7333\u7334\u7335\u7336\u7337\u7338\u7339\u733a\u733b\u733c\u733d\u733e\u733f\u7340\u7341\u7342\u7343\u7344\u7345\u7346\u7347\u7348\u7349\u734a\u734b\u734c\u734d\u734e\u734f\u7350\u7351\u7352\u7353\u7354\u7355\u7356\u7357\u7358\u7359\u735a\u735b\u735c\u735d\u735e\u735f\u7360\u7361\u7362\u7363\u7364\u7365\u7366\u7367\u7368\u7369\u736a\u736b\u736c\u736d\u736e\u736f\u7370\u7371\u7372\u7373\u7374\u7375\u7376\u7377\u7378\u7379\u737a\u737b\u737c\u737d\u737e\u737f\u7380\u7381\u7382\u7383\u7384\u7385\u7386\u7387\u7388\u7389\u738a\u738b\u738c\u738d\u738e\u738f\u7390\u7391\u7392\u7393\u7394\u7395\u7396\u7397\u7398\u7399\u739a\u739b\u739c\u739d\u739e\u739f\u73a0\u73a1\u73a2\u73a3\u73a4\u73a5\u73a6\u73a7\u73a8\u73a9\u73aa\u73ab\u73ac\u73ad\u73ae\u73af\u73b0\u73b1\u73b2\u73b3\u73b4\u73b5\u73b6\u73b7\u73b8\u73b9\u73ba\u73bb\u73bc\u73bd\u73be\u73bf\u73c0\u73c1\u73c2\u73c3\u73c4\u73c5\u73c6\u73c7\u73c8\u73c9\u73ca\u73cb\u73cc\u73cd\u73ce\u73cf\u73d0\u73d1\u73d2\u73d3\u73d4\u73d5\u73d6\u73d7\u73d8\u73d9\u73da\u73db\u73dc\u73dd\u73de\u73df\u73e0\u73e1\u73e2\u73e3\u73e4\u73e5\u73e6\u73e7\u73e8\u73e9\u73ea\u73eb\u73ec\u73ed\u73ee\u73ef\u73f0\u73f1\u73f2\u73f3\u73f4\u73f5\u73f6\u73f7\u73f8\u73f9\u73fa\u73fb\u73fc\u73fd\u73fe\u73ff\u7400\u7401\u7402\u7403\u7404\u7405\u7406\u7407\u7408\u7409\u740a\u740b\u740c\u740d\u740e\u740f\u7410\u7411\u7412\u7413\u7414\u7415\u7416\u7417\u7418\u7419\u741a\u741b\u741c\u741d\u741e\u741f\u7420\u7421\u7422\u7423\u7424\u7425\u7426\u7427\u7428\u7429\u742a\u742b\u742c\u742d\u742e\u742f\u7430\u7431\u7432\u7433\u7434\u7435\u7436\u7437\u7438\u7439\u743a\u743b\u743c\u743d\u743e\u743f\u7440\u7441\u7442\u7443\u7444\u7445\u7446\u7447\u7448\u7449\u744a\u744b\u744c\u744d\u744e\u744f\u7450\u7451\u7452\u7453\u7454\u7455\u7456\u7457\u7458\u7459\u745a\u745b\u745c\u745d\u745e\u745f\u7460\u7461\u7462\u7463\u7464\u7465\u7466\u7467\u7468\u7469\u746a\u746b\u746c\u746d\u746e\u746f\u7470\u7471\u7472\u7473\u7474\u7475\u7476\u7477\u7478\u7479\u747a\u747b\u747c\u747d\u747e\u747f\u7480\u7481\u7482\u7483\u7484\u7485\u7486\u7487\u7488\u7489\u748a\u748b\u748c\u748d\u748e\u748f\u7490\u7491\u7492\u7493\u7494\u7495\u7496\u7497\u7498\u7499\u749a\u749b\u749c\u749d\u749e\u749f\u74a0\u74a1\u74a2\u74a3\u74a4\u74a5\u74a6\u74a7\u74a8\u74a9\u74aa\u74ab\u74ac\u74ad\u74ae\u74af\u74b0\u74b1\u74b2\u74b3\u74b4\u74b5\u74b6\u74b7\u74b8\u74b9\u74ba\u74bb\u74bc\u74bd\u74be\u74bf\u74c0\u74c1\u74c2\u74c3\u74c4\u74c5\u74c6\u74c7\u74c8\u74c9\u74ca\u74cb\u74cc\u74cd\u74ce\u74cf\u74d0\u74d1\u74d2\u74d3\u74d4\u74d5\u74d6\u74d7\u74d8\u74d9\u74da\u74db\u74dc\u74dd\u74de\u74df\u74e0\u74e1\u74e2\u74e3\u74e4\u74e5\u74e6\u74e7\u74e8\u74e9\u74ea\u74eb\u74ec\u74ed\u74ee\u74ef\u74f0\u74f1\u74f2\u74f3\u74f4\u74f5\u74f6\u74f7\u74f8\u74f9\u74fa\u74fb\u74fc\u74fd\u74fe\u74ff\u7500\u7501\u7502\u7503\u7504\u7505\u7506\u7507\u7508\u7509\u750a\u750b\u750c\u750d\u750e\u750f\u7510\u7511\u7512\u7513\u7514\u7515\u7516\u7517\u7518\u7519\u751a\u751b\u751c\u751d\u751e\u751f\u7520\u7521\u7522\u7523\u7524\u7525\u7526\u7527\u7528\u7529\u752a\u752b\u752c\u752d\u752e\u752f\u7530\u7531\u7532\u7533\u7534\u7535\u7536\u7537\u7538\u7539\u753a\u753b\u753c\u753d\u753e\u753f\u7540\u7541\u7542\u7543\u7544\u7545\u7546\u7547\u7548\u7549\u754a\u754b\u754c\u754d\u754e\u754f\u7550\u7551\u7552\u7553\u7554\u7555\u7556\u7557\u7558\u7559\u755a\u755b\u755c\u755d\u755e\u755f\u7560\u7561\u7562\u7563\u7564\u7565\u7566\u7567\u7568\u7569\u756a\u756b\u756c\u756d\u756e\u756f\u7570\u7571\u7572\u7573\u7574\u7575\u7576\u7577\u7578\u7579\u757a\u757b\u757c\u757d\u757e\u757f\u7580\u7581\u7582\u7583\u7584\u7585\u7586\u7587\u7588\u7589\u758a\u758b\u758c\u758d\u758e\u758f\u7590\u7591\u7592\u7593\u7594\u7595\u7596\u7597\u7598\u7599\u759a\u759b\u759c\u759d\u759e\u759f\u75a0\u75a1\u75a2\u75a3\u75a4\u75a5\u75a6\u75a7\u75a8\u75a9\u75aa\u75ab\u75ac\u75ad\u75ae\u75af\u75b0\u75b1\u75b2\u75b3\u75b4\u75b5\u75b6\u75b7\u75b8\u75b9\u75ba\u75bb\u75bc\u75bd\u75be\u75bf\u75c0\u75c1\u75c2\u75c3\u75c4\u75c5\u75c6\u75c7\u75c8\u75c9\u75ca\u75cb\u75cc\u75cd\u75ce\u75cf\u75d0\u75d1\u75d2\u75d3\u75d4\u75d5\u75d6\u75d7\u75d8\u75d9\u75da\u75db\u75dc\u75dd\u75de\u75df\u75e0\u75e1\u75e2\u75e3\u75e4\u75e5\u75e6\u75e7\u75e8\u75e9\u75ea\u75eb\u75ec\u75ed\u75ee\u75ef\u75f0\u75f1\u75f2\u75f3\u75f4\u75f5\u75f6\u75f7\u75f8\u75f9\u75fa\u75fb\u75fc\u75fd\u75fe\u75ff\u7600\u7601\u7602\u7603\u7604\u7605\u7606\u7607\u7608\u7609\u760a\u760b\u760c\u760d\u760e\u760f\u7610\u7611\u7612\u7613\u7614\u7615\u7616\u7617\u7618\u7619\u761a\u761b\u761c\u761d\u761e\u761f\u7620\u7621\u7622\u7623\u7624\u7625\u7626\u7627\u7628\u7629\u762a\u762b\u762c\u762d\u762e\u762f\u7630\u7631\u7632\u7633\u7634\u7635\u7636\u7637\u7638\u7639\u763a\u763b\u763c\u763d\u763e\u763f\u7640\u7641\u7642\u7643\u7644\u7645\u7646\u7647\u7648\u7649\u764a\u764b\u764c\u764d\u764e\u764f\u7650\u7651\u7652\u7653\u7654\u7655\u7656\u7657\u7658\u7659\u765a\u765b\u765c\u765d\u765e\u765f\u7660\u7661\u7662\u7663\u7664\u7665\u7666\u7667\u7668\u7669\u766a\u766b\u766c\u766d\u766e\u766f\u7670\u7671\u7672\u7673\u7674\u7675\u7676\u7677\u7678\u7679\u767a\u767b\u767c\u767d\u767e\u767f\u7680\u7681\u7682\u7683\u7684\u7685\u7686\u7687\u7688\u7689\u768a\u768b\u768c\u768d\u768e\u768f\u7690\u7691\u7692\u7693\u7694\u7695\u7696\u7697\u7698\u7699\u769a\u769b\u769c\u769d\u769e\u769f\u76a0\u76a1\u76a2\u76a3\u76a4\u76a5\u76a6\u76a7\u76a8\u76a9\u76aa\u76ab\u76ac\u76ad\u76ae\u76af\u76b0\u76b1\u76b2\u76b3\u76b4\u76b5\u76b6\u76b7\u76b8\u76b9\u76ba\u76bb\u76bc\u76bd\u76be\u76bf\u76c0\u76c1\u76c2\u76c3\u76c4\u76c5\u76c6\u76c7\u76c8\u76c9\u76ca\u76cb\u76cc\u76cd\u76ce\u76cf\u76d0\u76d1\u76d2\u76d3\u76d4\u76d5\u76d6\u76d7\u76d8\u76d9\u76da\u76db\u76dc\u76dd\u76de\u76df\u76e0\u76e1\u76e2\u76e3\u76e4\u76e5\u76e6\u76e7\u76e8\u76e9\u76ea\u76eb\u76ec\u76ed\u76ee\u76ef\u76f0\u76f1\u76f2\u76f3\u76f4\u76f5\u76f6\u76f7\u76f8\u76f9\u76fa\u76fb\u76fc\u76fd\u76fe\u76ff\u7700\u7701\u7702\u7703\u7704\u7705\u7706\u7707\u7708\u7709\u770a\u770b\u770c\u770d\u770e\u770f\u7710\u7711\u7712\u7713\u7714\u7715\u7716\u7717\u7718\u7719\u771a\u771b\u771c\u771d\u771e\u771f\u7720\u7721\u7722\u7723\u7724\u7725\u7726\u7727\u7728\u7729\u772a\u772b\u772c\u772d\u772e\u772f\u7730\u7731\u7732\u7733\u7734\u7735\u7736\u7737\u7738\u7739\u773a\u773b\u773c\u773d\u773e\u773f\u7740\u7741\u7742\u7743\u7744\u7745\u7746\u7747\u7748\u7749\u774a\u774b\u774c\u774d\u774e\u774f\u7750\u7751\u7752\u7753\u7754\u7755\u7756\u7757\u7758\u7759\u775a\u775b\u775c\u775d\u775e\u775f\u7760\u7761\u7762\u7763\u7764\u7765\u7766\u7767\u7768\u7769\u776a\u776b\u776c\u776d\u776e\u776f\u7770\u7771\u7772\u7773\u7774\u7775\u7776\u7777\u7778\u7779\u777a\u777b\u777c\u777d\u777e\u777f\u7780\u7781\u7782\u7783\u7784\u7785\u7786\u7787\u7788\u7789\u778a\u778b\u778c\u778d\u778e\u778f\u7790\u7791\u7792\u7793\u7794\u7795\u7796\u7797\u7798\u7799\u779a\u779b\u779c\u779d\u779e\u779f\u77a0\u77a1\u77a2\u77a3\u77a4\u77a5\u77a6\u77a7\u77a8\u77a9\u77aa\u77ab\u77ac\u77ad\u77ae\u77af\u77b0\u77b1\u77b2\u77b3\u77b4\u77b5\u77b6\u77b7\u77b8\u77b9\u77ba\u77bb\u77bc\u77bd\u77be\u77bf\u77c0\u77c1\u77c2\u77c3\u77c4\u77c5\u77c6\u77c7\u77c8\u77c9\u77ca\u77cb\u77cc\u77cd\u77ce\u77cf\u77d0\u77d1\u77d2\u77d3\u77d4\u77d5\u77d6\u77d7\u77d8\u77d9\u77da\u77db\u77dc\u77dd\u77de\u77df\u77e0\u77e1\u77e2\u77e3\u77e4\u77e5\u77e6\u77e7\u77e8\u77e9\u77ea\u77eb\u77ec\u77ed\u77ee\u77ef\u77f0\u77f1\u77f2\u77f3\u77f4\u77f5\u77f6\u77f7\u77f8\u77f9\u77fa\u77fb\u77fc\u77fd\u77fe\u77ff\u7800\u7801\u7802\u7803\u7804\u7805\u7806\u7807\u7808\u7809\u780a\u780b\u780c\u780d\u780e\u780f\u7810\u7811\u7812\u7813\u7814\u7815\u7816\u7817\u7818\u7819\u781a\u781b\u781c\u781d\u781e\u781f\u7820\u7821\u7822\u7823\u7824\u7825\u7826\u7827\u7828\u7829\u782a\u782b\u782c\u782d\u782e\u782f\u7830\u7831\u7832\u7833\u7834\u7835\u7836\u7837\u7838\u7839\u783a\u783b\u783c\u783d\u783e\u783f\u7840\u7841\u7842\u7843\u7844\u7845\u7846\u7847\u7848\u7849\u784a\u784b\u784c\u784d\u784e\u784f\u7850\u7851\u7852\u7853\u7854\u7855\u7856\u7857\u7858\u7859\u785a\u785b\u785c\u785d\u785e\u785f\u7860\u7861\u7862\u7863\u7864\u7865\u7866\u7867\u7868\u7869\u786a\u786b\u786c\u786d\u786e\u786f\u7870\u7871\u7872\u7873\u7874\u7875\u7876\u7877\u7878\u7879\u787a\u787b\u787c\u787d\u787e\u787f\u7880\u7881\u7882\u7883\u7884\u7885\u7886\u7887\u7888\u7889\u788a\u788b\u788c\u788d\u788e\u788f\u7890\u7891\u7892\u7893\u7894\u7895\u7896\u7897\u7898\u7899\u789a\u789b\u789c\u789d\u789e\u789f\u78a0\u78a1\u78a2\u78a3\u78a4\u78a5\u78a6\u78a7\u78a8\u78a9\u78aa\u78ab\u78ac\u78ad\u78ae\u78af\u78b0\u78b1\u78b2\u78b3\u78b4\u78b5\u78b6\u78b7\u78b8\u78b9\u78ba\u78bb\u78bc\u78bd\u78be\u78bf\u78c0\u78c1\u78c2\u78c3\u78c4\u78c5\u78c6\u78c7\u78c8\u78c9\u78ca\u78cb\u78cc\u78cd\u78ce\u78cf\u78d0\u78d1\u78d2\u78d3\u78d4\u78d5\u78d6\u78d7\u78d8\u78d9\u78da\u78db\u78dc\u78dd\u78de\u78df\u78e0\u78e1\u78e2\u78e3\u78e4\u78e5\u78e6\u78e7\u78e8\u78e9\u78ea\u78eb\u78ec\u78ed\u78ee\u78ef\u78f0\u78f1\u78f2\u78f3\u78f4\u78f5\u78f6\u78f7\u78f8\u78f9\u78fa\u78fb\u78fc\u78fd\u78fe\u78ff\u7900\u7901\u7902\u7903\u7904\u7905\u7906\u7907\u7908\u7909\u790a\u790b\u790c\u790d\u790e\u790f\u7910\u7911\u7912\u7913\u7914\u7915\u7916\u7917\u7918\u7919\u791a\u791b\u791c\u791d\u791e\u791f\u7920\u7921\u7922\u7923\u7924\u7925\u7926\u7927\u7928\u7929\u792a\u792b\u792c\u792d\u792e\u792f\u7930\u7931\u7932\u7933\u7934\u7935\u7936\u7937\u7938\u7939\u793a\u793b\u793c\u793d\u793e\u793f\u7940\u7941\u7942\u7943\u7944\u7945\u7946\u7947\u7948\u7949\u794a\u794b\u794c\u794d\u794e\u794f\u7950\u7951\u7952\u7953\u7954\u7955\u7956\u7957\u7958\u7959\u795a\u795b\u795c\u795d\u795e\u795f\u7960\u7961\u7962\u7963\u7964\u7965\u7966\u7967\u7968\u7969\u796a\u796b\u796c\u796d\u796e\u796f\u7970\u7971\u7972\u7973\u7974\u7975\u7976\u7977\u7978\u7979\u797a\u797b\u797c\u797d\u797e\u797f\u7980\u7981\u7982\u7983\u7984\u7985\u7986\u7987\u7988\u7989\u798a\u798b\u798c\u798d\u798e\u798f\u7990\u7991\u7992\u7993\u7994\u7995\u7996\u7997\u7998\u7999\u799a\u799b\u799c\u799d\u799e\u799f\u79a0\u79a1\u79a2\u79a3\u79a4\u79a5\u79a6\u79a7\u79a8\u79a9\u79aa\u79ab\u79ac\u79ad\u79ae\u79af\u79b0\u79b1\u79b2\u79b3\u79b4\u79b5\u79b6\u79b7\u79b8\u79b9\u79ba\u79bb\u79bc\u79bd\u79be\u79bf\u79c0\u79c1\u79c2\u79c3\u79c4\u79c5\u79c6\u79c7\u79c8\u79c9\u79ca\u79cb\u79cc\u79cd\u79ce\u79cf\u79d0\u79d1\u79d2\u79d3\u79d4\u79d5\u79d6\u79d7\u79d8\u79d9\u79da\u79db\u79dc\u79dd\u79de\u79df\u79e0\u79e1\u79e2\u79e3\u79e4\u79e5\u79e6\u79e7\u79e8\u79e9\u79ea\u79eb\u79ec\u79ed\u79ee\u79ef\u79f0\u79f1\u79f2\u79f3\u79f4\u79f5\u79f6\u79f7\u79f8\u79f9\u79fa\u79fb\u79fc\u79fd\u79fe\u79ff\u7a00\u7a01\u7a02\u7a03\u7a04\u7a05\u7a06\u7a07\u7a08\u7a09\u7a0a\u7a0b\u7a0c\u7a0d\u7a0e\u7a0f\u7a10\u7a11\u7a12\u7a13\u7a14\u7a15\u7a16\u7a17\u7a18\u7a19\u7a1a\u7a1b\u7a1c\u7a1d\u7a1e\u7a1f\u7a20\u7a21\u7a22\u7a23\u7a24\u7a25\u7a26\u7a27\u7a28\u7a29\u7a2a\u7a2b\u7a2c\u7a2d\u7a2e\u7a2f\u7a30\u7a31\u7a32\u7a33\u7a34\u7a35\u7a36\u7a37\u7a38\u7a39\u7a3a\u7a3b\u7a3c\u7a3d\u7a3e\u7a3f\u7a40\u7a41\u7a42\u7a43\u7a44\u7a45\u7a46\u7a47\u7a48\u7a49\u7a4a\u7a4b\u7a4c\u7a4d\u7a4e\u7a4f\u7a50\u7a51\u7a52\u7a53\u7a54\u7a55\u7a56\u7a57\u7a58\u7a59\u7a5a\u7a5b\u7a5c\u7a5d\u7a5e\u7a5f\u7a60\u7a61\u7a62\u7a63\u7a64\u7a65\u7a66\u7a67\u7a68\u7a69\u7a6a\u7a6b\u7a6c\u7a6d\u7a6e\u7a6f\u7a70\u7a71\u7a72\u7a73\u7a74\u7a75\u7a76\u7a77\u7a78\u7a79\u7a7a\u7a7b\u7a7c\u7a7d\u7a7e\u7a7f\u7a80\u7a81\u7a82\u7a83\u7a84\u7a85\u7a86\u7a87\u7a88\u7a89\u7a8a\u7a8b\u7a8c\u7a8d\u7a8e\u7a8f\u7a90\u7a91\u7a92\u7a93\u7a94\u7a95\u7a96\u7a97\u7a98\u7a99\u7a9a\u7a9b\u7a9c\u7a9d\u7a9e\u7a9f\u7aa0\u7aa1\u7aa2\u7aa3\u7aa4\u7aa5\u7aa6\u7aa7\u7aa8\u7aa9\u7aaa\u7aab\u7aac\u7aad\u7aae\u7aaf\u7ab0\u7ab1\u7ab2\u7ab3\u7ab4\u7ab5\u7ab6\u7ab7\u7ab8\u7ab9\u7aba\u7abb\u7abc\u7abd\u7abe\u7abf\u7ac0\u7ac1\u7ac2\u7ac3\u7ac4\u7ac5\u7ac6\u7ac7\u7ac8\u7ac9\u7aca\u7acb\u7acc\u7acd\u7ace\u7acf\u7ad0\u7ad1\u7ad2\u7ad3\u7ad4\u7ad5\u7ad6\u7ad7\u7ad8\u7ad9\u7ada\u7adb\u7adc\u7add\u7ade\u7adf\u7ae0\u7ae1\u7ae2\u7ae3\u7ae4\u7ae5\u7ae6\u7ae7\u7ae8\u7ae9\u7aea\u7aeb\u7aec\u7aed\u7aee\u7aef\u7af0\u7af1\u7af2\u7af3\u7af4\u7af5\u7af6\u7af7\u7af8\u7af9\u7afa\u7afb\u7afc\u7afd\u7afe\u7aff\u7b00\u7b01\u7b02\u7b03\u7b04\u7b05\u7b06\u7b07\u7b08\u7b09\u7b0a\u7b0b\u7b0c\u7b0d\u7b0e\u7b0f\u7b10\u7b11\u7b12\u7b13\u7b14\u7b15\u7b16\u7b17\u7b18\u7b19\u7b1a\u7b1b\u7b1c\u7b1d\u7b1e\u7b1f\u7b20\u7b21\u7b22\u7b23\u7b24\u7b25\u7b26\u7b27\u7b28\u7b29\u7b2a\u7b2b\u7b2c\u7b2d\u7b2e\u7b2f\u7b30\u7b31\u7b32\u7b33\u7b34\u7b35\u7b36\u7b37\u7b38\u7b39\u7b3a\u7b3b\u7b3c\u7b3d\u7b3e\u7b3f\u7b40\u7b41\u7b42\u7b43\u7b44\u7b45\u7b46\u7b47\u7b48\u7b49\u7b4a\u7b4b\u7b4c\u7b4d\u7b4e\u7b4f\u7b50\u7b51\u7b52\u7b53\u7b54\u7b55\u7b56\u7b57\u7b58\u7b59\u7b5a\u7b5b\u7b5c\u7b5d\u7b5e\u7b5f\u7b60\u7b61\u7b62\u7b63\u7b64\u7b65\u7b66\u7b67\u7b68\u7b69\u7b6a\u7b6b\u7b6c\u7b6d\u7b6e\u7b6f\u7b70\u7b71\u7b72\u7b73\u7b74\u7b75\u7b76\u7b77\u7b78\u7b79\u7b7a\u7b7b\u7b7c\u7b7d\u7b7e\u7b7f\u7b80\u7b81\u7b82\u7b83\u7b84\u7b85\u7b86\u7b87\u7b88\u7b89\u7b8a\u7b8b\u7b8c\u7b8d\u7b8e\u7b8f\u7b90\u7b91\u7b92\u7b93\u7b94\u7b95\u7b96\u7b97\u7b98\u7b99\u7b9a\u7b9b\u7b9c\u7b9d\u7b9e\u7b9f\u7ba0\u7ba1\u7ba2\u7ba3\u7ba4\u7ba5\u7ba6\u7ba7\u7ba8\u7ba9\u7baa\u7bab\u7bac\u7bad\u7bae\u7baf\u7bb0\u7bb1\u7bb2\u7bb3\u7bb4\u7bb5\u7bb6\u7bb7\u7bb8\u7bb9\u7bba\u7bbb\u7bbc\u7bbd\u7bbe\u7bbf\u7bc0\u7bc1\u7bc2\u7bc3\u7bc4\u7bc5\u7bc6\u7bc7\u7bc8\u7bc9\u7bca\u7bcb\u7bcc\u7bcd\u7bce\u7bcf\u7bd0\u7bd1\u7bd2\u7bd3\u7bd4\u7bd5\u7bd6\u7bd7\u7bd8\u7bd9\u7bda\u7bdb\u7bdc\u7bdd\u7bde\u7bdf\u7be0\u7be1\u7be2\u7be3\u7be4\u7be5\u7be6\u7be7\u7be8\u7be9\u7bea\u7beb\u7bec\u7bed\u7bee\u7bef\u7bf0\u7bf1\u7bf2\u7bf3\u7bf4\u7bf5\u7bf6\u7bf7\u7bf8\u7bf9\u7bfa\u7bfb\u7bfc\u7bfd\u7bfe\u7bff\u7c00\u7c01\u7c02\u7c03\u7c04\u7c05\u7c06\u7c07\u7c08\u7c09\u7c0a\u7c0b\u7c0c\u7c0d\u7c0e\u7c0f\u7c10\u7c11\u7c12\u7c13\u7c14\u7c15\u7c16\u7c17\u7c18\u7c19\u7c1a\u7c1b\u7c1c\u7c1d\u7c1e\u7c1f\u7c20\u7c21\u7c22\u7c23\u7c24\u7c25\u7c26\u7c27\u7c28\u7c29\u7c2a\u7c2b\u7c2c\u7c2d\u7c2e\u7c2f\u7c30\u7c31\u7c32\u7c33\u7c34\u7c35\u7c36\u7c37\u7c38\u7c39\u7c3a\u7c3b\u7c3c\u7c3d\u7c3e\u7c3f\u7c40\u7c41\u7c42\u7c43\u7c44\u7c45\u7c46\u7c47\u7c48\u7c49\u7c4a\u7c4b\u7c4c\u7c4d\u7c4e\u7c4f\u7c50\u7c51\u7c52\u7c53\u7c54\u7c55\u7c56\u7c57\u7c58\u7c59\u7c5a\u7c5b\u7c5c\u7c5d\u7c5e\u7c5f\u7c60\u7c61\u7c62\u7c63\u7c64\u7c65\u7c66\u7c67\u7c68\u7c69\u7c6a\u7c6b\u7c6c\u7c6d\u7c6e\u7c6f\u7c70\u7c71\u7c72\u7c73\u7c74\u7c75\u7c76\u7c77\u7c78\u7c79\u7c7a\u7c7b\u7c7c\u7c7d\u7c7e\u7c7f\u7c80\u7c81\u7c82\u7c83\u7c84\u7c85\u7c86\u7c87\u7c88\u7c89\u7c8a\u7c8b\u7c8c\u7c8d\u7c8e\u7c8f\u7c90\u7c91\u7c92\u7c93\u7c94\u7c95\u7c96\u7c97\u7c98\u7c99\u7c9a\u7c9b\u7c9c\u7c9d\u7c9e\u7c9f\u7ca0\u7ca1\u7ca2\u7ca3\u7ca4\u7ca5\u7ca6\u7ca7\u7ca8\u7ca9\u7caa\u7cab\u7cac\u7cad\u7cae\u7caf\u7cb0\u7cb1\u7cb2\u7cb3\u7cb4\u7cb5\u7cb6\u7cb7\u7cb8\u7cb9\u7cba\u7cbb\u7cbc\u7cbd\u7cbe\u7cbf\u7cc0\u7cc1\u7cc2\u7cc3\u7cc4\u7cc5\u7cc6\u7cc7\u7cc8\u7cc9\u7cca\u7ccb\u7ccc\u7ccd\u7cce\u7ccf\u7cd0\u7cd1\u7cd2\u7cd3\u7cd4\u7cd5\u7cd6\u7cd7\u7cd8\u7cd9\u7cda\u7cdb\u7cdc\u7cdd\u7cde\u7cdf\u7ce0\u7ce1\u7ce2\u7ce3\u7ce4\u7ce5\u7ce6\u7ce7\u7ce8\u7ce9\u7cea\u7ceb\u7cec\u7ced\u7cee\u7cef\u7cf0\u7cf1\u7cf2\u7cf3\u7cf4\u7cf5\u7cf6\u7cf7\u7cf8\u7cf9\u7cfa\u7cfb\u7cfc\u7cfd\u7cfe\u7cff\u7d00\u7d01\u7d02\u7d03\u7d04\u7d05\u7d06\u7d07\u7d08\u7d09\u7d0a\u7d0b\u7d0c\u7d0d\u7d0e\u7d0f\u7d10\u7d11\u7d12\u7d13\u7d14\u7d15\u7d16\u7d17\u7d18\u7d19\u7d1a\u7d1b\u7d1c\u7d1d\u7d1e\u7d1f\u7d20\u7d21\u7d22\u7d23\u7d24\u7d25\u7d26\u7d27\u7d28\u7d29\u7d2a\u7d2b\u7d2c\u7d2d\u7d2e\u7d2f\u7d30\u7d31\u7d32\u7d33\u7d34\u7d35\u7d36\u7d37\u7d38\u7d39\u7d3a\u7d3b\u7d3c\u7d3d\u7d3e\u7d3f\u7d40\u7d41\u7d42\u7d43\u7d44\u7d45\u7d46\u7d47\u7d48\u7d49\u7d4a\u7d4b\u7d4c\u7d4d\u7d4e\u7d4f\u7d50\u7d51\u7d52\u7d53\u7d54\u7d55\u7d56\u7d57\u7d58\u7d59\u7d5a\u7d5b\u7d5c\u7d5d\u7d5e\u7d5f\u7d60\u7d61\u7d62\u7d63\u7d64\u7d65\u7d66\u7d67\u7d68\u7d69\u7d6a\u7d6b\u7d6c\u7d6d\u7d6e\u7d6f\u7d70\u7d71\u7d72\u7d73\u7d74\u7d75\u7d76\u7d77\u7d78\u7d79\u7d7a\u7d7b\u7d7c\u7d7d\u7d7e\u7d7f\u7d80\u7d81\u7d82\u7d83\u7d84\u7d85\u7d86\u7d87\u7d88\u7d89\u7d8a\u7d8b\u7d8c\u7d8d\u7d8e\u7d8f\u7d90\u7d91\u7d92\u7d93\u7d94\u7d95\u7d96\u7d97\u7d98\u7d99\u7d9a\u7d9b\u7d9c\u7d9d\u7d9e\u7d9f\u7da0\u7da1\u7da2\u7da3\u7da4\u7da5\u7da6\u7da7\u7da8\u7da9\u7daa\u7dab\u7dac\u7dad\u7dae\u7daf\u7db0\u7db1\u7db2\u7db3\u7db4\u7db5\u7db6\u7db7\u7db8\u7db9\u7dba\u7dbb\u7dbc\u7dbd\u7dbe\u7dbf\u7dc0\u7dc1\u7dc2\u7dc3\u7dc4\u7dc5\u7dc6\u7dc7\u7dc8\u7dc9\u7dca\u7dcb\u7dcc\u7dcd\u7dce\u7dcf\u7dd0\u7dd1\u7dd2\u7dd3\u7dd4\u7dd5\u7dd6\u7dd7\u7dd8\u7dd9\u7dda\u7ddb\u7ddc\u7ddd\u7dde\u7ddf\u7de0\u7de1\u7de2\u7de3\u7de4\u7de5\u7de6\u7de7\u7de8\u7de9\u7dea\u7deb\u7dec\u7ded\u7dee\u7def\u7df0\u7df1\u7df2\u7df3\u7df4\u7df5\u7df6\u7df7\u7df8\u7df9\u7dfa\u7dfb\u7dfc\u7dfd\u7dfe\u7dff\u7e00\u7e01\u7e02\u7e03\u7e04\u7e05\u7e06\u7e07\u7e08\u7e09\u7e0a\u7e0b\u7e0c\u7e0d\u7e0e\u7e0f\u7e10\u7e11\u7e12\u7e13\u7e14\u7e15\u7e16\u7e17\u7e18\u7e19\u7e1a\u7e1b\u7e1c\u7e1d\u7e1e\u7e1f\u7e20\u7e21\u7e22\u7e23\u7e24\u7e25\u7e26\u7e27\u7e28\u7e29\u7e2a\u7e2b\u7e2c\u7e2d\u7e2e\u7e2f\u7e30\u7e31\u7e32\u7e33\u7e34\u7e35\u7e36\u7e37\u7e38\u7e39\u7e3a\u7e3b\u7e3c\u7e3d\u7e3e\u7e3f\u7e40\u7e41\u7e42\u7e43\u7e44\u7e45\u7e46\u7e47\u7e48\u7e49\u7e4a\u7e4b\u7e4c\u7e4d\u7e4e\u7e4f\u7e50\u7e51\u7e52\u7e53\u7e54\u7e55\u7e56\u7e57\u7e58\u7e59\u7e5a\u7e5b\u7e5c\u7e5d\u7e5e\u7e5f\u7e60\u7e61\u7e62\u7e63\u7e64\u7e65\u7e66\u7e67\u7e68\u7e69\u7e6a\u7e6b\u7e6c\u7e6d\u7e6e\u7e6f\u7e70\u7e71\u7e72\u7e73\u7e74\u7e75\u7e76\u7e77\u7e78\u7e79\u7e7a\u7e7b\u7e7c\u7e7d\u7e7e\u7e7f\u7e80\u7e81\u7e82\u7e83\u7e84\u7e85\u7e86\u7e87\u7e88\u7e89\u7e8a\u7e8b\u7e8c\u7e8d\u7e8e\u7e8f\u7e90\u7e91\u7e92\u7e93\u7e94\u7e95\u7e96\u7e97\u7e98\u7e99\u7e9a\u7e9b\u7e9c\u7e9d\u7e9e\u7e9f\u7ea0\u7ea1\u7ea2\u7ea3\u7ea4\u7ea5\u7ea6\u7ea7\u7ea8\u7ea9\u7eaa\u7eab\u7eac\u7ead\u7eae\u7eaf\u7eb0\u7eb1\u7eb2\u7eb3\u7eb4\u7eb5\u7eb6\u7eb7\u7eb8\u7eb9\u7eba\u7ebb\u7ebc\u7ebd\u7ebe\u7ebf\u7ec0\u7ec1\u7ec2\u7ec3\u7ec4\u7ec5\u7ec6\u7ec7\u7ec8\u7ec9\u7eca\u7ecb\u7ecc\u7ecd\u7ece\u7ecf\u7ed0\u7ed1\u7ed2\u7ed3\u7ed4\u7ed5\u7ed6\u7ed7\u7ed8\u7ed9\u7eda\u7edb\u7edc\u7edd\u7ede\u7edf\u7ee0\u7ee1\u7ee2\u7ee3\u7ee4\u7ee5\u7ee6\u7ee7\u7ee8\u7ee9\u7eea\u7eeb\u7eec\u7eed\u7eee\u7eef\u7ef0\u7ef1\u7ef2\u7ef3\u7ef4\u7ef5\u7ef6\u7ef7\u7ef8\u7ef9\u7efa\u7efb\u7efc\u7efd\u7efe\u7eff\u7f00\u7f01\u7f02\u7f03\u7f04\u7f05\u7f06\u7f07\u7f08\u7f09\u7f0a\u7f0b\u7f0c\u7f0d\u7f0e\u7f0f\u7f10\u7f11\u7f12\u7f13\u7f14\u7f15\u7f16\u7f17\u7f18\u7f19\u7f1a\u7f1b\u7f1c\u7f1d\u7f1e\u7f1f\u7f20\u7f21\u7f22\u7f23\u7f24\u7f25\u7f26\u7f27\u7f28\u7f29\u7f2a\u7f2b\u7f2c\u7f2d\u7f2e\u7f2f\u7f30\u7f31\u7f32\u7f33\u7f34\u7f35\u7f36\u7f37\u7f38\u7f39\u7f3a\u7f3b\u7f3c\u7f3d\u7f3e\u7f3f\u7f40\u7f41\u7f42\u7f43\u7f44\u7f45\u7f46\u7f47\u7f48\u7f49\u7f4a\u7f4b\u7f4c\u7f4d\u7f4e\u7f4f\u7f50\u7f51\u7f52\u7f53\u7f54\u7f55\u7f56\u7f57\u7f58\u7f59\u7f5a\u7f5b\u7f5c\u7f5d\u7f5e\u7f5f\u7f60\u7f61\u7f62\u7f63\u7f64\u7f65\u7f66\u7f67\u7f68\u7f69\u7f6a\u7f6b\u7f6c\u7f6d\u7f6e\u7f6f\u7f70\u7f71\u7f72\u7f73\u7f74\u7f75\u7f76\u7f77\u7f78\u7f79\u7f7a\u7f7b\u7f7c\u7f7d\u7f7e\u7f7f\u7f80\u7f81\u7f82\u7f83\u7f84\u7f85\u7f86\u7f87\u7f88\u7f89\u7f8a\u7f8b\u7f8c\u7f8d\u7f8e\u7f8f\u7f90\u7f91\u7f92\u7f93\u7f94\u7f95\u7f96\u7f97\u7f98\u7f99\u7f9a\u7f9b\u7f9c\u7f9d\u7f9e\u7f9f\u7fa0\u7fa1\u7fa2\u7fa3\u7fa4\u7fa5\u7fa6\u7fa7\u7fa8\u7fa9\u7faa\u7fab\u7fac\u7fad\u7fae\u7faf\u7fb0\u7fb1\u7fb2\u7fb3\u7fb4\u7fb5\u7fb6\u7fb7\u7fb8\u7fb9\u7fba\u7fbb\u7fbc\u7fbd\u7fbe\u7fbf\u7fc0\u7fc1\u7fc2\u7fc3\u7fc4\u7fc5\u7fc6\u7fc7\u7fc8\u7fc9\u7fca\u7fcb\u7fcc\u7fcd\u7fce\u7fcf\u7fd0\u7fd1\u7fd2\u7fd3\u7fd4\u7fd5\u7fd6\u7fd7\u7fd8\u7fd9\u7fda\u7fdb\u7fdc\u7fdd\u7fde\u7fdf\u7fe0\u7fe1\u7fe2\u7fe3\u7fe4\u7fe5\u7fe6\u7fe7\u7fe8\u7fe9\u7fea\u7feb\u7fec\u7fed\u7fee\u7fef\u7ff0\u7ff1\u7ff2\u7ff3\u7ff4\u7ff5\u7ff6\u7ff7\u7ff8\u7ff9\u7ffa\u7ffb\u7ffc\u7ffd\u7ffe\u7fff\u8000\u8001\u8002\u8003\u8004\u8005\u8006\u8007\u8008\u8009\u800a\u800b\u800c\u800d\u800e\u800f\u8010\u8011\u8012\u8013\u8014\u8015\u8016\u8017\u8018\u8019\u801a\u801b\u801c\u801d\u801e\u801f\u8020\u8021\u8022\u8023\u8024\u8025\u8026\u8027\u8028\u8029\u802a\u802b\u802c\u802d\u802e\u802f\u8030\u8031\u8032\u8033\u8034\u8035\u8036\u8037\u8038\u8039\u803a\u803b\u803c\u803d\u803e\u803f\u8040\u8041\u8042\u8043\u8044\u8045\u8046\u8047\u8048\u8049\u804a\u804b\u804c\u804d\u804e\u804f\u8050\u8051\u8052\u8053\u8054\u8055\u8056\u8057\u8058\u8059\u805a\u805b\u805c\u805d\u805e\u805f\u8060\u8061\u8062\u8063\u8064\u8065\u8066\u8067\u8068\u8069\u806a\u806b\u806c\u806d\u806e\u806f\u8070\u8071\u8072\u8073\u8074\u8075\u8076\u8077\u8078\u8079\u807a\u807b\u807c\u807d\u807e\u807f\u8080\u8081\u8082\u8083\u8084\u8085\u8086\u8087\u8088\u8089\u808a\u808b\u808c\u808d\u808e\u808f\u8090\u8091\u8092\u8093\u8094\u8095\u8096\u8097\u8098\u8099\u809a\u809b\u809c\u809d\u809e\u809f\u80a0\u80a1\u80a2\u80a3\u80a4\u80a5\u80a6\u80a7\u80a8\u80a9\u80aa\u80ab\u80ac\u80ad\u80ae\u80af\u80b0\u80b1\u80b2\u80b3\u80b4\u80b5\u80b6\u80b7\u80b8\u80b9\u80ba\u80bb\u80bc\u80bd\u80be\u80bf\u80c0\u80c1\u80c2\u80c3\u80c4\u80c5\u80c6\u80c7\u80c8\u80c9\u80ca\u80cb\u80cc\u80cd\u80ce\u80cf\u80d0\u80d1\u80d2\u80d3\u80d4\u80d5\u80d6\u80d7\u80d8\u80d9\u80da\u80db\u80dc\u80dd\u80de\u80df\u80e0\u80e1\u80e2\u80e3\u80e4\u80e5\u80e6\u80e7\u80e8\u80e9\u80ea\u80eb\u80ec\u80ed\u80ee\u80ef\u80f0\u80f1\u80f2\u80f3\u80f4\u80f5\u80f6\u80f7\u80f8\u80f9\u80fa\u80fb\u80fc\u80fd\u80fe\u80ff\u8100\u8101\u8102\u8103\u8104\u8105\u8106\u8107\u8108\u8109\u810a\u810b\u810c\u810d\u810e\u810f\u8110\u8111\u8112\u8113\u8114\u8115\u8116\u8117\u8118\u8119\u811a\u811b\u811c\u811d\u811e\u811f\u8120\u8121\u8122\u8123\u8124\u8125\u8126\u8127\u8128\u8129\u812a\u812b\u812c\u812d\u812e\u812f\u8130\u8131\u8132\u8133\u8134\u8135\u8136\u8137\u8138\u8139\u813a\u813b\u813c\u813d\u813e\u813f\u8140\u8141\u8142\u8143\u8144\u8145\u8146\u8147\u8148\u8149\u814a\u814b\u814c\u814d\u814e\u814f\u8150\u8151\u8152\u8153\u8154\u8155\u8156\u8157\u8158\u8159\u815a\u815b\u815c\u815d\u815e\u815f\u8160\u8161\u8162\u8163\u8164\u8165\u8166\u8167\u8168\u8169\u816a\u816b\u816c\u816d\u816e\u816f\u8170\u8171\u8172\u8173\u8174\u8175\u8176\u8177\u8178\u8179\u817a\u817b\u817c\u817d\u817e\u817f\u8180\u8181\u8182\u8183\u8184\u8185\u8186\u8187\u8188\u8189\u818a\u818b\u818c\u818d\u818e\u818f\u8190\u8191\u8192\u8193\u8194\u8195\u8196\u8197\u8198\u8199\u819a\u819b\u819c\u819d\u819e\u819f\u81a0\u81a1\u81a2\u81a3\u81a4\u81a5\u81a6\u81a7\u81a8\u81a9\u81aa\u81ab\u81ac\u81ad\u81ae\u81af\u81b0\u81b1\u81b2\u81b3\u81b4\u81b5\u81b6\u81b7\u81b8\u81b9\u81ba\u81bb\u81bc\u81bd\u81be\u81bf\u81c0\u81c1\u81c2\u81c3\u81c4\u81c5\u81c6\u81c7\u81c8\u81c9\u81ca\u81cb\u81cc\u81cd\u81ce\u81cf\u81d0\u81d1\u81d2\u81d3\u81d4\u81d5\u81d6\u81d7\u81d8\u81d9\u81da\u81db\u81dc\u81dd\u81de\u81df\u81e0\u81e1\u81e2\u81e3\u81e4\u81e5\u81e6\u81e7\u81e8\u81e9\u81ea\u81eb\u81ec\u81ed\u81ee\u81ef\u81f0\u81f1\u81f2\u81f3\u81f4\u81f5\u81f6\u81f7\u81f8\u81f9\u81fa\u81fb\u81fc\u81fd\u81fe\u81ff\u8200\u8201\u8202\u8203\u8204\u8205\u8206\u8207\u8208\u8209\u820a\u820b\u820c\u820d\u820e\u820f\u8210\u8211\u8212\u8213\u8214\u8215\u8216\u8217\u8218\u8219\u821a\u821b\u821c\u821d\u821e\u821f\u8220\u8221\u8222\u8223\u8224\u8225\u8226\u8227\u8228\u8229\u822a\u822b\u822c\u822d\u822e\u822f\u8230\u8231\u8232\u8233\u8234\u8235\u8236\u8237\u8238\u8239\u823a\u823b\u823c\u823d\u823e\u823f\u8240\u8241\u8242\u8243\u8244\u8245\u8246\u8247\u8248\u8249\u824a\u824b\u824c\u824d\u824e\u824f\u8250\u8251\u8252\u8253\u8254\u8255\u8256\u8257\u8258\u8259\u825a\u825b\u825c\u825d\u825e\u825f\u8260\u8261\u8262\u8263\u8264\u8265\u8266\u8267\u8268\u8269\u826a\u826b\u826c\u826d\u826e\u826f\u8270\u8271\u8272\u8273\u8274\u8275\u8276\u8277\u8278\u8279\u827a\u827b\u827c\u827d\u827e\u827f\u8280\u8281\u8282\u8283\u8284\u8285\u8286\u8287\u8288\u8289\u828a\u828b\u828c\u828d\u828e\u828f\u8290\u8291\u8292\u8293\u8294\u8295\u8296\u8297\u8298\u8299\u829a\u829b\u829c\u829d\u829e\u829f\u82a0\u82a1\u82a2\u82a3\u82a4\u82a5\u82a6\u82a7\u82a8\u82a9\u82aa\u82ab\u82ac\u82ad\u82ae\u82af\u82b0\u82b1\u82b2\u82b3\u82b4\u82b5\u82b6\u82b7\u82b8\u82b9\u82ba\u82bb\u82bc\u82bd\u82be\u82bf\u82c0\u82c1\u82c2\u82c3\u82c4\u82c5\u82c6\u82c7\u82c8\u82c9\u82ca\u82cb\u82cc\u82cd\u82ce\u82cf\u82d0\u82d1\u82d2\u82d3\u82d4\u82d5\u82d6\u82d7\u82d8\u82d9\u82da\u82db\u82dc\u82dd\u82de\u82df\u82e0\u82e1\u82e2\u82e3\u82e4\u82e5\u82e6\u82e7\u82e8\u82e9\u82ea\u82eb\u82ec\u82ed\u82ee\u82ef\u82f0\u82f1\u82f2\u82f3\u82f4\u82f5\u82f6\u82f7\u82f8\u82f9\u82fa\u82fb\u82fc\u82fd\u82fe\u82ff\u8300\u8301\u8302\u8303\u8304\u8305\u8306\u8307\u8308\u8309\u830a\u830b\u830c\u830d\u830e\u830f\u8310\u8311\u8312\u8313\u8314\u8315\u8316\u8317\u8318\u8319\u831a\u831b\u831c\u831d\u831e\u831f\u8320\u8321\u8322\u8323\u8324\u8325\u8326\u8327\u8328\u8329\u832a\u832b\u832c\u832d\u832e\u832f\u8330\u8331\u8332\u8333\u8334\u8335\u8336\u8337\u8338\u8339\u833a\u833b\u833c\u833d\u833e\u833f\u8340\u8341\u8342\u8343\u8344\u8345\u8346\u8347\u8348\u8349\u834a\u834b\u834c\u834d\u834e\u834f\u8350\u8351\u8352\u8353\u8354\u8355\u8356\u8357\u8358\u8359\u835a\u835b\u835c\u835d\u835e\u835f\u8360\u8361\u8362\u8363\u8364\u8365\u8366\u8367\u8368\u8369\u836a\u836b\u836c\u836d\u836e\u836f\u8370\u8371\u8372\u8373\u8374\u8375\u8376\u8377\u8378\u8379\u837a\u837b\u837c\u837d\u837e\u837f\u8380\u8381\u8382\u8383\u8384\u8385\u8386\u8387\u8388\u8389\u838a\u838b\u838c\u838d\u838e\u838f\u8390\u8391\u8392\u8393\u8394\u8395\u8396\u8397\u8398\u8399\u839a\u839b\u839c\u839d\u839e\u839f\u83a0\u83a1\u83a2\u83a3\u83a4\u83a5\u83a6\u83a7\u83a8\u83a9\u83aa\u83ab\u83ac\u83ad\u83ae\u83af\u83b0\u83b1\u83b2\u83b3\u83b4\u83b5\u83b6\u83b7\u83b8\u83b9\u83ba\u83bb\u83bc\u83bd\u83be\u83bf\u83c0\u83c1\u83c2\u83c3\u83c4\u83c5\u83c6\u83c7\u83c8\u83c9\u83ca\u83cb\u83cc\u83cd\u83ce\u83cf\u83d0\u83d1\u83d2\u83d3\u83d4\u83d5\u83d6\u83d7\u83d8\u83d9\u83da\u83db\u83dc\u83dd\u83de\u83df\u83e0\u83e1\u83e2\u83e3\u83e4\u83e5\u83e6\u83e7\u83e8\u83e9\u83ea\u83eb\u83ec\u83ed\u83ee\u83ef\u83f0\u83f1\u83f2\u83f3\u83f4\u83f5\u83f6\u83f7\u83f8\u83f9\u83fa\u83fb\u83fc\u83fd\u83fe\u83ff\u8400\u8401\u8402\u8403\u8404\u8405\u8406\u8407\u8408\u8409\u840a\u840b\u840c\u840d\u840e\u840f\u8410\u8411\u8412\u8413\u8414\u8415\u8416\u8417\u8418\u8419\u841a\u841b\u841c\u841d\u841e\u841f\u8420\u8421\u8422\u8423\u8424\u8425\u8426\u8427\u8428\u8429\u842a\u842b\u842c\u842d\u842e\u842f\u8430\u8431\u8432\u8433\u8434\u8435\u8436\u8437\u8438\u8439\u843a\u843b\u843c\u843d\u843e\u843f\u8440\u8441\u8442\u8443\u8444\u8445\u8446\u8447\u8448\u8449\u844a\u844b\u844c\u844d\u844e\u844f\u8450\u8451\u8452\u8453\u8454\u8455\u8456\u8457\u8458\u8459\u845a\u845b\u845c\u845d\u845e\u845f\u8460\u8461\u8462\u8463\u8464\u8465\u8466\u8467\u8468\u8469\u846a\u846b\u846c\u846d\u846e\u846f\u8470\u8471\u8472\u8473\u8474\u8475\u8476\u8477\u8478\u8479\u847a\u847b\u847c\u847d\u847e\u847f\u8480\u8481\u8482\u8483\u8484\u8485\u8486\u8487\u8488\u8489\u848a\u848b\u848c\u848d\u848e\u848f\u8490\u8491\u8492\u8493\u8494\u8495\u8496\u8497\u8498\u8499\u849a\u849b\u849c\u849d\u849e\u849f\u84a0\u84a1\u84a2\u84a3\u84a4\u84a5\u84a6\u84a7\u84a8\u84a9\u84aa\u84ab\u84ac\u84ad\u84ae\u84af\u84b0\u84b1\u84b2\u84b3\u84b4\u84b5\u84b6\u84b7\u84b8\u84b9\u84ba\u84bb\u84bc\u84bd\u84be\u84bf\u84c0\u84c1\u84c2\u84c3\u84c4\u84c5\u84c6\u84c7\u84c8\u84c9\u84ca\u84cb\u84cc\u84cd\u84ce\u84cf\u84d0\u84d1\u84d2\u84d3\u84d4\u84d5\u84d6\u84d7\u84d8\u84d9\u84da\u84db\u84dc\u84dd\u84de\u84df\u84e0\u84e1\u84e2\u84e3\u84e4\u84e5\u84e6\u84e7\u84e8\u84e9\u84ea\u84eb\u84ec\u84ed\u84ee\u84ef\u84f0\u84f1\u84f2\u84f3\u84f4\u84f5\u84f6\u84f7\u84f8\u84f9\u84fa\u84fb\u84fc\u84fd\u84fe\u84ff\u8500\u8501\u8502\u8503\u8504\u8505\u8506\u8507\u8508\u8509\u850a\u850b\u850c\u850d\u850e\u850f\u8510\u8511\u8512\u8513\u8514\u8515\u8516\u8517\u8518\u8519\u851a\u851b\u851c\u851d\u851e\u851f\u8520\u8521\u8522\u8523\u8524\u8525\u8526\u8527\u8528\u8529\u852a\u852b\u852c\u852d\u852e\u852f\u8530\u8531\u8532\u8533\u8534\u8535\u8536\u8537\u8538\u8539\u853a\u853b\u853c\u853d\u853e\u853f\u8540\u8541\u8542\u8543\u8544\u8545\u8546\u8547\u8548\u8549\u854a\u854b\u854c\u854d\u854e\u854f\u8550\u8551\u8552\u8553\u8554\u8555\u8556\u8557\u8558\u8559\u855a\u855b\u855c\u855d\u855e\u855f\u8560\u8561\u8562\u8563\u8564\u8565\u8566\u8567\u8568\u8569\u856a\u856b\u856c\u856d\u856e\u856f\u8570\u8571\u8572\u8573\u8574\u8575\u8576\u8577\u8578\u8579\u857a\u857b\u857c\u857d\u857e\u857f\u8580\u8581\u8582\u8583\u8584\u8585\u8586\u8587\u8588\u8589\u858a\u858b\u858c\u858d\u858e\u858f\u8590\u8591\u8592\u8593\u8594\u8595\u8596\u8597\u8598\u8599\u859a\u859b\u859c\u859d\u859e\u859f\u85a0\u85a1\u85a2\u85a3\u85a4\u85a5\u85a6\u85a7\u85a8\u85a9\u85aa\u85ab\u85ac\u85ad\u85ae\u85af\u85b0\u85b1\u85b2\u85b3\u85b4\u85b5\u85b6\u85b7\u85b8\u85b9\u85ba\u85bb\u85bc\u85bd\u85be\u85bf\u85c0\u85c1\u85c2\u85c3\u85c4\u85c5\u85c6\u85c7\u85c8\u85c9\u85ca\u85cb\u85cc\u85cd\u85ce\u85cf\u85d0\u85d1\u85d2\u85d3\u85d4\u85d5\u85d6\u85d7\u85d8\u85d9\u85da\u85db\u85dc\u85dd\u85de\u85df\u85e0\u85e1\u85e2\u85e3\u85e4\u85e5\u85e6\u85e7\u85e8\u85e9\u85ea\u85eb\u85ec\u85ed\u85ee\u85ef\u85f0\u85f1\u85f2\u85f3\u85f4\u85f5\u85f6\u85f7\u85f8\u85f9\u85fa\u85fb\u85fc\u85fd\u85fe\u85ff\u8600\u8601\u8602\u8603\u8604\u8605\u8606\u8607\u8608\u8609\u860a\u860b\u860c\u860d\u860e\u860f\u8610\u8611\u8612\u8613\u8614\u8615\u8616\u8617\u8618\u8619\u861a\u861b\u861c\u861d\u861e\u861f\u8620\u8621\u8622\u8623\u8624\u8625\u8626\u8627\u8628\u8629\u862a\u862b\u862c\u862d\u862e\u862f\u8630\u8631\u8632\u8633\u8634\u8635\u8636\u8637\u8638\u8639\u863a\u863b\u863c\u863d\u863e\u863f\u8640\u8641\u8642\u8643\u8644\u8645\u8646\u8647\u8648\u8649\u864a\u864b\u864c\u864d\u864e\u864f\u8650\u8651\u8652\u8653\u8654\u8655\u8656\u8657\u8658\u8659\u865a\u865b\u865c\u865d\u865e\u865f\u8660\u8661\u8662\u8663\u8664\u8665\u8666\u8667\u8668\u8669\u866a\u866b\u866c\u866d\u866e\u866f\u8670\u8671\u8672\u8673\u8674\u8675\u8676\u8677\u8678\u8679\u867a\u867b\u867c\u867d\u867e\u867f\u8680\u8681\u8682\u8683\u8684\u8685\u8686\u8687\u8688\u8689\u868a\u868b\u868c\u868d\u868e\u868f\u8690\u8691\u8692\u8693\u8694\u8695\u8696\u8697\u8698\u8699\u869a\u869b\u869c\u869d\u869e\u869f\u86a0\u86a1\u86a2\u86a3\u86a4\u86a5\u86a6\u86a7\u86a8\u86a9\u86aa\u86ab\u86ac\u86ad\u86ae\u86af\u86b0\u86b1\u86b2\u86b3\u86b4\u86b5\u86b6\u86b7\u86b8\u86b9\u86ba\u86bb\u86bc\u86bd\u86be\u86bf\u86c0\u86c1\u86c2\u86c3\u86c4\u86c5\u86c6\u86c7\u86c8\u86c9\u86ca\u86cb\u86cc\u86cd\u86ce\u86cf\u86d0\u86d1\u86d2\u86d3\u86d4\u86d5\u86d6\u86d7\u86d8\u86d9\u86da\u86db\u86dc\u86dd\u86de\u86df\u86e0\u86e1\u86e2\u86e3\u86e4\u86e5\u86e6\u86e7\u86e8\u86e9\u86ea\u86eb\u86ec\u86ed\u86ee\u86ef\u86f0\u86f1\u86f2\u86f3\u86f4\u86f5\u86f6\u86f7\u86f8\u86f9\u86fa\u86fb\u86fc\u86fd\u86fe\u86ff\u8700\u8701\u8702\u8703\u8704\u8705\u8706\u8707\u8708\u8709\u870a\u870b\u870c\u870d\u870e\u870f\u8710\u8711\u8712\u8713\u8714\u8715\u8716\u8717\u8718\u8719\u871a\u871b\u871c\u871d\u871e\u871f\u8720\u8721\u8722\u8723\u8724\u8725\u8726\u8727\u8728\u8729\u872a\u872b\u872c\u872d\u872e\u872f\u8730\u8731\u8732\u8733\u8734\u8735\u8736\u8737\u8738\u8739\u873a\u873b\u873c\u873d\u873e\u873f\u8740\u8741\u8742\u8743\u8744\u8745\u8746\u8747\u8748\u8749\u874a\u874b\u874c\u874d\u874e\u874f\u8750\u8751\u8752\u8753\u8754\u8755\u8756\u8757\u8758\u8759\u875a\u875b\u875c\u875d\u875e\u875f\u8760\u8761\u8762\u8763\u8764\u8765\u8766\u8767\u8768\u8769\u876a\u876b\u876c\u876d\u876e\u876f\u8770\u8771\u8772\u8773\u8774\u8775\u8776\u8777\u8778\u8779\u877a\u877b\u877c\u877d\u877e\u877f\u8780\u8781\u8782\u8783\u8784\u8785\u8786\u8787\u8788\u8789\u878a\u878b\u878c\u878d\u878e\u878f\u8790\u8791\u8792\u8793\u8794\u8795\u8796\u8797\u8798\u8799\u879a\u879b\u879c\u879d\u879e\u879f\u87a0\u87a1\u87a2\u87a3\u87a4\u87a5\u87a6\u87a7\u87a8\u87a9\u87aa\u87ab\u87ac\u87ad\u87ae\u87af\u87b0\u87b1\u87b2\u87b3\u87b4\u87b5\u87b6\u87b7\u87b8\u87b9\u87ba\u87bb\u87bc\u87bd\u87be\u87bf\u87c0\u87c1\u87c2\u87c3\u87c4\u87c5\u87c6\u87c7\u87c8\u87c9\u87ca\u87cb\u87cc\u87cd\u87ce\u87cf\u87d0\u87d1\u87d2\u87d3\u87d4\u87d5\u87d6\u87d7\u87d8\u87d9\u87da\u87db\u87dc\u87dd\u87de\u87df\u87e0\u87e1\u87e2\u87e3\u87e4\u87e5\u87e6\u87e7\u87e8\u87e9\u87ea\u87eb\u87ec\u87ed\u87ee\u87ef\u87f0\u87f1\u87f2\u87f3\u87f4\u87f5\u87f6\u87f7\u87f8\u87f9\u87fa\u87fb\u87fc\u87fd\u87fe\u87ff\u8800\u8801\u8802\u8803\u8804\u8805\u8806\u8807\u8808\u8809\u880a\u880b\u880c\u880d\u880e\u880f\u8810\u8811\u8812\u8813\u8814\u8815\u8816\u8817\u8818\u8819\u881a\u881b\u881c\u881d\u881e\u881f\u8820\u8821\u8822\u8823\u8824\u8825\u8826\u8827\u8828\u8829\u882a\u882b\u882c\u882d\u882e\u882f\u8830\u8831\u8832\u8833\u8834\u8835\u8836\u8837\u8838\u8839\u883a\u883b\u883c\u883d\u883e\u883f\u8840\u8841\u8842\u8843\u8844\u8845\u8846\u8847\u8848\u8849\u884a\u884b\u884c\u884d\u884e\u884f\u8850\u8851\u8852\u8853\u8854\u8855\u8856\u8857\u8858\u8859\u885a\u885b\u885c\u885d\u885e\u885f\u8860\u8861\u8862\u8863\u8864\u8865\u8866\u8867\u8868\u8869\u886a\u886b\u886c\u886d\u886e\u886f\u8870\u8871\u8872\u8873\u8874\u8875\u8876\u8877\u8878\u8879\u887a\u887b\u887c\u887d\u887e\u887f\u8880\u8881\u8882\u8883\u8884\u8885\u8886\u8887\u8888\u8889\u888a\u888b\u888c\u888d\u888e\u888f\u8890\u8891\u8892\u8893\u8894\u8895\u8896\u8897\u8898\u8899\u889a\u889b\u889c\u889d\u889e\u889f\u88a0\u88a1\u88a2\u88a3\u88a4\u88a5\u88a6\u88a7\u88a8\u88a9\u88aa\u88ab\u88ac\u88ad\u88ae\u88af\u88b0\u88b1\u88b2\u88b3\u88b4\u88b5\u88b6\u88b7\u88b8\u88b9\u88ba\u88bb\u88bc\u88bd\u88be\u88bf\u88c0\u88c1\u88c2\u88c3\u88c4\u88c5\u88c6\u88c7\u88c8\u88c9\u88ca\u88cb\u88cc\u88cd\u88ce\u88cf\u88d0\u88d1\u88d2\u88d3\u88d4\u88d5\u88d6\u88d7\u88d8\u88d9\u88da\u88db\u88dc\u88dd\u88de\u88df\u88e0\u88e1\u88e2\u88e3\u88e4\u88e5\u88e6\u88e7\u88e8\u88e9\u88ea\u88eb\u88ec\u88ed\u88ee\u88ef\u88f0\u88f1\u88f2\u88f3\u88f4\u88f5\u88f6\u88f7\u88f8\u88f9\u88fa\u88fb\u88fc\u88fd\u88fe\u88ff\u8900\u8901\u8902\u8903\u8904\u8905\u8906\u8907\u8908\u8909\u890a\u890b\u890c\u890d\u890e\u890f\u8910\u8911\u8912\u8913\u8914\u8915\u8916\u8917\u8918\u8919\u891a\u891b\u891c\u891d\u891e\u891f\u8920\u8921\u8922\u8923\u8924\u8925\u8926\u8927\u8928\u8929\u892a\u892b\u892c\u892d\u892e\u892f\u8930\u8931\u8932\u8933\u8934\u8935\u8936\u8937\u8938\u8939\u893a\u893b\u893c\u893d\u893e\u893f\u8940\u8941\u8942\u8943\u8944\u8945\u8946\u8947\u8948\u8949\u894a\u894b\u894c\u894d\u894e\u894f\u8950\u8951\u8952\u8953\u8954\u8955\u8956\u8957\u8958\u8959\u895a\u895b\u895c\u895d\u895e\u895f\u8960\u8961\u8962\u8963\u8964\u8965\u8966\u8967\u8968\u8969\u896a\u896b\u896c\u896d\u896e\u896f\u8970\u8971\u8972\u8973\u8974\u8975\u8976\u8977\u8978\u8979\u897a\u897b\u897c\u897d\u897e\u897f\u8980\u8981\u8982\u8983\u8984\u8985\u8986\u8987\u8988\u8989\u898a\u898b\u898c\u898d\u898e\u898f\u8990\u8991\u8992\u8993\u8994\u8995\u8996\u8997\u8998\u8999\u899a\u899b\u899c\u899d\u899e\u899f\u89a0\u89a1\u89a2\u89a3\u89a4\u89a5\u89a6\u89a7\u89a8\u89a9\u89aa\u89ab\u89ac\u89ad\u89ae\u89af\u89b0\u89b1\u89b2\u89b3\u89b4\u89b5\u89b6\u89b7\u89b8\u89b9\u89ba\u89bb\u89bc\u89bd\u89be\u89bf\u89c0\u89c1\u89c2\u89c3\u89c4\u89c5\u89c6\u89c7\u89c8\u89c9\u89ca\u89cb\u89cc\u89cd\u89ce\u89cf\u89d0\u89d1\u89d2\u89d3\u89d4\u89d5\u89d6\u89d7\u89d8\u89d9\u89da\u89db\u89dc\u89dd\u89de\u89df\u89e0\u89e1\u89e2\u89e3\u89e4\u89e5\u89e6\u89e7\u89e8\u89e9\u89ea\u89eb\u89ec\u89ed\u89ee\u89ef\u89f0\u89f1\u89f2\u89f3\u89f4\u89f5\u89f6\u89f7\u89f8\u89f9\u89fa\u89fb\u89fc\u89fd\u89fe\u89ff\u8a00\u8a01\u8a02\u8a03\u8a04\u8a05\u8a06\u8a07\u8a08\u8a09\u8a0a\u8a0b\u8a0c\u8a0d\u8a0e\u8a0f\u8a10\u8a11\u8a12\u8a13\u8a14\u8a15\u8a16\u8a17\u8a18\u8a19\u8a1a\u8a1b\u8a1c\u8a1d\u8a1e\u8a1f\u8a20\u8a21\u8a22\u8a23\u8a24\u8a25\u8a26\u8a27\u8a28\u8a29\u8a2a\u8a2b\u8a2c\u8a2d\u8a2e\u8a2f\u8a30\u8a31\u8a32\u8a33\u8a34\u8a35\u8a36\u8a37\u8a38\u8a39\u8a3a\u8a3b\u8a3c\u8a3d\u8a3e\u8a3f\u8a40\u8a41\u8a42\u8a43\u8a44\u8a45\u8a46\u8a47\u8a48\u8a49\u8a4a\u8a4b\u8a4c\u8a4d\u8a4e\u8a4f\u8a50\u8a51\u8a52\u8a53\u8a54\u8a55\u8a56\u8a57\u8a58\u8a59\u8a5a\u8a5b\u8a5c\u8a5d\u8a5e\u8a5f\u8a60\u8a61\u8a62\u8a63\u8a64\u8a65\u8a66\u8a67\u8a68\u8a69\u8a6a\u8a6b\u8a6c\u8a6d\u8a6e\u8a6f\u8a70\u8a71\u8a72\u8a73\u8a74\u8a75\u8a76\u8a77\u8a78\u8a79\u8a7a\u8a7b\u8a7c\u8a7d\u8a7e\u8a7f\u8a80\u8a81\u8a82\u8a83\u8a84\u8a85\u8a86\u8a87\u8a88\u8a89\u8a8a\u8a8b\u8a8c\u8a8d\u8a8e\u8a8f\u8a90\u8a91\u8a92\u8a93\u8a94\u8a95\u8a96\u8a97\u8a98\u8a99\u8a9a\u8a9b\u8a9c\u8a9d\u8a9e\u8a9f\u8aa0\u8aa1\u8aa2\u8aa3\u8aa4\u8aa5\u8aa6\u8aa7\u8aa8\u8aa9\u8aaa\u8aab\u8aac\u8aad\u8aae\u8aaf\u8ab0\u8ab1\u8ab2\u8ab3\u8ab4\u8ab5\u8ab6\u8ab7\u8ab8\u8ab9\u8aba\u8abb\u8abc\u8abd\u8abe\u8abf\u8ac0\u8ac1\u8ac2\u8ac3\u8ac4\u8ac5\u8ac6\u8ac7\u8ac8\u8ac9\u8aca\u8acb\u8acc\u8acd\u8ace\u8acf\u8ad0\u8ad1\u8ad2\u8ad3\u8ad4\u8ad5\u8ad6\u8ad7\u8ad8\u8ad9\u8ada\u8adb\u8adc\u8add\u8ade\u8adf\u8ae0\u8ae1\u8ae2\u8ae3\u8ae4\u8ae5\u8ae6\u8ae7\u8ae8\u8ae9\u8aea\u8aeb\u8aec\u8aed\u8aee\u8aef\u8af0\u8af1\u8af2\u8af3\u8af4\u8af5\u8af6\u8af7\u8af8\u8af9\u8afa\u8afb\u8afc\u8afd\u8afe\u8aff\u8b00\u8b01\u8b02\u8b03\u8b04\u8b05\u8b06\u8b07\u8b08\u8b09\u8b0a\u8b0b\u8b0c\u8b0d\u8b0e\u8b0f\u8b10\u8b11\u8b12\u8b13\u8b14\u8b15\u8b16\u8b17\u8b18\u8b19\u8b1a\u8b1b\u8b1c\u8b1d\u8b1e\u8b1f\u8b20\u8b21\u8b22\u8b23\u8b24\u8b25\u8b26\u8b27\u8b28\u8b29\u8b2a\u8b2b\u8b2c\u8b2d\u8b2e\u8b2f\u8b30\u8b31\u8b32\u8b33\u8b34\u8b35\u8b36\u8b37\u8b38\u8b39\u8b3a\u8b3b\u8b3c\u8b3d\u8b3e\u8b3f\u8b40\u8b41\u8b42\u8b43\u8b44\u8b45\u8b46\u8b47\u8b48\u8b49\u8b4a\u8b4b\u8b4c\u8b4d\u8b4e\u8b4f\u8b50\u8b51\u8b52\u8b53\u8b54\u8b55\u8b56\u8b57\u8b58\u8b59\u8b5a\u8b5b\u8b5c\u8b5d\u8b5e\u8b5f\u8b60\u8b61\u8b62\u8b63\u8b64\u8b65\u8b66\u8b67\u8b68\u8b69\u8b6a\u8b6b\u8b6c\u8b6d\u8b6e\u8b6f\u8b70\u8b71\u8b72\u8b73\u8b74\u8b75\u8b76\u8b77\u8b78\u8b79\u8b7a\u8b7b\u8b7c\u8b7d\u8b7e\u8b7f\u8b80\u8b81\u8b82\u8b83\u8b84\u8b85\u8b86\u8b87\u8b88\u8b89\u8b8a\u8b8b\u8b8c\u8b8d\u8b8e\u8b8f\u8b90\u8b91\u8b92\u8b93\u8b94\u8b95\u8b96\u8b97\u8b98\u8b99\u8b9a\u8b9b\u8b9c\u8b9d\u8b9e\u8b9f\u8ba0\u8ba1\u8ba2\u8ba3\u8ba4\u8ba5\u8ba6\u8ba7\u8ba8\u8ba9\u8baa\u8bab\u8bac\u8bad\u8bae\u8baf\u8bb0\u8bb1\u8bb2\u8bb3\u8bb4\u8bb5\u8bb6\u8bb7\u8bb8\u8bb9\u8bba\u8bbb\u8bbc\u8bbd\u8bbe\u8bbf\u8bc0\u8bc1\u8bc2\u8bc3\u8bc4\u8bc5\u8bc6\u8bc7\u8bc8\u8bc9\u8bca\u8bcb\u8bcc\u8bcd\u8bce\u8bcf\u8bd0\u8bd1\u8bd2\u8bd3\u8bd4\u8bd5\u8bd6\u8bd7\u8bd8\u8bd9\u8bda\u8bdb\u8bdc\u8bdd\u8bde\u8bdf\u8be0\u8be1\u8be2\u8be3\u8be4\u8be5\u8be6\u8be7\u8be8\u8be9\u8bea\u8beb\u8bec\u8bed\u8bee\u8bef\u8bf0\u8bf1\u8bf2\u8bf3\u8bf4\u8bf5\u8bf6\u8bf7\u8bf8\u8bf9\u8bfa\u8bfb\u8bfc\u8bfd\u8bfe\u8bff\u8c00\u8c01\u8c02\u8c03\u8c04\u8c05\u8c06\u8c07\u8c08\u8c09\u8c0a\u8c0b\u8c0c\u8c0d\u8c0e\u8c0f\u8c10\u8c11\u8c12\u8c13\u8c14\u8c15\u8c16\u8c17\u8c18\u8c19\u8c1a\u8c1b\u8c1c\u8c1d\u8c1e\u8c1f\u8c20\u8c21\u8c22\u8c23\u8c24\u8c25\u8c26\u8c27\u8c28\u8c29\u8c2a\u8c2b\u8c2c\u8c2d\u8c2e\u8c2f\u8c30\u8c31\u8c32\u8c33\u8c34\u8c35\u8c36\u8c37\u8c38\u8c39\u8c3a\u8c3b\u8c3c\u8c3d\u8c3e\u8c3f\u8c40\u8c41\u8c42\u8c43\u8c44\u8c45\u8c46\u8c47\u8c48\u8c49\u8c4a\u8c4b\u8c4c\u8c4d\u8c4e\u8c4f\u8c50\u8c51\u8c52\u8c53\u8c54\u8c55\u8c56\u8c57\u8c58\u8c59\u8c5a\u8c5b\u8c5c\u8c5d\u8c5e\u8c5f\u8c60\u8c61\u8c62\u8c63\u8c64\u8c65\u8c66\u8c67\u8c68\u8c69\u8c6a\u8c6b\u8c6c\u8c6d\u8c6e\u8c6f\u8c70\u8c71\u8c72\u8c73\u8c74\u8c75\u8c76\u8c77\u8c78\u8c79\u8c7a\u8c7b\u8c7c\u8c7d\u8c7e\u8c7f\u8c80\u8c81\u8c82\u8c83\u8c84\u8c85\u8c86\u8c87\u8c88\u8c89\u8c8a\u8c8b\u8c8c\u8c8d\u8c8e\u8c8f\u8c90\u8c91\u8c92\u8c93\u8c94\u8c95\u8c96\u8c97\u8c98\u8c99\u8c9a\u8c9b\u8c9c\u8c9d\u8c9e\u8c9f\u8ca0\u8ca1\u8ca2\u8ca3\u8ca4\u8ca5\u8ca6\u8ca7\u8ca8\u8ca9\u8caa\u8cab\u8cac\u8cad\u8cae\u8caf\u8cb0\u8cb1\u8cb2\u8cb3\u8cb4\u8cb5\u8cb6\u8cb7\u8cb8\u8cb9\u8cba\u8cbb\u8cbc\u8cbd\u8cbe\u8cbf\u8cc0\u8cc1\u8cc2\u8cc3\u8cc4\u8cc5\u8cc6\u8cc7\u8cc8\u8cc9\u8cca\u8ccb\u8ccc\u8ccd\u8cce\u8ccf\u8cd0\u8cd1\u8cd2\u8cd3\u8cd4\u8cd5\u8cd6\u8cd7\u8cd8\u8cd9\u8cda\u8cdb\u8cdc\u8cdd\u8cde\u8cdf\u8ce0\u8ce1\u8ce2\u8ce3\u8ce4\u8ce5\u8ce6\u8ce7\u8ce8\u8ce9\u8cea\u8ceb\u8cec\u8ced\u8cee\u8cef\u8cf0\u8cf1\u8cf2\u8cf3\u8cf4\u8cf5\u8cf6\u8cf7\u8cf8\u8cf9\u8cfa\u8cfb\u8cfc\u8cfd\u8cfe\u8cff\u8d00\u8d01\u8d02\u8d03\u8d04\u8d05\u8d06\u8d07\u8d08\u8d09\u8d0a\u8d0b\u8d0c\u8d0d\u8d0e\u8d0f\u8d10\u8d11\u8d12\u8d13\u8d14\u8d15\u8d16\u8d17\u8d18\u8d19\u8d1a\u8d1b\u8d1c\u8d1d\u8d1e\u8d1f\u8d20\u8d21\u8d22\u8d23\u8d24\u8d25\u8d26\u8d27\u8d28\u8d29\u8d2a\u8d2b\u8d2c\u8d2d\u8d2e\u8d2f\u8d30\u8d31\u8d32\u8d33\u8d34\u8d35\u8d36\u8d37\u8d38\u8d39\u8d3a\u8d3b\u8d3c\u8d3d\u8d3e\u8d3f\u8d40\u8d41\u8d42\u8d43\u8d44\u8d45\u8d46\u8d47\u8d48\u8d49\u8d4a\u8d4b\u8d4c\u8d4d\u8d4e\u8d4f\u8d50\u8d51\u8d52\u8d53\u8d54\u8d55\u8d56\u8d57\u8d58\u8d59\u8d5a\u8d5b\u8d5c\u8d5d\u8d5e\u8d5f\u8d60\u8d61\u8d62\u8d63\u8d64\u8d65\u8d66\u8d67\u8d68\u8d69\u8d6a\u8d6b\u8d6c\u8d6d\u8d6e\u8d6f\u8d70\u8d71\u8d72\u8d73\u8d74\u8d75\u8d76\u8d77\u8d78\u8d79\u8d7a\u8d7b\u8d7c\u8d7d\u8d7e\u8d7f\u8d80\u8d81\u8d82\u8d83\u8d84\u8d85\u8d86\u8d87\u8d88\u8d89\u8d8a\u8d8b\u8d8c\u8d8d\u8d8e\u8d8f\u8d90\u8d91\u8d92\u8d93\u8d94\u8d95\u8d96\u8d97\u8d98\u8d99\u8d9a\u8d9b\u8d9c\u8d9d\u8d9e\u8d9f\u8da0\u8da1\u8da2\u8da3\u8da4\u8da5\u8da6\u8da7\u8da8\u8da9\u8daa\u8dab\u8dac\u8dad\u8dae\u8daf\u8db0\u8db1\u8db2\u8db3\u8db4\u8db5\u8db6\u8db7\u8db8\u8db9\u8dba\u8dbb\u8dbc\u8dbd\u8dbe\u8dbf\u8dc0\u8dc1\u8dc2\u8dc3\u8dc4\u8dc5\u8dc6\u8dc7\u8dc8\u8dc9\u8dca\u8dcb\u8dcc\u8dcd\u8dce\u8dcf\u8dd0\u8dd1\u8dd2\u8dd3\u8dd4\u8dd5\u8dd6\u8dd7\u8dd8\u8dd9\u8dda\u8ddb\u8ddc\u8ddd\u8dde\u8ddf\u8de0\u8de1\u8de2\u8de3\u8de4\u8de5\u8de6\u8de7\u8de8\u8de9\u8dea\u8deb\u8dec\u8ded\u8dee\u8def\u8df0\u8df1\u8df2\u8df3\u8df4\u8df5\u8df6\u8df7\u8df8\u8df9\u8dfa\u8dfb\u8dfc\u8dfd\u8dfe\u8dff\u8e00\u8e01\u8e02\u8e03\u8e04\u8e05\u8e06\u8e07\u8e08\u8e09\u8e0a\u8e0b\u8e0c\u8e0d\u8e0e\u8e0f\u8e10\u8e11\u8e12\u8e13\u8e14\u8e15\u8e16\u8e17\u8e18\u8e19\u8e1a\u8e1b\u8e1c\u8e1d\u8e1e\u8e1f\u8e20\u8e21\u8e22\u8e23\u8e24\u8e25\u8e26\u8e27\u8e28\u8e29\u8e2a\u8e2b\u8e2c\u8e2d\u8e2e\u8e2f\u8e30\u8e31\u8e32\u8e33\u8e34\u8e35\u8e36\u8e37\u8e38\u8e39\u8e3a\u8e3b\u8e3c\u8e3d\u8e3e\u8e3f\u8e40\u8e41\u8e42\u8e43\u8e44\u8e45\u8e46\u8e47\u8e48\u8e49\u8e4a\u8e4b\u8e4c\u8e4d\u8e4e\u8e4f\u8e50\u8e51\u8e52\u8e53\u8e54\u8e55\u8e56\u8e57\u8e58\u8e59\u8e5a\u8e5b\u8e5c\u8e5d\u8e5e\u8e5f\u8e60\u8e61\u8e62\u8e63\u8e64\u8e65\u8e66\u8e67\u8e68\u8e69\u8e6a\u8e6b\u8e6c\u8e6d\u8e6e\u8e6f\u8e70\u8e71\u8e72\u8e73\u8e74\u8e75\u8e76\u8e77\u8e78\u8e79\u8e7a\u8e7b\u8e7c\u8e7d\u8e7e\u8e7f\u8e80\u8e81\u8e82\u8e83\u8e84\u8e85\u8e86\u8e87\u8e88\u8e89\u8e8a\u8e8b\u8e8c\u8e8d\u8e8e\u8e8f\u8e90\u8e91\u8e92\u8e93\u8e94\u8e95\u8e96\u8e97\u8e98\u8e99\u8e9a\u8e9b\u8e9c\u8e9d\u8e9e\u8e9f\u8ea0\u8ea1\u8ea2\u8ea3\u8ea4\u8ea5\u8ea6\u8ea7\u8ea8\u8ea9\u8eaa\u8eab\u8eac\u8ead\u8eae\u8eaf\u8eb0\u8eb1\u8eb2\u8eb3\u8eb4\u8eb5\u8eb6\u8eb7\u8eb8\u8eb9\u8eba\u8ebb\u8ebc\u8ebd\u8ebe\u8ebf\u8ec0\u8ec1\u8ec2\u8ec3\u8ec4\u8ec5\u8ec6\u8ec7\u8ec8\u8ec9\u8eca\u8ecb\u8ecc\u8ecd\u8ece\u8ecf\u8ed0\u8ed1\u8ed2\u8ed3\u8ed4\u8ed5\u8ed6\u8ed7\u8ed8\u8ed9\u8eda\u8edb\u8edc\u8edd\u8ede\u8edf\u8ee0\u8ee1\u8ee2\u8ee3\u8ee4\u8ee5\u8ee6\u8ee7\u8ee8\u8ee9\u8eea\u8eeb\u8eec\u8eed\u8eee\u8eef\u8ef0\u8ef1\u8ef2\u8ef3\u8ef4\u8ef5\u8ef6\u8ef7\u8ef8\u8ef9\u8efa\u8efb\u8efc\u8efd\u8efe\u8eff\u8f00\u8f01\u8f02\u8f03\u8f04\u8f05\u8f06\u8f07\u8f08\u8f09\u8f0a\u8f0b\u8f0c\u8f0d\u8f0e\u8f0f\u8f10\u8f11\u8f12\u8f13\u8f14\u8f15\u8f16\u8f17\u8f18\u8f19\u8f1a\u8f1b\u8f1c\u8f1d\u8f1e\u8f1f\u8f20\u8f21\u8f22\u8f23\u8f24\u8f25\u8f26\u8f27\u8f28\u8f29\u8f2a\u8f2b\u8f2c\u8f2d\u8f2e\u8f2f\u8f30\u8f31\u8f32\u8f33\u8f34\u8f35\u8f36\u8f37\u8f38\u8f39\u8f3a\u8f3b\u8f3c\u8f3d\u8f3e\u8f3f\u8f40\u8f41\u8f42\u8f43\u8f44\u8f45\u8f46\u8f47\u8f48\u8f49\u8f4a\u8f4b\u8f4c\u8f4d\u8f4e\u8f4f\u8f50\u8f51\u8f52\u8f53\u8f54\u8f55\u8f56\u8f57\u8f58\u8f59\u8f5a\u8f5b\u8f5c\u8f5d\u8f5e\u8f5f\u8f60\u8f61\u8f62\u8f63\u8f64\u8f65\u8f66\u8f67\u8f68\u8f69\u8f6a\u8f6b\u8f6c\u8f6d\u8f6e\u8f6f\u8f70\u8f71\u8f72\u8f73\u8f74\u8f75\u8f76\u8f77\u8f78\u8f79\u8f7a\u8f7b\u8f7c\u8f7d\u8f7e\u8f7f\u8f80\u8f81\u8f82\u8f83\u8f84\u8f85\u8f86\u8f87\u8f88\u8f89\u8f8a\u8f8b\u8f8c\u8f8d\u8f8e\u8f8f\u8f90\u8f91\u8f92\u8f93\u8f94\u8f95\u8f96\u8f97\u8f98\u8f99\u8f9a\u8f9b\u8f9c\u8f9d\u8f9e\u8f9f\u8fa0\u8fa1\u8fa2\u8fa3\u8fa4\u8fa5\u8fa6\u8fa7\u8fa8\u8fa9\u8faa\u8fab\u8fac\u8fad\u8fae\u8faf\u8fb0\u8fb1\u8fb2\u8fb3\u8fb4\u8fb5\u8fb6\u8fb7\u8fb8\u8fb9\u8fba\u8fbb\u8fbc\u8fbd\u8fbe\u8fbf\u8fc0\u8fc1\u8fc2\u8fc3\u8fc4\u8fc5\u8fc6\u8fc7\u8fc8\u8fc9\u8fca\u8fcb\u8fcc\u8fcd\u8fce\u8fcf\u8fd0\u8fd1\u8fd2\u8fd3\u8fd4\u8fd5\u8fd6\u8fd7\u8fd8\u8fd9\u8fda\u8fdb\u8fdc\u8fdd\u8fde\u8fdf\u8fe0\u8fe1\u8fe2\u8fe3\u8fe4\u8fe5\u8fe6\u8fe7\u8fe8\u8fe9\u8fea\u8feb\u8fec\u8fed\u8fee\u8fef\u8ff0\u8ff1\u8ff2\u8ff3\u8ff4\u8ff5\u8ff6\u8ff7\u8ff8\u8ff9\u8ffa\u8ffb\u8ffc\u8ffd\u8ffe\u8fff\u9000\u9001\u9002\u9003\u9004\u9005\u9006\u9007\u9008\u9009\u900a\u900b\u900c\u900d\u900e\u900f\u9010\u9011\u9012\u9013\u9014\u9015\u9016\u9017\u9018\u9019\u901a\u901b\u901c\u901d\u901e\u901f\u9020\u9021\u9022\u9023\u9024\u9025\u9026\u9027\u9028\u9029\u902a\u902b\u902c\u902d\u902e\u902f\u9030\u9031\u9032\u9033\u9034\u9035\u9036\u9037\u9038\u9039\u903a\u903b\u903c\u903d\u903e\u903f\u9040\u9041\u9042\u9043\u9044\u9045\u9046\u9047\u9048\u9049\u904a\u904b\u904c\u904d\u904e\u904f\u9050\u9051\u9052\u9053\u9054\u9055\u9056\u9057\u9058\u9059\u905a\u905b\u905c\u905d\u905e\u905f\u9060\u9061\u9062\u9063\u9064\u9065\u9066\u9067\u9068\u9069\u906a\u906b\u906c\u906d\u906e\u906f\u9070\u9071\u9072\u9073\u9074\u9075\u9076\u9077\u9078\u9079\u907a\u907b\u907c\u907d\u907e\u907f\u9080\u9081\u9082\u9083\u9084\u9085\u9086\u9087\u9088\u9089\u908a\u908b\u908c\u908d\u908e\u908f\u9090\u9091\u9092\u9093\u9094\u9095\u9096\u9097\u9098\u9099\u909a\u909b\u909c\u909d\u909e\u909f\u90a0\u90a1\u90a2\u90a3\u90a4\u90a5\u90a6\u90a7\u90a8\u90a9\u90aa\u90ab\u90ac\u90ad\u90ae\u90af\u90b0\u90b1\u90b2\u90b3\u90b4\u90b5\u90b6\u90b7\u90b8\u90b9\u90ba\u90bb\u90bc\u90bd\u90be\u90bf\u90c0\u90c1\u90c2\u90c3\u90c4\u90c5\u90c6\u90c7\u90c8\u90c9\u90ca\u90cb\u90cc\u90cd\u90ce\u90cf\u90d0\u90d1\u90d2\u90d3\u90d4\u90d5\u90d6\u90d7\u90d8\u90d9\u90da\u90db\u90dc\u90dd\u90de\u90df\u90e0\u90e1\u90e2\u90e3\u90e4\u90e5\u90e6\u90e7\u90e8\u90e9\u90ea\u90eb\u90ec\u90ed\u90ee\u90ef\u90f0\u90f1\u90f2\u90f3\u90f4\u90f5\u90f6\u90f7\u90f8\u90f9\u90fa\u90fb\u90fc\u90fd\u90fe\u90ff\u9100\u9101\u9102\u9103\u9104\u9105\u9106\u9107\u9108\u9109\u910a\u910b\u910c\u910d\u910e\u910f\u9110\u9111\u9112\u9113\u9114\u9115\u9116\u9117\u9118\u9119\u911a\u911b\u911c\u911d\u911e\u911f\u9120\u9121\u9122\u9123\u9124\u9125\u9126\u9127\u9128\u9129\u912a\u912b\u912c\u912d\u912e\u912f\u9130\u9131\u9132\u9133\u9134\u9135\u9136\u9137\u9138\u9139\u913a\u913b\u913c\u913d\u913e\u913f\u9140\u9141\u9142\u9143\u9144\u9145\u9146\u9147\u9148\u9149\u914a\u914b\u914c\u914d\u914e\u914f\u9150\u9151\u9152\u9153\u9154\u9155\u9156\u9157\u9158\u9159\u915a\u915b\u915c\u915d\u915e\u915f\u9160\u9161\u9162\u9163\u9164\u9165\u9166\u9167\u9168\u9169\u916a\u916b\u916c\u916d\u916e\u916f\u9170\u9171\u9172\u9173\u9174\u9175\u9176\u9177\u9178\u9179\u917a\u917b\u917c\u917d\u917e\u917f\u9180\u9181\u9182\u9183\u9184\u9185\u9186\u9187\u9188\u9189\u918a\u918b\u918c\u918d\u918e\u918f\u9190\u9191\u9192\u9193\u9194\u9195\u9196\u9197\u9198\u9199\u919a\u919b\u919c\u919d\u919e\u919f\u91a0\u91a1\u91a2\u91a3\u91a4\u91a5\u91a6\u91a7\u91a8\u91a9\u91aa\u91ab\u91ac\u91ad\u91ae\u91af\u91b0\u91b1\u91b2\u91b3\u91b4\u91b5\u91b6\u91b7\u91b8\u91b9\u91ba\u91bb\u91bc\u91bd\u91be\u91bf\u91c0\u91c1\u91c2\u91c3\u91c4\u91c5\u91c6\u91c7\u91c8\u91c9\u91ca\u91cb\u91cc\u91cd\u91ce\u91cf\u91d0\u91d1\u91d2\u91d3\u91d4\u91d5\u91d6\u91d7\u91d8\u91d9\u91da\u91db\u91dc\u91dd\u91de\u91df\u91e0\u91e1\u91e2\u91e3\u91e4\u91e5\u91e6\u91e7\u91e8\u91e9\u91ea\u91eb\u91ec\u91ed\u91ee\u91ef\u91f0\u91f1\u91f2\u91f3\u91f4\u91f5\u91f6\u91f7\u91f8\u91f9\u91fa\u91fb\u91fc\u91fd\u91fe\u91ff\u9200\u9201\u9202\u9203\u9204\u9205\u9206\u9207\u9208\u9209\u920a\u920b\u920c\u920d\u920e\u920f\u9210\u9211\u9212\u9213\u9214\u9215\u9216\u9217\u9218\u9219\u921a\u921b\u921c\u921d\u921e\u921f\u9220\u9221\u9222\u9223\u9224\u9225\u9226\u9227\u9228\u9229\u922a\u922b\u922c\u922d\u922e\u922f\u9230\u9231\u9232\u9233\u9234\u9235\u9236\u9237\u9238\u9239\u923a\u923b\u923c\u923d\u923e\u923f\u9240\u9241\u9242\u9243\u9244\u9245\u9246\u9247\u9248\u9249\u924a\u924b\u924c\u924d\u924e\u924f\u9250\u9251\u9252\u9253\u9254\u9255\u9256\u9257\u9258\u9259\u925a\u925b\u925c\u925d\u925e\u925f\u9260\u9261\u9262\u9263\u9264\u9265\u9266\u9267\u9268\u9269\u926a\u926b\u926c\u926d\u926e\u926f\u9270\u9271\u9272\u9273\u9274\u9275\u9276\u9277\u9278\u9279\u927a\u927b\u927c\u927d\u927e\u927f\u9280\u9281\u9282\u9283\u9284\u9285\u9286\u9287\u9288\u9289\u928a\u928b\u928c\u928d\u928e\u928f\u9290\u9291\u9292\u9293\u9294\u9295\u9296\u9297\u9298\u9299\u929a\u929b\u929c\u929d\u929e\u929f\u92a0\u92a1\u92a2\u92a3\u92a4\u92a5\u92a6\u92a7\u92a8\u92a9\u92aa\u92ab\u92ac\u92ad\u92ae\u92af\u92b0\u92b1\u92b2\u92b3\u92b4\u92b5\u92b6\u92b7\u92b8\u92b9\u92ba\u92bb\u92bc\u92bd\u92be\u92bf\u92c0\u92c1\u92c2\u92c3\u92c4\u92c5\u92c6\u92c7\u92c8\u92c9\u92ca\u92cb\u92cc\u92cd\u92ce\u92cf\u92d0\u92d1\u92d2\u92d3\u92d4\u92d5\u92d6\u92d7\u92d8\u92d9\u92da\u92db\u92dc\u92dd\u92de\u92df\u92e0\u92e1\u92e2\u92e3\u92e4\u92e5\u92e6\u92e7\u92e8\u92e9\u92ea\u92eb\u92ec\u92ed\u92ee\u92ef\u92f0\u92f1\u92f2\u92f3\u92f4\u92f5\u92f6\u92f7\u92f8\u92f9\u92fa\u92fb\u92fc\u92fd\u92fe\u92ff\u9300\u9301\u9302\u9303\u9304\u9305\u9306\u9307\u9308\u9309\u930a\u930b\u930c\u930d\u930e\u930f\u9310\u9311\u9312\u9313\u9314\u9315\u9316\u9317\u9318\u9319\u931a\u931b\u931c\u931d\u931e\u931f\u9320\u9321\u9322\u9323\u9324\u9325\u9326\u9327\u9328\u9329\u932a\u932b\u932c\u932d\u932e\u932f\u9330\u9331\u9332\u9333\u9334\u9335\u9336\u9337\u9338\u9339\u933a\u933b\u933c\u933d\u933e\u933f\u9340\u9341\u9342\u9343\u9344\u9345\u9346\u9347\u9348\u9349\u934a\u934b\u934c\u934d\u934e\u934f\u9350\u9351\u9352\u9353\u9354\u9355\u9356\u9357\u9358\u9359\u935a\u935b\u935c\u935d\u935e\u935f\u9360\u9361\u9362\u9363\u9364\u9365\u9366\u9367\u9368\u9369\u936a\u936b\u936c\u936d\u936e\u936f\u9370\u9371\u9372\u9373\u9374\u9375\u9376\u9377\u9378\u9379\u937a\u937b\u937c\u937d\u937e\u937f\u9380\u9381\u9382\u9383\u9384\u9385\u9386\u9387\u9388\u9389\u938a\u938b\u938c\u938d\u938e\u938f\u9390\u9391\u9392\u9393\u9394\u9395\u9396\u9397\u9398\u9399\u939a\u939b\u939c\u939d\u939e\u939f\u93a0\u93a1\u93a2\u93a3\u93a4\u93a5\u93a6\u93a7\u93a8\u93a9\u93aa\u93ab\u93ac\u93ad\u93ae\u93af\u93b0\u93b1\u93b2\u93b3\u93b4\u93b5\u93b6\u93b7\u93b8\u93b9\u93ba\u93bb\u93bc\u93bd\u93be\u93bf\u93c0\u93c1\u93c2\u93c3\u93c4\u93c5\u93c6\u93c7\u93c8\u93c9\u93ca\u93cb\u93cc\u93cd\u93ce\u93cf\u93d0\u93d1\u93d2\u93d3\u93d4\u93d5\u93d6\u93d7\u93d8\u93d9\u93da\u93db\u93dc\u93dd\u93de\u93df\u93e0\u93e1\u93e2\u93e3\u93e4\u93e5\u93e6\u93e7\u93e8\u93e9\u93ea\u93eb\u93ec\u93ed\u93ee\u93ef\u93f0\u93f1\u93f2\u93f3\u93f4\u93f5\u93f6\u93f7\u93f8\u93f9\u93fa\u93fb\u93fc\u93fd\u93fe\u93ff\u9400\u9401\u9402\u9403\u9404\u9405\u9406\u9407\u9408\u9409\u940a\u940b\u940c\u940d\u940e\u940f\u9410\u9411\u9412\u9413\u9414\u9415\u9416\u9417\u9418\u9419\u941a\u941b\u941c\u941d\u941e\u941f\u9420\u9421\u9422\u9423\u9424\u9425\u9426\u9427\u9428\u9429\u942a\u942b\u942c\u942d\u942e\u942f\u9430\u9431\u9432\u9433\u9434\u9435\u9436\u9437\u9438\u9439\u943a\u943b\u943c\u943d\u943e\u943f\u9440\u9441\u9442\u9443\u9444\u9445\u9446\u9447\u9448\u9449\u944a\u944b\u944c\u944d\u944e\u944f\u9450\u9451\u9452\u9453\u9454\u9455\u9456\u9457\u9458\u9459\u945a\u945b\u945c\u945d\u945e\u945f\u9460\u9461\u9462\u9463\u9464\u9465\u9466\u9467\u9468\u9469\u946a\u946b\u946c\u946d\u946e\u946f\u9470\u9471\u9472\u9473\u9474\u9475\u9476\u9477\u9478\u9479\u947a\u947b\u947c\u947d\u947e\u947f\u9480\u9481\u9482\u9483\u9484\u9485\u9486\u9487\u9488\u9489\u948a\u948b\u948c\u948d\u948e\u948f\u9490\u9491\u9492\u9493\u9494\u9495\u9496\u9497\u9498\u9499\u949a\u949b\u949c\u949d\u949e\u949f\u94a0\u94a1\u94a2\u94a3\u94a4\u94a5\u94a6\u94a7\u94a8\u94a9\u94aa\u94ab\u94ac\u94ad\u94ae\u94af\u94b0\u94b1\u94b2\u94b3\u94b4\u94b5\u94b6\u94b7\u94b8\u94b9\u94ba\u94bb\u94bc\u94bd\u94be\u94bf\u94c0\u94c1\u94c2\u94c3\u94c4\u94c5\u94c6\u94c7\u94c8\u94c9\u94ca\u94cb\u94cc\u94cd\u94ce\u94cf\u94d0\u94d1\u94d2\u94d3\u94d4\u94d5\u94d6\u94d7\u94d8\u94d9\u94da\u94db\u94dc\u94dd\u94de\u94df\u94e0\u94e1\u94e2\u94e3\u94e4\u94e5\u94e6\u94e7\u94e8\u94e9\u94ea\u94eb\u94ec\u94ed\u94ee\u94ef\u94f0\u94f1\u94f2\u94f3\u94f4\u94f5\u94f6\u94f7\u94f8\u94f9\u94fa\u94fb\u94fc\u94fd\u94fe\u94ff\u9500\u9501\u9502\u9503\u9504\u9505\u9506\u9507\u9508\u9509\u950a\u950b\u950c\u950d\u950e\u950f\u9510\u9511\u9512\u9513\u9514\u9515\u9516\u9517\u9518\u9519\u951a\u951b\u951c\u951d\u951e\u951f\u9520\u9521\u9522\u9523\u9524\u9525\u9526\u9527\u9528\u9529\u952a\u952b\u952c\u952d\u952e\u952f\u9530\u9531\u9532\u9533\u9534\u9535\u9536\u9537\u9538\u9539\u953a\u953b\u953c\u953d\u953e\u953f\u9540\u9541\u9542\u9543\u9544\u9545\u9546\u9547\u9548\u9549\u954a\u954b\u954c\u954d\u954e\u954f\u9550\u9551\u9552\u9553\u9554\u9555\u9556\u9557\u9558\u9559\u955a\u955b\u955c\u955d\u955e\u955f\u9560\u9561\u9562\u9563\u9564\u9565\u9566\u9567\u9568\u9569\u956a\u956b\u956c\u956d\u956e\u956f\u9570\u9571\u9572\u9573\u9574\u9575\u9576\u9577\u9578\u9579\u957a\u957b\u957c\u957d\u957e\u957f\u9580\u9581\u9582\u9583\u9584\u9585\u9586\u9587\u9588\u9589\u958a\u958b\u958c\u958d\u958e\u958f\u9590\u9591\u9592\u9593\u9594\u9595\u9596\u9597\u9598\u9599\u959a\u959b\u959c\u959d\u959e\u959f\u95a0\u95a1\u95a2\u95a3\u95a4\u95a5\u95a6\u95a7\u95a8\u95a9\u95aa\u95ab\u95ac\u95ad\u95ae\u95af\u95b0\u95b1\u95b2\u95b3\u95b4\u95b5\u95b6\u95b7\u95b8\u95b9\u95ba\u95bb\u95bc\u95bd\u95be\u95bf\u95c0\u95c1\u95c2\u95c3\u95c4\u95c5\u95c6\u95c7\u95c8\u95c9\u95ca\u95cb\u95cc\u95cd\u95ce\u95cf\u95d0\u95d1\u95d2\u95d3\u95d4\u95d5\u95d6\u95d7\u95d8\u95d9\u95da\u95db\u95dc\u95dd\u95de\u95df\u95e0\u95e1\u95e2\u95e3\u95e4\u95e5\u95e6\u95e7\u95e8\u95e9\u95ea\u95eb\u95ec\u95ed\u95ee\u95ef\u95f0\u95f1\u95f2\u95f3\u95f4\u95f5\u95f6\u95f7\u95f8\u95f9\u95fa\u95fb\u95fc\u95fd\u95fe\u95ff\u9600\u9601\u9602\u9603\u9604\u9605\u9606\u9607\u9608\u9609\u960a\u960b\u960c\u960d\u960e\u960f\u9610\u9611\u9612\u9613\u9614\u9615\u9616\u9617\u9618\u9619\u961a\u961b\u961c\u961d\u961e\u961f\u9620\u9621\u9622\u9623\u9624\u9625\u9626\u9627\u9628\u9629\u962a\u962b\u962c\u962d\u962e\u962f\u9630\u9631\u9632\u9633\u9634\u9635\u9636\u9637\u9638\u9639\u963a\u963b\u963c\u963d\u963e\u963f\u9640\u9641\u9642\u9643\u9644\u9645\u9646\u9647\u9648\u9649\u964a\u964b\u964c\u964d\u964e\u964f\u9650\u9651\u9652\u9653\u9654\u9655\u9656\u9657\u9658\u9659\u965a\u965b\u965c\u965d\u965e\u965f\u9660\u9661\u9662\u9663\u9664\u9665\u9666\u9667\u9668\u9669\u966a\u966b\u966c\u966d\u966e\u966f\u9670\u9671\u9672\u9673\u9674\u9675\u9676\u9677\u9678\u9679\u967a\u967b\u967c\u967d\u967e\u967f\u9680\u9681\u9682\u9683\u9684\u9685\u9686\u9687\u9688\u9689\u968a\u968b\u968c\u968d\u968e\u968f\u9690\u9691\u9692\u9693\u9694\u9695\u9696\u9697\u9698\u9699\u969a\u969b\u969c\u969d\u969e\u969f\u96a0\u96a1\u96a2\u96a3\u96a4\u96a5\u96a6\u96a7\u96a8\u96a9\u96aa\u96ab\u96ac\u96ad\u96ae\u96af\u96b0\u96b1\u96b2\u96b3\u96b4\u96b5\u96b6\u96b7\u96b8\u96b9\u96ba\u96bb\u96bc\u96bd\u96be\u96bf\u96c0\u96c1\u96c2\u96c3\u96c4\u96c5\u96c6\u96c7\u96c8\u96c9\u96ca\u96cb\u96cc\u96cd\u96ce\u96cf\u96d0\u96d1\u96d2\u96d3\u96d4\u96d5\u96d6\u96d7\u96d8\u96d9\u96da\u96db\u96dc\u96dd\u96de\u96df\u96e0\u96e1\u96e2\u96e3\u96e4\u96e5\u96e6\u96e7\u96e8\u96e9\u96ea\u96eb\u96ec\u96ed\u96ee\u96ef\u96f0\u96f1\u96f2\u96f3\u96f4\u96f5\u96f6\u96f7\u96f8\u96f9\u96fa\u96fb\u96fc\u96fd\u96fe\u96ff\u9700\u9701\u9702\u9703\u9704\u9705\u9706\u9707\u9708\u9709\u970a\u970b\u970c\u970d\u970e\u970f\u9710\u9711\u9712\u9713\u9714\u9715\u9716\u9717\u9718\u9719\u971a\u971b\u971c\u971d\u971e\u971f\u9720\u9721\u9722\u9723\u9724\u9725\u9726\u9727\u9728\u9729\u972a\u972b\u972c\u972d\u972e\u972f\u9730\u9731\u9732\u9733\u9734\u9735\u9736\u9737\u9738\u9739\u973a\u973b\u973c\u973d\u973e\u973f\u9740\u9741\u9742\u9743\u9744\u9745\u9746\u9747\u9748\u9749\u974a\u974b\u974c\u974d\u974e\u974f\u9750\u9751\u9752\u9753\u9754\u9755\u9756\u9757\u9758\u9759\u975a\u975b\u975c\u975d\u975e\u975f\u9760\u9761\u9762\u9763\u9764\u9765\u9766\u9767\u9768\u9769\u976a\u976b\u976c\u976d\u976e\u976f\u9770\u9771\u9772\u9773\u9774\u9775\u9776\u9777\u9778\u9779\u977a\u977b\u977c\u977d\u977e\u977f\u9780\u9781\u9782\u9783\u9784\u9785\u9786\u9787\u9788\u9789\u978a\u978b\u978c\u978d\u978e\u978f\u9790\u9791\u9792\u9793\u9794\u9795\u9796\u9797\u9798\u9799\u979a\u979b\u979c\u979d\u979e\u979f\u97a0\u97a1\u97a2\u97a3\u97a4\u97a5\u97a6\u97a7\u97a8\u97a9\u97aa\u97ab\u97ac\u97ad\u97ae\u97af\u97b0\u97b1\u97b2\u97b3\u97b4\u97b5\u97b6\u97b7\u97b8\u97b9\u97ba\u97bb\u97bc\u97bd\u97be\u97bf\u97c0\u97c1\u97c2\u97c3\u97c4\u97c5\u97c6\u97c7\u97c8\u97c9\u97ca\u97cb\u97cc\u97cd\u97ce\u97cf\u97d0\u97d1\u97d2\u97d3\u97d4\u97d5\u97d6\u97d7\u97d8\u97d9\u97da\u97db\u97dc\u97dd\u97de\u97df\u97e0\u97e1\u97e2\u97e3\u97e4\u97e5\u97e6\u97e7\u97e8\u97e9\u97ea\u97eb\u97ec\u97ed\u97ee\u97ef\u97f0\u97f1\u97f2\u97f3\u97f4\u97f5\u97f6\u97f7\u97f8\u97f9\u97fa\u97fb\u97fc\u97fd\u97fe\u97ff\u9800\u9801\u9802\u9803\u9804\u9805\u9806\u9807\u9808\u9809\u980a\u980b\u980c\u980d\u980e\u980f\u9810\u9811\u9812\u9813\u9814\u9815\u9816\u9817\u9818\u9819\u981a\u981b\u981c\u981d\u981e\u981f\u9820\u9821\u9822\u9823\u9824\u9825\u9826\u9827\u9828\u9829\u982a\u982b\u982c\u982d\u982e\u982f\u9830\u9831\u9832\u9833\u9834\u9835\u9836\u9837\u9838\u9839\u983a\u983b\u983c\u983d\u983e\u983f\u9840\u9841\u9842\u9843\u9844\u9845\u9846\u9847\u9848\u9849\u984a\u984b\u984c\u984d\u984e\u984f\u9850\u9851\u9852\u9853\u9854\u9855\u9856\u9857\u9858\u9859\u985a\u985b\u985c\u985d\u985e\u985f\u9860\u9861\u9862\u9863\u9864\u9865\u9866\u9867\u9868\u9869\u986a\u986b\u986c\u986d\u986e\u986f\u9870\u9871\u9872\u9873\u9874\u9875\u9876\u9877\u9878\u9879\u987a\u987b\u987c\u987d\u987e\u987f\u9880\u9881\u9882\u9883\u9884\u9885\u9886\u9887\u9888\u9889\u988a\u988b\u988c\u988d\u988e\u988f\u9890\u9891\u9892\u9893\u9894\u9895\u9896\u9897\u9898\u9899\u989a\u989b\u989c\u989d\u989e\u989f\u98a0\u98a1\u98a2\u98a3\u98a4\u98a5\u98a6\u98a7\u98a8\u98a9\u98aa\u98ab\u98ac\u98ad\u98ae\u98af\u98b0\u98b1\u98b2\u98b3\u98b4\u98b5\u98b6\u98b7\u98b8\u98b9\u98ba\u98bb\u98bc\u98bd\u98be\u98bf\u98c0\u98c1\u98c2\u98c3\u98c4\u98c5\u98c6\u98c7\u98c8\u98c9\u98ca\u98cb\u98cc\u98cd\u98ce\u98cf\u98d0\u98d1\u98d2\u98d3\u98d4\u98d5\u98d6\u98d7\u98d8\u98d9\u98da\u98db\u98dc\u98dd\u98de\u98df\u98e0\u98e1\u98e2\u98e3\u98e4\u98e5\u98e6\u98e7\u98e8\u98e9\u98ea\u98eb\u98ec\u98ed\u98ee\u98ef\u98f0\u98f1\u98f2\u98f3\u98f4\u98f5\u98f6\u98f7\u98f8\u98f9\u98fa\u98fb\u98fc\u98fd\u98fe\u98ff\u9900\u9901\u9902\u9903\u9904\u9905\u9906\u9907\u9908\u9909\u990a\u990b\u990c\u990d\u990e\u990f\u9910\u9911\u9912\u9913\u9914\u9915\u9916\u9917\u9918\u9919\u991a\u991b\u991c\u991d\u991e\u991f\u9920\u9921\u9922\u9923\u9924\u9925\u9926\u9927\u9928\u9929\u992a\u992b\u992c\u992d\u992e\u992f\u9930\u9931\u9932\u9933\u9934\u9935\u9936\u9937\u9938\u9939\u993a\u993b\u993c\u993d\u993e\u993f\u9940\u9941\u9942\u9943\u9944\u9945\u9946\u9947\u9948\u9949\u994a\u994b\u994c\u994d\u994e\u994f\u9950\u9951\u9952\u9953\u9954\u9955\u9956\u9957\u9958\u9959\u995a\u995b\u995c\u995d\u995e\u995f\u9960\u9961\u9962\u9963\u9964\u9965\u9966\u9967\u9968\u9969\u996a\u996b\u996c\u996d\u996e\u996f\u9970\u9971\u9972\u9973\u9974\u9975\u9976\u9977\u9978\u9979\u997a\u997b\u997c\u997d\u997e\u997f\u9980\u9981\u9982\u9983\u9984\u9985\u9986\u9987\u9988\u9989\u998a\u998b\u998c\u998d\u998e\u998f\u9990\u9991\u9992\u9993\u9994\u9995\u9996\u9997\u9998\u9999\u999a\u999b\u999c\u999d\u999e\u999f\u99a0\u99a1\u99a2\u99a3\u99a4\u99a5\u99a6\u99a7\u99a8\u99a9\u99aa\u99ab\u99ac\u99ad\u99ae\u99af\u99b0\u99b1\u99b2\u99b3\u99b4\u99b5\u99b6\u99b7\u99b8\u99b9\u99ba\u99bb\u99bc\u99bd\u99be\u99bf\u99c0\u99c1\u99c2\u99c3\u99c4\u99c5\u99c6\u99c7\u99c8\u99c9\u99ca\u99cb\u99cc\u99cd\u99ce\u99cf\u99d0\u99d1\u99d2\u99d3\u99d4\u99d5\u99d6\u99d7\u99d8\u99d9\u99da\u99db\u99dc\u99dd\u99de\u99df\u99e0\u99e1\u99e2\u99e3\u99e4\u99e5\u99e6\u99e7\u99e8\u99e9\u99ea\u99eb\u99ec\u99ed\u99ee\u99ef\u99f0\u99f1\u99f2\u99f3\u99f4\u99f5\u99f6\u99f7\u99f8\u99f9\u99fa\u99fb\u99fc\u99fd\u99fe\u99ff\u9a00\u9a01\u9a02\u9a03\u9a04\u9a05\u9a06\u9a07\u9a08\u9a09\u9a0a\u9a0b\u9a0c\u9a0d\u9a0e\u9a0f\u9a10\u9a11\u9a12\u9a13\u9a14\u9a15\u9a16\u9a17\u9a18\u9a19\u9a1a\u9a1b\u9a1c\u9a1d\u9a1e\u9a1f\u9a20\u9a21\u9a22\u9a23\u9a24\u9a25\u9a26\u9a27\u9a28\u9a29\u9a2a\u9a2b\u9a2c\u9a2d\u9a2e\u9a2f\u9a30\u9a31\u9a32\u9a33\u9a34\u9a35\u9a36\u9a37\u9a38\u9a39\u9a3a\u9a3b\u9a3c\u9a3d\u9a3e\u9a3f\u9a40\u9a41\u9a42\u9a43\u9a44\u9a45\u9a46\u9a47\u9a48\u9a49\u9a4a\u9a4b\u9a4c\u9a4d\u9a4e\u9a4f\u9a50\u9a51\u9a52\u9a53\u9a54\u9a55\u9a56\u9a57\u9a58\u9a59\u9a5a\u9a5b\u9a5c\u9a5d\u9a5e\u9a5f\u9a60\u9a61\u9a62\u9a63\u9a64\u9a65\u9a66\u9a67\u9a68\u9a69\u9a6a\u9a6b\u9a6c\u9a6d\u9a6e\u9a6f\u9a70\u9a71\u9a72\u9a73\u9a74\u9a75\u9a76\u9a77\u9a78\u9a79\u9a7a\u9a7b\u9a7c\u9a7d\u9a7e\u9a7f\u9a80\u9a81\u9a82\u9a83\u9a84\u9a85\u9a86\u9a87\u9a88\u9a89\u9a8a\u9a8b\u9a8c\u9a8d\u9a8e\u9a8f\u9a90\u9a91\u9a92\u9a93\u9a94\u9a95\u9a96\u9a97\u9a98\u9a99\u9a9a\u9a9b\u9a9c\u9a9d\u9a9e\u9a9f\u9aa0\u9aa1\u9aa2\u9aa3\u9aa4\u9aa5\u9aa6\u9aa7\u9aa8\u9aa9\u9aaa\u9aab\u9aac\u9aad\u9aae\u9aaf\u9ab0\u9ab1\u9ab2\u9ab3\u9ab4\u9ab5\u9ab6\u9ab7\u9ab8\u9ab9\u9aba\u9abb\u9abc\u9abd\u9abe\u9abf\u9ac0\u9ac1\u9ac2\u9ac3\u9ac4\u9ac5\u9ac6\u9ac7\u9ac8\u9ac9\u9aca\u9acb\u9acc\u9acd\u9ace\u9acf\u9ad0\u9ad1\u9ad2\u9ad3\u9ad4\u9ad5\u9ad6\u9ad7\u9ad8\u9ad9\u9ada\u9adb\u9adc\u9add\u9ade\u9adf\u9ae0\u9ae1\u9ae2\u9ae3\u9ae4\u9ae5\u9ae6\u9ae7\u9ae8\u9ae9\u9aea\u9aeb\u9aec\u9aed\u9aee\u9aef\u9af0\u9af1\u9af2\u9af3\u9af4\u9af5\u9af6\u9af7\u9af8\u9af9\u9afa\u9afb\u9afc\u9afd\u9afe\u9aff\u9b00\u9b01\u9b02\u9b03\u9b04\u9b05\u9b06\u9b07\u9b08\u9b09\u9b0a\u9b0b\u9b0c\u9b0d\u9b0e\u9b0f\u9b10\u9b11\u9b12\u9b13\u9b14\u9b15\u9b16\u9b17\u9b18\u9b19\u9b1a\u9b1b\u9b1c\u9b1d\u9b1e\u9b1f\u9b20\u9b21\u9b22\u9b23\u9b24\u9b25\u9b26\u9b27\u9b28\u9b29\u9b2a\u9b2b\u9b2c\u9b2d\u9b2e\u9b2f\u9b30\u9b31\u9b32\u9b33\u9b34\u9b35\u9b36\u9b37\u9b38\u9b39\u9b3a\u9b3b\u9b3c\u9b3d\u9b3e\u9b3f\u9b40\u9b41\u9b42\u9b43\u9b44\u9b45\u9b46\u9b47\u9b48\u9b49\u9b4a\u9b4b\u9b4c\u9b4d\u9b4e\u9b4f\u9b50\u9b51\u9b52\u9b53\u9b54\u9b55\u9b56\u9b57\u9b58\u9b59\u9b5a\u9b5b\u9b5c\u9b5d\u9b5e\u9b5f\u9b60\u9b61\u9b62\u9b63\u9b64\u9b65\u9b66\u9b67\u9b68\u9b69\u9b6a\u9b6b\u9b6c\u9b6d\u9b6e\u9b6f\u9b70\u9b71\u9b72\u9b73\u9b74\u9b75\u9b76\u9b77\u9b78\u9b79\u9b7a\u9b7b\u9b7c\u9b7d\u9b7e\u9b7f\u9b80\u9b81\u9b82\u9b83\u9b84\u9b85\u9b86\u9b87\u9b88\u9b89\u9b8a\u9b8b\u9b8c\u9b8d\u9b8e\u9b8f\u9b90\u9b91\u9b92\u9b93\u9b94\u9b95\u9b96\u9b97\u9b98\u9b99\u9b9a\u9b9b\u9b9c\u9b9d\u9b9e\u9b9f\u9ba0\u9ba1\u9ba2\u9ba3\u9ba4\u9ba5\u9ba6\u9ba7\u9ba8\u9ba9\u9baa\u9bab\u9bac\u9bad\u9bae\u9baf\u9bb0\u9bb1\u9bb2\u9bb3\u9bb4\u9bb5\u9bb6\u9bb7\u9bb8\u9bb9\u9bba\u9bbb\u9bbc\u9bbd\u9bbe\u9bbf\u9bc0\u9bc1\u9bc2\u9bc3\u9bc4\u9bc5\u9bc6\u9bc7\u9bc8\u9bc9\u9bca\u9bcb\u9bcc\u9bcd\u9bce\u9bcf\u9bd0\u9bd1\u9bd2\u9bd3\u9bd4\u9bd5\u9bd6\u9bd7\u9bd8\u9bd9\u9bda\u9bdb\u9bdc\u9bdd\u9bde\u9bdf\u9be0\u9be1\u9be2\u9be3\u9be4\u9be5\u9be6\u9be7\u9be8\u9be9\u9bea\u9beb\u9bec\u9bed\u9bee\u9bef\u9bf0\u9bf1\u9bf2\u9bf3\u9bf4\u9bf5\u9bf6\u9bf7\u9bf8\u9bf9\u9bfa\u9bfb\u9bfc\u9bfd\u9bfe\u9bff\u9c00\u9c01\u9c02\u9c03\u9c04\u9c05\u9c06\u9c07\u9c08\u9c09\u9c0a\u9c0b\u9c0c\u9c0d\u9c0e\u9c0f\u9c10\u9c11\u9c12\u9c13\u9c14\u9c15\u9c16\u9c17\u9c18\u9c19\u9c1a\u9c1b\u9c1c\u9c1d\u9c1e\u9c1f\u9c20\u9c21\u9c22\u9c23\u9c24\u9c25\u9c26\u9c27\u9c28\u9c29\u9c2a\u9c2b\u9c2c\u9c2d\u9c2e\u9c2f\u9c30\u9c31\u9c32\u9c33\u9c34\u9c35\u9c36\u9c37\u9c38\u9c39\u9c3a\u9c3b\u9c3c\u9c3d\u9c3e\u9c3f\u9c40\u9c41\u9c42\u9c43\u9c44\u9c45\u9c46\u9c47\u9c48\u9c49\u9c4a\u9c4b\u9c4c\u9c4d\u9c4e\u9c4f\u9c50\u9c51\u9c52\u9c53\u9c54\u9c55\u9c56\u9c57\u9c58\u9c59\u9c5a\u9c5b\u9c5c\u9c5d\u9c5e\u9c5f\u9c60\u9c61\u9c62\u9c63\u9c64\u9c65\u9c66\u9c67\u9c68\u9c69\u9c6a\u9c6b\u9c6c\u9c6d\u9c6e\u9c6f\u9c70\u9c71\u9c72\u9c73\u9c74\u9c75\u9c76\u9c77\u9c78\u9c79\u9c7a\u9c7b\u9c7c\u9c7d\u9c7e\u9c7f\u9c80\u9c81\u9c82\u9c83\u9c84\u9c85\u9c86\u9c87\u9c88\u9c89\u9c8a\u9c8b\u9c8c\u9c8d\u9c8e\u9c8f\u9c90\u9c91\u9c92\u9c93\u9c94\u9c95\u9c96\u9c97\u9c98\u9c99\u9c9a\u9c9b\u9c9c\u9c9d\u9c9e\u9c9f\u9ca0\u9ca1\u9ca2\u9ca3\u9ca4\u9ca5\u9ca6\u9ca7\u9ca8\u9ca9\u9caa\u9cab\u9cac\u9cad\u9cae\u9caf\u9cb0\u9cb1\u9cb2\u9cb3\u9cb4\u9cb5\u9cb6\u9cb7\u9cb8\u9cb9\u9cba\u9cbb\u9cbc\u9cbd\u9cbe\u9cbf\u9cc0\u9cc1\u9cc2\u9cc3\u9cc4\u9cc5\u9cc6\u9cc7\u9cc8\u9cc9\u9cca\u9ccb\u9ccc\u9ccd\u9cce\u9ccf\u9cd0\u9cd1\u9cd2\u9cd3\u9cd4\u9cd5\u9cd6\u9cd7\u9cd8\u9cd9\u9cda\u9cdb\u9cdc\u9cdd\u9cde\u9cdf\u9ce0\u9ce1\u9ce2\u9ce3\u9ce4\u9ce5\u9ce6\u9ce7\u9ce8\u9ce9\u9cea\u9ceb\u9cec\u9ced\u9cee\u9cef\u9cf0\u9cf1\u9cf2\u9cf3\u9cf4\u9cf5\u9cf6\u9cf7\u9cf8\u9cf9\u9cfa\u9cfb\u9cfc\u9cfd\u9cfe\u9cff\u9d00\u9d01\u9d02\u9d03\u9d04\u9d05\u9d06\u9d07\u9d08\u9d09\u9d0a\u9d0b\u9d0c\u9d0d\u9d0e\u9d0f\u9d10\u9d11\u9d12\u9d13\u9d14\u9d15\u9d16\u9d17\u9d18\u9d19\u9d1a\u9d1b\u9d1c\u9d1d\u9d1e\u9d1f\u9d20\u9d21\u9d22\u9d23\u9d24\u9d25\u9d26\u9d27\u9d28\u9d29\u9d2a\u9d2b\u9d2c\u9d2d\u9d2e\u9d2f\u9d30\u9d31\u9d32\u9d33\u9d34\u9d35\u9d36\u9d37\u9d38\u9d39\u9d3a\u9d3b\u9d3c\u9d3d\u9d3e\u9d3f\u9d40\u9d41\u9d42\u9d43\u9d44\u9d45\u9d46\u9d47\u9d48\u9d49\u9d4a\u9d4b\u9d4c\u9d4d\u9d4e\u9d4f\u9d50\u9d51\u9d52\u9d53\u9d54\u9d55\u9d56\u9d57\u9d58\u9d59\u9d5a\u9d5b\u9d5c\u9d5d\u9d5e\u9d5f\u9d60\u9d61\u9d62\u9d63\u9d64\u9d65\u9d66\u9d67\u9d68\u9d69\u9d6a\u9d6b\u9d6c\u9d6d\u9d6e\u9d6f\u9d70\u9d71\u9d72\u9d73\u9d74\u9d75\u9d76\u9d77\u9d78\u9d79\u9d7a\u9d7b\u9d7c\u9d7d\u9d7e\u9d7f\u9d80\u9d81\u9d82\u9d83\u9d84\u9d85\u9d86\u9d87\u9d88\u9d89\u9d8a\u9d8b\u9d8c\u9d8d\u9d8e\u9d8f\u9d90\u9d91\u9d92\u9d93\u9d94\u9d95\u9d96\u9d97\u9d98\u9d99\u9d9a\u9d9b\u9d9c\u9d9d\u9d9e\u9d9f\u9da0\u9da1\u9da2\u9da3\u9da4\u9da5\u9da6\u9da7\u9da8\u9da9\u9daa\u9dab\u9dac\u9dad\u9dae\u9daf\u9db0\u9db1\u9db2\u9db3\u9db4\u9db5\u9db6\u9db7\u9db8\u9db9\u9dba\u9dbb\u9dbc\u9dbd\u9dbe\u9dbf\u9dc0\u9dc1\u9dc2\u9dc3\u9dc4\u9dc5\u9dc6\u9dc7\u9dc8\u9dc9\u9dca\u9dcb\u9dcc\u9dcd\u9dce\u9dcf\u9dd0\u9dd1\u9dd2\u9dd3\u9dd4\u9dd5\u9dd6\u9dd7\u9dd8\u9dd9\u9dda\u9ddb\u9ddc\u9ddd\u9dde\u9ddf\u9de0\u9de1\u9de2\u9de3\u9de4\u9de5\u9de6\u9de7\u9de8\u9de9\u9dea\u9deb\u9dec\u9ded\u9dee\u9def\u9df0\u9df1\u9df2\u9df3\u9df4\u9df5\u9df6\u9df7\u9df8\u9df9\u9dfa\u9dfb\u9dfc\u9dfd\u9dfe\u9dff\u9e00\u9e01\u9e02\u9e03\u9e04\u9e05\u9e06\u9e07\u9e08\u9e09\u9e0a\u9e0b\u9e0c\u9e0d\u9e0e\u9e0f\u9e10\u9e11\u9e12\u9e13\u9e14\u9e15\u9e16\u9e17\u9e18\u9e19\u9e1a\u9e1b\u9e1c\u9e1d\u9e1e\u9e1f\u9e20\u9e21\u9e22\u9e23\u9e24\u9e25\u9e26\u9e27\u9e28\u9e29\u9e2a\u9e2b\u9e2c\u9e2d\u9e2e\u9e2f\u9e30\u9e31\u9e32\u9e33\u9e34\u9e35\u9e36\u9e37\u9e38\u9e39\u9e3a\u9e3b\u9e3c\u9e3d\u9e3e\u9e3f\u9e40\u9e41\u9e42\u9e43\u9e44\u9e45\u9e46\u9e47\u9e48\u9e49\u9e4a\u9e4b\u9e4c\u9e4d\u9e4e\u9e4f\u9e50\u9e51\u9e52\u9e53\u9e54\u9e55\u9e56\u9e57\u9e58\u9e59\u9e5a\u9e5b\u9e5c\u9e5d\u9e5e\u9e5f\u9e60\u9e61\u9e62\u9e63\u9e64\u9e65\u9e66\u9e67\u9e68\u9e69\u9e6a\u9e6b\u9e6c\u9e6d\u9e6e\u9e6f\u9e70\u9e71\u9e72\u9e73\u9e74\u9e75\u9e76\u9e77\u9e78\u9e79\u9e7a\u9e7b\u9e7c\u9e7d\u9e7e\u9e7f\u9e80\u9e81\u9e82\u9e83\u9e84\u9e85\u9e86\u9e87\u9e88\u9e89\u9e8a\u9e8b\u9e8c\u9e8d\u9e8e\u9e8f\u9e90\u9e91\u9e92\u9e93\u9e94\u9e95\u9e96\u9e97\u9e98\u9e99\u9e9a\u9e9b\u9e9c\u9e9d\u9e9e\u9e9f\u9ea0\u9ea1\u9ea2\u9ea3\u9ea4\u9ea5\u9ea6\u9ea7\u9ea8\u9ea9\u9eaa\u9eab\u9eac\u9ead\u9eae\u9eaf\u9eb0\u9eb1\u9eb2\u9eb3\u9eb4\u9eb5\u9eb6\u9eb7\u9eb8\u9eb9\u9eba\u9ebb\u9ebc\u9ebd\u9ebe\u9ebf\u9ec0\u9ec1\u9ec2\u9ec3\u9ec4\u9ec5\u9ec6\u9ec7\u9ec8\u9ec9\u9eca\u9ecb\u9ecc\u9ecd\u9ece\u9ecf\u9ed0\u9ed1\u9ed2\u9ed3\u9ed4\u9ed5\u9ed6\u9ed7\u9ed8\u9ed9\u9eda\u9edb\u9edc\u9edd\u9ede\u9edf\u9ee0\u9ee1\u9ee2\u9ee3\u9ee4\u9ee5\u9ee6\u9ee7\u9ee8\u9ee9\u9eea\u9eeb\u9eec\u9eed\u9eee\u9eef\u9ef0\u9ef1\u9ef2\u9ef3\u9ef4\u9ef5\u9ef6\u9ef7\u9ef8\u9ef9\u9efa\u9efb\u9efc\u9efd\u9efe\u9eff\u9f00\u9f01\u9f02\u9f03\u9f04\u9f05\u9f06\u9f07\u9f08\u9f09\u9f0a\u9f0b\u9f0c\u9f0d\u9f0e\u9f0f\u9f10\u9f11\u9f12\u9f13\u9f14\u9f15\u9f16\u9f17\u9f18\u9f19\u9f1a\u9f1b\u9f1c\u9f1d\u9f1e\u9f1f\u9f20\u9f21\u9f22\u9f23\u9f24\u9f25\u9f26\u9f27\u9f28\u9f29\u9f2a\u9f2b\u9f2c\u9f2d\u9f2e\u9f2f\u9f30\u9f31\u9f32\u9f33\u9f34\u9f35\u9f36\u9f37\u9f38\u9f39\u9f3a\u9f3b\u9f3c\u9f3d\u9f3e\u9f3f\u9f40\u9f41\u9f42\u9f43\u9f44\u9f45\u9f46\u9f47\u9f48\u9f49\u9f4a\u9f4b\u9f4c\u9f4d\u9f4e\u9f4f\u9f50\u9f51\u9f52\u9f53\u9f54\u9f55\u9f56\u9f57\u9f58\u9f59\u9f5a\u9f5b\u9f5c\u9f5d\u9f5e\u9f5f\u9f60\u9f61\u9f62\u9f63\u9f64\u9f65\u9f66\u9f67\u9f68\u9f69\u9f6a\u9f6b\u9f6c\u9f6d\u9f6e\u9f6f\u9f70\u9f71\u9f72\u9f73\u9f74\u9f75\u9f76\u9f77\u9f78\u9f79\u9f7a\u9f7b\u9f7c\u9f7d\u9f7e\u9f7f\u9f80\u9f81\u9f82\u9f83\u9f84\u9f85\u9f86\u9f87\u9f88\u9f89\u9f8a\u9f8b\u9f8c\u9f8d\u9f8e\u9f8f\u9f90\u9f91\u9f92\u9f93\u9f94\u9f95\u9f96\u9f97\u9f98\u9f99\u9f9a\u9f9b\u9f9c\u9f9d\u9f9e\u9f9f\u9fa0\u9fa1\u9fa2\u9fa3\u9fa4\u9fa5\u9fa6\u9fa7\u9fa8\u9fa9\u9faa\u9fab\u9fac\u9fad\u9fae\u9faf\u9fb0\u9fb1\u9fb2\u9fb3\u9fb4\u9fb5\u9fb6\u9fb7\u9fb8\u9fb9\u9fba\u9fbb\ua000\ua001\ua002\ua003\ua004\ua005\ua006\ua007\ua008\ua009\ua00a\ua00b\ua00c\ua00d\ua00e\ua00f\ua010\ua011\ua012\ua013\ua014\ua016\ua017\ua018\ua019\ua01a\ua01b\ua01c\ua01d\ua01e\ua01f\ua020\ua021\ua022\ua023\ua024\ua025\ua026\ua027\ua028\ua029\ua02a\ua02b\ua02c\ua02d\ua02e\ua02f\ua030\ua031\ua032\ua033\ua034\ua035\ua036\ua037\ua038\ua039\ua03a\ua03b\ua03c\ua03d\ua03e\ua03f\ua040\ua041\ua042\ua043\ua044\ua045\ua046\ua047\ua048\ua049\ua04a\ua04b\ua04c\ua04d\ua04e\ua04f\ua050\ua051\ua052\ua053\ua054\ua055\ua056\ua057\ua058\ua059\ua05a\ua05b\ua05c\ua05d\ua05e\ua05f\ua060\ua061\ua062\ua063\ua064\ua065\ua066\ua067\ua068\ua069\ua06a\ua06b\ua06c\ua06d\ua06e\ua06f\ua070\ua071\ua072\ua073\ua074\ua075\ua076\ua077\ua078\ua079\ua07a\ua07b\ua07c\ua07d\ua07e\ua07f\ua080\ua081\ua082\ua083\ua084\ua085\ua086\ua087\ua088\ua089\ua08a\ua08b\ua08c\ua08d\ua08e\ua08f\ua090\ua091\ua092\ua093\ua094\ua095\ua096\ua097\ua098\ua099\ua09a\ua09b\ua09c\ua09d\ua09e\ua09f\ua0a0\ua0a1\ua0a2\ua0a3\ua0a4\ua0a5\ua0a6\ua0a7\ua0a8\ua0a9\ua0aa\ua0ab\ua0ac\ua0ad\ua0ae\ua0af\ua0b0\ua0b1\ua0b2\ua0b3\ua0b4\ua0b5\ua0b6\ua0b7\ua0b8\ua0b9\ua0ba\ua0bb\ua0bc\ua0bd\ua0be\ua0bf\ua0c0\ua0c1\ua0c2\ua0c3\ua0c4\ua0c5\ua0c6\ua0c7\ua0c8\ua0c9\ua0ca\ua0cb\ua0cc\ua0cd\ua0ce\ua0cf\ua0d0\ua0d1\ua0d2\ua0d3\ua0d4\ua0d5\ua0d6\ua0d7\ua0d8\ua0d9\ua0da\ua0db\ua0dc\ua0dd\ua0de\ua0df\ua0e0\ua0e1\ua0e2\ua0e3\ua0e4\ua0e5\ua0e6\ua0e7\ua0e8\ua0e9\ua0ea\ua0eb\ua0ec\ua0ed\ua0ee\ua0ef\ua0f0\ua0f1\ua0f2\ua0f3\ua0f4\ua0f5\ua0f6\ua0f7\ua0f8\ua0f9\ua0fa\ua0fb\ua0fc\ua0fd\ua0fe\ua0ff\ua100\ua101\ua102\ua103\ua104\ua105\ua106\ua107\ua108\ua109\ua10a\ua10b\ua10c\ua10d\ua10e\ua10f\ua110\ua111\ua112\ua113\ua114\ua115\ua116\ua117\ua118\ua119\ua11a\ua11b\ua11c\ua11d\ua11e\ua11f\ua120\ua121\ua122\ua123\ua124\ua125\ua126\ua127\ua128\ua129\ua12a\ua12b\ua12c\ua12d\ua12e\ua12f\ua130\ua131\ua132\ua133\ua134\ua135\ua136\ua137\ua138\ua139\ua13a\ua13b\ua13c\ua13d\ua13e\ua13f\ua140\ua141\ua142\ua143\ua144\ua145\ua146\ua147\ua148\ua149\ua14a\ua14b\ua14c\ua14d\ua14e\ua14f\ua150\ua151\ua152\ua153\ua154\ua155\ua156\ua157\ua158\ua159\ua15a\ua15b\ua15c\ua15d\ua15e\ua15f\ua160\ua161\ua162\ua163\ua164\ua165\ua166\ua167\ua168\ua169\ua16a\ua16b\ua16c\ua16d\ua16e\ua16f\ua170\ua171\ua172\ua173\ua174\ua175\ua176\ua177\ua178\ua179\ua17a\ua17b\ua17c\ua17d\ua17e\ua17f\ua180\ua181\ua182\ua183\ua184\ua185\ua186\ua187\ua188\ua189\ua18a\ua18b\ua18c\ua18d\ua18e\ua18f\ua190\ua191\ua192\ua193\ua194\ua195\ua196\ua197\ua198\ua199\ua19a\ua19b\ua19c\ua19d\ua19e\ua19f\ua1a0\ua1a1\ua1a2\ua1a3\ua1a4\ua1a5\ua1a6\ua1a7\ua1a8\ua1a9\ua1aa\ua1ab\ua1ac\ua1ad\ua1ae\ua1af\ua1b0\ua1b1\ua1b2\ua1b3\ua1b4\ua1b5\ua1b6\ua1b7\ua1b8\ua1b9\ua1ba\ua1bb\ua1bc\ua1bd\ua1be\ua1bf\ua1c0\ua1c1\ua1c2\ua1c3\ua1c4\ua1c5\ua1c6\ua1c7\ua1c8\ua1c9\ua1ca\ua1cb\ua1cc\ua1cd\ua1ce\ua1cf\ua1d0\ua1d1\ua1d2\ua1d3\ua1d4\ua1d5\ua1d6\ua1d7\ua1d8\ua1d9\ua1da\ua1db\ua1dc\ua1dd\ua1de\ua1df\ua1e0\ua1e1\ua1e2\ua1e3\ua1e4\ua1e5\ua1e6\ua1e7\ua1e8\ua1e9\ua1ea\ua1eb\ua1ec\ua1ed\ua1ee\ua1ef\ua1f0\ua1f1\ua1f2\ua1f3\ua1f4\ua1f5\ua1f6\ua1f7\ua1f8\ua1f9\ua1fa\ua1fb\ua1fc\ua1fd\ua1fe\ua1ff\ua200\ua201\ua202\ua203\ua204\ua205\ua206\ua207\ua208\ua209\ua20a\ua20b\ua20c\ua20d\ua20e\ua20f\ua210\ua211\ua212\ua213\ua214\ua215\ua216\ua217\ua218\ua219\ua21a\ua21b\ua21c\ua21d\ua21e\ua21f\ua220\ua221\ua222\ua223\ua224\ua225\ua226\ua227\ua228\ua229\ua22a\ua22b\ua22c\ua22d\ua22e\ua22f\ua230\ua231\ua232\ua233\ua234\ua235\ua236\ua237\ua238\ua239\ua23a\ua23b\ua23c\ua23d\ua23e\ua23f\ua240\ua241\ua242\ua243\ua244\ua245\ua246\ua247\ua248\ua249\ua24a\ua24b\ua24c\ua24d\ua24e\ua24f\ua250\ua251\ua252\ua253\ua254\ua255\ua256\ua257\ua258\ua259\ua25a\ua25b\ua25c\ua25d\ua25e\ua25f\ua260\ua261\ua262\ua263\ua264\ua265\ua266\ua267\ua268\ua269\ua26a\ua26b\ua26c\ua26d\ua26e\ua26f\ua270\ua271\ua272\ua273\ua274\ua275\ua276\ua277\ua278\ua279\ua27a\ua27b\ua27c\ua27d\ua27e\ua27f\ua280\ua281\ua282\ua283\ua284\ua285\ua286\ua287\ua288\ua289\ua28a\ua28b\ua28c\ua28d\ua28e\ua28f\ua290\ua291\ua292\ua293\ua294\ua295\ua296\ua297\ua298\ua299\ua29a\ua29b\ua29c\ua29d\ua29e\ua29f\ua2a0\ua2a1\ua2a2\ua2a3\ua2a4\ua2a5\ua2a6\ua2a7\ua2a8\ua2a9\ua2aa\ua2ab\ua2ac\ua2ad\ua2ae\ua2af\ua2b0\ua2b1\ua2b2\ua2b3\ua2b4\ua2b5\ua2b6\ua2b7\ua2b8\ua2b9\ua2ba\ua2bb\ua2bc\ua2bd\ua2be\ua2bf\ua2c0\ua2c1\ua2c2\ua2c3\ua2c4\ua2c5\ua2c6\ua2c7\ua2c8\ua2c9\ua2ca\ua2cb\ua2cc\ua2cd\ua2ce\ua2cf\ua2d0\ua2d1\ua2d2\ua2d3\ua2d4\ua2d5\ua2d6\ua2d7\ua2d8\ua2d9\ua2da\ua2db\ua2dc\ua2dd\ua2de\ua2df\ua2e0\ua2e1\ua2e2\ua2e3\ua2e4\ua2e5\ua2e6\ua2e7\ua2e8\ua2e9\ua2ea\ua2eb\ua2ec\ua2ed\ua2ee\ua2ef\ua2f0\ua2f1\ua2f2\ua2f3\ua2f4\ua2f5\ua2f6\ua2f7\ua2f8\ua2f9\ua2fa\ua2fb\ua2fc\ua2fd\ua2fe\ua2ff\ua300\ua301\ua302\ua303\ua304\ua305\ua306\ua307\ua308\ua309\ua30a\ua30b\ua30c\ua30d\ua30e\ua30f\ua310\ua311\ua312\ua313\ua314\ua315\ua316\ua317\ua318\ua319\ua31a\ua31b\ua31c\ua31d\ua31e\ua31f\ua320\ua321\ua322\ua323\ua324\ua325\ua326\ua327\ua328\ua329\ua32a\ua32b\ua32c\ua32d\ua32e\ua32f\ua330\ua331\ua332\ua333\ua334\ua335\ua336\ua337\ua338\ua339\ua33a\ua33b\ua33c\ua33d\ua33e\ua33f\ua340\ua341\ua342\ua343\ua344\ua345\ua346\ua347\ua348\ua349\ua34a\ua34b\ua34c\ua34d\ua34e\ua34f\ua350\ua351\ua352\ua353\ua354\ua355\ua356\ua357\ua358\ua359\ua35a\ua35b\ua35c\ua35d\ua35e\ua35f\ua360\ua361\ua362\ua363\ua364\ua365\ua366\ua367\ua368\ua369\ua36a\ua36b\ua36c\ua36d\ua36e\ua36f\ua370\ua371\ua372\ua373\ua374\ua375\ua376\ua377\ua378\ua379\ua37a\ua37b\ua37c\ua37d\ua37e\ua37f\ua380\ua381\ua382\ua383\ua384\ua385\ua386\ua387\ua388\ua389\ua38a\ua38b\ua38c\ua38d\ua38e\ua38f\ua390\ua391\ua392\ua393\ua394\ua395\ua396\ua397\ua398\ua399\ua39a\ua39b\ua39c\ua39d\ua39e\ua39f\ua3a0\ua3a1\ua3a2\ua3a3\ua3a4\ua3a5\ua3a6\ua3a7\ua3a8\ua3a9\ua3aa\ua3ab\ua3ac\ua3ad\ua3ae\ua3af\ua3b0\ua3b1\ua3b2\ua3b3\ua3b4\ua3b5\ua3b6\ua3b7\ua3b8\ua3b9\ua3ba\ua3bb\ua3bc\ua3bd\ua3be\ua3bf\ua3c0\ua3c1\ua3c2\ua3c3\ua3c4\ua3c5\ua3c6\ua3c7\ua3c8\ua3c9\ua3ca\ua3cb\ua3cc\ua3cd\ua3ce\ua3cf\ua3d0\ua3d1\ua3d2\ua3d3\ua3d4\ua3d5\ua3d6\ua3d7\ua3d8\ua3d9\ua3da\ua3db\ua3dc\ua3dd\ua3de\ua3df\ua3e0\ua3e1\ua3e2\ua3e3\ua3e4\ua3e5\ua3e6\ua3e7\ua3e8\ua3e9\ua3ea\ua3eb\ua3ec\ua3ed\ua3ee\ua3ef\ua3f0\ua3f1\ua3f2\ua3f3\ua3f4\ua3f5\ua3f6\ua3f7\ua3f8\ua3f9\ua3fa\ua3fb\ua3fc\ua3fd\ua3fe\ua3ff\ua400\ua401\ua402\ua403\ua404\ua405\ua406\ua407\ua408\ua409\ua40a\ua40b\ua40c\ua40d\ua40e\ua40f\ua410\ua411\ua412\ua413\ua414\ua415\ua416\ua417\ua418\ua419\ua41a\ua41b\ua41c\ua41d\ua41e\ua41f\ua420\ua421\ua422\ua423\ua424\ua425\ua426\ua427\ua428\ua429\ua42a\ua42b\ua42c\ua42d\ua42e\ua42f\ua430\ua431\ua432\ua433\ua434\ua435\ua436\ua437\ua438\ua439\ua43a\ua43b\ua43c\ua43d\ua43e\ua43f\ua440\ua441\ua442\ua443\ua444\ua445\ua446\ua447\ua448\ua449\ua44a\ua44b\ua44c\ua44d\ua44e\ua44f\ua450\ua451\ua452\ua453\ua454\ua455\ua456\ua457\ua458\ua459\ua45a\ua45b\ua45c\ua45d\ua45e\ua45f\ua460\ua461\ua462\ua463\ua464\ua465\ua466\ua467\ua468\ua469\ua46a\ua46b\ua46c\ua46d\ua46e\ua46f\ua470\ua471\ua472\ua473\ua474\ua475\ua476\ua477\ua478\ua479\ua47a\ua47b\ua47c\ua47d\ua47e\ua47f\ua480\ua481\ua482\ua483\ua484\ua485\ua486\ua487\ua488\ua489\ua48a\ua48b\ua48c\ua800\ua801\ua803\ua804\ua805\ua807\ua808\ua809\ua80a\ua80c\ua80d\ua80e\ua80f\ua810\ua811\ua812\ua813\ua814\ua815\ua816\ua817\ua818\ua819\ua81a\ua81b\ua81c\ua81d\ua81e\ua81f\ua820\ua821\ua822\uac00\uac01\uac02\uac03\uac04\uac05\uac06\uac07\uac08\uac09\uac0a\uac0b\uac0c\uac0d\uac0e\uac0f\uac10\uac11\uac12\uac13\uac14\uac15\uac16\uac17\uac18\uac19\uac1a\uac1b\uac1c\uac1d\uac1e\uac1f\uac20\uac21\uac22\uac23\uac24\uac25\uac26\uac27\uac28\uac29\uac2a\uac2b\uac2c\uac2d\uac2e\uac2f\uac30\uac31\uac32\uac33\uac34\uac35\uac36\uac37\uac38\uac39\uac3a\uac3b\uac3c\uac3d\uac3e\uac3f\uac40\uac41\uac42\uac43\uac44\uac45\uac46\uac47\uac48\uac49\uac4a\uac4b\uac4c\uac4d\uac4e\uac4f\uac50\uac51\uac52\uac53\uac54\uac55\uac56\uac57\uac58\uac59\uac5a\uac5b\uac5c\uac5d\uac5e\uac5f\uac60\uac61\uac62\uac63\uac64\uac65\uac66\uac67\uac68\uac69\uac6a\uac6b\uac6c\uac6d\uac6e\uac6f\uac70\uac71\uac72\uac73\uac74\uac75\uac76\uac77\uac78\uac79\uac7a\uac7b\uac7c\uac7d\uac7e\uac7f\uac80\uac81\uac82\uac83\uac84\uac85\uac86\uac87\uac88\uac89\uac8a\uac8b\uac8c\uac8d\uac8e\uac8f\uac90\uac91\uac92\uac93\uac94\uac95\uac96\uac97\uac98\uac99\uac9a\uac9b\uac9c\uac9d\uac9e\uac9f\uaca0\uaca1\uaca2\uaca3\uaca4\uaca5\uaca6\uaca7\uaca8\uaca9\uacaa\uacab\uacac\uacad\uacae\uacaf\uacb0\uacb1\uacb2\uacb3\uacb4\uacb5\uacb6\uacb7\uacb8\uacb9\uacba\uacbb\uacbc\uacbd\uacbe\uacbf\uacc0\uacc1\uacc2\uacc3\uacc4\uacc5\uacc6\uacc7\uacc8\uacc9\uacca\uaccb\uaccc\uaccd\uacce\uaccf\uacd0\uacd1\uacd2\uacd3\uacd4\uacd5\uacd6\uacd7\uacd8\uacd9\uacda\uacdb\uacdc\uacdd\uacde\uacdf\uace0\uace1\uace2\uace3\uace4\uace5\uace6\uace7\uace8\uace9\uacea\uaceb\uacec\uaced\uacee\uacef\uacf0\uacf1\uacf2\uacf3\uacf4\uacf5\uacf6\uacf7\uacf8\uacf9\uacfa\uacfb\uacfc\uacfd\uacfe\uacff\uad00\uad01\uad02\uad03\uad04\uad05\uad06\uad07\uad08\uad09\uad0a\uad0b\uad0c\uad0d\uad0e\uad0f\uad10\uad11\uad12\uad13\uad14\uad15\uad16\uad17\uad18\uad19\uad1a\uad1b\uad1c\uad1d\uad1e\uad1f\uad20\uad21\uad22\uad23\uad24\uad25\uad26\uad27\uad28\uad29\uad2a\uad2b\uad2c\uad2d\uad2e\uad2f\uad30\uad31\uad32\uad33\uad34\uad35\uad36\uad37\uad38\uad39\uad3a\uad3b\uad3c\uad3d\uad3e\uad3f\uad40\uad41\uad42\uad43\uad44\uad45\uad46\uad47\uad48\uad49\uad4a\uad4b\uad4c\uad4d\uad4e\uad4f\uad50\uad51\uad52\uad53\uad54\uad55\uad56\uad57\uad58\uad59\uad5a\uad5b\uad5c\uad5d\uad5e\uad5f\uad60\uad61\uad62\uad63\uad64\uad65\uad66\uad67\uad68\uad69\uad6a\uad6b\uad6c\uad6d\uad6e\uad6f\uad70\uad71\uad72\uad73\uad74\uad75\uad76\uad77\uad78\uad79\uad7a\uad7b\uad7c\uad7d\uad7e\uad7f\uad80\uad81\uad82\uad83\uad84\uad85\uad86\uad87\uad88\uad89\uad8a\uad8b\uad8c\uad8d\uad8e\uad8f\uad90\uad91\uad92\uad93\uad94\uad95\uad96\uad97\uad98\uad99\uad9a\uad9b\uad9c\uad9d\uad9e\uad9f\uada0\uada1\uada2\uada3\uada4\uada5\uada6\uada7\uada8\uada9\uadaa\uadab\uadac\uadad\uadae\uadaf\uadb0\uadb1\uadb2\uadb3\uadb4\uadb5\uadb6\uadb7\uadb8\uadb9\uadba\uadbb\uadbc\uadbd\uadbe\uadbf\uadc0\uadc1\uadc2\uadc3\uadc4\uadc5\uadc6\uadc7\uadc8\uadc9\uadca\uadcb\uadcc\uadcd\uadce\uadcf\uadd0\uadd1\uadd2\uadd3\uadd4\uadd5\uadd6\uadd7\uadd8\uadd9\uadda\uaddb\uaddc\uaddd\uadde\uaddf\uade0\uade1\uade2\uade3\uade4\uade5\uade6\uade7\uade8\uade9\uadea\uadeb\uadec\uaded\uadee\uadef\uadf0\uadf1\uadf2\uadf3\uadf4\uadf5\uadf6\uadf7\uadf8\uadf9\uadfa\uadfb\uadfc\uadfd\uadfe\uadff\uae00\uae01\uae02\uae03\uae04\uae05\uae06\uae07\uae08\uae09\uae0a\uae0b\uae0c\uae0d\uae0e\uae0f\uae10\uae11\uae12\uae13\uae14\uae15\uae16\uae17\uae18\uae19\uae1a\uae1b\uae1c\uae1d\uae1e\uae1f\uae20\uae21\uae22\uae23\uae24\uae25\uae26\uae27\uae28\uae29\uae2a\uae2b\uae2c\uae2d\uae2e\uae2f\uae30\uae31\uae32\uae33\uae34\uae35\uae36\uae37\uae38\uae39\uae3a\uae3b\uae3c\uae3d\uae3e\uae3f\uae40\uae41\uae42\uae43\uae44\uae45\uae46\uae47\uae48\uae49\uae4a\uae4b\uae4c\uae4d\uae4e\uae4f\uae50\uae51\uae52\uae53\uae54\uae55\uae56\uae57\uae58\uae59\uae5a\uae5b\uae5c\uae5d\uae5e\uae5f\uae60\uae61\uae62\uae63\uae64\uae65\uae66\uae67\uae68\uae69\uae6a\uae6b\uae6c\uae6d\uae6e\uae6f\uae70\uae71\uae72\uae73\uae74\uae75\uae76\uae77\uae78\uae79\uae7a\uae7b\uae7c\uae7d\uae7e\uae7f\uae80\uae81\uae82\uae83\uae84\uae85\uae86\uae87\uae88\uae89\uae8a\uae8b\uae8c\uae8d\uae8e\uae8f\uae90\uae91\uae92\uae93\uae94\uae95\uae96\uae97\uae98\uae99\uae9a\uae9b\uae9c\uae9d\uae9e\uae9f\uaea0\uaea1\uaea2\uaea3\uaea4\uaea5\uaea6\uaea7\uaea8\uaea9\uaeaa\uaeab\uaeac\uaead\uaeae\uaeaf\uaeb0\uaeb1\uaeb2\uaeb3\uaeb4\uaeb5\uaeb6\uaeb7\uaeb8\uaeb9\uaeba\uaebb\uaebc\uaebd\uaebe\uaebf\uaec0\uaec1\uaec2\uaec3\uaec4\uaec5\uaec6\uaec7\uaec8\uaec9\uaeca\uaecb\uaecc\uaecd\uaece\uaecf\uaed0\uaed1\uaed2\uaed3\uaed4\uaed5\uaed6\uaed7\uaed8\uaed9\uaeda\uaedb\uaedc\uaedd\uaede\uaedf\uaee0\uaee1\uaee2\uaee3\uaee4\uaee5\uaee6\uaee7\uaee8\uaee9\uaeea\uaeeb\uaeec\uaeed\uaeee\uaeef\uaef0\uaef1\uaef2\uaef3\uaef4\uaef5\uaef6\uaef7\uaef8\uaef9\uaefa\uaefb\uaefc\uaefd\uaefe\uaeff\uaf00\uaf01\uaf02\uaf03\uaf04\uaf05\uaf06\uaf07\uaf08\uaf09\uaf0a\uaf0b\uaf0c\uaf0d\uaf0e\uaf0f\uaf10\uaf11\uaf12\uaf13\uaf14\uaf15\uaf16\uaf17\uaf18\uaf19\uaf1a\uaf1b\uaf1c\uaf1d\uaf1e\uaf1f\uaf20\uaf21\uaf22\uaf23\uaf24\uaf25\uaf26\uaf27\uaf28\uaf29\uaf2a\uaf2b\uaf2c\uaf2d\uaf2e\uaf2f\uaf30\uaf31\uaf32\uaf33\uaf34\uaf35\uaf36\uaf37\uaf38\uaf39\uaf3a\uaf3b\uaf3c\uaf3d\uaf3e\uaf3f\uaf40\uaf41\uaf42\uaf43\uaf44\uaf45\uaf46\uaf47\uaf48\uaf49\uaf4a\uaf4b\uaf4c\uaf4d\uaf4e\uaf4f\uaf50\uaf51\uaf52\uaf53\uaf54\uaf55\uaf56\uaf57\uaf58\uaf59\uaf5a\uaf5b\uaf5c\uaf5d\uaf5e\uaf5f\uaf60\uaf61\uaf62\uaf63\uaf64\uaf65\uaf66\uaf67\uaf68\uaf69\uaf6a\uaf6b\uaf6c\uaf6d\uaf6e\uaf6f\uaf70\uaf71\uaf72\uaf73\uaf74\uaf75\uaf76\uaf77\uaf78\uaf79\uaf7a\uaf7b\uaf7c\uaf7d\uaf7e\uaf7f\uaf80\uaf81\uaf82\uaf83\uaf84\uaf85\uaf86\uaf87\uaf88\uaf89\uaf8a\uaf8b\uaf8c\uaf8d\uaf8e\uaf8f\uaf90\uaf91\uaf92\uaf93\uaf94\uaf95\uaf96\uaf97\uaf98\uaf99\uaf9a\uaf9b\uaf9c\uaf9d\uaf9e\uaf9f\uafa0\uafa1\uafa2\uafa3\uafa4\uafa5\uafa6\uafa7\uafa8\uafa9\uafaa\uafab\uafac\uafad\uafae\uafaf\uafb0\uafb1\uafb2\uafb3\uafb4\uafb5\uafb6\uafb7\uafb8\uafb9\uafba\uafbb\uafbc\uafbd\uafbe\uafbf\uafc0\uafc1\uafc2\uafc3\uafc4\uafc5\uafc6\uafc7\uafc8\uafc9\uafca\uafcb\uafcc\uafcd\uafce\uafcf\uafd0\uafd1\uafd2\uafd3\uafd4\uafd5\uafd6\uafd7\uafd8\uafd9\uafda\uafdb\uafdc\uafdd\uafde\uafdf\uafe0\uafe1\uafe2\uafe3\uafe4\uafe5\uafe6\uafe7\uafe8\uafe9\uafea\uafeb\uafec\uafed\uafee\uafef\uaff0\uaff1\uaff2\uaff3\uaff4\uaff5\uaff6\uaff7\uaff8\uaff9\uaffa\uaffb\uaffc\uaffd\uaffe\uafff\ub000\ub001\ub002\ub003\ub004\ub005\ub006\ub007\ub008\ub009\ub00a\ub00b\ub00c\ub00d\ub00e\ub00f\ub010\ub011\ub012\ub013\ub014\ub015\ub016\ub017\ub018\ub019\ub01a\ub01b\ub01c\ub01d\ub01e\ub01f\ub020\ub021\ub022\ub023\ub024\ub025\ub026\ub027\ub028\ub029\ub02a\ub02b\ub02c\ub02d\ub02e\ub02f\ub030\ub031\ub032\ub033\ub034\ub035\ub036\ub037\ub038\ub039\ub03a\ub03b\ub03c\ub03d\ub03e\ub03f\ub040\ub041\ub042\ub043\ub044\ub045\ub046\ub047\ub048\ub049\ub04a\ub04b\ub04c\ub04d\ub04e\ub04f\ub050\ub051\ub052\ub053\ub054\ub055\ub056\ub057\ub058\ub059\ub05a\ub05b\ub05c\ub05d\ub05e\ub05f\ub060\ub061\ub062\ub063\ub064\ub065\ub066\ub067\ub068\ub069\ub06a\ub06b\ub06c\ub06d\ub06e\ub06f\ub070\ub071\ub072\ub073\ub074\ub075\ub076\ub077\ub078\ub079\ub07a\ub07b\ub07c\ub07d\ub07e\ub07f\ub080\ub081\ub082\ub083\ub084\ub085\ub086\ub087\ub088\ub089\ub08a\ub08b\ub08c\ub08d\ub08e\ub08f\ub090\ub091\ub092\ub093\ub094\ub095\ub096\ub097\ub098\ub099\ub09a\ub09b\ub09c\ub09d\ub09e\ub09f\ub0a0\ub0a1\ub0a2\ub0a3\ub0a4\ub0a5\ub0a6\ub0a7\ub0a8\ub0a9\ub0aa\ub0ab\ub0ac\ub0ad\ub0ae\ub0af\ub0b0\ub0b1\ub0b2\ub0b3\ub0b4\ub0b5\ub0b6\ub0b7\ub0b8\ub0b9\ub0ba\ub0bb\ub0bc\ub0bd\ub0be\ub0bf\ub0c0\ub0c1\ub0c2\ub0c3\ub0c4\ub0c5\ub0c6\ub0c7\ub0c8\ub0c9\ub0ca\ub0cb\ub0cc\ub0cd\ub0ce\ub0cf\ub0d0\ub0d1\ub0d2\ub0d3\ub0d4\ub0d5\ub0d6\ub0d7\ub0d8\ub0d9\ub0da\ub0db\ub0dc\ub0dd\ub0de\ub0df\ub0e0\ub0e1\ub0e2\ub0e3\ub0e4\ub0e5\ub0e6\ub0e7\ub0e8\ub0e9\ub0ea\ub0eb\ub0ec\ub0ed\ub0ee\ub0ef\ub0f0\ub0f1\ub0f2\ub0f3\ub0f4\ub0f5\ub0f6\ub0f7\ub0f8\ub0f9\ub0fa\ub0fb\ub0fc\ub0fd\ub0fe\ub0ff\ub100\ub101\ub102\ub103\ub104\ub105\ub106\ub107\ub108\ub109\ub10a\ub10b\ub10c\ub10d\ub10e\ub10f\ub110\ub111\ub112\ub113\ub114\ub115\ub116\ub117\ub118\ub119\ub11a\ub11b\ub11c\ub11d\ub11e\ub11f\ub120\ub121\ub122\ub123\ub124\ub125\ub126\ub127\ub128\ub129\ub12a\ub12b\ub12c\ub12d\ub12e\ub12f\ub130\ub131\ub132\ub133\ub134\ub135\ub136\ub137\ub138\ub139\ub13a\ub13b\ub13c\ub13d\ub13e\ub13f\ub140\ub141\ub142\ub143\ub144\ub145\ub146\ub147\ub148\ub149\ub14a\ub14b\ub14c\ub14d\ub14e\ub14f\ub150\ub151\ub152\ub153\ub154\ub155\ub156\ub157\ub158\ub159\ub15a\ub15b\ub15c\ub15d\ub15e\ub15f\ub160\ub161\ub162\ub163\ub164\ub165\ub166\ub167\ub168\ub169\ub16a\ub16b\ub16c\ub16d\ub16e\ub16f\ub170\ub171\ub172\ub173\ub174\ub175\ub176\ub177\ub178\ub179\ub17a\ub17b\ub17c\ub17d\ub17e\ub17f\ub180\ub181\ub182\ub183\ub184\ub185\ub186\ub187\ub188\ub189\ub18a\ub18b\ub18c\ub18d\ub18e\ub18f\ub190\ub191\ub192\ub193\ub194\ub195\ub196\ub197\ub198\ub199\ub19a\ub19b\ub19c\ub19d\ub19e\ub19f\ub1a0\ub1a1\ub1a2\ub1a3\ub1a4\ub1a5\ub1a6\ub1a7\ub1a8\ub1a9\ub1aa\ub1ab\ub1ac\ub1ad\ub1ae\ub1af\ub1b0\ub1b1\ub1b2\ub1b3\ub1b4\ub1b5\ub1b6\ub1b7\ub1b8\ub1b9\ub1ba\ub1bb\ub1bc\ub1bd\ub1be\ub1bf\ub1c0\ub1c1\ub1c2\ub1c3\ub1c4\ub1c5\ub1c6\ub1c7\ub1c8\ub1c9\ub1ca\ub1cb\ub1cc\ub1cd\ub1ce\ub1cf\ub1d0\ub1d1\ub1d2\ub1d3\ub1d4\ub1d5\ub1d6\ub1d7\ub1d8\ub1d9\ub1da\ub1db\ub1dc\ub1dd\ub1de\ub1df\ub1e0\ub1e1\ub1e2\ub1e3\ub1e4\ub1e5\ub1e6\ub1e7\ub1e8\ub1e9\ub1ea\ub1eb\ub1ec\ub1ed\ub1ee\ub1ef\ub1f0\ub1f1\ub1f2\ub1f3\ub1f4\ub1f5\ub1f6\ub1f7\ub1f8\ub1f9\ub1fa\ub1fb\ub1fc\ub1fd\ub1fe\ub1ff\ub200\ub201\ub202\ub203\ub204\ub205\ub206\ub207\ub208\ub209\ub20a\ub20b\ub20c\ub20d\ub20e\ub20f\ub210\ub211\ub212\ub213\ub214\ub215\ub216\ub217\ub218\ub219\ub21a\ub21b\ub21c\ub21d\ub21e\ub21f\ub220\ub221\ub222\ub223\ub224\ub225\ub226\ub227\ub228\ub229\ub22a\ub22b\ub22c\ub22d\ub22e\ub22f\ub230\ub231\ub232\ub233\ub234\ub235\ub236\ub237\ub238\ub239\ub23a\ub23b\ub23c\ub23d\ub23e\ub23f\ub240\ub241\ub242\ub243\ub244\ub245\ub246\ub247\ub248\ub249\ub24a\ub24b\ub24c\ub24d\ub24e\ub24f\ub250\ub251\ub252\ub253\ub254\ub255\ub256\ub257\ub258\ub259\ub25a\ub25b\ub25c\ub25d\ub25e\ub25f\ub260\ub261\ub262\ub263\ub264\ub265\ub266\ub267\ub268\ub269\ub26a\ub26b\ub26c\ub26d\ub26e\ub26f\ub270\ub271\ub272\ub273\ub274\ub275\ub276\ub277\ub278\ub279\ub27a\ub27b\ub27c\ub27d\ub27e\ub27f\ub280\ub281\ub282\ub283\ub284\ub285\ub286\ub287\ub288\ub289\ub28a\ub28b\ub28c\ub28d\ub28e\ub28f\ub290\ub291\ub292\ub293\ub294\ub295\ub296\ub297\ub298\ub299\ub29a\ub29b\ub29c\ub29d\ub29e\ub29f\ub2a0\ub2a1\ub2a2\ub2a3\ub2a4\ub2a5\ub2a6\ub2a7\ub2a8\ub2a9\ub2aa\ub2ab\ub2ac\ub2ad\ub2ae\ub2af\ub2b0\ub2b1\ub2b2\ub2b3\ub2b4\ub2b5\ub2b6\ub2b7\ub2b8\ub2b9\ub2ba\ub2bb\ub2bc\ub2bd\ub2be\ub2bf\ub2c0\ub2c1\ub2c2\ub2c3\ub2c4\ub2c5\ub2c6\ub2c7\ub2c8\ub2c9\ub2ca\ub2cb\ub2cc\ub2cd\ub2ce\ub2cf\ub2d0\ub2d1\ub2d2\ub2d3\ub2d4\ub2d5\ub2d6\ub2d7\ub2d8\ub2d9\ub2da\ub2db\ub2dc\ub2dd\ub2de\ub2df\ub2e0\ub2e1\ub2e2\ub2e3\ub2e4\ub2e5\ub2e6\ub2e7\ub2e8\ub2e9\ub2ea\ub2eb\ub2ec\ub2ed\ub2ee\ub2ef\ub2f0\ub2f1\ub2f2\ub2f3\ub2f4\ub2f5\ub2f6\ub2f7\ub2f8\ub2f9\ub2fa\ub2fb\ub2fc\ub2fd\ub2fe\ub2ff\ub300\ub301\ub302\ub303\ub304\ub305\ub306\ub307\ub308\ub309\ub30a\ub30b\ub30c\ub30d\ub30e\ub30f\ub310\ub311\ub312\ub313\ub314\ub315\ub316\ub317\ub318\ub319\ub31a\ub31b\ub31c\ub31d\ub31e\ub31f\ub320\ub321\ub322\ub323\ub324\ub325\ub326\ub327\ub328\ub329\ub32a\ub32b\ub32c\ub32d\ub32e\ub32f\ub330\ub331\ub332\ub333\ub334\ub335\ub336\ub337\ub338\ub339\ub33a\ub33b\ub33c\ub33d\ub33e\ub33f\ub340\ub341\ub342\ub343\ub344\ub345\ub346\ub347\ub348\ub349\ub34a\ub34b\ub34c\ub34d\ub34e\ub34f\ub350\ub351\ub352\ub353\ub354\ub355\ub356\ub357\ub358\ub359\ub35a\ub35b\ub35c\ub35d\ub35e\ub35f\ub360\ub361\ub362\ub363\ub364\ub365\ub366\ub367\ub368\ub369\ub36a\ub36b\ub36c\ub36d\ub36e\ub36f\ub370\ub371\ub372\ub373\ub374\ub375\ub376\ub377\ub378\ub379\ub37a\ub37b\ub37c\ub37d\ub37e\ub37f\ub380\ub381\ub382\ub383\ub384\ub385\ub386\ub387\ub388\ub389\ub38a\ub38b\ub38c\ub38d\ub38e\ub38f\ub390\ub391\ub392\ub393\ub394\ub395\ub396\ub397\ub398\ub399\ub39a\ub39b\ub39c\ub39d\ub39e\ub39f\ub3a0\ub3a1\ub3a2\ub3a3\ub3a4\ub3a5\ub3a6\ub3a7\ub3a8\ub3a9\ub3aa\ub3ab\ub3ac\ub3ad\ub3ae\ub3af\ub3b0\ub3b1\ub3b2\ub3b3\ub3b4\ub3b5\ub3b6\ub3b7\ub3b8\ub3b9\ub3ba\ub3bb\ub3bc\ub3bd\ub3be\ub3bf\ub3c0\ub3c1\ub3c2\ub3c3\ub3c4\ub3c5\ub3c6\ub3c7\ub3c8\ub3c9\ub3ca\ub3cb\ub3cc\ub3cd\ub3ce\ub3cf\ub3d0\ub3d1\ub3d2\ub3d3\ub3d4\ub3d5\ub3d6\ub3d7\ub3d8\ub3d9\ub3da\ub3db\ub3dc\ub3dd\ub3de\ub3df\ub3e0\ub3e1\ub3e2\ub3e3\ub3e4\ub3e5\ub3e6\ub3e7\ub3e8\ub3e9\ub3ea\ub3eb\ub3ec\ub3ed\ub3ee\ub3ef\ub3f0\ub3f1\ub3f2\ub3f3\ub3f4\ub3f5\ub3f6\ub3f7\ub3f8\ub3f9\ub3fa\ub3fb\ub3fc\ub3fd\ub3fe\ub3ff\ub400\ub401\ub402\ub403\ub404\ub405\ub406\ub407\ub408\ub409\ub40a\ub40b\ub40c\ub40d\ub40e\ub40f\ub410\ub411\ub412\ub413\ub414\ub415\ub416\ub417\ub418\ub419\ub41a\ub41b\ub41c\ub41d\ub41e\ub41f\ub420\ub421\ub422\ub423\ub424\ub425\ub426\ub427\ub428\ub429\ub42a\ub42b\ub42c\ub42d\ub42e\ub42f\ub430\ub431\ub432\ub433\ub434\ub435\ub436\ub437\ub438\ub439\ub43a\ub43b\ub43c\ub43d\ub43e\ub43f\ub440\ub441\ub442\ub443\ub444\ub445\ub446\ub447\ub448\ub449\ub44a\ub44b\ub44c\ub44d\ub44e\ub44f\ub450\ub451\ub452\ub453\ub454\ub455\ub456\ub457\ub458\ub459\ub45a\ub45b\ub45c\ub45d\ub45e\ub45f\ub460\ub461\ub462\ub463\ub464\ub465\ub466\ub467\ub468\ub469\ub46a\ub46b\ub46c\ub46d\ub46e\ub46f\ub470\ub471\ub472\ub473\ub474\ub475\ub476\ub477\ub478\ub479\ub47a\ub47b\ub47c\ub47d\ub47e\ub47f\ub480\ub481\ub482\ub483\ub484\ub485\ub486\ub487\ub488\ub489\ub48a\ub48b\ub48c\ub48d\ub48e\ub48f\ub490\ub491\ub492\ub493\ub494\ub495\ub496\ub497\ub498\ub499\ub49a\ub49b\ub49c\ub49d\ub49e\ub49f\ub4a0\ub4a1\ub4a2\ub4a3\ub4a4\ub4a5\ub4a6\ub4a7\ub4a8\ub4a9\ub4aa\ub4ab\ub4ac\ub4ad\ub4ae\ub4af\ub4b0\ub4b1\ub4b2\ub4b3\ub4b4\ub4b5\ub4b6\ub4b7\ub4b8\ub4b9\ub4ba\ub4bb\ub4bc\ub4bd\ub4be\ub4bf\ub4c0\ub4c1\ub4c2\ub4c3\ub4c4\ub4c5\ub4c6\ub4c7\ub4c8\ub4c9\ub4ca\ub4cb\ub4cc\ub4cd\ub4ce\ub4cf\ub4d0\ub4d1\ub4d2\ub4d3\ub4d4\ub4d5\ub4d6\ub4d7\ub4d8\ub4d9\ub4da\ub4db\ub4dc\ub4dd\ub4de\ub4df\ub4e0\ub4e1\ub4e2\ub4e3\ub4e4\ub4e5\ub4e6\ub4e7\ub4e8\ub4e9\ub4ea\ub4eb\ub4ec\ub4ed\ub4ee\ub4ef\ub4f0\ub4f1\ub4f2\ub4f3\ub4f4\ub4f5\ub4f6\ub4f7\ub4f8\ub4f9\ub4fa\ub4fb\ub4fc\ub4fd\ub4fe\ub4ff\ub500\ub501\ub502\ub503\ub504\ub505\ub506\ub507\ub508\ub509\ub50a\ub50b\ub50c\ub50d\ub50e\ub50f\ub510\ub511\ub512\ub513\ub514\ub515\ub516\ub517\ub518\ub519\ub51a\ub51b\ub51c\ub51d\ub51e\ub51f\ub520\ub521\ub522\ub523\ub524\ub525\ub526\ub527\ub528\ub529\ub52a\ub52b\ub52c\ub52d\ub52e\ub52f\ub530\ub531\ub532\ub533\ub534\ub535\ub536\ub537\ub538\ub539\ub53a\ub53b\ub53c\ub53d\ub53e\ub53f\ub540\ub541\ub542\ub543\ub544\ub545\ub546\ub547\ub548\ub549\ub54a\ub54b\ub54c\ub54d\ub54e\ub54f\ub550\ub551\ub552\ub553\ub554\ub555\ub556\ub557\ub558\ub559\ub55a\ub55b\ub55c\ub55d\ub55e\ub55f\ub560\ub561\ub562\ub563\ub564\ub565\ub566\ub567\ub568\ub569\ub56a\ub56b\ub56c\ub56d\ub56e\ub56f\ub570\ub571\ub572\ub573\ub574\ub575\ub576\ub577\ub578\ub579\ub57a\ub57b\ub57c\ub57d\ub57e\ub57f\ub580\ub581\ub582\ub583\ub584\ub585\ub586\ub587\ub588\ub589\ub58a\ub58b\ub58c\ub58d\ub58e\ub58f\ub590\ub591\ub592\ub593\ub594\ub595\ub596\ub597\ub598\ub599\ub59a\ub59b\ub59c\ub59d\ub59e\ub59f\ub5a0\ub5a1\ub5a2\ub5a3\ub5a4\ub5a5\ub5a6\ub5a7\ub5a8\ub5a9\ub5aa\ub5ab\ub5ac\ub5ad\ub5ae\ub5af\ub5b0\ub5b1\ub5b2\ub5b3\ub5b4\ub5b5\ub5b6\ub5b7\ub5b8\ub5b9\ub5ba\ub5bb\ub5bc\ub5bd\ub5be\ub5bf\ub5c0\ub5c1\ub5c2\ub5c3\ub5c4\ub5c5\ub5c6\ub5c7\ub5c8\ub5c9\ub5ca\ub5cb\ub5cc\ub5cd\ub5ce\ub5cf\ub5d0\ub5d1\ub5d2\ub5d3\ub5d4\ub5d5\ub5d6\ub5d7\ub5d8\ub5d9\ub5da\ub5db\ub5dc\ub5dd\ub5de\ub5df\ub5e0\ub5e1\ub5e2\ub5e3\ub5e4\ub5e5\ub5e6\ub5e7\ub5e8\ub5e9\ub5ea\ub5eb\ub5ec\ub5ed\ub5ee\ub5ef\ub5f0\ub5f1\ub5f2\ub5f3\ub5f4\ub5f5\ub5f6\ub5f7\ub5f8\ub5f9\ub5fa\ub5fb\ub5fc\ub5fd\ub5fe\ub5ff\ub600\ub601\ub602\ub603\ub604\ub605\ub606\ub607\ub608\ub609\ub60a\ub60b\ub60c\ub60d\ub60e\ub60f\ub610\ub611\ub612\ub613\ub614\ub615\ub616\ub617\ub618\ub619\ub61a\ub61b\ub61c\ub61d\ub61e\ub61f\ub620\ub621\ub622\ub623\ub624\ub625\ub626\ub627\ub628\ub629\ub62a\ub62b\ub62c\ub62d\ub62e\ub62f\ub630\ub631\ub632\ub633\ub634\ub635\ub636\ub637\ub638\ub639\ub63a\ub63b\ub63c\ub63d\ub63e\ub63f\ub640\ub641\ub642\ub643\ub644\ub645\ub646\ub647\ub648\ub649\ub64a\ub64b\ub64c\ub64d\ub64e\ub64f\ub650\ub651\ub652\ub653\ub654\ub655\ub656\ub657\ub658\ub659\ub65a\ub65b\ub65c\ub65d\ub65e\ub65f\ub660\ub661\ub662\ub663\ub664\ub665\ub666\ub667\ub668\ub669\ub66a\ub66b\ub66c\ub66d\ub66e\ub66f\ub670\ub671\ub672\ub673\ub674\ub675\ub676\ub677\ub678\ub679\ub67a\ub67b\ub67c\ub67d\ub67e\ub67f\ub680\ub681\ub682\ub683\ub684\ub685\ub686\ub687\ub688\ub689\ub68a\ub68b\ub68c\ub68d\ub68e\ub68f\ub690\ub691\ub692\ub693\ub694\ub695\ub696\ub697\ub698\ub699\ub69a\ub69b\ub69c\ub69d\ub69e\ub69f\ub6a0\ub6a1\ub6a2\ub6a3\ub6a4\ub6a5\ub6a6\ub6a7\ub6a8\ub6a9\ub6aa\ub6ab\ub6ac\ub6ad\ub6ae\ub6af\ub6b0\ub6b1\ub6b2\ub6b3\ub6b4\ub6b5\ub6b6\ub6b7\ub6b8\ub6b9\ub6ba\ub6bb\ub6bc\ub6bd\ub6be\ub6bf\ub6c0\ub6c1\ub6c2\ub6c3\ub6c4\ub6c5\ub6c6\ub6c7\ub6c8\ub6c9\ub6ca\ub6cb\ub6cc\ub6cd\ub6ce\ub6cf\ub6d0\ub6d1\ub6d2\ub6d3\ub6d4\ub6d5\ub6d6\ub6d7\ub6d8\ub6d9\ub6da\ub6db\ub6dc\ub6dd\ub6de\ub6df\ub6e0\ub6e1\ub6e2\ub6e3\ub6e4\ub6e5\ub6e6\ub6e7\ub6e8\ub6e9\ub6ea\ub6eb\ub6ec\ub6ed\ub6ee\ub6ef\ub6f0\ub6f1\ub6f2\ub6f3\ub6f4\ub6f5\ub6f6\ub6f7\ub6f8\ub6f9\ub6fa\ub6fb\ub6fc\ub6fd\ub6fe\ub6ff\ub700\ub701\ub702\ub703\ub704\ub705\ub706\ub707\ub708\ub709\ub70a\ub70b\ub70c\ub70d\ub70e\ub70f\ub710\ub711\ub712\ub713\ub714\ub715\ub716\ub717\ub718\ub719\ub71a\ub71b\ub71c\ub71d\ub71e\ub71f\ub720\ub721\ub722\ub723\ub724\ub725\ub726\ub727\ub728\ub729\ub72a\ub72b\ub72c\ub72d\ub72e\ub72f\ub730\ub731\ub732\ub733\ub734\ub735\ub736\ub737\ub738\ub739\ub73a\ub73b\ub73c\ub73d\ub73e\ub73f\ub740\ub741\ub742\ub743\ub744\ub745\ub746\ub747\ub748\ub749\ub74a\ub74b\ub74c\ub74d\ub74e\ub74f\ub750\ub751\ub752\ub753\ub754\ub755\ub756\ub757\ub758\ub759\ub75a\ub75b\ub75c\ub75d\ub75e\ub75f\ub760\ub761\ub762\ub763\ub764\ub765\ub766\ub767\ub768\ub769\ub76a\ub76b\ub76c\ub76d\ub76e\ub76f\ub770\ub771\ub772\ub773\ub774\ub775\ub776\ub777\ub778\ub779\ub77a\ub77b\ub77c\ub77d\ub77e\ub77f\ub780\ub781\ub782\ub783\ub784\ub785\ub786\ub787\ub788\ub789\ub78a\ub78b\ub78c\ub78d\ub78e\ub78f\ub790\ub791\ub792\ub793\ub794\ub795\ub796\ub797\ub798\ub799\ub79a\ub79b\ub79c\ub79d\ub79e\ub79f\ub7a0\ub7a1\ub7a2\ub7a3\ub7a4\ub7a5\ub7a6\ub7a7\ub7a8\ub7a9\ub7aa\ub7ab\ub7ac\ub7ad\ub7ae\ub7af\ub7b0\ub7b1\ub7b2\ub7b3\ub7b4\ub7b5\ub7b6\ub7b7\ub7b8\ub7b9\ub7ba\ub7bb\ub7bc\ub7bd\ub7be\ub7bf\ub7c0\ub7c1\ub7c2\ub7c3\ub7c4\ub7c5\ub7c6\ub7c7\ub7c8\ub7c9\ub7ca\ub7cb\ub7cc\ub7cd\ub7ce\ub7cf\ub7d0\ub7d1\ub7d2\ub7d3\ub7d4\ub7d5\ub7d6\ub7d7\ub7d8\ub7d9\ub7da\ub7db\ub7dc\ub7dd\ub7de\ub7df\ub7e0\ub7e1\ub7e2\ub7e3\ub7e4\ub7e5\ub7e6\ub7e7\ub7e8\ub7e9\ub7ea\ub7eb\ub7ec\ub7ed\ub7ee\ub7ef\ub7f0\ub7f1\ub7f2\ub7f3\ub7f4\ub7f5\ub7f6\ub7f7\ub7f8\ub7f9\ub7fa\ub7fb\ub7fc\ub7fd\ub7fe\ub7ff\ub800\ub801\ub802\ub803\ub804\ub805\ub806\ub807\ub808\ub809\ub80a\ub80b\ub80c\ub80d\ub80e\ub80f\ub810\ub811\ub812\ub813\ub814\ub815\ub816\ub817\ub818\ub819\ub81a\ub81b\ub81c\ub81d\ub81e\ub81f\ub820\ub821\ub822\ub823\ub824\ub825\ub826\ub827\ub828\ub829\ub82a\ub82b\ub82c\ub82d\ub82e\ub82f\ub830\ub831\ub832\ub833\ub834\ub835\ub836\ub837\ub838\ub839\ub83a\ub83b\ub83c\ub83d\ub83e\ub83f\ub840\ub841\ub842\ub843\ub844\ub845\ub846\ub847\ub848\ub849\ub84a\ub84b\ub84c\ub84d\ub84e\ub84f\ub850\ub851\ub852\ub853\ub854\ub855\ub856\ub857\ub858\ub859\ub85a\ub85b\ub85c\ub85d\ub85e\ub85f\ub860\ub861\ub862\ub863\ub864\ub865\ub866\ub867\ub868\ub869\ub86a\ub86b\ub86c\ub86d\ub86e\ub86f\ub870\ub871\ub872\ub873\ub874\ub875\ub876\ub877\ub878\ub879\ub87a\ub87b\ub87c\ub87d\ub87e\ub87f\ub880\ub881\ub882\ub883\ub884\ub885\ub886\ub887\ub888\ub889\ub88a\ub88b\ub88c\ub88d\ub88e\ub88f\ub890\ub891\ub892\ub893\ub894\ub895\ub896\ub897\ub898\ub899\ub89a\ub89b\ub89c\ub89d\ub89e\ub89f\ub8a0\ub8a1\ub8a2\ub8a3\ub8a4\ub8a5\ub8a6\ub8a7\ub8a8\ub8a9\ub8aa\ub8ab\ub8ac\ub8ad\ub8ae\ub8af\ub8b0\ub8b1\ub8b2\ub8b3\ub8b4\ub8b5\ub8b6\ub8b7\ub8b8\ub8b9\ub8ba\ub8bb\ub8bc\ub8bd\ub8be\ub8bf\ub8c0\ub8c1\ub8c2\ub8c3\ub8c4\ub8c5\ub8c6\ub8c7\ub8c8\ub8c9\ub8ca\ub8cb\ub8cc\ub8cd\ub8ce\ub8cf\ub8d0\ub8d1\ub8d2\ub8d3\ub8d4\ub8d5\ub8d6\ub8d7\ub8d8\ub8d9\ub8da\ub8db\ub8dc\ub8dd\ub8de\ub8df\ub8e0\ub8e1\ub8e2\ub8e3\ub8e4\ub8e5\ub8e6\ub8e7\ub8e8\ub8e9\ub8ea\ub8eb\ub8ec\ub8ed\ub8ee\ub8ef\ub8f0\ub8f1\ub8f2\ub8f3\ub8f4\ub8f5\ub8f6\ub8f7\ub8f8\ub8f9\ub8fa\ub8fb\ub8fc\ub8fd\ub8fe\ub8ff\ub900\ub901\ub902\ub903\ub904\ub905\ub906\ub907\ub908\ub909\ub90a\ub90b\ub90c\ub90d\ub90e\ub90f\ub910\ub911\ub912\ub913\ub914\ub915\ub916\ub917\ub918\ub919\ub91a\ub91b\ub91c\ub91d\ub91e\ub91f\ub920\ub921\ub922\ub923\ub924\ub925\ub926\ub927\ub928\ub929\ub92a\ub92b\ub92c\ub92d\ub92e\ub92f\ub930\ub931\ub932\ub933\ub934\ub935\ub936\ub937\ub938\ub939\ub93a\ub93b\ub93c\ub93d\ub93e\ub93f\ub940\ub941\ub942\ub943\ub944\ub945\ub946\ub947\ub948\ub949\ub94a\ub94b\ub94c\ub94d\ub94e\ub94f\ub950\ub951\ub952\ub953\ub954\ub955\ub956\ub957\ub958\ub959\ub95a\ub95b\ub95c\ub95d\ub95e\ub95f\ub960\ub961\ub962\ub963\ub964\ub965\ub966\ub967\ub968\ub969\ub96a\ub96b\ub96c\ub96d\ub96e\ub96f\ub970\ub971\ub972\ub973\ub974\ub975\ub976\ub977\ub978\ub979\ub97a\ub97b\ub97c\ub97d\ub97e\ub97f\ub980\ub981\ub982\ub983\ub984\ub985\ub986\ub987\ub988\ub989\ub98a\ub98b\ub98c\ub98d\ub98e\ub98f\ub990\ub991\ub992\ub993\ub994\ub995\ub996\ub997\ub998\ub999\ub99a\ub99b\ub99c\ub99d\ub99e\ub99f\ub9a0\ub9a1\ub9a2\ub9a3\ub9a4\ub9a5\ub9a6\ub9a7\ub9a8\ub9a9\ub9aa\ub9ab\ub9ac\ub9ad\ub9ae\ub9af\ub9b0\ub9b1\ub9b2\ub9b3\ub9b4\ub9b5\ub9b6\ub9b7\ub9b8\ub9b9\ub9ba\ub9bb\ub9bc\ub9bd\ub9be\ub9bf\ub9c0\ub9c1\ub9c2\ub9c3\ub9c4\ub9c5\ub9c6\ub9c7\ub9c8\ub9c9\ub9ca\ub9cb\ub9cc\ub9cd\ub9ce\ub9cf\ub9d0\ub9d1\ub9d2\ub9d3\ub9d4\ub9d5\ub9d6\ub9d7\ub9d8\ub9d9\ub9da\ub9db\ub9dc\ub9dd\ub9de\ub9df\ub9e0\ub9e1\ub9e2\ub9e3\ub9e4\ub9e5\ub9e6\ub9e7\ub9e8\ub9e9\ub9ea\ub9eb\ub9ec\ub9ed\ub9ee\ub9ef\ub9f0\ub9f1\ub9f2\ub9f3\ub9f4\ub9f5\ub9f6\ub9f7\ub9f8\ub9f9\ub9fa\ub9fb\ub9fc\ub9fd\ub9fe\ub9ff\uba00\uba01\uba02\uba03\uba04\uba05\uba06\uba07\uba08\uba09\uba0a\uba0b\uba0c\uba0d\uba0e\uba0f\uba10\uba11\uba12\uba13\uba14\uba15\uba16\uba17\uba18\uba19\uba1a\uba1b\uba1c\uba1d\uba1e\uba1f\uba20\uba21\uba22\uba23\uba24\uba25\uba26\uba27\uba28\uba29\uba2a\uba2b\uba2c\uba2d\uba2e\uba2f\uba30\uba31\uba32\uba33\uba34\uba35\uba36\uba37\uba38\uba39\uba3a\uba3b\uba3c\uba3d\uba3e\uba3f\uba40\uba41\uba42\uba43\uba44\uba45\uba46\uba47\uba48\uba49\uba4a\uba4b\uba4c\uba4d\uba4e\uba4f\uba50\uba51\uba52\uba53\uba54\uba55\uba56\uba57\uba58\uba59\uba5a\uba5b\uba5c\uba5d\uba5e\uba5f\uba60\uba61\uba62\uba63\uba64\uba65\uba66\uba67\uba68\uba69\uba6a\uba6b\uba6c\uba6d\uba6e\uba6f\uba70\uba71\uba72\uba73\uba74\uba75\uba76\uba77\uba78\uba79\uba7a\uba7b\uba7c\uba7d\uba7e\uba7f\uba80\uba81\uba82\uba83\uba84\uba85\uba86\uba87\uba88\uba89\uba8a\uba8b\uba8c\uba8d\uba8e\uba8f\uba90\uba91\uba92\uba93\uba94\uba95\uba96\uba97\uba98\uba99\uba9a\uba9b\uba9c\uba9d\uba9e\uba9f\ubaa0\ubaa1\ubaa2\ubaa3\ubaa4\ubaa5\ubaa6\ubaa7\ubaa8\ubaa9\ubaaa\ubaab\ubaac\ubaad\ubaae\ubaaf\ubab0\ubab1\ubab2\ubab3\ubab4\ubab5\ubab6\ubab7\ubab8\ubab9\ubaba\ubabb\ubabc\ubabd\ubabe\ubabf\ubac0\ubac1\ubac2\ubac3\ubac4\ubac5\ubac6\ubac7\ubac8\ubac9\ubaca\ubacb\ubacc\ubacd\ubace\ubacf\ubad0\ubad1\ubad2\ubad3\ubad4\ubad5\ubad6\ubad7\ubad8\ubad9\ubada\ubadb\ubadc\ubadd\ubade\ubadf\ubae0\ubae1\ubae2\ubae3\ubae4\ubae5\ubae6\ubae7\ubae8\ubae9\ubaea\ubaeb\ubaec\ubaed\ubaee\ubaef\ubaf0\ubaf1\ubaf2\ubaf3\ubaf4\ubaf5\ubaf6\ubaf7\ubaf8\ubaf9\ubafa\ubafb\ubafc\ubafd\ubafe\ubaff\ubb00\ubb01\ubb02\ubb03\ubb04\ubb05\ubb06\ubb07\ubb08\ubb09\ubb0a\ubb0b\ubb0c\ubb0d\ubb0e\ubb0f\ubb10\ubb11\ubb12\ubb13\ubb14\ubb15\ubb16\ubb17\ubb18\ubb19\ubb1a\ubb1b\ubb1c\ubb1d\ubb1e\ubb1f\ubb20\ubb21\ubb22\ubb23\ubb24\ubb25\ubb26\ubb27\ubb28\ubb29\ubb2a\ubb2b\ubb2c\ubb2d\ubb2e\ubb2f\ubb30\ubb31\ubb32\ubb33\ubb34\ubb35\ubb36\ubb37\ubb38\ubb39\ubb3a\ubb3b\ubb3c\ubb3d\ubb3e\ubb3f\ubb40\ubb41\ubb42\ubb43\ubb44\ubb45\ubb46\ubb47\ubb48\ubb49\ubb4a\ubb4b\ubb4c\ubb4d\ubb4e\ubb4f\ubb50\ubb51\ubb52\ubb53\ubb54\ubb55\ubb56\ubb57\ubb58\ubb59\ubb5a\ubb5b\ubb5c\ubb5d\ubb5e\ubb5f\ubb60\ubb61\ubb62\ubb63\ubb64\ubb65\ubb66\ubb67\ubb68\ubb69\ubb6a\ubb6b\ubb6c\ubb6d\ubb6e\ubb6f\ubb70\ubb71\ubb72\ubb73\ubb74\ubb75\ubb76\ubb77\ubb78\ubb79\ubb7a\ubb7b\ubb7c\ubb7d\ubb7e\ubb7f\ubb80\ubb81\ubb82\ubb83\ubb84\ubb85\ubb86\ubb87\ubb88\ubb89\ubb8a\ubb8b\ubb8c\ubb8d\ubb8e\ubb8f\ubb90\ubb91\ubb92\ubb93\ubb94\ubb95\ubb96\ubb97\ubb98\ubb99\ubb9a\ubb9b\ubb9c\ubb9d\ubb9e\ubb9f\ubba0\ubba1\ubba2\ubba3\ubba4\ubba5\ubba6\ubba7\ubba8\ubba9\ubbaa\ubbab\ubbac\ubbad\ubbae\ubbaf\ubbb0\ubbb1\ubbb2\ubbb3\ubbb4\ubbb5\ubbb6\ubbb7\ubbb8\ubbb9\ubbba\ubbbb\ubbbc\ubbbd\ubbbe\ubbbf\ubbc0\ubbc1\ubbc2\ubbc3\ubbc4\ubbc5\ubbc6\ubbc7\ubbc8\ubbc9\ubbca\ubbcb\ubbcc\ubbcd\ubbce\ubbcf\ubbd0\ubbd1\ubbd2\ubbd3\ubbd4\ubbd5\ubbd6\ubbd7\ubbd8\ubbd9\ubbda\ubbdb\ubbdc\ubbdd\ubbde\ubbdf\ubbe0\ubbe1\ubbe2\ubbe3\ubbe4\ubbe5\ubbe6\ubbe7\ubbe8\ubbe9\ubbea\ubbeb\ubbec\ubbed\ubbee\ubbef\ubbf0\ubbf1\ubbf2\ubbf3\ubbf4\ubbf5\ubbf6\ubbf7\ubbf8\ubbf9\ubbfa\ubbfb\ubbfc\ubbfd\ubbfe\ubbff\ubc00\ubc01\ubc02\ubc03\ubc04\ubc05\ubc06\ubc07\ubc08\ubc09\ubc0a\ubc0b\ubc0c\ubc0d\ubc0e\ubc0f\ubc10\ubc11\ubc12\ubc13\ubc14\ubc15\ubc16\ubc17\ubc18\ubc19\ubc1a\ubc1b\ubc1c\ubc1d\ubc1e\ubc1f\ubc20\ubc21\ubc22\ubc23\ubc24\ubc25\ubc26\ubc27\ubc28\ubc29\ubc2a\ubc2b\ubc2c\ubc2d\ubc2e\ubc2f\ubc30\ubc31\ubc32\ubc33\ubc34\ubc35\ubc36\ubc37\ubc38\ubc39\ubc3a\ubc3b\ubc3c\ubc3d\ubc3e\ubc3f\ubc40\ubc41\ubc42\ubc43\ubc44\ubc45\ubc46\ubc47\ubc48\ubc49\ubc4a\ubc4b\ubc4c\ubc4d\ubc4e\ubc4f\ubc50\ubc51\ubc52\ubc53\ubc54\ubc55\ubc56\ubc57\ubc58\ubc59\ubc5a\ubc5b\ubc5c\ubc5d\ubc5e\ubc5f\ubc60\ubc61\ubc62\ubc63\ubc64\ubc65\ubc66\ubc67\ubc68\ubc69\ubc6a\ubc6b\ubc6c\ubc6d\ubc6e\ubc6f\ubc70\ubc71\ubc72\ubc73\ubc74\ubc75\ubc76\ubc77\ubc78\ubc79\ubc7a\ubc7b\ubc7c\ubc7d\ubc7e\ubc7f\ubc80\ubc81\ubc82\ubc83\ubc84\ubc85\ubc86\ubc87\ubc88\ubc89\ubc8a\ubc8b\ubc8c\ubc8d\ubc8e\ubc8f\ubc90\ubc91\ubc92\ubc93\ubc94\ubc95\ubc96\ubc97\ubc98\ubc99\ubc9a\ubc9b\ubc9c\ubc9d\ubc9e\ubc9f\ubca0\ubca1\ubca2\ubca3\ubca4\ubca5\ubca6\ubca7\ubca8\ubca9\ubcaa\ubcab\ubcac\ubcad\ubcae\ubcaf\ubcb0\ubcb1\ubcb2\ubcb3\ubcb4\ubcb5\ubcb6\ubcb7\ubcb8\ubcb9\ubcba\ubcbb\ubcbc\ubcbd\ubcbe\ubcbf\ubcc0\ubcc1\ubcc2\ubcc3\ubcc4\ubcc5\ubcc6\ubcc7\ubcc8\ubcc9\ubcca\ubccb\ubccc\ubccd\ubcce\ubccf\ubcd0\ubcd1\ubcd2\ubcd3\ubcd4\ubcd5\ubcd6\ubcd7\ubcd8\ubcd9\ubcda\ubcdb\ubcdc\ubcdd\ubcde\ubcdf\ubce0\ubce1\ubce2\ubce3\ubce4\ubce5\ubce6\ubce7\ubce8\ubce9\ubcea\ubceb\ubcec\ubced\ubcee\ubcef\ubcf0\ubcf1\ubcf2\ubcf3\ubcf4\ubcf5\ubcf6\ubcf7\ubcf8\ubcf9\ubcfa\ubcfb\ubcfc\ubcfd\ubcfe\ubcff\ubd00\ubd01\ubd02\ubd03\ubd04\ubd05\ubd06\ubd07\ubd08\ubd09\ubd0a\ubd0b\ubd0c\ubd0d\ubd0e\ubd0f\ubd10\ubd11\ubd12\ubd13\ubd14\ubd15\ubd16\ubd17\ubd18\ubd19\ubd1a\ubd1b\ubd1c\ubd1d\ubd1e\ubd1f\ubd20\ubd21\ubd22\ubd23\ubd24\ubd25\ubd26\ubd27\ubd28\ubd29\ubd2a\ubd2b\ubd2c\ubd2d\ubd2e\ubd2f\ubd30\ubd31\ubd32\ubd33\ubd34\ubd35\ubd36\ubd37\ubd38\ubd39\ubd3a\ubd3b\ubd3c\ubd3d\ubd3e\ubd3f\ubd40\ubd41\ubd42\ubd43\ubd44\ubd45\ubd46\ubd47\ubd48\ubd49\ubd4a\ubd4b\ubd4c\ubd4d\ubd4e\ubd4f\ubd50\ubd51\ubd52\ubd53\ubd54\ubd55\ubd56\ubd57\ubd58\ubd59\ubd5a\ubd5b\ubd5c\ubd5d\ubd5e\ubd5f\ubd60\ubd61\ubd62\ubd63\ubd64\ubd65\ubd66\ubd67\ubd68\ubd69\ubd6a\ubd6b\ubd6c\ubd6d\ubd6e\ubd6f\ubd70\ubd71\ubd72\ubd73\ubd74\ubd75\ubd76\ubd77\ubd78\ubd79\ubd7a\ubd7b\ubd7c\ubd7d\ubd7e\ubd7f\ubd80\ubd81\ubd82\ubd83\ubd84\ubd85\ubd86\ubd87\ubd88\ubd89\ubd8a\ubd8b\ubd8c\ubd8d\ubd8e\ubd8f\ubd90\ubd91\ubd92\ubd93\ubd94\ubd95\ubd96\ubd97\ubd98\ubd99\ubd9a\ubd9b\ubd9c\ubd9d\ubd9e\ubd9f\ubda0\ubda1\ubda2\ubda3\ubda4\ubda5\ubda6\ubda7\ubda8\ubda9\ubdaa\ubdab\ubdac\ubdad\ubdae\ubdaf\ubdb0\ubdb1\ubdb2\ubdb3\ubdb4\ubdb5\ubdb6\ubdb7\ubdb8\ubdb9\ubdba\ubdbb\ubdbc\ubdbd\ubdbe\ubdbf\ubdc0\ubdc1\ubdc2\ubdc3\ubdc4\ubdc5\ubdc6\ubdc7\ubdc8\ubdc9\ubdca\ubdcb\ubdcc\ubdcd\ubdce\ubdcf\ubdd0\ubdd1\ubdd2\ubdd3\ubdd4\ubdd5\ubdd6\ubdd7\ubdd8\ubdd9\ubdda\ubddb\ubddc\ubddd\ubdde\ubddf\ubde0\ubde1\ubde2\ubde3\ubde4\ubde5\ubde6\ubde7\ubde8\ubde9\ubdea\ubdeb\ubdec\ubded\ubdee\ubdef\ubdf0\ubdf1\ubdf2\ubdf3\ubdf4\ubdf5\ubdf6\ubdf7\ubdf8\ubdf9\ubdfa\ubdfb\ubdfc\ubdfd\ubdfe\ubdff\ube00\ube01\ube02\ube03\ube04\ube05\ube06\ube07\ube08\ube09\ube0a\ube0b\ube0c\ube0d\ube0e\ube0f\ube10\ube11\ube12\ube13\ube14\ube15\ube16\ube17\ube18\ube19\ube1a\ube1b\ube1c\ube1d\ube1e\ube1f\ube20\ube21\ube22\ube23\ube24\ube25\ube26\ube27\ube28\ube29\ube2a\ube2b\ube2c\ube2d\ube2e\ube2f\ube30\ube31\ube32\ube33\ube34\ube35\ube36\ube37\ube38\ube39\ube3a\ube3b\ube3c\ube3d\ube3e\ube3f\ube40\ube41\ube42\ube43\ube44\ube45\ube46\ube47\ube48\ube49\ube4a\ube4b\ube4c\ube4d\ube4e\ube4f\ube50\ube51\ube52\ube53\ube54\ube55\ube56\ube57\ube58\ube59\ube5a\ube5b\ube5c\ube5d\ube5e\ube5f\ube60\ube61\ube62\ube63\ube64\ube65\ube66\ube67\ube68\ube69\ube6a\ube6b\ube6c\ube6d\ube6e\ube6f\ube70\ube71\ube72\ube73\ube74\ube75\ube76\ube77\ube78\ube79\ube7a\ube7b\ube7c\ube7d\ube7e\ube7f\ube80\ube81\ube82\ube83\ube84\ube85\ube86\ube87\ube88\ube89\ube8a\ube8b\ube8c\ube8d\ube8e\ube8f\ube90\ube91\ube92\ube93\ube94\ube95\ube96\ube97\ube98\ube99\ube9a\ube9b\ube9c\ube9d\ube9e\ube9f\ubea0\ubea1\ubea2\ubea3\ubea4\ubea5\ubea6\ubea7\ubea8\ubea9\ubeaa\ubeab\ubeac\ubead\ubeae\ubeaf\ubeb0\ubeb1\ubeb2\ubeb3\ubeb4\ubeb5\ubeb6\ubeb7\ubeb8\ubeb9\ubeba\ubebb\ubebc\ubebd\ubebe\ubebf\ubec0\ubec1\ubec2\ubec3\ubec4\ubec5\ubec6\ubec7\ubec8\ubec9\ubeca\ubecb\ubecc\ubecd\ubece\ubecf\ubed0\ubed1\ubed2\ubed3\ubed4\ubed5\ubed6\ubed7\ubed8\ubed9\ubeda\ubedb\ubedc\ubedd\ubede\ubedf\ubee0\ubee1\ubee2\ubee3\ubee4\ubee5\ubee6\ubee7\ubee8\ubee9\ubeea\ubeeb\ubeec\ubeed\ubeee\ubeef\ubef0\ubef1\ubef2\ubef3\ubef4\ubef5\ubef6\ubef7\ubef8\ubef9\ubefa\ubefb\ubefc\ubefd\ubefe\ubeff\ubf00\ubf01\ubf02\ubf03\ubf04\ubf05\ubf06\ubf07\ubf08\ubf09\ubf0a\ubf0b\ubf0c\ubf0d\ubf0e\ubf0f\ubf10\ubf11\ubf12\ubf13\ubf14\ubf15\ubf16\ubf17\ubf18\ubf19\ubf1a\ubf1b\ubf1c\ubf1d\ubf1e\ubf1f\ubf20\ubf21\ubf22\ubf23\ubf24\ubf25\ubf26\ubf27\ubf28\ubf29\ubf2a\ubf2b\ubf2c\ubf2d\ubf2e\ubf2f\ubf30\ubf31\ubf32\ubf33\ubf34\ubf35\ubf36\ubf37\ubf38\ubf39\ubf3a\ubf3b\ubf3c\ubf3d\ubf3e\ubf3f\ubf40\ubf41\ubf42\ubf43\ubf44\ubf45\ubf46\ubf47\ubf48\ubf49\ubf4a\ubf4b\ubf4c\ubf4d\ubf4e\ubf4f\ubf50\ubf51\ubf52\ubf53\ubf54\ubf55\ubf56\ubf57\ubf58\ubf59\ubf5a\ubf5b\ubf5c\ubf5d\ubf5e\ubf5f\ubf60\ubf61\ubf62\ubf63\ubf64\ubf65\ubf66\ubf67\ubf68\ubf69\ubf6a\ubf6b\ubf6c\ubf6d\ubf6e\ubf6f\ubf70\ubf71\ubf72\ubf73\ubf74\ubf75\ubf76\ubf77\ubf78\ubf79\ubf7a\ubf7b\ubf7c\ubf7d\ubf7e\ubf7f\ubf80\ubf81\ubf82\ubf83\ubf84\ubf85\ubf86\ubf87\ubf88\ubf89\ubf8a\ubf8b\ubf8c\ubf8d\ubf8e\ubf8f\ubf90\ubf91\ubf92\ubf93\ubf94\ubf95\ubf96\ubf97\ubf98\ubf99\ubf9a\ubf9b\ubf9c\ubf9d\ubf9e\ubf9f\ubfa0\ubfa1\ubfa2\ubfa3\ubfa4\ubfa5\ubfa6\ubfa7\ubfa8\ubfa9\ubfaa\ubfab\ubfac\ubfad\ubfae\ubfaf\ubfb0\ubfb1\ubfb2\ubfb3\ubfb4\ubfb5\ubfb6\ubfb7\ubfb8\ubfb9\ubfba\ubfbb\ubfbc\ubfbd\ubfbe\ubfbf\ubfc0\ubfc1\ubfc2\ubfc3\ubfc4\ubfc5\ubfc6\ubfc7\ubfc8\ubfc9\ubfca\ubfcb\ubfcc\ubfcd\ubfce\ubfcf\ubfd0\ubfd1\ubfd2\ubfd3\ubfd4\ubfd5\ubfd6\ubfd7\ubfd8\ubfd9\ubfda\ubfdb\ubfdc\ubfdd\ubfde\ubfdf\ubfe0\ubfe1\ubfe2\ubfe3\ubfe4\ubfe5\ubfe6\ubfe7\ubfe8\ubfe9\ubfea\ubfeb\ubfec\ubfed\ubfee\ubfef\ubff0\ubff1\ubff2\ubff3\ubff4\ubff5\ubff6\ubff7\ubff8\ubff9\ubffa\ubffb\ubffc\ubffd\ubffe\ubfff\uc000\uc001\uc002\uc003\uc004\uc005\uc006\uc007\uc008\uc009\uc00a\uc00b\uc00c\uc00d\uc00e\uc00f\uc010\uc011\uc012\uc013\uc014\uc015\uc016\uc017\uc018\uc019\uc01a\uc01b\uc01c\uc01d\uc01e\uc01f\uc020\uc021\uc022\uc023\uc024\uc025\uc026\uc027\uc028\uc029\uc02a\uc02b\uc02c\uc02d\uc02e\uc02f\uc030\uc031\uc032\uc033\uc034\uc035\uc036\uc037\uc038\uc039\uc03a\uc03b\uc03c\uc03d\uc03e\uc03f\uc040\uc041\uc042\uc043\uc044\uc045\uc046\uc047\uc048\uc049\uc04a\uc04b\uc04c\uc04d\uc04e\uc04f\uc050\uc051\uc052\uc053\uc054\uc055\uc056\uc057\uc058\uc059\uc05a\uc05b\uc05c\uc05d\uc05e\uc05f\uc060\uc061\uc062\uc063\uc064\uc065\uc066\uc067\uc068\uc069\uc06a\uc06b\uc06c\uc06d\uc06e\uc06f\uc070\uc071\uc072\uc073\uc074\uc075\uc076\uc077\uc078\uc079\uc07a\uc07b\uc07c\uc07d\uc07e\uc07f\uc080\uc081\uc082\uc083\uc084\uc085\uc086\uc087\uc088\uc089\uc08a\uc08b\uc08c\uc08d\uc08e\uc08f\uc090\uc091\uc092\uc093\uc094\uc095\uc096\uc097\uc098\uc099\uc09a\uc09b\uc09c\uc09d\uc09e\uc09f\uc0a0\uc0a1\uc0a2\uc0a3\uc0a4\uc0a5\uc0a6\uc0a7\uc0a8\uc0a9\uc0aa\uc0ab\uc0ac\uc0ad\uc0ae\uc0af\uc0b0\uc0b1\uc0b2\uc0b3\uc0b4\uc0b5\uc0b6\uc0b7\uc0b8\uc0b9\uc0ba\uc0bb\uc0bc\uc0bd\uc0be\uc0bf\uc0c0\uc0c1\uc0c2\uc0c3\uc0c4\uc0c5\uc0c6\uc0c7\uc0c8\uc0c9\uc0ca\uc0cb\uc0cc\uc0cd\uc0ce\uc0cf\uc0d0\uc0d1\uc0d2\uc0d3\uc0d4\uc0d5\uc0d6\uc0d7\uc0d8\uc0d9\uc0da\uc0db\uc0dc\uc0dd\uc0de\uc0df\uc0e0\uc0e1\uc0e2\uc0e3\uc0e4\uc0e5\uc0e6\uc0e7\uc0e8\uc0e9\uc0ea\uc0eb\uc0ec\uc0ed\uc0ee\uc0ef\uc0f0\uc0f1\uc0f2\uc0f3\uc0f4\uc0f5\uc0f6\uc0f7\uc0f8\uc0f9\uc0fa\uc0fb\uc0fc\uc0fd\uc0fe\uc0ff\uc100\uc101\uc102\uc103\uc104\uc105\uc106\uc107\uc108\uc109\uc10a\uc10b\uc10c\uc10d\uc10e\uc10f\uc110\uc111\uc112\uc113\uc114\uc115\uc116\uc117\uc118\uc119\uc11a\uc11b\uc11c\uc11d\uc11e\uc11f\uc120\uc121\uc122\uc123\uc124\uc125\uc126\uc127\uc128\uc129\uc12a\uc12b\uc12c\uc12d\uc12e\uc12f\uc130\uc131\uc132\uc133\uc134\uc135\uc136\uc137\uc138\uc139\uc13a\uc13b\uc13c\uc13d\uc13e\uc13f\uc140\uc141\uc142\uc143\uc144\uc145\uc146\uc147\uc148\uc149\uc14a\uc14b\uc14c\uc14d\uc14e\uc14f\uc150\uc151\uc152\uc153\uc154\uc155\uc156\uc157\uc158\uc159\uc15a\uc15b\uc15c\uc15d\uc15e\uc15f\uc160\uc161\uc162\uc163\uc164\uc165\uc166\uc167\uc168\uc169\uc16a\uc16b\uc16c\uc16d\uc16e\uc16f\uc170\uc171\uc172\uc173\uc174\uc175\uc176\uc177\uc178\uc179\uc17a\uc17b\uc17c\uc17d\uc17e\uc17f\uc180\uc181\uc182\uc183\uc184\uc185\uc186\uc187\uc188\uc189\uc18a\uc18b\uc18c\uc18d\uc18e\uc18f\uc190\uc191\uc192\uc193\uc194\uc195\uc196\uc197\uc198\uc199\uc19a\uc19b\uc19c\uc19d\uc19e\uc19f\uc1a0\uc1a1\uc1a2\uc1a3\uc1a4\uc1a5\uc1a6\uc1a7\uc1a8\uc1a9\uc1aa\uc1ab\uc1ac\uc1ad\uc1ae\uc1af\uc1b0\uc1b1\uc1b2\uc1b3\uc1b4\uc1b5\uc1b6\uc1b7\uc1b8\uc1b9\uc1ba\uc1bb\uc1bc\uc1bd\uc1be\uc1bf\uc1c0\uc1c1\uc1c2\uc1c3\uc1c4\uc1c5\uc1c6\uc1c7\uc1c8\uc1c9\uc1ca\uc1cb\uc1cc\uc1cd\uc1ce\uc1cf\uc1d0\uc1d1\uc1d2\uc1d3\uc1d4\uc1d5\uc1d6\uc1d7\uc1d8\uc1d9\uc1da\uc1db\uc1dc\uc1dd\uc1de\uc1df\uc1e0\uc1e1\uc1e2\uc1e3\uc1e4\uc1e5\uc1e6\uc1e7\uc1e8\uc1e9\uc1ea\uc1eb\uc1ec\uc1ed\uc1ee\uc1ef\uc1f0\uc1f1\uc1f2\uc1f3\uc1f4\uc1f5\uc1f6\uc1f7\uc1f8\uc1f9\uc1fa\uc1fb\uc1fc\uc1fd\uc1fe\uc1ff\uc200\uc201\uc202\uc203\uc204\uc205\uc206\uc207\uc208\uc209\uc20a\uc20b\uc20c\uc20d\uc20e\uc20f\uc210\uc211\uc212\uc213\uc214\uc215\uc216\uc217\uc218\uc219\uc21a\uc21b\uc21c\uc21d\uc21e\uc21f\uc220\uc221\uc222\uc223\uc224\uc225\uc226\uc227\uc228\uc229\uc22a\uc22b\uc22c\uc22d\uc22e\uc22f\uc230\uc231\uc232\uc233\uc234\uc235\uc236\uc237\uc238\uc239\uc23a\uc23b\uc23c\uc23d\uc23e\uc23f\uc240\uc241\uc242\uc243\uc244\uc245\uc246\uc247\uc248\uc249\uc24a\uc24b\uc24c\uc24d\uc24e\uc24f\uc250\uc251\uc252\uc253\uc254\uc255\uc256\uc257\uc258\uc259\uc25a\uc25b\uc25c\uc25d\uc25e\uc25f\uc260\uc261\uc262\uc263\uc264\uc265\uc266\uc267\uc268\uc269\uc26a\uc26b\uc26c\uc26d\uc26e\uc26f\uc270\uc271\uc272\uc273\uc274\uc275\uc276\uc277\uc278\uc279\uc27a\uc27b\uc27c\uc27d\uc27e\uc27f\uc280\uc281\uc282\uc283\uc284\uc285\uc286\uc287\uc288\uc289\uc28a\uc28b\uc28c\uc28d\uc28e\uc28f\uc290\uc291\uc292\uc293\uc294\uc295\uc296\uc297\uc298\uc299\uc29a\uc29b\uc29c\uc29d\uc29e\uc29f\uc2a0\uc2a1\uc2a2\uc2a3\uc2a4\uc2a5\uc2a6\uc2a7\uc2a8\uc2a9\uc2aa\uc2ab\uc2ac\uc2ad\uc2ae\uc2af\uc2b0\uc2b1\uc2b2\uc2b3\uc2b4\uc2b5\uc2b6\uc2b7\uc2b8\uc2b9\uc2ba\uc2bb\uc2bc\uc2bd\uc2be\uc2bf\uc2c0\uc2c1\uc2c2\uc2c3\uc2c4\uc2c5\uc2c6\uc2c7\uc2c8\uc2c9\uc2ca\uc2cb\uc2cc\uc2cd\uc2ce\uc2cf\uc2d0\uc2d1\uc2d2\uc2d3\uc2d4\uc2d5\uc2d6\uc2d7\uc2d8\uc2d9\uc2da\uc2db\uc2dc\uc2dd\uc2de\uc2df\uc2e0\uc2e1\uc2e2\uc2e3\uc2e4\uc2e5\uc2e6\uc2e7\uc2e8\uc2e9\uc2ea\uc2eb\uc2ec\uc2ed\uc2ee\uc2ef\uc2f0\uc2f1\uc2f2\uc2f3\uc2f4\uc2f5\uc2f6\uc2f7\uc2f8\uc2f9\uc2fa\uc2fb\uc2fc\uc2fd\uc2fe\uc2ff\uc300\uc301\uc302\uc303\uc304\uc305\uc306\uc307\uc308\uc309\uc30a\uc30b\uc30c\uc30d\uc30e\uc30f\uc310\uc311\uc312\uc313\uc314\uc315\uc316\uc317\uc318\uc319\uc31a\uc31b\uc31c\uc31d\uc31e\uc31f\uc320\uc321\uc322\uc323\uc324\uc325\uc326\uc327\uc328\uc329\uc32a\uc32b\uc32c\uc32d\uc32e\uc32f\uc330\uc331\uc332\uc333\uc334\uc335\uc336\uc337\uc338\uc339\uc33a\uc33b\uc33c\uc33d\uc33e\uc33f\uc340\uc341\uc342\uc343\uc344\uc345\uc346\uc347\uc348\uc349\uc34a\uc34b\uc34c\uc34d\uc34e\uc34f\uc350\uc351\uc352\uc353\uc354\uc355\uc356\uc357\uc358\uc359\uc35a\uc35b\uc35c\uc35d\uc35e\uc35f\uc360\uc361\uc362\uc363\uc364\uc365\uc366\uc367\uc368\uc369\uc36a\uc36b\uc36c\uc36d\uc36e\uc36f\uc370\uc371\uc372\uc373\uc374\uc375\uc376\uc377\uc378\uc379\uc37a\uc37b\uc37c\uc37d\uc37e\uc37f\uc380\uc381\uc382\uc383\uc384\uc385\uc386\uc387\uc388\uc389\uc38a\uc38b\uc38c\uc38d\uc38e\uc38f\uc390\uc391\uc392\uc393\uc394\uc395\uc396\uc397\uc398\uc399\uc39a\uc39b\uc39c\uc39d\uc39e\uc39f\uc3a0\uc3a1\uc3a2\uc3a3\uc3a4\uc3a5\uc3a6\uc3a7\uc3a8\uc3a9\uc3aa\uc3ab\uc3ac\uc3ad\uc3ae\uc3af\uc3b0\uc3b1\uc3b2\uc3b3\uc3b4\uc3b5\uc3b6\uc3b7\uc3b8\uc3b9\uc3ba\uc3bb\uc3bc\uc3bd\uc3be\uc3bf\uc3c0\uc3c1\uc3c2\uc3c3\uc3c4\uc3c5\uc3c6\uc3c7\uc3c8\uc3c9\uc3ca\uc3cb\uc3cc\uc3cd\uc3ce\uc3cf\uc3d0\uc3d1\uc3d2\uc3d3\uc3d4\uc3d5\uc3d6\uc3d7\uc3d8\uc3d9\uc3da\uc3db\uc3dc\uc3dd\uc3de\uc3df\uc3e0\uc3e1\uc3e2\uc3e3\uc3e4\uc3e5\uc3e6\uc3e7\uc3e8\uc3e9\uc3ea\uc3eb\uc3ec\uc3ed\uc3ee\uc3ef\uc3f0\uc3f1\uc3f2\uc3f3\uc3f4\uc3f5\uc3f6\uc3f7\uc3f8\uc3f9\uc3fa\uc3fb\uc3fc\uc3fd\uc3fe\uc3ff\uc400\uc401\uc402\uc403\uc404\uc405\uc406\uc407\uc408\uc409\uc40a\uc40b\uc40c\uc40d\uc40e\uc40f\uc410\uc411\uc412\uc413\uc414\uc415\uc416\uc417\uc418\uc419\uc41a\uc41b\uc41c\uc41d\uc41e\uc41f\uc420\uc421\uc422\uc423\uc424\uc425\uc426\uc427\uc428\uc429\uc42a\uc42b\uc42c\uc42d\uc42e\uc42f\uc430\uc431\uc432\uc433\uc434\uc435\uc436\uc437\uc438\uc439\uc43a\uc43b\uc43c\uc43d\uc43e\uc43f\uc440\uc441\uc442\uc443\uc444\uc445\uc446\uc447\uc448\uc449\uc44a\uc44b\uc44c\uc44d\uc44e\uc44f\uc450\uc451\uc452\uc453\uc454\uc455\uc456\uc457\uc458\uc459\uc45a\uc45b\uc45c\uc45d\uc45e\uc45f\uc460\uc461\uc462\uc463\uc464\uc465\uc466\uc467\uc468\uc469\uc46a\uc46b\uc46c\uc46d\uc46e\uc46f\uc470\uc471\uc472\uc473\uc474\uc475\uc476\uc477\uc478\uc479\uc47a\uc47b\uc47c\uc47d\uc47e\uc47f\uc480\uc481\uc482\uc483\uc484\uc485\uc486\uc487\uc488\uc489\uc48a\uc48b\uc48c\uc48d\uc48e\uc48f\uc490\uc491\uc492\uc493\uc494\uc495\uc496\uc497\uc498\uc499\uc49a\uc49b\uc49c\uc49d\uc49e\uc49f\uc4a0\uc4a1\uc4a2\uc4a3\uc4a4\uc4a5\uc4a6\uc4a7\uc4a8\uc4a9\uc4aa\uc4ab\uc4ac\uc4ad\uc4ae\uc4af\uc4b0\uc4b1\uc4b2\uc4b3\uc4b4\uc4b5\uc4b6\uc4b7\uc4b8\uc4b9\uc4ba\uc4bb\uc4bc\uc4bd\uc4be\uc4bf\uc4c0\uc4c1\uc4c2\uc4c3\uc4c4\uc4c5\uc4c6\uc4c7\uc4c8\uc4c9\uc4ca\uc4cb\uc4cc\uc4cd\uc4ce\uc4cf\uc4d0\uc4d1\uc4d2\uc4d3\uc4d4\uc4d5\uc4d6\uc4d7\uc4d8\uc4d9\uc4da\uc4db\uc4dc\uc4dd\uc4de\uc4df\uc4e0\uc4e1\uc4e2\uc4e3\uc4e4\uc4e5\uc4e6\uc4e7\uc4e8\uc4e9\uc4ea\uc4eb\uc4ec\uc4ed\uc4ee\uc4ef\uc4f0\uc4f1\uc4f2\uc4f3\uc4f4\uc4f5\uc4f6\uc4f7\uc4f8\uc4f9\uc4fa\uc4fb\uc4fc\uc4fd\uc4fe\uc4ff\uc500\uc501\uc502\uc503\uc504\uc505\uc506\uc507\uc508\uc509\uc50a\uc50b\uc50c\uc50d\uc50e\uc50f\uc510\uc511\uc512\uc513\uc514\uc515\uc516\uc517\uc518\uc519\uc51a\uc51b\uc51c\uc51d\uc51e\uc51f\uc520\uc521\uc522\uc523\uc524\uc525\uc526\uc527\uc528\uc529\uc52a\uc52b\uc52c\uc52d\uc52e\uc52f\uc530\uc531\uc532\uc533\uc534\uc535\uc536\uc537\uc538\uc539\uc53a\uc53b\uc53c\uc53d\uc53e\uc53f\uc540\uc541\uc542\uc543\uc544\uc545\uc546\uc547\uc548\uc549\uc54a\uc54b\uc54c\uc54d\uc54e\uc54f\uc550\uc551\uc552\uc553\uc554\uc555\uc556\uc557\uc558\uc559\uc55a\uc55b\uc55c\uc55d\uc55e\uc55f\uc560\uc561\uc562\uc563\uc564\uc565\uc566\uc567\uc568\uc569\uc56a\uc56b\uc56c\uc56d\uc56e\uc56f\uc570\uc571\uc572\uc573\uc574\uc575\uc576\uc577\uc578\uc579\uc57a\uc57b\uc57c\uc57d\uc57e\uc57f\uc580\uc581\uc582\uc583\uc584\uc585\uc586\uc587\uc588\uc589\uc58a\uc58b\uc58c\uc58d\uc58e\uc58f\uc590\uc591\uc592\uc593\uc594\uc595\uc596\uc597\uc598\uc599\uc59a\uc59b\uc59c\uc59d\uc59e\uc59f\uc5a0\uc5a1\uc5a2\uc5a3\uc5a4\uc5a5\uc5a6\uc5a7\uc5a8\uc5a9\uc5aa\uc5ab\uc5ac\uc5ad\uc5ae\uc5af\uc5b0\uc5b1\uc5b2\uc5b3\uc5b4\uc5b5\uc5b6\uc5b7\uc5b8\uc5b9\uc5ba\uc5bb\uc5bc\uc5bd\uc5be\uc5bf\uc5c0\uc5c1\uc5c2\uc5c3\uc5c4\uc5c5\uc5c6\uc5c7\uc5c8\uc5c9\uc5ca\uc5cb\uc5cc\uc5cd\uc5ce\uc5cf\uc5d0\uc5d1\uc5d2\uc5d3\uc5d4\uc5d5\uc5d6\uc5d7\uc5d8\uc5d9\uc5da\uc5db\uc5dc\uc5dd\uc5de\uc5df\uc5e0\uc5e1\uc5e2\uc5e3\uc5e4\uc5e5\uc5e6\uc5e7\uc5e8\uc5e9\uc5ea\uc5eb\uc5ec\uc5ed\uc5ee\uc5ef\uc5f0\uc5f1\uc5f2\uc5f3\uc5f4\uc5f5\uc5f6\uc5f7\uc5f8\uc5f9\uc5fa\uc5fb\uc5fc\uc5fd\uc5fe\uc5ff\uc600\uc601\uc602\uc603\uc604\uc605\uc606\uc607\uc608\uc609\uc60a\uc60b\uc60c\uc60d\uc60e\uc60f\uc610\uc611\uc612\uc613\uc614\uc615\uc616\uc617\uc618\uc619\uc61a\uc61b\uc61c\uc61d\uc61e\uc61f\uc620\uc621\uc622\uc623\uc624\uc625\uc626\uc627\uc628\uc629\uc62a\uc62b\uc62c\uc62d\uc62e\uc62f\uc630\uc631\uc632\uc633\uc634\uc635\uc636\uc637\uc638\uc639\uc63a\uc63b\uc63c\uc63d\uc63e\uc63f\uc640\uc641\uc642\uc643\uc644\uc645\uc646\uc647\uc648\uc649\uc64a\uc64b\uc64c\uc64d\uc64e\uc64f\uc650\uc651\uc652\uc653\uc654\uc655\uc656\uc657\uc658\uc659\uc65a\uc65b\uc65c\uc65d\uc65e\uc65f\uc660\uc661\uc662\uc663\uc664\uc665\uc666\uc667\uc668\uc669\uc66a\uc66b\uc66c\uc66d\uc66e\uc66f\uc670\uc671\uc672\uc673\uc674\uc675\uc676\uc677\uc678\uc679\uc67a\uc67b\uc67c\uc67d\uc67e\uc67f\uc680\uc681\uc682\uc683\uc684\uc685\uc686\uc687\uc688\uc689\uc68a\uc68b\uc68c\uc68d\uc68e\uc68f\uc690\uc691\uc692\uc693\uc694\uc695\uc696\uc697\uc698\uc699\uc69a\uc69b\uc69c\uc69d\uc69e\uc69f\uc6a0\uc6a1\uc6a2\uc6a3\uc6a4\uc6a5\uc6a6\uc6a7\uc6a8\uc6a9\uc6aa\uc6ab\uc6ac\uc6ad\uc6ae\uc6af\uc6b0\uc6b1\uc6b2\uc6b3\uc6b4\uc6b5\uc6b6\uc6b7\uc6b8\uc6b9\uc6ba\uc6bb\uc6bc\uc6bd\uc6be\uc6bf\uc6c0\uc6c1\uc6c2\uc6c3\uc6c4\uc6c5\uc6c6\uc6c7\uc6c8\uc6c9\uc6ca\uc6cb\uc6cc\uc6cd\uc6ce\uc6cf\uc6d0\uc6d1\uc6d2\uc6d3\uc6d4\uc6d5\uc6d6\uc6d7\uc6d8\uc6d9\uc6da\uc6db\uc6dc\uc6dd\uc6de\uc6df\uc6e0\uc6e1\uc6e2\uc6e3\uc6e4\uc6e5\uc6e6\uc6e7\uc6e8\uc6e9\uc6ea\uc6eb\uc6ec\uc6ed\uc6ee\uc6ef\uc6f0\uc6f1\uc6f2\uc6f3\uc6f4\uc6f5\uc6f6\uc6f7\uc6f8\uc6f9\uc6fa\uc6fb\uc6fc\uc6fd\uc6fe\uc6ff\uc700\uc701\uc702\uc703\uc704\uc705\uc706\uc707\uc708\uc709\uc70a\uc70b\uc70c\uc70d\uc70e\uc70f\uc710\uc711\uc712\uc713\uc714\uc715\uc716\uc717\uc718\uc719\uc71a\uc71b\uc71c\uc71d\uc71e\uc71f\uc720\uc721\uc722\uc723\uc724\uc725\uc726\uc727\uc728\uc729\uc72a\uc72b\uc72c\uc72d\uc72e\uc72f\uc730\uc731\uc732\uc733\uc734\uc735\uc736\uc737\uc738\uc739\uc73a\uc73b\uc73c\uc73d\uc73e\uc73f\uc740\uc741\uc742\uc743\uc744\uc745\uc746\uc747\uc748\uc749\uc74a\uc74b\uc74c\uc74d\uc74e\uc74f\uc750\uc751\uc752\uc753\uc754\uc755\uc756\uc757\uc758\uc759\uc75a\uc75b\uc75c\uc75d\uc75e\uc75f\uc760\uc761\uc762\uc763\uc764\uc765\uc766\uc767\uc768\uc769\uc76a\uc76b\uc76c\uc76d\uc76e\uc76f\uc770\uc771\uc772\uc773\uc774\uc775\uc776\uc777\uc778\uc779\uc77a\uc77b\uc77c\uc77d\uc77e\uc77f\uc780\uc781\uc782\uc783\uc784\uc785\uc786\uc787\uc788\uc789\uc78a\uc78b\uc78c\uc78d\uc78e\uc78f\uc790\uc791\uc792\uc793\uc794\uc795\uc796\uc797\uc798\uc799\uc79a\uc79b\uc79c\uc79d\uc79e\uc79f\uc7a0\uc7a1\uc7a2\uc7a3\uc7a4\uc7a5\uc7a6\uc7a7\uc7a8\uc7a9\uc7aa\uc7ab\uc7ac\uc7ad\uc7ae\uc7af\uc7b0\uc7b1\uc7b2\uc7b3\uc7b4\uc7b5\uc7b6\uc7b7\uc7b8\uc7b9\uc7ba\uc7bb\uc7bc\uc7bd\uc7be\uc7bf\uc7c0\uc7c1\uc7c2\uc7c3\uc7c4\uc7c5\uc7c6\uc7c7\uc7c8\uc7c9\uc7ca\uc7cb\uc7cc\uc7cd\uc7ce\uc7cf\uc7d0\uc7d1\uc7d2\uc7d3\uc7d4\uc7d5\uc7d6\uc7d7\uc7d8\uc7d9\uc7da\uc7db\uc7dc\uc7dd\uc7de\uc7df\uc7e0\uc7e1\uc7e2\uc7e3\uc7e4\uc7e5\uc7e6\uc7e7\uc7e8\uc7e9\uc7ea\uc7eb\uc7ec\uc7ed\uc7ee\uc7ef\uc7f0\uc7f1\uc7f2\uc7f3\uc7f4\uc7f5\uc7f6\uc7f7\uc7f8\uc7f9\uc7fa\uc7fb\uc7fc\uc7fd\uc7fe\uc7ff\uc800\uc801\uc802\uc803\uc804\uc805\uc806\uc807\uc808\uc809\uc80a\uc80b\uc80c\uc80d\uc80e\uc80f\uc810\uc811\uc812\uc813\uc814\uc815\uc816\uc817\uc818\uc819\uc81a\uc81b\uc81c\uc81d\uc81e\uc81f\uc820\uc821\uc822\uc823\uc824\uc825\uc826\uc827\uc828\uc829\uc82a\uc82b\uc82c\uc82d\uc82e\uc82f\uc830\uc831\uc832\uc833\uc834\uc835\uc836\uc837\uc838\uc839\uc83a\uc83b\uc83c\uc83d\uc83e\uc83f\uc840\uc841\uc842\uc843\uc844\uc845\uc846\uc847\uc848\uc849\uc84a\uc84b\uc84c\uc84d\uc84e\uc84f\uc850\uc851\uc852\uc853\uc854\uc855\uc856\uc857\uc858\uc859\uc85a\uc85b\uc85c\uc85d\uc85e\uc85f\uc860\uc861\uc862\uc863\uc864\uc865\uc866\uc867\uc868\uc869\uc86a\uc86b\uc86c\uc86d\uc86e\uc86f\uc870\uc871\uc872\uc873\uc874\uc875\uc876\uc877\uc878\uc879\uc87a\uc87b\uc87c\uc87d\uc87e\uc87f\uc880\uc881\uc882\uc883\uc884\uc885\uc886\uc887\uc888\uc889\uc88a\uc88b\uc88c\uc88d\uc88e\uc88f\uc890\uc891\uc892\uc893\uc894\uc895\uc896\uc897\uc898\uc899\uc89a\uc89b\uc89c\uc89d\uc89e\uc89f\uc8a0\uc8a1\uc8a2\uc8a3\uc8a4\uc8a5\uc8a6\uc8a7\uc8a8\uc8a9\uc8aa\uc8ab\uc8ac\uc8ad\uc8ae\uc8af\uc8b0\uc8b1\uc8b2\uc8b3\uc8b4\uc8b5\uc8b6\uc8b7\uc8b8\uc8b9\uc8ba\uc8bb\uc8bc\uc8bd\uc8be\uc8bf\uc8c0\uc8c1\uc8c2\uc8c3\uc8c4\uc8c5\uc8c6\uc8c7\uc8c8\uc8c9\uc8ca\uc8cb\uc8cc\uc8cd\uc8ce\uc8cf\uc8d0\uc8d1\uc8d2\uc8d3\uc8d4\uc8d5\uc8d6\uc8d7\uc8d8\uc8d9\uc8da\uc8db\uc8dc\uc8dd\uc8de\uc8df\uc8e0\uc8e1\uc8e2\uc8e3\uc8e4\uc8e5\uc8e6\uc8e7\uc8e8\uc8e9\uc8ea\uc8eb\uc8ec\uc8ed\uc8ee\uc8ef\uc8f0\uc8f1\uc8f2\uc8f3\uc8f4\uc8f5\uc8f6\uc8f7\uc8f8\uc8f9\uc8fa\uc8fb\uc8fc\uc8fd\uc8fe\uc8ff\uc900\uc901\uc902\uc903\uc904\uc905\uc906\uc907\uc908\uc909\uc90a\uc90b\uc90c\uc90d\uc90e\uc90f\uc910\uc911\uc912\uc913\uc914\uc915\uc916\uc917\uc918\uc919\uc91a\uc91b\uc91c\uc91d\uc91e\uc91f\uc920\uc921\uc922\uc923\uc924\uc925\uc926\uc927\uc928\uc929\uc92a\uc92b\uc92c\uc92d\uc92e\uc92f\uc930\uc931\uc932\uc933\uc934\uc935\uc936\uc937\uc938\uc939\uc93a\uc93b\uc93c\uc93d\uc93e\uc93f\uc940\uc941\uc942\uc943\uc944\uc945\uc946\uc947\uc948\uc949\uc94a\uc94b\uc94c\uc94d\uc94e\uc94f\uc950\uc951\uc952\uc953\uc954\uc955\uc956\uc957\uc958\uc959\uc95a\uc95b\uc95c\uc95d\uc95e\uc95f\uc960\uc961\uc962\uc963\uc964\uc965\uc966\uc967\uc968\uc969\uc96a\uc96b\uc96c\uc96d\uc96e\uc96f\uc970\uc971\uc972\uc973\uc974\uc975\uc976\uc977\uc978\uc979\uc97a\uc97b\uc97c\uc97d\uc97e\uc97f\uc980\uc981\uc982\uc983\uc984\uc985\uc986\uc987\uc988\uc989\uc98a\uc98b\uc98c\uc98d\uc98e\uc98f\uc990\uc991\uc992\uc993\uc994\uc995\uc996\uc997\uc998\uc999\uc99a\uc99b\uc99c\uc99d\uc99e\uc99f\uc9a0\uc9a1\uc9a2\uc9a3\uc9a4\uc9a5\uc9a6\uc9a7\uc9a8\uc9a9\uc9aa\uc9ab\uc9ac\uc9ad\uc9ae\uc9af\uc9b0\uc9b1\uc9b2\uc9b3\uc9b4\uc9b5\uc9b6\uc9b7\uc9b8\uc9b9\uc9ba\uc9bb\uc9bc\uc9bd\uc9be\uc9bf\uc9c0\uc9c1\uc9c2\uc9c3\uc9c4\uc9c5\uc9c6\uc9c7\uc9c8\uc9c9\uc9ca\uc9cb\uc9cc\uc9cd\uc9ce\uc9cf\uc9d0\uc9d1\uc9d2\uc9d3\uc9d4\uc9d5\uc9d6\uc9d7\uc9d8\uc9d9\uc9da\uc9db\uc9dc\uc9dd\uc9de\uc9df\uc9e0\uc9e1\uc9e2\uc9e3\uc9e4\uc9e5\uc9e6\uc9e7\uc9e8\uc9e9\uc9ea\uc9eb\uc9ec\uc9ed\uc9ee\uc9ef\uc9f0\uc9f1\uc9f2\uc9f3\uc9f4\uc9f5\uc9f6\uc9f7\uc9f8\uc9f9\uc9fa\uc9fb\uc9fc\uc9fd\uc9fe\uc9ff\uca00\uca01\uca02\uca03\uca04\uca05\uca06\uca07\uca08\uca09\uca0a\uca0b\uca0c\uca0d\uca0e\uca0f\uca10\uca11\uca12\uca13\uca14\uca15\uca16\uca17\uca18\uca19\uca1a\uca1b\uca1c\uca1d\uca1e\uca1f\uca20\uca21\uca22\uca23\uca24\uca25\uca26\uca27\uca28\uca29\uca2a\uca2b\uca2c\uca2d\uca2e\uca2f\uca30\uca31\uca32\uca33\uca34\uca35\uca36\uca37\uca38\uca39\uca3a\uca3b\uca3c\uca3d\uca3e\uca3f\uca40\uca41\uca42\uca43\uca44\uca45\uca46\uca47\uca48\uca49\uca4a\uca4b\uca4c\uca4d\uca4e\uca4f\uca50\uca51\uca52\uca53\uca54\uca55\uca56\uca57\uca58\uca59\uca5a\uca5b\uca5c\uca5d\uca5e\uca5f\uca60\uca61\uca62\uca63\uca64\uca65\uca66\uca67\uca68\uca69\uca6a\uca6b\uca6c\uca6d\uca6e\uca6f\uca70\uca71\uca72\uca73\uca74\uca75\uca76\uca77\uca78\uca79\uca7a\uca7b\uca7c\uca7d\uca7e\uca7f\uca80\uca81\uca82\uca83\uca84\uca85\uca86\uca87\uca88\uca89\uca8a\uca8b\uca8c\uca8d\uca8e\uca8f\uca90\uca91\uca92\uca93\uca94\uca95\uca96\uca97\uca98\uca99\uca9a\uca9b\uca9c\uca9d\uca9e\uca9f\ucaa0\ucaa1\ucaa2\ucaa3\ucaa4\ucaa5\ucaa6\ucaa7\ucaa8\ucaa9\ucaaa\ucaab\ucaac\ucaad\ucaae\ucaaf\ucab0\ucab1\ucab2\ucab3\ucab4\ucab5\ucab6\ucab7\ucab8\ucab9\ucaba\ucabb\ucabc\ucabd\ucabe\ucabf\ucac0\ucac1\ucac2\ucac3\ucac4\ucac5\ucac6\ucac7\ucac8\ucac9\ucaca\ucacb\ucacc\ucacd\ucace\ucacf\ucad0\ucad1\ucad2\ucad3\ucad4\ucad5\ucad6\ucad7\ucad8\ucad9\ucada\ucadb\ucadc\ucadd\ucade\ucadf\ucae0\ucae1\ucae2\ucae3\ucae4\ucae5\ucae6\ucae7\ucae8\ucae9\ucaea\ucaeb\ucaec\ucaed\ucaee\ucaef\ucaf0\ucaf1\ucaf2\ucaf3\ucaf4\ucaf5\ucaf6\ucaf7\ucaf8\ucaf9\ucafa\ucafb\ucafc\ucafd\ucafe\ucaff\ucb00\ucb01\ucb02\ucb03\ucb04\ucb05\ucb06\ucb07\ucb08\ucb09\ucb0a\ucb0b\ucb0c\ucb0d\ucb0e\ucb0f\ucb10\ucb11\ucb12\ucb13\ucb14\ucb15\ucb16\ucb17\ucb18\ucb19\ucb1a\ucb1b\ucb1c\ucb1d\ucb1e\ucb1f\ucb20\ucb21\ucb22\ucb23\ucb24\ucb25\ucb26\ucb27\ucb28\ucb29\ucb2a\ucb2b\ucb2c\ucb2d\ucb2e\ucb2f\ucb30\ucb31\ucb32\ucb33\ucb34\ucb35\ucb36\ucb37\ucb38\ucb39\ucb3a\ucb3b\ucb3c\ucb3d\ucb3e\ucb3f\ucb40\ucb41\ucb42\ucb43\ucb44\ucb45\ucb46\ucb47\ucb48\ucb49\ucb4a\ucb4b\ucb4c\ucb4d\ucb4e\ucb4f\ucb50\ucb51\ucb52\ucb53\ucb54\ucb55\ucb56\ucb57\ucb58\ucb59\ucb5a\ucb5b\ucb5c\ucb5d\ucb5e\ucb5f\ucb60\ucb61\ucb62\ucb63\ucb64\ucb65\ucb66\ucb67\ucb68\ucb69\ucb6a\ucb6b\ucb6c\ucb6d\ucb6e\ucb6f\ucb70\ucb71\ucb72\ucb73\ucb74\ucb75\ucb76\ucb77\ucb78\ucb79\ucb7a\ucb7b\ucb7c\ucb7d\ucb7e\ucb7f\ucb80\ucb81\ucb82\ucb83\ucb84\ucb85\ucb86\ucb87\ucb88\ucb89\ucb8a\ucb8b\ucb8c\ucb8d\ucb8e\ucb8f\ucb90\ucb91\ucb92\ucb93\ucb94\ucb95\ucb96\ucb97\ucb98\ucb99\ucb9a\ucb9b\ucb9c\ucb9d\ucb9e\ucb9f\ucba0\ucba1\ucba2\ucba3\ucba4\ucba5\ucba6\ucba7\ucba8\ucba9\ucbaa\ucbab\ucbac\ucbad\ucbae\ucbaf\ucbb0\ucbb1\ucbb2\ucbb3\ucbb4\ucbb5\ucbb6\ucbb7\ucbb8\ucbb9\ucbba\ucbbb\ucbbc\ucbbd\ucbbe\ucbbf\ucbc0\ucbc1\ucbc2\ucbc3\ucbc4\ucbc5\ucbc6\ucbc7\ucbc8\ucbc9\ucbca\ucbcb\ucbcc\ucbcd\ucbce\ucbcf\ucbd0\ucbd1\ucbd2\ucbd3\ucbd4\ucbd5\ucbd6\ucbd7\ucbd8\ucbd9\ucbda\ucbdb\ucbdc\ucbdd\ucbde\ucbdf\ucbe0\ucbe1\ucbe2\ucbe3\ucbe4\ucbe5\ucbe6\ucbe7\ucbe8\ucbe9\ucbea\ucbeb\ucbec\ucbed\ucbee\ucbef\ucbf0\ucbf1\ucbf2\ucbf3\ucbf4\ucbf5\ucbf6\ucbf7\ucbf8\ucbf9\ucbfa\ucbfb\ucbfc\ucbfd\ucbfe\ucbff\ucc00\ucc01\ucc02\ucc03\ucc04\ucc05\ucc06\ucc07\ucc08\ucc09\ucc0a\ucc0b\ucc0c\ucc0d\ucc0e\ucc0f\ucc10\ucc11\ucc12\ucc13\ucc14\ucc15\ucc16\ucc17\ucc18\ucc19\ucc1a\ucc1b\ucc1c\ucc1d\ucc1e\ucc1f\ucc20\ucc21\ucc22\ucc23\ucc24\ucc25\ucc26\ucc27\ucc28\ucc29\ucc2a\ucc2b\ucc2c\ucc2d\ucc2e\ucc2f\ucc30\ucc31\ucc32\ucc33\ucc34\ucc35\ucc36\ucc37\ucc38\ucc39\ucc3a\ucc3b\ucc3c\ucc3d\ucc3e\ucc3f\ucc40\ucc41\ucc42\ucc43\ucc44\ucc45\ucc46\ucc47\ucc48\ucc49\ucc4a\ucc4b\ucc4c\ucc4d\ucc4e\ucc4f\ucc50\ucc51\ucc52\ucc53\ucc54\ucc55\ucc56\ucc57\ucc58\ucc59\ucc5a\ucc5b\ucc5c\ucc5d\ucc5e\ucc5f\ucc60\ucc61\ucc62\ucc63\ucc64\ucc65\ucc66\ucc67\ucc68\ucc69\ucc6a\ucc6b\ucc6c\ucc6d\ucc6e\ucc6f\ucc70\ucc71\ucc72\ucc73\ucc74\ucc75\ucc76\ucc77\ucc78\ucc79\ucc7a\ucc7b\ucc7c\ucc7d\ucc7e\ucc7f\ucc80\ucc81\ucc82\ucc83\ucc84\ucc85\ucc86\ucc87\ucc88\ucc89\ucc8a\ucc8b\ucc8c\ucc8d\ucc8e\ucc8f\ucc90\ucc91\ucc92\ucc93\ucc94\ucc95\ucc96\ucc97\ucc98\ucc99\ucc9a\ucc9b\ucc9c\ucc9d\ucc9e\ucc9f\ucca0\ucca1\ucca2\ucca3\ucca4\ucca5\ucca6\ucca7\ucca8\ucca9\uccaa\uccab\uccac\uccad\uccae\uccaf\uccb0\uccb1\uccb2\uccb3\uccb4\uccb5\uccb6\uccb7\uccb8\uccb9\uccba\uccbb\uccbc\uccbd\uccbe\uccbf\uccc0\uccc1\uccc2\uccc3\uccc4\uccc5\uccc6\uccc7\uccc8\uccc9\uccca\ucccb\ucccc\ucccd\uccce\ucccf\uccd0\uccd1\uccd2\uccd3\uccd4\uccd5\uccd6\uccd7\uccd8\uccd9\uccda\uccdb\uccdc\uccdd\uccde\uccdf\ucce0\ucce1\ucce2\ucce3\ucce4\ucce5\ucce6\ucce7\ucce8\ucce9\uccea\ucceb\uccec\ucced\uccee\uccef\uccf0\uccf1\uccf2\uccf3\uccf4\uccf5\uccf6\uccf7\uccf8\uccf9\uccfa\uccfb\uccfc\uccfd\uccfe\uccff\ucd00\ucd01\ucd02\ucd03\ucd04\ucd05\ucd06\ucd07\ucd08\ucd09\ucd0a\ucd0b\ucd0c\ucd0d\ucd0e\ucd0f\ucd10\ucd11\ucd12\ucd13\ucd14\ucd15\ucd16\ucd17\ucd18\ucd19\ucd1a\ucd1b\ucd1c\ucd1d\ucd1e\ucd1f\ucd20\ucd21\ucd22\ucd23\ucd24\ucd25\ucd26\ucd27\ucd28\ucd29\ucd2a\ucd2b\ucd2c\ucd2d\ucd2e\ucd2f\ucd30\ucd31\ucd32\ucd33\ucd34\ucd35\ucd36\ucd37\ucd38\ucd39\ucd3a\ucd3b\ucd3c\ucd3d\ucd3e\ucd3f\ucd40\ucd41\ucd42\ucd43\ucd44\ucd45\ucd46\ucd47\ucd48\ucd49\ucd4a\ucd4b\ucd4c\ucd4d\ucd4e\ucd4f\ucd50\ucd51\ucd52\ucd53\ucd54\ucd55\ucd56\ucd57\ucd58\ucd59\ucd5a\ucd5b\ucd5c\ucd5d\ucd5e\ucd5f\ucd60\ucd61\ucd62\ucd63\ucd64\ucd65\ucd66\ucd67\ucd68\ucd69\ucd6a\ucd6b\ucd6c\ucd6d\ucd6e\ucd6f\ucd70\ucd71\ucd72\ucd73\ucd74\ucd75\ucd76\ucd77\ucd78\ucd79\ucd7a\ucd7b\ucd7c\ucd7d\ucd7e\ucd7f\ucd80\ucd81\ucd82\ucd83\ucd84\ucd85\ucd86\ucd87\ucd88\ucd89\ucd8a\ucd8b\ucd8c\ucd8d\ucd8e\ucd8f\ucd90\ucd91\ucd92\ucd93\ucd94\ucd95\ucd96\ucd97\ucd98\ucd99\ucd9a\ucd9b\ucd9c\ucd9d\ucd9e\ucd9f\ucda0\ucda1\ucda2\ucda3\ucda4\ucda5\ucda6\ucda7\ucda8\ucda9\ucdaa\ucdab\ucdac\ucdad\ucdae\ucdaf\ucdb0\ucdb1\ucdb2\ucdb3\ucdb4\ucdb5\ucdb6\ucdb7\ucdb8\ucdb9\ucdba\ucdbb\ucdbc\ucdbd\ucdbe\ucdbf\ucdc0\ucdc1\ucdc2\ucdc3\ucdc4\ucdc5\ucdc6\ucdc7\ucdc8\ucdc9\ucdca\ucdcb\ucdcc\ucdcd\ucdce\ucdcf\ucdd0\ucdd1\ucdd2\ucdd3\ucdd4\ucdd5\ucdd6\ucdd7\ucdd8\ucdd9\ucdda\ucddb\ucddc\ucddd\ucdde\ucddf\ucde0\ucde1\ucde2\ucde3\ucde4\ucde5\ucde6\ucde7\ucde8\ucde9\ucdea\ucdeb\ucdec\ucded\ucdee\ucdef\ucdf0\ucdf1\ucdf2\ucdf3\ucdf4\ucdf5\ucdf6\ucdf7\ucdf8\ucdf9\ucdfa\ucdfb\ucdfc\ucdfd\ucdfe\ucdff\uce00\uce01\uce02\uce03\uce04\uce05\uce06\uce07\uce08\uce09\uce0a\uce0b\uce0c\uce0d\uce0e\uce0f\uce10\uce11\uce12\uce13\uce14\uce15\uce16\uce17\uce18\uce19\uce1a\uce1b\uce1c\uce1d\uce1e\uce1f\uce20\uce21\uce22\uce23\uce24\uce25\uce26\uce27\uce28\uce29\uce2a\uce2b\uce2c\uce2d\uce2e\uce2f\uce30\uce31\uce32\uce33\uce34\uce35\uce36\uce37\uce38\uce39\uce3a\uce3b\uce3c\uce3d\uce3e\uce3f\uce40\uce41\uce42\uce43\uce44\uce45\uce46\uce47\uce48\uce49\uce4a\uce4b\uce4c\uce4d\uce4e\uce4f\uce50\uce51\uce52\uce53\uce54\uce55\uce56\uce57\uce58\uce59\uce5a\uce5b\uce5c\uce5d\uce5e\uce5f\uce60\uce61\uce62\uce63\uce64\uce65\uce66\uce67\uce68\uce69\uce6a\uce6b\uce6c\uce6d\uce6e\uce6f\uce70\uce71\uce72\uce73\uce74\uce75\uce76\uce77\uce78\uce79\uce7a\uce7b\uce7c\uce7d\uce7e\uce7f\uce80\uce81\uce82\uce83\uce84\uce85\uce86\uce87\uce88\uce89\uce8a\uce8b\uce8c\uce8d\uce8e\uce8f\uce90\uce91\uce92\uce93\uce94\uce95\uce96\uce97\uce98\uce99\uce9a\uce9b\uce9c\uce9d\uce9e\uce9f\ucea0\ucea1\ucea2\ucea3\ucea4\ucea5\ucea6\ucea7\ucea8\ucea9\uceaa\uceab\uceac\ucead\uceae\uceaf\uceb0\uceb1\uceb2\uceb3\uceb4\uceb5\uceb6\uceb7\uceb8\uceb9\uceba\ucebb\ucebc\ucebd\ucebe\ucebf\ucec0\ucec1\ucec2\ucec3\ucec4\ucec5\ucec6\ucec7\ucec8\ucec9\uceca\ucecb\ucecc\ucecd\ucece\ucecf\uced0\uced1\uced2\uced3\uced4\uced5\uced6\uced7\uced8\uced9\uceda\ucedb\ucedc\ucedd\ucede\ucedf\ucee0\ucee1\ucee2\ucee3\ucee4\ucee5\ucee6\ucee7\ucee8\ucee9\uceea\uceeb\uceec\uceed\uceee\uceef\ucef0\ucef1\ucef2\ucef3\ucef4\ucef5\ucef6\ucef7\ucef8\ucef9\ucefa\ucefb\ucefc\ucefd\ucefe\uceff\ucf00\ucf01\ucf02\ucf03\ucf04\ucf05\ucf06\ucf07\ucf08\ucf09\ucf0a\ucf0b\ucf0c\ucf0d\ucf0e\ucf0f\ucf10\ucf11\ucf12\ucf13\ucf14\ucf15\ucf16\ucf17\ucf18\ucf19\ucf1a\ucf1b\ucf1c\ucf1d\ucf1e\ucf1f\ucf20\ucf21\ucf22\ucf23\ucf24\ucf25\ucf26\ucf27\ucf28\ucf29\ucf2a\ucf2b\ucf2c\ucf2d\ucf2e\ucf2f\ucf30\ucf31\ucf32\ucf33\ucf34\ucf35\ucf36\ucf37\ucf38\ucf39\ucf3a\ucf3b\ucf3c\ucf3d\ucf3e\ucf3f\ucf40\ucf41\ucf42\ucf43\ucf44\ucf45\ucf46\ucf47\ucf48\ucf49\ucf4a\ucf4b\ucf4c\ucf4d\ucf4e\ucf4f\ucf50\ucf51\ucf52\ucf53\ucf54\ucf55\ucf56\ucf57\ucf58\ucf59\ucf5a\ucf5b\ucf5c\ucf5d\ucf5e\ucf5f\ucf60\ucf61\ucf62\ucf63\ucf64\ucf65\ucf66\ucf67\ucf68\ucf69\ucf6a\ucf6b\ucf6c\ucf6d\ucf6e\ucf6f\ucf70\ucf71\ucf72\ucf73\ucf74\ucf75\ucf76\ucf77\ucf78\ucf79\ucf7a\ucf7b\ucf7c\ucf7d\ucf7e\ucf7f\ucf80\ucf81\ucf82\ucf83\ucf84\ucf85\ucf86\ucf87\ucf88\ucf89\ucf8a\ucf8b\ucf8c\ucf8d\ucf8e\ucf8f\ucf90\ucf91\ucf92\ucf93\ucf94\ucf95\ucf96\ucf97\ucf98\ucf99\ucf9a\ucf9b\ucf9c\ucf9d\ucf9e\ucf9f\ucfa0\ucfa1\ucfa2\ucfa3\ucfa4\ucfa5\ucfa6\ucfa7\ucfa8\ucfa9\ucfaa\ucfab\ucfac\ucfad\ucfae\ucfaf\ucfb0\ucfb1\ucfb2\ucfb3\ucfb4\ucfb5\ucfb6\ucfb7\ucfb8\ucfb9\ucfba\ucfbb\ucfbc\ucfbd\ucfbe\ucfbf\ucfc0\ucfc1\ucfc2\ucfc3\ucfc4\ucfc5\ucfc6\ucfc7\ucfc8\ucfc9\ucfca\ucfcb\ucfcc\ucfcd\ucfce\ucfcf\ucfd0\ucfd1\ucfd2\ucfd3\ucfd4\ucfd5\ucfd6\ucfd7\ucfd8\ucfd9\ucfda\ucfdb\ucfdc\ucfdd\ucfde\ucfdf\ucfe0\ucfe1\ucfe2\ucfe3\ucfe4\ucfe5\ucfe6\ucfe7\ucfe8\ucfe9\ucfea\ucfeb\ucfec\ucfed\ucfee\ucfef\ucff0\ucff1\ucff2\ucff3\ucff4\ucff5\ucff6\ucff7\ucff8\ucff9\ucffa\ucffb\ucffc\ucffd\ucffe\ucfff\ud000\ud001\ud002\ud003\ud004\ud005\ud006\ud007\ud008\ud009\ud00a\ud00b\ud00c\ud00d\ud00e\ud00f\ud010\ud011\ud012\ud013\ud014\ud015\ud016\ud017\ud018\ud019\ud01a\ud01b\ud01c\ud01d\ud01e\ud01f\ud020\ud021\ud022\ud023\ud024\ud025\ud026\ud027\ud028\ud029\ud02a\ud02b\ud02c\ud02d\ud02e\ud02f\ud030\ud031\ud032\ud033\ud034\ud035\ud036\ud037\ud038\ud039\ud03a\ud03b\ud03c\ud03d\ud03e\ud03f\ud040\ud041\ud042\ud043\ud044\ud045\ud046\ud047\ud048\ud049\ud04a\ud04b\ud04c\ud04d\ud04e\ud04f\ud050\ud051\ud052\ud053\ud054\ud055\ud056\ud057\ud058\ud059\ud05a\ud05b\ud05c\ud05d\ud05e\ud05f\ud060\ud061\ud062\ud063\ud064\ud065\ud066\ud067\ud068\ud069\ud06a\ud06b\ud06c\ud06d\ud06e\ud06f\ud070\ud071\ud072\ud073\ud074\ud075\ud076\ud077\ud078\ud079\ud07a\ud07b\ud07c\ud07d\ud07e\ud07f\ud080\ud081\ud082\ud083\ud084\ud085\ud086\ud087\ud088\ud089\ud08a\ud08b\ud08c\ud08d\ud08e\ud08f\ud090\ud091\ud092\ud093\ud094\ud095\ud096\ud097\ud098\ud099\ud09a\ud09b\ud09c\ud09d\ud09e\ud09f\ud0a0\ud0a1\ud0a2\ud0a3\ud0a4\ud0a5\ud0a6\ud0a7\ud0a8\ud0a9\ud0aa\ud0ab\ud0ac\ud0ad\ud0ae\ud0af\ud0b0\ud0b1\ud0b2\ud0b3\ud0b4\ud0b5\ud0b6\ud0b7\ud0b8\ud0b9\ud0ba\ud0bb\ud0bc\ud0bd\ud0be\ud0bf\ud0c0\ud0c1\ud0c2\ud0c3\ud0c4\ud0c5\ud0c6\ud0c7\ud0c8\ud0c9\ud0ca\ud0cb\ud0cc\ud0cd\ud0ce\ud0cf\ud0d0\ud0d1\ud0d2\ud0d3\ud0d4\ud0d5\ud0d6\ud0d7\ud0d8\ud0d9\ud0da\ud0db\ud0dc\ud0dd\ud0de\ud0df\ud0e0\ud0e1\ud0e2\ud0e3\ud0e4\ud0e5\ud0e6\ud0e7\ud0e8\ud0e9\ud0ea\ud0eb\ud0ec\ud0ed\ud0ee\ud0ef\ud0f0\ud0f1\ud0f2\ud0f3\ud0f4\ud0f5\ud0f6\ud0f7\ud0f8\ud0f9\ud0fa\ud0fb\ud0fc\ud0fd\ud0fe\ud0ff\ud100\ud101\ud102\ud103\ud104\ud105\ud106\ud107\ud108\ud109\ud10a\ud10b\ud10c\ud10d\ud10e\ud10f\ud110\ud111\ud112\ud113\ud114\ud115\ud116\ud117\ud118\ud119\ud11a\ud11b\ud11c\ud11d\ud11e\ud11f\ud120\ud121\ud122\ud123\ud124\ud125\ud126\ud127\ud128\ud129\ud12a\ud12b\ud12c\ud12d\ud12e\ud12f\ud130\ud131\ud132\ud133\ud134\ud135\ud136\ud137\ud138\ud139\ud13a\ud13b\ud13c\ud13d\ud13e\ud13f\ud140\ud141\ud142\ud143\ud144\ud145\ud146\ud147\ud148\ud149\ud14a\ud14b\ud14c\ud14d\ud14e\ud14f\ud150\ud151\ud152\ud153\ud154\ud155\ud156\ud157\ud158\ud159\ud15a\ud15b\ud15c\ud15d\ud15e\ud15f\ud160\ud161\ud162\ud163\ud164\ud165\ud166\ud167\ud168\ud169\ud16a\ud16b\ud16c\ud16d\ud16e\ud16f\ud170\ud171\ud172\ud173\ud174\ud175\ud176\ud177\ud178\ud179\ud17a\ud17b\ud17c\ud17d\ud17e\ud17f\ud180\ud181\ud182\ud183\ud184\ud185\ud186\ud187\ud188\ud189\ud18a\ud18b\ud18c\ud18d\ud18e\ud18f\ud190\ud191\ud192\ud193\ud194\ud195\ud196\ud197\ud198\ud199\ud19a\ud19b\ud19c\ud19d\ud19e\ud19f\ud1a0\ud1a1\ud1a2\ud1a3\ud1a4\ud1a5\ud1a6\ud1a7\ud1a8\ud1a9\ud1aa\ud1ab\ud1ac\ud1ad\ud1ae\ud1af\ud1b0\ud1b1\ud1b2\ud1b3\ud1b4\ud1b5\ud1b6\ud1b7\ud1b8\ud1b9\ud1ba\ud1bb\ud1bc\ud1bd\ud1be\ud1bf\ud1c0\ud1c1\ud1c2\ud1c3\ud1c4\ud1c5\ud1c6\ud1c7\ud1c8\ud1c9\ud1ca\ud1cb\ud1cc\ud1cd\ud1ce\ud1cf\ud1d0\ud1d1\ud1d2\ud1d3\ud1d4\ud1d5\ud1d6\ud1d7\ud1d8\ud1d9\ud1da\ud1db\ud1dc\ud1dd\ud1de\ud1df\ud1e0\ud1e1\ud1e2\ud1e3\ud1e4\ud1e5\ud1e6\ud1e7\ud1e8\ud1e9\ud1ea\ud1eb\ud1ec\ud1ed\ud1ee\ud1ef\ud1f0\ud1f1\ud1f2\ud1f3\ud1f4\ud1f5\ud1f6\ud1f7\ud1f8\ud1f9\ud1fa\ud1fb\ud1fc\ud1fd\ud1fe\ud1ff\ud200\ud201\ud202\ud203\ud204\ud205\ud206\ud207\ud208\ud209\ud20a\ud20b\ud20c\ud20d\ud20e\ud20f\ud210\ud211\ud212\ud213\ud214\ud215\ud216\ud217\ud218\ud219\ud21a\ud21b\ud21c\ud21d\ud21e\ud21f\ud220\ud221\ud222\ud223\ud224\ud225\ud226\ud227\ud228\ud229\ud22a\ud22b\ud22c\ud22d\ud22e\ud22f\ud230\ud231\ud232\ud233\ud234\ud235\ud236\ud237\ud238\ud239\ud23a\ud23b\ud23c\ud23d\ud23e\ud23f\ud240\ud241\ud242\ud243\ud244\ud245\ud246\ud247\ud248\ud249\ud24a\ud24b\ud24c\ud24d\ud24e\ud24f\ud250\ud251\ud252\ud253\ud254\ud255\ud256\ud257\ud258\ud259\ud25a\ud25b\ud25c\ud25d\ud25e\ud25f\ud260\ud261\ud262\ud263\ud264\ud265\ud266\ud267\ud268\ud269\ud26a\ud26b\ud26c\ud26d\ud26e\ud26f\ud270\ud271\ud272\ud273\ud274\ud275\ud276\ud277\ud278\ud279\ud27a\ud27b\ud27c\ud27d\ud27e\ud27f\ud280\ud281\ud282\ud283\ud284\ud285\ud286\ud287\ud288\ud289\ud28a\ud28b\ud28c\ud28d\ud28e\ud28f\ud290\ud291\ud292\ud293\ud294\ud295\ud296\ud297\ud298\ud299\ud29a\ud29b\ud29c\ud29d\ud29e\ud29f\ud2a0\ud2a1\ud2a2\ud2a3\ud2a4\ud2a5\ud2a6\ud2a7\ud2a8\ud2a9\ud2aa\ud2ab\ud2ac\ud2ad\ud2ae\ud2af\ud2b0\ud2b1\ud2b2\ud2b3\ud2b4\ud2b5\ud2b6\ud2b7\ud2b8\ud2b9\ud2ba\ud2bb\ud2bc\ud2bd\ud2be\ud2bf\ud2c0\ud2c1\ud2c2\ud2c3\ud2c4\ud2c5\ud2c6\ud2c7\ud2c8\ud2c9\ud2ca\ud2cb\ud2cc\ud2cd\ud2ce\ud2cf\ud2d0\ud2d1\ud2d2\ud2d3\ud2d4\ud2d5\ud2d6\ud2d7\ud2d8\ud2d9\ud2da\ud2db\ud2dc\ud2dd\ud2de\ud2df\ud2e0\ud2e1\ud2e2\ud2e3\ud2e4\ud2e5\ud2e6\ud2e7\ud2e8\ud2e9\ud2ea\ud2eb\ud2ec\ud2ed\ud2ee\ud2ef\ud2f0\ud2f1\ud2f2\ud2f3\ud2f4\ud2f5\ud2f6\ud2f7\ud2f8\ud2f9\ud2fa\ud2fb\ud2fc\ud2fd\ud2fe\ud2ff\ud300\ud301\ud302\ud303\ud304\ud305\ud306\ud307\ud308\ud309\ud30a\ud30b\ud30c\ud30d\ud30e\ud30f\ud310\ud311\ud312\ud313\ud314\ud315\ud316\ud317\ud318\ud319\ud31a\ud31b\ud31c\ud31d\ud31e\ud31f\ud320\ud321\ud322\ud323\ud324\ud325\ud326\ud327\ud328\ud329\ud32a\ud32b\ud32c\ud32d\ud32e\ud32f\ud330\ud331\ud332\ud333\ud334\ud335\ud336\ud337\ud338\ud339\ud33a\ud33b\ud33c\ud33d\ud33e\ud33f\ud340\ud341\ud342\ud343\ud344\ud345\ud346\ud347\ud348\ud349\ud34a\ud34b\ud34c\ud34d\ud34e\ud34f\ud350\ud351\ud352\ud353\ud354\ud355\ud356\ud357\ud358\ud359\ud35a\ud35b\ud35c\ud35d\ud35e\ud35f\ud360\ud361\ud362\ud363\ud364\ud365\ud366\ud367\ud368\ud369\ud36a\ud36b\ud36c\ud36d\ud36e\ud36f\ud370\ud371\ud372\ud373\ud374\ud375\ud376\ud377\ud378\ud379\ud37a\ud37b\ud37c\ud37d\ud37e\ud37f\ud380\ud381\ud382\ud383\ud384\ud385\ud386\ud387\ud388\ud389\ud38a\ud38b\ud38c\ud38d\ud38e\ud38f\ud390\ud391\ud392\ud393\ud394\ud395\ud396\ud397\ud398\ud399\ud39a\ud39b\ud39c\ud39d\ud39e\ud39f\ud3a0\ud3a1\ud3a2\ud3a3\ud3a4\ud3a5\ud3a6\ud3a7\ud3a8\ud3a9\ud3aa\ud3ab\ud3ac\ud3ad\ud3ae\ud3af\ud3b0\ud3b1\ud3b2\ud3b3\ud3b4\ud3b5\ud3b6\ud3b7\ud3b8\ud3b9\ud3ba\ud3bb\ud3bc\ud3bd\ud3be\ud3bf\ud3c0\ud3c1\ud3c2\ud3c3\ud3c4\ud3c5\ud3c6\ud3c7\ud3c8\ud3c9\ud3ca\ud3cb\ud3cc\ud3cd\ud3ce\ud3cf\ud3d0\ud3d1\ud3d2\ud3d3\ud3d4\ud3d5\ud3d6\ud3d7\ud3d8\ud3d9\ud3da\ud3db\ud3dc\ud3dd\ud3de\ud3df\ud3e0\ud3e1\ud3e2\ud3e3\ud3e4\ud3e5\ud3e6\ud3e7\ud3e8\ud3e9\ud3ea\ud3eb\ud3ec\ud3ed\ud3ee\ud3ef\ud3f0\ud3f1\ud3f2\ud3f3\ud3f4\ud3f5\ud3f6\ud3f7\ud3f8\ud3f9\ud3fa\ud3fb\ud3fc\ud3fd\ud3fe\ud3ff\ud400\ud401\ud402\ud403\ud404\ud405\ud406\ud407\ud408\ud409\ud40a\ud40b\ud40c\ud40d\ud40e\ud40f\ud410\ud411\ud412\ud413\ud414\ud415\ud416\ud417\ud418\ud419\ud41a\ud41b\ud41c\ud41d\ud41e\ud41f\ud420\ud421\ud422\ud423\ud424\ud425\ud426\ud427\ud428\ud429\ud42a\ud42b\ud42c\ud42d\ud42e\ud42f\ud430\ud431\ud432\ud433\ud434\ud435\ud436\ud437\ud438\ud439\ud43a\ud43b\ud43c\ud43d\ud43e\ud43f\ud440\ud441\ud442\ud443\ud444\ud445\ud446\ud447\ud448\ud449\ud44a\ud44b\ud44c\ud44d\ud44e\ud44f\ud450\ud451\ud452\ud453\ud454\ud455\ud456\ud457\ud458\ud459\ud45a\ud45b\ud45c\ud45d\ud45e\ud45f\ud460\ud461\ud462\ud463\ud464\ud465\ud466\ud467\ud468\ud469\ud46a\ud46b\ud46c\ud46d\ud46e\ud46f\ud470\ud471\ud472\ud473\ud474\ud475\ud476\ud477\ud478\ud479\ud47a\ud47b\ud47c\ud47d\ud47e\ud47f\ud480\ud481\ud482\ud483\ud484\ud485\ud486\ud487\ud488\ud489\ud48a\ud48b\ud48c\ud48d\ud48e\ud48f\ud490\ud491\ud492\ud493\ud494\ud495\ud496\ud497\ud498\ud499\ud49a\ud49b\ud49c\ud49d\ud49e\ud49f\ud4a0\ud4a1\ud4a2\ud4a3\ud4a4\ud4a5\ud4a6\ud4a7\ud4a8\ud4a9\ud4aa\ud4ab\ud4ac\ud4ad\ud4ae\ud4af\ud4b0\ud4b1\ud4b2\ud4b3\ud4b4\ud4b5\ud4b6\ud4b7\ud4b8\ud4b9\ud4ba\ud4bb\ud4bc\ud4bd\ud4be\ud4bf\ud4c0\ud4c1\ud4c2\ud4c3\ud4c4\ud4c5\ud4c6\ud4c7\ud4c8\ud4c9\ud4ca\ud4cb\ud4cc\ud4cd\ud4ce\ud4cf\ud4d0\ud4d1\ud4d2\ud4d3\ud4d4\ud4d5\ud4d6\ud4d7\ud4d8\ud4d9\ud4da\ud4db\ud4dc\ud4dd\ud4de\ud4df\ud4e0\ud4e1\ud4e2\ud4e3\ud4e4\ud4e5\ud4e6\ud4e7\ud4e8\ud4e9\ud4ea\ud4eb\ud4ec\ud4ed\ud4ee\ud4ef\ud4f0\ud4f1\ud4f2\ud4f3\ud4f4\ud4f5\ud4f6\ud4f7\ud4f8\ud4f9\ud4fa\ud4fb\ud4fc\ud4fd\ud4fe\ud4ff\ud500\ud501\ud502\ud503\ud504\ud505\ud506\ud507\ud508\ud509\ud50a\ud50b\ud50c\ud50d\ud50e\ud50f\ud510\ud511\ud512\ud513\ud514\ud515\ud516\ud517\ud518\ud519\ud51a\ud51b\ud51c\ud51d\ud51e\ud51f\ud520\ud521\ud522\ud523\ud524\ud525\ud526\ud527\ud528\ud529\ud52a\ud52b\ud52c\ud52d\ud52e\ud52f\ud530\ud531\ud532\ud533\ud534\ud535\ud536\ud537\ud538\ud539\ud53a\ud53b\ud53c\ud53d\ud53e\ud53f\ud540\ud541\ud542\ud543\ud544\ud545\ud546\ud547\ud548\ud549\ud54a\ud54b\ud54c\ud54d\ud54e\ud54f\ud550\ud551\ud552\ud553\ud554\ud555\ud556\ud557\ud558\ud559\ud55a\ud55b\ud55c\ud55d\ud55e\ud55f\ud560\ud561\ud562\ud563\ud564\ud565\ud566\ud567\ud568\ud569\ud56a\ud56b\ud56c\ud56d\ud56e\ud56f\ud570\ud571\ud572\ud573\ud574\ud575\ud576\ud577\ud578\ud579\ud57a\ud57b\ud57c\ud57d\ud57e\ud57f\ud580\ud581\ud582\ud583\ud584\ud585\ud586\ud587\ud588\ud589\ud58a\ud58b\ud58c\ud58d\ud58e\ud58f\ud590\ud591\ud592\ud593\ud594\ud595\ud596\ud597\ud598\ud599\ud59a\ud59b\ud59c\ud59d\ud59e\ud59f\ud5a0\ud5a1\ud5a2\ud5a3\ud5a4\ud5a5\ud5a6\ud5a7\ud5a8\ud5a9\ud5aa\ud5ab\ud5ac\ud5ad\ud5ae\ud5af\ud5b0\ud5b1\ud5b2\ud5b3\ud5b4\ud5b5\ud5b6\ud5b7\ud5b8\ud5b9\ud5ba\ud5bb\ud5bc\ud5bd\ud5be\ud5bf\ud5c0\ud5c1\ud5c2\ud5c3\ud5c4\ud5c5\ud5c6\ud5c7\ud5c8\ud5c9\ud5ca\ud5cb\ud5cc\ud5cd\ud5ce\ud5cf\ud5d0\ud5d1\ud5d2\ud5d3\ud5d4\ud5d5\ud5d6\ud5d7\ud5d8\ud5d9\ud5da\ud5db\ud5dc\ud5dd\ud5de\ud5df\ud5e0\ud5e1\ud5e2\ud5e3\ud5e4\ud5e5\ud5e6\ud5e7\ud5e8\ud5e9\ud5ea\ud5eb\ud5ec\ud5ed\ud5ee\ud5ef\ud5f0\ud5f1\ud5f2\ud5f3\ud5f4\ud5f5\ud5f6\ud5f7\ud5f8\ud5f9\ud5fa\ud5fb\ud5fc\ud5fd\ud5fe\ud5ff\ud600\ud601\ud602\ud603\ud604\ud605\ud606\ud607\ud608\ud609\ud60a\ud60b\ud60c\ud60d\ud60e\ud60f\ud610\ud611\ud612\ud613\ud614\ud615\ud616\ud617\ud618\ud619\ud61a\ud61b\ud61c\ud61d\ud61e\ud61f\ud620\ud621\ud622\ud623\ud624\ud625\ud626\ud627\ud628\ud629\ud62a\ud62b\ud62c\ud62d\ud62e\ud62f\ud630\ud631\ud632\ud633\ud634\ud635\ud636\ud637\ud638\ud639\ud63a\ud63b\ud63c\ud63d\ud63e\ud63f\ud640\ud641\ud642\ud643\ud644\ud645\ud646\ud647\ud648\ud649\ud64a\ud64b\ud64c\ud64d\ud64e\ud64f\ud650\ud651\ud652\ud653\ud654\ud655\ud656\ud657\ud658\ud659\ud65a\ud65b\ud65c\ud65d\ud65e\ud65f\ud660\ud661\ud662\ud663\ud664\ud665\ud666\ud667\ud668\ud669\ud66a\ud66b\ud66c\ud66d\ud66e\ud66f\ud670\ud671\ud672\ud673\ud674\ud675\ud676\ud677\ud678\ud679\ud67a\ud67b\ud67c\ud67d\ud67e\ud67f\ud680\ud681\ud682\ud683\ud684\ud685\ud686\ud687\ud688\ud689\ud68a\ud68b\ud68c\ud68d\ud68e\ud68f\ud690\ud691\ud692\ud693\ud694\ud695\ud696\ud697\ud698\ud699\ud69a\ud69b\ud69c\ud69d\ud69e\ud69f\ud6a0\ud6a1\ud6a2\ud6a3\ud6a4\ud6a5\ud6a6\ud6a7\ud6a8\ud6a9\ud6aa\ud6ab\ud6ac\ud6ad\ud6ae\ud6af\ud6b0\ud6b1\ud6b2\ud6b3\ud6b4\ud6b5\ud6b6\ud6b7\ud6b8\ud6b9\ud6ba\ud6bb\ud6bc\ud6bd\ud6be\ud6bf\ud6c0\ud6c1\ud6c2\ud6c3\ud6c4\ud6c5\ud6c6\ud6c7\ud6c8\ud6c9\ud6ca\ud6cb\ud6cc\ud6cd\ud6ce\ud6cf\ud6d0\ud6d1\ud6d2\ud6d3\ud6d4\ud6d5\ud6d6\ud6d7\ud6d8\ud6d9\ud6da\ud6db\ud6dc\ud6dd\ud6de\ud6df\ud6e0\ud6e1\ud6e2\ud6e3\ud6e4\ud6e5\ud6e6\ud6e7\ud6e8\ud6e9\ud6ea\ud6eb\ud6ec\ud6ed\ud6ee\ud6ef\ud6f0\ud6f1\ud6f2\ud6f3\ud6f4\ud6f5\ud6f6\ud6f7\ud6f8\ud6f9\ud6fa\ud6fb\ud6fc\ud6fd\ud6fe\ud6ff\ud700\ud701\ud702\ud703\ud704\ud705\ud706\ud707\ud708\ud709\ud70a\ud70b\ud70c\ud70d\ud70e\ud70f\ud710\ud711\ud712\ud713\ud714\ud715\ud716\ud717\ud718\ud719\ud71a\ud71b\ud71c\ud71d\ud71e\ud71f\ud720\ud721\ud722\ud723\ud724\ud725\ud726\ud727\ud728\ud729\ud72a\ud72b\ud72c\ud72d\ud72e\ud72f\ud730\ud731\ud732\ud733\ud734\ud735\ud736\ud737\ud738\ud739\ud73a\ud73b\ud73c\ud73d\ud73e\ud73f\ud740\ud741\ud742\ud743\ud744\ud745\ud746\ud747\ud748\ud749\ud74a\ud74b\ud74c\ud74d\ud74e\ud74f\ud750\ud751\ud752\ud753\ud754\ud755\ud756\ud757\ud758\ud759\ud75a\ud75b\ud75c\ud75d\ud75e\ud75f\ud760\ud761\ud762\ud763\ud764\ud765\ud766\ud767\ud768\ud769\ud76a\ud76b\ud76c\ud76d\ud76e\ud76f\ud770\ud771\ud772\ud773\ud774\ud775\ud776\ud777\ud778\ud779\ud77a\ud77b\ud77c\ud77d\ud77e\ud77f\ud780\ud781\ud782\ud783\ud784\ud785\ud786\ud787\ud788\ud789\ud78a\ud78b\ud78c\ud78d\ud78e\ud78f\ud790\ud791\ud792\ud793\ud794\ud795\ud796\ud797\ud798\ud799\ud79a\ud79b\ud79c\ud79d\ud79e\ud79f\ud7a0\ud7a1\ud7a2\ud7a3\uf900\uf901\uf902\uf903\uf904\uf905\uf906\uf907\uf908\uf909\uf90a\uf90b\uf90c\uf90d\uf90e\uf90f\uf910\uf911\uf912\uf913\uf914\uf915\uf916\uf917\uf918\uf919\uf91a\uf91b\uf91c\uf91d\uf91e\uf91f\uf920\uf921\uf922\uf923\uf924\uf925\uf926\uf927\uf928\uf929\uf92a\uf92b\uf92c\uf92d\uf92e\uf92f\uf930\uf931\uf932\uf933\uf934\uf935\uf936\uf937\uf938\uf939\uf93a\uf93b\uf93c\uf93d\uf93e\uf93f\uf940\uf941\uf942\uf943\uf944\uf945\uf946\uf947\uf948\uf949\uf94a\uf94b\uf94c\uf94d\uf94e\uf94f\uf950\uf951\uf952\uf953\uf954\uf955\uf956\uf957\uf958\uf959\uf95a\uf95b\uf95c\uf95d\uf95e\uf95f\uf960\uf961\uf962\uf963\uf964\uf965\uf966\uf967\uf968\uf969\uf96a\uf96b\uf96c\uf96d\uf96e\uf96f\uf970\uf971\uf972\uf973\uf974\uf975\uf976\uf977\uf978\uf979\uf97a\uf97b\uf97c\uf97d\uf97e\uf97f\uf980\uf981\uf982\uf983\uf984\uf985\uf986\uf987\uf988\uf989\uf98a\uf98b\uf98c\uf98d\uf98e\uf98f\uf990\uf991\uf992\uf993\uf994\uf995\uf996\uf997\uf998\uf999\uf99a\uf99b\uf99c\uf99d\uf99e\uf99f\uf9a0\uf9a1\uf9a2\uf9a3\uf9a4\uf9a5\uf9a6\uf9a7\uf9a8\uf9a9\uf9aa\uf9ab\uf9ac\uf9ad\uf9ae\uf9af\uf9b0\uf9b1\uf9b2\uf9b3\uf9b4\uf9b5\uf9b6\uf9b7\uf9b8\uf9b9\uf9ba\uf9bb\uf9bc\uf9bd\uf9be\uf9bf\uf9c0\uf9c1\uf9c2\uf9c3\uf9c4\uf9c5\uf9c6\uf9c7\uf9c8\uf9c9\uf9ca\uf9cb\uf9cc\uf9cd\uf9ce\uf9cf\uf9d0\uf9d1\uf9d2\uf9d3\uf9d4\uf9d5\uf9d6\uf9d7\uf9d8\uf9d9\uf9da\uf9db\uf9dc\uf9dd\uf9de\uf9df\uf9e0\uf9e1\uf9e2\uf9e3\uf9e4\uf9e5\uf9e6\uf9e7\uf9e8\uf9e9\uf9ea\uf9eb\uf9ec\uf9ed\uf9ee\uf9ef\uf9f0\uf9f1\uf9f2\uf9f3\uf9f4\uf9f5\uf9f6\uf9f7\uf9f8\uf9f9\uf9fa\uf9fb\uf9fc\uf9fd\uf9fe\uf9ff\ufa00\ufa01\ufa02\ufa03\ufa04\ufa05\ufa06\ufa07\ufa08\ufa09\ufa0a\ufa0b\ufa0c\ufa0d\ufa0e\ufa0f\ufa10\ufa11\ufa12\ufa13\ufa14\ufa15\ufa16\ufa17\ufa18\ufa19\ufa1a\ufa1b\ufa1c\ufa1d\ufa1e\ufa1f\ufa20\ufa21\ufa22\ufa23\ufa24\ufa25\ufa26\ufa27\ufa28\ufa29\ufa2a\ufa2b\ufa2c\ufa2d\ufa30\ufa31\ufa32\ufa33\ufa34\ufa35\ufa36\ufa37\ufa38\ufa39\ufa3a\ufa3b\ufa3c\ufa3d\ufa3e\ufa3f\ufa40\ufa41\ufa42\ufa43\ufa44\ufa45\ufa46\ufa47\ufa48\ufa49\ufa4a\ufa4b\ufa4c\ufa4d\ufa4e\ufa4f\ufa50\ufa51\ufa52\ufa53\ufa54\ufa55\ufa56\ufa57\ufa58\ufa59\ufa5a\ufa5b\ufa5c\ufa5d\ufa5e\ufa5f\ufa60\ufa61\ufa62\ufa63\ufa64\ufa65\ufa66\ufa67\ufa68\ufa69\ufa6a\ufa70\ufa71\ufa72\ufa73\ufa74\ufa75\ufa76\ufa77\ufa78\ufa79\ufa7a\ufa7b\ufa7c\ufa7d\ufa7e\ufa7f\ufa80\ufa81\ufa82\ufa83\ufa84\ufa85\ufa86\ufa87\ufa88\ufa89\ufa8a\ufa8b\ufa8c\ufa8d\ufa8e\ufa8f\ufa90\ufa91\ufa92\ufa93\ufa94\ufa95\ufa96\ufa97\ufa98\ufa99\ufa9a\ufa9b\ufa9c\ufa9d\ufa9e\ufa9f\ufaa0\ufaa1\ufaa2\ufaa3\ufaa4\ufaa5\ufaa6\ufaa7\ufaa8\ufaa9\ufaaa\ufaab\ufaac\ufaad\ufaae\ufaaf\ufab0\ufab1\ufab2\ufab3\ufab4\ufab5\ufab6\ufab7\ufab8\ufab9\ufaba\ufabb\ufabc\ufabd\ufabe\ufabf\ufac0\ufac1\ufac2\ufac3\ufac4\ufac5\ufac6\ufac7\ufac8\ufac9\ufaca\ufacb\ufacc\ufacd\uface\ufacf\ufad0\ufad1\ufad2\ufad3\ufad4\ufad5\ufad6\ufad7\ufad8\ufad9\ufb1d\ufb1f\ufb20\ufb21\ufb22\ufb23\ufb24\ufb25\ufb26\ufb27\ufb28\ufb2a\ufb2b\ufb2c\ufb2d\ufb2e\ufb2f\ufb30\ufb31\ufb32\ufb33\ufb34\ufb35\ufb36\ufb38\ufb39\ufb3a\ufb3b\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46\ufb47\ufb48\ufb49\ufb4a\ufb4b\ufb4c\ufb4d\ufb4e\ufb4f\ufb50\ufb51\ufb52\ufb53\ufb54\ufb55\ufb56\ufb57\ufb58\ufb59\ufb5a\ufb5b\ufb5c\ufb5d\ufb5e\ufb5f\ufb60\ufb61\ufb62\ufb63\ufb64\ufb65\ufb66\ufb67\ufb68\ufb69\ufb6a\ufb6b\ufb6c\ufb6d\ufb6e\ufb6f\ufb70\ufb71\ufb72\ufb73\ufb74\ufb75\ufb76\ufb77\ufb78\ufb79\ufb7a\ufb7b\ufb7c\ufb7d\ufb7e\ufb7f\ufb80\ufb81\ufb82\ufb83\ufb84\ufb85\ufb86\ufb87\ufb88\ufb89\ufb8a\ufb8b\ufb8c\ufb8d\ufb8e\ufb8f\ufb90\ufb91\ufb92\ufb93\ufb94\ufb95\ufb96\ufb97\ufb98\ufb99\ufb9a\ufb9b\ufb9c\ufb9d\ufb9e\ufb9f\ufba0\ufba1\ufba2\ufba3\ufba4\ufba5\ufba6\ufba7\ufba8\ufba9\ufbaa\ufbab\ufbac\ufbad\ufbae\ufbaf\ufbb0\ufbb1\ufbd3\ufbd4\ufbd5\ufbd6\ufbd7\ufbd8\ufbd9\ufbda\ufbdb\ufbdc\ufbdd\ufbde\ufbdf\ufbe0\ufbe1\ufbe2\ufbe3\ufbe4\ufbe5\ufbe6\ufbe7\ufbe8\ufbe9\ufbea\ufbeb\ufbec\ufbed\ufbee\ufbef\ufbf0\ufbf1\ufbf2\ufbf3\ufbf4\ufbf5\ufbf6\ufbf7\ufbf8\ufbf9\ufbfa\ufbfb\ufbfc\ufbfd\ufbfe\ufbff\ufc00\ufc01\ufc02\ufc03\ufc04\ufc05\ufc06\ufc07\ufc08\ufc09\ufc0a\ufc0b\ufc0c\ufc0d\ufc0e\ufc0f\ufc10\ufc11\ufc12\ufc13\ufc14\ufc15\ufc16\ufc17\ufc18\ufc19\ufc1a\ufc1b\ufc1c\ufc1d\ufc1e\ufc1f\ufc20\ufc21\ufc22\ufc23\ufc24\ufc25\ufc26\ufc27\ufc28\ufc29\ufc2a\ufc2b\ufc2c\ufc2d\ufc2e\ufc2f\ufc30\ufc31\ufc32\ufc33\ufc34\ufc35\ufc36\ufc37\ufc38\ufc39\ufc3a\ufc3b\ufc3c\ufc3d\ufc3e\ufc3f\ufc40\ufc41\ufc42\ufc43\ufc44\ufc45\ufc46\ufc47\ufc48\ufc49\ufc4a\ufc4b\ufc4c\ufc4d\ufc4e\ufc4f\ufc50\ufc51\ufc52\ufc53\ufc54\ufc55\ufc56\ufc57\ufc58\ufc59\ufc5a\ufc5b\ufc5c\ufc5d\ufc5e\ufc5f\ufc60\ufc61\ufc62\ufc63\ufc64\ufc65\ufc66\ufc67\ufc68\ufc69\ufc6a\ufc6b\ufc6c\ufc6d\ufc6e\ufc6f\ufc70\ufc71\ufc72\ufc73\ufc74\ufc75\ufc76\ufc77\ufc78\ufc79\ufc7a\ufc7b\ufc7c\ufc7d\ufc7e\ufc7f\ufc80\ufc81\ufc82\ufc83\ufc84\ufc85\ufc86\ufc87\ufc88\ufc89\ufc8a\ufc8b\ufc8c\ufc8d\ufc8e\ufc8f\ufc90\ufc91\ufc92\ufc93\ufc94\ufc95\ufc96\ufc97\ufc98\ufc99\ufc9a\ufc9b\ufc9c\ufc9d\ufc9e\ufc9f\ufca0\ufca1\ufca2\ufca3\ufca4\ufca5\ufca6\ufca7\ufca8\ufca9\ufcaa\ufcab\ufcac\ufcad\ufcae\ufcaf\ufcb0\ufcb1\ufcb2\ufcb3\ufcb4\ufcb5\ufcb6\ufcb7\ufcb8\ufcb9\ufcba\ufcbb\ufcbc\ufcbd\ufcbe\ufcbf\ufcc0\ufcc1\ufcc2\ufcc3\ufcc4\ufcc5\ufcc6\ufcc7\ufcc8\ufcc9\ufcca\ufccb\ufccc\ufccd\ufcce\ufccf\ufcd0\ufcd1\ufcd2\ufcd3\ufcd4\ufcd5\ufcd6\ufcd7\ufcd8\ufcd9\ufcda\ufcdb\ufcdc\ufcdd\ufcde\ufcdf\ufce0\ufce1\ufce2\ufce3\ufce4\ufce5\ufce6\ufce7\ufce8\ufce9\ufcea\ufceb\ufcec\ufced\ufcee\ufcef\ufcf0\ufcf1\ufcf2\ufcf3\ufcf4\ufcf5\ufcf6\ufcf7\ufcf8\ufcf9\ufcfa\ufcfb\ufcfc\ufcfd\ufcfe\ufcff\ufd00\ufd01\ufd02\ufd03\ufd04\ufd05\ufd06\ufd07\ufd08\ufd09\ufd0a\ufd0b\ufd0c\ufd0d\ufd0e\ufd0f\ufd10\ufd11\ufd12\ufd13\ufd14\ufd15\ufd16\ufd17\ufd18\ufd19\ufd1a\ufd1b\ufd1c\ufd1d\ufd1e\ufd1f\ufd20\ufd21\ufd22\ufd23\ufd24\ufd25\ufd26\ufd27\ufd28\ufd29\ufd2a\ufd2b\ufd2c\ufd2d\ufd2e\ufd2f\ufd30\ufd31\ufd32\ufd33\ufd34\ufd35\ufd36\ufd37\ufd38\ufd39\ufd3a\ufd3b\ufd3c\ufd3d\ufd50\ufd51\ufd52\ufd53\ufd54\ufd55\ufd56\ufd57\ufd58\ufd59\ufd5a\ufd5b\ufd5c\ufd5d\ufd5e\ufd5f\ufd60\ufd61\ufd62\ufd63\ufd64\ufd65\ufd66\ufd67\ufd68\ufd69\ufd6a\ufd6b\ufd6c\ufd6d\ufd6e\ufd6f\ufd70\ufd71\ufd72\ufd73\ufd74\ufd75\ufd76\ufd77\ufd78\ufd79\ufd7a\ufd7b\ufd7c\ufd7d\ufd7e\ufd7f\ufd80\ufd81\ufd82\ufd83\ufd84\ufd85\ufd86\ufd87\ufd88\ufd89\ufd8a\ufd8b\ufd8c\ufd8d\ufd8e\ufd8f\ufd92\ufd93\ufd94\ufd95\ufd96\ufd97\ufd98\ufd99\ufd9a\ufd9b\ufd9c\ufd9d\ufd9e\ufd9f\ufda0\ufda1\ufda2\ufda3\ufda4\ufda5\ufda6\ufda7\ufda8\ufda9\ufdaa\ufdab\ufdac\ufdad\ufdae\ufdaf\ufdb0\ufdb1\ufdb2\ufdb3\ufdb4\ufdb5\ufdb6\ufdb7\ufdb8\ufdb9\ufdba\ufdbb\ufdbc\ufdbd\ufdbe\ufdbf\ufdc0\ufdc1\ufdc2\ufdc3\ufdc4\ufdc5\ufdc6\ufdc7\ufdf0\ufdf1\ufdf2\ufdf3\ufdf4\ufdf5\ufdf6\ufdf7\ufdf8\ufdf9\ufdfa\ufdfb\ufe70\ufe71\ufe72\ufe73\ufe74\ufe76\ufe77\ufe78\ufe79\ufe7a\ufe7b\ufe7c\ufe7d\ufe7e\ufe7f\ufe80\ufe81\ufe82\ufe83\ufe84\ufe85\ufe86\ufe87\ufe88\ufe89\ufe8a\ufe8b\ufe8c\ufe8d\ufe8e\ufe8f\ufe90\ufe91\ufe92\ufe93\ufe94\ufe95\ufe96\ufe97\ufe98\ufe99\ufe9a\ufe9b\ufe9c\ufe9d\ufe9e\ufe9f\ufea0\ufea1\ufea2\ufea3\ufea4\ufea5\ufea6\ufea7\ufea8\ufea9\ufeaa\ufeab\ufeac\ufead\ufeae\ufeaf\ufeb0\ufeb1\ufeb2\ufeb3\ufeb4\ufeb5\ufeb6\ufeb7\ufeb8\ufeb9\ufeba\ufebb\ufebc\ufebd\ufebe\ufebf\ufec0\ufec1\ufec2\ufec3\ufec4\ufec5\ufec6\ufec7\ufec8\ufec9\ufeca\ufecb\ufecc\ufecd\ufece\ufecf\ufed0\ufed1\ufed2\ufed3\ufed4\ufed5\ufed6\ufed7\ufed8\ufed9\ufeda\ufedb\ufedc\ufedd\ufede\ufedf\ufee0\ufee1\ufee2\ufee3\ufee4\ufee5\ufee6\ufee7\ufee8\ufee9\ufeea\ufeeb\ufeec\ufeed\ufeee\ufeef\ufef0\ufef1\ufef2\ufef3\ufef4\ufef5\ufef6\ufef7\ufef8\ufef9\ufefa\ufefb\ufefc\uff66\uff67\uff68\uff69\uff6a\uff6b\uff6c\uff6d\uff6e\uff6f\uff71\uff72\uff73\uff74\uff75\uff76\uff77\uff78\uff79\uff7a\uff7b\uff7c\uff7d\uff7e\uff7f\uff80\uff81\uff82\uff83\uff84\uff85\uff86\uff87\uff88\uff89\uff8a\uff8b\uff8c\uff8d\uff8e\uff8f\uff90\uff91\uff92\uff93\uff94\uff95\uff96\uff97\uff98\uff99\uff9a\uff9b\uff9c\uff9d\uffa0\uffa1\uffa2\uffa3\uffa4\uffa5\uffa6\uffa7\uffa8\uffa9\uffaa\uffab\uffac\uffad\uffae\uffaf\uffb0\uffb1\uffb2\uffb3\uffb4\uffb5\uffb6\uffb7\uffb8\uffb9\uffba\uffbb\uffbc\uffbd\uffbe\uffc2\uffc3\uffc4\uffc5\uffc6\uffc7\uffca\uffcb\uffcc\uffcd\uffce\uffcf\uffd2\uffd3\uffd4\uffd5\uffd6\uffd7\uffda\uffdb\uffdc'
3rdparty/jinja2/_stringdefs.py:Lt = u'\u01c5\u01c8\u01cb\u01f2\u1f88\u1f89\u1f8a\u1f8b\u1f8c\u1f8d\u1f8e\u1f8f\u1f98\u1f99\u1f9a\u1f9b\u1f9c\u1f9d\u1f9e\u1f9f\u1fa8\u1fa9\u1faa\u1fab\u1fac\u1fad\u1fae\u1faf\u1fbc\u1fcc\u1ffc'
3rdparty/jinja2/_stringdefs.py:Lu = u'ABCDEFGHIJKLMNOPQRSTUVWXYZ\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd8\xd9\xda\xdb\xdc\xdd\xde\u0100\u0102\u0104\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114\u0116\u0118\u011a\u011c\u011e\u0120\u0122\u0124\u0126\u0128\u012a\u012c\u012e\u0130\u0132\u0134\u0136\u0139\u013b\u013d\u013f\u0141\u0143\u0145\u0147\u014a\u014c\u014e\u0150\u0152\u0154\u0156\u0158\u015a\u015c\u015e\u0160\u0162\u0164\u0166\u0168\u016a\u016c\u016e\u0170\u0172\u0174\u0176\u0178\u0179\u017b\u017d\u0181\u0182\u0184\u0186\u0187\u0189\u018a\u018b\u018e\u018f\u0190\u0191\u0193\u0194\u0196\u0197\u0198\u019c\u019d\u019f\u01a0\u01a2\u01a4\u01a6\u01a7\u01a9\u01ac\u01ae\u01af\u01b1\u01b2\u01b3\u01b5\u01b7\u01b8\u01bc\u01c4\u01c7\u01ca\u01cd\u01cf\u01d1\u01d3\u01d5\u01d7\u01d9\u01db\u01de\u01e0\u01e2\u01e4\u01e6\u01e8\u01ea\u01ec\u01ee\u01f1\u01f4\u01f6\u01f7\u01f8\u01fa\u01fc\u01fe\u0200\u0202\u0204\u0206\u0208\u020a\u020c\u020e\u0210\u0212\u0214\u0216\u0218\u021a\u021c\u021e\u0220\u0222\u0224\u0226\u0228\u022a\u022c\u022e\u0230\u0232\u023a\u023b\u023d\u023e\u0241\u0386\u0388\u0389\u038a\u038c\u038e\u038f\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\u03aa\u03ab\u03d2\u03d3\u03d4\u03d8\u03da\u03dc\u03de\u03e0\u03e2\u03e4\u03e6\u03e8\u03ea\u03ec\u03ee\u03f4\u03f7\u03f9\u03fa\u03fd\u03fe\u03ff\u0400\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040a\u040b\u040c\u040d\u040e\u040f\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0460\u0462\u0464\u0466\u0468\u046a\u046c\u046e\u0470\u0472\u0474\u0476\u0478\u047a\u047c\u047e\u0480\u048a\u048c\u048e\u0490\u0492\u0494\u0496\u0498\u049a\u049c\u049e\u04a0\u04a2\u04a4\u04a6\u04a8\u04aa\u04ac\u04ae\u04b0\u04b2\u04b4\u04b6\u04b8\u04ba\u04bc\u04be\u04c0\u04c1\u04c3\u04c5\u04c7\u04c9\u04cb\u04cd\u04d0\u04d2\u04d4\u04d6\u04d8\u04da\u04dc\u04de\u04e0\u04e2\u04e4\u04e6\u04e8\u04ea\u04ec\u04ee\u04f0\u04f2\u04f4\u04f6\u04f8\u0500\u0502\u0504\u0506\u0508\u050a\u050c\u050e\u0531\u0532\u0533\u0534\u0535\u0536\u0537\u0538\u0539\u053a\u053b\u053c\u053d\u053e\u053f\u0540\u0541\u0542\u0543\u0544\u0545\u0546\u0547\u0548\u0549\u054a\u054b\u054c\u054d\u054e\u054f\u0550\u0551\u0552\u0553\u0554\u0555\u0556\u10a0\u10a1\u10a2\u10a3\u10a4\u10a5\u10a6\u10a7\u10a8\u10a9\u10aa\u10ab\u10ac\u10ad\u10ae\u10af\u10b0\u10b1\u10b2\u10b3\u10b4\u10b5\u10b6\u10b7\u10b8\u10b9\u10ba\u10bb\u10bc\u10bd\u10be\u10bf\u10c0\u10c1\u10c2\u10c3\u10c4\u10c5\u1e00\u1e02\u1e04\u1e06\u1e08\u1e0a\u1e0c\u1e0e\u1e10\u1e12\u1e14\u1e16\u1e18\u1e1a\u1e1c\u1e1e\u1e20\u1e22\u1e24\u1e26\u1e28\u1e2a\u1e2c\u1e2e\u1e30\u1e32\u1e34\u1e36\u1e38\u1e3a\u1e3c\u1e3e\u1e40\u1e42\u1e44\u1e46\u1e48\u1e4a\u1e4c\u1e4e\u1e50\u1e52\u1e54\u1e56\u1e58\u1e5a\u1e5c\u1e5e\u1e60\u1e62\u1e64\u1e66\u1e68\u1e6a\u1e6c\u1e6e\u1e70\u1e72\u1e74\u1e76\u1e78\u1e7a\u1e7c\u1e7e\u1e80\u1e82\u1e84\u1e86\u1e88\u1e8a\u1e8c\u1e8e\u1e90\u1e92\u1e94\u1ea0\u1ea2\u1ea4\u1ea6\u1ea8\u1eaa\u1eac\u1eae\u1eb0\u1eb2\u1eb4\u1eb6\u1eb8\u1eba\u1ebc\u1ebe\u1ec0\u1ec2\u1ec4\u1ec6\u1ec8\u1eca\u1ecc\u1ece\u1ed0\u1ed2\u1ed4\u1ed6\u1ed8\u1eda\u1edc\u1ede\u1ee0\u1ee2\u1ee4\u1ee6\u1ee8\u1eea\u1eec\u1eee\u1ef0\u1ef2\u1ef4\u1ef6\u1ef8\u1f08\u1f09\u1f0a\u1f0b\u1f0c\u1f0d\u1f0e\u1f0f\u1f18\u1f19\u1f1a\u1f1b\u1f1c\u1f1d\u1f28\u1f29\u1f2a\u1f2b\u1f2c\u1f2d\u1f2e\u1f2f\u1f38\u1f39\u1f3a\u1f3b\u1f3c\u1f3d\u1f3e\u1f3f\u1f48\u1f49\u1f4a\u1f4b\u1f4c\u1f4d\u1f59\u1f5b\u1f5d\u1f5f\u1f68\u1f69\u1f6a\u1f6b\u1f6c\u1f6d\u1f6e\u1f6f\u1fb8\u1fb9\u1fba\u1fbb\u1fc8\u1fc9\u1fca\u1fcb\u1fd8\u1fd9\u1fda\u1fdb\u1fe8\u1fe9\u1fea\u1feb\u1fec\u1ff8\u1ff9\u1ffa\u1ffb\u2102\u2107\u210b\u210c\u210d\u2110\u2111\u2112\u2115\u2119\u211a\u211b\u211c\u211d\u2124\u2126\u2128\u212a\u212b\u212c\u212d\u2130\u2131\u2133\u213e\u213f\u2145\u2c00\u2c01\u2c02\u2c03\u2c04\u2c05\u2c06\u2c07\u2c08\u2c09\u2c0a\u2c0b\u2c0c\u2c0d\u2c0e\u2c0f\u2c10\u2c11\u2c12\u2c13\u2c14\u2c15\u2c16\u2c17\u2c18\u2c19\u2c1a\u2c1b\u2c1c\u2c1d\u2c1e\u2c1f\u2c20\u2c21\u2c22\u2c23\u2c24\u2c25\u2c26\u2c27\u2c28\u2c29\u2c2a\u2c2b\u2c2c\u2c2d\u2c2e\u2c80\u2c82\u2c84\u2c86\u2c88\u2c8a\u2c8c\u2c8e\u2c90\u2c92\u2c94\u2c96\u2c98\u2c9a\u2c9c\u2c9e\u2ca0\u2ca2\u2ca4\u2ca6\u2ca8\u2caa\u2cac\u2cae\u2cb0\u2cb2\u2cb4\u2cb6\u2cb8\u2cba\u2cbc\u2cbe\u2cc0\u2cc2\u2cc4\u2cc6\u2cc8\u2cca\u2ccc\u2cce\u2cd0\u2cd2\u2cd4\u2cd6\u2cd8\u2cda\u2cdc\u2cde\u2ce0\u2ce2\uff21\uff22\uff23\uff24\uff25\uff26\uff27\uff28\uff29\uff2a\uff2b\uff2c\uff2d\uff2e\uff2f\uff30\uff31\uff32\uff33\uff34\uff35\uff36\uff37\uff38\uff39\uff3a'
3rdparty/jinja2/_stringdefs.py:Mc = u'\u0903\u093e\u093f\u0940\u0949\u094a\u094b\u094c\u0982\u0983\u09be\u09bf\u09c0\u09c7\u09c8\u09cb\u09cc\u09d7\u0a03\u0a3e\u0a3f\u0a40\u0a83\u0abe\u0abf\u0ac0\u0ac9\u0acb\u0acc\u0b02\u0b03\u0b3e\u0b40\u0b47\u0b48\u0b4b\u0b4c\u0b57\u0bbe\u0bbf\u0bc1\u0bc2\u0bc6\u0bc7\u0bc8\u0bca\u0bcb\u0bcc\u0bd7\u0c01\u0c02\u0c03\u0c41\u0c42\u0c43\u0c44\u0c82\u0c83\u0cbe\u0cc0\u0cc1\u0cc2\u0cc3\u0cc4\u0cc7\u0cc8\u0cca\u0ccb\u0cd5\u0cd6\u0d02\u0d03\u0d3e\u0d3f\u0d40\u0d46\u0d47\u0d48\u0d4a\u0d4b\u0d4c\u0d57\u0d82\u0d83\u0dcf\u0dd0\u0dd1\u0dd8\u0dd9\u0dda\u0ddb\u0ddc\u0ddd\u0dde\u0ddf\u0df2\u0df3\u0f3e\u0f3f\u0f7f\u102c\u1031\u1038\u1056\u1057\u17b6\u17be\u17bf\u17c0\u17c1\u17c2\u17c3\u17c4\u17c5\u17c7\u17c8\u1923\u1924\u1925\u1926\u1929\u192a\u192b\u1930\u1931\u1933\u1934\u1935\u1936\u1937\u1938\u19b0\u19b1\u19b2\u19b3\u19b4\u19b5\u19b6\u19b7\u19b8\u19b9\u19ba\u19bb\u19bc\u19bd\u19be\u19bf\u19c0\u19c8\u19c9\u1a19\u1a1a\u1a1b\ua802\ua823\ua824\ua827'
3rdparty/jinja2/_stringdefs.py:Mn = u'\u0300\u0301\u0302\u0303\u0304\u0305\u0306\u0307\u0308\u0309\u030a\u030b\u030c\u030d\u030e\u030f\u0310\u0311\u0312\u0313\u0314\u0315\u0316\u0317\u0318\u0319\u031a\u031b\u031c\u031d\u031e\u031f\u0320\u0321\u0322\u0323\u0324\u0325\u0326\u0327\u0328\u0329\u032a\u032b\u032c\u032d\u032e\u032f\u0330\u0331\u0332\u0333\u0334\u0335\u0336\u0337\u0338\u0339\u033a\u033b\u033c\u033d\u033e\u033f\u0340\u0341\u0342\u0343\u0344\u0345\u0346\u0347\u0348\u0349\u034a\u034b\u034c\u034d\u034e\u034f\u0350\u0351\u0352\u0353\u0354\u0355\u0356\u0357\u0358\u0359\u035a\u035b\u035c\u035d\u035e\u035f\u0360\u0361\u0362\u0363\u0364\u0365\u0366\u0367\u0368\u0369\u036a\u036b\u036c\u036d\u036e\u036f\u0483\u0484\u0485\u0486\u0591\u0592\u0593\u0594\u0595\u0596\u0597\u0598\u0599\u059a\u059b\u059c\u059d\u059e\u059f\u05a0\u05a1\u05a2\u05a3\u05a4\u05a5\u05a6\u05a7\u05a8\u05a9\u05aa\u05ab\u05ac\u05ad\u05ae\u05af\u05b0\u05b1\u05b2\u05b3\u05b4\u05b5\u05b6\u05b7\u05b8\u05b9\u05bb\u05bc\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610\u0611\u0612\u0613\u0614\u0615\u064b\u064c\u064d\u064e\u064f\u0650\u0651\u0652\u0653\u0654\u0655\u0656\u0657\u0658\u0659\u065a\u065b\u065c\u065d\u065e\u0670\u06d6\u06d7\u06d8\u06d9\u06da\u06db\u06dc\u06df\u06e0\u06e1\u06e2\u06e3\u06e4\u06e7\u06e8\u06ea\u06eb\u06ec\u06ed\u0711\u0730\u0731\u0732\u0733\u0734\u0735\u0736\u0737\u0738\u0739\u073a\u073b\u073c\u073d\u073e\u073f\u0740\u0741\u0742\u0743\u0744\u0745\u0746\u0747\u0748\u0749\u074a\u07a6\u07a7\u07a8\u07a9\u07aa\u07ab\u07ac\u07ad\u07ae\u07af\u07b0\u0901\u0902\u093c\u0941\u0942\u0943\u0944\u0945\u0946\u0947\u0948\u094d\u0951\u0952\u0953\u0954\u0962\u0963\u0981\u09bc\u09c1\u09c2\u09c3\u09c4\u09cd\u09e2\u09e3\u0a01\u0a02\u0a3c\u0a41\u0a42\u0a47\u0a48\u0a4b\u0a4c\u0a4d\u0a70\u0a71\u0a81\u0a82\u0abc\u0ac1\u0ac2\u0ac3\u0ac4\u0ac5\u0ac7\u0ac8\u0acd\u0ae2\u0ae3\u0b01\u0b3c\u0b3f\u0b41\u0b42\u0b43\u0b4d\u0b56\u0b82\u0bc0\u0bcd\u0c3e\u0c3f\u0c40\u0c46\u0c47\u0c48\u0c4a\u0c4b\u0c4c\u0c4d\u0c55\u0c56\u0cbc\u0cbf\u0cc6\u0ccc\u0ccd\u0d41\u0d42\u0d43\u0d4d\u0dca\u0dd2\u0dd3\u0dd4\u0dd6\u0e31\u0e34\u0e35\u0e36\u0e37\u0e38\u0e39\u0e3a\u0e47\u0e48\u0e49\u0e4a\u0e4b\u0e4c\u0e4d\u0e4e\u0eb1\u0eb4\u0eb5\u0eb6\u0eb7\u0eb8\u0eb9\u0ebb\u0ebc\u0ec8\u0ec9\u0eca\u0ecb\u0ecc\u0ecd\u0f18\u0f19\u0f35\u0f37\u0f39\u0f71\u0f72\u0f73\u0f74\u0f75\u0f76\u0f77\u0f78\u0f79\u0f7a\u0f7b\u0f7c\u0f7d\u0f7e\u0f80\u0f81\u0f82\u0f83\u0f84\u0f86\u0f87\u0f90\u0f91\u0f92\u0f93\u0f94\u0f95\u0f96\u0f97\u0f99\u0f9a\u0f9b\u0f9c\u0f9d\u0f9e\u0f9f\u0fa0\u0fa1\u0fa2\u0fa3\u0fa4\u0fa5\u0fa6\u0fa7\u0fa8\u0fa9\u0faa\u0fab\u0fac\u0fad\u0fae\u0faf\u0fb0\u0fb1\u0fb2\u0fb3\u0fb4\u0fb5\u0fb6\u0fb7\u0fb8\u0fb9\u0fba\u0fbb\u0fbc\u0fc6\u102d\u102e\u102f\u1030\u1032\u1036\u1037\u1039\u1058\u1059\u135f\u1712\u1713\u1714\u1732\u1733\u1734\u1752\u1753\u1772\u1773\u17b7\u17b8\u17b9\u17ba\u17bb\u17bc\u17bd\u17c6\u17c9\u17ca\u17cb\u17cc\u17cd\u17ce\u17cf\u17d0\u17d1\u17d2\u17d3\u17dd\u180b\u180c\u180d\u18a9\u1920\u1921\u1922\u1927\u1928\u1932\u1939\u193a\u193b\u1a17\u1a18\u1dc0\u1dc1\u1dc2\u1dc3\u20d0\u20d1\u20d2\u20d3\u20d4\u20d5\u20d6\u20d7\u20d8\u20d9\u20da\u20db\u20dc\u20e1\u20e5\u20e6\u20e7\u20e8\u20e9\u20ea\u20eb\u302a\u302b\u302c\u302d\u302e\u302f\u3099\u309a\ua806\ua80b\ua825\ua826\ufb1e\ufe00\ufe01\ufe02\ufe03\ufe04\ufe05\ufe06\ufe07\ufe08\ufe09\ufe0a\ufe0b\ufe0c\ufe0d\ufe0e\ufe0f\ufe20\ufe21\ufe22\ufe23'
3rdparty/jinja2/_stringdefs.py:Pi = u'\xab\u2018\u201b\u201c\u201f\u2039\u2e02\u2e04\u2e09\u2e0c\u2e1c'
3rdparty/jinja2/_stringdefs.py:Sc = u'$\xa2\xa3\xa4\xa5\u060b\u09f2\u09f3\u0af1\u0bf9\u0e3f\u17db\u20a0\u20a1\u20a2\u20a3\u20a4\u20a5\u20a6\u20a7\u20a8\u20a9\u20aa\u20ab\u20ac\u20ad\u20ae\u20af\u20b0\u20b1\u20b2\u20b3\u20b4\u20b5\ufdfc\ufe69\uff04\uffe0\uffe1\uffe5\uffe6'
3rdparty/jinja2/_stringdefs.py:Sm = u'+<=>|~\xac\xb1\xd7\xf7\u03f6\u2044\u2052\u207a\u207b\u207c\u208a\u208b\u208c\u2140\u2141\u2142\u2143\u2144\u214b\u2190\u2191\u2192\u2193\u2194\u219a\u219b\u21a0\u21a3\u21a6\u21ae\u21ce\u21cf\u21d2\u21d4\u21f4\u21f5\u21f6\u21f7\u21f8\u21f9\u21fa\u21fb\u21fc\u21fd\u21fe\u21ff\u2200\u2201\u2202\u2203\u2204\u2205\u2206\u2207\u2208\u2209\u220a\u220b\u220c\u220d\u220e\u220f\u2210\u2211\u2212\u2213\u2214\u2215\u2216\u2217\u2218\u2219\u221a\u221b\u221c\u221d\u221e\u221f\u2220\u2221\u2222\u2223\u2224\u2225\u2226\u2227\u2228\u2229\u222a\u222b\u222c\u222d\u222e\u222f\u2230\u2231\u2232\u2233\u2234\u2235\u2236\u2237\u2238\u2239\u223a\u223b\u223c\u223d\u223e\u223f\u2240\u2241\u2242\u2243\u2244\u2245\u2246\u2247\u2248\u2249\u224a\u224b\u224c\u224d\u224e\u224f\u2250\u2251\u2252\u2253\u2254\u2255\u2256\u2257\u2258\u2259\u225a\u225b\u225c\u225d\u225e\u225f\u2260\u2261\u2262\u2263\u2264\u2265\u2266\u2267\u2268\u2269\u226a\u226b\u226c\u226d\u226e\u226f\u2270\u2271\u2272\u2273\u2274\u2275\u2276\u2277\u2278\u2279\u227a\u227b\u227c\u227d\u227e\u227f\u2280\u2281\u2282\u2283\u2284\u2285\u2286\u2287\u2288\u2289\u228a\u228b\u228c\u228d\u228e\u228f\u2290\u2291\u2292\u2293\u2294\u2295\u2296\u2297\u2298\u2299\u229a\u229b\u229c\u229d\u229e\u229f\u22a0\u22a1\u22a2\u22a3\u22a4\u22a5\u22a6\u22a7\u22a8\u22a9\u22aa\u22ab\u22ac\u22ad\u22ae\u22af\u22b0\u22b1\u22b2\u22b3\u22b4\u22b5\u22b6\u22b7\u22b8\u22b9\u22ba\u22bb\u22bc\u22bd\u22be\u22bf\u22c0\u22c1\u22c2\u22c3\u22c4\u22c5\u22c6\u22c7\u22c8\u22c9\u22ca\u22cb\u22cc\u22cd\u22ce\u22cf\u22d0\u22d1\u22d2\u22d3\u22d4\u22d5\u22d6\u22d7\u22d8\u22d9\u22da\u22db\u22dc\u22dd\u22de\u22df\u22e0\u22e1\u22e2\u22e3\u22e4\u22e5\u22e6\u22e7\u22e8\u22e9\u22ea\u22eb\u22ec\u22ed\u22ee\u22ef\u22f0\u22f1\u22f2\u22f3\u22f4\u22f5\u22f6\u22f7\u22f8\u22f9\u22fa\u22fb\u22fc\u22fd\u22fe\u22ff\u2308\u2309\u230a\u230b\u2320\u2321\u237c\u239b\u239c\u239d\u239e\u239f\u23a0\u23a1\u23a2\u23a3\u23a4\u23a5\u23a6\u23a7\u23a8\u23a9\u23aa\u23ab\u23ac\u23ad\u23ae\u23af\u23b0\u23b1\u23b2\u23b3\u25b7\u25c1\u25f8\u25f9\u25fa\u25fb\u25fc\u25fd\u25fe\u25ff\u266f\u27c0\u27c1\u27c2\u27c3\u27c4\u27d0\u27d1\u27d2\u27d3\u27d4\u27d5\u27d6\u27d7\u27d8\u27d9\u27da\u27db\u27dc\u27dd\u27de\u27df\u27e0\u27e1\u27e2\u27e3\u27e4\u27e5\u27f0\u27f1\u27f2\u27f3\u27f4\u27f5\u27f6\u27f7\u27f8\u27f9\u27fa\u27fb\u27fc\u27fd\u27fe\u27ff\u2900\u2901\u2902\u2903\u2904\u2905\u2906\u2907\u2908\u2909\u290a\u290b\u290c\u290d\u290e\u290f\u2910\u2911\u2912\u2913\u2914\u2915\u2916\u2917\u2918\u2919\u291a\u291b\u291c\u291d\u291e\u291f\u2920\u2921\u2922\u2923\u2924\u2925\u2926\u2927\u2928\u2929\u292a\u292b\u292c\u292d\u292e\u292f\u2930\u2931\u2932\u2933\u2934\u2935\u2936\u2937\u2938\u2939\u293a\u293b\u293c\u293d\u293e\u293f\u2940\u2941\u2942\u2943\u2944\u2945\u2946\u2947\u2948\u2949\u294a\u294b\u294c\u294d\u294e\u294f\u2950\u2951\u2952\u2953\u2954\u2955\u2956\u2957\u2958\u2959\u295a\u295b\u295c\u295d\u295e\u295f\u2960\u2961\u2962\u2963\u2964\u2965\u2966\u2967\u2968\u2969\u296a\u296b\u296c\u296d\u296e\u296f\u2970\u2971\u2972\u2973\u2974\u2975\u2976\u2977\u2978\u2979\u297a\u297b\u297c\u297d\u297e\u297f\u2980\u2981\u2982\u2999\u299a\u299b\u299c\u299d\u299e\u299f\u29a0\u29a1\u29a2\u29a3\u29a4\u29a5\u29a6\u29a7\u29a8\u29a9\u29aa\u29ab\u29ac\u29ad\u29ae\u29af\u29b0\u29b1\u29b2\u29b3\u29b4\u29b5\u29b6\u29b7\u29b8\u29b9\u29ba\u29bb\u29bc\u29bd\u29be\u29bf\u29c0\u29c1\u29c2\u29c3\u29c4\u29c5\u29c6\u29c7\u29c8\u29c9\u29ca\u29cb\u29cc\u29cd\u29ce\u29cf\u29d0\u29d1\u29d2\u29d3\u29d4\u29d5\u29d6\u29d7\u29dc\u29dd\u29de\u29df\u29e0\u29e1\u29e2\u29e3\u29e4\u29e5\u29e6\u29e7\u29e8\u29e9\u29ea\u29eb\u29ec\u29ed\u29ee\u29ef\u29f0\u29f1\u29f2\u29f3\u29f4\u29f5\u29f6\u29f7\u29f8\u29f9\u29fa\u29fb\u29fe\u29ff\u2a00\u2a01\u2a02\u2a03\u2a04\u2a05\u2a06\u2a07\u2a08\u2a09\u2a0a\u2a0b\u2a0c\u2a0d\u2a0e\u2a0f\u2a10\u2a11\u2a12\u2a13\u2a14\u2a15\u2a16\u2a17\u2a18\u2a19\u2a1a\u2a1b\u2a1c\u2a1d\u2a1e\u2a1f\u2a20\u2a21\u2a22\u2a23\u2a24\u2a25\u2a26\u2a27\u2a28\u2a29\u2a2a\u2a2b\u2a2c\u2a2d\u2a2e\u2a2f\u2a30\u2a31\u2a32\u2a33\u2a34\u2a35\u2a36\u2a37\u2a38\u2a39\u2a3a\u2a3b\u2a3c\u2a3d\u2a3e\u2a3f\u2a40\u2a41\u2a42\u2a43\u2a44\u2a45\u2a46\u2a47\u2a48\u2a49\u2a4a\u2a4b\u2a4c\u2a4d\u2a4e\u2a4f\u2a50\u2a51\u2a52\u2a53\u2a54\u2a55\u2a56\u2a57\u2a58\u2a59\u2a5a\u2a5b\u2a5c\u2a5d\u2a5e\u2a5f\u2a60\u2a61\u2a62\u2a63\u2a64\u2a65\u2a66\u2a67\u2a68\u2a69\u2a6a\u2a6b\u2a6c\u2a6d\u2a6e\u2a6f\u2a70\u2a71\u2a72\u2a73\u2a74\u2a75\u2a76\u2a77\u2a78\u2a79\u2a7a\u2a7b\u2a7c\u2a7d\u2a7e\u2a7f\u2a80\u2a81\u2a82\u2a83\u2a84\u2a85\u2a86\u2a87\u2a88\u2a89\u2a8a\u2a8b\u2a8c\u2a8d\u2a8e\u2a8f\u2a90\u2a91\u2a92\u2a93\u2a94\u2a95\u2a96\u2a97\u2a98\u2a99\u2a9a\u2a9b\u2a9c\u2a9d\u2a9e\u2a9f\u2aa0\u2aa1\u2aa2\u2aa3\u2aa4\u2aa5\u2aa6\u2aa7\u2aa8\u2aa9\u2aaa\u2aab\u2aac\u2aad\u2aae\u2aaf\u2ab0\u2ab1\u2ab2\u2ab3\u2ab4\u2ab5\u2ab6\u2ab7\u2ab8\u2ab9\u2aba\u2abb\u2abc\u2abd\u2abe\u2abf\u2ac0\u2ac1\u2ac2\u2ac3\u2ac4\u2ac5\u2ac6\u2ac7\u2ac8\u2ac9\u2aca\u2acb\u2acc\u2acd\u2ace\u2acf\u2ad0\u2ad1\u2ad2\u2ad3\u2ad4\u2ad5\u2ad6\u2ad7\u2ad8\u2ad9\u2ada\u2adb\u2adc\u2add\u2ade\u2adf\u2ae0\u2ae1\u2ae2\u2ae3\u2ae4\u2ae5\u2ae6\u2ae7\u2ae8\u2ae9\u2aea\u2aeb\u2aec\u2aed\u2aee\u2aef\u2af0\u2af1\u2af2\u2af3\u2af4\u2af5\u2af6\u2af7\u2af8\u2af9\u2afa\u2afb\u2afc\u2afd\u2afe\u2aff\ufb29\ufe62\ufe64\ufe65\ufe66\uff0b\uff1c\uff1d\uff1e\uff5c\uff5e\uffe2\uffe9\uffea\uffeb\uffec'
3rdparty/jinja2/_stringdefs.py:So = u'\xa6\xa7\xa9\xae\xb0\xb6\u0482\u060e\u060f\u06e9\u06fd\u06fe\u09fa\u0b70\u0bf3\u0bf4\u0bf5\u0bf6\u0bf7\u0bf8\u0bfa\u0f01\u0f02\u0f03\u0f13\u0f14\u0f15\u0f16\u0f17\u0f1a\u0f1b\u0f1c\u0f1d\u0f1e\u0f1f\u0f34\u0f36\u0f38\u0fbe\u0fbf\u0fc0\u0fc1\u0fc2\u0fc3\u0fc4\u0fc5\u0fc7\u0fc8\u0fc9\u0fca\u0fcb\u0fcc\u0fcf\u1360\u1390\u1391\u1392\u1393\u1394\u1395\u1396\u1397\u1398\u1399\u1940\u19e0\u19e1\u19e2\u19e3\u19e4\u19e5\u19e6\u19e7\u19e8\u19e9\u19ea\u19eb\u19ec\u19ed\u19ee\u19ef\u19f0\u19f1\u19f2\u19f3\u19f4\u19f5\u19f6\u19f7\u19f8\u19f9\u19fa\u19fb\u19fc\u19fd\u19fe\u19ff\u2100\u2101\u2103\u2104\u2105\u2106\u2108\u2109\u2114\u2116\u2117\u2118\u211e\u211f\u2120\u2121\u2122\u2123\u2125\u2127\u2129\u212e\u2132\u213a\u213b\u214a\u214c\u2195\u2196\u2197\u2198\u2199\u219c\u219d\u219e\u219f\u21a1\u21a2\u21a4\u21a5\u21a7\u21a8\u21a9\u21aa\u21ab\u21ac\u21ad\u21af\u21b0\u21b1\u21b2\u21b3\u21b4\u21b5\u21b6\u21b7\u21b8\u21b9\u21ba\u21bb\u21bc\u21bd\u21be\u21bf\u21c0\u21c1\u21c2\u21c3\u21c4\u21c5\u21c6\u21c7\u21c8\u21c9\u21ca\u21cb\u21cc\u21cd\u21d0\u21d1\u21d3\u21d5\u21d6\u21d7\u21d8\u21d9\u21da\u21db\u21dc\u21dd\u21de\u21df\u21e0\u21e1\u21e2\u21e3\u21e4\u21e5\u21e6\u21e7\u21e8\u21e9\u21ea\u21eb\u21ec\u21ed\u21ee\u21ef\u21f0\u21f1\u21f2\u21f3\u2300\u2301\u2302\u2303\u2304\u2305\u2306\u2307\u230c\u230d\u230e\u230f\u2310\u2311\u2312\u2313\u2314\u2315\u2316\u2317\u2318\u2319\u231a\u231b\u231c\u231d\u231e\u231f\u2322\u2323\u2324\u2325\u2326\u2327\u2328\u232b\u232c\u232d\u232e\u232f\u2330\u2331\u2332\u2333\u2334\u2335\u2336\u2337\u2338\u2339\u233a\u233b\u233c\u233d\u233e\u233f\u2340\u2341\u2342\u2343\u2344\u2345\u2346\u2347\u2348\u2349\u234a\u234b\u234c\u234d\u234e\u234f\u2350\u2351\u2352\u2353\u2354\u2355\u2356\u2357\u2358\u2359\u235a\u235b\u235c\u235d\u235e\u235f\u2360\u2361\u2362\u2363\u2364\u2365\u2366\u2367\u2368\u2369\u236a\u236b\u236c\u236d\u236e\u236f\u2370\u2371\u2372\u2373\u2374\u2375\u2376\u2377\u2378\u2379\u237a\u237b\u237d\u237e\u237f\u2380\u2381\u2382\u2383\u2384\u2385\u2386\u2387\u2388\u2389\u238a\u238b\u238c\u238d\u238e\u238f\u2390\u2391\u2392\u2393\u2394\u2395\u2396\u2397\u2398\u2399\u239a\u23b7\u23b8\u23b9\u23ba\u23bb\u23bc\u23bd\u23be\u23bf\u23c0\u23c1\u23c2\u23c3\u23c4\u23c5\u23c6\u23c7\u23c8\u23c9\u23ca\u23cb\u23cc\u23cd\u23ce\u23cf\u23d0\u23d1\u23d2\u23d3\u23d4\u23d5\u23d6\u23d7\u23d8\u23d9\u23da\u23db\u2400\u2401\u2402\u2403\u2404\u2405\u2406\u2407\u2408\u2409\u240a\u240b\u240c\u240d\u240e\u240f\u2410\u2411\u2412\u2413\u2414\u2415\u2416\u2417\u2418\u2419\u241a\u241b\u241c\u241d\u241e\u241f\u2420\u2421\u2422\u2423\u2424\u2425\u2426\u2440\u2441\u2442\u2443\u2444\u2445\u2446\u2447\u2448\u2449\u244a\u249c\u249d\u249e\u249f\u24a0\u24a1\u24a2\u24a3\u24a4\u24a5\u24a6\u24a7\u24a8\u24a9\u24aa\u24ab\u24ac\u24ad\u24ae\u24af\u24b0\u24b1\u24b2\u24b3\u24b4\u24b5\u24b6\u24b7\u24b8\u24b9\u24ba\u24bb\u24bc\u24bd\u24be\u24bf\u24c0\u24c1\u24c2\u24c3\u24c4\u24c5\u24c6\u24c7\u24c8\u24c9\u24ca\u24cb\u24cc\u24cd\u24ce\u24cf\u24d0\u24d1\u24d2\u24d3\u24d4\u24d5\u24d6\u24d7\u24d8\u24d9\u24da\u24db\u24dc\u24dd\u24de\u24df\u24e0\u24e1\u24e2\u24e3\u24e4\u24e5\u24e6\u24e7\u24e8\u24e9\u2500\u2501\u2502\u2503\u2504\u2505\u2506\u2507\u2508\u2509\u250a\u250b\u250c\u250d\u250e\u250f\u2510\u2511\u2512\u2513\u2514\u2515\u2516\u2517\u2518\u2519\u251a\u251b\u251c\u251d\u251e\u251f\u2520\u2521\u2522\u2523\u2524\u2525\u2526\u2527\u2528\u2529\u252a\u252b\u252c\u252d\u252e\u252f\u2530\u2531\u2532\u2533\u2534\u2535\u2536\u2537\u2538\u2539\u253a\u253b\u253c\u253d\u253e\u253f\u2540\u2541\u2542\u2543\u2544\u2545\u2546\u2547\u2548\u2549\u254a\u254b\u254c\u254d\u254e\u254f\u2550\u2551\u2552\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255a\u255b\u255c\u255d\u255e\u255f\u2560\u2561\u2562\u2563\u2564\u2565\u2566\u2567\u2568\u2569\u256a\u256b\u256c\u256d\u256e\u256f\u2570\u2571\u2572\u2573\u2574\u2575\u2576\u2577\u2578\u2579\u257a\u257b\u257c\u257d\u257e\u257f\u2580\u2581\u2582\u2583\u2584\u2585\u2586\u2587\u2588\u2589\u258a\u258b\u258c\u258d\u258e\u258f\u2590\u2591\u2592\u2593\u2594\u2595\u2596\u2597\u2598\u2599\u259a\u259b\u259c\u259d\u259e\u259f\u25a0\u25a1\u25a2\u25a3\u25a4\u25a5\u25a6\u25a7\u25a8\u25a9\u25aa\u25ab\u25ac\u25ad\u25ae\u25af\u25b0\u25b1\u25b2\u25b3\u25b4\u25b5\u25b6\u25b8\u25b9\u25ba\u25bb\u25bc\u25bd\u25be\u25bf\u25c0\u25c2\u25c3\u25c4\u25c5\u25c6\u25c7\u25c8\u25c9\u25ca\u25cb\u25cc\u25cd\u25ce\u25cf\u25d0\u25d1\u25d2\u25d3\u25d4\u25d5\u25d6\u25d7\u25d8\u25d9\u25da\u25db\u25dc\u25dd\u25de\u25df\u25e0\u25e1\u25e2\u25e3\u25e4\u25e5\u25e6\u25e7\u25e8\u25e9\u25ea\u25eb\u25ec\u25ed\u25ee\u25ef\u25f0\u25f1\u25f2\u25f3\u25f4\u25f5\u25f6\u25f7\u2600\u2601\u2602\u2603\u2604\u2605\u2606\u2607\u2608\u2609\u260a\u260b\u260c\u260d\u260e\u260f\u2610\u2611\u2612\u2613\u2614\u2615\u2616\u2617\u2618\u2619\u261a\u261b\u261c\u261d\u261e\u261f\u2620\u2621\u2622\u2623\u2624\u2625\u2626\u2627\u2628\u2629\u262a\u262b\u262c\u262d\u262e\u262f\u2630\u2631\u2632\u2633\u2634\u2635\u2636\u2637\u2638\u2639\u263a\u263b\u263c\u263d\u263e\u263f\u2640\u2641\u2642\u2643\u2644\u2645\u2646\u2647\u2648\u2649\u264a\u264b\u264c\u264d\u264e\u264f\u2650\u2651\u2652\u2653\u2654\u2655\u2656\u2657\u2658\u2659\u265a\u265b\u265c\u265d\u265e\u265f\u2660\u2661\u2662\u2663\u2664\u2665\u2666\u2667\u2668\u2669\u266a\u266b\u266c\u266d\u266e\u2670\u2671\u2672\u2673\u2674\u2675\u2676\u2677\u2678\u2679\u267a\u267b\u267c\u267d\u267e\u267f\u2680\u2681\u2682\u2683\u2684\u2685\u2686\u2687\u2688\u2689\u268a\u268b\u268c\u268d\u268e\u268f\u2690\u2691\u2692\u2693\u2694\u2695\u2696\u2697\u2698\u2699\u269a\u269b\u269c\u26a0\u26a1\u26a2\u26a3\u26a4\u26a5\u26a6\u26a7\u26a8\u26a9\u26aa\u26ab\u26ac\u26ad\u26ae\u26af\u26b0\u26b1\u2701\u2702\u2703\u2704\u2706\u2707\u2708\u2709\u270c\u270d\u270e\u270f\u2710\u2711\u2712\u2713\u2714\u2715\u2716\u2717\u2718\u2719\u271a\u271b\u271c\u271d\u271e\u271f\u2720\u2721\u2722\u2723\u2724\u2725\u2726\u2727\u2729\u272a\u272b\u272c\u272d\u272e\u272f\u2730\u2731\u2732\u2733\u2734\u2735\u2736\u2737\u2738\u2739\u273a\u273b\u273c\u273d\u273e\u273f\u2740\u2741\u2742\u2743\u2744\u2745\u2746\u2747\u2748\u2749\u274a\u274b\u274d\u274f\u2750\u2751\u2752\u2756\u2758\u2759\u275a\u275b\u275c\u275d\u275e\u2761\u2762\u2763\u2764\u2765\u2766\u2767\u2794\u2798\u2799\u279a\u279b\u279c\u279d\u279e\u279f\u27a0\u27a1\u27a2\u27a3\u27a4\u27a5\u27a6\u27a7\u27a8\u27a9\u27aa\u27ab\u27ac\u27ad\u27ae\u27af\u27b1\u27b2\u27b3\u27b4\u27b5\u27b6\u27b7\u27b8\u27b9\u27ba\u27bb\u27bc\u27bd\u27be\u2800\u2801\u2802\u2803\u2804\u2805\u2806\u2807\u2808\u2809\u280a\u280b\u280c\u280d\u280e\u280f\u2810\u2811\u2812\u2813\u2814\u2815\u2816\u2817\u2818\u2819\u281a\u281b\u281c\u281d\u281e\u281f\u2820\u2821\u2822\u2823\u2824\u2825\u2826\u2827\u2828\u2829\u282a\u282b\u282c\u282d\u282e\u282f\u2830\u2831\u2832\u2833\u2834\u2835\u2836\u2837\u2838\u2839\u283a\u283b\u283c\u283d\u283e\u283f\u2840\u2841\u2842\u2843\u2844\u2845\u2846\u2847\u2848\u2849\u284a\u284b\u284c\u284d\u284e\u284f\u2850\u2851\u2852\u2853\u2854\u2855\u2856\u2857\u2858\u2859\u285a\u285b\u285c\u285d\u285e\u285f\u2860\u2861\u2862\u2863\u2864\u2865\u2866\u2867\u2868\u2869\u286a\u286b\u286c\u286d\u286e\u286f\u2870\u2871\u2872\u2873\u2874\u2875\u2876\u2877\u2878\u2879\u287a\u287b\u287c\u287d\u287e\u287f\u2880\u2881\u2882\u2883\u2884\u2885\u2886\u2887\u2888\u2889\u288a\u288b\u288c\u288d\u288e\u288f\u2890\u2891\u2892\u2893\u2894\u2895\u2896\u2897\u2898\u2899\u289a\u289b\u289c\u289d\u289e\u289f\u28a0\u28a1\u28a2\u28a3\u28a4\u28a5\u28a6\u28a7\u28a8\u28a9\u28aa\u28ab\u28ac\u28ad\u28ae\u28af\u28b0\u28b1\u28b2\u28b3\u28b4\u28b5\u28b6\u28b7\u28b8\u28b9\u28ba\u28bb\u28bc\u28bd\u28be\u28bf\u28c0\u28c1\u28c2\u28c3\u28c4\u28c5\u28c6\u28c7\u28c8\u28c9\u28ca\u28cb\u28cc\u28cd\u28ce\u28cf\u28d0\u28d1\u28d2\u28d3\u28d4\u28d5\u28d6\u28d7\u28d8\u28d9\u28da\u28db\u28dc\u28dd\u28de\u28df\u28e0\u28e1\u28e2\u28e3\u28e4\u28e5\u28e6\u28e7\u28e8\u28e9\u28ea\u28eb\u28ec\u28ed\u28ee\u28ef\u28f0\u28f1\u28f2\u28f3\u28f4\u28f5\u28f6\u28f7\u28f8\u28f9\u28fa\u28fb\u28fc\u28fd\u28fe\u28ff\u2b00\u2b01\u2b02\u2b03\u2b04\u2b05\u2b06\u2b07\u2b08\u2b09\u2b0a\u2b0b\u2b0c\u2b0d\u2b0e\u2b0f\u2b10\u2b11\u2b12\u2b13\u2ce5\u2ce6\u2ce7\u2ce8\u2ce9\u2cea\u2e80\u2e81\u2e82\u2e83\u2e84\u2e85\u2e86\u2e87\u2e88\u2e89\u2e8a\u2e8b\u2e8c\u2e8d\u2e8e\u2e8f\u2e90\u2e91\u2e92\u2e93\u2e94\u2e95\u2e96\u2e97\u2e98\u2e99\u2e9b\u2e9c\u2e9d\u2e9e\u2e9f\u2ea0\u2ea1\u2ea2\u2ea3\u2ea4\u2ea5\u2ea6\u2ea7\u2ea8\u2ea9\u2eaa\u2eab\u2eac\u2ead\u2eae\u2eaf\u2eb0\u2eb1\u2eb2\u2eb3\u2eb4\u2eb5\u2eb6\u2eb7\u2eb8\u2eb9\u2eba\u2ebb\u2ebc\u2ebd\u2ebe\u2ebf\u2ec0\u2ec1\u2ec2\u2ec3\u2ec4\u2ec5\u2ec6\u2ec7\u2ec8\u2ec9\u2eca\u2ecb\u2ecc\u2ecd\u2ece\u2ecf\u2ed0\u2ed1\u2ed2\u2ed3\u2ed4\u2ed5\u2ed6\u2ed7\u2ed8\u2ed9\u2eda\u2edb\u2edc\u2edd\u2ede\u2edf\u2ee0\u2ee1\u2ee2\u2ee3\u2ee4\u2ee5\u2ee6\u2ee7\u2ee8\u2ee9\u2eea\u2eeb\u2eec\u2eed\u2eee\u2eef\u2ef0\u2ef1\u2ef2\u2ef3\u2f00\u2f01\u2f02\u2f03\u2f04\u2f05\u2f06\u2f07\u2f08\u2f09\u2f0a\u2f0b\u2f0c\u2f0d\u2f0e\u2f0f\u2f10\u2f11\u2f12\u2f13\u2f14\u2f15\u2f16\u2f17\u2f18\u2f19\u2f1a\u2f1b\u2f1c\u2f1d\u2f1e\u2f1f\u2f20\u2f21\u2f22\u2f23\u2f24\u2f25\u2f26\u2f27\u2f28\u2f29\u2f2a\u2f2b\u2f2c\u2f2d\u2f2e\u2f2f\u2f30\u2f31\u2f32\u2f33\u2f34\u2f35\u2f36\u2f37\u2f38\u2f39\u2f3a\u2f3b\u2f3c\u2f3d\u2f3e\u2f3f\u2f40\u2f41\u2f42\u2f43\u2f44\u2f45\u2f46\u2f47\u2f48\u2f49\u2f4a\u2f4b\u2f4c\u2f4d\u2f4e\u2f4f\u2f50\u2f51\u2f52\u2f53\u2f54\u2f55\u2f56\u2f57\u2f58\u2f59\u2f5a\u2f5b\u2f5c\u2f5d\u2f5e\u2f5f\u2f60\u2f61\u2f62\u2f63\u2f64\u2f65\u2f66\u2f67\u2f68\u2f69\u2f6a\u2f6b\u2f6c\u2f6d\u2f6e\u2f6f\u2f70\u2f71\u2f72\u2f73\u2f74\u2f75\u2f76\u2f77\u2f78\u2f79\u2f7a\u2f7b\u2f7c\u2f7d\u2f7e\u2f7f\u2f80\u2f81\u2f82\u2f83\u2f84\u2f85\u2f86\u2f87\u2f88\u2f89\u2f8a\u2f8b\u2f8c\u2f8d\u2f8e\u2f8f\u2f90\u2f91\u2f92\u2f93\u2f94\u2f95\u2f96\u2f97\u2f98\u2f99\u2f9a\u2f9b\u2f9c\u2f9d\u2f9e\u2f9f\u2fa0\u2fa1\u2fa2\u2fa3\u2fa4\u2fa5\u2fa6\u2fa7\u2fa8\u2fa9\u2faa\u2fab\u2fac\u2fad\u2fae\u2faf\u2fb0\u2fb1\u2fb2\u2fb3\u2fb4\u2fb5\u2fb6\u2fb7\u2fb8\u2fb9\u2fba\u2fbb\u2fbc\u2fbd\u2fbe\u2fbf\u2fc0\u2fc1\u2fc2\u2fc3\u2fc4\u2fc5\u2fc6\u2fc7\u2fc8\u2fc9\u2fca\u2fcb\u2fcc\u2fcd\u2fce\u2fcf\u2fd0\u2fd1\u2fd2\u2fd3\u2fd4\u2fd5\u2ff0\u2ff1\u2ff2\u2ff3\u2ff4\u2ff5\u2ff6\u2ff7\u2ff8\u2ff9\u2ffa\u2ffb\u3004\u3012\u3013\u3020\u3036\u3037\u303e\u303f\u3190\u3191\u3196\u3197\u3198\u3199\u319a\u319b\u319c\u319d\u319e\u319f\u31c0\u31c1\u31c2\u31c3\u31c4\u31c5\u31c6\u31c7\u31c8\u31c9\u31ca\u31cb\u31cc\u31cd\u31ce\u31cf\u3200\u3201\u3202\u3203\u3204\u3205\u3206\u3207\u3208\u3209\u320a\u320b\u320c\u320d\u320e\u320f\u3210\u3211\u3212\u3213\u3214\u3215\u3216\u3217\u3218\u3219\u321a\u321b\u321c\u321d\u321e\u322a\u322b\u322c\u322d\u322e\u322f\u3230\u3231\u3232\u3233\u3234\u3235\u3236\u3237\u3238\u3239\u323a\u323b\u323c\u323d\u323e\u323f\u3240\u3241\u3242\u3243\u3250\u3260\u3261\u3262\u3263\u3264\u3265\u3266\u3267\u3268\u3269\u326a\u326b\u326c\u326d\u326e\u326f\u3270\u3271\u3272\u3273\u3274\u3275\u3276\u3277\u3278\u3279\u327a\u327b\u327c\u327d\u327e\u327f\u328a\u328b\u328c\u328d\u328e\u328f\u3290\u3291\u3292\u3293\u3294\u3295\u3296\u3297\u3298\u3299\u329a\u329b\u329c\u329d\u329e\u329f\u32a0\u32a1\u32a2\u32a3\u32a4\u32a5\u32a6\u32a7\u32a8\u32a9\u32aa\u32ab\u32ac\u32ad\u32ae\u32af\u32b0\u32c0\u32c1\u32c2\u32c3\u32c4\u32c5\u32c6\u32c7\u32c8\u32c9\u32ca\u32cb\u32cc\u32cd\u32ce\u32cf\u32d0\u32d1\u32d2\u32d3\u32d4\u32d5\u32d6\u32d7\u32d8\u32d9\u32da\u32db\u32dc\u32dd\u32de\u32df\u32e0\u32e1\u32e2\u32e3\u32e4\u32e5\u32e6\u32e7\u32e8\u32e9\u32ea\u32eb\u32ec\u32ed\u32ee\u32ef\u32f0\u32f1\u32f2\u32f3\u32f4\u32f5\u32f6\u32f7\u32f8\u32f9\u32fa\u32fb\u32fc\u32fd\u32fe\u3300\u3301\u3302\u3303\u3304\u3305\u3306\u3307\u3308\u3309\u330a\u330b\u330c\u330d\u330e\u330f\u3310\u3311\u3312\u3313\u3314\u3315\u3316\u3317\u3318\u3319\u331a\u331b\u331c\u331d\u331e\u331f\u3320\u3321\u3322\u3323\u3324\u3325\u3326\u3327\u3328\u3329\u332a\u332b\u332c\u332d\u332e\u332f\u3330\u3331\u3332\u3333\u3334\u3335\u3336\u3337\u3338\u3339\u333a\u333b\u333c\u333d\u333e\u333f\u3340\u3341\u3342\u3343\u3344\u3345\u3346\u3347\u3348\u3349\u334a\u334b\u334c\u334d\u334e\u334f\u3350\u3351\u3352\u3353\u3354\u3355\u3356\u3357\u3358\u3359\u335a\u335b\u335c\u335d\u335e\u335f\u3360\u3361\u3362\u3363\u3364\u3365\u3366\u3367\u3368\u3369\u336a\u336b\u336c\u336d\u336e\u336f\u3370\u3371\u3372\u3373\u3374\u3375\u3376\u3377\u3378\u3379\u337a\u337b\u337c\u337d\u337e\u337f\u3380\u3381\u3382\u3383\u3384\u3385\u3386\u3387\u3388\u3389\u338a\u338b\u338c\u338d\u338e\u338f\u3390\u3391\u3392\u3393\u3394\u3395\u3396\u3397\u3398\u3399\u339a\u339b\u339c\u339d\u339e\u339f\u33a0\u33a1\u33a2\u33a3\u33a4\u33a5\u33a6\u33a7\u33a8\u33a9\u33aa\u33ab\u33ac\u33ad\u33ae\u33af\u33b0\u33b1\u33b2\u33b3\u33b4\u33b5\u33b6\u33b7\u33b8\u33b9\u33ba\u33bb\u33bc\u33bd\u33be\u33bf\u33c0\u33c1\u33c2\u33c3\u33c4\u33c5\u33c6\u33c7\u33c8\u33c9\u33ca\u33cb\u33cc\u33cd\u33ce\u33cf\u33d0\u33d1\u33d2\u33d3\u33d4\u33d5\u33d6\u33d7\u33d8\u33d9\u33da\u33db\u33dc\u33dd\u33de\u33df\u33e0\u33e1\u33e2\u33e3\u33e4\u33e5\u33e6\u33e7\u33e8\u33e9\u33ea\u33eb\u33ec\u33ed\u33ee\u33ef\u33f0\u33f1\u33f2\u33f3\u33f4\u33f5\u33f6\u33f7\u33f8\u33f9\u33fa\u33fb\u33fc\u33fd\u33fe\u33ff\u4dc0\u4dc1\u4dc2\u4dc3\u4dc4\u4dc5\u4dc6\u4dc7\u4dc8\u4dc9\u4dca\u4dcb\u4dcc\u4dcd\u4dce\u4dcf\u4dd0\u4dd1\u4dd2\u4dd3\u4dd4\u4dd5\u4dd6\u4dd7\u4dd8\u4dd9\u4dda\u4ddb\u4ddc\u4ddd\u4dde\u4ddf\u4de0\u4de1\u4de2\u4de3\u4de4\u4de5\u4de6\u4de7\u4de8\u4de9\u4dea\u4deb\u4dec\u4ded\u4dee\u4def\u4df0\u4df1\u4df2\u4df3\u4df4\u4df5\u4df6\u4df7\u4df8\u4df9\u4dfa\u4dfb\u4dfc\u4dfd\u4dfe\u4dff\ua490\ua491\ua492\ua493\ua494\ua495\ua496\ua497\ua498\ua499\ua49a\ua49b\ua49c\ua49d\ua49e\ua49f\ua4a0\ua4a1\ua4a2\ua4a3\ua4a4\ua4a5\ua4a6\ua4a7\ua4a8\ua4a9\ua4aa\ua4ab\ua4ac\ua4ad\ua4ae\ua4af\ua4b0\ua4b1\ua4b2\ua4b3\ua4b4\ua4b5\ua4b6\ua4b7\ua4b8\ua4b9\ua4ba\ua4bb\ua4bc\ua4bd\ua4be\ua4bf\ua4c0\ua4c1\ua4c2\ua4c3\ua4c4\ua4c5\ua4c6\ua828\ua829\ua82a\ua82b\ufdfd\uffe4\uffe8\uffed\uffee\ufffc\ufffd'
3rdparty/jinja2/sandbox.py:# make sure we don't warn in python 2.6 about stuff we don't care about
3rdparty/jinja2/sandbox.py:_mutable_set_types = (set,)
3rdparty/jinja2/sandbox.py:_mutable_mapping_types = (dict,)
3rdparty/jinja2/sandbox.py:_mutable_sequence_types = (list,)
3rdparty/jinja2/sandbox.py:    _mutable_mapping_types += (UserDict, DictMixin)
3rdparty/jinja2/sandbox.py:    _mutable_set_types += (UserList,)
3rdparty/jinja2/sandbox.py:# if sets is still available, register the mutable set from there as well
3rdparty/jinja2/sandbox.py:    _mutable_set_types += (Set,)
3rdparty/jinja2/sandbox.py:#: register Python 2.6 abstract base classes
3rdparty/jinja2/sandbox.py:    from collections import MutableSet, MutableMapping, MutableSequence
3rdparty/jinja2/sandbox.py:    _mutable_set_types += (MutableSet,)
3rdparty/jinja2/sandbox.py:    _mutable_mapping_types += (MutableMapping,)
3rdparty/jinja2/sandbox.py:    _mutable_sequence_types += (MutableSequence,)
3rdparty/jinja2/sandbox.py:_mutable_spec = (
3rdparty/jinja2/sandbox.py:    (_mutable_set_types, frozenset([
3rdparty/jinja2/sandbox.py:    (_mutable_mapping_types, frozenset([
3rdparty/jinja2/sandbox.py:    (_mutable_sequence_types, frozenset([
3rdparty/jinja2/sandbox.py:    f.unsafe_callable = True
3rdparty/jinja2/sandbox.py:def modifies_known_mutable(obj, attr):
3rdparty/jinja2/sandbox.py:    """This function checks if an attribute on a builtin mutable object
3rdparty/jinja2/sandbox.py:    with Python 2.6 onwards the abstract base classes `MutableSet`,
3rdparty/jinja2/sandbox.py:    `MutableMapping`, and `MutableSequence`.
3rdparty/jinja2/sandbox.py:    >>> modifies_known_mutable({}, "clear")
3rdparty/jinja2/sandbox.py:    >>> modifies_known_mutable({}, "keys")
3rdparty/jinja2/sandbox.py:    >>> modifies_known_mutable([], "append")
3rdparty/jinja2/sandbox.py:    >>> modifies_known_mutable([], "index")
3rdparty/jinja2/sandbox.py:    >>> modifies_known_mutable("foo", "upper")
3rdparty/jinja2/sandbox.py:    for typespec, unsafe in _mutable_spec:
3rdparty/jinja2/sandbox.py:    #: default callback table for the binary operators.  A copy of this is
3rdparty/jinja2/sandbox.py:    #: available on each instance of a sandboxed environment as
3rdparty/jinja2/sandbox.py:    #: :attr:`binop_table`
3rdparty/jinja2/sandbox.py:    default_binop_table = {
3rdparty/jinja2/sandbox.py:    #: default callback table for the unary operators.  A copy of this is
3rdparty/jinja2/sandbox.py:    #: available on each instance of a sandboxed environment as
3rdparty/jinja2/sandbox.py:    #: :attr:`unop_table`
3rdparty/jinja2/sandbox.py:    default_unop_table = {
3rdparty/jinja2/sandbox.py:    #: operator callback is specified by :attr:`binop_table`.
3rdparty/jinja2/sandbox.py:    #: The following binary operators are interceptable:
3rdparty/jinja2/sandbox.py:    #: The default operation form the operator table corresponds to the
3rdparty/jinja2/sandbox.py:    #: operator callback is specified by :attr:`unop_table`.
3rdparty/jinja2/sandbox.py:    #: The following unary operators are interceptable: ``+``, ``-``
3rdparty/jinja2/sandbox.py:    #: The default operation form the operator table corresponds to the
3rdparty/jinja2/sandbox.py:        the :attr:`unop_table` dictionary to perform the operator with the
3rdparty/jinja2/sandbox.py:        The following unary operators are interceptable: ``+`` and ``-``
3rdparty/jinja2/sandbox.py:        self.binop_table = self.default_binop_table.copy()
3rdparty/jinja2/sandbox.py:        self.unop_table = self.default_unop_table.copy()
3rdparty/jinja2/sandbox.py:    def is_safe_callable(self, obj):
3rdparty/jinja2/sandbox.py:        """Check if an object is safely callable.  Per default a function is
3rdparty/jinja2/sandbox.py:        considered safe unless the `unsafe_callable` attribute exists and is
3rdparty/jinja2/sandbox.py:        return not (getattr(obj, 'unsafe_callable', False) or
3rdparty/jinja2/sandbox.py:        return self.binop_table[operator](left, right)
3rdparty/jinja2/sandbox.py:        return self.unop_table[operator](arg)
3rdparty/jinja2/sandbox.py:        if not __self.is_safe_callable(__obj):
3rdparty/jinja2/sandbox.py:            raise SecurityError('%r is not safely callable' % (__obj,))
3rdparty/jinja2/sandbox.py:class ImmutableSandboxedEnvironment(SandboxedEnvironment):
3rdparty/jinja2/sandbox.py:    permit modifications on the builtin mutable objects `list`, `set`, and
3rdparty/jinja2/sandbox.py:    `dict` by using the :func:`modifies_known_mutable` function.
3rdparty/jinja2/sandbox.py:        return not modifies_known_mutable(obj, attr)
3rdparty/libpng/png.h: * including, without limitation, the warranties of merchantability and of
3rdparty/libpng/png.h: * assume no liability for direct, indirect, incidental, special, exemplary,
3rdparty/libpng/png.h: * A "png_get_copyright" function is available, for convenient use in "about"
3rdparty/libpng/png.h:/* Note about libpng version numbers:
3rdparty/libpng/png.h: *    The following table summarizes matters since version 0.89c, which was
3rdparty/libpng/png.h: *    PNG_LIBPNG_VER macro, which is not used within libpng but is available
3rdparty/libpng/png.h: * is available as a W3C Recommendation and as an ISO Specification,
3rdparty/libpng/png.h: * the version above.
3rdparty/libpng/png.h: * settings can (and probably should) be made on a per-file basis
3rdparty/libpng/png.h: * consequentially, writing portable application code is extremely difficult if
3rdparty/libpng/png.h: * is no portable way to convert to either of these structures, as far
3rdparty/libpng/png.h: * as I know.  If you know of a portable way, send it to me.  As a side
3rdparty/libpng/png.h: * know about their semantics.
3rdparty/libpng/png.h: * change these values for the row.  It also should enable using
3rdparty/libpng/png.h: * function does return the application will crash via an abort() or similar
3rdparty/libpng/png.h: *                   the *.dfn files for building symbol table
3rdparty/libpng/png.h: * acceptable.  The size of the jmp_buf is checked against the actual size
3rdparty/libpng/png.h:/* New functions added in libpng-1.0.2 (not enabled by default until 1.2.0) */
3rdparty/libpng/png.h:/* Expand data to 24-bit RGB, or 8-bit grayscale, with alpha if available. */
3rdparty/libpng/png.h:#define PNG_ALPHA_ASSOCIATED    1 /* as above; this is the normal practice */
3rdparty/libpng/png.h:#define PNG_ALPHA_PREMULTIPLIED 1 /* as above */
3rdparty/libpng/png.h: *    display preceeded by a power-law lookup table of power 1.45.  This is how
3rdparty/libpng/png.h: *    case will probably result in halos around the image.  The linear encoding
3rdparty/libpng/png.h: *    will probably result in a washed out, too bright, image (it's actually too
3rdparty/libpng/png.h: *    contrasty.)  Try the ALPHA_OPTIMIZED mode above - this will probably
3rdparty/libpng/png.h: *    is dark.  Take your pick - the halos are unavoidable unless you can get
3rdparty/libpng/png.h: * available.
3rdparty/libpng/png.h:/* The threshold on gamma processing is configurable but hard-wired into the
3rdparty/libpng/png.h: * above).  The PNG_GAMMA_ defines and PNG_DEFAULT_sRGB can be passed to either
3rdparty/libpng/png.h: * is declared as writeable to maintain compatibility with previous versions
3rdparty/libpng/png.h: * for PNG images, and do considerably fewer caclulations.  In the future,
3rdparty/libpng/png.h:/* Replace the (error and abort), and warning functions with user
3rdparty/libpng/png.h: * It is probably a mistake to use NULL for output_flush_fn if
3rdparty/libpng/png.h:/* Return information about the row currently being processed.  Note that these
3rdparty/libpng/png.h: * See "INTERACTION WTIH USER CHUNK CALLBACKS" below for important notes about
3rdparty/libpng/png.h: * user-defined structure available to the callback functions.
3rdparty/libpng/png.h:/* Function to be called when data becomes available */
3rdparty/libpng/png.h: * png_info_struct, either storing the parameters in the passed variables, or
3rdparty/libpng/png.h: * png_get_<chunk> functions return a non-zero value if the data was available
3rdparty/libpng/png.h: * data was not available.
3rdparty/libpng/png.h: *          see the comments below about PNG_HANDLE_AS_UNKNOWN_SUPPORTED)
3rdparty/libpng/png.h: *    unknown chunks, as described above.
3rdparty/libpng/png.h:    * invariably the wrong value on write.  To fix this call the following API
3rdparty/libpng/png.h: * sophisticated APIs above - these support a wide variety of in-memory formats
3rdparty/libpng/png.h: * color types, bit depths, and interlace methods are acceptable, and the
3rdparty/libpng/png.h: * channel and are suitable for passing to color management software.
3rdparty/libpng/png.h: * are individual samples, encoded as above, and the image data has one byte per
3rdparty/libpng/png.h: * NOTE: libpng can be built with particular features disabled. If you see
3rdparty/libpng/png.h: * possible, however, for the libpng configuration to enable the format on just
3rdparty/libpng/png.h: * is an index into the color-map which is formatted as above.  To obtain a
3rdparty/libpng/png.h: * to one of the above definitions, or you can use one of the definitions below.
3rdparty/libpng/png.h: * remaining macros return information about the rows in the image and the
3rdparty/libpng/png.h: * macros can be used in array declarations and case labels where required.
3rdparty/libpng/png.h: * First the information about the samples.
3rdparty/libpng/png.h:/* Corresponding information about the pixels */
3rdparty/libpng/png.h:/* Information about the whole row, or whole image */
3rdparty/libpng/png.h: * Flags containing additional information about the image are held in the
3rdparty/libpng/png.h:    * above.)
3rdparty/libpng/png.h: * HARDWARE: normally hardware capabilites, such as the Intel SSE instructions,
3rdparty/libpng/png.h: *           the capabilities in an OS specific way.  Such capabilities are
3rdparty/libpng/pngerror.c: * standard established by X/Open for internationalizable error messages.
3rdparty/libpng/pngerror.c:          * copy that.  This is known not to be '\0' because of the test above.
3rdparty/libpng/pngerror.c:       * above where there is a lone '@' at the end of the message string.
3rdparty/libpng/pngerror.c:         return NULL; /* caller will probably crash: no choice here */
3rdparty/libpng/pngerror.c:    * this the ANSI-C abort() function is used unless a different method is 
3rdparty/libpng/pngerror.c:   /* Currently the above both depend on SETJMP_SUPPORTED, however it would be
3rdparty/libpng/pngerror.c:   abort();
3rdparty/libpng/README:See the note about version numbers near the top of png.h
3rdparty/libpng/README:changes to the API in some time, and people have a bad feeling about
3rdparty/libpng/README:new APIs have been made available in 0.95 to avoid direct application
3rdparty/libpng/README:warning about deprecated usage.  Since libpng-1.5.0, direct access
3rdparty/libpng/README:Additions since 0.90 include the ability to compile libpng as a
3rdparty/libpng/README:Experimental functions include the ability to set weighting and cost
3rdparty/libpng/README:The additions since 0.89 include the ability to read from a PNG stream
3rdparty/libpng/README:zlib should be available at the same place that libpng is, or at zlib.net.
3rdparty/libpng/README:You may also want a copy of the PNG specification.  It is available
3rdparty/libpng/README:is open source, publicly available software, that does not contain any
3rdparty/libpng/README:along with a #define variable to tell what compiler/system you are on.
3rdparty/libpng/README:Please do not send general questions about PNG.  Send them to
3rdparty/libpng/README:subscribe).  If you have a question about something
3rdparty/libpng/pngwrite.c:         /* If per-chunk unknown chunk handling is enabled use it, otherwise
3rdparty/libpng/pngwrite.c:       * information * is available in the COLORSPACE. (See
3rdparty/libpng/pngwrite.c:         png_warning(png_ptr, "Unable to write international text");
3rdparty/libpng/pngwrite.c:         png_warning(png_ptr, "Unable to write compressed text");
3rdparty/libpng/pngwrite.c:         png_warning(png_ptr, "Unable to write uncompressed text");
3rdparty/libpng/pngwrite.c:      int i; /* local index variable */
3rdparty/libpng/pngwrite.c:            png_warning(png_ptr, "Unable to write international text");
3rdparty/libpng/pngwrite.c:            png_warning(png_ptr, "Unable to write compressed text");
3rdparty/libpng/pngwrite.c:            png_warning(png_ptr, "Unable to write uncompressed text");
3rdparty/libpng/pngwrite.c:      /* In stable builds only warn if an application error can be completely
3rdparty/libpng/pngwrite.c:   int pass, num_pass; /* pass variables */
3rdparty/libpng/pngwrite.c:      /* This should always get caught above, but still ... */
3rdparty/libpng/pngwrite.c:             * is not available so the filter can't be used.  Just warn here.
3rdparty/libpng/pngwrite.c:   /* Local variables: */
3rdparty/libpng/pngwrite.c:    * above to 'row' means that row_end can actually be beyond the end of the
3rdparty/libpng/pngwrite.c:             * likely to be a discontinuity which will probably damage
3rdparty/libpng/pngwrite.c: * Calculate an alpha reciprocal to reverse pre-multiplication.  As above the
3rdparty/libpng/pngwrite.c:   png_uint_32 reciprocal/*from the above macro*/)
3rdparty/libpng/pngwrite.c:    * discontinuity which will probably damage compression when moving from a
3rdparty/libpng/pngwrite.c:            png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
3rdparty/libpng/pngwrite.c:            out_ptr[aindex] = alphabyte;
3rdparty/libpng/pngwrite.c:            if (alphabyte > 0 && alphabyte < 255)
3rdparty/libpng/pngwrite.c:            png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
3rdparty/libpng/pngwrite.c:            /* Calculate a reciprocal, as in the png_write_image_8bit code above
3rdparty/libpng/pngwrite.c:            if (alphabyte > 0 && alphabyte < 255)
3rdparty/libpng/pngwrite.c:            tRNS[i] = alphabyte;
3rdparty/libpng/pngwrite.c:            if (alphabyte < 255)
3rdparty/libpng/pngwrite.c:    * above, but the application data is still byte packed.
3rdparty/libpng/pngwrite.c:       * it about 50 times.  The speed-up in pngstest was about 10-20% of the
3rdparty/libpng/pngset.c: * into the info struct for writing into the file.  This abstracts the
3rdparty/libpng/pngset.c:    * 1.6.0: the above statement appears to be incorrect; something has to set
3rdparty/libpng/pngset.c:   png_debug1(1, "in %lx storage function", png_ptr == NULL ? 0xabadca11U :
3rdparty/libpng/pngset.c:        * 1.6.0: The above statement is incorrect; png_handle_tRNS effectively
3rdparty/libpng/pngset.c:   /* Check for the failure cases where support has been disabled at compile
3rdparty/libpng/pngset.c:    * required because add_one_chunk above doesn't extend the list if the 'keep'
3rdparty/libpng/pngset.c:         png_ptr->IDAT_read_size = (png_uint_32)size; /* checked above */
3rdparty/libpng/arm/filter_neon_intrinsics.c:/* The following relies on a variable 'temp_pointer' being declared with type
3rdparty/libpng/arm/filter_neon_intrinsics.c:   pa = vabdl_u8(b, c); /* pa */
3rdparty/libpng/arm/filter_neon_intrinsics.c:   pb = vabdl_u8(a, c); /* pb */
3rdparty/libpng/arm/filter_neon_intrinsics.c:   pc = vabdq_u16(p1, pc); /* pc */
3rdparty/libpng/arm/filter_neon.S:.section .note.GNU-stack,"",%progbits /* mark stack as non-executable */
3rdparty/libpng/arm/filter_neon.S:        vabdl.u8        q13, \rb, \rc           @ pa
3rdparty/libpng/arm/filter_neon.S:        vabdl.u8        q14, \ra, \rc           @ pb
3rdparty/libpng/arm/filter_neon.S:        vabd.u16        q15, q12, q15           @ pc
3rdparty/libpng/arm/arm_init.c:         /* Allow the run-time check to execute if it has been enabled -
3rdparty/libpng/arm/arm_init.c:    * Verify you have got this right by running the above command, doing a build
3rdparty/libpng/pngstruct.h: * The only people who need to care about what is inside of this are the
3rdparty/libpng/pngstruct.h: * (pngusr.h, or set it in CPPFLAGS) and it works to set it to a considerably
3rdparty/libpng/pngstruct.h: * functions to hold and communicate information about the color space.
3rdparty/libpng/pngstruct.h:/* The same data as above but encoded as CIE XYZ values.  When this data comes
3rdparty/libpng/pngstruct.h:/* A colorspace is all the above plus, potentially, profile information;
3rdparty/libpng/pngstruct.h:   size_t jmp_buf_size;       /* size of the above, if allocated */
3rdparty/libpng/pngstruct.h:   png_error_ptr error_fn;    /* function for printing errors and aborting */
3rdparty/libpng/pngstruct.h:   png_bytep gamma_table;     /* gamma table for 8-bit depth files */
3rdparty/libpng/pngstruct.h:   png_uint_16pp gamma_16_table; /* gamma table for 16-bit depth files */
3rdparty/libpng/pngstruct.h:   png_color_8 sig_bit;       /* significant bits in each available channel */
3rdparty/libpng/pngstruct.h:   png_size_t buffer_size;           /* total amount of available input data */
3rdparty/libpng/pngstruct.h:   png_bytepp offset_table_ptr;
3rdparty/libpng/pngstruct.h:   png_bytep offset_table;
3rdparty/libpng/pngstruct.h:   png_uint_16 offset_table_number;
3rdparty/libpng/pngstruct.h:   png_uint_16 offset_table_count;
3rdparty/libpng/pngstruct.h:   png_uint_16 offset_table_count_free;
3rdparty/libpng/pngstruct.h:   png_bytep palette_lookup; /* lookup table for quantizing */
3rdparty/libpng/pngstruct.h:/* New member added in libpng-1.0.9, ifdef'ed out in 1.0.12, enabled in 1.2.0 */
3rdparty/libpng/pngstruct.h:/* New members added in libpng-1.0.2 but first enabled by default in 1.2.0 */
3rdparty/libpng/opencv-libpng.patch: #    define PNG_ABORT() abort()
3rdparty/libpng/pngwio.c: * io_ptr        - pointer to user supplied structure containing info about
3rdparty/libpng/pngrtran.c:   /* Validate the value to ensure it is in a reasonable range. The value
3rdparty/libpng/pngrtran.c:    * values are reasonable this may have to be changed.
3rdparty/libpng/pngrtran.c:          * out enough colors.  Note that we don't care about
3rdparty/libpng/pngrtran.c:         /* Swap the palette around, and set up a table, if necessary */
3rdparty/libpng/pngrtran.c:             * develop a translation table.
3rdparty/libpng/pngrtran.c:            /* int dr = abs(ir - r); */
3rdparty/libpng/pngrtran.c:               /* int dg = abs(ig - g); */
3rdparty/libpng/pngrtran.c:                  /* int db = abs(ib - b); */
3rdparty/libpng/pngrtran.c:    * disabled in background handling.  There is no evidence (so far) that this
3rdparty/libpng/pngrtran.c:    * undocumented API feature) the following checks were only enabled in
3rdparty/libpng/pngrtran.c: *  to png_set_expand().  However, it is entirely reasonable that someone
3rdparty/libpng/pngrtran.c:             * of libpng, although the standard has nothing to say about this.
3rdparty/libpng/pngrtran.c:          * perhaps undesireable default can (from 1.5.4) be changed by calling
3rdparty/libpng/pngrtran.c:   /* If the screen gamma is about 1.0 then the OPTIMIZE_ALPHA and ENCODE_ALPHA
3rdparty/libpng/pngrtran.c:   /* Detect gray background and attempt to enable optimization for
3rdparty/libpng/pngrtran.c:       * The PNG_BACKGROUND_EXPAND code above does not expand to 16 bits at
3rdparty/libpng/pngrtran.c:   /* NOTE: below 'PNG_READ_ALPHA_MODE_SUPPORTED' is presumed to also enable the
3rdparty/libpng/pngrtran.c:    * compositing on black.  This is probably sub-optimal and has been done in
3rdparty/libpng/pngrtran.c:    * 1.5.4 betas simply to enable external critique and testing (i.e. to
3rdparty/libpng/pngrtran.c:   /* This needs to change - in the palette image case a whole set of tables are
3rdparty/libpng/pngrtran.c:    * the gamma tables will not be built even if composition is required on a
3rdparty/libpng/pngrtran.c:    * tables.
3rdparty/libpng/pngrtran.c:      png_build_gamma_table(png_ptr, png_ptr->bit_depth);
3rdparty/libpng/pngrtran.c:         /* Issue a warning about this combination: because RGB_TO_GRAY is
3rdparty/libpng/pngrtran.c:               back.red = png_ptr->gamma_table[png_ptr->background.red];
3rdparty/libpng/pngrtran.c:               back.green = png_ptr->gamma_table[png_ptr->background.green];
3rdparty/libpng/pngrtran.c:               back.blue = png_ptr->gamma_table[png_ptr->background.blue];
3rdparty/libpng/pngrtran.c:                  palette[i].red = png_ptr->gamma_table[palette[i].red];
3rdparty/libpng/pngrtran.c:                  palette[i].green = png_ptr->gamma_table[palette[i].green];
3rdparty/libpng/pngrtran.c:                  palette[i].blue = png_ptr->gamma_table[palette[i].blue];
3rdparty/libpng/pngrtran.c:         /* NOTE: there are other transformations that should probably be in
3rdparty/libpng/pngrtran.c:            palette[i].red = png_ptr->gamma_table[palette[i].red];
3rdparty/libpng/pngrtran.c:            palette[i].green = png_ptr->gamma_table[palette[i].green];
3rdparty/libpng/pngrtran.c:            palette[i].blue = png_ptr->gamma_table[palette[i].blue];
3rdparty/libpng/pngrtran.c:   /* No GAMMA transformation (see the hanging else 4 lines above) */
3rdparty/libpng/pngrtran.c:    * the screen_gamma value.  The following probably results in weirdness if
3rdparty/libpng/pngrtran.c:       * the app program can chose if both APIs are available by setting the
3rdparty/libpng/pngrtran.c:            CONFIGURATION ERROR: you must enable at least one 16 to 8 method
3rdparty/libpng/pngrtran.c:   /* STRIP_ALPHA and FILLER allowed:  MASK_ALPHA bit stripped above */
3rdparty/libpng/pngrtran.c:   /* Adding in 1.5.4: cache the above value in png_struct so that we can later
3rdparty/libpng/pngrtran.c: *  gamma information is available to correct the encoding of the original RGB
3rdparty/libpng/pngrtran.c: *  to that used above.
3rdparty/libpng/pngrtran.c:                  /* If there is no overall correction the table will not be
3rdparty/libpng/pngrtran.c:                  if (png_ptr->gamma_table != NULL)
3rdparty/libpng/pngrtran.c:                     red = png_ptr->gamma_table[red];
3rdparty/libpng/pngrtran.c:                  if (png_ptr->gamma_16_table != NULL)
3rdparty/libpng/pngrtran.c:                     w = png_ptr->gamma_16_table[(red & 0xff)
3rdparty/libpng/pngrtran.c:   png_const_bytep gamma_table = png_ptr->gamma_table;
3rdparty/libpng/pngrtran.c:   png_const_uint_16pp gamma_16 = png_ptr->gamma_16_table;
3rdparty/libpng/pngrtran.c:                  if (gamma_table != NULL)
3rdparty/libpng/pngrtran.c:                           unsigned int g = (gamma_table [p | (p << 2) |
3rdparty/libpng/pngrtran.c:                  if (gamma_table != NULL)
3rdparty/libpng/pngrtran.c:                           unsigned int g = (gamma_table[p | (p << 4)] >> 4) &
3rdparty/libpng/pngrtran.c:                  if (gamma_table != NULL)
3rdparty/libpng/pngrtran.c:                           *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:               if (gamma_table != NULL)
3rdparty/libpng/pngrtran.c:                        *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                        *(sp + 1) = gamma_table[*(sp + 1)];
3rdparty/libpng/pngrtran.c:                        *(sp + 2) = gamma_table[*(sp + 2)];
3rdparty/libpng/pngrtran.c:                   gamma_table != NULL)
3rdparty/libpng/pngrtran.c:                        *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                   gamma_table != NULL)
3rdparty/libpng/pngrtran.c:                        *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                        *(sp + 1) = gamma_table[*(sp + 1)];
3rdparty/libpng/pngrtran.c:                        *(sp + 2) = gamma_table[*(sp + 2)];
3rdparty/libpng/pngrtran.c: * or RGB images. If your bit depth is 8, use gamma_table, if it
3rdparty/libpng/pngrtran.c: * is 16, use gamma_16_table and gamma_shift.  Build these with
3rdparty/libpng/pngrtran.c: * build_gamma_table().
3rdparty/libpng/pngrtran.c:   png_const_bytep gamma_table = png_ptr->gamma_table;
3rdparty/libpng/pngrtran.c:   png_const_uint_16pp gamma_16_table = png_ptr->gamma_16_table;
3rdparty/libpng/pngrtran.c:   if (((row_info->bit_depth <= 8 && gamma_table != NULL) ||
3rdparty/libpng/pngrtran.c:       (row_info->bit_depth == 16 && gamma_16_table != NULL)))
3rdparty/libpng/pngrtran.c:                  *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                  *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                  *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                  v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3rdparty/libpng/pngrtran.c:                  v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3rdparty/libpng/pngrtran.c:                  v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3rdparty/libpng/pngrtran.c:                  *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                  *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                  *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                  png_uint_16 v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3rdparty/libpng/pngrtran.c:                  v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3rdparty/libpng/pngrtran.c:                  v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3rdparty/libpng/pngrtran.c:                  *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                  png_uint_16 v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3rdparty/libpng/pngrtran.c:                      ((((int)gamma_table[a|(a>>2)|(a>>4)|(a>>6)])   ) & 0xc0)|
3rdparty/libpng/pngrtran.c:                      ((((int)gamma_table[(b<<2)|b|(b>>2)|(b>>4)])>>2) & 0x30)|
3rdparty/libpng/pngrtran.c:                      ((((int)gamma_table[(c<<4)|(c<<2)|c|(c>>2)])>>4) & 0x0c)|
3rdparty/libpng/pngrtran.c:                      ((((int)gamma_table[(d<<6)|(d<<4)|(d<<2)|d])>>6) ));
3rdparty/libpng/pngrtran.c:                  *sp = (png_byte)((((int)gamma_table[msb | (msb >> 4)]) & 0xf0)
3rdparty/libpng/pngrtran.c:                      | (((int)gamma_table[(lsb << 4) | lsb]) >> 4));
3rdparty/libpng/pngrtran.c:                  *sp = gamma_table[*sp];
3rdparty/libpng/pngrtran.c:                  png_uint_16 v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3rdparty/libpng/pngrtran.c: * from_1 tables.
3rdparty/libpng/pngrtran.c:         PNG_CONST png_bytep table = png_ptr->gamma_from_1;
3rdparty/libpng/pngrtran.c:         if (table != NULL)
3rdparty/libpng/pngrtran.c:               *row = table[*row];
3rdparty/libpng/pngrtran.c:         PNG_CONST png_uint_16pp table = png_ptr->gamma_16_from_1;
3rdparty/libpng/pngrtran.c:         if (table != NULL)
3rdparty/libpng/pngrtran.c:               v = table[*(row + 1) >> gamma_shift][*row];
3rdparty/libpng/pngrtran.c:             * it down to a reasonable formula.  For example, with
3rdparty/libpng/pngrtran.c:       * This check added to libpng-1.2.19 (but not enabled until 1.5.4).
3rdparty/libpng/LICENSE:including, without limitation, the warranties of merchantability and of
3rdparty/libpng/LICENSE:assume no liability for direct, indirect, incidental, special, exemplary,
3rdparty/libpng/LICENSE:A "png_get_copyright" function is available, for convenient use in "about"
3rdparty/libpng/CMakeLists.txt:    message(STATUS "math lib 'libm' not found; floating point support disabled")
3rdparty/libpng/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS -Wcast-align)
3rdparty/libpng/pngwutil.c:/* This is the API that calls the internal function above. */
3rdparty/libpng/pngwutil.c:       * able to see the whole of the data, so if data_size+262 takes us to the
3rdparty/libpng/pngwutil.c: * set up by the caller to allow access to the relevant local variables.
3rdparty/libpng/pngwutil.c:    * PNG writer is assumed to have more memory available than a PNG reader.
3rdparty/libpng/pngwutil.c:          * reset above every time round the loop).
3rdparty/libpng/pngwutil.c:          * function above to return Z_STREAM_END on an error (though it never
3rdparty/libpng/pngwutil.c:/* This is similar to png_text_compress, above, except that it does not require
3rdparty/libpng/pngwutil.c:       (png_uint_32)/*checked above*/(key_len + text_len + 1));
3rdparty/libpng/pngwutil.c:/* Initializes the row writing capability of libpng */
3rdparty/libpng/pngwutil.c:      /* Reset the row above the image for the next pass */
3rdparty/libpng/pngwutil.c:      pa = abs(p);
3rdparty/libpng/pngwutil.c:      pb = abs(pc);
3rdparty/libpng/pngwutil.c:      pc = abs(p + pc);
3rdparty/libpng/pngwutil.c:    * smallest value when summing the absolute values of the distances
3rdparty/libpng/pngwutil.c:    * as the "minimum sum of absolute differences" heuristic.  Other
3rdparty/libpng/pngwutil.c:    * heuristics are the "weighted minimum sum of absolute differences"
3rdparty/libpng/pngwutil.c:    *   (1) minimum sum of absolute differences from running average (i.e.,
3rdparty/libpng/pngwutil.c:    *       keep running sum of non-absolute differences & count of bytes)
3rdparty/libpng/pngwutil.c:    *  (1b) minimum sum of absolute differences from sliding average, probably
3rdparty/libpng/pngdebug.h:       int num_tabs=l; \
3rdparty/libpng/pngdebug.h:       fprintf(PNG_DEBUG_FILE,"%s" m PNG_STRING_NEWLINE,(num_tabs==1 ? "   " : \
3rdparty/libpng/pngdebug.h:         (num_tabs==2 ? "      " : (num_tabs>2 ? "         " : "")))); \
3rdparty/libpng/pngdebug.h:       int num_tabs=l; \
3rdparty/libpng/pngdebug.h:       fprintf(PNG_DEBUG_FILE,"%s" m PNG_STRING_NEWLINE,(num_tabs==1 ? "   " : \
3rdparty/libpng/pngdebug.h:         (num_tabs==2 ? "      " : (num_tabs>2 ? "         " : ""))),p1); \
3rdparty/libpng/pngdebug.h:       int num_tabs=l; \
3rdparty/libpng/pngdebug.h:       fprintf(PNG_DEBUG_FILE,"%s" m PNG_STRING_NEWLINE,(num_tabs==1 ? "   " : \
3rdparty/libpng/pngdebug.h:         (num_tabs==2 ? "      " : (num_tabs>2 ? "         " : ""))),p1,p2);\
3rdparty/libpng/pngdebug.h:       int num_tabs=l; \
3rdparty/libpng/pngdebug.h:       snprintf(format,256,"%s%s%s",(num_tabs==1 ? "\t" : \
3rdparty/libpng/pngdebug.h:         (num_tabs==2 ? "\t\t":(num_tabs>2 ? "\t\t\t":""))), \
3rdparty/libpng/pngdebug.h:       int num_tabs=l; \
3rdparty/libpng/pngdebug.h:       snprintf(format,256,"%s%s%s",(num_tabs==1 ? "\t" : \
3rdparty/libpng/pngdebug.h:         (num_tabs==2 ? "\t\t":(num_tabs>2 ? "\t\t\t":""))), \
3rdparty/libpng/pngdebug.h:       int num_tabs=l; \
3rdparty/libpng/pngdebug.h:       snprintf(format,256,"%s%s%s",(num_tabs==1 ? "\t" : \
3rdparty/libpng/pngdebug.h:         (num_tabs==2 ? "\t\t":(num_tabs>2 ? "\t\t\t":""))), \
3rdparty/libpng/pngpriv.h: * special build system support on a reasonably ANSI-C compliant system.
3rdparty/libpng/pngpriv.h: * before png.h is included, but load the configuration now if it is available.
3rdparty/libpng/pngpriv.h:    * disable use of NEON instructions.
3rdparty/libpng/pngpriv.h:    * To disable ARM_NEON optimizations entirely, and skip compiling the
3rdparty/libpng/pngpriv.h:    * associated assembler code, pass --enable-arm-neon=no to configure
3rdparty/libpng/pngpriv.h:   /* NEON optimizations are to be at least considered by libpng, so enable the
3rdparty/libpng/pngpriv.h:          * isn't visible in the Visual Studio UI) so it is a fairly reliable
3rdparty/libpng/pngpriv.h:             * (as above.)
3rdparty/libpng/pngpriv.h: * may be automagically set above (at present we know of no system where it does
3rdparty/libpng/pngpriv.h: * To enable listing global, but internal, symbols the following macros should
3rdparty/libpng/pngpriv.h:/* If floating or fixed point APIs are disabled they may still be compiled
3rdparty/libpng/pngpriv.h: * compilers will probably remove it entirely).  Note that if you replace
3rdparty/libpng/pngpriv.h:/* If warnings or errors are turned off the code is disabled or redirected here.
3rdparty/libpng/pngpriv.h: * error and warning messages - this code will also be disabled here.
3rdparty/libpng/pngpriv.h: * them inside an appropriate ifdef/endif pair for portability.
3rdparty/libpng/pngpriv.h:#    define PNG_ABORT() abort()
3rdparty/libpng/pngpriv.h:#define PNG_COLOR_DIST(c1, c2) (abs((int)((c1).red) - (int)((c2).red)) + \
3rdparty/libpng/pngpriv.h:   abs((int)((c1).green) - (int)((c2).green)) + \
3rdparty/libpng/pngpriv.h:   abs((int)((c1).blue) - (int)((c2).blue)))
3rdparty/libpng/pngpriv.h: * macro were established by experiment (modifying the added value).  The macro
3rdparty/libpng/pngpriv.h: * integers, "value" a variable. Added to libpng-1.2.6 JB
3rdparty/libpng/pngpriv.h: * when it is supposedly disabled.)
3rdparty/libpng/pngpriv.h: * that for portable code numeric values must still be used; the string "IHDR"
3rdparty/libpng/pngpriv.h: * is not portable and neither is PNG_U32('I', 'H', 'D', 'R').
3rdparty/libpng/pngpriv.h: * signed and the argument is a (char[])  This macro will fail miserably on
3rdparty/libpng/pngpriv.h:/* Almost everything below is C specific; the #defines above can be used in
3rdparty/libpng/pngpriv.h:/* This is used for 16-bit gamma tables -- only the top level pointers are
3rdparty/libpng/pngpriv.h:/* Added to libpng-1.5.7: sRGB conversion tables */
3rdparty/libpng/pngpriv.h:PNG_INTERNAL_DATA(const png_uint_16, png_sRGB_table, [256]);
3rdparty/libpng/pngpriv.h:    * 0..65535.  This table gives the closest 16-bit answers (no errors).
3rdparty/libpng/pngpriv.h:/* Reset the CRC variable */
3rdparty/libpng/pngpriv.h: * the correct operation of png_combine_row, above.
3rdparty/libpng/pngpriv.h:/* Grab pixels out of a row for an interlaced pass */
3rdparty/libpng/pngpriv.h:    /* Copy the png_struct colorspace to the info_struct and call the above to
3rdparty/libpng/pngpriv.h:PNG_INTERNAL_FUNCTION(int,png_icc_check_tag_table,(png_const_structrp png_ptr,
3rdparty/libpng/pngpriv.h:   png_const_bytep profile /* header plus whole tag table */), PNG_EMPTY);
3rdparty/libpng/pngpriv.h:    * be zero to indicate that it is not available.  It is used, if provided,
3rdparty/libpng/pngpriv.h:    * parameters previously supplied using the above functions.  Errors in
3rdparty/libpng/pngpriv.h: * explicitly disables benign errors (explicitly permitting the code to lose
3rdparty/libpng/pngpriv.h:   /* As above but libpng will ignore the call, or attempt some other partial
3rdparty/libpng/pngpriv.h:   /* Report a recoverable issue in chunk data.  On read this is used to report
3rdparty/libpng/pngpriv.h: * digits - a build time settable option) and assumptions about the
3rdparty/libpng/pngpriv.h:/* State table for the parser. */
3rdparty/libpng/pngpriv.h:#define PNG_FP_STATE      3  /* mask for the above */
3rdparty/libpng/pngpriv.h:#define PNG_FP_SAW_ANY   60  /* Saw any of the above 4 */
3rdparty/libpng/pngpriv.h:#define PNG_FP_STICKY   448  /* The above three flags */
3rdparty/libpng/pngpriv.h:/* This is available for the caller to store in 'state' if required.  Do not
3rdparty/libpng/pngpriv.h:#define PNG_FP_INVALID  512  /* Available for callers as a distinct value */
3rdparty/libpng/pngpriv.h: * is equivalent to PNG_FP_OK above.)
3rdparty/libpng/pngpriv.h: * the index into the string and the state variable (which must
3rdparty/libpng/pngpriv.h: * be initialized to 0).  It returns a result code, as above.  There
3rdparty/libpng/pngpriv.h: * values.  Accuracy is suitable for gamma calculations but this is
3rdparty/libpng/pngpriv.h:PNG_INTERNAL_FUNCTION(void,png_destroy_gamma_table,(png_structrp png_ptr),
3rdparty/libpng/pngpriv.h:PNG_INTERNAL_FUNCTION(void,png_build_gamma_table,(png_structrp png_ptr,
3rdparty/libpng/CHANGES:  saved using 3 spaces instead of tabs
3rdparty/libpng/CHANGES:  put all the configurable stuff in pngconf.h
3rdparty/libpng/CHANGES:  enabled png_set_shift to work with paletted images on read
3rdparty/libpng/CHANGES:  replaced tabs with spaces
3rdparty/libpng/CHANGES:  Made CRC errors/warnings on critical and ancillary chunks configurable
3rdparty/libpng/CHANGES:  Current chunk name is now available in png_struct to reduce the number
3rdparty/libpng/CHANGES:    support when available)
3rdparty/libpng/CHANGES:      be able to handle all chunks via a callback mechanism
3rdparty/libpng/CHANGES:  Removed all implicit variable tests which assume NULL == 0 (I think)
3rdparty/libpng/CHANGES:  Changed several variables to "png_size_t" to show 16/32-bit limitations
3rdparty/libpng/CHANGES:    obsolete for about 2 years now (use png_set_filler() instead)
3rdparty/libpng/CHANGES:  Added macros for simple libpng debugging output selectable at compile time
3rdparty/libpng/CHANGES:  Removed PNG_USE_OWN_CRC capability
3rdparty/libpng/CHANGES:    all configurable options can be selected from command-line instead
3rdparty/libpng/CHANGES:  Changed recommendation about file_gamma for PC images to .51 from .45,
3rdparty/libpng/CHANGES:  Added png_invert_alpha capability (Glenn R-P -- suggestion by Jon Vincent)
3rdparty/libpng/CHANGES:  Changed recommendation about file_gamma for PC images to .50 from .51 in
3rdparty/libpng/CHANGES:  Added many "if (png_ptr == NULL) return" to quell compiler warnings about
3rdparty/libpng/CHANGES:  Touched up example.c to make more of it compileable, although the entire
3rdparty/libpng/CHANGES:  Added makefile.os2 and pngos2.def (A. Zabolotny) and makefile.s2x (W. Sebok)
3rdparty/libpng/CHANGES:  Added user transform capability
3rdparty/libpng/CHANGES:  Quieted compiler complaints about two empty "for" loops in pngrutil.c
3rdparty/libpng/CHANGES:  Optimized Paeth calculations by replacing abs() function calls with intrinsics
3rdparty/libpng/CHANGES:  plus other loop optimizations. Improves avg decoding speed by about 20%.
3rdparty/libpng/CHANGES:  Added grayscale and 16-bit capability to png_do_read_filler().
3rdparty/libpng/CHANGES:  Revised paragraph about png_set_expand() in libpng.txt and libpng.3 (Greg)
3rdparty/libpng/CHANGES:    to remove unwanted capabilities via the compile line
3rdparty/libpng/CHANGES:  Added capability for user-provided malloc_fn() and free_fn() functions,
3rdparty/libpng/CHANGES:  Fixed a documentation error about default filtering with 8-bit indexed-color.
3rdparty/libpng/CHANGES:  Added information about debugging in libpng.txt and libpng.3 .
3rdparty/libpng/CHANGES:  Added "if" tests to silence complaints about unused png_ptr in png.h and png.c
3rdparty/libpng/CHANGES:  Replaced leading blanks with tab characters in makefile.hux
3rdparty/libpng/CHANGES:  Added function png_set_empty_plte_permitted() to make libpng useable
3rdparty/libpng/CHANGES:  Changed leading blanks to tabs in all makefiles.
3rdparty/libpng/CHANGES:  Added a CPU timing report to pngtest.c (enabled by defining PNGTEST_TIMING)
3rdparty/libpng/CHANGES:  Added a comment in makefile.linux warning about buggy -O3 in pgcc 2.95.1
3rdparty/libpng/CHANGES:  Re-enabled some parts of pngvcrd.c (png_combine_row) that work properly.
3rdparty/libpng/CHANGES:    accommodate making DLL's: Moved usr_png_ver from global variable to function
3rdparty/libpng/CHANGES:    available to applications (although none are used in libpng itself) when
3rdparty/libpng/CHANGES:  Renamed "PNG_GLOBAL_ARRAYS" to "PNG_USE_GLOBAL_ARRAYS" and made available
3rdparty/libpng/CHANGES:    write tEXt or zTXt chunks.  If you want your application to be able to
3rdparty/libpng/CHANGES:    macros, leaving the separate macros also available.
3rdparty/libpng/CHANGES:  Changed makefile.solaris to issue a warning about potential problems when
3rdparty/libpng/CHANGES:  Expanded tabs and removed trailing blanks in source files.
3rdparty/libpng/CHANGES:    The "Note" above, about backward incompatibility of libpng-1.0.5e, no
3rdparty/libpng/CHANGES:  Eliminated erroneous warnings about multiple sPLT chunks and sPLT-after-PLTE.
3rdparty/libpng/CHANGES:    about ignoring incorrect gAMA with sRGB (gAMA was in fact not ignored)
3rdparty/libpng/CHANGES:  Relocated the makefile.solaris warning about PATH problems.
3rdparty/libpng/CHANGES:    backward compatibility with version 1.0.5.  Added some remarks about
3rdparty/libpng/CHANGES:    a 24-bit visual if one is available, and to allow abbreviated options.
3rdparty/libpng/CHANGES:  Revised documentation to remove reference to abandoned png_free_chnk functions
3rdparty/libpng/CHANGES:  Changed several png_errors about malformed ancillary chunks to png_warnings.
3rdparty/libpng/CHANGES:  Relocated paragraph about png_set_background() in libpng.3/libpng.txt
3rdparty/libpng/CHANGES:    when you define this macro.  Capabilities lost in this event
3rdparty/libpng/CHANGES:  Expanded libpng.3/libpng.txt information about png_data_freer().
3rdparty/libpng/CHANGES:  Removed png_mmx_support() function and disabled PNG_MNG_FEATURES_SUPPORTED
3rdparty/libpng/CHANGES:    be re-enabled in version 1.2.0.
3rdparty/libpng/CHANGES:  Eliminated the png_error about apps using png_read|write_init().  Instead,
3rdparty/libpng/CHANGES:  Re-enabled PNG_MNG_FEATURES_SUPPORTED and enabled PNG_ASSEMBLER_CODE_SUPPORTED
3rdparty/libpng/CHANGES:  Enabled user memory function by default.
3rdparty/libpng/CHANGES:  Revised example.c to provide more details about using row_callback().
3rdparty/libpng/CHANGES:  Revised pnggccrd.c to be able to back out version 1.0.x via PNG_1_0_X macro.
3rdparty/libpng/CHANGES:  Changed png_error() to png_warning() about "Too much data" in pngpread.c
3rdparty/libpng/CHANGES:    and about "Extra compressed data" in pngrutil.c.
3rdparty/libpng/CHANGES:  Only issue png_warning() about "Too much data" in pngpread.c when avail_in
3rdparty/libpng/CHANGES:  Commented out warning about uninitialized mmx_support in pnggccrd.c.
3rdparty/libpng/CHANGES:  Commented out warning about uninitialized mmx_support in pngvcrd.c (Cosmin).
3rdparty/libpng/CHANGES:  Added user ability to change png_size_t via a PNG_SIZE_T macro.
3rdparty/libpng/CHANGES:  Added PNG_SIZE_MAX (maximum value of a png_size_t variable.
3rdparty/libpng/CHANGES:  Changed sPLT failure action from png_error to png_warning and abandon chunk.
3rdparty/libpng/CHANGES:  Changed sCAL and iCCP failures from png_error to png_warning and abandon.
3rdparty/libpng/CHANGES:  Fixed buffer overflow vulnerability (CVE-2004-0597) in png_handle_tRNS().
3rdparty/libpng/CHANGES:  Fixed NULL dereference vulnerability (CVE-2004-0598) in png_handle_iCCP().
3rdparty/libpng/CHANGES:  Fixed integer overflow vulnerability (CVE-2004-0599) in png_read_png().
3rdparty/libpng/CHANGES:  Fixed problem with 64-bit compilers by casting arguments to abs()
3rdparty/libpng/CHANGES:  Eliminated use of "abs()" in testing cHRM and gAMA values, to avoid
3rdparty/libpng/CHANGES:  Moved test for nonzero gamma outside of png_build_gamma_table() in pngrtran.c
3rdparty/libpng/CHANGES:  Default iTXt support was inadvertently enabled.
3rdparty/libpng/CHANGES:  Made png_get_int_32 and png_save_int_32 always available (Cosmin).
3rdparty/libpng/CHANGES:  Made swap tables in pngtrans.c PNG_CONST (Carlo Bramix).
3rdparty/libpng/CHANGES:  Disabled default iTXt support that was inadvertently enabled in
3rdparty/libpng/CHANGES:  Include "config.h" in pngconf.h when available.
3rdparty/libpng/CHANGES:  Made the configure warning about versioned symbols less arrogant.
3rdparty/libpng/CHANGES:    to eliminate a vulnerability (CVE-2007-2445, CERT VU#684664)
3rdparty/libpng/CHANGES:  Made png_squelch_warnings() available via PNG_SQUELCH_WARNINGS macro.
3rdparty/libpng/CHANGES:  Enabled iTXt support (changes png_struct, thus requires so-number change).
3rdparty/libpng/CHANGES:  Added "(unsigned long)" typecast on png_uint_32 variables in printf lists.
3rdparty/libpng/CHANGES:    some makefiles, because it was not working reliably.  Instead, distribute
3rdparty/libpng/CHANGES:  Sync with tEXt vulnerability fix in libpng-1.2.33rc02.
3rdparty/libpng/CHANGES:  Support for dithering was disabled by default, because it has never
3rdparty/libpng/CHANGES:    been removed, however, and can be enabled by building libpng with
3rdparty/libpng/CHANGES:  Revised libpng*.txt and png.h documentation about use of png_write_flush()
3rdparty/libpng/CHANGES:  Relocated png_do_chop() ahead of building gamma tables in pngrtran.c
3rdparty/libpng/CHANGES:    This avoids building 16-bit gamma tables unnecessarily.
3rdparty/libpng/CHANGES:    warning about a global "gamma" variable in math.h on some platforms.
3rdparty/libpng/CHANGES:  Added sections about the git repository and our coding style to the
3rdparty/libpng/CHANGES:  Added a section to the libpng documentation about using png_get_io_ptr()
3rdparty/libpng/CHANGES:    because the ISO PNG specification has a typo in the tRNS table.
3rdparty/libpng/CHANGES:    available for ignoring known chunks even when not saving unknown chunks.
3rdparty/libpng/CHANGES:    compiler complaints about doubly declaring things "const".
3rdparty/libpng/CHANGES:  Revised png_check_IHDR() to eliminate bogus complaint about filter_type.
3rdparty/libpng/CHANGES:  Revised png_check_IHDR() to add a test for width variable less than 32-bit.
3rdparty/libpng/CHANGES:  Revised libpng*.txt section about differences between 1.2.x and 1.4.0
3rdparty/libpng/CHANGES:    to prevent warnings about direct access to png structs by libpng
3rdparty/libpng/CHANGES:  Removed obsolete comments about ASM from projects/visualc71/README_zlib.txt
3rdparty/libpng/CHANGES:    changes above and 1.2.30, 1.2.30rc01 and rc03 in 1.2.41 CHANGES.  Someone
3rdparty/libpng/CHANGES:  Added "bit_depth" parameter to the private png_build_gamma_table() function.
3rdparty/libpng/CHANGES:  Pass bit_depth=8 to png_build_gamma_table() when bit_depth is 16 but the
3rdparty/libpng/CHANGES:    tables.
3rdparty/libpng/CHANGES:  Reverted the gamma_table changes from libpng-1.4.0beta109.
3rdparty/libpng/CHANGES:  Revised libpng*.txt and libpng.3 about 1.2.x->1.4.x differences.
3rdparty/libpng/CHANGES:  Make png_set|get_compression_buffer_size() available even when
3rdparty/libpng/CHANGES:    PNG_WRITE_SUPPORTED is not enabled.
3rdparty/libpng/CHANGES:  Added defineable PNG_USER_CHUNK_CACHE_MAX, PNG_USER_CHUNK_MALLOC_MAX,
3rdparty/libpng/CHANGES:    are disabled by default.
3rdparty/libpng/CHANGES:  Enabled 'attribute' warnings that are relevant to library APIs and callbacks.
3rdparty/libpng/CHANGES:    before to disable code to actually read or write iTXt chunks
3rdparty/libpng/CHANGES:    read or write support (but it is probably better to check for
3rdparty/libpng/CHANGES:  Documented the fact that png_set_dither() was disabled since libpng-1.4.0.
3rdparty/libpng/CHANGES:  Reenabled png_set_dither() but renamed it to png_set_quantize() to reflect
3rdparty/libpng/CHANGES:  Removed the ability to include optional pngusr.h
3rdparty/libpng/CHANGES:  Restored the ability to include optional pngusr.h
3rdparty/libpng/CHANGES:    errors are disabled via PNG_NO_WARN or PNG_NO_ERROR_TEXT, to avoid
3rdparty/libpng/CHANGES:    to read and write ints to be disabled independently of PNG_USE_READ_MACROS,
3rdparty/libpng/CHANGES:  Added logunsupported=1 to cause pnglibconf.h to document disabled options.
3rdparty/libpng/CHANGES:    This makes the installed pnglibconf.h more readable but causes no
3rdparty/libpng/CHANGES:  Added more blank lines for readability.
3rdparty/libpng/CHANGES:  Made FIXED and FLOATING options consistent in the APIs they enable and
3rdparty/libpng/CHANGES:    disable.  Corrected scripts/options.awk to handle both command line
3rdparty/libpng/CHANGES:    warnings are unavoidable.  Fixes include signed/unsigned fixes in
3rdparty/libpng/CHANGES:    declarations, PNG_FUNCTION has been added to enable this and the
3rdparty/libpng/CHANGES:  Removed spurious tabs, shorten long lines (no source change)
3rdparty/libpng/CHANGES:    reasonably be validated (it is suggested to run "make distclean" before
3rdparty/libpng/CHANGES:    in an earlier update.  Fixed to declare the auto variables at the head.
3rdparty/libpng/CHANGES:  Updated CMakeLists.txt to use CMAKE_INSTALL_LIBDIR variable; useful for
3rdparty/libpng/CHANGES:  Changed pngvalid to work when floating point APIs are disabled
3rdparty/libpng/CHANGES:    obsolete statement about a custom ltmain.sh
3rdparty/libpng/CHANGES:  Disabled "color-tests" by default in Makefile.am so it will work with
3rdparty/libpng/CHANGES:  Removed obsolete remarks about setjmp handling from INSTALL.
3rdparty/libpng/CHANGES:    for pngrutil.c (because of the widespread use of += et al on variables
3rdparty/libpng/CHANGES:  Added some commentary about PNG_EXPORT in png.h and pngconf.h
3rdparty/libpng/CHANGES:  Enabled the strip16 tests in pngvalid.`
3rdparty/libpng/CHANGES:  Prefixed variable names index, div, exp, gamma with "png_" to avoid "shadow"
3rdparty/libpng/CHANGES:  Changed variable names png_index, png_div, png_exp, and png_gamma to
3rdparty/libpng/CHANGES:  Revised png_fixed() in png.c to avoid compiler warning about reaching the
3rdparty/libpng/CHANGES:    should fail if one is not available.
3rdparty/libpng/CHANGES:    pngvalid contains tests of transforms, which tests are currently disabled
3rdparty/libpng/CHANGES:  Corrected local variable type in new API png_process_data_skip()
3rdparty/libpng/CHANGES:  Don't include standard header files in png.h while building the symbol table,
3rdparty/libpng/CHANGES:    snprintf, and the "__STRICT_ANSI__" detects that condition more reliably
3rdparty/libpng/CHANGES:    calls to spurious functions if all transforms are disabled and slightly
3rdparty/libpng/CHANGES:    disabling each other; this allows the future alpha premultiplication
3rdparty/libpng/CHANGES:    pngvalid.c to ensure that POSIX conformant systems disable non-POSIX APIs.
3rdparty/libpng/CHANGES:    optimization configureable.
3rdparty/libpng/CHANGES:    parameters are supplied by the caller), while in the absence of cHRM
3rdparty/libpng/CHANGES:    gamma tables when the code only generates 8-bit ones.  This fails
3rdparty/libpng/CHANGES:    Corrects the code for palette image tests and disables attempts to
3rdparty/libpng/CHANGES:  Revised documentation about png_set_user_limits() to say that it also affects
3rdparty/libpng/CHANGES:    The project is configurable, unlike the Visual Studio project, so long
3rdparty/libpng/CHANGES:    and changed other things OpenWatcom warns about.
3rdparty/libpng/CHANGES:    necessarily fully supportable, particularly png_strncpy and png_snprintf.
3rdparty/libpng/CHANGES:  Removed the ACCURATE and LEGACY options (they are no longer useable)
3rdparty/libpng/CHANGES:  Made png_set_chop_16() API removeable by disabling PNG_CHOP_16_TO_8_SUPPORTED
3rdparty/libpng/CHANGES:  Made PNG_READ_16_TO_8_ACCURATE_SCALE configurable again.  If this is
3rdparty/libpng/CHANGES:    not enabled, png_set_strip_16() and png_do_scale_16_to_8() aren't built.
3rdparty/libpng/CHANGES:  Enabled compilation with g++ compiler.  This compiler does not recognize
3rdparty/libpng/CHANGES:  Updated commentary about the png_rgb_to_gray() default coefficients
3rdparty/libpng/CHANGES:  A considerable number of tests has been added to pngvalid for the
3rdparty/libpng/CHANGES:    than correctness.)  The code still has considerable inaccuracies in the
3rdparty/libpng/CHANGES:  Moved row_info from png_struct to a local variable.
3rdparty/libpng/CHANGES:  Add ability to call png_read_update_info multiple times to pngvalid.c.
3rdparty/libpng/CHANGES:    code branches and complain about out-of-range shifts.
3rdparty/libpng/CHANGES:    enables that fix for all compilers when using compile-time constants.
3rdparty/libpng/CHANGES:    changed the name of a local variable to avoid the warnings that result.
3rdparty/libpng/CHANGES:    of a png_struct or png_info failed. This would probably have led to a
3rdparty/libpng/CHANGES:  Installed more accurate linear to sRGB conversion tables. The slightly
3rdparty/libpng/CHANGES:    modified tables reduce the number of 16-bit values that
3rdparty/libpng/CHANGES:    to generate the tables is now in a contrib/sRGBtables sub-directory.
3rdparty/libpng/CHANGES:  Removed PNG_CONST from the sRGB table declarations in pngpriv.h and png.c
3rdparty/libpng/CHANGES:    is desireable to make the source work with either C or C++ rules
3rdparty/libpng/CHANGES:    This creates security issues if assembler code is enabled; the
3rdparty/libpng/CHANGES:    known bug of being unable to retrieve a corrected palette). It seems
3rdparty/libpng/CHANGES:    so is particularly valuable.  Overall on a 64-bit system the libpng DLL
3rdparty/libpng/CHANGES:    about 465 bytes because of the new functionality.
3rdparty/libpng/CHANGES:  Enabled png_get_sCAL_fixed() if floating point APIs are enabled. Previously
3rdparty/libpng/CHANGES:    it was disabled whenever internal fixed point arithmetic was selected,
3rdparty/libpng/CHANGES:    which meant it didn't exist even on systems where FP was available but not
3rdparty/libpng/CHANGES:  Updated configure.ac from autoupdate: added --enable-werror option.
3rdparty/libpng/CHANGES:    Also some layout regularization and removal of introduced tab characters
3rdparty/libpng/CHANGES:    the pre-req hasn't been changed.  --enable-werror checks for support
3rdparty/libpng/CHANGES:  Revised INSTALL information about autogen.sh; it works in tar distributions.
3rdparty/libpng/CHANGES:  Updated documentation about the simplified API.
3rdparty/libpng/CHANGES:    suffers from the known instability in gamma transforms for values close
3rdparty/libpng/CHANGES:    defined.  To enable, use "CPPFLAGS=-DPNG_SAFE_LIMITS_SUPPORTED=1" on the
3rdparty/libpng/CHANGES:  Added information about the new limits in the manual.
3rdparty/libpng/CHANGES:    can be disabled with the --slow option.
3rdparty/libpng/CHANGES:    variable.  GCC 64-bit warns about assigning a (size_t) (unsigned 64-bit)
3rdparty/libpng/CHANGES:    to an (int) (signed 32-bit).  MSVC, however, warns about using the
3rdparty/libpng/CHANGES:  If benign errors are disabled use maximum window on ancilliary inflate.
3rdparty/libpng/CHANGES:  Issue a png_benign_error() instead of png_warning() about bad palette index.
3rdparty/libpng/CHANGES:    This avoids compiler warnings when -Wwrite-strings is enabled.
3rdparty/libpng/CHANGES:    this is disabled in which case the simplified API can't be built.)
3rdparty/libpng/CHANGES:    fails to call one of the 'start' routines (not enabled in libpng-1.5
3rdparty/libpng/CHANGES:    causing this to happen; this is probably a mis-feature in the zlib
3rdparty/libpng/CHANGES:    benign errors; also added --strict to pngstest - not enabled
3rdparty/libpng/CHANGES:    RELEASE variable.
3rdparty/libpng/CHANGES:  Enable png_set_check_for_invalid_index() for both read and write.
3rdparty/libpng/CHANGES:    fixes the cases that clang warns about either by eliminating the
3rdparty/libpng/CHANGES:    performs an optimization which is safe; however it then warns about it.
3rdparty/libpng/CHANGES:  Do not depend upon a GCC feature macro being available for use in generating
3rdparty/libpng/CHANGES:  Fixed configurations where floating point is completely disabled.  Because
3rdparty/libpng/CHANGES:    disabled. This requires the png floating point types (png_double*) to be
3rdparty/libpng/CHANGES:    considerable code cleanup, and extra error checking, is possible.  This
3rdparty/libpng/CHANGES:    png_app_error(), which can be disabled in the app using
3rdparty/libpng/CHANGES:    if the only unknown handling enabled is via the callback, allowing libpng
3rdparty/libpng/CHANGES:    when SAVE support is absent.  Moved the shell test scripts for
3rdparty/libpng/CHANGES:    enabled by default in pre-RC builds. makepng can now write ICC profiles
3rdparty/libpng/CHANGES:    Prior to 1.6.0 switching off READ_GAMMA did unpredictable things to the
3rdparty/libpng/CHANGES:    of -DPNG_NO_READ_GAMMA is changed to simply disable any interface that
3rdparty/libpng/CHANGES:    question (typically most users who disable it won't).
3rdparty/libpng/CHANGES:    gain; implementing full ICC color correction may be desireable but is left
3rdparty/libpng/CHANGES:  Added the ability for contrib/libtests/makepng.c to make a PNG with just one
3rdparty/libpng/CHANGES:  Made default Zlib compression settings be configurable. This adds #defines to
3rdparty/libpng/CHANGES:  Fixed Windows build issues, enabled ARM compilation. Various warnings issued
3rdparty/libpng/CHANGES:    GCCs.) ARM support is enabled by default in zlib.props (unsupported by
3rdparty/libpng/CHANGES:  Fixed conceivable but difficult to repro overflow. Also added two test
3rdparty/libpng/CHANGES:  Update manual about png_get_palette_max().
3rdparty/libpng/CHANGES:    symptoms are unpredictable depending on the order make chooses to
3rdparty/libpng/CHANGES:  Enabled parallel tests - back ported from libpng-1.7.
3rdparty/libpng/CHANGES:  Reenabled code to allow zero length PLTE chunks for MNG.
3rdparty/libpng/CHANGES:    --enable-arm-neon=always will stop the run-time checks. New checks
3rdparty/libpng/CHANGES:    providing an alternative and general solution for the non-portable
3rdparty/libpng/CHANGES:  Introduced a PNG_LIB_TARGETS variable that lists all activated library
3rdparty/libpng/CHANGES:    targets.  It is an error if this variable ends up empty, ie. you have
3rdparty/libpng/CHANGES:    technically valid, although a reasonable treatment of division would
3rdparty/libpng/CHANGES:  Ensure that NEON filter stuff is completely disabled when switched 'off'.
3rdparty/libpng/CHANGES:    was switched 'off' as opposed to being explicitly disabled.
3rdparty/libpng/CHANGES:  Test for 'arm*' not just 'arm' in the host_cpu configure variable.
3rdparty/libpng/CHANGES:  Expanded manual paragraph about writing private chunks, particularly
3rdparty/libpng/CHANGES:    only works with libpng versions that can be made to reliably fail when
3rdparty/libpng/CHANGES:  Added information in the documentation about problems with and fixes for
3rdparty/libpng/CHANGES:    decision about whether or not to use the optimizations.
3rdparty/libpng/CHANGES:    as parameters for png_set_gamma().  These have been available since
3rdparty/libpng/CHANGES:  Revised manual about changes in iTXt chunk handling made in libpng-1.6.0.
3rdparty/libpng/CHANGES:  Added information about png_set_options() to the manual.
3rdparty/libpng/CHANGES:    compilation of pngvalid.c results in a warning about increased alignment
3rdparty/libpng/CHANGES:    if SAVE_UNKNOWN was not available but did nothing since the callback
3rdparty/libpng/CHANGES:    compiler complains about casting a string literal as (char*), so copied the
3rdparty/libpng/CHANGES:    arm/filter_neon_intrinsics.c; enable with -mfpu=neon.
3rdparty/libpng/CHANGES:  Enabled WRITE_INVERT and WRITE_PACK in contrib/pngminim/encoder.
3rdparty/libpng/CHANGES:  Changed tabs to 3 spaces in png_debug macros and changed '"%s"m'
3rdparty/libpng/CHANGES:    to '"%s" m' to improve portability among compilers.
3rdparty/libpng/CHANGES:    and VU#650142.  Libpng-1.6.1 through 1.6.7 are vulnerable.
3rdparty/libpng/CHANGES:    segment of the DLL by 1208 bytes, about 0.6%. It also simplifies
3rdparty/libpng/CHANGES:  Allow unversioned links created on install to be disabled in configure.
3rdparty/libpng/CHANGES:    rearrangement of Makefile.am allow creation of these links to be disabled.
3rdparty/libpng/CHANGES:    are used for both read and write in some cases, it is not reliable
3rdparty/libpng/CHANGES:    so warnings will be put on stderr even if libpng has CONSOLE_IO disabled.
3rdparty/libpng/CHANGES:  Removed unreachable return statement after png_chunk_error()
3rdparty/libpng/CHANGES:    where applicable, and applied other minor makefile changes (Cosmin).
3rdparty/libpng/CHANGES:  Don't warn about invalid dimensions exceeding user limits (Cosmin).
3rdparty/libpng/CHANGES:    compiler complaints about unused pointers.
3rdparty/libpng/CHANGES:    in unistd.h and nanosleep() is not available; fixes error introduced
3rdparty/libpng/CHANGES:  Disable floating point exception handling in pngvalid.c when
3rdparty/libpng/CHANGES:  Added "option READ_iCCP enables READ_COMPRESSED_TEXT" to pnglibconf.dfa
3rdparty/libpng/CHANGES:    PNG_WARNINGS_SUPPORTED and PNG_ERROR_TEXT_SUPPORTED are disabled.
3rdparty/libpng/CHANGES:  Added "chunk iTXt enables TEXT" and "chunk zTXt enables TEXT"
3rdparty/libpng/CHANGES:  Removed "option READ_COMPRESSED_TEXT enables READ_TEXT" from pnglibconf.dfa,
3rdparty/libpng/CHANGES:  Removed "option WRITE_COMPRESSED_TEXT enables WRITE_TEXT" from pnglibconf.dfa
3rdparty/libpng/CHANGES:    converted to double. This is probably a GCC bug but this change
3rdparty/libpng/CHANGES:    of GCC on 64-bit systems warn about the apparent narrowing, even though
3rdparty/libpng/CHANGES:  Removed the obsolete $ARCH variable from scripts/makefile.darwin.
3rdparty/libpng/CHANGES:    pngset.c to avoid warnings about dead code.
3rdparty/libpng/CHANGES:  Replaced "unexpected" with an integer (0xabadca11) in pngset.c
3rdparty/libpng/CHANGES:    variables in the Try macro needs to be volatile to prevent value
3rdparty/libpng/CHANGES:    to compile them without the minimum required support enabled
3rdparty/libpng/CHANGES:  Updated obsolete information about the simplified API macros in the
3rdparty/libpng/CHANGES:    unavoidable, where we test for overflow.
3rdparty/libpng/CHANGES:  Fixed uninitialized variable in contrib/gregbook/rpng2-x.c
3rdparty/libpng/CHANGES:  Removed unreachable "break" statements in png.c, pngread.c, and pngrtran.c
3rdparty/libpng/CHANGES:    yet the defs *probably* work, however it seems much safer to do this
3rdparty/libpng/CHANGES:    gamma and alpha channel.  These tests have considerably better code
3rdparty/libpng/CHANGES:    deal with the 'channel selection' encoding added to libpng 1.7; abort.
3rdparty/libpng/pngrio.c: * io_ptr       - pointer to user supplied structure containing info about
3rdparty/libpng/pngmem.c:/* Allocate memory.  For reasonable files, size should never exceed
3rdparty/libpng/pngmem.c: * have the ability to do that.
3rdparty/libpng/pngmem.c:         return malloc((size_t)size); /* checked for truncation above */
3rdparty/libpng/pngconf.h:/* pngconf.h - machine configurable file for libpng
3rdparty/libpng/pngconf.h: * In this case it will be necessary to disable the relevant parts of libpng in
3rdparty/libpng/pngconf.h: * calling convention, at present this just means the above cases
3rdparty/libpng/pngconf.h:    /* An older compiler, or one not detected (erroneously) above,
3rdparty/libpng/pngconf.h: * compiler.  This considerably simplifies these macros but may cause problems
3rdparty/libpng/pngconf.h:    * table entries, so we discard it here.  See the .dfn files in the
3rdparty/libpng/pngconf.h: * so that where compiler support is available incorrect use of API
3rdparty/libpng/pngconf.h:   * so that where compiler support is available, incorrect use of API
3rdparty/libpng/pngconf.h:   * version 1.2.41.  Disabling these removes the warnings but may also produce
3rdparty/libpng/pngconf.h:#        if __has_extension(attribute_unavailable_with_message)
3rdparty/libpng/pngconf.h:#          define PNG_PRIVATE __attribute__((__unavailable__(\
3rdparty/libpng/pngconf.h: * 32-bit value however this is not normally advisable.
3rdparty/libpng/pngconf.h:/* Prior to 1.6.0 it was possible to disable the use of size_t, 1.6.0, however,
3rdparty/libpng/pngconf.h:    * 'far' support; see above.)
3rdparty/libpng/pngconf.h: * If required this support is available in version 1.2 of libpng and may be
3rdparty/libpng/pngconf.h: * available in versions through 1.5, although the correctness of the code has
3rdparty/libpng/png.c:/* Reset the CRC variable to 32 bits of 1's.  Care must be taken
3rdparty/libpng/png.c:          * target system has characteristics that will probably violate other
3rdparty/libpng/png.c:       * will abort this routine and return control to the app error handler.
3rdparty/libpng/png.c: * NOTE: it is almost inconceivable that this API is used because it bypasses
3rdparty/libpng/png.c: * PNG_NO_STDIO or otherwise disabled PNG_STDIO_SUPPORTED, you must use a
3rdparty/libpng/png.c: * function of your own because "FILE *" isn't necessarily available.
3rdparty/libpng/png.c:/* Convert the supplied time into an RFC 1123 string suitable for use in
3rdparty/libpng/png.c:      APPEND_STRING(" +0000"); /* This reliably terminates the buffer */
3rdparty/libpng/png.c:      /* The only failure above if png_ptr != NULL is from an invalid ptime */
3rdparty/libpng/png.c:   PNG_UNUSED(png_ptr)  /* Silence compiler warning about unused png_ptr */
3rdparty/libpng/png.c:   PNG_UNUSED(png_ptr)  /* Silence compiler warning about unused png_ptr */
3rdparty/libpng/png.c:   PNG_UNUSED(png_ptr)  /* Silence compiler warning about unused png_ptr */
3rdparty/libpng/png.c:          * pngpriv.h for PNG_UNEXPECTED_ZLIB_RETURN; update the switch above
3rdparty/libpng/png.c:       * yet still have that profile retrievable by the application.
3rdparty/libpng/png.c:    * about white-scale:
3rdparty/libpng/png.c:    * above routine as summarised at the top above (the chromaticity
3rdparty/libpng/png.c:    * This is 9 simultaneous equations in the 9 variables "color-C" and can be
3rdparty/libpng/png.c:    * Cramer's rule is notoriously numerically unstable because the determinant
3rdparty/libpng/png.c:    * difficult to be sure that the calculation is stable for real world values
3rdparty/libpng/png.c:    * and it is certain that it becomes unstable where the end points are close
3rdparty/libpng/png.c:    * understandable and totally obvious approach of calculating color-scale.
3rdparty/libpng/png.c:    * libpng arithmetic: a simple inversion of the above equations
3rdparty/libpng/png.c:    * floating point is probably a good choice here, but it's not an option for
3rdparty/libpng/png.c:    * signed representation.  Because the red-scale calculation above uses the
3rdparty/libpng/png.c:    * chromaticities in the above equations tend to be small, for example for
3rdparty/libpng/png.c:   /* By the argument, above overflow should be impossible here. The return
3rdparty/libpng/png.c:   /* And the blue scale, the checks above guarantee this can't overflow but it
3rdparty/libpng/png.c:   /* Allow an error of +/-0.01 (absolute value) on each chromaticity */
3rdparty/libpng/png.c:      /* The end points must be reasonably close to any we already have.  The
3rdparty/libpng/png.c:   /* We must check the end points to ensure they are reasonable - in the past
3rdparty/libpng/png.c:   /* This is recoverable, but make it unconditionally an app_error on write to
3rdparty/libpng/png.c:    * conceivable that an older app recorded incorrect gAMA and cHRM because of
3rdparty/libpng/png.c:    * is used later to check the tag table, so even if the profile seems over
3rdparty/libpng/png.c:      profile_length < 132+12*temp) /* truncated tag table */
3rdparty/libpng/png.c:   /* At this point the tag table can't be checked because it hasn't necessarily
3rdparty/libpng/png.c:    * expects to be able to change this in the future (despite the rationale in
3rdparty/libpng/png.c:    * cases.  Issue an error for device link or abstract profiles - these don't
3rdparty/libpng/png.c:    * other than the target device (and not even that for an abstract profile).
3rdparty/libpng/png.c:      case 0x61627374: /* 'abst' */
3rdparty/libpng/png.c:    * either in XYZ or Lab.
3rdparty/libpng/png.c:      case 0x4c616220: /* 'Lab ' */
3rdparty/libpng/png.c:png_icc_check_tag_table(png_const_structrp png_ptr, png_colorspacerp colorspace,
3rdparty/libpng/png.c:   png_const_bytep profile /* header plus whole tag table */)
3rdparty/libpng/png.c:   /* First scan all the tags in the table and add bits to the icc_info value
3rdparty/libpng/png.c:       * a clear abuse of the intent of the standard so the start is checked for
3rdparty/libpng/png.c:          * only a warning here because libpng does not care about the
3rdparty/libpng/png.c:/* Information about the known ICC sRGB profiles */
3rdparty/libpng/png.c:      PNG_MD5(0x34562abf, 0x994ccd06, 0x6d2c5721, 0xd0d68c5d), 0, 0,
3rdparty/libpng/png.c:          * way.  This probably indicates a data error or uninformed hacking.
3rdparty/libpng/png.c:       png_icc_check_tag_table(png_ptr, colorspace, name, profile_length,
3rdparty/libpng/png.c:          * integer is handled above - so we can only get here
3rdparty/libpng/png.c:      return state /* must be non-zero - see above */;
3rdparty/libpng/png.c:          * test on DBL_MAX above.
3rdparty/libpng/png.c:         /* Because of the code above fp may, at this point, be
3rdparty/libpng/png.c:                        *ascii++ = 46, --size; /* counted above */
3rdparty/libpng/png.c:             * the decimal point above (the exponent required is
3rdparty/libpng/png.c:                * leading zeros above for negative exponent, so this
3rdparty/libpng/png.c:             * this need not be considered above.
3rdparty/libpng/png.c:/* The following is for when the caller doesn't much care about the
3rdparty/libpng/png.c:/* The inverse of the above. */
3rdparty/libpng/png.c:#ifdef PNG_READ_GAMMA_SUPPORTED /* gamma table code */
3rdparty/libpng/png.c: * The code to calculate the tables used below can be found in the shell script
3rdparty/libpng/png.c: * The tables used here were calculated using simple 'bc' programs, but C double
3rdparty/libpng/png.c: * 8-bit log table
3rdparty/libpng/png.c: *   This is a table of -log(value/255)/log(2) for 'value' in the range 128 to
3rdparty/libpng/png.c:   /* The following are the values for 16-bit tables - these work fine for the
3rdparty/libpng/png.c:    * log (about 1.2 as opposed to 0.7 absolute error in the final value).  To
3rdparty/libpng/png.c:/* The above gives exact (to 16 binary places) log2 values for 8-bit images,
3rdparty/libpng/png.c: * scaling by 65536 to match the above table:
3rdparty/libpng/png.c:   /* As above, but now the input has 16 bits. */
3rdparty/libpng/png.c:/* The 'exp()' case must invert the above, taking a 20-bit fixed point
3rdparty/libpng/png.c:/* Adjustment table; provided to explain the numbers in the code below. */
3rdparty/libpng/png.c:       * is determined by the above table and the shift. Notice that the values
3rdparty/libpng/png.c:          * We can be reasonably sure that an unsigned to float conversion
3rdparty/libpng/png.c:          * can't happen because of the check above.
3rdparty/libpng/png.c:         /* The same (unsigned int)->(double) constraints apply here as above,
3rdparty/libpng/png.c:/* Internal function to build a single 16-bit table - the table consists of
3rdparty/libpng/png.c: * 'num' 256 entry subtables, where 'num' is determined by 'shift' - the amount
3rdparty/libpng/png.c: * The caller is responsible for ensuring that the table gets cleaned up on
3rdparty/libpng/png.c: * png_error (i.e. if one of the mallocs below fails) - i.e. the *table argument
3rdparty/libpng/png.c:png_build_16bit_table(png_structrp png_ptr, png_uint_16pp *ptable,
3rdparty/libpng/png.c:   png_uint_16pp table = *ptable =
3rdparty/libpng/png.c:      png_uint_16p sub_table = table[i] =
3rdparty/libpng/png.c:       * the 16-bit tables even if the others don't hit it.
3rdparty/libpng/png.c:               sub_table[j] = (png_uint_16)d;
3rdparty/libpng/png.c:               sub_table[j] = png_gamma_16bit_correct(ig, gamma_val);
3rdparty/libpng/png.c:         /* We must still build a table, but do it the fast way. */
3rdparty/libpng/png.c:            sub_table[j] = (png_uint_16)ig;
3rdparty/libpng/png.c:png_build_16to8_table(png_structrp png_ptr, png_uint_16pp *ptable,
3rdparty/libpng/png.c:   png_uint_16pp table = *ptable =
3rdparty/libpng/png.c:   /* 'num' is the number of tables and also the number of low bits of low
3rdparty/libpng/png.c:    * bits of the input 16-bit value used to select a table.  Each table is
3rdparty/libpng/png.c:      table[i] = (png_uint_16p)png_malloc(png_ptr,
3rdparty/libpng/png.c:   /* 'gamma_val' is set to the reciprocal of the value calculated above, so
3rdparty/libpng/png.c:    * 8-bit there are only 256 possible values.  The tables are set up to
3rdparty/libpng/png.c:    * and filling the table up to that boundary with the lower output
3rdparty/libpng/png.c:    * table entries <= 'max'
3rdparty/libpng/png.c:         table[last & (0xffU >> shift)][last >> (8U - shift)] = out;
3rdparty/libpng/png.c:      table[last & (0xff >> shift)][last >> (8U - shift)] = 65535U;
3rdparty/libpng/png.c:/* Build a single 8-bit table: same as the 16-bit case but much simpler (and
3rdparty/libpng/png.c: * (apparently contrary to the spec) so a 256-entry table is always generated.
3rdparty/libpng/png.c:png_build_8bit_table(png_structrp png_ptr, png_bytepp ptable,
3rdparty/libpng/png.c:   png_bytep table = *ptable = (png_bytep)png_malloc(png_ptr, 256);
3rdparty/libpng/png.c:         table[i] = png_gamma_8bit_correct(i, gamma_val);
3rdparty/libpng/png.c:         table[i] = (png_byte)(i & 0xff);
3rdparty/libpng/png.c: * tables.
3rdparty/libpng/png.c:png_destroy_gamma_table(png_structrp png_ptr)
3rdparty/libpng/png.c:   png_free(png_ptr, png_ptr->gamma_table);
3rdparty/libpng/png.c:   png_ptr->gamma_table = NULL;
3rdparty/libpng/png.c:   if (png_ptr->gamma_16_table != NULL)
3rdparty/libpng/png.c:         png_free(png_ptr, png_ptr->gamma_16_table[i]);
3rdparty/libpng/png.c:   png_free(png_ptr, png_ptr->gamma_16_table);
3rdparty/libpng/png.c:   png_ptr->gamma_16_table = NULL;
3rdparty/libpng/png.c:/* We build the 8- or 16-bit gamma tables here.  Note that for 16-bit
3rdparty/libpng/png.c: * tables, we don't make a full table if we are reducing to 8-bit in
3rdparty/libpng/png.c: * the future.  Note also how the gamma_16 tables are segmented so that
3rdparty/libpng/png.c: * we don't need to allocate > 64K chunks for a full 16-bit table.
3rdparty/libpng/png.c:png_build_gamma_table(png_structrp png_ptr, int bit_depth)
3rdparty/libpng/png.c:  png_debug(1, "in png_build_gamma_table");
3rdparty/libpng/png.c:  /* Remove any existing table; this copes with multiple calls to
3rdparty/libpng/png.c:   * png_read_update_info.  The warning is because building the gamma tables
3rdparty/libpng/png.c:   * multiple times is a performance hit - it's harmless but the ability to call
3rdparty/libpng/png.c:  if (png_ptr->gamma_table != NULL || png_ptr->gamma_16_table != NULL)
3rdparty/libpng/png.c:    png_warning(png_ptr, "gamma table being rebuilt");
3rdparty/libpng/png.c:    png_destroy_gamma_table(png_ptr);
3rdparty/libpng/png.c:     png_build_8bit_table(png_ptr, &png_ptr->gamma_table,
3rdparty/libpng/png.c:        png_build_8bit_table(png_ptr, &png_ptr->gamma_to_1,
3rdparty/libpng/png.c:        png_build_8bit_table(png_ptr, &png_ptr->gamma_from_1,
3rdparty/libpng/png.c:            png_ptr->colorspace.gamma/* Probably doing rgb_to_gray */);
3rdparty/libpng/png.c:      *   ov = table[(iv & 0xff) >> gamma_shift][iv >> 8]
3rdparty/libpng/png.c:      * Thus the gamma table consists of up to 256 256-entry tables.  The table
3rdparty/libpng/png.c:      *   table[low bits][high 8 bits]
3rdparty/libpng/png.c:      * So the table 'n' corresponds to all those 'iv' of:
3rdparty/libpng/png.c:        shift = 8U; /* Guarantees at least one table! */
3rdparty/libpng/png.c:      * 16-bit output because the 8-bit table assumes the result will be reduced
3rdparty/libpng/png.c:         png_build_16to8_table(png_ptr, &png_ptr->gamma_16_table, shift,
3rdparty/libpng/png.c:         png_build_16bit_table(png_ptr, &png_ptr->gamma_16_table, shift,
3rdparty/libpng/png.c:        png_build_16bit_table(png_ptr, &png_ptr->gamma_16_to_1, shift,
3rdparty/libpng/png.c:        /* Notice that the '16 from 1' table should be full precision, however
3rdparty/libpng/png.c:         * the lookup on this table still uses gamma_shift, so it can't be.
3rdparty/libpng/png.c:        png_build_16bit_table(png_ptr, &png_ptr->gamma_16_from_1, shift,
3rdparty/libpng/png.c:            png_ptr->colorspace.gamma/* Probably doing rgb_to_gray */);
3rdparty/libpng/png.c:/* sRGB conversion tables; these are machine generated with the code in
3rdparty/libpng/png.c: * The sRGB to linear table is exact (to the nearest 16-bit linear fraction).
3rdparty/libpng/png.c: * The inverse (linear to sRGB) table has accuracies as follows:
3rdparty/libpng/png.c:/* The convert-to-sRGB table is only currently required for read. */
3rdparty/libpng/png.c:const png_uint_16 png_sRGB_table[256] =
3rdparty/libpng/png.c:/* The base/delta tables are required for both read and write (but currently
3rdparty/libpng/png.c:    * cleanup, but this is probably fine because that would indicate bad memory
3rdparty/libpng/pngtrans.c:   /* The above may fail to do anything. */
3rdparty/libpng/pngtrans.c:          * enabled by default.
3rdparty/libpng/pngtrans.c:static PNG_CONST png_byte onebppswaptable[256] = {
3rdparty/libpng/pngtrans.c:static PNG_CONST png_byte twobppswaptable[256] = {
3rdparty/libpng/pngtrans.c:static PNG_CONST png_byte fourbppswaptable[256] = {
3rdparty/libpng/pngtrans.c:      png_const_bytep end, table;
3rdparty/libpng/pngtrans.c:         table = onebppswaptable;
3rdparty/libpng/pngtrans.c:         table = twobppswaptable;
3rdparty/libpng/pngtrans.c:         table = fourbppswaptable;
3rdparty/libpng/pngtrans.c:         *rp = table[*rp];
3rdparty/libpng/pngread.c:         /* In stable builds only warn if an application error can be completely
3rdparty/libpng/pngread.c: * available.  If you do not want this "chunky" display, you may pass
3rdparty/libpng/pngread.c:       * the above error case.
3rdparty/libpng/pngread.c:          "Cannot read interlaced image -- interlace handler disabled");
3rdparty/libpng/pngread.c:   png_destroy_gamma_table(png_ptr);
3rdparty/libpng/pngread.c:    * channels so the data will be available as RGBA quartets.
3rdparty/libpng/pngread.c:    * update the palette for you (i.e., you selected such a transform above).
3rdparty/libpng/pngread.c:   /* Local variables: */
3rdparty/libpng/pngread.c:   int             file_encoding;       /* E_ values above */
3rdparty/libpng/pngread.c:   int             colormap_processing; /* PNG_CMAP_ values above */
3rdparty/libpng/pngread.c: * unlike the init routine above.
3rdparty/libpng/pngread.c:    * potential vulnerability to security problems in the unused chunks.
3rdparty/libpng/pngread.c:         value = png_sRGB_table[value];
3rdparty/libpng/pngread.c:      red = png_sRGB_table[red];
3rdparty/libpng/pngread.c:      green = png_sRGB_table[green];
3rdparty/libpng/pngread.c:      blue = png_sRGB_table[blue];
3rdparty/libpng/pngread.c:/* Return a palette index to the above palette given three 8-bit sRGB values. */
3rdparty/libpng/pngread.c:       * that it happens even if the colorspace is invalid (though probably if
3rdparty/libpng/pngread.c:                * harm to pass them in; the values are not set above so this
3rdparty/libpng/pngread.c:          * worry about tRNS matching - tRNS is ignored if there is an alpha
3rdparty/libpng/pngread.c:             * This can be reduced to the same algorithm as above by making a
3rdparty/libpng/pngread.c:               /* This is the same as png_make_ga_colormap, above, except that
3rdparty/libpng/pngread.c:                * reasonable approximate to the logarithmic curve of human
3rdparty/libpng/pngread.c:                  back_r = png_sRGB_table[back_r];
3rdparty/libpng/pngread.c:                  back_g = png_sRGB_table[back_g];
3rdparty/libpng/pngread.c:                  back_b = png_sRGB_table[back_b];
3rdparty/libpng/pngread.c:                     png_uint_32 gray = png_sRGB_table[g*51] * alpha;
3rdparty/libpng/pngread.c:          * with the cases above.
3rdparty/libpng/pngread.c:             * code above.
3rdparty/libpng/pngread.c:                  if (data_encoding == P_FILE) /* from the fixup above */
3rdparty/libpng/pngread.c:                        gray = png_sRGB_table[gray]; /* now P_LINEAR */
3rdparty/libpng/pngread.c:                      * make_ga_colormap above.  Please update the
3rdparty/libpng/pngread.c:                         * So, as above with the explicit alpha checks, the
3rdparty/libpng/pngread.c:          * to this number above!
3rdparty/libpng/pngread.c:                        component += (255-alpha)*png_sRGB_table[outrow[c]];
3rdparty/libpng/pngread.c:                         * conversion table.
3rdparty/libpng/pngread.c:          * Unlike the code above ALPHA_OPTIMIZED has *not* been done.
3rdparty/libpng/pngread.c:                              component = png_sRGB_table[component] * alpha;
3rdparty/libpng/pngread.c:                              component += png_sRGB_table[outrow[0]] *
3rdparty/libpng/pngread.c:                  png_uint_16 background = png_sRGB_table[background8];
3rdparty/libpng/pngread.c:                              component = png_sRGB_table[component] * alpha;
3rdparty/libpng/pngread.c:       * described above.
3rdparty/libpng/pngread.c:          * formats; for the 16-bit it is already done, above, by the
3rdparty/libpng/pngread.c:             * be set above and then libpng will keep the alpha channel for this
3rdparty/libpng/pngread.c:               /* Disable this if doing a local background,
3rdparty/libpng/pngpread.c:   * or abandoned.  It was only to support some internal back-door access
3rdparty/libpng/pngpread.c:       * are of different types and we don't know which variable has the fewest
3rdparty/libpng/pngpread.c:       * are of different types and we don't know which variable has the fewest
3rdparty/libpng/pngrutil.c:/* The following is a variation on the above for use with the fixed
3rdparty/libpng/pngrutil.c: * but the APIs will still be available externally.
3rdparty/libpng/pngrutil.c:/* Grab an unsigned 32-bit integer from a buffer in big-endian format. */
3rdparty/libpng/pngrutil.c:/* Grab a signed 32-bit integer from a buffer in big-endian format.  The
3rdparty/libpng/pngrutil.c:/* Grab an unsigned 16-bit integer from a buffer in big-endian format. */
3rdparty/libpng/pngrutil.c:    * works and allows the compiler not to worry about possible narrowing
3rdparty/libpng/pngrutil.c:    * reasonable size to use for buffering reads from the application.
3rdparty/libpng/pngrutil.c:    * follow that because, for systems with with limited capabilities, we
3rdparty/libpng/pngrutil.c: * or written, not the amount available (as in a z_stream).  The data pointers
3rdparty/libpng/pngrutil.c: * available output is (output+output_size).
3rdparty/libpng/pngrutil.c:      /* Read directly into the output if it is available (this is set to
3rdparty/libpng/pngrutil.c:          * amounts of data to be passed through zlib at the unavoidable cost of
3rdparty/libpng/pngrutil.c:             * make available the full buffer, up to 'remaining_space'
3rdparty/libpng/pngrutil.c:               /* Because of the limit checks above we know that the new,
3rdparty/libpng/pngrutil.c:          * the available output is produced; this allows reading of truncated
3rdparty/libpng/pngrutil.c:   /* Set internal variables */
3rdparty/libpng/pngrutil.c:       * we have two options: an error abort, or a warning and we
3rdparty/libpng/pngrutil.c:   /* Consistent with all the above colorspace handling an obviously *invalid*
3rdparty/libpng/pngrutil.c:                        /* Now read the tag table; a variable size buffer is
3rdparty/libpng/pngrutil.c:                              if (png_icc_check_tag_table(png_ptr,
3rdparty/libpng/pngrutil.c:                              /* else png_icc_check_tag_table output an error */
3rdparty/libpng/pngrutil.c:    * that the PNG_MAX_MALLOC_64K test is enabled in this case, but this is a
3rdparty/libpng/pngrutil.c:       * systems the available allocation may overflow.
3rdparty/libpng/pngrutil.c:      /* The following is safe because of the PNG_SIZE_MAX init above */
3rdparty/libpng/pngrutil.c:/* Handle an unknown, or known but disabled, chunk */
3rdparty/libpng/pngrutil.c:             * chunk, but this would be an API change that would probably
3rdparty/libpng/pngrutil.c:         png_app_error(png_ptr, "no unknown chunk support available");
3rdparty/libpng/pngrutil.c: * into it, since in the future we will need to be able to call user
3rdparty/libpng/pngrutil.c: * (dp) is filled from the start by replicating the available pixels.  If
3rdparty/libpng/pngrutil.c:          * 0..6.  This has already been handled in the test above.
3rdparty/libpng/pngrutil.c:          * solution to avoid destabilizing the code during the release process.
3rdparty/libpng/pngrutil.c:          * cases the result needs replicating, for the 4-bpp case the above
3rdparty/libpng/pngrutil.c:             * passes are skipped above - the entire expanded row is copied.
3rdparty/libpng/pngrutil.c:   /* If here then the switch above wasn't used so just memcpy the whole row
3rdparty/libpng/pngrutil.c:      pa = abs(p);
3rdparty/libpng/pngrutil.c:      pb = abs(pc);
3rdparty/libpng/pngrutil.c:      pc = abs(p + pc);
3rdparty/libpng/pngrutil.c:      pa = abs(p);
3rdparty/libpng/pngrutil.c:      pb = abs(pc);
3rdparty/libpng/pngrutil.c:      pc = abs(p + pc);
3rdparty/libpng/pngrutil.c:    * call to install hardware optimizations for the above functions; simply
3rdparty/libpng/pngrutil.c:    * --enable-arm-neon is specified on the command line.
3rdparty/libpng/pngrutil.c:    * implementations.  See png_init_filter_functions above.
3rdparty/libpng/pngrutil.c:       * terminally damage the stream, above, by reading the chunk header of the
3rdparty/libpng/pngget.c:       * are enabled.
3rdparty/libpng/pngget.c:/* These functions were added to libpng 1.2.6 and were enabled
3rdparty/libpng/pnginfo.h: * consult that document for information about the meaning of each field.
3rdparty/libpng/pnginfo.h: * however, there are now functions that abstract the contents of
3rdparty/libpng/pnginfo.h: * functions.  A function to clear these members is available: see
3rdparty/libpng/pnginfo.h: * able to point info structure members to any of the storage they are
3rdparty/libpng/pnginfo.h:    * chunks should be enabled, when GAMMA is switched on all the gamma-defining
3rdparty/libpng/pnginfo.h:    * chunks should be enabled.  If this is not done it becomes possible to read
3rdparty/libpng/pnginfo.h:    * inconsistent PNG files and assign a probably incorrect interpretation to
3rdparty/libpng/pnginfo.h:   /* The tEXt, and zTXt chunks contain human-readable textual data in
3rdparty/libtiff/tif_strip.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_strip.c: * Compute the # bytes in a variable height, row-aligned strip.
3rdparty/libtiff/tif_strip.c: * Local Variables:
3rdparty/libtiff/tif_warning.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_warning.c: * Local Variables:
3rdparty/libtiff/tif_lzma.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_lzma.c:            return "integrity check type is now available";
3rdparty/libtiff/tif_lzma.c:     * Disable memory limit when decoding. UINT64_MAX is a flag to disable
3rdparty/libtiff/tif_lzma.c:     * The sample size in bytes seems to be reasonable distance for delta
3rdparty/libtiff/tif_write.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_write.c:     * strips array will be fully allocated above).
3rdparty/libtiff/tif_write.c:    /* swab if needed - note that source buffer will be altered */
3rdparty/libtiff/tif_write.c:     * allocated above).
3rdparty/libtiff/tif_write.c:        /* swab if needed - note that source buffer will be altered */
3rdparty/libtiff/tif_write.c:     * allocated above).
3rdparty/libtiff/tif_write.c:        /* swab if needed - note that source buffer will be altered */
3rdparty/libtiff/tif_write.c: * Verify file is writable and that the directory
3rdparty/libtiff/tif_write.c: * Local Variables:
3rdparty/libtiff/tif_jbig.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_jbig.c: * Local Variables:
3rdparty/libtiff/tif_extension.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_extension.c: * application extension capabilities.
3rdparty/libtiff/tif_extension.c: * Local Variables:
3rdparty/libtiff/tiffio.hxx: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tiffio.hxx: * Local Variables:
3rdparty/libtiff/tif_packbits.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_packbits.c:             * Be careful about writing the last
3rdparty/libtiff/tif_packbits.c: * Local Variables:
3rdparty/libtiff/tif_luv.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_luv.c: * This value is usually set such that a reasonable exposure comes from
3rdparty/libtiff/tif_luv.c: * clamping decoded luminances above 1 to 1 in the displayed image.
3rdparty/libtiff/tif_luv.c: * white point, such as D65, and an absolute color conversion to XYZ then
3rdparty/libtiff/tif_luv.c: * unwanted color cast to the image.  It is often desirable, therefore, to
3rdparty/libtiff/tif_luv.c: * tag value.  A decoder that demands absolute color calibration may use
3rdparty/libtiff/tif_luv.c: * a smaller range of magnitudes is covered (about 5 orders of magnitude
3rdparty/libtiff/tif_luv.c:    /* could use integer sqrt approx., but this is probably faster */
3rdparty/libtiff/tif_luv.c:    static int	oog_table[NANGLES];
3rdparty/libtiff/tif_luv.c:    if (!initialized) {		/* set up perimeter table */
3rdparty/libtiff/tif_luv.c:                epsa = fabs(ang - (i+.5));
3rdparty/libtiff/tif_luv.c:                    oog_table[i] = uv_row[vi].ncum + ui;
3rdparty/libtiff/tif_luv.c:                    oog_table[i] =
3rdparty/libtiff/tif_luv.c:                        oog_table[(i+i1)%NANGLES];
3rdparty/libtiff/tif_luv.c:                    oog_table[i] =
3rdparty/libtiff/tif_luv.c:                        oog_table[(i+NANGLES-i2)%NANGLES];
3rdparty/libtiff/tif_luv.c:    return (oog_table[i]);
3rdparty/libtiff/tif_luv.c: * Local Variables:
3rdparty/libtiff/tif_codec.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_codec.c: * Local Variables:
3rdparty/libtiff/tif_compress.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_compress.c: * Local Variables:
3rdparty/libtiff/ChangeLog:	* tools/tif2pdf.c, tools/tifdump.c: avoid unitialized variable
3rdparty/libtiff/ChangeLog:	* libtiff/tif_print.c: Be careful about printing corrupt inknames.
3rdparty/libtiff/ChangeLog:	JPEGDecodeRaw() - mostly likely to occur when there is confusion about
3rdparty/libtiff/ChangeLog:	* tools/tiffinfo.c: initialize h=0 to avoid undefined variable for degenerate files.
3rdparty/libtiff/ChangeLog:	* libtiff/tif_print.c: be careful about whether min/max values are singular
3rdparty/libtiff/ChangeLog:	* libtiff/tif_print.c: Avoid confusion about count size when printing custom fields.
3rdparty/libtiff/ChangeLog:	ELF systems with the GNU linker.  Support is enabled via
3rdparty/libtiff/ChangeLog:	--enable-ld-version-script.  Disabled by default for now until
3rdparty/libtiff/ChangeLog:	it is much more portable.  Tmpfile is included in ISO/IEC
3rdparty/libtiff/ChangeLog:	Zero Day Initiative for reporting this vulnerability (ZDI-CAN-1004,
3rdparty/libtiff/ChangeLog:	* configure.ac, configure: Added support for --enable-chunky-strip-read
3rdparty/libtiff/ChangeLog:	configure option to enable the experimental feature from a couple 
3rdparty/libtiff/ChangeLog:	offset and size tags for optimized scanning of directories.  Enabled
3rdparty/libtiff/ChangeLog:	with the --enable-defer-strile-load configure option (DEFER_STRILE_LOAD
3rdparty/libtiff/ChangeLog:	* libtiff/tif_print.c: remove unused variable.
3rdparty/libtiff/ChangeLog:	* tools/tiff2pdf.c: remove invalid duplication for Lab
3rdparty/libtiff/ChangeLog:        * tools/tiffsplit.c: abort when reading a TIFF without a byte-count
3rdparty/libtiff/ChangeLog:	and _TIFFFieldWithName() if the tag is not found in the tag table.
3rdparty/libtiff/ChangeLog:	coerced to an integer by retyping the variables that define the
3rdparty/libtiff/ChangeLog:	TIFFTAG_PIXAR_FOVCOT so it is readable again (regression from 3.9.2).
3rdparty/libtiff/ChangeLog:	JPEGPreEncode(), not just when we want to output local tables.  
3rdparty/libtiff/ChangeLog:	might not match the tables in the tables tag.   This bug only occurs
3rdparty/libtiff/ChangeLog:	if the jpeg table was written.  This is a fix for the last fix on 04-21.
3rdparty/libtiff/ChangeLog:	* libtiff/tif_jpeg.c: avoid preparing jpeg tables everytime 
3rdparty/libtiff/ChangeLog:	JPEGSetupEncode() is called if the tables already seem to be 
3rdparty/libtiff/ChangeLog:	established.  This prevents spurious updates and rewriting of 
3rdparty/libtiff/ChangeLog:	directories with jpegtables when doing updates to existing images.
3rdparty/libtiff/ChangeLog:	They were unreadable with TIFF_SETGET_UNDEFINED, a regression from 3.9.2.
3rdparty/libtiff/ChangeLog:	Enable by defining CHUNK_STRIP_READ_SUPPORT as a macro.
3rdparty/libtiff/ChangeLog:	* libtiff/tif_jpeg.c: Do not generate a JPEGTables tag when creating
3rdparty/libtiff/ChangeLog:	data rather than skipping them.  This fixes the ability to view in
3rdparty/libtiff/ChangeLog:	man/TIFFcolor.3tiff: Make TIFFDisplay argument in TIFFCIELabToRGBInit 
3rdparty/libtiff/ChangeLog:	PNM formats so that we will be able to test more of the tools.
3rdparty/libtiff/ChangeLog:	Export certain variables (MAKE, MAKEFLAGS, MEMCHECK) to tests and
3rdparty/libtiff/ChangeLog:	actually activated since it needed to be enabled in this
3rdparty/libtiff/ChangeLog:	libtool 2.2.6.  Enabled support for silent build rules
3rdparty/libtiff/ChangeLog:	(--enable-silent-rules or 'make V=0') and colorized tests.
3rdparty/libtiff/ChangeLog:	about unused parameters, and uninitialized variables.
3rdparty/libtiff/ChangeLog:	Initialize stack variables to avoid compiler warning.
3rdparty/libtiff/ChangeLog:	IPP enabled version of libjpeg from Intel. 
3rdparty/libtiff/ChangeLog:	* libtiff/tif_lzw.c: Properly zero out the codetable. As per bug
3rdparty/libtiff/ChangeLog:	* libtiff/tif_lzw.c: Properly zero out the string table. Fixes
3rdparty/libtiff/ChangeLog:	* tools/tiffcrop.c: Fix some portability problems.
3rdparty/libtiff/ChangeLog:	indicating lack of handling and was forgotten about)
3rdparty/libtiff/ChangeLog:	the strip offset/size values are dirty but nothing else about the 
3rdparty/libtiff/ChangeLog:	* tif_jpeg.c: Improve ability to switch between encoding and decoding
3rdparty/libtiff/ChangeLog:	establishing if an existing tile can be rewritten to the same location 
3rdparty/libtiff/ChangeLog:	tools that warn about truncation, though it remains incorrect and 
3rdparty/libtiff/ChangeLog:	* tif_open.c: Moved early exit in case of 'h' flag (to disable reading 
3rdparty/libtiff/ChangeLog:	* tif_dirinfo.c: Fixed (MSVC) compiler reports about 
3rdparty/libtiff/ChangeLog:	zero when writing directory contents to preserve the ability to 
3rdparty/libtiff/ChangeLog:	tif_win3.c}: Obsoleted portability stuff removed.
3rdparty/libtiff/ChangeLog:	available on the target system.	
3rdparty/libtiff/ChangeLog:	in a portable way and performing necessary substitutions in
3rdparty/libtiff/ChangeLog:	* start of BigTIFF upgrade - CVS HEAD unstable until further notice
3rdparty/libtiff/ChangeLog:	changed from tsize_t to uint32 to be able to work with data arrays
3rdparty/libtiff/ChangeLog:	* libtiff/tif_win32.c: Disabled some functions already reimplemented in tif_wince.c.
3rdparty/libtiff/ChangeLog:	* libtiff/tif_dir.c: More fixes for vulnerabilities, reported
3rdparty/libtiff/ChangeLog:	* libtiff/contrib/dbs/xtiff/xtiff.c: Make xtiff utility compilable.
3rdparty/libtiff/ChangeLog:	vulnerabilities, reported in Gentoo bug ():
3rdparty/libtiff/ChangeLog:	vulnerabilities, as per	Gentoo bug ():
3rdparty/libtiff/ChangeLog:	(JBIGDecode): jbg_newlen is not available in older JBIG-KIT and
3rdparty/libtiff/ChangeLog:	available.
3rdparty/libtiff/ChangeLog:	* configure, configure.ac: OJPEG support enabled by default.
3rdparty/libtiff/ChangeLog:	of inappropriate use of jpeg_abort instead of jpeg_destroy
3rdparty/libtiff/ChangeLog:	option enabled.
3rdparty/libtiff/ChangeLog:	* tools/bmp2tiff.c: Added ability to create multipage TIFFs from the
3rdparty/libtiff/ChangeLog:	* libtiff/tif_aux.c: Fixed type of temporary variable in
3rdparty/libtiff/ChangeLog:	and re-sorted tag names in alphabetical order.
3rdparty/libtiff/ChangeLog:	* libtiff/*, contrib/*: Added 'dual-mode' error handling, enabling 
3rdparty/libtiff/ChangeLog:	ResolutionUnit tags modifiable during write process. As per bug
3rdparty/libtiff/ChangeLog:	tif_dirread.c}: Make the default strip size configurable via the
3rdparty/libtiff/ChangeLog:	* libtiff/tif_dirread.c: removed unused variable.
3rdparty/libtiff/ChangeLog:	CheckMalloc() function to _TIFFCheckMalloc() and make it available
3rdparty/libtiff/ChangeLog:	with --enable-rpath.
3rdparty/libtiff/ChangeLog:	* libtiff/tif_jpeg.c: Initialize JPEGTables array with zero after
3rdparty/libtiff/ChangeLog:	JPEG encoded TIFF files.  Pre-allocate lots of space for jpegtables
3rdparty/libtiff/ChangeLog:	* tools/tiffsplit.c: Check for JPEGTables tag presence before copying.
3rdparty/libtiff/ChangeLog:	* libtiff/tif_predict.c: Added ability to encode floating point
3rdparty/libtiff/ChangeLog:	* libtiff/{tif_predict.h, tif_predict.c}: Added ability to decode
3rdparty/libtiff/ChangeLog:	* libtiff/{tiffio.h, tiffiop.h, tif_dir.c, tif_read.c, tif_swab.c}:
3rdparty/libtiff/ChangeLog:	Added _TIFFSwab24BitData() and TIFFSwabArrayOfLong() functions used to
3rdparty/libtiff/ChangeLog:	* man/TIFFGetField.3tiff: Add a note about autoregistered tags.
3rdparty/libtiff/ChangeLog:	* tools/tiffcmp.c: Added ability to compare the 32-bit integer and
3rdparty/libtiff/ChangeLog:	* configure.ac: Make the documentation directory location configurable
3rdparty/libtiff/ChangeLog:	function in TIFFCIELabToRGBInit(). As per bug
3rdparty/libtiff/ChangeLog:	* libtiff/tif_jpeg.c: Added ability to read/write the fax specific
3rdparty/libtiff/ChangeLog:	library called libtiffxx to avoid unneeded dependencies. Probably
3rdparty/libtiff/ChangeLog:	* configure.ac: Replace --disable-c++ with the --disable-cxx option as
3rdparty/libtiff/ChangeLog:	* libtiff/tif_dirread.c: Do not forget about TIFF_VARIABLE2 when
3rdparty/libtiff/ChangeLog:	* tools/fax2ps.c: Be able to extract the first page (#0). As per bug
3rdparty/libtiff/ChangeLog:	* libtiff/tif_unix.c: Make UNIX module compilable (and usable)
3rdparty/libtiff/ChangeLog:	* nmake.opt: Add missed DLLNAME variable.
3rdparty/libtiff/ChangeLog:	* man/libtiff.3tiff: Improvements in the "LIST OF ROUTINES" table as
3rdparty/libtiff/ChangeLog:	* tools/tiff2ps.c: Fixed wrong variable data type when read Position
3rdparty/libtiff/ChangeLog:	* libtiff/tif_dirwrite.c: Fixed problem with passing count variable of
3rdparty/libtiff/ChangeLog:	* tools/tiff2ps.c: Fixed wrong variable data type when read Resolution
3rdparty/libtiff/ChangeLog:	* configure, configure.ac: Added --enable-rpath option to embed linker
3rdparty/libtiff/ChangeLog:	tif_predict.c, tif_read.c, tif_swab.c, tif_thunder.c, tif_write.c,
3rdparty/libtiff/ChangeLog:	to avoid compile warnings about getopt() and a few other things.
3rdparty/libtiff/ChangeLog:	variable as per bug
3rdparty/libtiff/ChangeLog:	abcence of LZW support.
3rdparty/libtiff/ChangeLog:	* tools/tiffsplit.c: Copy JPEGTables tag contents for JPEG compressed 
3rdparty/libtiff/ChangeLog:	* libtiff/tif_dirwrite.c: Fixed handling of writable ASCII tags that
3rdparty/libtiff/ChangeLog:	are field_passcount=TRUE properly.  Arguably anonymous custom tags
3rdparty/libtiff/ChangeLog:	Interface for Lab->RGB color conversion is finally cleaned up.
3rdparty/libtiff/ChangeLog:	file and properly use it for CIE Lab->RGB transform.
3rdparty/libtiff/ChangeLog:	TIFFYCbCrtoRGB() available in TIFF API.
3rdparty/libtiff/ChangeLog:	CIE Lab conversion code. Start moving YCbCr stuff to the tif_color.c
3rdparty/libtiff/ChangeLog:	portable tiffgt tool (depend on OpenGL and GLUT). Initial revision,
3rdparty/libtiff/ChangeLog:	* html/build.html: Added note about GNU make requirement.
3rdparty/libtiff/ChangeLog:	* Makefile.in: Add an absolute path to the test_pics.sh call.
3rdparty/libtiff/ChangeLog:	state block allocation to be able open LZW compressed files in update
3rdparty/libtiff/ChangeLog:	swapping (swab) to the application passed data buffer if the same
3rdparty/libtiff/ChangeLog:	tif_packbits.c, tif_predict.c, tif_print.c, tif_swab.c, tif_thunder.c:
3rdparty/libtiff/ChangeLog:	* libtiff/tif_pixarlog.c: Unused variables removed.
3rdparty/libtiff/ChangeLog:	* tools/ppm2tiff.c: PPM header parser improved: now able to skip
3rdparty/libtiff/ChangeLog:	info about alpha channel as per bug
3rdparty/libtiff/ChangeLog:	* tools/tiff2ps.c, man/tiff2ps.1: Add ability to generate PS Level 3.
3rdparty/libtiff/ChangeLog:	since we are unable to properly include the amount to skip. 
3rdparty/libtiff/ChangeLog:	specified by the `/Height' variable. See
3rdparty/libtiff/ChangeLog:	for variable length FIELD_CUSTOM values.  Was int * but should be
3rdparty/libtiff/ChangeLog:	* config.site/configure: added support for OJPEG=yes option to enable
3rdparty/libtiff/ChangeLog:	tiles files to avoid error about it not matching the 
3rdparty/libtiff/ChangeLog:	3.5.5, presumably during the OJPEG/JPEG work recently.
3rdparty/libtiff/ChangeLog:	error about LZW not being available.
3rdparty/libtiff/ChangeLog:	to packbits from LZW since LZW isn't generally available.
3rdparty/libtiff/ChangeLog:	* config.guess: documented more variables as per bug 40.
3rdparty/libtiff/ChangeLog:	 - Fixed mmap() test to avoid MMAP_FIXED ... it isn't available on HP
3rdparty/libtiff/ChangeLog:	same time cutting of the faxes printable area at the opposite border.
3rdparty/libtiff/ChangeLog:	3) I added a #define for LOG_LUV_PUBLIC, which is enabled by default in
3rdparty/libtiff/ChangeLog:	file, or ALPHA version logic.  Added stuff about DIST_POINT in 
3rdparty/libtiff/ChangeLog:	Patch c/o Stanislav Brabec <utx@penguin.cz>
3rdparty/libtiff/ChangeLog:Tue Apr 18 16:18:08 2000  Frank Warmerdam  <warmerda@esabot.atlsci.com>
3rdparty/libtiff/ChangeLog:	as per submission by Nalin Dahyabhai <nalin@redhat.com>.
3rdparty/libtiff/ChangeLog:        Stanislav Brabec <utx@k332.feld.cvut.cz>
3rdparty/libtiff/ChangeLog:	Thanks to  Stanislav Brabec <utx@k332.feld.cvut.cz>
3rdparty/libtiff/ChangeLog:	fix submitted to Stanislav Brabec <utx@k332.feld.cvut.cz>
3rdparty/libtiff/ChangeLog:	* Enabled "REWRITE_HACK" in tif_write.c by default.
3rdparty/libtiff/ChangeLog:	  warning about LZW compression removed being removed, and why. 
3rdparty/libtiff/ChangeLog:	fixed sized tiles and strips.  Code mods disabled by default, only
3rdparty/libtiff/ChangeLog:	enabled if REWRITE_HACK is defined for now.
3rdparty/libtiff/tif_aux.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_aux.c: * Local Variables:
3rdparty/libtiff/COPYRIGHT:that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_jpeg_12.c: * Local Variables:
3rdparty/libtiff/tiffiop.h: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tiffiop.h:    #define TIFF_STRIPCHOP   0x08000 /* enable strip chopping support */
3rdparty/libtiff/tiffiop.h:    TIFFField**          tif_fields;       /* sorted table of registered tags */
3rdparty/libtiff/tiffiop.h:    size_t               tif_nfields;      /* # entries in registered tag table */
3rdparty/libtiff/tiffiop.h:extern void _TIFFSwab16BitData(TIFF* tif, uint8* buf, tmsize_t cc);
3rdparty/libtiff/tiffiop.h:extern void _TIFFSwab24BitData(TIFF* tif, uint8* buf, tmsize_t cc);
3rdparty/libtiff/tiffiop.h:extern void _TIFFSwab32BitData(TIFF* tif, uint8* buf, tmsize_t cc);
3rdparty/libtiff/tiffiop.h:extern void _TIFFSwab64BitData(TIFF* tif, uint8* buf, tmsize_t cc);
3rdparty/libtiff/tiffiop.h: * Local Variables:
3rdparty/libtiff/CMakeLists.txt:    tif_swab.c
3rdparty/libtiff/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS -Wno-unused-but-set-variable -Wmissing-prototypes -Wmissing-declarations -Wundef -Wunused -Wsign-compare
3rdparty/libtiff/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS -Wunused-parameter) # clang
3rdparty/libtiff/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wmissing-declarations -Wunused-parameter)
3rdparty/libtiff/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4018 /wd4100 /wd4127 /wd4311 /wd4701 /wd4706) # vs2005
3rdparty/libtiff/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4244) # vs2008
3rdparty/libtiff/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4267 /wd4305 /wd4306) # vs2008 Win64
3rdparty/libtiff/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4703) # vs2012
3rdparty/libtiff/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4456 /wd4457 /wd4312) # vs2015
3rdparty/libtiff/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS /wd4267 /wd4244 /wd4018)
3rdparty/libtiff/tif_ojpeg.c:   <http://www.awaresystems.be/imaging/tiff.html>. It is also absorbed
3rdparty/libtiff/tif_ojpeg.c:   Joris Van Damme and/or AWare Systems may be available for custom
3rdparty/libtiff/tif_ojpeg.c:   other markers do have content, and the valuable bits and pieces of information
3rdparty/libtiff/tif_ojpeg.c:   data. In this case, the tables are read from JpegXxxTables tags, and the other
3rdparty/libtiff/tif_ojpeg.c:   implemented in the OJPEGReadHeaderInfoSecTablesXxx functions.
3rdparty/libtiff/tif_ojpeg.c:   tag is notoriously unreliable. To correct these tag values with the ones inside
3rdparty/libtiff/tif_ojpeg.c:   there is currently no define or other configuration mechanism to disable this behaviour,
3rdparty/libtiff/tif_ojpeg.c:   striles, as is also probably the most likely interpretation of the original TIFF 6.0
3rdparty/libtiff/tif_ojpeg.c:   predictable at the time of valid JPEG header assembly, the restart thing may turn
3rdparty/libtiff/tif_ojpeg.c:   succeed in reading back what they write, which may be the reason why we've been able
3rdparty/libtiff/tif_ojpeg.c:   care. We want LibTiff to be able to access the planes individually, without huge
3rdparty/libtiff/tif_ojpeg.c:   does. It works without checking software tag, or otherwise going about things in an
3rdparty/libtiff/tif_ojpeg.c: * 	conviniently available, but still it may be worthwhile to use _setjmp or sigsetjmp
3rdparty/libtiff/tif_ojpeg.c: * 	absolutely no effect. That is why most people insist the EGYPTIANWALK is a bit silly.
3rdparty/libtiff/tif_ojpeg.c:    {TIFFTAG_JPEGQTABLES,TIFF_VARIABLE2,TIFF_VARIABLE2,TIFF_LONG8,0,TIFF_SETGET_C32_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGQTABLES,FALSE,TRUE,"JpegQTables",NULL},
3rdparty/libtiff/tif_ojpeg.c:    {TIFFTAG_JPEGDCTABLES,TIFF_VARIABLE2,TIFF_VARIABLE2,TIFF_LONG8,0,TIFF_SETGET_C32_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGDCTABLES,FALSE,TRUE,"JpegDcTables",NULL},
3rdparty/libtiff/tif_ojpeg.c:    {TIFFTAG_JPEGACTABLES,TIFF_VARIABLE2,TIFF_VARIABLE2,TIFF_LONG8,0,TIFF_SETGET_C32_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGACTABLES,FALSE,TRUE,"JpegAcTables",NULL},
3rdparty/libtiff/tif_ojpeg.c:    ososQTable0,ososQTable1,ososQTable2,ososQTable3,
3rdparty/libtiff/tif_ojpeg.c:    ososDcTable0,ososDcTable1,ososDcTable2,ososDcTable3,
3rdparty/libtiff/tif_ojpeg.c:    ososAcTable0,ososAcTable1,ososAcTable2,ososAcTable3,
3rdparty/libtiff/tif_ojpeg.c:    uint8 qtable_offset_count;
3rdparty/libtiff/tif_ojpeg.c:    uint8 dctable_offset_count;
3rdparty/libtiff/tif_ojpeg.c:    uint8 actable_offset_count;
3rdparty/libtiff/tif_ojpeg.c:    uint64 qtable_offset[3];
3rdparty/libtiff/tif_ojpeg.c:    uint64 dctable_offset[3];
3rdparty/libtiff/tif_ojpeg.c:    uint64 actable_offset[3];
3rdparty/libtiff/tif_ojpeg.c:    uint8* qtable[4];
3rdparty/libtiff/tif_ojpeg.c:    uint8* dctable[4];
3rdparty/libtiff/tif_ojpeg.c:    uint8* actable[4];
3rdparty/libtiff/tif_ojpeg.c:static int OJPEGReadHeaderInfoSecTablesQTable(TIFF* tif);
3rdparty/libtiff/tif_ojpeg.c:static int OJPEGReadHeaderInfoSecTablesDcTable(TIFF* tif);
3rdparty/libtiff/tif_ojpeg.c:static int OJPEGReadHeaderInfoSecTablesAcTable(TIFF* tif);
3rdparty/libtiff/tif_ojpeg.c:static void OJPEGWriteStreamQTable(TIFF* tif, uint8 table_index, void** mem, uint32* len);
3rdparty/libtiff/tif_ojpeg.c:static void OJPEGWriteStreamDcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len);
3rdparty/libtiff/tif_ojpeg.c:static void OJPEGWriteStreamAcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len);
3rdparty/libtiff/tif_ojpeg.c:       reliable. In any case, this decoder reads the compressed data itself,
3rdparty/libtiff/tif_ojpeg.c:       from the most reliable locations, and we need to notify encapsulating
3rdparty/libtiff/tif_ojpeg.c:            *va_arg(ap,uint32*)=(uint32)sp->qtable_offset_count;
3rdparty/libtiff/tif_ojpeg.c:            *va_arg(ap,void**)=(void*)sp->qtable_offset;
3rdparty/libtiff/tif_ojpeg.c:            *va_arg(ap,uint32*)=(uint32)sp->dctable_offset_count;
3rdparty/libtiff/tif_ojpeg.c:            *va_arg(ap,void**)=(void*)sp->dctable_offset;
3rdparty/libtiff/tif_ojpeg.c:            *va_arg(ap,uint32*)=(uint32)sp->actable_offset_count;
3rdparty/libtiff/tif_ojpeg.c:            *va_arg(ap,void**)=(void*)sp->actable_offset;
3rdparty/libtiff/tif_ojpeg.c:                    TIFFErrorExt(tif->tif_clientdata,module,"JpegQTables tag has incorrect count");
3rdparty/libtiff/tif_ojpeg.c:                sp->qtable_offset_count=(uint8)ma;
3rdparty/libtiff/tif_ojpeg.c:                    sp->qtable_offset[n]=mb[n];
3rdparty/libtiff/tif_ojpeg.c:                    TIFFErrorExt(tif->tif_clientdata,module,"JpegDcTables tag has incorrect count");
3rdparty/libtiff/tif_ojpeg.c:                sp->dctable_offset_count=(uint8)ma;
3rdparty/libtiff/tif_ojpeg.c:                    sp->dctable_offset[n]=mb[n];
3rdparty/libtiff/tif_ojpeg.c:                    TIFFErrorExt(tif->tif_clientdata,module,"JpegAcTables tag has incorrect count");
3rdparty/libtiff/tif_ojpeg.c:                sp->actable_offset_count=(uint8)ma;
3rdparty/libtiff/tif_ojpeg.c:                    sp->actable_offset[n]=mb[n];
3rdparty/libtiff/tif_ojpeg.c:        fprintf(fd,"  JpegQTables:");
3rdparty/libtiff/tif_ojpeg.c:        for (m=0; m<sp->qtable_offset_count; m++)
3rdparty/libtiff/tif_ojpeg.c:            fprintf(fd," " TIFF_UINT64_FORMAT,(TIFF_UINT64_T)sp->qtable_offset[m]);
3rdparty/libtiff/tif_ojpeg.c:        fprintf(fd,"  JpegDcTables:");
3rdparty/libtiff/tif_ojpeg.c:        for (m=0; m<sp->dctable_offset_count; m++)
3rdparty/libtiff/tif_ojpeg.c:            fprintf(fd," " TIFF_UINT64_FORMAT,(TIFF_UINT64_T)sp->dctable_offset[m]);
3rdparty/libtiff/tif_ojpeg.c:        fprintf(fd,"  JpegAcTables:");
3rdparty/libtiff/tif_ojpeg.c:        for (m=0; m<sp->actable_offset_count; m++)
3rdparty/libtiff/tif_ojpeg.c:            fprintf(fd," " TIFF_UINT64_FORMAT,(TIFF_UINT64_T)sp->actable_offset[m]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->qtable[0]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->qtable[0]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->qtable[1]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->qtable[1]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->qtable[2]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->qtable[2]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->qtable[3]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->qtable[3]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->dctable[0]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->dctable[0]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->dctable[1]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->dctable[1]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->dctable[2]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->dctable[2]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->dctable[3]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->dctable[3]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->actable[0]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->actable[0]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->actable[1]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->actable[1]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->actable[2]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->actable[2]);
3rdparty/libtiff/tif_ojpeg.c:        if (sp->actable[3]!=0)
3rdparty/libtiff/tif_ojpeg.c:            _TIFFfree(sp->actable[3]);
3rdparty/libtiff/tif_ojpeg.c:        if (OJPEGReadHeaderInfoSecTablesQTable(tif)==0)
3rdparty/libtiff/tif_ojpeg.c:        if (OJPEGReadHeaderInfoSecTablesDcTable(tif)==0)
3rdparty/libtiff/tif_ojpeg.c:        if (OJPEGReadHeaderInfoSecTablesAcTable(tif)==0)
3rdparty/libtiff/tif_ojpeg.c:    /* this is a table marker, and it is to be saved as a whole for exact pushing on the jpeg stream later on */
3rdparty/libtiff/tif_ojpeg.c:            if (sp->qtable[o]!=0)
3rdparty/libtiff/tif_ojpeg.c:                _TIFFfree(sp->qtable[o]);
3rdparty/libtiff/tif_ojpeg.c:            sp->qtable[o]=nb;
3rdparty/libtiff/tif_ojpeg.c:    /* this is a table marker, and it is to be saved as a whole for exact pushing on the jpeg stream later on */
3rdparty/libtiff/tif_ojpeg.c:    /* TODO: the following assumes there is only one table in this marker... but i'm not quite sure that assumption is guaranteed correct */
3rdparty/libtiff/tif_ojpeg.c:            if (sp->dctable[o]!=0)
3rdparty/libtiff/tif_ojpeg.c:                _TIFFfree(sp->dctable[o]);
3rdparty/libtiff/tif_ojpeg.c:            sp->dctable[o]=nb;
3rdparty/libtiff/tif_ojpeg.c:            if (sp->actable[o]!=0)
3rdparty/libtiff/tif_ojpeg.c:                _TIFFfree(sp->actable[o]);
3rdparty/libtiff/tif_ojpeg.c:            sp->actable[o]=nb;
3rdparty/libtiff/tif_ojpeg.c:        /* Tq: Quantization table destination selector */
3rdparty/libtiff/tif_ojpeg.c:OJPEGReadHeaderInfoSecTablesQTable(TIFF* tif)
3rdparty/libtiff/tif_ojpeg.c:    static const char module[]="OJPEGReadHeaderInfoSecTablesQTable";
3rdparty/libtiff/tif_ojpeg.c:    if (sp->qtable_offset[0]==0)
3rdparty/libtiff/tif_ojpeg.c:        TIFFErrorExt(tif->tif_clientdata,module,"Missing JPEG tables");
3rdparty/libtiff/tif_ojpeg.c:        if ((sp->qtable_offset[m]!=0) && ((m==0) || (sp->qtable_offset[m]!=sp->qtable_offset[m-1])))
3rdparty/libtiff/tif_ojpeg.c:                if (sp->qtable_offset[m]==sp->qtable_offset[n])
3rdparty/libtiff/tif_ojpeg.c:                    TIFFErrorExt(tif->tif_clientdata,module,"Corrupt JpegQTables tag value");
3rdparty/libtiff/tif_ojpeg.c:            TIFFSeekFile(tif,sp->qtable_offset[m],SEEK_SET);
3rdparty/libtiff/tif_ojpeg.c:            sp->qtable[m]=ob;
3rdparty/libtiff/tif_ojpeg.c:OJPEGReadHeaderInfoSecTablesDcTable(TIFF* tif)
3rdparty/libtiff/tif_ojpeg.c:    static const char module[]="OJPEGReadHeaderInfoSecTablesDcTable";
3rdparty/libtiff/tif_ojpeg.c:    if (sp->dctable_offset[0]==0)
3rdparty/libtiff/tif_ojpeg.c:        TIFFErrorExt(tif->tif_clientdata,module,"Missing JPEG tables");
3rdparty/libtiff/tif_ojpeg.c:        if ((sp->dctable_offset[m]!=0) && ((m==0) || (sp->dctable_offset[m]!=sp->dctable_offset[m-1])))
3rdparty/libtiff/tif_ojpeg.c:                if (sp->dctable_offset[m]==sp->dctable_offset[n])
3rdparty/libtiff/tif_ojpeg.c:                    TIFFErrorExt(tif->tif_clientdata,module,"Corrupt JpegDcTables tag value");
3rdparty/libtiff/tif_ojpeg.c:            TIFFSeekFile(tif,sp->dctable_offset[m],SEEK_SET);
3rdparty/libtiff/tif_ojpeg.c:            sp->dctable[m]=rb;
3rdparty/libtiff/tif_ojpeg.c:OJPEGReadHeaderInfoSecTablesAcTable(TIFF* tif)
3rdparty/libtiff/tif_ojpeg.c:    static const char module[]="OJPEGReadHeaderInfoSecTablesAcTable";
3rdparty/libtiff/tif_ojpeg.c:    if (sp->actable_offset[0]==0)
3rdparty/libtiff/tif_ojpeg.c:        TIFFErrorExt(tif->tif_clientdata,module,"Missing JPEG tables");
3rdparty/libtiff/tif_ojpeg.c:        if ((sp->actable_offset[m]!=0) && ((m==0) || (sp->actable_offset[m]!=sp->actable_offset[m-1])))
3rdparty/libtiff/tif_ojpeg.c:                if (sp->actable_offset[m]==sp->actable_offset[n])
3rdparty/libtiff/tif_ojpeg.c:                    TIFFErrorExt(tif->tif_clientdata,module,"Corrupt JpegAcTables tag value");
3rdparty/libtiff/tif_ojpeg.c:            TIFFSeekFile(tif,sp->actable_offset[m],SEEK_SET);
3rdparty/libtiff/tif_ojpeg.c:            sp->actable[m]=rb;
3rdparty/libtiff/tif_ojpeg.c:            case ososQTable0:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamQTable(tif,0,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososQTable1:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamQTable(tif,1,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososQTable2:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamQTable(tif,2,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososQTable3:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamQTable(tif,3,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososDcTable0:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamDcTable(tif,0,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososDcTable1:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamDcTable(tif,1,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososDcTable2:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamDcTable(tif,2,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososDcTable3:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamDcTable(tif,3,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososAcTable0:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamAcTable(tif,0,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososAcTable1:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamAcTable(tif,1,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososAcTable2:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamAcTable(tif,2,mem,len);
3rdparty/libtiff/tif_ojpeg.c:            case ososAcTable3:
3rdparty/libtiff/tif_ojpeg.c:                OJPEGWriteStreamAcTable(tif,3,mem,len);
3rdparty/libtiff/tif_ojpeg.c:OJPEGWriteStreamQTable(TIFF* tif, uint8 table_index, void** mem, uint32* len)
3rdparty/libtiff/tif_ojpeg.c:    if (sp->qtable[table_index]!=0)
3rdparty/libtiff/tif_ojpeg.c:        *mem=(void*)(sp->qtable[table_index]+sizeof(uint32));
3rdparty/libtiff/tif_ojpeg.c:        *len=*((uint32*)sp->qtable[table_index])-sizeof(uint32);
3rdparty/libtiff/tif_ojpeg.c:OJPEGWriteStreamDcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len)
3rdparty/libtiff/tif_ojpeg.c:    if (sp->dctable[table_index]!=0)
3rdparty/libtiff/tif_ojpeg.c:        *mem=(void*)(sp->dctable[table_index]+sizeof(uint32));
3rdparty/libtiff/tif_ojpeg.c:        *len=*((uint32*)sp->dctable[table_index])-sizeof(uint32);
3rdparty/libtiff/tif_ojpeg.c:OJPEGWriteStreamAcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len)
3rdparty/libtiff/tif_ojpeg.c:    if (sp->actable[table_index]!=0)
3rdparty/libtiff/tif_ojpeg.c:        *mem=(void*)(sp->actable[table_index]+sizeof(uint32));
3rdparty/libtiff/tif_ojpeg.c:        *len=*((uint32*)sp->actable[table_index])-sizeof(uint32);
3rdparty/libtiff/tif_ojpeg.c: * Local Variables:
3rdparty/libtiff/tif_flush.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_flush.c: * Local Variables:
3rdparty/libtiff/tif_color.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_color.c:TIFFCIELabToXYZ(TIFFCIELabToRGB *cielab, uint32 l, int32 a, int32 b,
3rdparty/libtiff/tif_color.c:        *Y = (L * cielab->Y0) / 903.292F;
3rdparty/libtiff/tif_color.c:        cby = 7.787F * (*Y / cielab->Y0) + 16.0F / 116.0F;
3rdparty/libtiff/tif_color.c:        *Y = cielab->Y0 * cby * cby * cby;
3rdparty/libtiff/tif_color.c:        *X = cielab->X0 * (tmp - 0.13793F) / 7.787F;
3rdparty/libtiff/tif_color.c:        *X = cielab->X0 * tmp * tmp * tmp;
3rdparty/libtiff/tif_color.c:        *Z = cielab->Z0 * (tmp - 0.13793F) / 7.787F;
3rdparty/libtiff/tif_color.c:        *Z = cielab->Z0 * tmp * tmp * tmp;
3rdparty/libtiff/tif_color.c:TIFFXYZToRGB(TIFFCIELabToRGB *cielab, float X, float Y, float Z,
3rdparty/libtiff/tif_color.c:    float *matrix = &cielab->display.d_mat[0][0];
3rdparty/libtiff/tif_color.c:    Yr = TIFFmax(Yr, cielab->display.d_Y0R);
3rdparty/libtiff/tif_color.c:    Yg = TIFFmax(Yg, cielab->display.d_Y0G);
3rdparty/libtiff/tif_color.c:    Yb = TIFFmax(Yb, cielab->display.d_Y0B);
3rdparty/libtiff/tif_color.c:    Yr = TIFFmin(Yr, cielab->display.d_YCR);
3rdparty/libtiff/tif_color.c:    Yg = TIFFmin(Yg, cielab->display.d_YCG);
3rdparty/libtiff/tif_color.c:    Yb = TIFFmin(Yb, cielab->display.d_YCB);
3rdparty/libtiff/tif_color.c:    i = (int)((Yr - cielab->display.d_Y0R) / cielab->rstep);
3rdparty/libtiff/tif_color.c:    i = TIFFmin(cielab->range, i);
3rdparty/libtiff/tif_color.c:    *r = RINT(cielab->Yr2r[i]);
3rdparty/libtiff/tif_color.c:    i = (int)((Yg - cielab->display.d_Y0G) / cielab->gstep);
3rdparty/libtiff/tif_color.c:    i = TIFFmin(cielab->range, i);
3rdparty/libtiff/tif_color.c:    *g = RINT(cielab->Yg2g[i]);
3rdparty/libtiff/tif_color.c:    i = (int)((Yb - cielab->display.d_Y0B) / cielab->bstep);
3rdparty/libtiff/tif_color.c:    i = TIFFmin(cielab->range, i);
3rdparty/libtiff/tif_color.c:    *b = RINT(cielab->Yb2b[i]);
3rdparty/libtiff/tif_color.c:    *r = TIFFmin(*r, cielab->display.d_Vrwr);
3rdparty/libtiff/tif_color.c:    *g = TIFFmin(*g, cielab->display.d_Vrwg);
3rdparty/libtiff/tif_color.c:    *b = TIFFmin(*b, cielab->display.d_Vrwb);
3rdparty/libtiff/tif_color.c: * Allocate conversion state structures and make look_up tables for
3rdparty/libtiff/tif_color.c:TIFFCIELabToRGBInit(TIFFCIELabToRGB* cielab,
3rdparty/libtiff/tif_color.c:    cielab->range = CIELABTORGB_TABLE_RANGE;
3rdparty/libtiff/tif_color.c:    _TIFFmemcpy(&cielab->display, display, sizeof(TIFFDisplay));
3rdparty/libtiff/tif_color.c:    gamma = 1.0 / cielab->display.d_gammaR ;
3rdparty/libtiff/tif_color.c:    cielab->rstep =
3rdparty/libtiff/tif_color.c:        (cielab->display.d_YCR - cielab->display.d_Y0R)	/ cielab->range;
3rdparty/libtiff/tif_color.c:    for(i = 0; i <= cielab->range; i++) {
3rdparty/libtiff/tif_color.c:        cielab->Yr2r[i] = cielab->display.d_Vrwr
3rdparty/libtiff/tif_color.c:            * ((float)pow((double)i / cielab->range, gamma));
3rdparty/libtiff/tif_color.c:    gamma = 1.0 / cielab->display.d_gammaG ;
3rdparty/libtiff/tif_color.c:    cielab->gstep =
3rdparty/libtiff/tif_color.c:        (cielab->display.d_YCR - cielab->display.d_Y0R) / cielab->range;
3rdparty/libtiff/tif_color.c:    for(i = 0; i <= cielab->range; i++) {
3rdparty/libtiff/tif_color.c:        cielab->Yg2g[i] = cielab->display.d_Vrwg
3rdparty/libtiff/tif_color.c:            * ((float)pow((double)i / cielab->range, gamma));
3rdparty/libtiff/tif_color.c:    gamma = 1.0 / cielab->display.d_gammaB ;
3rdparty/libtiff/tif_color.c:    cielab->bstep =
3rdparty/libtiff/tif_color.c:        (cielab->display.d_YCR - cielab->display.d_Y0R) / cielab->range;
3rdparty/libtiff/tif_color.c:    for(i = 0; i <= cielab->range; i++) {
3rdparty/libtiff/tif_color.c:        cielab->Yb2b[i] = cielab->display.d_Vrwb
3rdparty/libtiff/tif_color.c:            * ((float)pow((double)i / cielab->range, gamma));
3rdparty/libtiff/tif_color.c:    cielab->X0 = refWhite[0];
3rdparty/libtiff/tif_color.c:    cielab->Y0 = refWhite[1];
3rdparty/libtiff/tif_color.c:    cielab->Z0 = refWhite[2];
3rdparty/libtiff/tif_color.c:    i = ycbcr->Y_tab[Y] + ycbcr->Cr_r_tab[Cr];
3rdparty/libtiff/tif_color.c:    i = ycbcr->Y_tab[Y]
3rdparty/libtiff/tif_color.c:        + (int)((ycbcr->Cb_g_tab[Cb] + ycbcr->Cr_g_tab[Cr]) >> SHIFT);
3rdparty/libtiff/tif_color.c:    i = ycbcr->Y_tab[Y] + ycbcr->Cb_b_tab[Cb];
3rdparty/libtiff/tif_color.c: * Initialize the YCbCr->RGB conversion tables.  The conversion
3rdparty/libtiff/tif_color.c:    TIFFRGBValue* clamptab;
3rdparty/libtiff/tif_color.c:    clamptab = (TIFFRGBValue*)(
3rdparty/libtiff/tif_color.c:    _TIFFmemset(clamptab, 0, 256);		/* v < 0 => 0 */
3rdparty/libtiff/tif_color.c:    ycbcr->clamptab = (clamptab += 256);
3rdparty/libtiff/tif_color.c:    clamptab[i] = (TIFFRGBValue) i;
3rdparty/libtiff/tif_color.c:    _TIFFmemset(clamptab+256, 255, 2*256);	/* v > 255 => 255 */
3rdparty/libtiff/tif_color.c:    ycbcr->Cr_r_tab = (int*) (clamptab + 3*256);
3rdparty/libtiff/tif_color.c:    ycbcr->Cb_b_tab = ycbcr->Cr_r_tab + 256;
3rdparty/libtiff/tif_color.c:    ycbcr->Cr_g_tab = (int32*) (ycbcr->Cb_b_tab + 256);
3rdparty/libtiff/tif_color.c:    ycbcr->Cb_g_tab = ycbcr->Cr_g_tab + 256;
3rdparty/libtiff/tif_color.c:    ycbcr->Y_tab = ycbcr->Cb_g_tab + 256;
3rdparty/libtiff/tif_color.c:       * constructing tables indexed by the raw pixel data.
3rdparty/libtiff/tif_color.c:        ycbcr->Cr_r_tab[i] = (int32)((D1*Cr + ONE_HALF)>>SHIFT);
3rdparty/libtiff/tif_color.c:        ycbcr->Cb_b_tab[i] = (int32)((D3*Cb + ONE_HALF)>>SHIFT);
3rdparty/libtiff/tif_color.c:        ycbcr->Cr_g_tab[i] = D2*Cr;
3rdparty/libtiff/tif_color.c:        ycbcr->Cb_g_tab[i] = D4*Cb + ONE_HALF;
3rdparty/libtiff/tif_color.c:        ycbcr->Y_tab[i] =
3rdparty/libtiff/tif_color.c: * Local Variables:
3rdparty/libtiff/tif_dumpmode.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_dumpmode.c: * Local Variables:
3rdparty/libtiff/tif_close.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_close.c: * to the close procedure in external variables before calling
3rdparty/libtiff/tif_close.c: * Local Variables:
3rdparty/libtiff/tif_thunder.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_thunder.c: * Local Variables:
3rdparty/libtiff/tiffio.h: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tiffio.h: * very large.   Bit-or these flags to enable printing
3rdparty/libtiff/tiffio.h:#define TIFFPRINT_JPEGACTABLES 0x200  /* JPEG AC tables */
3rdparty/libtiff/tiffio.h:#define TIFFPRINT_JPEGDCTABLES 0x200  /* JPEG DC tables */
3rdparty/libtiff/tiffio.h:/* Structure for holding information about a display device. */
3rdparty/libtiff/tiffio.h:    TIFFRGBValue* clamptab;                   /* range clamping table */
3rdparty/libtiff/tiffio.h:    int* Cr_r_tab;
3rdparty/libtiff/tiffio.h:    int* Cb_b_tab;
3rdparty/libtiff/tiffio.h:    int32* Cr_g_tab;
3rdparty/libtiff/tiffio.h:    int32* Cb_g_tab;
3rdparty/libtiff/tiffio.h:    int32* Y_tab;
3rdparty/libtiff/tiffio.h:typedef struct {                                  /* CIE Lab 1976->RGB support */
3rdparty/libtiff/tiffio.h:    int range;                                /* Size of conversion table */
3rdparty/libtiff/tiffio.h:} TIFFCIELabToRGB;
3rdparty/libtiff/tiffio.h:    TIFFCIELabToRGB* cielab;                /* CIE L*a*b conversion state */
3rdparty/libtiff/tiffio.h:#define TIFFGetR(abgr) ((abgr) & 0xff)
3rdparty/libtiff/tiffio.h:#define TIFFGetG(abgr) (((abgr) >> 8) & 0xff)
3rdparty/libtiff/tiffio.h:#define TIFFGetB(abgr) (((abgr) >> 16) & 0xff)
3rdparty/libtiff/tiffio.h:#define TIFFGetA(abgr) (((abgr) >> 24) & 0xff)
3rdparty/libtiff/tiffio.h:#define TIFF_VARIABLE  -1              /* marker for variable length tags */
3rdparty/libtiff/tiffio.h:extern int TIFFDataWidth(TIFFDataType);    /* table of tag datatype widths */
3rdparty/libtiff/tiffio.h:extern void TIFFSwabShort(uint16*);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabLong(uint32*);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabLong8(uint64*);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabFloat(float*);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabDouble(double*);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabArrayOfShort(uint16* wp, tmsize_t n);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabArrayOfTriples(uint8* tp, tmsize_t n);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabArrayOfLong(uint32* lp, tmsize_t n);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabArrayOfLong8(uint64* lp, tmsize_t n);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabArrayOfFloat(float* fp, tmsize_t n);
3rdparty/libtiff/tiffio.h:extern void TIFFSwabArrayOfDouble(double* dp, tmsize_t n);
3rdparty/libtiff/tiffio.h:extern const unsigned char* TIFFGetBitRevTable(int);
3rdparty/libtiff/tiffio.h:extern int TIFFCIELabToRGBInit(TIFFCIELabToRGB*, const TIFFDisplay *, float*);
3rdparty/libtiff/tiffio.h:extern void TIFFCIELabToXYZ(TIFFCIELabToRGB *, uint32, int32, int32,
3rdparty/libtiff/tiffio.h:extern void TIFFXYZToRGB(TIFFCIELabToRGB *, float, float, float,
3rdparty/libtiff/tiffio.h: * Local Variables:
3rdparty/libtiff/tif_next.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_next.c: * Local Variables:
3rdparty/libtiff/tif_dirwrite.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_dirwrite.c: * readable before it is successfully completed/closed.
3rdparty/libtiff/tif_dirwrite.c:                    TIFFSwabShort(&dircount);
3rdparty/libtiff/tif_dirwrite.c:                    TIFFSwabLong(&nextnextdir);
3rdparty/libtiff/tif_dirwrite.c:                    TIFFSwabLong8(&dircount64);
3rdparty/libtiff/tif_dirwrite.c:                    TIFFSwabLong8(&nextnextdir);
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabShort((uint16*)n);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabShort((uint16*)n);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabShort((uint16*)n);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabLong((uint32*)n);
3rdparty/libtiff/tif_dirwrite.c:            /* swabbed previously in TIFFWriteDirectoryTagData */
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong(&nTmp);
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong8((uint64*)n);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabShort((uint16*)n);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabShort((uint16*)n);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabLong8((uint64*)n);
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong8((uint64*)n);
3rdparty/libtiff/tif_dirwrite.c:     * Check if the table can be written as a single column,
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabShort(&m);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfShort(value,count);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabShort((uint16*)(&m));
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfShort((uint16*)value,count);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabLong(&m);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfLong(value,count);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabLong((uint32*)(&m));
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfLong((uint32*)value,count);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabLong8(&m);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfLong8(value,count);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabLong8((uint64*)(&m));
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfLong8((uint64*)value,count);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabLong(&m[0]);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabLong(&m[1]);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfLong(m,count*2);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfLong((uint32*)m,count*2);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabFloat(&m);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfFloat(value,count);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabDouble(&m);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfDouble(value,count);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfLong(value,count);
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabArrayOfLong8(value,count);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabLong(&o);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabLong8(&dir[m].tdir_offset.toff_long8);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabLong(&m);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabLong8(&m);
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong(&m);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabShort(&dircount);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabLong(&nextnextdir);
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong8(&m);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabLong8(&dircount64);
3rdparty/libtiff/tif_dirwrite.c:                TIFFSwabLong8(&nextnextdir);
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabShort(&dircount);
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong8(&dircount64);
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabShort( &entry_tag );
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabShort( &entry_type );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong( &value );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong( &value );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong8( &entry_count );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong8( &entry_offset );
3rdparty/libtiff/tif_dirwrite.c:/*      swabbing as needed.                                             */
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabArrayOfShort( (uint16 *) buf_to_write, count );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabArrayOfLong( (uint32 *) buf_to_write, count );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabArrayOfLong8( (uint64 *) buf_to_write, count );
3rdparty/libtiff/tif_dirwrite.c:        TIFFSwabShort( (uint16 *) (direntry_raw + 2) );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong( (uint32 *) (direntry_raw + 4) );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong( (uint32 *) (direntry_raw + 8) );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong8( (uint64 *) (direntry_raw + 4) );
3rdparty/libtiff/tif_dirwrite.c:            TIFFSwabLong8( (uint64 *) (direntry_raw + 12) );
3rdparty/libtiff/tif_dirwrite.c: * Local Variables:
3rdparty/libtiff/tif_jpeg.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_jpeg.c: * Do we want to do special processing suitable for when JSAMPLE is a
3rdparty/libtiff/tif_jpeg.c:    void*		jpegtables;	/* JPEGTables tag value, or NULL */
3rdparty/libtiff/tif_jpeg.c:    uint32		jpegtables_length; /* number of bytes in same */
3rdparty/libtiff/tif_jpeg.c:    int		jpegtablesmode;	/* What to put in JPEGTables */
3rdparty/libtiff/tif_jpeg.c:    { TIFFTAG_JPEGTABLES, -3, -3, TIFF_UNDEFINED, 0, TIFF_SETGET_C32_UINT8, TIFF_SETGET_C32_UINT8, FIELD_JPEGTABLES, FALSE, TRUE, "JPEGTables", NULL },
3rdparty/libtiff/tif_jpeg.c:    jpeg_abort(cinfo);			/* clean up libjpeg state */
3rdparty/libtiff/tif_jpeg.c:TIFFjpeg_suppress_tables(JPEGState* sp, boolean suppress)
3rdparty/libtiff/tif_jpeg.c:    return CALLVJPEG(sp, jpeg_suppress_tables(&sp->cinfo.c, suppress));
3rdparty/libtiff/tif_jpeg.c:TIFFjpeg_start_compress(JPEGState* sp, boolean write_all_tables)
3rdparty/libtiff/tif_jpeg.c:        jpeg_start_compress(&sp->cinfo.c, write_all_tables));
3rdparty/libtiff/tif_jpeg.c:TIFFjpeg_write_tables(JPEGState* sp)
3rdparty/libtiff/tif_jpeg.c:    return CALLVJPEG(sp, jpeg_write_tables(&sp->cinfo.c));
3rdparty/libtiff/tif_jpeg.c:TIFFjpeg_abort(JPEGState* sp)
3rdparty/libtiff/tif_jpeg.c:    return CALLVJPEG(sp, jpeg_abort(&sp->cinfo.comm));
3rdparty/libtiff/tif_jpeg.c: * Alternate destination manager for outputting to JPEGTables field.
3rdparty/libtiff/tif_jpeg.c:tables_init_destination(j_compress_ptr cinfo)
3rdparty/libtiff/tif_jpeg.c:    /* while building, jpegtables_length is allocated buffer size */
3rdparty/libtiff/tif_jpeg.c:    sp->dest.next_output_byte = (JOCTET*) sp->jpegtables;
3rdparty/libtiff/tif_jpeg.c:    sp->dest.free_in_buffer = (size_t) sp->jpegtables_length;
3rdparty/libtiff/tif_jpeg.c:tables_empty_output_buffer(j_compress_ptr cinfo)
3rdparty/libtiff/tif_jpeg.c:    newbuf = _TIFFrealloc((void*) sp->jpegtables,
3rdparty/libtiff/tif_jpeg.c:                  (tmsize_t) (sp->jpegtables_length + 1000));
3rdparty/libtiff/tif_jpeg.c:    sp->dest.next_output_byte = (JOCTET*) newbuf + sp->jpegtables_length;
3rdparty/libtiff/tif_jpeg.c:    sp->jpegtables = newbuf;
3rdparty/libtiff/tif_jpeg.c:    sp->jpegtables_length += 1000;
3rdparty/libtiff/tif_jpeg.c:tables_term_destination(j_compress_ptr cinfo)
3rdparty/libtiff/tif_jpeg.c:    /* set tables length to number of bytes actually emitted */
3rdparty/libtiff/tif_jpeg.c:    sp->jpegtables_length -= (uint32) sp->dest.free_in_buffer;
3rdparty/libtiff/tif_jpeg.c:TIFFjpeg_tables_dest(JPEGState* sp, TIFF* tif)
3rdparty/libtiff/tif_jpeg.c:     * Allocate a working buffer for building tables.
3rdparty/libtiff/tif_jpeg.c:    if (sp->jpegtables)
3rdparty/libtiff/tif_jpeg.c:        _TIFFfree(sp->jpegtables);
3rdparty/libtiff/tif_jpeg.c:    sp->jpegtables_length = 1000;
3rdparty/libtiff/tif_jpeg.c:    sp->jpegtables = (void*) _TIFFmalloc((tmsize_t) sp->jpegtables_length);
3rdparty/libtiff/tif_jpeg.c:    if (sp->jpegtables == NULL) {
3rdparty/libtiff/tif_jpeg.c:        sp->jpegtables_length = 0;
3rdparty/libtiff/tif_jpeg.c:        TIFFErrorExt(sp->tif->tif_clientdata, "TIFFjpeg_tables_dest", "No space for JPEGTables");
3rdparty/libtiff/tif_jpeg.c:    sp->dest.init_destination = tables_init_destination;
3rdparty/libtiff/tif_jpeg.c:    sp->dest.empty_output_buffer = tables_empty_output_buffer;
3rdparty/libtiff/tif_jpeg.c:    sp->dest.term_destination = tables_term_destination;
3rdparty/libtiff/tif_jpeg.c: * Alternate source manager for reading from JPEGTables.
3rdparty/libtiff/tif_jpeg.c:tables_init_source(j_decompress_ptr cinfo)
3rdparty/libtiff/tif_jpeg.c:    sp->src.next_input_byte = (const JOCTET*) sp->jpegtables;
3rdparty/libtiff/tif_jpeg.c:    sp->src.bytes_in_buffer = (size_t) sp->jpegtables_length;
3rdparty/libtiff/tif_jpeg.c:TIFFjpeg_tables_src(JPEGState* sp, TIFF* tif)
3rdparty/libtiff/tif_jpeg.c:    sp->src.init_source = tables_init_source;
3rdparty/libtiff/tif_jpeg.c:     * that the subsampling be available before we start reading the image
3rdparty/libtiff/tif_jpeg.c:            "Unable to allocate memory for auto-correcting of subsampling values; auto-correcting skipped");
3rdparty/libtiff/tif_jpeg.c:            "Unable to auto-correct subsampling values, likely corrupt JPEG compressed data in first strip/tile; auto-correcting skipped");
3rdparty/libtiff/tif_jpeg.c:    /* Read JPEGTables if it is present */
3rdparty/libtiff/tif_jpeg.c:        TIFFjpeg_tables_src(sp, tif);
3rdparty/libtiff/tif_jpeg.c:            TIFFErrorExt(tif->tif_clientdata, "JPEGSetupDecode", "Bogus JPEGTables field");
3rdparty/libtiff/tif_jpeg.c:    /* Grab parameters that are same for all strips/tiles */
3rdparty/libtiff/tif_jpeg.c:    if (!TIFFjpeg_abort(sp))
3rdparty/libtiff/tif_jpeg.c:        /* XXX what about up-sampling? */
3rdparty/libtiff/tif_jpeg.c:        ** Update available information, buffer may have been refilled
3rdparty/libtiff/tif_jpeg.c:                 "scanline oriented access is not supported for downsampled JPEG compressed images, consider enabling TIFF_JPEGCOLORMODE as JPEGCOLORMODE_RGB." );
3rdparty/libtiff/tif_jpeg.c:unsuppress_quant_table (JPEGState* sp, int tblno)
3rdparty/libtiff/tif_jpeg.c:        qtbl->sent_table = FALSE;
3rdparty/libtiff/tif_jpeg.c:unsuppress_huff_table (JPEGState* sp, int tblno)
3rdparty/libtiff/tif_jpeg.c:        htbl->sent_table = FALSE;
3rdparty/libtiff/tif_jpeg.c:        htbl->sent_table = FALSE;
3rdparty/libtiff/tif_jpeg.c:prepare_JPEGTables(TIFF* tif)
3rdparty/libtiff/tif_jpeg.c:    /* Initialize quant tables for current quality setting */
3rdparty/libtiff/tif_jpeg.c:    /* Mark only the tables we want for output */
3rdparty/libtiff/tif_jpeg.c:    /* NB: chrominance tables are currently used only with YCbCr */
3rdparty/libtiff/tif_jpeg.c:    if (!TIFFjpeg_suppress_tables(sp, TRUE))
3rdparty/libtiff/tif_jpeg.c:    if (sp->jpegtablesmode & JPEGTABLESMODE_QUANT) {
3rdparty/libtiff/tif_jpeg.c:        unsuppress_quant_table(sp, 0);
3rdparty/libtiff/tif_jpeg.c:            unsuppress_quant_table(sp, 1);
3rdparty/libtiff/tif_jpeg.c:    if (sp->jpegtablesmode & JPEGTABLESMODE_HUFF) {
3rdparty/libtiff/tif_jpeg.c:        unsuppress_huff_table(sp, 0);
3rdparty/libtiff/tif_jpeg.c:            unsuppress_huff_table(sp, 1);
3rdparty/libtiff/tif_jpeg.c:    /* Direct libjpeg output into jpegtables */
3rdparty/libtiff/tif_jpeg.c:    if (!TIFFjpeg_tables_dest(sp, tif))
3rdparty/libtiff/tif_jpeg.c:    /* Emit tables-only datastream */
3rdparty/libtiff/tif_jpeg.c:    if (!TIFFjpeg_write_tables(sp))
3rdparty/libtiff/tif_jpeg.c:    /* Create a JPEGTables field if appropriate */
3rdparty/libtiff/tif_jpeg.c:    if (sp->jpegtablesmode & (JPEGTABLESMODE_QUANT|JPEGTABLESMODE_HUFF)) {
3rdparty/libtiff/tif_jpeg.c:                if( sp->jpegtables == NULL
3rdparty/libtiff/tif_jpeg.c:                    || memcmp(sp->jpegtables,"\0\0\0\0\0\0\0\0\0",8) == 0 )
3rdparty/libtiff/tif_jpeg.c:                        if (!prepare_JPEGTables(tif))
3rdparty/libtiff/tif_jpeg.c:        /* We do not support application-supplied JPEGTables, */
3rdparty/libtiff/tif_jpeg.c:    /* set up table handling correctly */
3rdparty/libtiff/tif_jpeg.c:    if (! (sp->jpegtablesmode & JPEGTABLESMODE_QUANT)) {
3rdparty/libtiff/tif_jpeg.c:        unsuppress_quant_table(sp, 0);
3rdparty/libtiff/tif_jpeg.c:        unsuppress_quant_table(sp, 1);
3rdparty/libtiff/tif_jpeg.c:    if (sp->jpegtablesmode & JPEGTABLESMODE_HUFF)
3rdparty/libtiff/tif_jpeg.c:        if (sp->jpegtables)		/* tag value */
3rdparty/libtiff/tif_jpeg.c:            _TIFFfree(sp->jpegtables);
3rdparty/libtiff/tif_jpeg.c:                ; /* XXX what about up-sampling? */
3rdparty/libtiff/tif_jpeg.c:        _TIFFsetByteArray(&sp->jpegtables, va_arg(ap, void*),
3rdparty/libtiff/tif_jpeg.c:        sp->jpegtables_length = v32;
3rdparty/libtiff/tif_jpeg.c:        sp->jpegtablesmode = (int) va_arg(ap, int);
3rdparty/libtiff/tif_jpeg.c:            *va_arg(ap, uint32*) = sp->jpegtables_length;
3rdparty/libtiff/tif_jpeg.c:            *va_arg(ap, void**) = sp->jpegtables;
3rdparty/libtiff/tif_jpeg.c:            *va_arg(ap, int*) = sp->jpegtablesmode;
3rdparty/libtiff/tif_jpeg.c:            fprintf(fd, "  JPEG Tables: (%lu bytes)\n",
3rdparty/libtiff/tif_jpeg.c:                (unsigned long) sp->jpegtables_length);
3rdparty/libtiff/tif_jpeg.c:    sp->jpegtables = NULL;
3rdparty/libtiff/tif_jpeg.c:    sp->jpegtables_length = 0;
3rdparty/libtiff/tif_jpeg.c:    sp->jpegtablesmode = JPEGTABLESMODE_QUANT | JPEGTABLESMODE_HUFF;
3rdparty/libtiff/tif_jpeg.c:        ** Create a JPEGTables field if no directory has yet been created.
3rdparty/libtiff/tif_jpeg.c:        ** the JPEGTables field.  It will be properly created the right
3rdparty/libtiff/tif_jpeg.c:            sp->jpegtables_length = SIZE_OF_JPEGTABLES;
3rdparty/libtiff/tif_jpeg.c:            sp->jpegtables = (void *) _TIFFmalloc(sp->jpegtables_length);
3rdparty/libtiff/tif_jpeg.c:        _TIFFmemset(sp->jpegtables, 0, SIZE_OF_JPEGTABLES);
3rdparty/libtiff/tif_jpeg.c: * Local Variables:
3rdparty/libtiff/tif_unix.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_unix.c: * Local Variables:
3rdparty/libtiff/tif_read.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_read.c:        ** Establish what strip we are working from.
3rdparty/libtiff/tif_read.c:             * we need to be pretty careful about how we use the rawdata.  It is not
3rdparty/libtiff/tif_read.c:_TIFFSwab16BitData(TIFF* tif, uint8* buf, tmsize_t cc)
3rdparty/libtiff/tif_read.c:    TIFFSwabArrayOfShort((uint16*) buf, cc/2);
3rdparty/libtiff/tif_read.c:_TIFFSwab24BitData(TIFF* tif, uint8* buf, tmsize_t cc)
3rdparty/libtiff/tif_read.c:    TIFFSwabArrayOfTriples((uint8*) buf, cc/3);
3rdparty/libtiff/tif_read.c:_TIFFSwab32BitData(TIFF* tif, uint8* buf, tmsize_t cc)
3rdparty/libtiff/tif_read.c:    TIFFSwabArrayOfLong((uint32*) buf, cc/4);
3rdparty/libtiff/tif_read.c:_TIFFSwab64BitData(TIFF* tif, uint8* buf, tmsize_t cc)
3rdparty/libtiff/tif_read.c:    TIFFSwabArrayOfDouble((double*) buf, cc/8);
3rdparty/libtiff/tif_read.c: * Local Variables:
3rdparty/libtiff/tif_stream.cxx: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_stream.cxx:  Local Variables:
3rdparty/libtiff/tif_stream.cxx:  indent-tabs-mode: true
3rdparty/libtiff/tif_dirinfo.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_dirinfo.c:    { TIFFTAG_INTEROPERABILITYIFD, 1, 1, TIFF_IFD8, 0, TIFF_SETGET_UNDEFINED, TIFF_SETGET_UNDEFINED, FIELD_CUSTOM, 0, 0, "InteroperabilityIFDOffset", NULL },
3rdparty/libtiff/tif_dirinfo.c:    { TIFFTAG_LINEARIZATIONTABLE, -1, -1, TIFF_SHORT, 0, TIFF_SETGET_C16_UINT16, TIFF_SETGET_UNDEFINED, FIELD_CUSTOM, 0, 1, "LinearizationTable", NULL },
3rdparty/libtiff/tif_dirinfo.c: * Local Variables:
3rdparty/libtiff/tif_swab.c:/* $Id: tif_swab.c,v 1.13 2010-03-10 18:56:49 bfriesen Exp $ */
3rdparty/libtiff/tif_swab.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabShort
3rdparty/libtiff/tif_swab.c:TIFFSwabShort(uint16* wp)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabLong
3rdparty/libtiff/tif_swab.c:TIFFSwabLong(uint32* lp)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabLong8
3rdparty/libtiff/tif_swab.c:TIFFSwabLong8(uint64* lp)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabArrayOfShort
3rdparty/libtiff/tif_swab.c:TIFFSwabArrayOfShort(register uint16* wp, tmsize_t n)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabArrayOfTriples
3rdparty/libtiff/tif_swab.c:TIFFSwabArrayOfTriples(register uint8* tp, tmsize_t n)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabArrayOfLong
3rdparty/libtiff/tif_swab.c:TIFFSwabArrayOfLong(register uint32* lp, tmsize_t n)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabArrayOfLong8
3rdparty/libtiff/tif_swab.c:TIFFSwabArrayOfLong8(register uint64* lp, tmsize_t n)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabFloat
3rdparty/libtiff/tif_swab.c:TIFFSwabFloat(float* fp)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabArrayOfFloat
3rdparty/libtiff/tif_swab.c:TIFFSwabArrayOfFloat(register float* fp, tmsize_t n)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabDouble
3rdparty/libtiff/tif_swab.c:TIFFSwabDouble(double *dp)
3rdparty/libtiff/tif_swab.c:#ifndef TIFFSwabArrayOfDouble
3rdparty/libtiff/tif_swab.c:TIFFSwabArrayOfDouble(double* dp, tmsize_t n)
3rdparty/libtiff/tif_swab.c: * Bit reversal tables.  TIFFBitRevTable[<byte>] gives
3rdparty/libtiff/tif_swab.c: * encoding/decoding).  TIFFNoBitRevTable is provided
3rdparty/libtiff/tif_swab.c: * for algorithms that want an equivalent table that
3rdparty/libtiff/tif_swab.c:static const unsigned char TIFFBitRevTable[256] = {
3rdparty/libtiff/tif_swab.c:    0x0b, 0x8b, 0x4b, 0xcb, 0x2b, 0xab, 0x6b, 0xeb,
3rdparty/libtiff/tif_swab.c:static const unsigned char TIFFNoBitRevTable[256] = {
3rdparty/libtiff/tif_swab.c:    0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
3rdparty/libtiff/tif_swab.c:TIFFGetBitRevTable(int reversed)
3rdparty/libtiff/tif_swab.c:    return (reversed ? TIFFBitRevTable : TIFFNoBitRevTable);
3rdparty/libtiff/tif_swab.c:        cp[0] = TIFFBitRevTable[cp[0]];
3rdparty/libtiff/tif_swab.c:        cp[1] = TIFFBitRevTable[cp[1]];
3rdparty/libtiff/tif_swab.c:        cp[2] = TIFFBitRevTable[cp[2]];
3rdparty/libtiff/tif_swab.c:        cp[3] = TIFFBitRevTable[cp[3]];
3rdparty/libtiff/tif_swab.c:        cp[4] = TIFFBitRevTable[cp[4]];
3rdparty/libtiff/tif_swab.c:        cp[5] = TIFFBitRevTable[cp[5]];
3rdparty/libtiff/tif_swab.c:        cp[6] = TIFFBitRevTable[cp[6]];
3rdparty/libtiff/tif_swab.c:        cp[7] = TIFFBitRevTable[cp[7]];
3rdparty/libtiff/tif_swab.c:        *cp = TIFFBitRevTable[*cp], cp++;
3rdparty/libtiff/tif_swab.c: * Local Variables:
3rdparty/libtiff/tif_fax3sm.c: const TIFFFaxTabEnt TIFFFaxMainTable[128] = {
3rdparty/libtiff/tif_fax3sm.c: const TIFFFaxTabEnt TIFFFaxWhiteTable[4096] = {
3rdparty/libtiff/tif_fax3sm.c: const TIFFFaxTabEnt TIFFFaxBlackTable[8192] = {
3rdparty/libtiff/tif_fax3sm.c: * Local Variables:
3rdparty/libtiff/tif_dirread.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_dirread.c:                TIFFSwabLong(&offset);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabLong8(&offset);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8((uint64*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8((uint64*)ma);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabArrayOfShort(*value,count);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort((uint16*)m);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8((uint64*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort(m);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabArrayOfShort((uint16*)(*value),count);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8((uint64*)ma);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabArrayOfLong(*value,count);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)m);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8((uint64*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)m);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabArrayOfLong((uint32*)(*value),count);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8((uint64*)ma);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabArrayOfLong8(*value,count);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8((uint64*)m);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8(m);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabArrayOfLong8((uint64*)(*value),count);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)ma);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabArrayOfLong((uint32*)origdata,count);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8((uint64*)ma);
3rdparty/libtiff/tif_dirread.c:                uint32 mab;
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                    mab=*ma++;
3rdparty/libtiff/tif_dirread.c:                    if (mab==0)
3rdparty/libtiff/tif_dirread.c:                        *mb++=(float)maa/(float)mab;
3rdparty/libtiff/tif_dirread.c:                uint32 mab;
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                    mab=*ma++;
3rdparty/libtiff/tif_dirread.c:                    if (mab==0)
3rdparty/libtiff/tif_dirread.c:                        *mb++=(float)maa/(float)mab;
3rdparty/libtiff/tif_dirread.c:                    TIFFSwabArrayOfLong8((uint64*)origdata,count);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabArrayOfLong8((uint64*)origdata,count);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong((uint32*)ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong8((uint64*)ma);
3rdparty/libtiff/tif_dirread.c:                uint32 mab;
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                    mab=*ma++;
3rdparty/libtiff/tif_dirread.c:                    if (mab==0)
3rdparty/libtiff/tif_dirread.c:                        *mb++=(double)maa/(double)mab;
3rdparty/libtiff/tif_dirread.c:                uint32 mab;
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:                    mab=*ma++;
3rdparty/libtiff/tif_dirread.c:                    if (mab==0)
3rdparty/libtiff/tif_dirread.c:                        *mb++=(double)maa/(double)mab;
3rdparty/libtiff/tif_dirread.c:                    TIFFSwabArrayOfLong((uint32*)origdata,count);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabArrayOfLong8(*value,count);
3rdparty/libtiff/tif_dirread.c:                        TIFFSwabLong(ma);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabShort(value);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabShort((uint16*)value);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabLong(value);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabLong((uint32*)value);
3rdparty/libtiff/tif_dirread.c:            TIFFSwabLong(&offset);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabLong8(value);
3rdparty/libtiff/tif_dirread.c:            TIFFSwabLong(&offset);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabLong8((uint64*)value);
3rdparty/libtiff/tif_dirread.c:            TIFFSwabLong(&offset);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabArrayOfLong(m.i,2);
3rdparty/libtiff/tif_dirread.c:            TIFFSwabLong(&offset);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabArrayOfLong(m.i,2);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabLong((uint32*)value);
3rdparty/libtiff/tif_dirread.c:            TIFFSwabLong(&offset);
3rdparty/libtiff/tif_dirread.c:        TIFFSwabLong8((uint64*)value);
3rdparty/libtiff/tif_dirread.c:     * we may get complaints about unknown tags).  However, the
3rdparty/libtiff/tif_dirread.c:             * then we tolerate the absence of stripoffsets tag,
3rdparty/libtiff/tif_dirread.c:             * because, presumably, all required data is in the
3rdparty/libtiff/tif_dirread.c:             * absolutely wrong values (it can be equal to
3rdparty/libtiff/tif_dirread.c: * nextdiroff variable has been specified, read it too. Function returns a
3rdparty/libtiff/tif_dirread.c:                TIFFSwabShort(&dircount16);
3rdparty/libtiff/tif_dirread.c:                    "Sanity check on directory count failed, this is probably not a valid IFD offset");
3rdparty/libtiff/tif_dirread.c:                TIFFSwabLong8(&dircount64);
3rdparty/libtiff/tif_dirread.c:                    "Sanity check on directory count failed, this is probably not a valid IFD offset");
3rdparty/libtiff/tif_dirread.c:                    TIFFSwabLong(&nextdiroff32);
3rdparty/libtiff/tif_dirread.c:                    TIFFSwabLong8(nextdiroff);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabShort(&dircount16);
3rdparty/libtiff/tif_dirread.c:                    "Sanity check on directory count failed, this is probably not a valid IFD offset");
3rdparty/libtiff/tif_dirread.c:                TIFFSwabLong8(&dircount64);
3rdparty/libtiff/tif_dirread.c:                    "Sanity check on directory count failed, this is probably not a valid IFD offset");
3rdparty/libtiff/tif_dirread.c:                    TIFFSwabLong(&nextdiroff32);
3rdparty/libtiff/tif_dirread.c:                    TIFFSwabLong8(nextdiroff);
3rdparty/libtiff/tif_dirread.c:            TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:            TIFFSwabShort((uint16*)ma);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabLong((uint32*)ma);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabLong8((uint64*)ma);
3rdparty/libtiff/tif_dirread.c:                TIFFSwabLong(&offset);
3rdparty/libtiff/tif_dirread.c:            TIFFSwabArrayOfLong(m.i,2);
3rdparty/libtiff/tif_dirread.c:         * Unable to allocate new strip information, give up and use
3rdparty/libtiff/tif_dirread.c: * Local Variables:
3rdparty/libtiff/tif_getimage.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_getimage.c:    if (img->cielab)
3rdparty/libtiff/tif_getimage.c:        _TIFFfree(img->cielab), img->cielab = NULL;
3rdparty/libtiff/tif_getimage.c:                if (img->samplesperpixel > 3)  /* correct info about alpha channel */
3rdparty/libtiff/tif_getimage.c:            /* It would probably be nice to have a reality check here. */
3rdparty/libtiff/tif_getimage.c:    img->cielab = NULL;
3rdparty/libtiff/tif_getimage.c:        "No \"put\" routine setupl; probably can not handle image format");
3rdparty/libtiff/tif_getimage.c: * ABGR pixels (i.e. suitable for passing to lrecwrite.)
3rdparty/libtiff/tif_getimage.c:DECLAREContigPutFunc(putcontig8bitCIELab)
3rdparty/libtiff/tif_getimage.c:            TIFFCIELabToXYZ(img->cielab,
3rdparty/libtiff/tif_getimage.c:            TIFFXYZToRGB(img->cielab, X, Y, Z, &r, &g, &b);
3rdparty/libtiff/tif_getimage.c:initCIELabConversion(TIFFRGBAImage* img)
3rdparty/libtiff/tif_getimage.c:    static const char module[] = "initCIELabConversion";
3rdparty/libtiff/tif_getimage.c:    if (!img->cielab) {
3rdparty/libtiff/tif_getimage.c:        img->cielab = (TIFFCIELabToRGB *)
3rdparty/libtiff/tif_getimage.c:            _TIFFmalloc(sizeof(TIFFCIELabToRGB));
3rdparty/libtiff/tif_getimage.c:        if (!img->cielab) {
3rdparty/libtiff/tif_getimage.c:    if (TIFFCIELabToRGBInit(img->cielab, &display_sRGB, refWhite) < 0) {
3rdparty/libtiff/tif_getimage.c:        _TIFFfree(img->cielab);
3rdparty/libtiff/tif_getimage.c:    return putcontig8bitCIELab;
3rdparty/libtiff/tif_getimage.c: * with a table to avoid lots of shifts and masks.  The table
3rdparty/libtiff/tif_getimage.c: * pixel values simply by indexing into the table with one
3rdparty/libtiff/tif_getimage.c:        TIFFErrorExt(img->tif->tif_clientdata, TIFFFileName(img->tif), "No space for B&W mapping table");
3rdparty/libtiff/tif_getimage.c: * Construct a mapping table to convert from the range
3rdparty/libtiff/tif_getimage.c:            "No space for photometric conversion table");
3rdparty/libtiff/tif_getimage.c:     * Use photometric mapping table to construct
3rdparty/libtiff/tif_getimage.c:     * unpacking tables for samples <= 8 bits.
3rdparty/libtiff/tif_getimage.c: * with a table to avoid lots of shifts and masks.  The table
3rdparty/libtiff/tif_getimage.c: * pixel values simply by indexing into the table with one
3rdparty/libtiff/tif_getimage.c:        TIFFErrorExt(img->tif->tif_clientdata, TIFFFileName(img->tif), "No space for Palette mapping table");
3rdparty/libtiff/tif_getimage.c: * Construct any mapping table used
3rdparty/libtiff/tif_getimage.c:     * Use mapping table and colormap to construct
3rdparty/libtiff/tif_getimage.c:     * unpacking tables for samples < 8 bits.
3rdparty/libtiff/tif_getimage.c:                    img->put.contig = initCIELabConversion(img);
3rdparty/libtiff/tif_getimage.c: * Local Variables:
3rdparty/libtiff/tif_predict.h: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_predict.h: * Local Variables:
3rdparty/libtiff/tif_fax3.h: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_fax3.h:typedef struct {                /* state table entry */
3rdparty/libtiff/tif_fax3.h:    unsigned char State;    /* see above */
3rdparty/libtiff/tif_fax3.h:} TIFFFaxTabEnt;
3rdparty/libtiff/tif_fax3.h:extern const TIFFFaxTabEnt TIFFFaxMainTable[];
3rdparty/libtiff/tif_fax3.h:extern const TIFFFaxTabEnt TIFFFaxWhiteTable[];
3rdparty/libtiff/tif_fax3.h:extern const TIFFFaxTabEnt TIFFFaxBlackTable[];
3rdparty/libtiff/tif_fax3.h: * algorithm using the state tables defined elsewhere.  To build
3rdparty/libtiff/tif_fax3.h: * NB: to enable a debugging version of these macros define FAX3_DEBUG
3rdparty/libtiff/tif_fax3.h:#define NeedBits8(n,eoflab) do {					\
3rdparty/libtiff/tif_fax3.h:        goto eoflab;						\
3rdparty/libtiff/tif_fax3.h:#define NeedBits16(n,eoflab) do {					\
3rdparty/libtiff/tif_fax3.h:        goto eoflab;						\
3rdparty/libtiff/tif_fax3.h:#define LOOKUP8(wid,tab,eoflab) do {					\
3rdparty/libtiff/tif_fax3.h:    NeedBits8(wid,eoflab);						\
3rdparty/libtiff/tif_fax3.h:    TabEnt = tab + GetBits(wid);					\
3rdparty/libtiff/tif_fax3.h:       StateNames[TabEnt->State], TabEnt->Param);			\
3rdparty/libtiff/tif_fax3.h:    for (t = 0; t < TabEnt->Width; t++)					\
3rdparty/libtiff/tif_fax3.h:    ClrBits(TabEnt->Width);						\
3rdparty/libtiff/tif_fax3.h:#define LOOKUP16(wid,tab,eoflab) do {					\
3rdparty/libtiff/tif_fax3.h:    NeedBits16(wid,eoflab);						\
3rdparty/libtiff/tif_fax3.h:    TabEnt = tab + GetBits(wid);					\
3rdparty/libtiff/tif_fax3.h:       StateNames[TabEnt->State], TabEnt->Param);			\
3rdparty/libtiff/tif_fax3.h:    for (t = 0; t < TabEnt->Width; t++)					\
3rdparty/libtiff/tif_fax3.h:    ClrBits(TabEnt->Width);						\
3rdparty/libtiff/tif_fax3.h:#define LOOKUP8(wid,tab,eoflab) do {					\
3rdparty/libtiff/tif_fax3.h:    NeedBits8(wid,eoflab);						\
3rdparty/libtiff/tif_fax3.h:    TabEnt = tab + GetBits(wid);					\
3rdparty/libtiff/tif_fax3.h:    ClrBits(TabEnt->Width);						\
3rdparty/libtiff/tif_fax3.h:#define LOOKUP16(wid,tab,eoflab) do {					\
3rdparty/libtiff/tif_fax3.h:    NeedBits16(wid,eoflab);						\
3rdparty/libtiff/tif_fax3.h:    TabEnt = tab + GetBits(wid);					\
3rdparty/libtiff/tif_fax3.h:    ClrBits(TabEnt->Width);						\
3rdparty/libtiff/tif_fax3.h:#define	SYNC_EOL(eoflab) do {						\
3rdparty/libtiff/tif_fax3.h:        NeedBits16(11,eoflab);					\
3rdparty/libtiff/tif_fax3.h:    NeedBits8(8,eoflab);						\
3rdparty/libtiff/tif_fax3.h: * but still have direct access to the local variables of the "calling"
3rdparty/libtiff/tif_fax3.h:#define EXPAND1D(eoflab) do {						\
3rdparty/libtiff/tif_fax3.h:        LOOKUP16(12, TIFFFaxWhiteTable, eof1d);			\
3rdparty/libtiff/tif_fax3.h:        switch (TabEnt->State) {					\
3rdparty/libtiff/tif_fax3.h:        SETVALUE(TabEnt->Param);					\
3rdparty/libtiff/tif_fax3.h:        a0 += TabEnt->Param;					\
3rdparty/libtiff/tif_fax3.h:        RunLength += TabEnt->Param;				\
3rdparty/libtiff/tif_fax3.h:        unexpected("WhiteTable", a0);				\
3rdparty/libtiff/tif_fax3.h:        LOOKUP16(13, TIFFFaxBlackTable, eof1d);			\
3rdparty/libtiff/tif_fax3.h:        switch (TabEnt->State) {					\
3rdparty/libtiff/tif_fax3.h:        SETVALUE(TabEnt->Param);					\
3rdparty/libtiff/tif_fax3.h:        a0 += TabEnt->Param;					\
3rdparty/libtiff/tif_fax3.h:        RunLength += TabEnt->Param;				\
3rdparty/libtiff/tif_fax3.h:        unexpected("BlackTable", a0);				\
3rdparty/libtiff/tif_fax3.h:    goto eoflab;							\
3rdparty/libtiff/tif_fax3.h:#define EXPAND2D(eoflab) do {						\
3rdparty/libtiff/tif_fax3.h:    LOOKUP8(7, TIFFFaxMainTable, eof2d);				\
3rdparty/libtiff/tif_fax3.h:    switch (TabEnt->State) {					\
3rdparty/libtiff/tif_fax3.h:            LOOKUP16(13, TIFFFaxBlackTable, eof2d);		\
3rdparty/libtiff/tif_fax3.h:            switch (TabEnt->State) {				\
3rdparty/libtiff/tif_fax3.h:            SETVALUE(TabEnt->Param);				\
3rdparty/libtiff/tif_fax3.h:            a0 += TabEnt->Param;				\
3rdparty/libtiff/tif_fax3.h:            RunLength += TabEnt->Param;			\
3rdparty/libtiff/tif_fax3.h:            LOOKUP16(12, TIFFFaxWhiteTable, eof2d);		\
3rdparty/libtiff/tif_fax3.h:            switch (TabEnt->State) {				\
3rdparty/libtiff/tif_fax3.h:            SETVALUE(TabEnt->Param);				\
3rdparty/libtiff/tif_fax3.h:            a0 += TabEnt->Param;				\
3rdparty/libtiff/tif_fax3.h:            RunLength += TabEnt->Param;			\
3rdparty/libtiff/tif_fax3.h:            LOOKUP16(12, TIFFFaxWhiteTable, eof2d);		\
3rdparty/libtiff/tif_fax3.h:            switch (TabEnt->State) {				\
3rdparty/libtiff/tif_fax3.h:            SETVALUE(TabEnt->Param);				\
3rdparty/libtiff/tif_fax3.h:            a0 += TabEnt->Param;				\
3rdparty/libtiff/tif_fax3.h:            RunLength += TabEnt->Param;			\
3rdparty/libtiff/tif_fax3.h:            LOOKUP16(13, TIFFFaxBlackTable, eof2d);		\
3rdparty/libtiff/tif_fax3.h:            switch (TabEnt->State) {				\
3rdparty/libtiff/tif_fax3.h:            SETVALUE(TabEnt->Param);				\
3rdparty/libtiff/tif_fax3.h:            a0 += TabEnt->Param;				\
3rdparty/libtiff/tif_fax3.h:            RunLength += TabEnt->Param;			\
3rdparty/libtiff/tif_fax3.h:        SETVALUE(b1 - a0 + TabEnt->Param);				\
3rdparty/libtiff/tif_fax3.h:        if (b1 <= (int) (a0 + TabEnt->Param)) {			\
3rdparty/libtiff/tif_fax3.h:        if (b1 < (int) (a0 + TabEnt->Param) || pa != thisrun) {	\
3rdparty/libtiff/tif_fax3.h:        SETVALUE(b1 - a0 - TabEnt->Param);				\
3rdparty/libtiff/tif_fax3.h:        unexpected("MainTable", a0);				\
3rdparty/libtiff/tif_fax3.h:        unexpected("BlackTable", a0);				\
3rdparty/libtiff/tif_fax3.h:        unexpected("WhiteTable", a0);				\
3rdparty/libtiff/tif_fax3.h:        goto eoflab;						\
3rdparty/libtiff/tif_fax3.h: * Local Variables:
3rdparty/libtiff/tif_print.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_print.c: * Local Variables:
3rdparty/libtiff/tif_predict.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_predict.c:static void swabHorAcc16(TIFF* tif, uint8* cp0, tmsize_t cc);
3rdparty/libtiff/tif_predict.c:static void swabHorAcc32(TIFF* tif, uint8* cp0, tmsize_t cc);
3rdparty/libtiff/tif_predict.c:                sp->decodepfunc = swabHorAcc16;
3rdparty/libtiff/tif_predict.c:                sp->decodepfunc = swabHorAcc32;
3rdparty/libtiff/tif_predict.c:swabHorAcc16(TIFF* tif, uint8* cp0, tmsize_t cc)
3rdparty/libtiff/tif_predict.c:        TIFFSwabArrayOfShort(wp, wc);
3rdparty/libtiff/tif_predict.c:swabHorAcc32(TIFF* tif, uint8* cp0, tmsize_t cc)
3rdparty/libtiff/tif_predict.c:        TIFFSwabArrayOfLong(wp, wc);
3rdparty/libtiff/tif_predict.c: * Local Variables:
3rdparty/libtiff/tif_open.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_open.c:     * Default is to return data MSB2LSB and enable the
3rdparty/libtiff/tif_open.c:     * behaviour that may or may not be desirable (usually for
3rdparty/libtiff/tif_open.c:     * 'M' enable use of memory-mapped files when supported
3rdparty/libtiff/tif_open.c:     * 'm' disable use of memory-mapped files
3rdparty/libtiff/tif_open.c:     * 'C' enable strip chopping support when reading
3rdparty/libtiff/tif_open.c:     * 'c' disable strip chopping support
3rdparty/libtiff/tif_open.c:     * the value of the FillOrder tag; something they probably do
3rdparty/libtiff/tif_open.c:                TIFFSwabShort(&tif->tif_header.common.tiff_version);
3rdparty/libtiff/tif_open.c:                TIFFSwabShort(&tif->tif_header.common.tiff_version);
3rdparty/libtiff/tif_open.c:                TIFFSwabShort(&tif->tif_header.big.tiff_offsetsize);
3rdparty/libtiff/tif_open.c:        TIFFSwabShort(&tif->tif_header.common.tiff_version);
3rdparty/libtiff/tif_open.c:            TIFFSwabLong(&tif->tif_header.classic.tiff_diroff);
3rdparty/libtiff/tif_open.c:            TIFFSwabShort(&tif->tif_header.big.tiff_offsetsize);
3rdparty/libtiff/tif_open.c:            TIFFSwabLong8(&tif->tif_header.big.tiff_diroff);
3rdparty/libtiff/tif_open.c:             * 'm' flag in the open mode (see above).
3rdparty/libtiff/tif_open.c: * Local Variables:
3rdparty/libtiff/tif_config.h.cmakein:   lacking the tag (default enabled). */
3rdparty/libtiff/tif_config.h.cmakein:/* enable partial strip reading for large strips (experimental) */
3rdparty/libtiff/tif_config.h.cmakein:/* Treat extra sample as alpha (default enabled). The RGBA interface will
3rdparty/libtiff/tif_config.h.cmakein:/* enable deferred strip/tile offset/size loading (experimental) */
3rdparty/libtiff/tif_config.h.cmakein:/* 8/12 bit libjpeg dual mode enabled */
3rdparty/libtiff/tif_config.h.cmakein:/* Default size of the strip in bytes (when strip chopping enabled) */
3rdparty/libtiff/tif_win32.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_win32.c:     * 32bit sizes, so we loop through the data in suitable 32bit sized
3rdparty/libtiff/tif_win32.c:     * 32bit sizes, so we loop through the data in suitable 32bit sized
3rdparty/libtiff/tif_win32.c: * Local Variables:
3rdparty/libtiff/tif_zip.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_zip.c: * the ability to write the zlib header multiple times (one per strip)
3rdparty/libtiff/tif_zip.c: * zlib-3.1.doc, deflate-1.1.doc and gzip-4.1.doc, available in the
3rdparty/libtiff/tif_zip.c: * Local Variables:
3rdparty/libtiff/tif_pixarlog.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_pixarlog.c: * On writing any of the above are converted into the internal
3rdparty/libtiff/tif_pixarlog.c: * accepted up to a value of about 25.0 to encode "hot" hightlights and such.
3rdparty/libtiff/tif_pixarlog.c: * susceptable to such errors than standard 8-bit encodings, but more
3rdparty/libtiff/tif_pixarlog.c: * susceptable than straight 16-bit or 32-bit encodings.
3rdparty/libtiff/tif_pixarlog.c: * (rgb or rgba) it swaps the channel order (bgr or abgr).
3rdparty/libtiff/tif_pixarlog.c: * gets the format it is most likely able to handle.
3rdparty/libtiff/tif_pixarlog.c:/* Tables for converting to/from 11 bit coded values */
3rdparty/libtiff/tif_pixarlog.c:#define  TSIZE	 2048		/* decode table size (11-bit tokens) */
3rdparty/libtiff/tif_pixarlog.c:horizontalAccumulate8abgr(uint16 *wp, int n, int stride, unsigned char *op,
3rdparty/libtiff/tif_pixarlog.c:PixarLogMakeTables(PixarLogState *sp)
3rdparty/libtiff/tif_pixarlog.c: *    We make several tables here to convert between various external
3rdparty/libtiff/tif_pixarlog.c: *    of about .000073, and a region of constant ratio up to about 25.
3rdparty/libtiff/tif_pixarlog.c: *    These floating point numbers are stored in the main table ToLinearF.
3rdparty/libtiff/tif_pixarlog.c: *    All other tables are derived from this one.  The tables (and the
3rdparty/libtiff/tif_pixarlog.c:     * table and shift 16-bit values down two bits on input.
3rdparty/libtiff/tif_pixarlog.c:     * saves a little table space.
3rdparty/libtiff/tif_pixarlog.c:        TIFFSwabArrayOfShort(up, nsamples);
3rdparty/libtiff/tif_pixarlog.c:            horizontalAccumulate8abgr(up, llen, sp->stride,
3rdparty/libtiff/tif_pixarlog.c:     * readers that don't know about PixarLog, or how to set
3rdparty/libtiff/tif_pixarlog.c:     * build the companding tables
3rdparty/libtiff/tif_pixarlog.c:    PixarLogMakeTables(sp);
3rdparty/libtiff/tif_pixarlog.c: * Local Variables:
3rdparty/libtiff/tif_dir.h: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_dir.h: * TIFF Image File Directories are comprised of a table of field
3rdparty/libtiff/tif_dir.h: * descriptors of the form shown below.  The table is sorted in
3rdparty/libtiff/tif_dir.h: * Local Variables:
3rdparty/libtiff/tif_lzw.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_lzw.c:#define CODE_CLEAR      256             /* code to clear string table */
3rdparty/libtiff/tif_lzw.c:    unsigned short  free_ent;       /* next free entry in hash table */
3rdparty/libtiff/tif_lzw.c:    uint64  dec_bitsleft;		/* available bits in raw data */
3rdparty/libtiff/tif_lzw.c:    code_t* dec_maxcodep;		/* max available entry */
3rdparty/libtiff/tif_lzw.c:    code_t* dec_codetab;		/* kept separate for small machines */
3rdparty/libtiff/tif_lzw.c:    long    enc_checkpoint;		/* point at which to clear table */
3rdparty/libtiff/tif_lzw.c:    hash_t* enc_hashtab;		/* kept separate for small machines */
3rdparty/libtiff/tif_lzw.c:        DecoderState(tif)->dec_codetab = NULL;
3rdparty/libtiff/tif_lzw.c:    if (sp->dec_codetab == NULL) {
3rdparty/libtiff/tif_lzw.c:        sp->dec_codetab = (code_t*)_TIFFmalloc(CSIZE*sizeof (code_t));
3rdparty/libtiff/tif_lzw.c:        if (sp->dec_codetab == NULL) {
3rdparty/libtiff/tif_lzw.c:                     "No space for LZW code table");
3rdparty/libtiff/tif_lzw.c:         * Pre-load the table.
3rdparty/libtiff/tif_lzw.c:            sp->dec_codetab[code].value = code;
3rdparty/libtiff/tif_lzw.c:            sp->dec_codetab[code].firstchar = code;
3rdparty/libtiff/tif_lzw.c:            sp->dec_codetab[code].length = 1;
3rdparty/libtiff/tif_lzw.c:            sp->dec_codetab[code].next = NULL;
3rdparty/libtiff/tif_lzw.c:                 _TIFFmemset(&sp->dec_codetab[CODE_CLEAR], 0,
3rdparty/libtiff/tif_lzw.c:    if( sp->dec_codetab == NULL )
3rdparty/libtiff/tif_lzw.c:             * above will call the compatibility routines
3rdparty/libtiff/tif_lzw.c:    sp->dec_free_entp = sp->dec_codetab + CODE_FIRST;
3rdparty/libtiff/tif_lzw.c:    sp->dec_oldcodep = &sp->dec_codetab[-1];
3rdparty/libtiff/tif_lzw.c:    sp->dec_maxcodep = &sp->dec_codetab[sp->dec_nbitsmask-1];
3rdparty/libtiff/tif_lzw.c:        "Bogus encoding, loop in the code table; scanline %d",
3rdparty/libtiff/tif_lzw.c:        assert(sp->dec_codetab != NULL);
3rdparty/libtiff/tif_lzw.c:            free_entp = sp->dec_codetab + CODE_FIRST;
3rdparty/libtiff/tif_lzw.c:            maxcodep = sp->dec_codetab + nbitsmask-1;
3rdparty/libtiff/tif_lzw.c:                "LZWDecode: Corrupted LZW table at scanline %d",
3rdparty/libtiff/tif_lzw.c:            oldcodep = sp->dec_codetab + code;
3rdparty/libtiff/tif_lzw.c:        codep = sp->dec_codetab + code;
3rdparty/libtiff/tif_lzw.c:         * Add the new entry to the code table.
3rdparty/libtiff/tif_lzw.c:        if (free_entp < &sp->dec_codetab[0] ||
3rdparty/libtiff/tif_lzw.c:            free_entp >= &sp->dec_codetab[CSIZE]) {
3rdparty/libtiff/tif_lzw.c:                "Corrupted LZW table at scanline %d",
3rdparty/libtiff/tif_lzw.c:        if (free_entp->next < &sp->dec_codetab[0] ||
3rdparty/libtiff/tif_lzw.c:            free_entp->next >= &sp->dec_codetab[CSIZE]) {
3rdparty/libtiff/tif_lzw.c:                "Corrupted LZW table at scanline %d",
3rdparty/libtiff/tif_lzw.c:            maxcodep = sp->dec_codetab + nbitsmask-1;
3rdparty/libtiff/tif_lzw.c:                    "data probably corrupted at scanline %d",
3rdparty/libtiff/tif_lzw.c:            free_entp = sp->dec_codetab + CODE_FIRST;
3rdparty/libtiff/tif_lzw.c:            maxcodep = sp->dec_codetab + nbitsmask;
3rdparty/libtiff/tif_lzw.c:                "LZWDecode: Corrupted LZW table at scanline %d",
3rdparty/libtiff/tif_lzw.c:            oldcodep = sp->dec_codetab + code;
3rdparty/libtiff/tif_lzw.c:        codep = sp->dec_codetab + code;
3rdparty/libtiff/tif_lzw.c:         * Add the new entry to the code table.
3rdparty/libtiff/tif_lzw.c:        if (free_entp < &sp->dec_codetab[0] ||
3rdparty/libtiff/tif_lzw.c:            free_entp >= &sp->dec_codetab[CSIZE]) {
3rdparty/libtiff/tif_lzw.c:                "Corrupted LZW table at scanline %d", tif->tif_row);
3rdparty/libtiff/tif_lzw.c:        if (free_entp->next < &sp->dec_codetab[0] ||
3rdparty/libtiff/tif_lzw.c:            free_entp->next >= &sp->dec_codetab[CSIZE]) {
3rdparty/libtiff/tif_lzw.c:                "Corrupted LZW table at scanline %d", tif->tif_row);
3rdparty/libtiff/tif_lzw.c:            maxcodep = sp->dec_codetab + nbitsmask;
3rdparty/libtiff/tif_lzw.c:                    "string: data probably corrupted at scanline %d",
3rdparty/libtiff/tif_lzw.c:    sp->enc_hashtab = (hash_t*) _TIFFmalloc(HSIZE*sizeof (hash_t));
3rdparty/libtiff/tif_lzw.c:    if (sp->enc_hashtab == NULL) {
3rdparty/libtiff/tif_lzw.c:                 "No space for LZW hash table");
3rdparty/libtiff/tif_lzw.c:    if( sp->enc_hashtab == NULL )
3rdparty/libtiff/tif_lzw.c:    cl_hash(sp);		/* clear hash table */
3rdparty/libtiff/tif_lzw.c: * code table is cleared when the compression ratio decreases,
3rdparty/libtiff/tif_lzw.c: * but after the table fills.  The variable-length output codes
3rdparty/libtiff/tif_lzw.c:        assert(sp->enc_hashtab != NULL);
3rdparty/libtiff/tif_lzw.c:        hp = &sp->enc_hashtab[h];
3rdparty/libtiff/tif_lzw.c:                hp = &sp->enc_hashtab[h];
3rdparty/libtiff/tif_lzw.c:         * New entry, emit code and add to table.
3rdparty/libtiff/tif_lzw.c:            /* table is full, emit clear code and reset */
3rdparty/libtiff/tif_lzw.c:                 * to be slipping, clear the hash table and
3rdparty/libtiff/tif_lzw.c: * Reset encoding hash table.
3rdparty/libtiff/tif_lzw.c:    register hash_t *hp = &sp->enc_hashtab[HSIZE-1];
3rdparty/libtiff/tif_lzw.c:    if (DecoderState(tif)->dec_codetab)
3rdparty/libtiff/tif_lzw.c:        _TIFFfree(DecoderState(tif)->dec_codetab);
3rdparty/libtiff/tif_lzw.c:    if (EncoderState(tif)->enc_hashtab)
3rdparty/libtiff/tif_lzw.c:        _TIFFfree(EncoderState(tif)->enc_hashtab);
3rdparty/libtiff/tif_lzw.c:    DecoderState(tif)->dec_codetab = NULL;
3rdparty/libtiff/tif_lzw.c:    EncoderState(tif)->enc_hashtab = NULL;
3rdparty/libtiff/tif_lzw.c: * provided that the above copyright notice and this paragraph are
3rdparty/libtiff/tif_lzw.c: * Local Variables:
3rdparty/libtiff/tif_version.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_version.c: * Local Variables:
3rdparty/libtiff/uvcode.h: * Local Variables:
3rdparty/libtiff/tif_fax3.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_fax3.c:    const unsigned char* bitmap;	/* bit reversal table */
3rdparty/libtiff/tif_fax3.c:    const TIFFFaxTabEnt* TabEnt
3rdparty/libtiff/tif_fax3.c:        TIFFGetBitRevTable(tif->tif_dir.td_fillorder != FILLORDER_LSB2MSB);
3rdparty/libtiff/tif_fax3.c:#define	unexpected(table, a0)	Fax3Unexpected(module, tif, sp->line, a0)
3rdparty/libtiff/tif_fax3.c: * Write a variable-length bit-value to
3rdparty/libtiff/tif_fax3.c:#define	DEBUG_COLOR(w) (tab == TIFFFaxWhiteCodes ? w "W" : w "B")
3rdparty/libtiff/tif_fax3.c: * appropriate table that holds the make-up and
3rdparty/libtiff/tif_fax3.c:putspan(TIFF* tif, int32 span, const tableentry* tab)
3rdparty/libtiff/tif_fax3.c:        const tableentry* te = &tab[63 + (2560>>6)];
3rdparty/libtiff/tif_fax3.c:        const tableentry* te = &tab[63 + (span>>6)];
3rdparty/libtiff/tif_fax3.c:    code = tab[span].code, length = tab[span].length;
3rdparty/libtiff/tif_fax3.c:    DEBUG_PRINT("  Term", tab[span].runlen);
3rdparty/libtiff/tif_fax3.c: * table.  The ``base'' of the bit string is supplied
3rdparty/libtiff/tif_fax3.c:        if (span > 8-n)		/* table value too generous */
3rdparty/libtiff/tif_fax3.c:        if (span > 8-n)		/* table value too generous */
3rdparty/libtiff/tif_fax3.c:static const tableentry horizcode =
3rdparty/libtiff/tif_fax3.c:static const tableentry passcode =
3rdparty/libtiff/tif_fax3.c:static const tableentry vcodes[7] = {
3rdparty/libtiff/tif_fax3.c: * Local Variables:
3rdparty/libtiff/tif_tile.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_tile.c: * Compute the # bytes in a variable length, row-aligned tile.
3rdparty/libtiff/tif_tile.c: * Local Variables:
3rdparty/libtiff/tiff.h: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tiff.h: * Some types as promoted in a variable argument list
3rdparty/libtiff/tiff.h:#define	TIFFTAG_IMAGEDESCRIPTION	270	/* info about image */
3rdparty/libtiff/tiff.h:#define	TIFFTAG_EXTRASAMPLES		338	/* !info about extra samples */
3rdparty/libtiff/tiff.h:#define	TIFFTAG_SMINSAMPLEVALUE		340	/* !variable MinSampleValue */
3rdparty/libtiff/tiff.h:#define	TIFFTAG_SMAXSAMPLEVALUE		341	/* !variable MaxSampleValue */
3rdparty/libtiff/tiff.h:#define	TIFFTAG_JPEGTABLES		347	/* %JPEG table stream */
3rdparty/libtiff/tiff.h:#define	TIFFTAG_JPEGDCTABLES		520	/* !DCT table offsets */
3rdparty/libtiff/tiff.h:#define TIFFTAG_IT8COLORTABLE		34022	/* LW colortable */
3rdparty/libtiff/tiff.h:#define TIFFTAG_IT8COLORCHARACTERIZATION 34029	/* color character. table */
3rdparty/libtiff/tiff.h:#define	TIFFTAG_FAXDCS			34911	/* encoded fax ses. params, Table 2/T.30 */
3rdparty/libtiff/tiff.h:#define TIFFTAG_INTEROPERABILITYIFD	40965	/* Pointer to Interoperability private directory */
3rdparty/libtiff/tiff.h:#define TIFFTAG_LINEARIZATIONTABLE	50712	/* &lookup table description */
3rdparty/libtiff/tiff.h:#define TIFFTAG_LENSINFO		50736	/* info about the lens */
3rdparty/libtiff/tiff.h:#define	TIFFTAG_JPEGTABLESMODE		65539	/* What to put in JPEGTables */
3rdparty/libtiff/tiff.h: * Local Variables:
3rdparty/libtiff/t4.h: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/t4.h: * of these tables it does not seem
3rdparty/libtiff/t4.h:typedef struct tableentry {
3rdparty/libtiff/t4.h:} tableentry;
3rdparty/libtiff/t4.h: * Note that these tables are ordered such that the
3rdparty/libtiff/t4.h: * index into the table is known to be either the
3rdparty/libtiff/t4.h:const tableentry TIFFFaxWhiteCodes[] = {
3rdparty/libtiff/t4.h:const tableentry TIFFFaxBlackCodes[] = {
3rdparty/libtiff/t4.h:extern const tableentry TIFFFaxWhiteCodes[];
3rdparty/libtiff/t4.h:extern const tableentry TIFFFaxBlackCodes[];
3rdparty/libtiff/t4.h: * Local Variables:
3rdparty/libtiff/tif_dir.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_dir.c:             * want to be able to open some of the damaged TIFF
3rdparty/libtiff/tif_dir.c:                tif->tif_postdecode = _TIFFSwab16BitData;
3rdparty/libtiff/tif_dir.c:                tif->tif_postdecode = _TIFFSwab24BitData;
3rdparty/libtiff/tif_dir.c:                tif->tif_postdecode = _TIFFSwab32BitData;
3rdparty/libtiff/tif_dir.c:                tif->tif_postdecode = _TIFFSwab64BitData;
3rdparty/libtiff/tif_dir.c:                tif->tif_postdecode = _TIFFSwab64BitData;
3rdparty/libtiff/tif_dir.c:            && tif->tif_postdecode == _TIFFSwab32BitData )
3rdparty/libtiff/tif_dir.c:            tif->tif_postdecode = _TIFFSwab16BitData;
3rdparty/libtiff/tif_dir.c:             && tif->tif_postdecode == _TIFFSwab64BitData )
3rdparty/libtiff/tif_dir.c:            tif->tif_postdecode = _TIFFSwab32BitData;
3rdparty/libtiff/tif_dir.c:         * table may then have tags that are valid for one file but not
3rdparty/libtiff/tif_dir.c:         * Consult info table to see if tag can be changed
3rdparty/libtiff/tif_dir.c:                 * tags.  The global tag information table may
3rdparty/libtiff/tif_dir.c:     * Hopefully TIFFDefaultDirectory() won't have done anything irreversable
3rdparty/libtiff/tif_dir.c:                TIFFSwabShort(&dircount);
3rdparty/libtiff/tif_dir.c:                TIFFSwabLong(&nextdir32);
3rdparty/libtiff/tif_dir.c:                TIFFSwabLong8(&dircount64);
3rdparty/libtiff/tif_dir.c:                TIFFSwabLong8(nextdir);
3rdparty/libtiff/tif_dir.c:                TIFFSwabShort(&dircount);
3rdparty/libtiff/tif_dir.c:                TIFFSwabLong(&nextdir32);
3rdparty/libtiff/tif_dir.c:                TIFFSwabLong8(&dircount64);
3rdparty/libtiff/tif_dir.c:                TIFFSwabLong8(nextdir);
3rdparty/libtiff/tif_dir.c:     * to unlink and nab the offset of the link
3rdparty/libtiff/tif_dir.c:            TIFFSwabLong(&nextdir32);
3rdparty/libtiff/tif_dir.c:            TIFFSwabLong8(&nextdir);
3rdparty/libtiff/tif_dir.c: * Local Variables:
3rdparty/libtiff/tif_error.c: * that (i) the above copyright notices and this permission notice appear in
3rdparty/libtiff/tif_error.c: * Local Variables:
3rdparty/tbb/android_additional.h:   int cpusAvailable = 0;
3rdparty/tbb/android_additional.h:        ++cpusAvailable;
3rdparty/tbb/android_additional.h:          cpusAvailable += rend - rstart + 1;
3rdparty/tbb/android_additional.h:   return cpusAvailable ? cpusAvailable : 1;
3rdparty/tbb/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4702)
3rdparty/tbb/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wshadow)
3rdparty/tbb/CMakeLists.txt:#ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4702)
3rdparty/tbb/CMakeLists.txt:#ocv_warnings_disable(CMAKE_CXX_FLAGS -Wshadow)
3rdparty/tbb/CMakeLists.txt:#ocv_warnings_disable(CMAKE_CXX_FLAGS -Wshadow)
3rdparty/tbb/CMakeLists.txt:#ocv_warnings_disable(CMAKE_CXX_FLAGS -Wshadow)
3rdparty/tbb/CMakeLists.txt:  ocv_warnings_disable(CMAKE_CXX_FLAGS -Wmissing-prototypes)
3rdparty/tbb/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wundef -Wmissing-declarations)
3rdparty/libjasper/jpc_mqenc.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_mqenc.h:#define	JPC_MQENC_PTERM		1	/* predictable termination */
3rdparty/libjasper/jpc_mqenc.h:    /* The byte buffer (i.e., the B variable in the standard). */
3rdparty/libjasper/jpc_mqcod.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_mqcod.h:    /* The most probable symbol (MPS). */
3rdparty/libjasper/jpc_mqcod.h: * MQ coder state table entry.
3rdparty/libjasper/jpc_mqcod.h:/* The state table for the MQ coder. */
3rdparty/libjasper/jas_getopt.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t2enc.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_debug.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_bs.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_tagtree.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_tagtree.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jpc_tagtree.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jpc_tagtree.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jpc_tagtree.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_tagtree.h:/* The maximum allowable depth for a tag tree. */
3rdparty/libjasper/jp2_enc.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jp2_enc.c:            abort();
3rdparty/libjasper/jp2_enc.c:            abort();
3rdparty/libjasper/jp2_enc.c:            abort();
3rdparty/libjasper/jp2_enc.c:        abort();
3rdparty/libjasper/jp2_enc.c:    abort();
3rdparty/libjasper/jp2_enc.c:    abort();
3rdparty/libjasper/jp2_enc.c:        abort();
3rdparty/libjasper/jpc_fix.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_fix.h:  type must be capable of representing values from -(2^31) to 2^31-1
3rdparty/libjasper/jpc_fix.h:  This type should be capable of representing values from -(2^63) to 2^63-1
3rdparty/libjasper/jpc_fix.h:* parameters given above.  (Too bad C does not support templates, eh?)
3rdparty/libjasper/jpc_fix.h:#define	jpc_fix_abs(x)		JAS_FIX_ABS(jpc_fix_t, JPC_FIX_FRACBITS, x)
3rdparty/libjasper/README:additional information about the software.
3rdparty/libjasper/jpc_qmfb.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_qmfb.c:            abort();
3rdparty/libjasper/jpc_qmfb.c:            abort();
3rdparty/libjasper/jpc_qmfb.c:            abort();
3rdparty/libjasper/jpc_qmfb.c:            abort();
3rdparty/libjasper/jpc_qmfb.c:            abort();
3rdparty/libjasper/jpc_qmfb.c:            abort();
3rdparty/libjasper/jpc_qmfb.c:            abort();
3rdparty/libjasper/jpc_qmfb.c:            abort();
3rdparty/libjasper/jp2_dec.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_util.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_version.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_version.h:    "For more information about this software, please visit the following\n" \
3rdparty/libjasper/jasper/jas_debug.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_image.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_image.h:/* Clear the table of image formats. */
3rdparty/libjasper/jasper/jas_image.h:/* Add entry to table of image formats. */
3rdparty/libjasper/jasper/jas_config.h:/* Have variable length arrays */
3rdparty/libjasper/jasper/jas_seq.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_tmr.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_config2.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_cm.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_getopt.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_init.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_types.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_string.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_tvp.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_malloc.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_fix.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_fix.h:/* Calculate the absolute value of a fixed-point number. */
3rdparty/libjasper/jasper/jasper.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_icc.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_icc.h:#define	JAS_ICC_CLAS_ABS	0x61627374 /* abstract */
3rdparty/libjasper/jasper/jas_icc.h:#define	JAS_ICC_REFCOLORSPC_LAB		0x4c616220 /* CIE Lab */
3rdparty/libjasper/jasper/jas_icc.h:#define	JAS_ICC_INTENT_ABS	3 /* absolute colorimetric */
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint32_t uclen; /* Unicode localizable description count */
3rdparty/libjasper/jasper/jas_icc.h:    uchar *ucdata; /* Unicode localizable description */
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint8_t maclen; /* Localizable Macintosh description count */
3rdparty/libjasper/jasper/jas_icc.h:    uchar macdata[69]; /* Localizable Macintosh description */
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint16_t numintabents;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint8_t **intabs;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint8_t *intabsbuf;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint16_t numouttabents;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint8_t **outtabs;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint8_t *outtabsbuf;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint16_t numintabents;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint16_t **intabs;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint16_t *intabsbuf;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint16_t numouttabents;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint16_t **outtabs;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccuint16_t *outtabsbuf;
3rdparty/libjasper/jasper/jas_icc.h:} jas_iccattrtab_t;
3rdparty/libjasper/jasper/jas_icc.h:typedef struct jas_icctagtabent_s {
3rdparty/libjasper/jasper/jas_icc.h:    struct jas_icctagtabent_s *first;
3rdparty/libjasper/jasper/jas_icc.h:} jas_icctagtabent_t;
3rdparty/libjasper/jasper/jas_icc.h:    jas_icctagtabent_t *ents;
3rdparty/libjasper/jasper/jas_icc.h:} jas_icctagtab_t;
3rdparty/libjasper/jasper/jas_icc.h:    jas_icctagtab_t tagtab;
3rdparty/libjasper/jasper/jas_icc.h:    jas_iccattrtab_t *attrtab;
3rdparty/libjasper/jasper/jas_icc.h:void jas_iccattrtab_dump(jas_iccattrtab_t *attrtab, FILE *out);
3rdparty/libjasper/jasper/jas_config.h.in:/* Have variable length arrays */
3rdparty/libjasper/jasper/jas_math.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_math.h:/* Compute the absolute value. */
3rdparty/libjasper/jasper/jas_stream.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jasper/jas_stream.h:/* On most UNIX systems, we probably need to define O_BINARY ourselves. */
3rdparty/libjasper/jasper/jas_stream.h:    /* Is the buffer growable? */
3rdparty/libjasper/jasper/jas_stream.h:    int growable_;
3rdparty/libjasper/jasper/jas_stream.h:int jas_stream_isseekable(jas_stream_t *stream);
3rdparty/libjasper/jasper/jas_stream.h:  The specified stream must be seekable. */
3rdparty/libjasper/jasper/jas_stream.h:directly, you will die a horrible, miserable, and painful death! */
3rdparty/libjasper/jpc_cs.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_cs.h:    /* The code stream capabilities. */
3rdparty/libjasper/jpc_cs.h:#define	JPC_COX_RESET	0x02 /* Reset context probabilities. */
3rdparty/libjasper/jpc_cs.h:#define	JPC_COX_PTERM	0x10 /* Predictable termination. */
3rdparty/libjasper/jpc_cs.h:/* An alias for the above type. */
3rdparty/libjasper/jpc_math.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_math.c:  allowable range for x is slightly different. */
3rdparty/libjasper/jpc_tsfb.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_enc.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_enc.h:/* The number of bits used in various lookup tables. */
3rdparty/libjasper/jpc_enc.h:      segmentation symbols, causal, reset probability models). */
3rdparty/libjasper/jpc_enc.h:    jpc_fix_t absstepsize;
3rdparty/libjasper/jpc_enc.h:    /* The number of bytes available for the main body of the code stream. */
3rdparty/libjasper/jpc_mqdec.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_mqdec.h:/* Decode a symbol (assuming an unskewed probability distribution). */
3rdparty/libjasper/jpc_t2dec.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t2dec.c:    /* Avoid compiler warning about possible use of uninitialized
3rdparty/libjasper/jpc_t2dec.c:      variable. */
3rdparty/libjasper/jas_cm.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_cm.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jas_cm.c:        abort();
3rdparty/libjasper/jas_cm.c:    abort();
3rdparty/libjasper/jas_cm.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jas_cm.c:            abort();
3rdparty/libjasper/jas_cm.c:            abort();
3rdparty/libjasper/jas_cm.c:        abort();
3rdparty/libjasper/copyright:1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_tsfb.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_dec.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_dec.h:/* PPM/PPT marker segment table entry. */
3rdparty/libjasper/jpc_dec.h:} jpc_ppxstabent_t;
3rdparty/libjasper/jpc_dec.h:/* PPM/PPT marker segment table. */
3rdparty/libjasper/jpc_dec.h:    /* The table entries. */
3rdparty/libjasper/jpc_dec.h:    jpc_ppxstabent_t **ents;
3rdparty/libjasper/jpc_dec.h:} jpc_ppxstab_t;
3rdparty/libjasper/jpc_dec.h:    /* The absolute quantizer step size. */
3rdparty/libjasper/jpc_dec.h:    jpc_fix_t absstepsize;
3rdparty/libjasper/jpc_dec.h:    jpc_ppxstab_t *pptstab;
3rdparty/libjasper/jpc_dec.h:    jpc_ppxstab_t *ppmstab;
3rdparty/libjasper/jpc_mct.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t1dec.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_flt.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_mct.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/LICENSE:1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_enc.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_enc.c:static uint_fast32_t jpc_abstorelstepsize(jpc_fix_t absdelta, int scaleexpn);
3rdparty/libjasper/jpc_enc.c:static uint_fast32_t jpc_abstorelstepsize(jpc_fix_t absdelta, int scaleexpn)
3rdparty/libjasper/jpc_enc.c:    if (absdelta < 0) {
3rdparty/libjasper/jpc_enc.c:        abort();
3rdparty/libjasper/jpc_enc.c:    p = jpc_firstone(absdelta) - JPC_FIX_FRACBITS;
3rdparty/libjasper/jpc_enc.c:    n = 11 - jpc_firstone(absdelta);
3rdparty/libjasper/jpc_enc.c:    mant = ((n < 0) ? (absdelta >> (-n)) : (absdelta << n)) & 0x7ff;
3rdparty/libjasper/jpc_enc.c:        abort();
3rdparty/libjasper/jpc_enc.c:jas_taginfo_t prgordtab[] = {
3rdparty/libjasper/jpc_enc.c:jas_taginfo_t modetab[] = {
3rdparty/libjasper/jpc_enc.c:    bool enablemct;
3rdparty/libjasper/jpc_enc.c:    enablemct = true;
3rdparty/libjasper/jpc_enc.c:            if ((tagid = jas_taginfo_nonull(jas_taginfos_lookup(modetab,
3rdparty/libjasper/jpc_enc.c:            if ((tagid = jas_taginfo_nonull(jas_taginfos_lookup(prgordtab,
3rdparty/libjasper/jpc_enc.c:            enablemct = false;
3rdparty/libjasper/jpc_enc.c:    if (mctvalid && enablemct && jas_clrspc_fam(jas_image_clrspc(image)) != JAS_CLRSPC_FAM_RGB) {
3rdparty/libjasper/jpc_enc.c:    if (mctvalid && enablemct && jas_clrspc_fam(jas_image_clrspc(image)) == JAS_CLRSPC_FAM_RGB) {
3rdparty/libjasper/jpc_enc.c:        jas_eprintf("warning: specified rate is unreasonably large (%lu > %lu)\n", (unsigned long) cp->totalsize, (unsigned long) cp->rawsize);
3rdparty/libjasper/jpc_enc.c:    jpc_fix_t absstepsize;
3rdparty/libjasper/jpc_enc.c:        abort();
3rdparty/libjasper/jpc_enc.c:                absstepsize = jpc_fix_div(jpc_inttofix(1 <<
3rdparty/libjasper/jpc_enc.c:                absstepsize = jpc_inttofix(1);
3rdparty/libjasper/jpc_enc.c:              jpc_abstorelstepsize(absstepsize,
3rdparty/libjasper/jpc_enc.c:    int absbandno;
3rdparty/libjasper/jpc_enc.c:            abort();
3rdparty/libjasper/jpc_enc.c:            absbandno = 0;
3rdparty/libjasper/jpc_enc.c:                    absbandno += rlvlno ? 3 : 1;
3rdparty/libjasper/jpc_enc.c:                        ++absbandno;
3rdparty/libjasper/jpc_enc.c:                            mag = abs(jas_matrix_get(band->data, y, x));
3rdparty/libjasper/jpc_enc.c:                        band->absstepsize = jpc_fix_div(jpc_inttofix(1
3rdparty/libjasper/jpc_enc.c:                        band->absstepsize = jpc_inttofix(1);
3rdparty/libjasper/jpc_enc.c:                    band->stepsize = jpc_abstorelstepsize(
3rdparty/libjasper/jpc_enc.c:                      band->absstepsize, cp->ccps[cmptno].prec +
3rdparty/libjasper/jpc_enc.c:                        jpc_quantize(band->data, band->absstepsize);
3rdparty/libjasper/jpc_enc.c:                    comp->stepsizes[absbandno] = band->stepsize;
3rdparty/libjasper/jpc_enc.c:                    ++absbandno;
3rdparty/libjasper/jpc_enc.c:    abort();
3rdparty/libjasper/jpc_enc.c:            abort();
3rdparty/libjasper/jpc_enc.c:                abort();
3rdparty/libjasper/jpc_enc.c:    /* Retrieve information about the various bands. */
3rdparty/libjasper/jpc_enc.c:    band->absstepsize = 0;
3rdparty/libjasper/jpc_mqenc.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_mqenc.c:        abort();
3rdparty/libjasper/jpc_mqdec.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t1enc.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS -Wno-implicit-function-declaration -Wno-uninitialized -Wmissing-prototypes
3rdparty/libjasper/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS -Wunused-parameter) # clang
3rdparty/libjasper/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS /wd4013 /wd4018 /wd4101 /wd4244 /wd4267 /wd4715) # vs2005
3rdparty/libjasper/changelog:jasper (1.900.1-13) unstable; urgency=high
3rdparty/libjasper/changelog:    exploitable via specially crafted input files (Closes: #652649)
3rdparty/libjasper/changelog:jasper (1.900.1-12) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.900.1-11) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.900.1-10) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.900.1-9) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.900.1-8) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.900.1-7) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.900.1-6.1) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.900.1-6) unstable; urgency=low
3rdparty/libjasper/changelog:    but 1.900.1-5 wasn't available anymore. (Closes: #514296, #528543)
3rdparty/libjasper/changelog:jasper (1.900.1-5.1) unstable; urgency=low
3rdparty/libjasper/changelog: -- Pierre Habouzit <madcoder@debian.org>  Sun, 12 Oct 2008 21:40:59 +0200
3rdparty/libjasper/changelog:jasper (1.900.1-5) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.900.1-4) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.900.1-3) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.701.0-2) unstable; urgency=low
3rdparty/libjasper/changelog:  * Added man pages for the executables (Closes: #250077)
3rdparty/libjasper/changelog:jasper (1.701.0-1) unstable; urgency=low
3rdparty/libjasper/changelog:jasper (1.700.2-1) unstable; urgency=low
3rdparty/libjasper/jpc_cs.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_cs.c:/* Marker segment table entry. */
3rdparty/libjasper/jpc_cs.c:} jpc_mstabent_t;
3rdparty/libjasper/jpc_cs.c:static jpc_mstabent_t *jpc_mstab_lookup(int id);
3rdparty/libjasper/jpc_cs.c:static jpc_mstabent_t jpc_mstab[] = {
3rdparty/libjasper/jpc_cs.c:    jpc_mstabent_t *mstabent;
3rdparty/libjasper/jpc_cs.c:    mstabent = jpc_mstab_lookup(ms->id);
3rdparty/libjasper/jpc_cs.c:    ms->ops = &mstabent->ops;
3rdparty/libjasper/jpc_cs.c:    jpc_mstabent_t *mstabent;
3rdparty/libjasper/jpc_cs.c:    mstabent = jpc_mstab_lookup(ms->id);
3rdparty/libjasper/jpc_cs.c:    ms->ops = &mstabent->ops;
3rdparty/libjasper/jpc_cs.c:    jpc_mstabent_t *mstabent;
3rdparty/libjasper/jpc_cs.c:    mstabent = jpc_mstab_lookup(ms->id);
3rdparty/libjasper/jpc_cs.c:    fprintf(out, "type = 0x%04x (%s);", (unsigned)ms->id, mstabent->name);
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variable. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variable. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variable. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    int printable;
3rdparty/libjasper/jpc_cs.c:    printable = 1;
3rdparty/libjasper/jpc_cs.c:            printable = 0;
3rdparty/libjasper/jpc_cs.c:    if (printable) {
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jpc_cs.c:static jpc_mstabent_t *jpc_mstab_lookup(int id)
3rdparty/libjasper/jpc_cs.c:    jpc_mstabent_t *mstabent;
3rdparty/libjasper/jpc_cs.c:    for (mstabent = jpc_mstab;; ++mstabent) {
3rdparty/libjasper/jpc_cs.c:        if (mstabent->id == id || mstabent->id < 0) {
3rdparty/libjasper/jpc_cs.c:            return mstabent;
3rdparty/libjasper/jpc_t2enc.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t2cod.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_seq.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_seq.c:        abort();
3rdparty/libjasper/jas_tvp.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_version.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_malloc.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_malloc.c:abort();
3rdparty/libjasper/jas_stream.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_stream.c:        obj->growable_ = 1;
3rdparty/libjasper/jas_stream.c:        obj->growable_ = 0;
3rdparty/libjasper/jas_stream.c:    /* Eliminate compiler warning about unused variable. */
3rdparty/libjasper/jas_stream.c:    terminates abnormally. */
3rdparty/libjasper/jas_stream.c:      has specified the binary mode flag.  Arguably, the caller ought to
3rdparty/libjasper/jas_stream.c:int jas_stream_isseekable(jas_stream_t *stream)
3rdparty/libjasper/jas_stream.c:                abort();
3rdparty/libjasper/jas_stream.c:    if (newpos > m->bufsize_ && m->growable_) {
3rdparty/libjasper/jas_stream.c:        abort();
3rdparty/libjasper/jas_init.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_init.c:/* Initialize the image format table. */
3rdparty/libjasper/jas_init.c:    jas_image_addfmt(fmtid, "pnm", "pnm", "Portable Graymap/Pixmap (PNM)",
3rdparty/libjasper/jas_init.c:    jas_image_addfmt(fmtid, "pnm", "pgm", "Portable Graymap/Pixmap (PNM)",
3rdparty/libjasper/jas_init.c:    jas_image_addfmt(fmtid, "pnm", "ppm", "Portable Graymap/Pixmap (PNM)",
3rdparty/libjasper/jas_init.c:    at least one memory allocation is performed.  This is desirable
3rdparty/libjasper/jpc_t2cod.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t2cod.h:    /* The progression to use in the absense of explicit specification. */
3rdparty/libjasper/jpc_dec.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_dec.c:} jpc_dec_mstabent_t;
3rdparty/libjasper/jpc_dec.c:jpc_ppxstab_t *jpc_ppxstab_create(void);
3rdparty/libjasper/jpc_dec.c:void jpc_ppxstab_destroy(jpc_ppxstab_t *tab);
3rdparty/libjasper/jpc_dec.c:int jpc_ppxstab_grow(jpc_ppxstab_t *tab, int maxents);
3rdparty/libjasper/jpc_dec.c:int jpc_ppxstab_insert(jpc_ppxstab_t *tab, jpc_ppxstabent_t *ent);
3rdparty/libjasper/jpc_dec.c:jpc_streamlist_t *jpc_ppmstabtostreams(jpc_ppxstab_t *tab);
3rdparty/libjasper/jpc_dec.c:int jpc_pptstabwrite(jas_stream_t *out, jpc_ppxstab_t *tab);
3rdparty/libjasper/jpc_dec.c:jpc_ppxstabent_t *jpc_ppxstabent_create(void);
3rdparty/libjasper/jpc_dec.c:void jpc_ppxstabent_destroy(jpc_ppxstabent_t *ent);
3rdparty/libjasper/jpc_dec.c:static void jpc_dequantize(jas_matrix_t *x, jpc_fix_t absstepsize);
3rdparty/libjasper/jpc_dec.c:static jpc_fix_t jpc_calcabsstepsize(int stepsize, int numbits);
3rdparty/libjasper/jpc_dec.c:static jpc_dec_mstabent_t *jpc_dec_mstab_lookup(uint_fast16_t id);
3rdparty/libjasper/jpc_dec.c:jpc_dec_mstabent_t jpc_dec_mstab[] = {
3rdparty/libjasper/jpc_dec.c:* Code for table-driven code stream decoder.
3rdparty/libjasper/jpc_dec.c:static jpc_dec_mstabent_t *jpc_dec_mstab_lookup(uint_fast16_t id)
3rdparty/libjasper/jpc_dec.c:    jpc_dec_mstabent_t *mstabent;
3rdparty/libjasper/jpc_dec.c:    for (mstabent = jpc_dec_mstab; mstabent->id != 0; ++mstabent) {
3rdparty/libjasper/jpc_dec.c:        if (mstabent->id == id) {
3rdparty/libjasper/jpc_dec.c:    return mstabent;
3rdparty/libjasper/jpc_dec.c:    jpc_dec_mstabent_t *mstabent;
3rdparty/libjasper/jpc_dec.c:        mstabent = jpc_dec_mstab_lookup(ms->id);
3rdparty/libjasper/jpc_dec.c:        assert(mstabent);
3rdparty/libjasper/jpc_dec.c:        if (!(dec->state & mstabent->validstates)) {
3rdparty/libjasper/jpc_dec.c:        if (mstabent->action) {
3rdparty/libjasper/jpc_dec.c:            ret = (*mstabent->action)(dec, ms);
3rdparty/libjasper/jpc_dec.c:    /* Eliminate warnings about unused variables. */
3rdparty/libjasper/jpc_dec.c:        if (dec->ppmstab) {
3rdparty/libjasper/jpc_dec.c:            if (!(dec->pkthdrstreams = jpc_ppmstabtostreams(dec->ppmstab))) {
3rdparty/libjasper/jpc_dec.c:                abort();
3rdparty/libjasper/jpc_dec.c:            jpc_ppxstab_destroy(dec->ppmstab);
3rdparty/libjasper/jpc_dec.c:            dec->ppmstab = 0;
3rdparty/libjasper/jpc_dec.c:    tile->pptstab = 0;
3rdparty/libjasper/jpc_dec.c:    /* Eliminate compiler warnings about unused variables. */
3rdparty/libjasper/jpc_dec.c:    if (tile->pptstab) {
3rdparty/libjasper/jpc_dec.c:        if (jpc_pptstabwrite(tile->pkthdrstream, tile->pptstab)) {
3rdparty/libjasper/jpc_dec.c:        jpc_ppxstab_destroy(tile->pptstab);
3rdparty/libjasper/jpc_dec.c:        tile->pptstab = 0;
3rdparty/libjasper/jpc_dec.c:                band->absstepsize = jpc_calcabsstepsize(band->stepsize,
3rdparty/libjasper/jpc_dec.c:    if (tile->pptstab) {
3rdparty/libjasper/jpc_dec.c:        jpc_ppxstab_destroy(tile->pptstab);
3rdparty/libjasper/jpc_dec.c:        tile->pptstab = 0;
3rdparty/libjasper/jpc_dec.c:                    jpc_dequantize(band->data, band->absstepsize);
3rdparty/libjasper/jpc_dec.c:    /* Eliminate compiler warnings about unused variables. */
3rdparty/libjasper/jpc_dec.c:        tile->pptstab = 0;
3rdparty/libjasper/jpc_dec.c:    jpc_ppxstabent_t *ppmstabent;
3rdparty/libjasper/jpc_dec.c:    if (!dec->ppmstab) {
3rdparty/libjasper/jpc_dec.c:        if (!(dec->ppmstab = jpc_ppxstab_create())) {
3rdparty/libjasper/jpc_dec.c:    if (!(ppmstabent = jpc_ppxstabent_create())) {
3rdparty/libjasper/jpc_dec.c:    ppmstabent->ind = ppm->ind;
3rdparty/libjasper/jpc_dec.c:    ppmstabent->data = ppm->data;
3rdparty/libjasper/jpc_dec.c:    ppmstabent->len = ppm->len;
3rdparty/libjasper/jpc_dec.c:    if (jpc_ppxstab_insert(dec->ppmstab, ppmstabent)) {
3rdparty/libjasper/jpc_dec.c:    jpc_ppxstabent_t *pptstabent;
3rdparty/libjasper/jpc_dec.c:    if (!tile->pptstab) {
3rdparty/libjasper/jpc_dec.c:        if (!(tile->pptstab = jpc_ppxstab_create())) {
3rdparty/libjasper/jpc_dec.c:    if (!(pptstabent = jpc_ppxstabent_create())) {
3rdparty/libjasper/jpc_dec.c:    pptstabent->ind = ppt->ind;
3rdparty/libjasper/jpc_dec.c:    pptstabent->data = ppt->data;
3rdparty/libjasper/jpc_dec.c:    pptstabent->len = ppt->len;
3rdparty/libjasper/jpc_dec.c:    if (jpc_ppxstab_insert(tile->pptstab, pptstabent)) {
3rdparty/libjasper/jpc_dec.c:    /* Eliminate compiler warnings about unused variables. */
3rdparty/libjasper/jpc_dec.c:    /* Eliminate compiler warnings about unused variables. */
3rdparty/libjasper/jpc_dec.c:    /* Eliminate compiler warnings about unused variables. */
3rdparty/libjasper/jpc_dec.c:    /* Eliminate compiler warnings about unused variables. */
3rdparty/libjasper/jpc_dec.c:static jpc_fix_t jpc_calcabsstepsize(int stepsize, int numbits)
3rdparty/libjasper/jpc_dec.c:    jpc_fix_t absstepsize;
3rdparty/libjasper/jpc_dec.c:    absstepsize = jpc_inttofix(1);
3rdparty/libjasper/jpc_dec.c:    absstepsize |= (n >= 0) ? (JPC_QCX_GETMANT(stepsize) << n) :
3rdparty/libjasper/jpc_dec.c:    absstepsize = (n >= 0) ? (absstepsize << n) : (absstepsize >> (-n));
3rdparty/libjasper/jpc_dec.c:    return absstepsize;
3rdparty/libjasper/jpc_dec.c:static void jpc_dequantize(jas_matrix_t *x, jpc_fix_t absstepsize)
3rdparty/libjasper/jpc_dec.c:    assert(absstepsize >= 0);
3rdparty/libjasper/jpc_dec.c:    if (absstepsize == jpc_inttofix(1)) {
3rdparty/libjasper/jpc_dec.c:                t = jpc_fix_mul(t, absstepsize);
3rdparty/libjasper/jpc_dec.c:    dec->ppmstab = 0;
3rdparty/libjasper/jpc_dec.c:        abort();
3rdparty/libjasper/jpc_dec.c:jpc_ppxstab_t *jpc_ppxstab_create()
3rdparty/libjasper/jpc_dec.c:    jpc_ppxstab_t *tab;
3rdparty/libjasper/jpc_dec.c:    if (!(tab = jas_malloc(sizeof(jpc_ppxstab_t)))) {
3rdparty/libjasper/jpc_dec.c:    tab->numents = 0;
3rdparty/libjasper/jpc_dec.c:    tab->maxents = 0;
3rdparty/libjasper/jpc_dec.c:    tab->ents = 0;
3rdparty/libjasper/jpc_dec.c:    return tab;
3rdparty/libjasper/jpc_dec.c:void jpc_ppxstab_destroy(jpc_ppxstab_t *tab)
3rdparty/libjasper/jpc_dec.c:    for (i = 0; i < tab->numents; ++i) {
3rdparty/libjasper/jpc_dec.c:        jpc_ppxstabent_destroy(tab->ents[i]);
3rdparty/libjasper/jpc_dec.c:    if (tab->ents) {
3rdparty/libjasper/jpc_dec.c:        jas_free(tab->ents);
3rdparty/libjasper/jpc_dec.c:    jas_free(tab);
3rdparty/libjasper/jpc_dec.c:int jpc_ppxstab_grow(jpc_ppxstab_t *tab, int maxents)
3rdparty/libjasper/jpc_dec.c:    jpc_ppxstabent_t **newents;
3rdparty/libjasper/jpc_dec.c:    if (tab->maxents < maxents) {
3rdparty/libjasper/jpc_dec.c:        newents = jas_realloc2(tab->ents, maxents, sizeof(jpc_ppxstabent_t *));
3rdparty/libjasper/jpc_dec.c:        tab->ents = newents;
3rdparty/libjasper/jpc_dec.c:        tab->maxents = maxents;
3rdparty/libjasper/jpc_dec.c:int jpc_ppxstab_insert(jpc_ppxstab_t *tab, jpc_ppxstabent_t *ent)
3rdparty/libjasper/jpc_dec.c:    for (i = 0; i < tab->numents; ++i) {
3rdparty/libjasper/jpc_dec.c:        if (tab->ents[i]->ind > ent->ind) {
3rdparty/libjasper/jpc_dec.c:    if (tab->numents >= tab->maxents) {
3rdparty/libjasper/jpc_dec.c:        if (jpc_ppxstab_grow(tab, tab->maxents + 128)) {
3rdparty/libjasper/jpc_dec.c:    for (i = tab->numents; i > inspt; --i) {
3rdparty/libjasper/jpc_dec.c:        tab->ents[i] = tab->ents[i - 1];
3rdparty/libjasper/jpc_dec.c:    tab->ents[i] = ent;
3rdparty/libjasper/jpc_dec.c:    ++tab->numents;
3rdparty/libjasper/jpc_dec.c:jpc_streamlist_t *jpc_ppmstabtostreams(jpc_ppxstab_t *tab)
3rdparty/libjasper/jpc_dec.c:    jpc_ppxstabent_t *ent;
3rdparty/libjasper/jpc_dec.c:    if (!tab->numents) {
3rdparty/libjasper/jpc_dec.c:    ent = tab->ents[entno];
3rdparty/libjasper/jpc_dec.c:                if (++entno >= tab->numents) {
3rdparty/libjasper/jpc_dec.c:                ent = tab->ents[entno];
3rdparty/libjasper/jpc_dec.c:            if (++entno >= tab->numents) {
3rdparty/libjasper/jpc_dec.c:            ent = tab->ents[entno];
3rdparty/libjasper/jpc_dec.c:int jpc_pptstabwrite(jas_stream_t *out, jpc_ppxstab_t *tab)
3rdparty/libjasper/jpc_dec.c:    jpc_ppxstabent_t *ent;
3rdparty/libjasper/jpc_dec.c:    for (i = 0; i < tab->numents; ++i) {
3rdparty/libjasper/jpc_dec.c:        ent = tab->ents[i];
3rdparty/libjasper/jpc_dec.c:jpc_ppxstabent_t *jpc_ppxstabent_create()
3rdparty/libjasper/jpc_dec.c:    jpc_ppxstabent_t *ent;
3rdparty/libjasper/jpc_dec.c:    if (!(ent = jas_malloc(sizeof(jpc_ppxstabent_t)))) {
3rdparty/libjasper/jpc_dec.c:void jpc_ppxstabent_destroy(jpc_ppxstabent_t *ent)
3rdparty/libjasper/jas_tmr.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_tmr.c:        abort();
3rdparty/libjasper/jas_tmr.c:        abort();
3rdparty/libjasper/jas_tmr.c:        abort();
3rdparty/libjasper/jas_tmr.c:        abort();
3rdparty/libjasper/jpc_t1cod.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t1cod.h:/* The number of bits used to index into various lookup tables. */
3rdparty/libjasper/jpc_t1cod.h:/* These lookup tables are used by various macros/functions. */
3rdparty/libjasper/jpc_t1cod.h:/* Do not access these lookup tables directly. */
3rdparty/libjasper/jpc_t1cod.h:/* Arithmetic shift right (with ability to shift left also). */
3rdparty/libjasper/jpc_t1cod.h:/* Initialize the lookup tables used by the codec. */
3rdparty/libjasper/jp2_cod.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jp2_cod.h:    /* The length of the box including the (variable-length) header. */
3rdparty/libjasper/jas_string.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_string.c:  not-always-available) strdup function. */
3rdparty/libjasper/jp2_cod.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jp2_cod.c:    abort();
3rdparty/libjasper/jp2_cod.c:    abort();
3rdparty/libjasper/jp2_cod.c:    /* Eliminate compiler warning about unused variables. */
3rdparty/libjasper/jp2_cod.c:/* Eliminate warning about unused variable. */
3rdparty/libjasper/jpc_math.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_image.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_image.c:            abort();
3rdparty/libjasper/jas_image.c:            abort();
3rdparty/libjasper/jas_image.c:        abort();
3rdparty/libjasper/jas_image.c:        abort();
3rdparty/libjasper/jpc_cod.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t1enc.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t1enc.c:                                v = abs(jas_matrix_get(cblk->data, i, j));
3rdparty/libjasper/jpc_t1enc.c:          jpc_fixtodbl(band->absstepsize) * jpc_fixtodbl(band->absstepsize) *
3rdparty/libjasper/jpc_t1enc.c:                abort();
3rdparty/libjasper/jpc_t1enc.c:        v = (abs(*(dp)) & (one)) ? 1 : 0; \
3rdparty/libjasper/jpc_t1enc.c:            *(nmsedec) += JPC_GETSIGNMSEDEC(abs(*(dp)), (bitpos) + JPC_NUMEXTRABITS); \
3rdparty/libjasper/jpc_t1enc.c:        v = (abs(*(dp)) & (one)) ? 1 : 0; \
3rdparty/libjasper/jpc_t1enc.c:            *(nmsedec) += JPC_GETSIGNMSEDEC(abs(*(dp)), (bitpos) + JPC_NUMEXTRABITS); \
3rdparty/libjasper/jpc_t1enc.c:        *(nmsedec) += JPC_GETREFNMSEDEC(abs(d), (bitpos) + JPC_NUMEXTRABITS); \
3rdparty/libjasper/jpc_t1enc.c:        v = (abs(d) & (one)) ? 1 : 0; \
3rdparty/libjasper/jpc_t1enc.c:        *(nmsedec) += JPC_GETREFNMSEDEC(abs(d), (bitpos) + JPC_NUMEXTRABITS); \
3rdparty/libjasper/jpc_t1enc.c:        v = (abs(d) & (one)) ? 1 : 0; \
3rdparty/libjasper/jpc_t1enc.c:#define	clnpass_step(fp, frowstep, dp, bitpos, one, orient, nmsedec, mqenc, label1, label2, vcausalflag) \
3rdparty/libjasper/jpc_t1enc.c:label1 \
3rdparty/libjasper/jpc_t1enc.c:        v = (abs(*(dp)) & (one)) ? 1 : 0; \
3rdparty/libjasper/jpc_t1enc.c:label2 \
3rdparty/libjasper/jpc_t1enc.c:            *(nmsedec) += JPC_GETSIGNMSEDEC(abs(*(dp)), (bitpos) + JPC_NUMEXTRABITS); \
3rdparty/libjasper/jpc_t1enc.c:                    v = (abs(*dp) & one) ? 1 : 0;
3rdparty/libjasper/jas_icc.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_icc.c:static int jas_iccprof_gettagtab(jas_stream_t *in, jas_icctagtab_t *tagtab);
3rdparty/libjasper/jas_icc.c:static void jas_iccprof_sorttagtab(jas_icctagtab_t *tagtab);
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_lookup(jas_iccattrtab_t *attrtab, jas_iccuint32_t name);
3rdparty/libjasper/jas_icc.c:static jas_iccattrtab_t *jas_iccattrtab_copy(jas_iccattrtab_t *attrtab);
3rdparty/libjasper/jas_icc.c:static int jas_icctagtabent_cmp(const void *src, const void *dst);
3rdparty/libjasper/jas_icc.c:static jas_iccattrtab_t *jas_iccattrtab_create(void);
3rdparty/libjasper/jas_icc.c:static void jas_iccattrtab_destroy(jas_iccattrtab_t *tab);
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_resize(jas_iccattrtab_t *tab, int maxents);
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_add(jas_iccattrtab_t *attrtab, int i,
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_replace(jas_iccattrtab_t *attrtab, int i,
3rdparty/libjasper/jas_icc.c:static void jas_iccattrtab_delete(jas_iccattrtab_t *attrtab, int i);
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_get(jas_iccattrtab_t *attrtab, int i,
3rdparty/libjasper/jas_icc.c:static int jas_iccprof_puttagtab(jas_stream_t *out, jas_icctagtab_t *tagtab);
3rdparty/libjasper/jas_icc.c:    if (!(prof->attrtab = jas_iccattrtab_create()))
3rdparty/libjasper/jas_icc.c:    prof->tagtab.numents = 0;
3rdparty/libjasper/jas_icc.c:    prof->tagtab.ents = 0;
3rdparty/libjasper/jas_icc.c:    newprof->tagtab.numents = 0;
3rdparty/libjasper/jas_icc.c:    newprof->tagtab.ents = 0;
3rdparty/libjasper/jas_icc.c:    assert(newprof->attrtab);
3rdparty/libjasper/jas_icc.c:    jas_iccattrtab_destroy(newprof->attrtab);
3rdparty/libjasper/jas_icc.c:    if (!(newprof->attrtab = jas_iccattrtab_copy(prof->attrtab)))
3rdparty/libjasper/jas_icc.c:    if (prof->attrtab)
3rdparty/libjasper/jas_icc.c:        jas_iccattrtab_destroy(prof->attrtab);
3rdparty/libjasper/jas_icc.c:    if (prof->tagtab.ents)
3rdparty/libjasper/jas_icc.c:        jas_free(prof->tagtab.ents);
3rdparty/libjasper/jas_icc.c:    jas_iccattrtab_dump(prof->attrtab, out);
3rdparty/libjasper/jas_icc.c:    jas_icctagtabent_t *tagtabent;
3rdparty/libjasper/jas_icc.c:    if (jas_iccprof_gettagtab(in, &prof->tagtab)) {
3rdparty/libjasper/jas_icc.c:        jas_eprintf("cannot get tab table\n");
3rdparty/libjasper/jas_icc.c:    jas_iccprof_sorttagtab(&prof->tagtab);
3rdparty/libjasper/jas_icc.c:    numtags = prof->tagtab.numents;
3rdparty/libjasper/jas_icc.c:        tagtabent = &prof->tagtab.ents[i];
3rdparty/libjasper/jas_icc.c:        if (tagtabent->off == JAS_CAST(jas_iccuint32_t, prevoff)) {
3rdparty/libjasper/jas_icc.c:                if (jas_iccprof_setattr(prof, tagtabent->tag, attrval))
3rdparty/libjasper/jas_icc.c:        reloff = tagtabent->off - curoff;
3rdparty/libjasper/jas_icc.c:            abort();
3rdparty/libjasper/jas_icc.c:        len = tagtabent->len - 8;
3rdparty/libjasper/jas_icc.c:        if (jas_iccprof_setattr(prof, tagtabent->tag, attrval)) {
3rdparty/libjasper/jas_icc.c:    jas_icctagtabent_t *tagtabent;
3rdparty/libjasper/jas_icc.c:    jas_icctagtabent_t *sharedtagtabent;
3rdparty/libjasper/jas_icc.c:    jas_icctagtabent_t *tmptagtabent;
3rdparty/libjasper/jas_icc.c:    jas_icctagtab_t *tagtab;
3rdparty/libjasper/jas_icc.c:    tagtab = &prof->tagtab;
3rdparty/libjasper/jas_icc.c:    if (!(tagtab->ents = jas_alloc2(prof->attrtab->numattrs,
3rdparty/libjasper/jas_icc.c:      sizeof(jas_icctagtabent_t))))
3rdparty/libjasper/jas_icc.c:    tagtab->numents = prof->attrtab->numattrs;
3rdparty/libjasper/jas_icc.c:    curoff = JAS_ICC_HDRLEN + 4 + 12 * tagtab->numents;
3rdparty/libjasper/jas_icc.c:    for (i = 0; i < JAS_CAST(int, tagtab->numents); ++i) {
3rdparty/libjasper/jas_icc.c:        tagtabent = &tagtab->ents[i];
3rdparty/libjasper/jas_icc.c:        if (jas_iccattrtab_get(prof->attrtab, i, &attrname, &attrval))
3rdparty/libjasper/jas_icc.c:        tagtabent->tag = attrname;
3rdparty/libjasper/jas_icc.c:        tagtabent->data = &attrval->data;
3rdparty/libjasper/jas_icc.c:        sharedtagtabent = 0;
3rdparty/libjasper/jas_icc.c:            tmptagtabent = &tagtab->ents[j];
3rdparty/libjasper/jas_icc.c:            if (tagtabent->data == tmptagtabent->data) {
3rdparty/libjasper/jas_icc.c:                sharedtagtabent = tmptagtabent;
3rdparty/libjasper/jas_icc.c:        if (sharedtagtabent) {
3rdparty/libjasper/jas_icc.c:            tagtabent->off = sharedtagtabent->off;
3rdparty/libjasper/jas_icc.c:            tagtabent->len = sharedtagtabent->len;
3rdparty/libjasper/jas_icc.c:            tagtabent->first = sharedtagtabent;
3rdparty/libjasper/jas_icc.c:            tagtabent->off = curoff;
3rdparty/libjasper/jas_icc.c:            tagtabent->len = (*attrval->ops->getsize)(attrval) + 8;
3rdparty/libjasper/jas_icc.c:            tagtabent->first = 0;
3rdparty/libjasper/jas_icc.c:            if (i < JAS_CAST(int, tagtab->numents - 1)) {
3rdparty/libjasper/jas_icc.c:                curoff = jas_iccpadtomult(curoff + tagtabent->len, 4);
3rdparty/libjasper/jas_icc.c:                curoff += tagtabent->len;
3rdparty/libjasper/jas_icc.c:    if (jas_iccprof_puttagtab(out, &prof->tagtab))
3rdparty/libjasper/jas_icc.c:    curoff = JAS_ICC_HDRLEN + 4 + 12 * tagtab->numents;
3rdparty/libjasper/jas_icc.c:    for (i = 0; i < JAS_CAST(int, tagtab->numents);) {
3rdparty/libjasper/jas_icc.c:        tagtabent = &tagtab->ents[i];
3rdparty/libjasper/jas_icc.c:        assert(curoff == JAS_CAST(long, tagtabent->off));
3rdparty/libjasper/jas_icc.c:        if (jas_iccattrtab_get(prof->attrtab, i, &attrname, &attrval))
3rdparty/libjasper/jas_icc.c:        curoff += tagtabent->len;
3rdparty/libjasper/jas_icc.c:        while (i < JAS_CAST(int, tagtab->numents) &&
3rdparty/libjasper/jas_icc.c:          tagtab->ents[i].first)
3rdparty/libjasper/jas_icc.c:        newoff = (i < JAS_CAST(int, tagtab->numents)) ?
3rdparty/libjasper/jas_icc.c:          tagtab->ents[i].off : prof->hdr.size;
3rdparty/libjasper/jas_icc.c:static int jas_iccprof_puttagtab(jas_stream_t *out, jas_icctagtab_t *tagtab)
3rdparty/libjasper/jas_icc.c:    jas_icctagtabent_t *tagtabent;
3rdparty/libjasper/jas_icc.c:    if (jas_iccputuint32(out, tagtab->numents))
3rdparty/libjasper/jas_icc.c:    for (i = 0; i < JAS_CAST(int, tagtab->numents); ++i) {
3rdparty/libjasper/jas_icc.c:        tagtabent = &tagtab->ents[i];
3rdparty/libjasper/jas_icc.c:        if (jas_iccputuint32(out, tagtabent->tag) ||
3rdparty/libjasper/jas_icc.c:          jas_iccputuint32(out, tagtabent->off) ||
3rdparty/libjasper/jas_icc.c:          jas_iccputuint32(out, tagtabent->len))
3rdparty/libjasper/jas_icc.c:static int jas_iccprof_gettagtab(jas_stream_t *in, jas_icctagtab_t *tagtab)
3rdparty/libjasper/jas_icc.c:    jas_icctagtabent_t *tagtabent;
3rdparty/libjasper/jas_icc.c:    if (tagtab->ents) {
3rdparty/libjasper/jas_icc.c:        jas_free(tagtab->ents);
3rdparty/libjasper/jas_icc.c:        tagtab->ents = 0;
3rdparty/libjasper/jas_icc.c:    if (jas_iccgetuint32(in, &tagtab->numents))
3rdparty/libjasper/jas_icc.c:    if (!(tagtab->ents = jas_alloc2(tagtab->numents,
3rdparty/libjasper/jas_icc.c:      sizeof(jas_icctagtabent_t))))
3rdparty/libjasper/jas_icc.c:    tagtabent = tagtab->ents;
3rdparty/libjasper/jas_icc.c:    for (i = 0; i < JAS_CAST(long, tagtab->numents); ++i) {
3rdparty/libjasper/jas_icc.c:        if (jas_iccgetuint32(in, &tagtabent->tag) ||
3rdparty/libjasper/jas_icc.c:        jas_iccgetuint32(in, &tagtabent->off) ||
3rdparty/libjasper/jas_icc.c:        jas_iccgetuint32(in, &tagtabent->len))
3rdparty/libjasper/jas_icc.c:        ++tagtabent;
3rdparty/libjasper/jas_icc.c:    if (tagtab->ents) {
3rdparty/libjasper/jas_icc.c:        jas_free(tagtab->ents);
3rdparty/libjasper/jas_icc.c:        tagtab->ents = 0;
3rdparty/libjasper/jas_icc.c:    if ((i = jas_iccattrtab_lookup(prof->attrtab, name)) < 0)
3rdparty/libjasper/jas_icc.c:    if (!(attrval = jas_iccattrval_clone(prof->attrtab->attrs[i].val)))
3rdparty/libjasper/jas_icc.c:    if ((i = jas_iccattrtab_lookup(prof->attrtab, name)) >= 0) {
3rdparty/libjasper/jas_icc.c:            if (jas_iccattrtab_replace(prof->attrtab, i, name, val))
3rdparty/libjasper/jas_icc.c:            jas_iccattrtab_delete(prof->attrtab, i);
3rdparty/libjasper/jas_icc.c:            if (jas_iccattrtab_add(prof->attrtab, -1, name, val))
3rdparty/libjasper/jas_icc.c:static void jas_iccprof_sorttagtab(jas_icctagtab_t *tagtab)
3rdparty/libjasper/jas_icc.c:    qsort(tagtab->ents, tagtab->numents, sizeof(jas_icctagtabent_t),
3rdparty/libjasper/jas_icc.c:      jas_icctagtabent_cmp);
3rdparty/libjasper/jas_icc.c:static int jas_icctagtabent_cmp(const void *src, const void *dst)
3rdparty/libjasper/jas_icc.c:    jas_icctagtabent_t *srctagtabent = JAS_CAST(jas_icctagtabent_t *, src);
3rdparty/libjasper/jas_icc.c:    jas_icctagtabent_t *dsttagtabent = JAS_CAST(jas_icctagtabent_t *, dst);
3rdparty/libjasper/jas_icc.c:    if (srctagtabent->off > dsttagtabent->off) {
3rdparty/libjasper/jas_icc.c:    } else if (srctagtabent->off < dsttagtabent->off) {
3rdparty/libjasper/jas_icc.c:* attribute table class
3rdparty/libjasper/jas_icc.c:static jas_iccattrtab_t *jas_iccattrtab_create()
3rdparty/libjasper/jas_icc.c:    jas_iccattrtab_t *tab;
3rdparty/libjasper/jas_icc.c:    tab = 0;
3rdparty/libjasper/jas_icc.c:    if (!(tab = jas_malloc(sizeof(jas_iccattrtab_t))))
3rdparty/libjasper/jas_icc.c:    tab->maxattrs = 0;
3rdparty/libjasper/jas_icc.c:    tab->numattrs = 0;
3rdparty/libjasper/jas_icc.c:    tab->attrs = 0;
3rdparty/libjasper/jas_icc.c:    if (jas_iccattrtab_resize(tab, 32))
3rdparty/libjasper/jas_icc.c:    return tab;
3rdparty/libjasper/jas_icc.c:    if (tab)
3rdparty/libjasper/jas_icc.c:        jas_iccattrtab_destroy(tab);
3rdparty/libjasper/jas_icc.c:static jas_iccattrtab_t *jas_iccattrtab_copy(jas_iccattrtab_t *attrtab)
3rdparty/libjasper/jas_icc.c:    jas_iccattrtab_t *newattrtab;
3rdparty/libjasper/jas_icc.c:    if (!(newattrtab = jas_iccattrtab_create()))
3rdparty/libjasper/jas_icc.c:    for (i = 0; i < attrtab->numattrs; ++i) {
3rdparty/libjasper/jas_icc.c:        if (jas_iccattrtab_add(newattrtab, i, attrtab->attrs[i].name,
3rdparty/libjasper/jas_icc.c:          attrtab->attrs[i].val))
3rdparty/libjasper/jas_icc.c:    return newattrtab;
3rdparty/libjasper/jas_icc.c:static void jas_iccattrtab_destroy(jas_iccattrtab_t *tab)
3rdparty/libjasper/jas_icc.c:    if (tab->attrs) {
3rdparty/libjasper/jas_icc.c:        while (tab->numattrs > 0) {
3rdparty/libjasper/jas_icc.c:            jas_iccattrtab_delete(tab, 0);
3rdparty/libjasper/jas_icc.c:        jas_free(tab->attrs);
3rdparty/libjasper/jas_icc.c:    jas_free(tab);
3rdparty/libjasper/jas_icc.c:void jas_iccattrtab_dump(jas_iccattrtab_t *attrtab, FILE *out)
3rdparty/libjasper/jas_icc.c:    fprintf(out, "numattrs=%d\n", attrtab->numattrs);
3rdparty/libjasper/jas_icc.c:    for (i = 0; i < attrtab->numattrs; ++i) {
3rdparty/libjasper/jas_icc.c:        attr = &attrtab->attrs[i];
3rdparty/libjasper/jas_icc.c:        if (!info) abort();
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_resize(jas_iccattrtab_t *tab, int maxents)
3rdparty/libjasper/jas_icc.c:    assert(maxents >= tab->numattrs);
3rdparty/libjasper/jas_icc.c:    newattrs = jas_realloc2(tab->attrs, maxents, sizeof(jas_iccattr_t));
3rdparty/libjasper/jas_icc.c:    tab->attrs = newattrs;
3rdparty/libjasper/jas_icc.c:    tab->maxattrs = maxents;
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_add(jas_iccattrtab_t *attrtab, int i,
3rdparty/libjasper/jas_icc.c:        i = attrtab->numattrs;
3rdparty/libjasper/jas_icc.c:    assert(i >= 0 && i <= attrtab->numattrs);
3rdparty/libjasper/jas_icc.c:    if (attrtab->numattrs >= attrtab->maxattrs) {
3rdparty/libjasper/jas_icc.c:        if (jas_iccattrtab_resize(attrtab, attrtab->numattrs + 32)) {
3rdparty/libjasper/jas_icc.c:    n = attrtab->numattrs - i;
3rdparty/libjasper/jas_icc.c:        memmove(&attrtab->attrs[i + 1], &attrtab->attrs[i],
3rdparty/libjasper/jas_icc.c:    attr = &attrtab->attrs[i];
3rdparty/libjasper/jas_icc.c:    ++attrtab->numattrs;
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_replace(jas_iccattrtab_t *attrtab, int i,
3rdparty/libjasper/jas_icc.c:    attr = &attrtab->attrs[i];
3rdparty/libjasper/jas_icc.c:static void jas_iccattrtab_delete(jas_iccattrtab_t *attrtab, int i)
3rdparty/libjasper/jas_icc.c:    jas_iccattrval_destroy(attrtab->attrs[i].val);
3rdparty/libjasper/jas_icc.c:    if ((n = attrtab->numattrs - i - 1) > 0)
3rdparty/libjasper/jas_icc.c:        memmove(&attrtab->attrs[i], &attrtab->attrs[i + 1],
3rdparty/libjasper/jas_icc.c:    --attrtab->numattrs;
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_get(jas_iccattrtab_t *attrtab, int i,
3rdparty/libjasper/jas_icc.c:    if (i < 0 || i >= attrtab->numattrs)
3rdparty/libjasper/jas_icc.c:    attr = &attrtab->attrs[i];
3rdparty/libjasper/jas_icc.c:static int jas_iccattrtab_lookup(jas_iccattrtab_t *attrtab,
3rdparty/libjasper/jas_icc.c:    for (i = 0; i < attrtab->numattrs; ++i) {
3rdparty/libjasper/jas_icc.c:        attr = &attrtab->attrs[i];
3rdparty/libjasper/jas_icc.c:    if (len != 4 * 3) abort();
3rdparty/libjasper/jas_icc.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jas_icc.c:* attribute table class
3rdparty/libjasper/jas_icc.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jas_icc.c:    abort();
3rdparty/libjasper/jas_icc.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jas_icc.c:    abort();
3rdparty/libjasper/jas_icc.c:    if (lut8->intabs)
3rdparty/libjasper/jas_icc.c:        jas_free(lut8->intabs);
3rdparty/libjasper/jas_icc.c:    if (lut8->intabsbuf)
3rdparty/libjasper/jas_icc.c:        jas_free(lut8->intabsbuf);
3rdparty/libjasper/jas_icc.c:    if (lut8->outtabs)
3rdparty/libjasper/jas_icc.c:        jas_free(lut8->outtabs);
3rdparty/libjasper/jas_icc.c:    if (lut8->outtabsbuf)
3rdparty/libjasper/jas_icc.c:        jas_free(lut8->outtabsbuf);
3rdparty/libjasper/jas_icc.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jas_icc.c:    abort();
3rdparty/libjasper/jas_icc.c:    lut8->intabs = 0;
3rdparty/libjasper/jas_icc.c:    lut8->intabsbuf = 0;
3rdparty/libjasper/jas_icc.c:    lut8->outtabs = 0;
3rdparty/libjasper/jas_icc.c:    lut8->outtabsbuf = 0;
3rdparty/libjasper/jas_icc.c:    if (jas_iccgetuint16(in, &lut8->numintabents) ||
3rdparty/libjasper/jas_icc.c:      jas_iccgetuint16(in, &lut8->numouttabents))
3rdparty/libjasper/jas_icc.c:      !(lut8->intabsbuf = jas_alloc3(lut8->numinchans,
3rdparty/libjasper/jas_icc.c:      lut8->numintabents, sizeof(jas_iccuint8_t))) ||
3rdparty/libjasper/jas_icc.c:      !(lut8->intabs = jas_alloc2(lut8->numinchans,
3rdparty/libjasper/jas_icc.c:        lut8->intabs[i] = &lut8->intabsbuf[i * lut8->numintabents];
3rdparty/libjasper/jas_icc.c:    if (!(lut8->outtabsbuf = jas_alloc3(lut8->numoutchans,
3rdparty/libjasper/jas_icc.c:      lut8->numouttabents, sizeof(jas_iccuint8_t))) ||
3rdparty/libjasper/jas_icc.c:      !(lut8->outtabs = jas_alloc2(lut8->numoutchans,
3rdparty/libjasper/jas_icc.c:        lut8->outtabs[i] = &lut8->outtabsbuf[i * lut8->numouttabents];
3rdparty/libjasper/jas_icc.c:        for (j = 0; j < JAS_CAST(int, lut8->numintabents); ++j) {
3rdparty/libjasper/jas_icc.c:            if (jas_iccgetuint8(in, &lut8->intabs[i][j]))
3rdparty/libjasper/jas_icc.c:        for (j = 0; j < JAS_CAST(int, lut8->numouttabents); ++j) {
3rdparty/libjasper/jas_icc.c:            if (jas_iccgetuint8(in, &lut8->outtabs[i][j]))
3rdparty/libjasper/jas_icc.c:    if (JAS_CAST(int, 44 + lut8->numinchans * lut8->numintabents +
3rdparty/libjasper/jas_icc.c:      lut8->numoutchans * lut8->numouttabents +
3rdparty/libjasper/jas_icc.c:    return 44 + lut8->numinchans * lut8->numintabents +
3rdparty/libjasper/jas_icc.c:      lut8->numoutchans * lut8->numouttabents +
3rdparty/libjasper/jas_icc.c:    lut8->intabs = 0;
3rdparty/libjasper/jas_icc.c:    lut8->intabsbuf = 0;
3rdparty/libjasper/jas_icc.c:    lut8->outtabs = 0;
3rdparty/libjasper/jas_icc.c:    lut8->outtabsbuf = 0;
3rdparty/libjasper/jas_icc.c:    if (jas_iccputuint16(out, lut8->numintabents) ||
3rdparty/libjasper/jas_icc.c:      jas_iccputuint16(out, lut8->numouttabents))
3rdparty/libjasper/jas_icc.c:    n = lut8->numinchans * lut8->numintabents;
3rdparty/libjasper/jas_icc.c:        if (jas_iccputuint8(out, lut8->intabsbuf[i]))
3rdparty/libjasper/jas_icc.c:    n = lut8->numoutchans * lut8->numouttabents;
3rdparty/libjasper/jas_icc.c:        if (jas_iccputuint8(out, lut8->outtabsbuf[i]))
3rdparty/libjasper/jas_icc.c:    fprintf(out, "numintabents=%d, numouttabents=%d\n",
3rdparty/libjasper/jas_icc.c:      (int)lut8->numintabents, (int)lut8->numouttabents);
3rdparty/libjasper/jas_icc.c:    if (lut16->intabs)
3rdparty/libjasper/jas_icc.c:        jas_free(lut16->intabs);
3rdparty/libjasper/jas_icc.c:    if (lut16->intabsbuf)
3rdparty/libjasper/jas_icc.c:        jas_free(lut16->intabsbuf);
3rdparty/libjasper/jas_icc.c:    if (lut16->outtabs)
3rdparty/libjasper/jas_icc.c:        jas_free(lut16->outtabs);
3rdparty/libjasper/jas_icc.c:    if (lut16->outtabsbuf)
3rdparty/libjasper/jas_icc.c:        jas_free(lut16->outtabsbuf);
3rdparty/libjasper/jas_icc.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jas_icc.c:    abort();
3rdparty/libjasper/jas_icc.c:    lut16->intabs = 0;
3rdparty/libjasper/jas_icc.c:    lut16->intabsbuf = 0;
3rdparty/libjasper/jas_icc.c:    lut16->outtabs = 0;
3rdparty/libjasper/jas_icc.c:    lut16->outtabsbuf = 0;
3rdparty/libjasper/jas_icc.c:    if (jas_iccgetuint16(in, &lut16->numintabents) ||
3rdparty/libjasper/jas_icc.c:      jas_iccgetuint16(in, &lut16->numouttabents))
3rdparty/libjasper/jas_icc.c:      !(lut16->intabsbuf = jas_alloc3(lut16->numinchans,
3rdparty/libjasper/jas_icc.c:      lut16->numintabents, sizeof(jas_iccuint16_t))) ||
3rdparty/libjasper/jas_icc.c:      !(lut16->intabs = jas_alloc2(lut16->numinchans,
3rdparty/libjasper/jas_icc.c:        lut16->intabs[i] = &lut16->intabsbuf[i * lut16->numintabents];
3rdparty/libjasper/jas_icc.c:    if (!(lut16->outtabsbuf = jas_alloc3(lut16->numoutchans,
3rdparty/libjasper/jas_icc.c:      lut16->numouttabents, sizeof(jas_iccuint16_t))) ||
3rdparty/libjasper/jas_icc.c:      !(lut16->outtabs = jas_alloc2(lut16->numoutchans,
3rdparty/libjasper/jas_icc.c:        lut16->outtabs[i] = &lut16->outtabsbuf[i * lut16->numouttabents];
3rdparty/libjasper/jas_icc.c:        for (j = 0; j < JAS_CAST(int, lut16->numintabents); ++j) {
3rdparty/libjasper/jas_icc.c:            if (jas_iccgetuint16(in, &lut16->intabs[i][j]))
3rdparty/libjasper/jas_icc.c:        for (j = 0; j < JAS_CAST(int, lut16->numouttabents); ++j) {
3rdparty/libjasper/jas_icc.c:            if (jas_iccgetuint16(in, &lut16->outtabs[i][j]))
3rdparty/libjasper/jas_icc.c:    if (JAS_CAST(int, 44 + 2 * (lut16->numinchans * lut16->numintabents +
3rdparty/libjasper/jas_icc.c:          lut16->numoutchans * lut16->numouttabents +
3rdparty/libjasper/jas_icc.c:    return 44 + 2 * (lut16->numinchans * lut16->numintabents +
3rdparty/libjasper/jas_icc.c:      lut16->numoutchans * lut16->numouttabents +
3rdparty/libjasper/jas_icc.c:    if (jas_iccputuint16(out, lut16->numintabents) ||
3rdparty/libjasper/jas_icc.c:      jas_iccputuint16(out, lut16->numouttabents))
3rdparty/libjasper/jas_icc.c:    n = lut16->numinchans * lut16->numintabents;
3rdparty/libjasper/jas_icc.c:        if (jas_iccputuint16(out, lut16->intabsbuf[i]))
3rdparty/libjasper/jas_icc.c:    n = lut16->numoutchans * lut16->numouttabents;
3rdparty/libjasper/jas_icc.c:        if (jas_iccputuint16(out, lut16->outtabsbuf[i]))
3rdparty/libjasper/jas_icc.c:    fprintf(out, "numintabents=%d, numouttabents=%d\n",
3rdparty/libjasper/jas_icc.c:      (int)lut16->numintabents, (int)lut16->numouttabents);
3rdparty/libjasper/jas_icc.c:    tmp = (val < 0) ? (abort(), 0) : val;
3rdparty/libjasper/jpc_t1dec.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t1dec.c:    /* Avoid compiler warning about unused parameters. */
3rdparty/libjasper/jpc_t1dec.c:    /* Avoid compiler warning about unused parameters. */
3rdparty/libjasper/jpc_t1dec.c:    /* Avoid compiler warning about unused parameters. */
3rdparty/libjasper/jpc_t1dec.c:    /* Avoid compiler warning about unused parameters. */
3rdparty/libjasper/jpc_t1dec.c:#define	jpc_clnpass_step(f, fp, frowstep, dp, oneplushalf, orient, mqdec, flabel, plabel, vcausalflag) \
3rdparty/libjasper/jpc_t1dec.c:flabel \
3rdparty/libjasper/jpc_t1dec.c:plabel \
3rdparty/libjasper/jpc_t1dec.c:    /* Avoid compiler warning about unused parameters. */
3rdparty/libjasper/jpc_bs.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_bs.c:    /* We can reliably get at most 31 bits since ISO/IEC 9899 only
3rdparty/libjasper/jpc_bs.c:    /* We can reliably put at most 31 bits since ISO/IEC 9899 only
3rdparty/libjasper/jpc_bs.c:        abort();
3rdparty/libjasper/jpc_util.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_mqcod.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t2dec.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_qmfb.h: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_qmfb.h:/* The default value for this parameter is probably not optimal for
3rdparty/libjasper/jpc_qmfb.h:any particular platform.  Hopefully, it is not too unreasonable, however. */
3rdparty/libjasper/jas_iccdata.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jas_iccdata.c:    0x24, 0xab, 0x24, 0xda, 0x25, 0x09, 0x25, 0x38,
3rdparty/libjasper/jas_iccdata.c:    0x27, 0xab, 0x27, 0xdc, 0x28, 0x0d, 0x28, 0x3f,
3rdparty/libjasper/jas_iccdata.c:    0x2d, 0x41, 0x2d, 0x76, 0x2d, 0xab, 0x2d, 0xe1,
3rdparty/libjasper/jas_iccdata.c:    0x45, 0xde, 0x46, 0x22, 0x46, 0x67, 0x46, 0xab,
3rdparty/libjasper/jas_iccdata.c:    0x84, 0x80, 0x84, 0xe3, 0x85, 0x47, 0x85, 0xab,
3rdparty/libjasper/jas_iccdata.c:    0xab, 0x02, 0xab, 0x75, 0xab, 0xe9, 0xac, 0x5c,
3rdparty/libjasper/jpc_t1cod.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jpc_t1cod.c:    /* Avoid compiler warnings about unused parameters. */
3rdparty/libjasper/jpc_t1cod.c:    abort();
3rdparty/libjasper/jpc_t1cod.c:* Lookup table code.
3rdparty/libjasper/jp2_dec.c: * 1.  The above copyright notices and this permission notice (which
3rdparty/libjasper/jp2_dec.c:            /* Is the component number reasonable? */
3rdparty/libjasper/jp2_dec.c:            /* Is the LUT index reasonable? */
3rdparty/libjasper/jp2_dec.c:                        abort();
3rdparty/ffmpeg/license.txt:              Copyright (C) 2001 Fabrice Bellard
3rdparty/ffmpeg/license.txt:can use it too, but we suggest you first think carefully about whether
3rdparty/ffmpeg/license.txt:programs enables a greater number of people to use a large body of
3rdparty/ffmpeg/license.txt:non-free programs enables many more people to use the whole GNU
3rdparty/ffmpeg/license.txt:(which use some of those functions and data) to form executables.
3rdparty/ffmpeg/license.txt:all the notices that refer to this License and to the absence of any
3rdparty/ffmpeg/license.txt:above, provided that you also meet all of these conditions:
3rdparty/ffmpeg/license.txt:    table of data to be supplied by an application program that uses
3rdparty/ffmpeg/license.txt:    table, the facility still operates, and performs whatever part of
3rdparty/ffmpeg/license.txt:    application-supplied function or table used by this function must
3rdparty/ffmpeg/license.txt:identifiable sections of that work are not derived from the Library,
3rdparty/ffmpeg/license.txt:and can be reasonably considered independent and separate works in
3rdparty/ffmpeg/license.txt:derivative of it, under Section 2) in object code or executable form
3rdparty/ffmpeg/license.txt:under the terms of Sections 1 and 2 above provided that you accompany
3rdparty/ffmpeg/license.txt:it with the complete corresponding machine-readable source code, which
3rdparty/ffmpeg/license.txt:must be distributed under the terms of Sections 1 and 2 above on a
3rdparty/ffmpeg/license.txt:creates an executable that is a derivative of the Library (because it
3rdparty/ffmpeg/license.txt:library".  The executable is therefore covered by this License.
3rdparty/ffmpeg/license.txt:Section 6 states terms for distribution of such executables.
3rdparty/ffmpeg/license.txt:work.  (Executables containing this object code plus portions of the
3rdparty/ffmpeg/license.txt:Any executables containing that work also fall under Section 6,
3rdparty/ffmpeg/license.txt:  6. As an exception to the Sections above, you may also combine or
3rdparty/ffmpeg/license.txt:    machine-readable source code for the Library including whatever
3rdparty/ffmpeg/license.txt:    Sections 1 and 2 above); and, if the work is an executable linked
3rdparty/ffmpeg/license.txt:    with the Library, with the complete machine-readable "work that
3rdparty/ffmpeg/license.txt:    executable containing the modified Library.  (It is understood
3rdparty/ffmpeg/license.txt:    Library will not necessarily be able to recompile the application
3rdparty/ffmpeg/license.txt:    b) Use a suitable shared library mechanism for linking with the
3rdparty/ffmpeg/license.txt:    Library.  A suitable mechanism is one that (1) uses at run time a
3rdparty/ffmpeg/license.txt:    rather than copying library functions into the executable, and (2)
3rdparty/ffmpeg/license.txt:    specified in Subsection 6a, above, for a charge no more
3rdparty/ffmpeg/license.txt:    from a designated place, offer equivalent access to copy the above
3rdparty/ffmpeg/license.txt:  For an executable, the required form of the "work that uses the
3rdparty/ffmpeg/license.txt:reproducing the executable from it.  However, as a special exception,
3rdparty/ffmpeg/license.txt:which the executable runs, unless that component itself accompanies
3rdparty/ffmpeg/license.txt:the executable.
3rdparty/ffmpeg/license.txt:use both them and the Library together in an executable that you
3rdparty/ffmpeg/license.txt:    Sections above.
3rdparty/ffmpeg/license.txt:If any portion of this section is held invalid or unenforceable under any
3rdparty/ffmpeg/readme.txt:  he/she should use --enabled-shared configure flag and make sure that no GPL components are
3rdparty/ffmpeg/readme.txt:  enabled (some notable examples are x264 (H264 encoder) and libac3 (Dolby AC3 audio codec)).
3rdparty/ffmpeg/readme.txt:  AVFoundation (OSX), GStreamer (Linux) or other available backends supported by opencv_videoio module.
3rdparty/ffmpeg/readme.txt:  wrapped with simple, stable OpenCV-compatible API.
3rdparty/ffmpeg/readme.txt:  You can also specify location of binary file via OPENH264_LIBRARY_PATH environment variable.
3rdparty/ffmpeg/readme.txt:  opencv_ffmpeg*.dll from your distribution; OpenCV will stay fully functional except for the ability to
3rdparty/ffmpeg/readme.txt:  decode/encode videos using FFMPEG (though, it may still be able to do that using other API,
3rdparty/openexr/ChangeLog.ilmbase:        * Added support for enabling/disabling large stack optimisations, used in
3rdparty/openexr/ChangeLog.openexr:	* Added flag to configure.ac to enable or disable use of large
3rdparty/openexr/ChangeLog.openexr:	  auto arrays in the IlmImf library.  Default is "enable" for
3rdparty/openexr/ChangeLog.openexr:	  Linux, "disable" for everything else.
3rdparty/openexr/ChangeLog.openexr:	  (Barnaby Robson)
3rdparty/openexr/ChangeLog.openexr:	  Added a section about multi-threading, updated section on
3rdparty/openexr/ChangeLog.openexr:	  Huffman code table caused crashes by indexing off the
3rdparty/openexr/ChangeLog.openexr:	  aborted prematurely).
3rdparty/openexr/ChangeLog.openexr:	  C++ warns about almost all of them.  Most implicit conversions
3rdparty/openexr/ChangeLog.openexr:	* Disable long double warnings on OS X.  (Drew Hess)
3rdparty/openexr/ChangeLog.openexr:	* IlmImf: Added support for selectable rounding mode (up/down)
3rdparty/openexr/ChangeLog.openexr:	  workspace to enable fragment shaders in Win32.
3rdparty/openexr/ChangeLog.openexr:	  some cosmetic changes for readability.
3rdparty/openexr/ChangeLog.openexr:	* Updated README and README.OSX to talk about CodeWarrior 
3rdparty/openexr/LICENSE:    * Redistributions of source code must retain the above
3rdparty/openexr/LICENSE:    * Redistributions in binary form must reproduce the above
3rdparty/openexr/CMakeLists.txt:ocv_list_filterout(lib_srcs IlmImf/b44ExpLogTable.cpp)
3rdparty/openexr/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wshadow -Wunused -Wsign-compare -Wundef -Wmissing-declarations -Wuninitialized -Wswitch -Wparentheses -Warray-bounds -Wextra)
3rdparty/openexr/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wdeprecated-declarations)
3rdparty/openexr/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4018 /wd4099 /wd4100 /wd4101 /wd4127 /wd4189 /wd4245 /wd4305 /wd4389 /wd4512 /wd4701 /wd4702 /wd4706 /wd4800) # vs2005
3rdparty/openexr/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4334) # vs2005 Win64
3rdparty/openexr/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4244) # vs2008
3rdparty/openexr/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4267) # vs2008 Win64
3rdparty/openexr/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4456) # vs2015
3rdparty/openexr/IlmImf/ImfEnvmapAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfEnvmapAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRationalAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfRationalAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledInputFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTiledInputFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledInputFile.cpp:    vector<TInSliceInfo> slices;	    // info about channels in file
3rdparty/openexr/IlmImf/ImfTiledInputFile.cpp:        // Calculate information about the tile
3rdparty/openexr/IlmImf/ImfTiledInputFile.cpp:                // absolute and tile-relative pixel coordinates.
3rdparty/openexr/IlmImf/ImfTiledInputFile.cpp:    // Wait for a tile buffer to become available,
3rdparty/openexr/IlmImf/ImfTiledInputFile.cpp:    // Initialize the slice table for readPixels().
3rdparty/openexr/IlmImf/ImfLineOrderAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfLineOrderAttribute.h:// *       Redistributions in binary form must reproduce the above
Binary file 3rdparty/openexr/IlmImf/ImfRleCompressor.cpp matches
3rdparty/openexr/IlmImf/ImfHuf.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfHuf.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfDoubleAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfDoubleAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfAcesFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfAcesFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfIO.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfIO.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfEnvmapAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfEnvmapAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfVecAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfVecAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfChromaticities.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfChromaticities.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfCRgbaFile.h:*       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfCRgbaFile.h:*       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfCRgbaFile.h:** Lookup tables
3rdparty/openexr/IlmImf/ImfKeyCode.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfKeyCode.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfOpaqueAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfOpaqueAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfStdIO.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfStdIO.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfBoxAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfBoxAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfOutputFile.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfOutputFile.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfOutputFile.h:    // be readable, or the file may contain bad data.
3rdparty/openexr/IlmImf/ImfCheckedArithmetic.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfCheckedArithmetic.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfZipCompressor.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfZipCompressor.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfB44Compressor.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfB44Compressor.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTimeCode.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTimeCode.cpp:// *       Redistributions in binary form must reproduce the above
Binary file 3rdparty/openexr/IlmImf/ImfZipCompressor.cpp matches
3rdparty/openexr/IlmImf/ImfThreading.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfThreading.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfThreading.h://	Threading in the Imf library is controllable at two granularities:
Binary file 3rdparty/openexr/IlmImf/ImfPizCompressor.cpp matches
3rdparty/openexr/IlmImf/ImfAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRgbaFile.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfRgbaFile.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRgbaFile.h:    // be readable, or the file may contain bad data.
3rdparty/openexr/IlmImf/ImfLineOrder.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfLineOrder.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfPreviewImageAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfPreviewImageAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfStringAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfStringAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfCompressor.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfCompressor.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRgbaYca.cpp://     * Redistributions of source code must retain the above
3rdparty/openexr/IlmImf/ImfRgbaYca.cpp://     * Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRgbaYca.cpp:        if (abs (in.r - Y) < HALF_MAX * Y)
3rdparty/openexr/IlmImf/ImfRgbaYca.cpp:        if (abs (in.b - Y) < HALF_MAX * Y)
3rdparty/openexr/IlmImf/ImfFrameBuffer.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfFrameBuffer.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfFrameBuffer.h:    // absolute coordinates or coordinates relative to a
3rdparty/openexr/IlmImf/ImfFrameBuffer.h:    // xStride and yStride, above.)
3rdparty/openexr/IlmImf/ImfFrameBuffer.h:    // pixel addressing is always done using absolute
3rdparty/openexr/IlmImf/ImfStringVectorAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfStringVectorAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfPixelType.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfPixelType.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // Try to reconstruct a missing tile offset table by sequentially
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // reconstruct the tile offset table for incomplete files,
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // Read in the tile offsets from the file's tile offset table
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // Invalid offsets mean that the file is probably incomplete
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // (the offset table is the last thing written to the file).
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // writing the file was aborted.
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // We should still be able to read the existing parts of the
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // table.
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // Write the tile offset table to the file, and
3rdparty/openexr/IlmImf/ImfTileOffsets.cpp:    // return the position of the start of the table
3rdparty/openexr/IlmImf/ImfChromaticitiesAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfChromaticitiesAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfOutputFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfOutputFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfOutputFile.cpp:    vector<OutSliceInfo> slices;		// info about channels in file
3rdparty/openexr/IlmImf/ImfOutputFile.cpp:                                                // offset table
3rdparty/openexr/IlmImf/ImfOutputFile.cpp:    // Wait for the lineBuffer to become available
3rdparty/openexr/IlmImf/ImfOutputFile.cpp:    size_t maxBytesPerLine = bytesPerLineTable (_data->header,
3rdparty/openexr/IlmImf/ImfOutputFile.cpp:    offsetInLineBufferTable (_data->bytesPerLine,
3rdparty/openexr/IlmImf/ImfOutputFile.cpp:    // Initialize slice table for writePixels().
3rdparty/openexr/IlmImf/ImfMatrixAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfMatrixAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfKeyCode.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfKeyCode.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfKeyCode.h:// 	For more information about the interpretation of those fields see
3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp:    vector<TOutSliceInfo> slices;		// info about channels in file
3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp:    // Wait for the tileBuffer to become available
3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp:                // These offsets are used to facilitate both absolute
3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp:    // Initialize slice table for writePixels().
3rdparty/openexr/IlmImf/ImfFrameBuffer.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfFrameBuffer.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfLut.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfLut.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfLut.cpp://	Lookup tables for efficient application
3rdparty/openexr/IlmImf/ImfPreviewImage.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfPreviewImage.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRgbaYca.h://     * Redistributions of source code must retain the above
3rdparty/openexr/IlmImf/ImfRgbaYca.h://     * Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/b44ExpLogTable.h:const unsigned short expTable[] =
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3caa, 0x3caa, 0x3caa, 0x3caa, 0x3caa, 0x3caa, 0x3cab, 0x3cab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3cab, 0x3cab, 0x3cab, 0x3cab, 0x3cab, 0x3cac, 0x3cac, 0x3cac,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3daa, 0x3daa, 0x3daa, 0x3dab, 0x3dab, 0x3dab, 0x3dac, 0x3dac,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3ea6, 0x3ea6, 0x3ea7, 0x3ea8, 0x3ea9, 0x3eaa, 0x3eab, 0x3eab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3fa6, 0x3fa7, 0x3fa8, 0x3fa9, 0x3faa, 0x3fab, 0x3fac, 0x3fad,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x40a6, 0x40a7, 0x40a8, 0x40a8, 0x40a9, 0x40a9, 0x40aa, 0x40ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x40ab, 0x40ac, 0x40ac, 0x40ad, 0x40ad, 0x40ae, 0x40af, 0x40af,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x41a7, 0x41a9, 0x41aa, 0x41ab, 0x41ad, 0x41ae, 0x41b0, 0x41b1,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x42a9, 0x42ab, 0x42ad, 0x42ae, 0x42b0, 0x42b2, 0x42b3, 0x42b5,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x43ab, 0x43ad, 0x43af, 0x43b0, 0x43b2, 0x43b4, 0x43b6, 0x43b8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x44a9, 0x44aa, 0x44ab, 0x44ad, 0x44ae, 0x44af, 0x44b0, 0x44b1,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x46a0, 0x46a1, 0x46a3, 0x46a5, 0x46a6, 0x46a8, 0x46aa, 0x46ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x47a0, 0x47a3, 0x47a7, 0x47ab, 0x47af, 0x47b3, 0x47b7, 0x47bb,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x49a2, 0x49a5, 0x49a8, 0x49ab, 0x49ad, 0x49b0, 0x49b3, 0x49b6,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4ab1, 0x4ab4, 0x4ab7, 0x4abb, 0x4abe, 0x4ac1, 0x4ac5, 0x4ac8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4d9a, 0x4d9d, 0x4da0, 0x4da2, 0x4da5, 0x4da8, 0x4dab, 0x4dae,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x51a8, 0x51ab, 0x51ae, 0x51b1, 0x51b4, 0x51b7, 0x51ba, 0x51bc,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x529d, 0x52a1, 0x52a4, 0x52a7, 0x52ab, 0x52ae, 0x52b1, 0x52b5,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x5a8a, 0x5a91, 0x5a98, 0x5a9e, 0x5aa5, 0x5aab, 0x5ab2, 0x5ab9,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x5c9d, 0x5ca1, 0x5ca6, 0x5cab, 0x5caf, 0x5cb4, 0x5cb9, 0x5cbd,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x648f, 0x6494, 0x6499, 0x649d, 0x64a2, 0x64a6, 0x64ab, 0x64b0,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x6785, 0x678c, 0x6794, 0x679b, 0x67a3, 0x67ab, 0x67b2, 0x67ba,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x6a99, 0x6aa6, 0x6ab4, 0x6ac1, 0x6acf, 0x6adc, 0x6aea, 0x6af8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x6f6f, 0x6f7e, 0x6f8d, 0x6f9c, 0x6fab, 0x6fbb, 0x6fca, 0x6fda,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x7168, 0x7173, 0x717e, 0x7189, 0x7194, 0x71a0, 0x71ab, 0x71b6,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x7a73, 0x7a80, 0x7a8d, 0x7a9a, 0x7aa8, 0x7ab5, 0x7ac2, 0x7ad0,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3bac, 0x3bac, 0x3bac, 0x3bac, 0x3bac, 0x3bab, 0x3bab, 0x3bab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3bab, 0x3bab, 0x3bab, 0x3bab, 0x3bab, 0x3bab, 0x3bab, 0x3bab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3bab, 0x3bab, 0x3bab, 0x3bab, 0x3bab, 0x3bab, 0x3baa, 0x3baa,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3ac0, 0x3ac0, 0x3ac0, 0x3abf, 0x3abf, 0x3abf, 0x3abf, 0x3abe,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3abe, 0x3abe, 0x3abe, 0x3abe, 0x3abd, 0x3abd, 0x3abd, 0x3abd,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3abd, 0x3abc, 0x3abc, 0x3abc, 0x3abc, 0x3abc, 0x3abb, 0x3abb,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3abb, 0x3abb, 0x3aba, 0x3aba, 0x3aba, 0x3aba, 0x3aba, 0x3ab9,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3ab9, 0x3ab9, 0x3ab9, 0x3ab9, 0x3ab8, 0x3ab8, 0x3ab8, 0x3ab8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3ab8, 0x3ab7, 0x3ab7, 0x3ab7, 0x3ab7, 0x3ab6, 0x3ab6, 0x3ab6,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3ab6, 0x3ab6, 0x3ab5, 0x3ab5, 0x3ab5, 0x3ab5, 0x3ab5, 0x3ab4,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3ab4, 0x3ab4, 0x3ab4, 0x3ab4, 0x3ab3, 0x3ab3, 0x3ab3, 0x3ab3,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3ab3, 0x3ab2, 0x3ab2, 0x3ab2, 0x3ab2, 0x3ab1, 0x3ab1, 0x3ab1,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3ab1, 0x3ab1, 0x3ab0, 0x3ab0, 0x3ab0, 0x3ab0, 0x3ab0, 0x3aaf,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3aac, 0x3aac, 0x3aab, 0x3aab, 0x3aab, 0x3aab, 0x3aab, 0x3aaa,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x39ac, 0x39ac, 0x39ac, 0x39ab, 0x39ab, 0x39aa, 0x39aa, 0x39aa,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x38af, 0x38af, 0x38ae, 0x38ae, 0x38ad, 0x38ac, 0x38ac, 0x38ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x38ab, 0x38aa, 0x38a9, 0x38a9, 0x38a8, 0x38a8, 0x38a7, 0x38a7,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x37ad, 0x37ac, 0x37ab, 0x37aa, 0x37a9, 0x37a8, 0x37a8, 0x37a7,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x36ab, 0x36ab, 0x36aa, 0x36a9, 0x36a8, 0x36a7, 0x36a6, 0x36a6,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x35b4, 0x35b3, 0x35b2, 0x35b0, 0x35af, 0x35ad, 0x35ac, 0x35ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x33b8, 0x33b6, 0x33b5, 0x33b3, 0x33b1, 0x33af, 0x33ad, 0x33ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x32b5, 0x32b3, 0x32b2, 0x32b0, 0x32ae, 0x32ad, 0x32ab, 0x32a9,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x30af, 0x30ae, 0x30ac, 0x30ab, 0x30aa, 0x30a9, 0x30a8, 0x30a7,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x2ebf, 0x2ebb, 0x2eb8, 0x2eb5, 0x2eb1, 0x2eae, 0x2eab, 0x2ea7,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x2dae, 0x2dab, 0x2da8, 0x2da6, 0x2da3, 0x2da0, 0x2d9d, 0x2d9a,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x2ac9, 0x2ac5, 0x2ac2, 0x2abe, 0x2abb, 0x2ab8, 0x2ab4, 0x2ab1,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x29b6, 0x29b4, 0x29b1, 0x29ae, 0x29ab, 0x29a8, 0x29a5, 0x29a3,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x25bf, 0x25bc, 0x25b9, 0x25b6, 0x25b3, 0x25b0, 0x25ae, 0x25ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x1fd1, 0x1fca, 0x1fc2, 0x1fba, 0x1fb2, 0x1fab, 0x1fa3, 0x1f9c,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x1cbe, 0x1cb9, 0x1cb5, 0x1cb0, 0x1cab, 0x1ca6, 0x1ca2, 0x1c9d,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x1aba, 0x1ab3, 0x1aac, 0x1aa6, 0x1a9f, 0x1a98, 0x1a92, 0x1a8b,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x14cc, 0x14c7, 0x14c2, 0x14bd, 0x14b9, 0x14b4, 0x14af, 0x14ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x0b19, 0x0b0b, 0x0afd, 0x0aef, 0x0ae1, 0x0ad3, 0x0ac6, 0x0ab8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x0aab, 0x0a9e, 0x0a90, 0x0a83, 0x0a76, 0x0a69, 0x0a5d, 0x0a50,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x02cc, 0x02c6, 0x02c0, 0x02bb, 0x02b6, 0x02b0, 0x02ab, 0x02a5,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x01b2, 0x01af, 0x01ab, 0x01a8, 0x01a5, 0x01a1, 0x019e, 0x019b,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x00b5, 0x00b4, 0x00b2, 0x00b1, 0x00af, 0x00ae, 0x00ad, 0x00ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:const unsigned short logTable[] =
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd6bb, 0xd6b5, 0xd6b0, 0xd6ab, 0xd6a7, 0xd6a2, 0xd69e, 0xd69a,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd5ab, 0xd5ab, 0xd5aa, 0xd5a9, 0xd5a9, 0xd5a8, 0xd5a7, 0xd5a7,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd4ac, 0xd4ac, 0xd4ab, 0xd4ab, 0xd4ab, 0xd4ab, 0xd4ab, 0xd4ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd4ab, 0xd4ab, 0xd4ab, 0xd4ab, 0xd4ab, 0xd4ab, 0xd4aa, 0xd4aa,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd3ac, 0xd3ac, 0xd3ac, 0xd3ac, 0xd3ac, 0xd3ac, 0xd3ab, 0xd3ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd3ab, 0xd3ab, 0xd3ab, 0xd3ab, 0xd3ab, 0xd3aa, 0xd3aa, 0xd3aa,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd2ac, 0xd2ac, 0xd2ac, 0xd2ab, 0xd2ab, 0xd2ab, 0xd2ab, 0xd2ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd1ab, 0xd1ab, 0xd1ab, 0xd1ab, 0xd1ab, 0xd1ab, 0xd1ab, 0xd1aa,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd0ac, 0xd0ac, 0xd0ac, 0xd0ac, 0xd0ac, 0xd0ab, 0xd0ab, 0xd0ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xd0ab, 0xd0ab, 0xd0aa, 0xd0aa, 0xd0aa, 0xd0aa, 0xd0aa, 0xd0a9,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xcfab, 0xcfab, 0xcfab, 0xcfaa, 0xcfaa, 0xcfaa, 0xcfa9, 0xcfa9,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xceab, 0xceab, 0xceaa, 0xceaa, 0xcea9, 0xcea9, 0xcea8, 0xcea8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xcdad, 0xcdac, 0xcdac, 0xcdac, 0xcdac, 0xcdab, 0xcdab, 0xcdab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xccac, 0xccac, 0xccac, 0xccab, 0xccab, 0xccab, 0xccaa, 0xccaa,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xcbaf, 0xcbae, 0xcbad, 0xcbac, 0xcbac, 0xcbab, 0xcbaa, 0xcba9,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xcac2, 0xcac2, 0xcac1, 0xcac0, 0xcac0, 0xcabf, 0xcabe, 0xcabe,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xcabd, 0xcabc, 0xcabc, 0xcabb, 0xcaba, 0xcaba, 0xcab9, 0xcab8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xcab7, 0xcab7, 0xcab6, 0xcab5, 0xcab5, 0xcab4, 0xcab3, 0xcab3,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xcab2, 0xcab1, 0xcab1, 0xcab0, 0xcaaf, 0xcaaf, 0xcaae, 0xcaad,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xcaad, 0xcaac, 0xcaac, 0xcaab, 0xcaaa, 0xcaaa, 0xcaa9, 0xcaa8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xc9ac, 0xc9ac, 0xc9ab, 0xc9ab, 0xc9aa, 0xc9a9, 0xc9a9, 0xc9a8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xc8ad, 0xc8ad, 0xc8ac, 0xc8ab, 0xc8aa, 0xc8a9, 0xc8a9, 0xc8a8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xc7af, 0xc7ad, 0xc7ac, 0xc7ab, 0xc7a9, 0xc7a8, 0xc7a7, 0xc7a5,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xc6af, 0xc6ae, 0xc6ad, 0xc6ac, 0xc6ab, 0xc6aa, 0xc6a8, 0xc6a7,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xc5ac, 0xc5ab, 0xc5aa, 0xc5a9, 0xc5a8, 0xc5a7, 0xc5a6, 0xc5a5,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xc2bd, 0xc2ba, 0xc2b7, 0xc2b4, 0xc2b1, 0xc2ae, 0xc2ab, 0xc2a8,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xc1ba, 0xc1b7, 0xc1b4, 0xc1b1, 0xc1ae, 0xc1ab, 0xc1a8, 0xc1a6,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xbcb4, 0xbcb0, 0xbcab, 0xbca6, 0xbca2, 0xbc9d, 0xbc99, 0xbc94,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xbadb, 0xbad2, 0xbac9, 0xbac0, 0xbab7, 0xbaae, 0xbaa5, 0xba9c,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xb8ab, 0xb8a2, 0xb899, 0xb891, 0xb888, 0xb880, 0xb877, 0xb86e,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xb10d, 0xb0ec, 0xb0cb, 0xb0ab, 0xb08a, 0xb06a, 0xb049, 0xb029,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0xac04, 0xab87, 0xab06, 0xaa85, 0xaa05, 0xa984, 0xa903, 0xa883,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x3aa5, 0x3ab3, 0x3ac1, 0x3ad0, 0x3ade, 0x3aed, 0x3afb, 0x3b09,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x40a2, 0x40a5, 0x40a8, 0x40ab, 0x40ae, 0x40b1, 0x40b4, 0x40b7,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x44a7, 0x44a8, 0x44aa, 0x44ab, 0x44ac, 0x44ad, 0x44ae, 0x44af,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x45ab, 0x45ad, 0x45af, 0x45b1, 0x45b3, 0x45b5, 0x45b7, 0x45b9,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x47a0, 0x47a2, 0x47a3, 0x47a5, 0x47a6, 0x47a8, 0x47a9, 0x47ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x48a8, 0x48a9, 0x48a9, 0x48aa, 0x48ab, 0x48ab, 0x48ac, 0x48ac,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x49ab, 0x49ac, 0x49ad, 0x49ae, 0x49af, 0x49b0, 0x49b1, 0x49b2,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4aa8, 0x4aa9, 0x4aaa, 0x4aaa, 0x4aab, 0x4aac, 0x4aad, 0x4aad,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4aae, 0x4aaf, 0x4ab0, 0x4ab0, 0x4ab1, 0x4ab2, 0x4ab3, 0x4ab3,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4ab4, 0x4ab5, 0x4ab6, 0x4ab6, 0x4ab7, 0x4ab8, 0x4ab9, 0x4ab9,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4aba, 0x4abb, 0x4abc, 0x4abc, 0x4abd, 0x4abe, 0x4abf, 0x4abf,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4ba8, 0x4ba9, 0x4ba9, 0x4baa, 0x4baa, 0x4bab, 0x4bac, 0x4bac,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4cab, 0x4cab, 0x4cab, 0x4cac, 0x4cac, 0x4cad, 0x4cad, 0x4cad,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4dab, 0x4dab, 0x4dac, 0x4dac, 0x4dac, 0x4dad, 0x4dad, 0x4dae,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4eaa, 0x4eaa, 0x4eab, 0x4eab, 0x4eab, 0x4eac, 0x4eac, 0x4eac,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4fa8, 0x4fa9, 0x4fa9, 0x4fa9, 0x4faa, 0x4faa, 0x4faa, 0x4fab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x4fab, 0x4fab, 0x4fac, 0x4fac, 0x4fac, 0x4fad, 0x4fad, 0x4fad,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x50aa, 0x50aa, 0x50aa, 0x50aa, 0x50aa, 0x50ab, 0x50ab, 0x50ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x50ab, 0x50ab, 0x50ab, 0x50ab, 0x50ac, 0x50ac, 0x50ac, 0x50ac,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x51aa, 0x51aa, 0x51aa, 0x51aa, 0x51ab, 0x51ab, 0x51ab, 0x51ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x51ab, 0x51ac, 0x51ac, 0x51ac, 0x51ac, 0x51ad, 0x51ad, 0x51ad,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x52aa, 0x52aa, 0x52aa, 0x52ab, 0x52ab, 0x52ab, 0x52ab, 0x52ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x52ab, 0x52ac, 0x52ac, 0x52ac, 0x52ac, 0x52ac, 0x52ac, 0x52ad,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x53aa, 0x53aa, 0x53aa, 0x53aa, 0x53ab, 0x53ab, 0x53ab, 0x53ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x54aa, 0x54aa, 0x54aa, 0x54aa, 0x54ab, 0x54ab, 0x54ab, 0x54ab,
3rdparty/openexr/IlmImf/b44ExpLogTable.h:    0x54ab, 0x54ab, 0x54ab, 0x54ab, 0x54ab, 0x54ab, 0x54ab, 0x54ac,
3rdparty/openexr/IlmImf/ImfThreading.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfThreading.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfCompressionAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfCompressionAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfConvert.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfConvert.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfVersion.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfVersion.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfEnvmap.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfEnvmap.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledMisc.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTiledMisc.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfBoxAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfBoxAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledOutputFile.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTiledOutputFile.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledOutputFile.h:    // image file.  The file or parts of it may not be readable,
3rdparty/openexr/IlmImf/ImfChannelListAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfChannelListAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/b44ExpLogTable.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/b44ExpLogTable.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/b44ExpLogTable.cpp://	b44ExpLogTable
3rdparty/openexr/IlmImf/b44ExpLogTable.cpp://	A program to generate lookup tables for
3rdparty/openexr/IlmImf/b44ExpLogTable.cpp://	The tables are used by class B44Compressor.
3rdparty/openexr/IlmImf/b44ExpLogTable.cpp:// Main - prints the half-to-float lookup table
3rdparty/openexr/IlmImf/b44ExpLogTable.cpp:    cout << "const unsigned short expTable[] =\n"
3rdparty/openexr/IlmImf/b44ExpLogTable.cpp:    cout << "const unsigned short logTable[] =\n"
3rdparty/openexr/IlmImf/ImfRational.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfRational.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfInt64.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfInt64.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTimeCode.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTimeCode.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTimeCode.h://	listed above and a more compact representation where the fields
3rdparty/openexr/IlmImf/ImfScanLineInputFile.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfScanLineInputFile.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfScanLineInputFile.h:    // writing may have been aborted prematurely.)
3rdparty/openexr/IlmImf/ImfScanLineInputFile.h:    // If threading is enabled, readPixels (s1, s2) tries to perform
3rdparty/openexr/IlmImf/ImfConvert.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfConvert.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRational.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfRational.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfVersion.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfVersion.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfVersion.h:// on a file's version identifier, a file reader can enable various
3rdparty/openexr/IlmImf/ImfVersion.h:// file is probably an OpenEXR image file, false if not.
3rdparty/openexr/IlmImf/ImfStringAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfStringAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfFloatAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfFloatAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRleCompressor.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfRleCompressor.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    float latitude = (r < abs (dir.y))?
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    float absx = abs (direction.x);
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    float absy = abs (direction.y);
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    float absz = abs (direction.z);
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    if (absx >= absy && absx >= absz)
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    if (absx == 0)
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    pif.x = (direction.y / absx + 1) / 2 * (sof - 1);
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    pif.y = (direction.z / absx + 1) / 2 * (sof - 1);
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    else if (absy >= absz)
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    pif.x = (direction.x / absy + 1) / 2 * (sof - 1);
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    pif.y = (direction.z / absy + 1) / 2 * (sof - 1);
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    pif.x = (direction.x / absz + 1) / 2 * (sof - 1);
3rdparty/openexr/IlmImf/ImfEnvmap.cpp:    pif.y = (direction.y / absz + 1) / 2 * (sof - 1);
3rdparty/openexr/IlmImf/ImfTimeCodeAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTimeCodeAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfInputFile.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfInputFile.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfInputFile.h:    // writing may have been aborted prematurely.)
3rdparty/openexr/IlmImf/ImfMisc.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfMisc.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfMisc.h:// Build a table that lists, for each scanline in a file's
3rdparty/openexr/IlmImf/ImfMisc.h:size_t	bytesPerLineTable (const Header &header,
3rdparty/openexr/IlmImf/ImfMisc.h:// in a "line buffer".  Function offsetInLineBufferTable()
3rdparty/openexr/IlmImf/ImfMisc.h:// builds a table that lists, for each scan line in a file's
3rdparty/openexr/IlmImf/ImfMisc.h:void	offsetInLineBufferTable (const std::vector<size_t> &bytesPerLine,
3rdparty/openexr/IlmImf/ImfArray.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfArray.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfArray.h:    // leaves the array in an unusable state.
3rdparty/openexr/IlmImf/ImfArray.h:    // leaves the array in an unusable state.
3rdparty/openexr/IlmImf/ImfLut.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfLut.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfLut.h://	Lookup tables for efficient application
3rdparty/openexr/IlmImf/ImfLut.h:// Lookup table for individual half channels.
3rdparty/openexr/IlmImf/ImfLut.h:    // Apply the table to data[0], data[stride] ... data[(nData-1) * stride]
3rdparty/openexr/IlmImf/ImfLut.h:    // Apply the table to a frame buffer slice (see ImfFrameBuffer.h)
3rdparty/openexr/IlmImf/ImfLut.h:// Lookup table for combined RGBA data.
3rdparty/openexr/IlmImf/ImfLut.h:    // Apply the table to data[0], data[stride] ... data[(nData-1) * stride]
3rdparty/openexr/IlmImf/ImfLut.h:    // Apply the table to a frame buffer (see RgbaOutpuFile.setFrameBuffer())
3rdparty/openexr/IlmImf/ImfPreviewImageAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfPreviewImageAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfHeader.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfHeader.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfHeader.h:// variables.
3rdparty/openexr/IlmImf/ImfHeader.h:// initialization of the library's global variables happens automatically.
3rdparty/openexr/IlmImf/ImfCRgbaFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfCRgbaFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfWav.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfWav.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfVecAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfVecAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfLineOrderAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfLineOrderAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfIO.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfIO.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfIO.h:// class IStream -- an abstract base class for input streams.
3rdparty/openexr/IlmImf/ImfIO.h:// class OStream -- an abstract base class for output streams
3rdparty/openexr/IlmImf/ImfTimeCodeAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTimeCodeAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfPreviewImage.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfPreviewImage.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledInputFile.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTiledInputFile.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledInputFile.h:    // writing the file, or file writing may have been aborted
3rdparty/openexr/IlmImf/ImfStandardAttributes.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfStandardAttributes.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfStandardAttributes.h:// comments -- additional image information in human-readable
3rdparty/openexr/IlmImf/ImfStandardAttributes.h:// is in meters above sea level.  For example, Kathmandu, Nepal is
3rdparty/openexr/IlmImf/ImfTiledMisc.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTiledMisc.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfName.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfName.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfStandardAttributes.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfStandardAttributes.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfChromaticitiesAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfChromaticitiesAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfStringVectorAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfStringVectorAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfHuf.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfHuf.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfHuf.cpp:const int HUF_ENCSIZE = (1 << HUF_ENCBITS) + 1;	// encoding table size
3rdparty/openexr/IlmImf/ImfHuf.cpp:const int HUF_DECSIZE =  1 << HUF_DECBITS;	// decoding table size
3rdparty/openexr/IlmImf/ImfHuf.cpp:invalidTableSize ()
3rdparty/openexr/IlmImf/ImfHuf.cpp:            "(invalid code table size).");
3rdparty/openexr/IlmImf/ImfHuf.cpp:unexpectedEndOfTable ()
3rdparty/openexr/IlmImf/ImfHuf.cpp:            "(unexpected end of code table data).");
3rdparty/openexr/IlmImf/ImfHuf.cpp:tableTooLong ()
3rdparty/openexr/IlmImf/ImfHuf.cpp:            "(code table is longer than expected).");
3rdparty/openexr/IlmImf/ImfHuf.cpp:invalidTableEntry ()
3rdparty/openexr/IlmImf/ImfHuf.cpp:            "(invalid code table entry).");
3rdparty/openexr/IlmImf/ImfHuf.cpp:// Build a "canonical" Huffman code table:
3rdparty/openexr/IlmImf/ImfHuf.cpp://	- because the canonical code table can be constructed from
3rdparty/openexr/IlmImf/ImfHuf.cpp://	  symbol lengths alone, the code table can be transmitted
3rdparty/openexr/IlmImf/ImfHuf.cpp:hufCanonicalCodeTable (Int64 hcode[HUF_ENCSIZE])
3rdparty/openexr/IlmImf/ImfHuf.cpp:    // code for symbol i.  Assign the next available
3rdparty/openexr/IlmImf/ImfHuf.cpp://	- encoding tables are used by hufEncode() and hufBuildDecTable();
3rdparty/openexr/IlmImf/ImfHuf.cpp:hufBuildEncTable
3rdparty/openexr/IlmImf/ImfHuf.cpp:    (Int64*	frq,	// io: input frequencies [HUF_ENCSIZE], output table
3rdparty/openexr/IlmImf/ImfHuf.cpp:    // Build a canonical Huffman code table, replacing the code
3rdparty/openexr/IlmImf/ImfHuf.cpp:    // code table from scode into frq.
3rdparty/openexr/IlmImf/ImfHuf.cpp:    hufCanonicalCodeTable (scode);
3rdparty/openexr/IlmImf/ImfHuf.cpp:// Pack an encoding table:
3rdparty/openexr/IlmImf/ImfHuf.cpp:hufPackEncTable
3rdparty/openexr/IlmImf/ImfHuf.cpp:    (const Int64*	hcode,		// i : encoding table [HUF_ENCSIZE]
3rdparty/openexr/IlmImf/ImfHuf.cpp:     char**		pcode)		//  o: ptr to packed table (updated)
3rdparty/openexr/IlmImf/ImfHuf.cpp:// Unpack an encoding table packed by hufPackEncTable():
3rdparty/openexr/IlmImf/ImfHuf.cpp:hufUnpackEncTable
3rdparty/openexr/IlmImf/ImfHuf.cpp:    (const char**	pcode,		// io: ptr to packed table (updated)
3rdparty/openexr/IlmImf/ImfHuf.cpp:     Int64*		hcode)		//  o: encoding table [HUF_ENCSIZE]
3rdparty/openexr/IlmImf/ImfHuf.cpp:        unexpectedEndOfTable();
3rdparty/openexr/IlmImf/ImfHuf.cpp:        unexpectedEndOfTable();
3rdparty/openexr/IlmImf/ImfHuf.cpp:        tableTooLong();
3rdparty/openexr/IlmImf/ImfHuf.cpp:        tableTooLong();
3rdparty/openexr/IlmImf/ImfHuf.cpp:    hufCanonicalCodeTable (hcode);
3rdparty/openexr/IlmImf/ImfHuf.cpp:// Clear a newly allocated decoding table so that it contains only zeroes.
3rdparty/openexr/IlmImf/ImfHuf.cpp:hufClearDecTable
3rdparty/openexr/IlmImf/ImfHuf.cpp:                        //     decoding table [HUF_DECSIZE]
3rdparty/openexr/IlmImf/ImfHuf.cpp:// Build a decoding hash table based on the encoding table hcode:
3rdparty/openexr/IlmImf/ImfHuf.cpp://	- short codes (<= HUF_DECBITS) are resolved with a single table access;
3rdparty/openexr/IlmImf/ImfHuf.cpp://	- decoding tables are used by hufDecode();
3rdparty/openexr/IlmImf/ImfHuf.cpp:hufBuildDecTable
3rdparty/openexr/IlmImf/ImfHuf.cpp:    (const Int64*	hcode,		// i : encoding table
3rdparty/openexr/IlmImf/ImfHuf.cpp:                        //     decoding table [HUF_DECSIZE]
3rdparty/openexr/IlmImf/ImfHuf.cpp:    // Init hashtable & loop on all codes.
3rdparty/openexr/IlmImf/ImfHuf.cpp:    // Assumes that hufClearDecTable(hdecod) has already been called.
3rdparty/openexr/IlmImf/ImfHuf.cpp:        invalidTableEntry();
3rdparty/openexr/IlmImf/ImfHuf.cpp:        // been stored in table entry *pl.
3rdparty/openexr/IlmImf/ImfHuf.cpp:        invalidTableEntry();
3rdparty/openexr/IlmImf/ImfHuf.cpp:            // already been stored in table entry *pl.
3rdparty/openexr/IlmImf/ImfHuf.cpp:            invalidTableEntry();
3rdparty/openexr/IlmImf/ImfHuf.cpp:// Free the long code entries of a decoding table built by hufBuildDecTable()
3rdparty/openexr/IlmImf/ImfHuf.cpp:hufFreeDecTable (HufDec *hdecod)	// io: Decoding table
3rdparty/openexr/IlmImf/ImfHuf.cpp:// Encode (compress) ni values based on the Huffman encoding table hcode:
3rdparty/openexr/IlmImf/ImfHuf.cpp:    (const Int64*  	    hcode,	// i : encoding table
3rdparty/openexr/IlmImf/ImfHuf.cpp:// Decode (uncompress) ni bits based on encoding & decoding tables:
3rdparty/openexr/IlmImf/ImfHuf.cpp:    (const Int64 * 	hcode,	// i : encoding table
3rdparty/openexr/IlmImf/ImfHuf.cpp:     const HufDec * 	hdecod,	// i : decoding table
3rdparty/openexr/IlmImf/ImfHuf.cpp:    // Access decoding table
3rdparty/openexr/IlmImf/ImfHuf.cpp:    hufBuildEncTable (freq, &im, &iM);
3rdparty/openexr/IlmImf/ImfHuf.cpp:    char *tableStart = compressed + 20;
3rdparty/openexr/IlmImf/ImfHuf.cpp:    char *tableEnd   = tableStart;
3rdparty/openexr/IlmImf/ImfHuf.cpp:    hufPackEncTable (freq, im, iM, &tableEnd);
3rdparty/openexr/IlmImf/ImfHuf.cpp:    int tableLength = tableEnd - tableStart;
3rdparty/openexr/IlmImf/ImfHuf.cpp:    char *dataStart = tableEnd;
3rdparty/openexr/IlmImf/ImfHuf.cpp:    writeUInt (compressed +  8, tableLength);
3rdparty/openexr/IlmImf/ImfHuf.cpp:    // int tableLength = readUInt (compressed + 8);
3rdparty/openexr/IlmImf/ImfHuf.cpp:    invalidTableSize();
3rdparty/openexr/IlmImf/ImfHuf.cpp:    hufClearDecTable (hdec);
3rdparty/openexr/IlmImf/ImfHuf.cpp:    hufUnpackEncTable (&ptr, nCompressed - (ptr - compressed), im, iM, freq);
3rdparty/openexr/IlmImf/ImfHuf.cpp:    hufBuildDecTable (freq, im, iM, hdec);
3rdparty/openexr/IlmImf/ImfHuf.cpp:    hufFreeDecTable (hdec);
3rdparty/openexr/IlmImf/ImfHuf.cpp:    hufFreeDecTable (hdec);
3rdparty/openexr/IlmImf/ImfStdIO.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfStdIO.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfAutoArray.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfAutoArray.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTileOffsets.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTileOffsets.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTileDescription.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTileDescription.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfChannelListAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfChannelListAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfInputFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfInputFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfCompression.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfCompression.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfDoubleAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfDoubleAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfWav.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfWav.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledRgbaFile.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTiledRgbaFile.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledRgbaFile.h:    // it may not be readable, or the file may contain
3rdparty/openexr/IlmImf/ImfPxr24Compressor.h:// *       Redistributions of source code must retain the above  copyright
3rdparty/openexr/IlmImf/ImfPxr24Compressor.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfMultiView.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfMultiView.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfKeyCodeAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfKeyCodeAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfKeyCodeAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfKeyCodeAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfAttribute.h:    // a global variable in the IlmIlm library.  A thread in a multi-
3rdparty/openexr/IlmImf/ImfAttribute.h:    // Tell MS VC++ to disable "non dll-interface class used as base
3rdparty/openexr/IlmImf/ImfAttribute.h:    // for dll-interface class" and "no suitable definition provided
3rdparty/openexr/IlmImf/ImfAttribute.h:    #pragma warning (disable : 4275 4661)
3rdparty/openexr/IlmImf/ImfChannelList.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfChannelList.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfChannelList.h:    //				all layers, sorted alphabetically,
3rdparty/openexr/IlmImf/ImfXdr.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfXdr.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRgba.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfRgba.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfMisc.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfMisc.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfMisc.cpp:bytesPerLineTable (const Header &header,
3rdparty/openexr/IlmImf/ImfMisc.cpp:offsetInLineBufferTable (const vector<size_t> &bytesPerLine,
3rdparty/openexr/IlmImf/ImfMultiView.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfMultiView.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfFramesPerSecond.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfFramesPerSecond.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfOpaqueAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfOpaqueAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfAcesFile.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfAcesFile.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfAcesFile.h://	restrictions listed above.  Pixel data supplied by application
3rdparty/openexr/IlmImf/ImfCompressor.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfCompressor.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTestFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTestFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfFramesPerSecond.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfFramesPerSecond.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfFramesPerSecond.cpp:    if (abs (double (fps) - double (fps_23_976())) < e)
3rdparty/openexr/IlmImf/ImfFramesPerSecond.cpp:    if (abs (double (fps) - double (fps_29_97())) < e)
3rdparty/openexr/IlmImf/ImfFramesPerSecond.cpp:    if (abs (double (fps) - double (fps_47_952())) < e)
3rdparty/openexr/IlmImf/ImfFramesPerSecond.cpp:    if (abs (double (fps) - double (fps_59_94())) < e)
3rdparty/openexr/IlmImf/ImfTileDescriptionAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTileDescriptionAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTiledRgbaFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTiledRgbaFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfPizCompressor.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfPizCompressor.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfB44Compressor.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfB44Compressor.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfB44Compressor.cpp:// Lookup tables for
3rdparty/openexr/IlmImf/ImfB44Compressor.cpp:#include "b44ExpLogTable.h"
3rdparty/openexr/IlmImf/ImfB44Compressor.cpp:    s[i] = expTable[s[i]];
3rdparty/openexr/IlmImf/ImfB44Compressor.cpp:    s[i] = logTable[s[i]];
3rdparty/openexr/IlmImf/ImfB44Compressor.cpp:    // Compute absolute differences, d[0] ... d[15],
3rdparty/openexr/IlmImf/ImfB44Compressor.cpp:    // Shift and round the absolute differences.
3rdparty/openexr/IlmImf/ImfB44Compressor.cpp:    // above.  First all pixels are moved from the input buffer
3rdparty/openexr/IlmImf/ImfRgbaFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfRgbaFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRgbaFile.cpp:    // scan line plus N2+1 extra scan lines above and N2+1 scan lines
3rdparty/openexr/IlmImf/ImfRgbaFile.cpp:    // in increasing y or decreasing y order reasonably efficient:
3rdparty/openexr/IlmImf/ImfRgbaFile.cpp:    if (abs (dy) < N + 2)
3rdparty/openexr/IlmImf/ImfRgbaFile.cpp:    if (abs (dy) < 3)
3rdparty/openexr/IlmImf/ImfIntAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfIntAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfChromaticities.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfChromaticities.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfIntAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfIntAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:    vector<InSliceInfo>	slices;             // info about channels in file
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:    // table for incomplete files, and exceptions
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:        // Invalid data in the line offset table mean that
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:        // the file is probably incomplete (the table is
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:        // or writing the file was aborted.
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:        // We should still be able to read the existing
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:        // line data to reconstruct the line offset table.
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:    // Wait for a line buffer to become available, fill the line
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:    size_t maxBytesPerLine = bytesPerLineTable (_data->header,
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:    offsetInLineBufferTable (_data->bytesPerLine,
3rdparty/openexr/IlmImf/ImfScanLineInputFile.cpp:    // Initialize the slice table for readPixels().
3rdparty/openexr/IlmImf/ImfChannelList.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfChannelList.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfHeader.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfHeader.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfHeader.cpp:    // If the file is tiled, verify that the tile description has resonable
3rdparty/openexr/IlmImf/ImfFloatAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfFloatAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfPxr24Compressor.cpp:// *       Redistributions of source code must retain the above  copyright
3rdparty/openexr/IlmImf/ImfPxr24Compressor.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTileDescriptionAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTileDescriptionAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfTestFile.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfTestFile.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfMatrixAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfMatrixAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfRationalAttribute.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfRationalAttribute.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmImf/ImfCompressionAttribute.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmImf/ImfCompressionAttribute.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadSemaphorePosixCompat.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadSemaphorePosixCompat.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadSemaphorePosixCompat.cpp:        Iex::throwErrnoExc ("Cannot initialize condition variable (%T).",
3rdparty/openexr/IlmThread/IlmThreadSemaphorePosixCompat.cpp:            Iex::throwErrnoExc ("Cannot wait on condition variable (%T).",
3rdparty/openexr/IlmThread/IlmThreadSemaphorePosixCompat.cpp:            Iex::throwErrnoExc ("Cannot signal condition variable (%T).",
3rdparty/openexr/IlmThread/IlmThreadMutexWin32.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadMutexWin32.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThread.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThread.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadMutexPosix.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadMutexPosix.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadSemaphoreWin32.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadSemaphoreWin32.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadSemaphore.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadSemaphore.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadSemaphore.h:    mutable HANDLE _semaphore;
3rdparty/openexr/IlmThread/IlmThreadSemaphore.h:    // then we implement them ourselves using condition variables
3rdparty/openexr/IlmThread/IlmThreadSemaphore.h:    mutable sema_t _semaphore;
3rdparty/openexr/IlmThread/IlmThreadSemaphore.h:    mutable sem_t _semaphore;
3rdparty/openexr/IlmThread/IlmThreadMutex.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadMutex.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadPosix.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadPosix.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadWin32.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadWin32.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadPool.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadPool.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadPool.cpp:        // Wait for a task to become available
3rdparty/openexr/IlmThread/IlmThreadPool.cpp:    // is above 0 then waiting on the taskgroup will block.  This
3rdparty/openexr/IlmThread/IlmThreadMutex.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadMutex.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadMutex.h:    mutable CRITICAL_SECTION _mutex;
3rdparty/openexr/IlmThread/IlmThreadMutex.h:    mutable pthread_mutex_t _mutex;
3rdparty/openexr/IlmThread/IlmThreadSemaphore.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadSemaphore.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThread.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThread.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThread.h://	Class Thread is a portable interface to a system-dependent thread
3rdparty/openexr/IlmThread/IlmThread.h://	include a Semaphore member variable within your derived class
3rdparty/openexr/IlmThread/IlmThread.h:// threads AND this library was compiled with threading enabled.
3rdparty/openexr/IlmThread/IlmThreadPool.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadPool.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/IlmThread/IlmThreadPool.h://	Class Thread provides an abstract interface for a task which
3rdparty/openexr/IlmThread/IlmThreadPool.h:    // wait until a task is available.
3rdparty/openexr/IlmThread/IlmThreadPool.h:    // by threads as they become available, in FIFO order.
3rdparty/openexr/IlmThread/IlmThreadSemaphorePosix.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/IlmThread/IlmThreadSemaphorePosix.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathGLU.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathGLU.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathRandom.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathRandom.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathExc.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathExc.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathPlane.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathPlane.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathInterval.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathInterval.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathBoxAlgo.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathBoxAlgo.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathBoxAlgo.h:    // As in the transform() function, above, we use James Arvo's
3rdparty/openexr/Imath/ImathBoxAlgo.h:    // As in the transform() function, above, we use James Arvo's
3rdparty/openexr/Imath/ImathBoxAlgo.h:        (abs (d1) < TMAX * r.dir.x &&
3rdparty/openexr/Imath/ImathBoxAlgo.h:         abs (d2) < TMAX * r.dir.x))
3rdparty/openexr/Imath/ImathBoxAlgo.h:        (abs (d1) < -TMAX * r.dir.x &&
3rdparty/openexr/Imath/ImathBoxAlgo.h:         abs (d2) < -TMAX * r.dir.x))
3rdparty/openexr/Imath/ImathBoxAlgo.h:        (abs (d1) < TMAX * r.dir.y &&
3rdparty/openexr/Imath/ImathBoxAlgo.h:         abs (d2) < TMAX * r.dir.y))
3rdparty/openexr/Imath/ImathBoxAlgo.h:        (abs (d1) < -TMAX * r.dir.y &&
3rdparty/openexr/Imath/ImathBoxAlgo.h:         abs (d2) < -TMAX * r.dir.y))
3rdparty/openexr/Imath/ImathBoxAlgo.h:        (abs (d1) < TMAX * r.dir.z &&
3rdparty/openexr/Imath/ImathBoxAlgo.h:         abs (d2) < TMAX * r.dir.z))
3rdparty/openexr/Imath/ImathBoxAlgo.h:        (abs (d1) < -TMAX * r.dir.z &&
3rdparty/openexr/Imath/ImathBoxAlgo.h:         abs (d2) < -TMAX * r.dir.z))
3rdparty/openexr/Imath/ImathGL.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathGL.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathGL.h:inline void glDisableTexture()
3rdparty/openexr/Imath/ImathGL.h:    glDisable(GL_TEXTURE_2D);
3rdparty/openexr/Imath/ImathEuler.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathEuler.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathEuler.h://	been modified minimally to make it more understandable, but
3rdparty/openexr/Imath/ImathEuler.h://	probably only use 6 of these which in this scheme are the
3rdparty/openexr/Imath/ImathEuler.h:// Disable MS VC++ warnings about conversion from double to float
3rdparty/openexr/Imath/ImathEuler.h:#pragma warning(disable:4244)
3rdparty/openexr/Imath/ImathEuler.h:    //               and it probably doesn't work for repeated axis and
3rdparty/openexr/Imath/ImathBox.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathBox.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathBox.h://	   (since its assumed its a vector) -- preferably, this
3rdparty/openexr/Imath/ImathFun.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathFun.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathFun.h:abs (T a)
3rdparty/openexr/Imath/ImathFun.h:    if (abs(d) > T(1) || abs(n) < limits<T>::max() * abs(d))
3rdparty/openexr/Imath/ImathFun.h:    return (Imath::abs (a - b) <= t)? 0 : cmp (a, b);
3rdparty/openexr/Imath/ImathFun.h:    return (Imath::abs (a) <= t) ? 1 : 0;
3rdparty/openexr/Imath/ImathFun.h:    return Imath::abs (a - b) <= t;
3rdparty/openexr/Imath/ImathFun.h://	divs(x,y) == (abs(x) / abs(y)) * (sign(x) * sign(y))
3rdparty/openexr/Imath/ImathVec.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathVec.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathVec.cpp:#pragma warning(disable:4290)
3rdparty/openexr/Imath/ImathMath.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathMath.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathMath.h:   static T	fabs  (T x)		{return ::fabs (double(x));}
3rdparty/openexr/Imath/ImathMath.h:   static float	fabs  (float x)			{return ::fabsf (x);}
3rdparty/openexr/Imath/ImathMath.h://	Returns true if x1 is the same as x2 with an absolute error of
3rdparty/openexr/Imath/ImathMath.h://	abs (x1 - x2) <= e
3rdparty/openexr/Imath/ImathMath.h://	abs (x1 - x2) <= e * x1
3rdparty/openexr/Imath/ImathColor.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathColor.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathFun.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathFun.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathPlatform.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathPlatform.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:// Matlab parlance.  The method is the 'USVD' algorithm described in the
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    // Load everything into local variables to make things easier on the
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (std::abs(mu_2) <= tol*std::abs(mu_1))  // Already symmetric (to tolerance)
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (std::abs(mu_2) <= tol*std::abs(mu_1))
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:        T t_2 = T(1) / (std::abs(rho_2) + std::sqrt(1 + rho_2*rho_2));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    // Load everything into local variables to make things easier on the
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (std::abs(mu_2) <= tol*std::abs(mu_1))  // Already symmetric (to tolerance)
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (std::abs(mu_2) <= tol*std::abs(mu_1))
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:        T t_2 = T(1) / (std::abs(rho_2) + std::sqrt(1 + rho_2*rho_2));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    result = std::max (result, std::abs (A[0][1]));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    result = std::max (result, std::abs (A[0][2]));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    result = std::max (result, std::abs (A[1][0]));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    result = std::max (result, std::abs (A[1][2]));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    result = std::max (result, std::abs (A[2][0]));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    result = std::max (result, std::abs (A[2][1]));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:                result = std::max (result, std::abs (A[i][j]));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    // are extremely stable to compute and apply (this is why QR factorization
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    const T absTol = tol * maxOffDiag (A);  // Tolerance is in terms of the maximum
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (absTol != 0)                        // _off-diagonal_ entry.
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:        } while (maxOffDiag(A) > absTol && numIter < maxIter);
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:            // No absolute values necessary since we already ensured that
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    const T absTol = tol * maxOffDiag (A);  // Tolerance is in terms of the maximum
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (absTol != 0)                        // _off-diagonal_ entry.
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:        } while (maxOffDiag(A) > absTol && numIter < maxIter);
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:        while (std::abs (S[j]) < std::abs (sVal))
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    // Load everything into local variables to make things easier on the
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (std::abs(mu2) <= tol*std::abs(mu1))
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    const T t = (rho < 0 ? T(-1) : T(1)) / (std::abs(rho) + std::sqrt(1 + rho*rho));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (std::abs(mu2) <= tol*std::abs(mu1))
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    const T t = (rho < 0 ? T(-1) : T(1)) / (std::abs(rho) + std::sqrt(1 + rho*rho));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:            result = std::max (result, std::abs (A[i][j]));
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    const T absTol = tol * maxOffDiagSymm (A);  // Tolerance is in terms of the maximum
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (absTol != 0)                        // _off-diagonal_ entry.
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:        } while (maxOffDiagSymm(A) > absTol && numIter < maxIter);
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    const T absTol = tol * maxOffDiagSymm (A);  // Tolerance is in terms of the maximum
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:    if (absTol != 0)                        // _off-diagonal_ entry.
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:        } while (maxOffDiagSymm(A) > absTol && numIter < maxIter);
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:        if(std::abs(S[i]) > std::abs(S[maxIdx]))
3rdparty/openexr/Imath/ImathMatrixAlgo.cpp:        if(std::abs(S[i]) < std::abs(S[minIdx]))
3rdparty/openexr/Imath/ImathVec.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathVec.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathVec.h:#pragma warning(disable:4290)
3rdparty/openexr/Imath/ImathVec.h:    //	    an absolute error of no more than e, i.e., for all i
3rdparty/openexr/Imath/ImathVec.h:    //      abs (this[i] - v[i]) <= e
3rdparty/openexr/Imath/ImathVec.h:    //      abs (this[i] - v[i]) <= e * abs (this[i])
3rdparty/openexr/Imath/ImathVec.h:    //	    an absolute error of no more than e, i.e., for all i
3rdparty/openexr/Imath/ImathVec.h:    //      abs (this[i] - v[i]) <= e
3rdparty/openexr/Imath/ImathVec.h:    //      abs (this[i] - v[i]) <= e * abs (this[i])
3rdparty/openexr/Imath/ImathVec.h:    //	    an absolute error of no more than e, i.e., for all i
3rdparty/openexr/Imath/ImathVec.h:    //      abs (this[i] - v[i]) <= e
3rdparty/openexr/Imath/ImathVec.h:    //      abs (this[i] - v[i]) <= e * abs (this[i])
3rdparty/openexr/Imath/ImathVec.h:    T absX = (x >= T (0))? x: -x;
3rdparty/openexr/Imath/ImathVec.h:    T absY = (y >= T (0))? y: -y;
3rdparty/openexr/Imath/ImathVec.h:    T max = absX;
3rdparty/openexr/Imath/ImathVec.h:    if (max < absY)
3rdparty/openexr/Imath/ImathVec.h:    max = absY;
3rdparty/openexr/Imath/ImathVec.h:    absX /= max;
3rdparty/openexr/Imath/ImathVec.h:    absY /= max;
3rdparty/openexr/Imath/ImathVec.h:    return max * Math<T>::sqrt (absX * absX + absY * absY);
3rdparty/openexr/Imath/ImathVec.h:    T absW = (vw >= T (0))? vw: -vw;
3rdparty/openexr/Imath/ImathVec.h:    if (absW < 1)
3rdparty/openexr/Imath/ImathVec.h:        T m = baseTypeMax() * absW;
3rdparty/openexr/Imath/ImathVec.h:    T absX = (x >= T (0))? x: -x;
3rdparty/openexr/Imath/ImathVec.h:    T absY = (y >= T (0))? y: -y;
3rdparty/openexr/Imath/ImathVec.h:    T absZ = (z >= T (0))? z: -z;
3rdparty/openexr/Imath/ImathVec.h:    T max = absX;
3rdparty/openexr/Imath/ImathVec.h:    if (max < absY)
3rdparty/openexr/Imath/ImathVec.h:    max = absY;
3rdparty/openexr/Imath/ImathVec.h:    if (max < absZ)
3rdparty/openexr/Imath/ImathVec.h:    max = absZ;
3rdparty/openexr/Imath/ImathVec.h:    absX /= max;
3rdparty/openexr/Imath/ImathVec.h:    absY /= max;
3rdparty/openexr/Imath/ImathVec.h:    absZ /= max;
3rdparty/openexr/Imath/ImathVec.h:    return max * Math<T>::sqrt (absX * absX + absY * absY + absZ * absZ);
3rdparty/openexr/Imath/ImathVec.h:    T absX = (x >= T (0))? x: -x;
3rdparty/openexr/Imath/ImathVec.h:    T absY = (y >= T (0))? y: -y;
3rdparty/openexr/Imath/ImathVec.h:    T absZ = (z >= T (0))? z: -z;
3rdparty/openexr/Imath/ImathVec.h:    T absW = (w >= T (0))? w: -w;
3rdparty/openexr/Imath/ImathVec.h:    T max = absX;
3rdparty/openexr/Imath/ImathVec.h:    if (max < absY)
3rdparty/openexr/Imath/ImathVec.h:        max = absY;
3rdparty/openexr/Imath/ImathVec.h:    if (max < absZ)
3rdparty/openexr/Imath/ImathVec.h:        max = absZ;
3rdparty/openexr/Imath/ImathVec.h:    if (max < absW)
3rdparty/openexr/Imath/ImathVec.h:        max = absW;
3rdparty/openexr/Imath/ImathVec.h:    absX /= max;
3rdparty/openexr/Imath/ImathVec.h:    absY /= max;
3rdparty/openexr/Imath/ImathVec.h:    absZ /= max;
3rdparty/openexr/Imath/ImathVec.h:    absW /= max;
3rdparty/openexr/Imath/ImathVec.h:        Math<T>::sqrt (absX * absX + absY * absY + absZ * absZ + absW * absW);
3rdparty/openexr/Imath/ImathFrustumTest.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathFrustumTest.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathFrustumTest.h:// the frustum, along with the ablsolute values of the plane normals.
3rdparty/openexr/Imath/ImathFrustumTest.h://         box extents dot the abs of the plane normal. (the result is NOT
3rdparty/openexr/Imath/ImathFrustumTest.h:    // the SPECIAL NOTE above.
3rdparty/openexr/Imath/ImathFrustumTest.h:    // The absolute values are stored to assist with bounding box tests.
3rdparty/openexr/Imath/ImathFrustumTest.h:    Vec3<T> planeNormAbsX[2];  // The abs(X) compunents from 6 plane equations
3rdparty/openexr/Imath/ImathFrustumTest.h:    Vec3<T> planeNormAbsY[2];  // The abs(X) compunents from 6 plane equations
3rdparty/openexr/Imath/ImathFrustumTest.h:    Vec3<T> planeNormAbsZ[2];  // The abs(X) compunents from 6 plane equations
3rdparty/openexr/Imath/ImathFrustumTest.h:        planeNormAbsX[i]  = Vec3<T>(Imath::abs(planeNormX[i].x),
3rdparty/openexr/Imath/ImathFrustumTest.h:                                    Imath::abs(planeNormX[i].y),
3rdparty/openexr/Imath/ImathFrustumTest.h:                                    Imath::abs(planeNormX[i].z));
3rdparty/openexr/Imath/ImathFrustumTest.h:        planeNormAbsY[i]  = Vec3<T>(Imath::abs(planeNormY[i].x),
3rdparty/openexr/Imath/ImathFrustumTest.h:                                    Imath::abs(planeNormY[i].y),
3rdparty/openexr/Imath/ImathFrustumTest.h:                                    Imath::abs(planeNormY[i].z));
3rdparty/openexr/Imath/ImathFrustumTest.h:        planeNormAbsZ[i]  = Vec3<T>(Imath::abs(planeNormZ[i].x),
3rdparty/openexr/Imath/ImathFrustumTest.h:                                    Imath::abs(planeNormZ[i].y),
3rdparty/openexr/Imath/ImathFrustumTest.h:                                    Imath::abs(planeNormZ[i].z));
3rdparty/openexr/Imath/ImathLimits.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathLimits.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathLimits.h:// Template class limits<T> returns information about the limits
3rdparty/openexr/Imath/ImathColorAlgo.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathColorAlgo.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathFrame.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathFrame.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathFrame.h:        int i = fabs( t[0] ) < fabs( t[1] ) ? 0 : 1;
3rdparty/openexr/Imath/ImathFrame.h:        if( fabs( t[2] ) < fabs( t[i] )) i = 2;
3rdparty/openexr/Imath/ImathMatrix.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathMatrix.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathMatrix.h:#pragma warning(disable:4290)
3rdparty/openexr/Imath/ImathMatrix.h:    //      an absolute error of no more than e, i.e., for all i, j
3rdparty/openexr/Imath/ImathMatrix.h:    //      abs (this[i][j] - m[i][j]) <= e
3rdparty/openexr/Imath/ImathMatrix.h:    //      abs (this[i] - v[i][j]) <= e * abs (this[i][j])
3rdparty/openexr/Imath/ImathMatrix.h:    //      an absolute error of no more than e, i.e., for all i, j
3rdparty/openexr/Imath/ImathMatrix.h:    //      abs (this[i][j] - m[i][j]) <= e
3rdparty/openexr/Imath/ImathMatrix.h:    //      abs (this[i] - v[i][j]) <= e * abs (this[i][j])
3rdparty/openexr/Imath/ImathMatrix.h:        if (Imath::abs (r) >= 1)
3rdparty/openexr/Imath/ImathMatrix.h:            T mr = Imath::abs (r) / limits<T>::smallest();
3rdparty/openexr/Imath/ImathMatrix.h:                    if (mr > Imath::abs (s[i][j]))
3rdparty/openexr/Imath/ImathMatrix.h:        if (Imath::abs (r) >= 1)
3rdparty/openexr/Imath/ImathMatrix.h:            T mr = Imath::abs (r) / limits<T>::smallest();
3rdparty/openexr/Imath/ImathMatrix.h:                    if (mr > Imath::abs (s[i][j]))
3rdparty/openexr/Imath/ImathMatrix.h:    if (Imath::abs (r) >= 1)
3rdparty/openexr/Imath/ImathMatrix.h:        T mr = Imath::abs (r) / limits<T>::smallest();
3rdparty/openexr/Imath/ImathMatrix.h:                if (mr > Imath::abs (s[i][j]))
3rdparty/openexr/Imath/ImathMatrixAlgo.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathMatrixAlgo.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathMatrixAlgo.h:        if (Imath::abs (row[i][j]) > maxVal)
3rdparty/openexr/Imath/ImathMatrixAlgo.h:        maxVal = Imath::abs (row[i][j]);
3rdparty/openexr/Imath/ImathMatrixAlgo.h:    // It was noticed that this can improve numerical stability significantly,
3rdparty/openexr/Imath/ImathMatrixAlgo.h:    // performed above; shear and rotation are not affected by the
3rdparty/openexr/Imath/ImathMatrixAlgo.h:    if ((abs (scl) < 1 && abs (row[i]) >= limits<T>::max() * abs (scl)))
3rdparty/openexr/Imath/ImathMatrixAlgo.h:        if (Imath::abs (row[i][j]) > maxVal)
3rdparty/openexr/Imath/ImathMatrixAlgo.h:        maxVal = Imath::abs (row[i][j]);
3rdparty/openexr/Imath/ImathMatrixAlgo.h:    // It was noticed that this can improve numerical stability significantly,
3rdparty/openexr/Imath/ImathMatrixAlgo.h:    if ((abs (scl) < 1 && abs (row[i]) >= limits<T>::max() * abs (scl)))
3rdparty/openexr/Imath/ImathMatrixAlgo.h:// Currently only available for single- and double-precision matrices.
3rdparty/openexr/Imath/ImathMatrixAlgo.h:// Compute a eigenvector corresponding to the abs max/min eigenvalue
3rdparty/openexr/Imath/ImathShear.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathShear.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathShear.h:    //	    an absolute error of no more than e, i.e., for all i
3rdparty/openexr/Imath/ImathShear.h:    //      abs (this[i] - h[i]) <= e
3rdparty/openexr/Imath/ImathShear.h:    //      abs (this[i] - h[i]) <= e * abs (this[i])
3rdparty/openexr/Imath/ImathFrustum.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathFrustum.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathFrustum.h://	compatable with OpenGL (or anything that assumes a camera
3rdparty/openexr/Imath/ImathFrustum.h:    if (abs(topMinusBottom) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:    abs(rightMinusLeft) > limits<T>::max() * abs(topMinusBottom))
3rdparty/openexr/Imath/ImathFrustum.h:    if ((abs(rightMinusLeft) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:     abs(rightPlusLeft) > limits<T>::max() * abs(rightMinusLeft)) ||
3rdparty/openexr/Imath/ImathFrustum.h:    (abs(topMinusBottom) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:     abs(topPlusBottom) > limits<T>::max() * abs(topMinusBottom)) ||
3rdparty/openexr/Imath/ImathFrustum.h:    (abs(farMinusNear) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:     abs(farPlusNear) > limits<T>::max() * abs(farMinusNear)))
3rdparty/openexr/Imath/ImathFrustum.h:    if ((abs(rightMinusLeft) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:         2 > limits<T>::max() * abs(rightMinusLeft)) ||
3rdparty/openexr/Imath/ImathFrustum.h:        (abs(topMinusBottom) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:         2 > limits<T>::max() * abs(topMinusBottom)) ||
3rdparty/openexr/Imath/ImathFrustum.h:        (abs(farMinusNear) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:         2 > limits<T>::max() * abs(farMinusNear)))
3rdparty/openexr/Imath/ImathFrustum.h:    if (abs(farMinusNear) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:        abs(farTimesNear) > limits<T>::max() * abs(farMinusNear))
3rdparty/openexr/Imath/ImathFrustum.h:    if ((abs(rightMinusLeft) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:         abs(twoTimesNear) > limits<T>::max() * abs(rightMinusLeft)) ||
3rdparty/openexr/Imath/ImathFrustum.h:        (abs(topMinusBottom) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:         abs(twoTimesNear) > limits<T>::max() * abs(topMinusBottom)))
3rdparty/openexr/Imath/ImathFrustum.h:    if ((abs(leftMinusRight) < T (1) &&
3rdparty/openexr/Imath/ImathFrustum.h:     abs(leftPlusRight) > limits<T>::max() * abs(leftMinusRight)) ||
3rdparty/openexr/Imath/ImathFrustum.h:    (abs(bottomMinusTop) < T (1) &&
3rdparty/openexr/Imath/ImathFrustum.h:     abs(bottomPlusTop) > limits<T>::max() * abs(bottomMinusTop)))
3rdparty/openexr/Imath/ImathFrustum.h:    if (abs(farMinusNear) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:        abs(farTimesNear) > limits<T>::max() * abs(farMinusNear))
3rdparty/openexr/Imath/ImathFrustum.h:    if (abs(farMinusNear) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:        abs(farPlusNear) > limits<T>::max() * abs(farMinusNear))
3rdparty/openexr/Imath/ImathFrustum.h:    if (abs(depth) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:        abs(farTimesNear) > limits<T>::max() * abs(depth))
3rdparty/openexr/Imath/ImathFrustum.h:    if (abs(farMinusNear) < 1 &&
3rdparty/openexr/Imath/ImathFrustum.h:        abs(farPlusNear) > limits<T>::max() * abs(farMinusNear))
3rdparty/openexr/Imath/ImathFrustum.h:    if (abs(p.z) > 1 || abs(-_nearPlane) < limits<T>::max() * abs(p.z))
3rdparty/openexr/Imath/ImathFrustum.h:    if (abs(-_nearPlane) > 1 || abs(p.z) < limits<T>::max() * abs(-_nearPlane))
3rdparty/openexr/Imath/ImathRoots.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathRoots.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathRoots.h://	solutions (or some intermediate result) are not representable.
3rdparty/openexr/Imath/ImathRoots.h://	enabled with Iex::mathExcOn(), an Iex::MathExc exception is
3rdparty/openexr/Imath/ImathQuat.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathQuat.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathQuat.h://      will probably want to use this class to represent orientations
3rdparty/openexr/Imath/ImathQuat.h://	should probably use Imath::Euler<> for that.
3rdparty/openexr/Imath/ImathQuat.h:// Disable MS VC++ warnings about conversion from double to float
3rdparty/openexr/Imath/ImathQuat.h:#pragma warning(disable:4244)
3rdparty/openexr/Imath/ImathQuat.h:    if (abs (sintheta) < 1 && abs (theta) >= limits<T>::max() * abs (sintheta))
3rdparty/openexr/Imath/ImathQuat.h:    if (abs (theta) < 1 && abs (sintheta) >= limits<T>::max() * abs (theta))
3rdparty/openexr/Imath/ImathQuat.h:    // This function is called by setRotation(), above; it assumes
3rdparty/openexr/Imath/ImathRandom.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathRandom.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathRandom.h://	available on all operating systems.  For compatibility we include
3rdparty/openexr/Imath/ImathRandom.h:    float y;		// numbers, we make these variables singe-precision
3rdparty/openexr/Imath/ImathInt64.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathInt64.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathLine.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathLine.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathLine.h:    T absDenom = ((denom >= 0)? denom: -denom);
3rdparty/openexr/Imath/ImathLine.h:    if (absDenom < 1)
3rdparty/openexr/Imath/ImathLine.h:    T absNum = ((num >= 0)? num: -num);
3rdparty/openexr/Imath/ImathLine.h:    if (absNum >= absDenom * limits<T>::max())
3rdparty/openexr/Imath/ImathHalfLimits.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathHalfLimits.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathLineAlgo.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathLineAlgo.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathLineAlgo.h:    T absD = abs (d);
3rdparty/openexr/Imath/ImathLineAlgo.h:    if ((absD > 1) ||
3rdparty/openexr/Imath/ImathLineAlgo.h:    (abs (n1) < limits<T>::max() * absD &&
3rdparty/openexr/Imath/ImathLineAlgo.h:     abs (n2) < limits<T>::max() * absD))
3rdparty/openexr/Imath/ImathLineAlgo.h:    if (abs (nd) > 1 || abs (d) < limits<T>::max() * abs (nd))
3rdparty/openexr/Imath/ImathColorAlgo.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathColorAlgo.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathSphere.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathSphere.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Imath/ImathVecAlgo.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Imath/ImathVecAlgo.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Half/eLut.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Half/eLut.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Half/eLut.cpp:// Compute a lookup table for float-to-half conversion.
3rdparty/openexr/Half/eLut.cpp:// a float, the table either returns the combined sign
3rdparty/openexr/Half/eLut.cpp:// Main - prints the sign-and-exponent conversion lookup table
3rdparty/openexr/Half/eLut.cpp:    const int tableSize = 1 << 9;
3rdparty/openexr/Half/eLut.cpp:    unsigned short eLut[tableSize];
3rdparty/openexr/Half/eLut.cpp:    for (int i = 0; i < tableSize; i++)
3rdparty/openexr/Half/eLut.cpp:        if (i < tableSize - 1)
3rdparty/openexr/Half/halfFunction.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Half/halfFunction.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Half/halfFunction.h://	[domainMin, domainMax], and stores the results in a lookup table.
3rdparty/openexr/Half/halfFunction.h://	constructor stores defaultValue in the table.  For positive infinity,
3rdparty/openexr/Half/halfFunction.h://	are stored in the table.
3rdparty/openexr/Half/halfFunction.h://	The tabulated function can then be evaluated quickly for arbitrary
3rdparty/openexr/Half/half.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Half/half.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Half/half.h://	with an absolute error of 6.0e-8.  All integers from -2048 to
3rdparty/openexr/Half/half.h://	are exactly representable as floats.
3rdparty/openexr/Half/half.h://	exactly.  If a float is not representable as a half, then the
3rdparty/openexr/Half/half.h://	float value is rounded to the nearest representable half.  If a
3rdparty/openexr/Half/half.h://	representable half values, then the float value is rounded to
3rdparty/openexr/Half/half.h://	about the implementation of the built-in C++ types:
3rdparty/openexr/Half/half.h://	slow, but the most common case is accelerated via table lookups.
3rdparty/openexr/Half/half.h://	and store the results in a table.  Later, all conversions can be
3rdparty/openexr/Half/half.h://	done using only simple table lookups.
3rdparty/openexr/Half/half.h:    // and exponent of the half number via a table lookup.
3rdparty/openexr/Half/half.h:    // the table lookup returns a non-zero value; in this case, all
3rdparty/openexr/Half/half.h:    // resulting from underflow, infinities and NANs), the table
3rdparty/openexr/Half/half.h:// Half-to-float conversion via table lookup
3rdparty/openexr/Half/toFloat.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Half/toFloat.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Half/toFloat.cpp://	A program to generate the lookup table for half-to-float
3rdparty/openexr/Half/toFloat.cpp:// Main - prints the half-to-float lookup table
Binary file 3rdparty/openexr/Half/half.cpp matches
3rdparty/openexr/Half/toFloat.h:    {0x37aa0000}, {0x37aa8000}, {0x37ab0000}, {0x37ab8000},
3rdparty/openexr/Half/toFloat.h:    {0x38ab0000}, {0x38ab2000}, {0x38ab4000}, {0x38ab6000},
3rdparty/openexr/Half/toFloat.h:    {0x38ab8000}, {0x38aba000}, {0x38abc000}, {0x38abe000},
3rdparty/openexr/Half/toFloat.h:    {0x39ab0000}, {0x39ab2000}, {0x39ab4000}, {0x39ab6000},
3rdparty/openexr/Half/toFloat.h:    {0x39ab8000}, {0x39aba000}, {0x39abc000}, {0x39abe000},
3rdparty/openexr/Half/toFloat.h:    {0x3aab0000}, {0x3aab2000}, {0x3aab4000}, {0x3aab6000},
3rdparty/openexr/Half/toFloat.h:    {0x3aab8000}, {0x3aaba000}, {0x3aabc000}, {0x3aabe000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab00000}, {0x3ab02000}, {0x3ab04000}, {0x3ab06000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab08000}, {0x3ab0a000}, {0x3ab0c000}, {0x3ab0e000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab10000}, {0x3ab12000}, {0x3ab14000}, {0x3ab16000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab18000}, {0x3ab1a000}, {0x3ab1c000}, {0x3ab1e000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab20000}, {0x3ab22000}, {0x3ab24000}, {0x3ab26000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab28000}, {0x3ab2a000}, {0x3ab2c000}, {0x3ab2e000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab30000}, {0x3ab32000}, {0x3ab34000}, {0x3ab36000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab38000}, {0x3ab3a000}, {0x3ab3c000}, {0x3ab3e000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab40000}, {0x3ab42000}, {0x3ab44000}, {0x3ab46000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab48000}, {0x3ab4a000}, {0x3ab4c000}, {0x3ab4e000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab50000}, {0x3ab52000}, {0x3ab54000}, {0x3ab56000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab58000}, {0x3ab5a000}, {0x3ab5c000}, {0x3ab5e000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab60000}, {0x3ab62000}, {0x3ab64000}, {0x3ab66000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab68000}, {0x3ab6a000}, {0x3ab6c000}, {0x3ab6e000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab70000}, {0x3ab72000}, {0x3ab74000}, {0x3ab76000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab78000}, {0x3ab7a000}, {0x3ab7c000}, {0x3ab7e000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab80000}, {0x3ab82000}, {0x3ab84000}, {0x3ab86000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab88000}, {0x3ab8a000}, {0x3ab8c000}, {0x3ab8e000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab90000}, {0x3ab92000}, {0x3ab94000}, {0x3ab96000},
3rdparty/openexr/Half/toFloat.h:    {0x3ab98000}, {0x3ab9a000}, {0x3ab9c000}, {0x3ab9e000},
3rdparty/openexr/Half/toFloat.h:    {0x3aba0000}, {0x3aba2000}, {0x3aba4000}, {0x3aba6000},
3rdparty/openexr/Half/toFloat.h:    {0x3aba8000}, {0x3abaa000}, {0x3abac000}, {0x3abae000},
3rdparty/openexr/Half/toFloat.h:    {0x3abb0000}, {0x3abb2000}, {0x3abb4000}, {0x3abb6000},
3rdparty/openexr/Half/toFloat.h:    {0x3abb8000}, {0x3abba000}, {0x3abbc000}, {0x3abbe000},
3rdparty/openexr/Half/toFloat.h:    {0x3abc0000}, {0x3abc2000}, {0x3abc4000}, {0x3abc6000},
3rdparty/openexr/Half/toFloat.h:    {0x3abc8000}, {0x3abca000}, {0x3abcc000}, {0x3abce000},
3rdparty/openexr/Half/toFloat.h:    {0x3abd0000}, {0x3abd2000}, {0x3abd4000}, {0x3abd6000},
3rdparty/openexr/Half/toFloat.h:    {0x3abd8000}, {0x3abda000}, {0x3abdc000}, {0x3abde000},
3rdparty/openexr/Half/toFloat.h:    {0x3abe0000}, {0x3abe2000}, {0x3abe4000}, {0x3abe6000},
3rdparty/openexr/Half/toFloat.h:    {0x3abe8000}, {0x3abea000}, {0x3abec000}, {0x3abee000},
3rdparty/openexr/Half/toFloat.h:    {0x3abf0000}, {0x3abf2000}, {0x3abf4000}, {0x3abf6000},
3rdparty/openexr/Half/toFloat.h:    {0x3abf8000}, {0x3abfa000}, {0x3abfc000}, {0x3abfe000},
3rdparty/openexr/Half/toFloat.h:    {0x3bab0000}, {0x3bab2000}, {0x3bab4000}, {0x3bab6000},
3rdparty/openexr/Half/toFloat.h:    {0x3bab8000}, {0x3baba000}, {0x3babc000}, {0x3babe000},
3rdparty/openexr/Half/toFloat.h:    {0x3cab0000}, {0x3cab2000}, {0x3cab4000}, {0x3cab6000},
3rdparty/openexr/Half/toFloat.h:    {0x3cab8000}, {0x3caba000}, {0x3cabc000}, {0x3cabe000},
3rdparty/openexr/Half/toFloat.h:    {0x3dab0000}, {0x3dab2000}, {0x3dab4000}, {0x3dab6000},
3rdparty/openexr/Half/toFloat.h:    {0x3dab8000}, {0x3daba000}, {0x3dabc000}, {0x3dabe000},
3rdparty/openexr/Half/toFloat.h:    {0x3eab0000}, {0x3eab2000}, {0x3eab4000}, {0x3eab6000},
3rdparty/openexr/Half/toFloat.h:    {0x3eab8000}, {0x3eaba000}, {0x3eabc000}, {0x3eabe000},
3rdparty/openexr/Half/toFloat.h:    {0x3fab0000}, {0x3fab2000}, {0x3fab4000}, {0x3fab6000},
3rdparty/openexr/Half/toFloat.h:    {0x3fab8000}, {0x3faba000}, {0x3fabc000}, {0x3fabe000},
3rdparty/openexr/Half/toFloat.h:    {0x40ab0000}, {0x40ab2000}, {0x40ab4000}, {0x40ab6000},
3rdparty/openexr/Half/toFloat.h:    {0x40ab8000}, {0x40aba000}, {0x40abc000}, {0x40abe000},
3rdparty/openexr/Half/toFloat.h:    {0x41ab0000}, {0x41ab2000}, {0x41ab4000}, {0x41ab6000},
3rdparty/openexr/Half/toFloat.h:    {0x41ab8000}, {0x41aba000}, {0x41abc000}, {0x41abe000},
3rdparty/openexr/Half/toFloat.h:    {0x42ab0000}, {0x42ab2000}, {0x42ab4000}, {0x42ab6000},
3rdparty/openexr/Half/toFloat.h:    {0x42ab8000}, {0x42aba000}, {0x42abc000}, {0x42abe000},
3rdparty/openexr/Half/toFloat.h:    {0x43ab0000}, {0x43ab2000}, {0x43ab4000}, {0x43ab6000},
3rdparty/openexr/Half/toFloat.h:    {0x43ab8000}, {0x43aba000}, {0x43abc000}, {0x43abe000},
3rdparty/openexr/Half/toFloat.h:    {0x44ab0000}, {0x44ab2000}, {0x44ab4000}, {0x44ab6000},
3rdparty/openexr/Half/toFloat.h:    {0x44ab8000}, {0x44aba000}, {0x44abc000}, {0x44abe000},
3rdparty/openexr/Half/toFloat.h:    {0x45ab0000}, {0x45ab2000}, {0x45ab4000}, {0x45ab6000},
3rdparty/openexr/Half/toFloat.h:    {0x45ab8000}, {0x45aba000}, {0x45abc000}, {0x45abe000},
3rdparty/openexr/Half/toFloat.h:    {0x46ab0000}, {0x46ab2000}, {0x46ab4000}, {0x46ab6000},
3rdparty/openexr/Half/toFloat.h:    {0x46ab8000}, {0x46aba000}, {0x46abc000}, {0x46abe000},
3rdparty/openexr/Half/toFloat.h:    {0x7fab0000}, {0x7fab2000}, {0x7fab4000}, {0x7fab6000},
3rdparty/openexr/Half/toFloat.h:    {0x7fab8000}, {0x7faba000}, {0x7fabc000}, {0x7fabe000},
3rdparty/openexr/Half/toFloat.h:    {0xb7aa0000}, {0xb7aa8000}, {0xb7ab0000}, {0xb7ab8000},
3rdparty/openexr/Half/toFloat.h:    {0xb8ab0000}, {0xb8ab2000}, {0xb8ab4000}, {0xb8ab6000},
3rdparty/openexr/Half/toFloat.h:    {0xb8ab8000}, {0xb8aba000}, {0xb8abc000}, {0xb8abe000},
3rdparty/openexr/Half/toFloat.h:    {0xb9ab0000}, {0xb9ab2000}, {0xb9ab4000}, {0xb9ab6000},
3rdparty/openexr/Half/toFloat.h:    {0xb9ab8000}, {0xb9aba000}, {0xb9abc000}, {0xb9abe000},
3rdparty/openexr/Half/toFloat.h:    {0xbaab0000}, {0xbaab2000}, {0xbaab4000}, {0xbaab6000},
3rdparty/openexr/Half/toFloat.h:    {0xbaab8000}, {0xbaaba000}, {0xbaabc000}, {0xbaabe000},
3rdparty/openexr/Half/toFloat.h:    {0xbab00000}, {0xbab02000}, {0xbab04000}, {0xbab06000},
3rdparty/openexr/Half/toFloat.h:    {0xbab08000}, {0xbab0a000}, {0xbab0c000}, {0xbab0e000},
3rdparty/openexr/Half/toFloat.h:    {0xbab10000}, {0xbab12000}, {0xbab14000}, {0xbab16000},
3rdparty/openexr/Half/toFloat.h:    {0xbab18000}, {0xbab1a000}, {0xbab1c000}, {0xbab1e000},
3rdparty/openexr/Half/toFloat.h:    {0xbab20000}, {0xbab22000}, {0xbab24000}, {0xbab26000},
3rdparty/openexr/Half/toFloat.h:    {0xbab28000}, {0xbab2a000}, {0xbab2c000}, {0xbab2e000},
3rdparty/openexr/Half/toFloat.h:    {0xbab30000}, {0xbab32000}, {0xbab34000}, {0xbab36000},
3rdparty/openexr/Half/toFloat.h:    {0xbab38000}, {0xbab3a000}, {0xbab3c000}, {0xbab3e000},
3rdparty/openexr/Half/toFloat.h:    {0xbab40000}, {0xbab42000}, {0xbab44000}, {0xbab46000},
3rdparty/openexr/Half/toFloat.h:    {0xbab48000}, {0xbab4a000}, {0xbab4c000}, {0xbab4e000},
3rdparty/openexr/Half/toFloat.h:    {0xbab50000}, {0xbab52000}, {0xbab54000}, {0xbab56000},
3rdparty/openexr/Half/toFloat.h:    {0xbab58000}, {0xbab5a000}, {0xbab5c000}, {0xbab5e000},
3rdparty/openexr/Half/toFloat.h:    {0xbab60000}, {0xbab62000}, {0xbab64000}, {0xbab66000},
3rdparty/openexr/Half/toFloat.h:    {0xbab68000}, {0xbab6a000}, {0xbab6c000}, {0xbab6e000},
3rdparty/openexr/Half/toFloat.h:    {0xbab70000}, {0xbab72000}, {0xbab74000}, {0xbab76000},
3rdparty/openexr/Half/toFloat.h:    {0xbab78000}, {0xbab7a000}, {0xbab7c000}, {0xbab7e000},
3rdparty/openexr/Half/toFloat.h:    {0xbab80000}, {0xbab82000}, {0xbab84000}, {0xbab86000},
3rdparty/openexr/Half/toFloat.h:    {0xbab88000}, {0xbab8a000}, {0xbab8c000}, {0xbab8e000},
3rdparty/openexr/Half/toFloat.h:    {0xbab90000}, {0xbab92000}, {0xbab94000}, {0xbab96000},
3rdparty/openexr/Half/toFloat.h:    {0xbab98000}, {0xbab9a000}, {0xbab9c000}, {0xbab9e000},
3rdparty/openexr/Half/toFloat.h:    {0xbaba0000}, {0xbaba2000}, {0xbaba4000}, {0xbaba6000},
3rdparty/openexr/Half/toFloat.h:    {0xbaba8000}, {0xbabaa000}, {0xbabac000}, {0xbabae000},
3rdparty/openexr/Half/toFloat.h:    {0xbabb0000}, {0xbabb2000}, {0xbabb4000}, {0xbabb6000},
3rdparty/openexr/Half/toFloat.h:    {0xbabb8000}, {0xbabba000}, {0xbabbc000}, {0xbabbe000},
3rdparty/openexr/Half/toFloat.h:    {0xbabc0000}, {0xbabc2000}, {0xbabc4000}, {0xbabc6000},
3rdparty/openexr/Half/toFloat.h:    {0xbabc8000}, {0xbabca000}, {0xbabcc000}, {0xbabce000},
3rdparty/openexr/Half/toFloat.h:    {0xbabd0000}, {0xbabd2000}, {0xbabd4000}, {0xbabd6000},
3rdparty/openexr/Half/toFloat.h:    {0xbabd8000}, {0xbabda000}, {0xbabdc000}, {0xbabde000},
3rdparty/openexr/Half/toFloat.h:    {0xbabe0000}, {0xbabe2000}, {0xbabe4000}, {0xbabe6000},
3rdparty/openexr/Half/toFloat.h:    {0xbabe8000}, {0xbabea000}, {0xbabec000}, {0xbabee000},
3rdparty/openexr/Half/toFloat.h:    {0xbabf0000}, {0xbabf2000}, {0xbabf4000}, {0xbabf6000},
3rdparty/openexr/Half/toFloat.h:    {0xbabf8000}, {0xbabfa000}, {0xbabfc000}, {0xbabfe000},
3rdparty/openexr/Half/toFloat.h:    {0xbbab0000}, {0xbbab2000}, {0xbbab4000}, {0xbbab6000},
3rdparty/openexr/Half/toFloat.h:    {0xbbab8000}, {0xbbaba000}, {0xbbabc000}, {0xbbabe000},
3rdparty/openexr/Half/toFloat.h:    {0xbcab0000}, {0xbcab2000}, {0xbcab4000}, {0xbcab6000},
3rdparty/openexr/Half/toFloat.h:    {0xbcab8000}, {0xbcaba000}, {0xbcabc000}, {0xbcabe000},
3rdparty/openexr/Half/toFloat.h:    {0xbdab0000}, {0xbdab2000}, {0xbdab4000}, {0xbdab6000},
3rdparty/openexr/Half/toFloat.h:    {0xbdab8000}, {0xbdaba000}, {0xbdabc000}, {0xbdabe000},
3rdparty/openexr/Half/toFloat.h:    {0xbeab0000}, {0xbeab2000}, {0xbeab4000}, {0xbeab6000},
3rdparty/openexr/Half/toFloat.h:    {0xbeab8000}, {0xbeaba000}, {0xbeabc000}, {0xbeabe000},
3rdparty/openexr/Half/toFloat.h:    {0xbfab0000}, {0xbfab2000}, {0xbfab4000}, {0xbfab6000},
3rdparty/openexr/Half/toFloat.h:    {0xbfab8000}, {0xbfaba000}, {0xbfabc000}, {0xbfabe000},
3rdparty/openexr/Half/toFloat.h:    {0xc0ab0000}, {0xc0ab2000}, {0xc0ab4000}, {0xc0ab6000},
3rdparty/openexr/Half/toFloat.h:    {0xc0ab8000}, {0xc0aba000}, {0xc0abc000}, {0xc0abe000},
3rdparty/openexr/Half/toFloat.h:    {0xc1ab0000}, {0xc1ab2000}, {0xc1ab4000}, {0xc1ab6000},
3rdparty/openexr/Half/toFloat.h:    {0xc1ab8000}, {0xc1aba000}, {0xc1abc000}, {0xc1abe000},
3rdparty/openexr/Half/toFloat.h:    {0xc2ab0000}, {0xc2ab2000}, {0xc2ab4000}, {0xc2ab6000},
3rdparty/openexr/Half/toFloat.h:    {0xc2ab8000}, {0xc2aba000}, {0xc2abc000}, {0xc2abe000},
3rdparty/openexr/Half/toFloat.h:    {0xc3ab0000}, {0xc3ab2000}, {0xc3ab4000}, {0xc3ab6000},
3rdparty/openexr/Half/toFloat.h:    {0xc3ab8000}, {0xc3aba000}, {0xc3abc000}, {0xc3abe000},
3rdparty/openexr/Half/toFloat.h:    {0xc4ab0000}, {0xc4ab2000}, {0xc4ab4000}, {0xc4ab6000},
3rdparty/openexr/Half/toFloat.h:    {0xc4ab8000}, {0xc4aba000}, {0xc4abc000}, {0xc4abe000},
3rdparty/openexr/Half/toFloat.h:    {0xc5ab0000}, {0xc5ab2000}, {0xc5ab4000}, {0xc5ab6000},
3rdparty/openexr/Half/toFloat.h:    {0xc5ab8000}, {0xc5aba000}, {0xc5abc000}, {0xc5abe000},
3rdparty/openexr/Half/toFloat.h:    {0xc6ab0000}, {0xc6ab2000}, {0xc6ab4000}, {0xc6ab6000},
3rdparty/openexr/Half/toFloat.h:    {0xc6ab8000}, {0xc6aba000}, {0xc6abc000}, {0xc6abe000},
3rdparty/openexr/Half/toFloat.h:    {0xffab0000}, {0xffab2000}, {0xffab4000}, {0xffab6000},
3rdparty/openexr/Half/toFloat.h:    {0xffab8000}, {0xffaba000}, {0xffabc000}, {0xffabe000},
3rdparty/openexr/Half/halfLimits.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Half/halfLimits.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Iex/IexThrowErrnoExc.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Iex/IexThrowErrnoExc.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Iex/IexThrowErrnoExc.cpp:        throw EconnabortedExc (tmp);
3rdparty/openexr/Iex/IexBaseExc.cpp:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Iex/IexBaseExc.cpp:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Iex/IexErrnoExc.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Iex/IexErrnoExc.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Iex/IexErrnoExc.h:DEFINE_EXC (EconnabortedExc, ErrnoExc)
3rdparty/openexr/Iex/IexMathExc.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Iex/IexMathExc.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Iex/IexThrowErrnoExc.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Iex/IexThrowErrnoExc.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Iex/IexBaseExc.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Iex/IexBaseExc.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Iex/IexBaseExc.h:#pragma warning(disable:4290)
3rdparty/openexr/Iex/IexBaseExc.h:    // the definitions above.
3rdparty/openexr/Iex/IexBaseExc.h://	string that contains a printable representation of the program's
3rdparty/openexr/Iex/Iex.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Iex/Iex.h:// *       Redistributions in binary form must reproduce the above
3rdparty/openexr/Iex/IexMacros.h:// *       Redistributions of source code must retain the above copyright
3rdparty/openexr/Iex/IexMacros.h:// *       Redistributions in binary form must reproduce the above
3rdparty/zlib/gzlib.c:    state->x.have = 0;              /* no output data available */
3rdparty/zlib/gzlib.c:/* portably return maximum value for an int (when limits.h presumed not
3rdparty/zlib/gzlib.c:   available) -- we need to do this to cover cases where 2's complement not
3rdparty/zlib/inffast.c:   No measurable difference:
3rdparty/zlib/inffast.c:   available, an end-of-block is encountered, or a data error is encountered.
3rdparty/zlib/inffast.c:        LEN -- ran out of enough output space or enough available input
3rdparty/zlib/inffast.c:      checking for available input while decoding.
3rdparty/zlib/inffast.c:    unsigned char FAR *end;     /* while out < end, enough space available */
3rdparty/zlib/inffast.c:    code here;                  /* retrieved table entry */
3rdparty/zlib/inffast.c:    /* copy state to local variables */
3rdparty/zlib/inffast.c:   - Different op definition to avoid & for extra bits (do & for table bits)
3rdparty/zlib/inffast.c:   - Explicit branch predictions (based on measured branch probabilities)
3rdparty/zlib/inffast.c:   - Larger unrolled copy loops (three is about right)
3rdparty/zlib/zlib.h:  warranty.  In no event will the authors be held liable for any damages
3rdparty/zlib/zlib.h:    uInt     avail_in;  /* number of bytes available at next_in */
3rdparty/zlib/zlib.h:    int     data_type;  /* best guess about the data type: binary or text */
3rdparty/zlib/zlib.h:     On 16-bit systems, the functions zalloc and zfree must be able to allocate
3rdparty/zlib/zlib.h:  that the decompressor can get all input data available so far.  (In
3rdparty/zlib/zlib.h:  input data so far will be available to the decompressor, as for Z_SYNC_FLUSH.
3rdparty/zlib/zlib.h:  not return Z_STREAM_END, and it must be called again as described above.
3rdparty/zlib/zlib.h:    deflate() may update strm->data_type if it can make a good guess about
3rdparty/zlib/zlib.h:    no more input data or no more space in the output buffer (see below about
3rdparty/zlib/zlib.h:   used strings preferably put towards the end of the dictionary.  Using a
3rdparty/zlib/zlib.h:   If the compression level is changed, the input available so far is
3rdparty/zlib/zlib.h:   a call of deflate(), since the currently available input may have to be
3rdparty/zlib/zlib.h:   been generated, but not yet provided in the available output.  The bytes not
3rdparty/zlib/zlib.h:   provided would be due to the available output space having being consumed.
3rdparty/zlib/zlib.h:   available there.  If hcrc is true, a gzip header crc is included.  Note that
3rdparty/zlib/zlib.h:   above on the use in deflateInit2() applies to the magnitude of windowBits.
3rdparty/zlib/zlib.h:   32 to windowBits to enable zlib and gzip decoding with automatic header
3rdparty/zlib/zlib.h:     Skips invalid compressed data until a possible full flush point (see above
3rdparty/zlib/zlib.h:   available input is skipped.  No output is provided.
3rdparty/zlib/zlib.h:     inflateMark returns the value noted above or -1 << 16 if the provided
3rdparty/zlib/zlib.h:   absence.  This allows the use of deflateSetHeader() with the returned
3rdparty/zlib/zlib.h:   and a 32K byte window must be supplied to be able to decompress general
3rdparty/zlib/zlib.h:   parameters and return types are defined above in the in_func and out_func
3rdparty/zlib/zlib.h:   there is no input available, in() must return zero--buf is ignored in that
3rdparty/zlib/zlib.h:    One-time table building (smaller code, but not thread-safe if true):
3rdparty/zlib/zlib.h:     12: BUILDFIXED -- build static block decoding tables when needed
3rdparty/zlib/zlib.h:     13: DYNAMIC_CRC_TABLE -- build CRC calculation tables when needed
3rdparty/zlib/zlib.h:   deflateInit2 for more information about the strategy parameter.)  'T' will
3rdparty/zlib/zlib.h:   noticeably increase the speed of decompression (reading).
3rdparty/zlib/zlib.h:   Upon reaching the end of the input, gzread will return with the available
3rdparty/zlib/zlib.h:   unpredictable consequences, which is possible only if zlib was compiled with
3rdparty/zlib/zlib.h:   or vsnprintf() functions were not available.  This can be determined using
3rdparty/zlib/zlib.h:   output buffer size of pushed characters is allowed.  (See gzbuffer above.)
3rdparty/zlib/zlib.h:   gzip stream will be started in the output.  gzread() is able to read such
3rdparty/zlib/zlib.h:   available.
3rdparty/zlib/zlib.h:   functions above that do not distinguish those cases in their return values.
3rdparty/zlib/zlib.h:     An Adler-32 checksum is almost as reliable as a CRC32 but can be computed
3rdparty/zlib/zlib.h: * This abbreviated structure exposes just enough for the gzgetc() macro.  The
3rdparty/zlib/zlib.h:ZEXTERN const z_crc_t FAR * ZEXPORT get_crc_table    OF((void));
3rdparty/zlib/inftrees.h:/* Structure for decoding tables.  Each entry provides either the
3rdparty/zlib/inftrees.h:   indexed that table entry, or it provides a pointer to another
3rdparty/zlib/inftrees.h:   table that indexes more bits of the code.  op indicates whether
3rdparty/zlib/inftrees.h:   the entry is a pointer to another table, a literal, a length or
3rdparty/zlib/inftrees.h:   distance, an end-of-block, or an invalid code.  For a table
3rdparty/zlib/inftrees.h:   that table.  For a length or distance, the low four bits of op
3rdparty/zlib/inftrees.h:   the current table to the next table.  Each entry is four bytes. */
3rdparty/zlib/inftrees.h:    unsigned char op;           /* operation, extra bits, table bits */
3rdparty/zlib/inftrees.h:    unsigned short val;         /* offset in table or code value */
3rdparty/zlib/inftrees.h:/* op values as set by inflate_table():
3rdparty/zlib/inftrees.h:    0000tttt - table link, tttt != 0 is the number of table index bits
3rdparty/zlib/inftrees.h:/* Maximum size of the dynamic table.  The maximum number of code structures is
3rdparty/zlib/inftrees.h:   program are the number of symbols, the initial root table size, and the
3rdparty/zlib/inftrees.h:   The initial root table size (9 or 6) is found in the fifth argument of the
3rdparty/zlib/inftrees.h:   inflate_table() calls in inflate.c and infback.c.  If the root table size is
3rdparty/zlib/inftrees.h:/* Type of code to build for inflate_table() */
3rdparty/zlib/inftrees.h:int ZLIB_INTERNAL inflate_table OF((codetype type, unsigned short FAR *lens,
3rdparty/zlib/inftrees.h:                             unsigned codes, code FAR * FAR *table,
3rdparty/zlib/gzguts.h:/* In Win32, vsnprintf is available as the "non-ANSI" _vsnprintf. */
3rdparty/zlib/gzguts.h:   twice this must be able to fit in an unsigned type) */
3rdparty/zlib/gzguts.h:                            /* x.have: number of bytes available at x.next */
3rdparty/zlib/gzguts.h:    int mode;               /* see gzip modes above */
3rdparty/zlib/README:Questions about zlib should be sent to <zlib@gzip.org>, or to Gilles Vollant
3rdparty/zlib/README:Mark Nelson <markn@ieee.org> wrote an article about zlib for the Jan.  1997
3rdparty/zlib/README:issue of Dr.  Dobb's Journal; a copy of the article is available at
3rdparty/zlib/README:zlib is available in Java using the java.util.zip package, documented at
3rdparty/zlib/README:A Perl interface to zlib written by Paul Marquess <pmqs@cpan.org> is available
3rdparty/zlib/README:available in Python 1.5 and later versions, see
3rdparty/zlib/README:of zlib by Gilles Vollant <info@winimage.com>, is available in the
3rdparty/zlib/README:  warranty.  In no event will the authors be held liable for any damages
3rdparty/zlib/inflate.h:/* define NO_GZIP when compiling if you want to disable gzip header and
3rdparty/zlib/inflate.h:   should be left enabled. */
3rdparty/zlib/inflate.h:        TABLE,      /* i: waiting for dynamic block table lengths */
3rdparty/zlib/inflate.h:    State transitions between above modes -
3rdparty/zlib/inflate.h:        /* for table and code decoding */
3rdparty/zlib/inflate.h:        /* fixed and dynamic code tables */
3rdparty/zlib/inflate.h:    code const FAR *lencode;    /* starting table for length/literal codes */
3rdparty/zlib/inflate.h:    code const FAR *distcode;   /* starting table for distance codes */
3rdparty/zlib/inflate.h:        /* dynamic table building */
3rdparty/zlib/inflate.h:    code FAR *next;             /* next available space in codes[] */
3rdparty/zlib/inflate.h:    unsigned short work[288];   /* work area for code table building */
3rdparty/zlib/inflate.h:    code codes[ENOUGH];         /* space for code tables */
3rdparty/zlib/zconf.h.cmakein:#  define get_crc_table         z_get_crc_table
3rdparty/zlib/zconf.h.cmakein:#  define inflate_table         z_inflate_table
3rdparty/zlib/zconf.h.cmakein: * WARNING: reducing MAX_WBITS makes minigzip unable to extract .gz files
3rdparty/zlib/zconf.h.cmakein:  #pragma map(inflate_table,"INTABL")
3rdparty/zlib/trees.c: *      Available in ftp.uu.net:/pub/archiving/zip/doc/deflate-1.1.doc
3rdparty/zlib/trees.c: * probability, to avoid transmitting the lengths for unused bit length codes.
3rdparty/zlib/trees.c: * Initialize the various 'constant' tables.
3rdparty/zlib/trees.c:    /* For some embedded targets, global variables are not initialized: */
3rdparty/zlib/trees.c: * when the heap property is re-established (each father smaller than its
3rdparty/zlib/trees.c: *    above are the tree nodes sorted by increasing frequency.
3rdparty/zlib/trees.c:     * establish sub-heaps of increasing lengths:
3rdparty/zlib/trees.c:        /* Build the bit length tree for the above two trees, and get the index
3rdparty/zlib/trees.c:    /* The above check is made mod 2^32, for files larger than 512 MB
3rdparty/zlib/trees.c:    /* Try to guess if it is profitable to stop the current block here */
3rdparty/zlib/trees.c: *    a) There are no non-portable control characters belonging to the
3rdparty/zlib/trees.c: *    b) There is at least one printable character belonging to the
3rdparty/zlib/trees.c: * - The following partially-portable control characters form a
3rdparty/zlib/trees.c: * method would use a table)
3rdparty/zlib/crc32.h:/* crc32.h -- tables for rapid CRC calculation
3rdparty/zlib/crc32.h:local const z_crc_t FAR crc_table[TBLS][256] =
3rdparty/zlib/crc32.h:    0x90bf1d91UL, 0x1db71064UL, 0x6ab020f2UL, 0xf3b97148UL, 0x84be41deUL,
3rdparty/zlib/crc32.h:    0xa2677172UL, 0x3c03e4d1UL, 0x4b04d447UL, 0xd20d85fdUL, 0xa50ab56bUL,
3rdparty/zlib/crc32.h:    0x45df5c75UL, 0xdcd60dcfUL, 0xabd13d59UL, 0x26d930acUL, 0x51de003aUL,
3rdparty/zlib/crc32.h:    0x2f6f7c87UL, 0x58684c11UL, 0xc1611dabUL, 0xb6662d3dUL, 0x76dc4190UL,
3rdparty/zlib/crc32.h:    0xfbd44c65UL, 0x4db26158UL, 0x3ab551ceUL, 0xa3bc0074UL, 0xd4bb30e2UL,
3rdparty/zlib/crc32.h:    0x2eb40d81UL, 0xb7bd5c3bUL, 0xc0ba6cadUL, 0xedb88320UL, 0x9abfb3b6UL,
3rdparty/zlib/crc32.h:    0xbdbdf21cUL, 0xcabac28aUL, 0x53b39330UL, 0x24b4a3a6UL, 0xbad03605UL,
3rdparty/zlib/crc32.h:    0xcdd70693UL, 0x54de5729UL, 0x23d967bfUL, 0xb3667a2eUL, 0xc4614ab8UL,
3rdparty/zlib/crc32.h:    0xbabb5d54UL, 0xa3a06c15UL, 0x888d3fd6UL, 0x91960e97UL, 0xded79850UL,
3rdparty/zlib/crc32.h:    0x0191aea3UL, 0x188a9fe2UL, 0x33a7cc21UL, 0x2abcfd60UL, 0xad24e1afUL,
3rdparty/zlib/crc32.h:    0xb43fd0eeUL, 0x9f12832dUL, 0x8609b26cUL, 0xc94824abUL, 0xd05315eaUL,
3rdparty/zlib/crc32.h:    0x685abb5bUL, 0x4377e898UL, 0x5a6cd9d9UL, 0x152d4f1eUL, 0x0c367e5fUL,
3rdparty/zlib/crc32.h:    0x80a96bbcUL, 0x99b25afdUL, 0xb29f093eUL, 0xab84387fUL, 0x2c1c24b0UL,
3rdparty/zlib/crc32.h:    0x1b2f0bacUL, 0x1aed619bUL, 0x18abdfc2UL, 0x1969b5f5UL, 0x1235f2c8UL,
3rdparty/zlib/crc32.h:    0x612bab66UL, 0x60e9c151UL, 0x65a6d7d4UL, 0x6464bde3UL, 0x662203baUL,
3rdparty/zlib/crc32.h:    0x4fde63fcUL, 0x4e1c09cbUL, 0x4c5ab792UL, 0x4d98dda5UL, 0x46c49a98UL,
3rdparty/zlib/crc32.h:    0x56b7d609UL, 0x53f8c08cUL, 0x523aaabbUL, 0x507c14e2UL, 0x51be7ed5UL,
3rdparty/zlib/crc32.h:    0xe82fe2e4UL, 0xe9ed88d3UL, 0xebab368aUL, 0xea695cbdUL, 0xfd13b8f0UL,
3rdparty/zlib/crc32.h:    0x93e92819UL, 0x96a63e9cUL, 0x976454abUL, 0x9522eaf2UL, 0x94e080c5UL,
3rdparty/zlib/crc32.h:    0xa820ba97UL, 0xaa6604ceUL, 0xaba46ef9UL, 0xaeeb787cUL, 0xaf29124bUL,
3rdparty/zlib/crc32.h:    0xb853f606UL, 0xb9919c31UL, 0xbcde8ab4UL, 0xbd1ce083UL, 0xbf5a5edaUL,
3rdparty/zlib/crc32.h:    0x7ab5e937UL, 0x680046d9UL, 0xd0bc21bcUL, 0x88df31eaUL, 0x3063568fUL,
3rdparty/zlib/crc32.h:    0x8c5d7112UL, 0x34e11677UL, 0xa9362eceUL, 0x118a49abUL, 0x033fe645UL,
3rdparty/zlib/crc32.h:    0xf3141ee4UL, 0x4ba87981UL, 0x13cb69d7UL, 0xab770eb2UL, 0xb9c2a15cUL,
3rdparty/zlib/crc32.h:    0x755cdf45UL, 0xcf0dd6dcUL, 0x593dd1abUL, 0xac30d926UL, 0x3a00de51UL,
3rdparty/zlib/crc32.h:    0x877c6f2fUL, 0x114c6858UL, 0xab1d61c1UL, 0x3d2d66b6UL, 0x9041dc76UL,
3rdparty/zlib/crc32.h:    0xeab8be8bUL, 0x7c88b9fcUL, 0xdf1ddd62UL, 0x492dda15UL, 0xf37cd38cUL,
3rdparty/zlib/crc32.h:    0x280bbdb2UL, 0x925ab42bUL, 0x046ab35cUL, 0xa7ffd7c2UL, 0x31cfd0b5UL,
3rdparty/zlib/crc32.h:    0x824abf95UL, 0x147ab8e2UL, 0xae2bb17bUL, 0x381bb60cUL, 0x9b8ed292UL,
3rdparty/zlib/crc32.h:    0x715470edUL, 0x30656bf4UL, 0xf7f32abbUL, 0xb6c231a2UL, 0x75911c89UL,
3rdparty/zlib/crc32.h:    0xeed03fb4UL, 0x2d83129fUL, 0x6cb20986UL, 0xab2448c9UL, 0xea1553d0UL,
3rdparty/zlib/crc32.h:    0xc9fab509UL, 0x88cbae10UL, 0x4f5def5fUL, 0x0e6cf446UL, 0xcd3fd96dUL,
3rdparty/zlib/crc32.h:    0xbc6ba980UL, 0xfd5ab299UL, 0x3e099fb2UL, 0x7f3884abUL, 0xb0241c2cUL,
3rdparty/zlib/crc32.h:    0x272a8abdUL, 0xe0bccbf2UL, 0xa18dd0ebUL, 0x62defdc0UL, 0x23efe6d9UL,
3rdparty/zlib/crc32.h:    0xac0b2f1bUL, 0x9b61ed1aUL, 0xc2dfab18UL, 0xf5b56919UL, 0xc8f23512UL,
3rdparty/zlib/crc32.h:    0x66ab2b61UL, 0x51c1e960UL, 0xd4d7a665UL, 0xe3bd6464UL, 0xba032266UL,
3rdparty/zlib/crc32.h:    0xe4e22fe8UL, 0xd388ede9UL, 0x8a36abebUL, 0xbd5c69eaUL, 0xf0b813fdUL,
3rdparty/zlib/crc32.h:    0x1928e993UL, 0x9c3ea696UL, 0xab546497UL, 0xf2ea2295UL, 0xc580e094UL,
3rdparty/zlib/crc32.h:    0x13057799UL, 0x4abb319bUL, 0x7dd1f39aUL, 0x3035898dUL, 0x075f4b8cUL,
3rdparty/zlib/crc32.h:    0x97ba20a8UL, 0xce0466aaUL, 0xf96ea4abUL, 0x7c78ebaeUL, 0x4b1229afUL,
3rdparty/zlib/crc32.h:    0x06f653b8UL, 0x319c91b9UL, 0xb48adebcUL, 0x83e01cbdUL, 0xda5e5abfUL,
3rdparty/zlib/crc32.h:    0xc6efb0a4UL, 0xa3880c1cUL, 0x1ab0db81UL, 0x7fd76739UL, 0x9178d22bUL,
3rdparty/zlib/crc32.h:    0x41785599UL, 0xafd7e08bUL, 0xcab05c33UL, 0x3bb659edUL, 0x5ed1e555UL,
3rdparty/zlib/crc32.h:    0x83098fa7UL, 0xe66e331fUL, 0x08c1860dUL, 0x6da63ab5UL, 0xa4e140bdUL,
3rdparty/zlib/crc32.h:    0xe841f864UL, 0x51792ff9UL, 0x341e9341UL, 0xdab12653UL, 0xbfd69aebUL,
3rdparty/zlib/crc32.h:    0x12715d8cUL, 0x7716e134UL, 0xce2e36a9UL, 0xab498a11UL, 0x45e63f03UL,
3rdparty/zlib/crc32.h:    0x5d26c36eUL, 0xb389767cUL, 0xd6eecac4UL, 0x6fd61d59UL, 0x0ab1a1e1UL,
3rdparty/zlib/crc32.h:    0xe41e14f3UL, 0x8179a84bUL, 0xd769cb13UL, 0xb20e77abUL, 0x5ca1c2b9UL,
Binary file 3rdparty/zlib/ChangeLog matches
3rdparty/zlib/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS -Wshorten-64-to-32 -Wattributes -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations)
3rdparty/zlib/inftrees.c:  copyright string in the executable of your product.
3rdparty/zlib/inftrees.c:   Build a set of tables to decode the provided canonical Huffman code.
3rdparty/zlib/inftrees.c:   The code lengths are lens[0..codes-1].  The result starts at *table,
3rdparty/zlib/inftrees.c:   whose indices are 0..2^bits-1.  work is a writable array of at least
3rdparty/zlib/inftrees.c:   -1 is an invalid code, and +1 means that ENOUGH isn't enough.  table
3rdparty/zlib/inftrees.c:   on return points to the next available entry's address.  bits is the
3rdparty/zlib/inftrees.c:   requested root table index bits, and on return it is the actual root
3rdparty/zlib/inftrees.c:   table index bits.  It will differ if the request is greater than the
3rdparty/zlib/inftrees.c:int ZLIB_INTERNAL inflate_table(type, lens, codes, table, bits, work)
3rdparty/zlib/inftrees.c:code FAR * FAR *table;
3rdparty/zlib/inftrees.c:    unsigned root;              /* number of index bits for root table */
3rdparty/zlib/inftrees.c:    unsigned curr;              /* number of index bits for current table */
3rdparty/zlib/inftrees.c:    unsigned drop;              /* code bits to drop for sub-table */
3rdparty/zlib/inftrees.c:    int left;                   /* number of prefix codes available */
3rdparty/zlib/inftrees.c:    unsigned used;              /* code entries in table used */
3rdparty/zlib/inftrees.c:    code here;                  /* table entry for duplication */
3rdparty/zlib/inftrees.c:    code FAR *next;             /* next available space in table */
3rdparty/zlib/inftrees.c:    const unsigned short FAR *base;     /* base value table to use */
3rdparty/zlib/inftrees.c:    const unsigned short FAR *extra;    /* extra bits table to use */
3rdparty/zlib/inftrees.c:    unsigned short offs[MAXBITS+1];     /* offsets in table for each length */
3rdparty/zlib/inftrees.c:       decoding tables are built in the large loop below, the integer codes
3rdparty/zlib/inftrees.c:       creating from that a table of starting indices for each length in the
3rdparty/zlib/inftrees.c:       sorted table, and then entering the symbols in order in the sorted
3rdparty/zlib/inftrees.c:       table.  The sorted table is work[], with that space being provided by
3rdparty/zlib/inftrees.c:       at length counts to determine sub-table sizes when building the
3rdparty/zlib/inftrees.c:       decoding tables.
3rdparty/zlib/inftrees.c:        *(*table)++ = here;             /* make a table to force an error */
3rdparty/zlib/inftrees.c:        *(*table)++ = here;
3rdparty/zlib/inftrees.c:    /* generate offsets into symbol table for each length for sorting */
3rdparty/zlib/inftrees.c:       Create and fill in decoding tables.  In this loop, the table being
3rdparty/zlib/inftrees.c:       fill the table with replicated entries.
3rdparty/zlib/inftrees.c:       root is the number of index bits for the root table.  When len exceeds
3rdparty/zlib/inftrees.c:       root, sub-tables are created pointed to by the root entry with an index
3rdparty/zlib/inftrees.c:       new sub-table should be started.  drop is zero when the root table is
3rdparty/zlib/inftrees.c:       being filled, and drop is root when sub-tables are being filled.
3rdparty/zlib/inftrees.c:       When a new sub-table is needed, it is necessary to look ahead in the
3rdparty/zlib/inftrees.c:       code lengths to determine what size sub-table is needed.  The length
3rdparty/zlib/inftrees.c:       entered in the tables.
3rdparty/zlib/inftrees.c:       used keeps track of how many table entries have been allocated from the
3rdparty/zlib/inftrees.c:       provided *table space.  It is checked for LENS and DIST tables against
3rdparty/zlib/inftrees.c:       the initial root table size constants.  See the comments in inftrees.h
3rdparty/zlib/inftrees.c:       in the rest of the decoding tables with invalid code markers.
3rdparty/zlib/inftrees.c:    next = *table;              /* current table to fill in */
3rdparty/zlib/inftrees.c:    curr = root;                /* current table index bits */
3rdparty/zlib/inftrees.c:    low = (unsigned)(-1);       /* trigger new sub-table when len > root */
3rdparty/zlib/inftrees.c:    used = 1U << root;          /* use root table entries */
3rdparty/zlib/inftrees.c:    /* check available table space */
3rdparty/zlib/inftrees.c:    /* process all codes and make table entries */
3rdparty/zlib/inftrees.c:        /* create table entry */
3rdparty/zlib/inftrees.c:        min = fill;                 /* save offset to next table */
3rdparty/zlib/inftrees.c:        /* create new sub-table if needed */
3rdparty/zlib/inftrees.c:            /* if first time, transition to sub-tables */
3rdparty/zlib/inftrees.c:            /* increment past last table */
3rdparty/zlib/inftrees.c:            /* determine length of next table */
3rdparty/zlib/inftrees.c:            /* point entry in root table to sub-table */
3rdparty/zlib/inftrees.c:            (*table)[low].op = (unsigned char)curr;
3rdparty/zlib/inftrees.c:            (*table)[low].bits = (unsigned char)root;
3rdparty/zlib/inftrees.c:            (*table)[low].val = (unsigned short)(next - *table);
3rdparty/zlib/inftrees.c:    /* fill in remaining table entry if code is incomplete (guaranteed to have
3rdparty/zlib/inftrees.c:    *table += used;
3rdparty/zlib/crc32.c: * tables for updating the shift register in one step with three exclusive-ors
3rdparty/zlib/crc32.c: * instead of four steps with four exclusive-ors.  This results in about a
3rdparty/zlib/crc32.c:  protection on the static variables used to control the first-use generation
3rdparty/zlib/crc32.c:  of the crc tables.  Therefore, if you #define DYNAMIC_CRC_TABLE, you should
3rdparty/zlib/crc32.c:  first call get_crc_table() to initialize the tables before allowing more than
3rdparty/zlib/crc32.c:local volatile int crc_table_empty = 1;
3rdparty/zlib/crc32.c:local z_crc_t FAR crc_table[TBLS][256];
3rdparty/zlib/crc32.c:local void make_crc_table OF((void));
3rdparty/zlib/crc32.c:   local void write_table OF((FILE *, const z_crc_t FAR *));
3rdparty/zlib/crc32.c:  Generate tables for a byte-wise 32-bit CRC calculation on the polynomial:
3rdparty/zlib/crc32.c:  one.  If we call the above polynomial p, and represent a byte as the
3rdparty/zlib/crc32.c:  The first table is simply the CRC of all possible eight bit values.  This is
3rdparty/zlib/crc32.c:  combinations of CRC register values and incoming bytes.  The remaining tables
3rdparty/zlib/crc32.c:local void make_crc_table()
3rdparty/zlib/crc32.c:       than nothing -- significantly reduces duration of vulnerability in
3rdparty/zlib/crc32.c:       case the advice about DYNAMIC_CRC_TABLE is ignored) */
3rdparty/zlib/crc32.c:            crc_table[0][n] = c;
3rdparty/zlib/crc32.c:           and then the byte reversal of those as well as the first table */
3rdparty/zlib/crc32.c:            c = crc_table[0][n];
3rdparty/zlib/crc32.c:            crc_table[4][n] = ZSWAP32(c);
3rdparty/zlib/crc32.c:                c = crc_table[0][c & 0xff] ^ (c >> 8);
3rdparty/zlib/crc32.c:                crc_table[k][n] = c;
3rdparty/zlib/crc32.c:                crc_table[k + 4][n] = ZSWAP32(c);
3rdparty/zlib/crc32.c:        crc_table_empty = 0;
3rdparty/zlib/crc32.c:        while (crc_table_empty)
3rdparty/zlib/crc32.c:    /* write out CRC tables to crc32.h */
3rdparty/zlib/crc32.c:        fprintf(out, "/* crc32.h -- tables for rapid CRC calculation\n");
3rdparty/zlib/crc32.c:        fprintf(out, "crc_table[TBLS][256] =\n{\n  {\n");
3rdparty/zlib/crc32.c:        write_table(out, crc_table[0]);
3rdparty/zlib/crc32.c:            write_table(out, crc_table[k]);
3rdparty/zlib/crc32.c:local void write_table(out, table)
3rdparty/zlib/crc32.c:    const z_crc_t FAR *table;
3rdparty/zlib/crc32.c:                (unsigned long)(table[n]),
3rdparty/zlib/crc32.c: * Tables of CRC-32s of all single-byte values, made by make_crc_table().
3rdparty/zlib/crc32.c:const z_crc_t FAR * ZEXPORT get_crc_table()
3rdparty/zlib/crc32.c:    if (crc_table_empty)
3rdparty/zlib/crc32.c:        make_crc_table();
3rdparty/zlib/crc32.c:    return (const z_crc_t FAR *)crc_table;
3rdparty/zlib/crc32.c:#define DO1 crc = crc_table[0][((int)crc ^ (*buf++)) & 0xff] ^ (crc >> 8)
3rdparty/zlib/crc32.c:    if (crc_table_empty)
3rdparty/zlib/crc32.c:        make_crc_table();
3rdparty/zlib/crc32.c:        c = crc_table[3][c & 0xff] ^ crc_table[2][(c >> 8) & 0xff] ^ \
3rdparty/zlib/crc32.c:            crc_table[1][(c >> 16) & 0xff] ^ crc_table[0][c >> 24]
3rdparty/zlib/crc32.c:        c = crc_table[0][(c ^ *buf++) & 0xff] ^ (c >> 8);
3rdparty/zlib/crc32.c:        c = crc_table[0][(c ^ *buf++) & 0xff] ^ (c >> 8);
3rdparty/zlib/crc32.c:        c = crc_table[4][c & 0xff] ^ crc_table[5][(c >> 8) & 0xff] ^ \
3rdparty/zlib/crc32.c:            crc_table[6][(c >> 16) & 0xff] ^ crc_table[7][c >> 24]
3rdparty/zlib/crc32.c:        c = crc_table[4][(c >> 24) ^ *buf++] ^ (c << 8);
3rdparty/zlib/crc32.c:        c = crc_table[4][(c >> 24) ^ *buf++] ^ (c << 8);
3rdparty/zlib/zutil.c:     * errno.  We define it as a global variable to simplify porting.
3rdparty/zlib/zutil.c:typedef struct ptr_table_s {
3rdparty/zlib/zutil.c:} ptr_table;
3rdparty/zlib/zutil.c:local ptr_table table[MAX_PTR];
3rdparty/zlib/zutil.c:/* This table is used to remember the original form of pointers
3rdparty/zlib/zutil.c: * Since MSDOS is not a preemptive multitasking OS, this table is not
3rdparty/zlib/zutil.c:     * will return a usable pointer which doesn't have to be normalized.
3rdparty/zlib/zutil.c:    table[next_ptr].org_ptr = buf;
3rdparty/zlib/zutil.c:    table[next_ptr++].new_ptr = buf;
3rdparty/zlib/zutil.c:        if (ptr != table[n].new_ptr) continue;
3rdparty/zlib/zutil.c:        farfree(table[n].org_ptr);
3rdparty/zlib/zutil.c:            table[n-1] = table[n];
3rdparty/zlib/infback.c:local void fixedtables OF((struct inflate_state FAR *state));
3rdparty/zlib/infback.c:   Return state with length and distance decoding tables and index sizes set to
3rdparty/zlib/infback.c:   fixed code decoding.  Normally this returns fixed tables from inffixed.h.
3rdparty/zlib/infback.c:   If BUILDFIXED is defined, then instead this routine builds the tables the
3rdparty/zlib/infback.c:   first time it's called, and returns those tables the first time and
3rdparty/zlib/infback.c:   thereafter.  This reduces the size of the code by about 2K bytes, in
3rdparty/zlib/infback.c:   used for threaded applications, since the rewriting of the tables and virgin
3rdparty/zlib/infback.c:local void fixedtables(state)
3rdparty/zlib/infback.c:    /* build fixed huffman tables if first call (may not be thread safe) */
3rdparty/zlib/infback.c:        /* literal/length table */
3rdparty/zlib/infback.c:        inflate_table(LENS, state->lens, 288, &(next), &(bits), state->work);
3rdparty/zlib/infback.c:        /* distance table */
3rdparty/zlib/infback.c:        inflate_table(DISTS, state->lens, 32, &(next), &(bits), state->work);
3rdparty/zlib/infback.c:/* Assure that some input is available.  If input is requested, but denied,
3rdparty/zlib/infback.c:   with an error if there is no input available. */
3rdparty/zlib/infback.c:   not enough available input to do that, then return from inflateBack() with
3rdparty/zlib/infback.c:/* Assure that some output space is available, by writing out the window
3rdparty/zlib/infback.c:    unsigned have, left;        /* available input and output */
3rdparty/zlib/infback.c:    code here;                  /* current decoding table entry */
3rdparty/zlib/infback.c:    code last;                  /* parent table entry */
3rdparty/zlib/infback.c:                fixedtables(state);
3rdparty/zlib/infback.c:            /* get dynamic table entries descriptor */
3rdparty/zlib/infback.c:            Tracev((stderr, "inflate:       table sizes ok\n"));
3rdparty/zlib/infback.c:            ret = inflate_table(CODES, state->lens, 19, &(state->next),
3rdparty/zlib/infback.c:            /* build code tables -- note: do not change the lenbits or distbits
3rdparty/zlib/infback.c:            ret = inflate_table(LENS, state->lens, state->nlen, &(state->next),
3rdparty/zlib/infback.c:            ret = inflate_table(DISTS, state->lens + state->nlen, state->ndist,
3rdparty/zlib/gzread.c:   available data from the input file. */
3rdparty/zlib/gzread.c:   left unchanged if there is no more input data available, will be set to COPY
3rdparty/zlib/gzread.c:    /* update available output */
3rdparty/zlib/gzread.c:            continue;       /* no progress yet -- go back to copy above */
3rdparty/zlib/gzread.c:            /* the copy above assures that we will leave with space in the
3rdparty/zlib/gzread.c:       the contents, let the user worry about that) */
3rdparty/zlib/deflate.c: *      The "deflation" process depends on being able to identify portions
3rdparty/zlib/deflate.c: *      is preferable to spend more time in matches to allow very fast string
3rdparty/zlib/deflate.c: *      strings is inspired from that of Rabin & Karp. A brute force approach
3rdparty/zlib/deflate.c: *      Available in http://tools.ietf.org/html/rfc1951
3rdparty/zlib/deflate.c: *      A description of the Rabin and Karp algorithm is given in the book
3rdparty/zlib/deflate.c:  copyright string in the executable of your product.
3rdparty/zlib/deflate.c:   ush good_length; /* reduce lazy search above this match length */
3rdparty/zlib/deflate.c:   ush max_lazy;    /* do not perform lazy search above this match length */
3rdparty/zlib/deflate.c:   ush nice_length; /* quit search above this match length */
3rdparty/zlib/deflate.c:local const config configuration_table[2] = {
3rdparty/zlib/deflate.c:local const config configuration_table[10] = {
3rdparty/zlib/deflate.c: * Initialize the hash table (avoiding 64K overflow for 16 bit systems).
3rdparty/zlib/deflate.c:    s->match_available = 0;
3rdparty/zlib/deflate.c:    func = configuration_table[s->level].func;
3rdparty/zlib/deflate.c:    if ((strategy != s->strategy || func != configuration_table[level].func) &&
3rdparty/zlib/deflate.c:        s->max_lazy_match   = configuration_table[level].max_lazy;
3rdparty/zlib/deflate.c:        s->good_match       = configuration_table[level].good_length;
3rdparty/zlib/deflate.c:        s->nice_match       = configuration_table[level].nice_length;
3rdparty/zlib/deflate.c:        s->max_chain_length = configuration_table[level].max_chain;
3rdparty/zlib/deflate.c: * upper bound of about 14% expansion does not seem onerous for output buffer
3rdparty/zlib/deflate.c:                        (*(configuration_table[s->level].func))(s, flush));
3rdparty/zlib/deflate.c:                s->last_flush = -1; /* avoid BUF_ERROR next call, see above */
3rdparty/zlib/deflate.c:              s->last_flush = -1; /* avoid BUF_ERROR at next call, see above */
3rdparty/zlib/deflate.c:    s->max_lazy_match   = configuration_table[s->level].max_lazy;
3rdparty/zlib/deflate.c:    s->good_match       = configuration_table[s->level].good_length;
3rdparty/zlib/deflate.c:    s->nice_match       = configuration_table[s->level].nice_length;
3rdparty/zlib/deflate.c:    s->max_chain_length = configuration_table[s->level].max_chain;
3rdparty/zlib/deflate.c:    s->match_available = 0;
3rdparty/zlib/deflate.c:            /* Slide the hash table (could be avoided with 32 bit values
3rdparty/zlib/deflate.c:               to keep the hash table consistent if we switch back to level > 0
3rdparty/zlib/deflate.c:               zlib, so we don't care about this pathological case.)
3rdparty/zlib/deflate.c:            /* High water mark at or above current data, but below current data
3rdparty/zlib/deflate.c: * uncompressible data is probably not useful. This function is used
3rdparty/zlib/deflate.c:            /* Insert new strings in the hash table only if the match length
3rdparty/zlib/deflate.c:                s->match_length--; /* string at strstart already in table */
3rdparty/zlib/deflate.c: * Same as above, but achieves better compression. We use a lazy
3rdparty/zlib/deflate.c:            /* Do not insert strings in hash table beyond this. */
3rdparty/zlib/deflate.c:            /* Insert in hash table all strings up to the end of the match.
3rdparty/zlib/deflate.c:             * the hash table.
3rdparty/zlib/deflate.c:            s->match_available = 0;
3rdparty/zlib/deflate.c:        } else if (s->match_available) {
3rdparty/zlib/deflate.c:            s->match_available = 1;
3rdparty/zlib/deflate.c:    if (s->match_available) {
3rdparty/zlib/deflate.c:        s->match_available = 0;
3rdparty/zlib/deflate.c: * one.  Do not maintain a hash table.  (It will be regenerated if this run of
3rdparty/zlib/deflate.c: * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
3rdparty/zlib/inffixed.h:    /* inffixed.h -- table for decoding fixed codes
3rdparty/zlib/zutil.h:         /* Allow compilation with ANSI keywords only enabled */
3rdparty/zlib/inflate.c: *   improve code readability and style over the previous zlib inflate code
3rdparty/zlib/inflate.c: * - Use pointers for available input and output checking in inffast.c
3rdparty/zlib/inflate.c: * - Correct filename to inffixed.h for fixed tables in inflate.c
3rdparty/zlib/inflate.c: * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings
3rdparty/zlib/inflate.c: * - Use local copies of window variables in inflate_fast() for speed
3rdparty/zlib/inflate.c:local void fixedtables OF((struct inflate_state FAR *state));
3rdparty/zlib/inflate.c:   Return state with length and distance decoding tables and index sizes set to
3rdparty/zlib/inflate.c:   fixed code decoding.  Normally this returns fixed tables from inffixed.h.
3rdparty/zlib/inflate.c:   If BUILDFIXED is defined, then instead this routine builds the tables the
3rdparty/zlib/inflate.c:   first time it's called, and returns those tables the first time and
3rdparty/zlib/inflate.c:   thereafter.  This reduces the size of the code by about 2K bytes, in
3rdparty/zlib/inflate.c:   used for threaded applications, since the rewriting of the tables and virgin
3rdparty/zlib/inflate.c:local void fixedtables(state)
3rdparty/zlib/inflate.c:    /* build fixed huffman tables if first call (may not be thread safe) */
3rdparty/zlib/inflate.c:        /* literal/length table */
3rdparty/zlib/inflate.c:        inflate_table(LENS, state->lens, 288, &(next), &(bits), state->work);
3rdparty/zlib/inflate.c:        /* distance table */
3rdparty/zlib/inflate.c:        inflate_table(DISTS, state->lens, 32, &(next), &(bits), state->work);
3rdparty/zlib/inflate.c:   Write out the inffixed.h that is #include'd above.  Defining MAKEFIXED also
3rdparty/zlib/inflate.c:   defines BUILDFIXED, so the tables are built on the fly.  makefixed() writes
3rdparty/zlib/inflate.c:   those tables to stdout, which would be piped to inffixed.h.  A small program
3rdparty/zlib/inflate.c:    fixedtables(&state);
3rdparty/zlib/inflate.c:    puts("    /* inffixed.h -- table for decoding fixed codes");
3rdparty/zlib/inflate.c:   if there is no input available. */
3rdparty/zlib/inflate.c:   not enough available input to do that, then return from inflate(). */
3rdparty/zlib/inflate.c:   the requested bits are not available.  The typical use of the BITS macros
3rdparty/zlib/inflate.c:   and sets the number of available bits to zero.  BYTEBITS() discards just
3rdparty/zlib/inflate.c:   NEEDBITS(n) uses PULLBYTE() to get an available byte of input, or to return
3rdparty/zlib/inflate.c:   if there is no input available.  The decoding of variable length codes uses
3rdparty/zlib/inflate.c:   As shown above, if the next state is also the next case, then the break
3rdparty/zlib/inflate.c:   A state may also return if there is not enough output space available to
3rdparty/zlib/inflate.c:   strm->next_out, given the space available and the provided input--the effect
3rdparty/zlib/inflate.c:   stream available.  So the only thing the flush parameter actually does is:
3rdparty/zlib/inflate.c:    unsigned have, left;        /* available input and output */
3rdparty/zlib/inflate.c:    unsigned in, out;           /* save starting available input and output */
3rdparty/zlib/inflate.c:    code here;                  /* current decoding table entry */
3rdparty/zlib/inflate.c:    code last;                  /* parent table entry */
3rdparty/zlib/inflate.c:                fixedtables(state);
3rdparty/zlib/inflate.c:            Tracev((stderr, "inflate:       table sizes ok\n"));
3rdparty/zlib/inflate.c:            ret = inflate_table(CODES, state->lens, 19, &(state->next),
3rdparty/zlib/inflate.c:            /* build code tables -- note: do not change the lenbits or distbits
3rdparty/zlib/inflate.c:            ret = inflate_table(LENS, state->lens, state->nlen, &(state->next),
3rdparty/zlib/inflate.c:            ret = inflate_table(DISTS, state->lens + state->nlen, state->ndist,
3rdparty/zlib/inflate.c:       Note: a memory error from inflate() is non-recoverable.
3rdparty/zlib/inflate.c:    /* search available input */
3rdparty/zlib/deflate.h:/* define NO_GZIP when compiling if you want to disable gzip header and
3rdparty/zlib/deflate.h:   should be left enabled. */
3rdparty/zlib/deflate.h: * save space in the various tables. IPos is used only for parameter passing.
3rdparty/zlib/deflate.h:    uInt  hash_size;      /* number of elements in hash table */
3rdparty/zlib/deflate.h:    int match_available;         /* set if previous match exists */
3rdparty/zlib/deflate.h:    /* Insert new strings in the hash table only if the match length is not
3rdparty/zlib/deflate.h:     *     This is applicable only for zip (not gzip or zlib).
3rdparty/zlib/deflate.h:     *     a highly compressible string table.) Smaller buffer sizes give
3rdparty/zlib/deflate.h:     *   - I can't count above 4
3rdparty/zlib/deflate.h:    /* Number of valid bits in bi_buf.  All bits above the last valid bit
3rdparty/zlib/deflate.h:    /* High water mark offset in window for initialized bytes -- bytes above
3rdparty/zlib/deflate.h: * See deflate.c for comments about the MIN_MATCH+1.
3rdparty/readme.txt:The libraries and headers are preferably to build Win32 and Win64 versions of OpenCV.
3rdparty/readme.txt:libpng                Portable Network Graphics library.
3rdparty/readme.txt:                      Copyright (c) 2001 Fabrice Bellard
3rdparty/libjpeg/jutils.c: * This file contains tables and miscellaneous utility routines needed
3rdparty/libjpeg/jutils.c:#if 0				/* This table is not actually needed in v6a */
3rdparty/libjpeg/jquant1.c: * color values.  Optional Floyd-Steinberg or ordered dithering is available.
3rdparty/libjpeg/jquant1.c: * high quality, colormapped output capability.  A 2-pass quantizer usually
3rdparty/libjpeg/jquant1.c: * can be precalculated and stored in the lookup table colorindex[].
3rdparty/libjpeg/jquant1.c: * Aside from being fast, this scheme allows for variable spacing between
3rdparty/libjpeg/jquant1.c: * the output colors are equally spaced; if not, results will probably be
3rdparty/libjpeg/jquant1.c: * this to 0..MAXJSAMPLE, and then index into the colorindex table as usual.
3rdparty/libjpeg/jquant1.c: * table in both directions.
3rdparty/libjpeg/jquant1.c: * need only a few extra variables to hold the errors immediately around the
3rdparty/libjpeg/jquant1.c: * current column.  (If we are lucky, those variables are in registers, but
3rdparty/libjpeg/jquant1.c: * even if not, they're probably cheaper to access than array elements are.)
3rdparty/libjpeg/jquant1.c:   * premultiplied as described above.  Since colormap indexes must fit into
3rdparty/libjpeg/jquant1.c:  /* Variables for ordered dithering */
3rdparty/libjpeg/jquant1.c:  /* Variables for Floyd-Steinberg dithering */
3rdparty/libjpeg/jquant1.c: *  * select_ncolors decides how to divvy up the available colors
3rdparty/libjpeg/jquant1.c:  /* We may be able to increment the count for one or more components without
3rdparty/libjpeg/jquant1.c: * Create the color index table.
3rdparty/libjpeg/jquant1.c:  /* For ordered dither, we pad the color index tables by MAXJSAMPLE in
3rdparty/libjpeg/jquant1.c:       * about rounding negative values in integer division...
3rdparty/libjpeg/jquant1.c: * Create the ordered-dither tables.
3rdparty/libjpeg/jquant1.c: * share a dither table.
3rdparty/libjpeg/jquant1.c:create_odither_tables (j_decompress_ptr cinfo)
3rdparty/libjpeg/jquant1.c:    if (odither == NULL)	/* need a new table? */
3rdparty/libjpeg/jquant1.c:         * the colorindex table to produce the right answers for out-of-range
3rdparty/libjpeg/jquant1.c:     * we must recreate the color index table with padding.
3rdparty/libjpeg/jquant1.c:     * This will cost extra space, but probably isn't very likely.
3rdparty/libjpeg/jquant1.c:    /* Create ordered-dither tables if we didn't already. */
3rdparty/libjpeg/jquant1.c:      create_odither_tables(cinfo);
3rdparty/libjpeg/jquant1.c:  /* Create the colormap and color index table. */
3rdparty/libjpeg/jcsample.c: * one row group's worth of pixels above and below the passed-in data;
3rdparty/libjpeg/jcsample.c: * A simple input-smoothing capability is provided.  This is mainly intended
3rdparty/libjpeg/jcsample.c: * enabled, each input pixel P is replaced by a weighted sum of itself and its
3rdparty/libjpeg/jcsample.c: * A note about the "bias" calculations: when rounding fractional values to
3rdparty/libjpeg/jcsample.c: * If we did that, we'd introduce a noticeable bias towards larger values.
3rdparty/libjpeg/jcsample.c:  register JSAMPROW inptr0, inptr1, above_ptr, below_ptr, outptr;
3rdparty/libjpeg/jcsample.c:    above_ptr = input_data[inrow-1];
3rdparty/libjpeg/jcsample.c:    neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
3rdparty/libjpeg/jcsample.c:    neighsum += GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[2]) +
3rdparty/libjpeg/jcsample.c:    inptr0 += 2; inptr1 += 2; above_ptr += 2; below_ptr += 2;
3rdparty/libjpeg/jcsample.c:      neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
3rdparty/libjpeg/jcsample.c:      neighsum += GETJSAMPLE(above_ptr[-1]) + GETJSAMPLE(above_ptr[2]) +
3rdparty/libjpeg/jcsample.c:      inptr0 += 2; inptr1 += 2; above_ptr += 2; below_ptr += 2;
3rdparty/libjpeg/jcsample.c:    neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
3rdparty/libjpeg/jcsample.c:    neighsum += GETJSAMPLE(above_ptr[-1]) + GETJSAMPLE(above_ptr[1]) +
3rdparty/libjpeg/jcsample.c:  register JSAMPROW inptr, above_ptr, below_ptr, outptr;
3rdparty/libjpeg/jcsample.c:    above_ptr = input_data[inrow-1];
3rdparty/libjpeg/jcsample.c:    colsum = GETJSAMPLE(*above_ptr++) + GETJSAMPLE(*below_ptr++) +
3rdparty/libjpeg/jcsample.c:    nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
3rdparty/libjpeg/jcsample.c:      above_ptr++; below_ptr++;
3rdparty/libjpeg/jcsample.c:      nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
3rdparty/libjpeg/jdct.h: * well as perform the IDCT; for dequantization, it uses the multiplier table
3rdparty/libjpeg/jdct.h: * pointed to by compptr->dct_table.  The output data is to be placed into the
3rdparty/libjpeg/jdct.h: * Each IDCT routine has its own ideas about the best dct_table element type.
3rdparty/libjpeg/jdct.h: * range-limiting step is required.  We use a mask-and-table-lookup method
3rdparty/libjpeg/jdct.h: * prepare_range_limit_table (in jdmaster.c) for more info.
3rdparty/libjpeg/jdct.h:/* Multiply an INT32 variable by an INT32 constant to yield an INT32 result.
3rdparty/libjpeg/jdct.h: * Unfortunately there is no way to specify a 16x16->32 multiply portably
3rdparty/libjpeg/jdct.h:/* Same except both inputs are variables. */
3rdparty/libjpeg/jcomapi.c: * the permanent pool, so we will be able to close all temp files here.
3rdparty/libjpeg/jcomapi.c:jpeg_abort (j_common_ptr cinfo)
3rdparty/libjpeg/jcomapi.c: * Convenience routines for allocating quantization and Huffman tables.
3rdparty/libjpeg/jcomapi.c: * (Would jutils.c be a more reasonable place to put these?)
3rdparty/libjpeg/jcomapi.c:jpeg_alloc_quant_table (j_common_ptr cinfo)
3rdparty/libjpeg/jcomapi.c:  tbl->sent_table = FALSE;	/* make sure this is false in any new table */
3rdparty/libjpeg/jcomapi.c:jpeg_alloc_huff_table (j_common_ptr cinfo)
3rdparty/libjpeg/jcomapi.c:  tbl->sent_table = FALSE;	/* make sure this is false in any new table */
3rdparty/libjpeg/jcparam.c: * must know a lot more about the innards of the JPEG code.
3rdparty/libjpeg/jcparam.c: * Quantization table setup routines
3rdparty/libjpeg/jcparam.c:jpeg_add_quant_table (j_compress_ptr cinfo, int which_tbl,
3rdparty/libjpeg/jcparam.c:                      const unsigned int *basic_table,
3rdparty/libjpeg/jcparam.c:/* Define a quantization table equal to the basic_table times
3rdparty/libjpeg/jcparam.c: * If force_baseline is TRUE, the computed quantization table entries
3rdparty/libjpeg/jcparam.c:    *qtblptr = jpeg_alloc_quant_table((j_common_ptr) cinfo);
3rdparty/libjpeg/jcparam.c:    temp = ((long) basic_table[i] * scale_factor + 50L) / 100L;
3rdparty/libjpeg/jcparam.c:  /* Initialize sent_table FALSE so table will be written to JPEG file. */
3rdparty/libjpeg/jcparam.c:  (*qtblptr)->sent_table = FALSE;
3rdparty/libjpeg/jcparam.c:/* These are the sample quantization tables given in JPEG spec section K.1.
3rdparty/libjpeg/jcparam.c:jpeg_default_qtables (j_compress_ptr cinfo, boolean force_baseline)
3rdparty/libjpeg/jcparam.c:/* Set or change the 'quality' (quantization) setting, using default tables
3rdparty/libjpeg/jcparam.c:  /* Set up two quantization tables using the specified scaling */
3rdparty/libjpeg/jcparam.c:  jpeg_add_quant_table(cinfo, 0, std_luminance_quant_tbl,
3rdparty/libjpeg/jcparam.c:  jpeg_add_quant_table(cinfo, 1, std_chrominance_quant_tbl,
3rdparty/libjpeg/jcparam.c:/* Set or change the 'quality' (quantization) setting, using default tables
3rdparty/libjpeg/jcparam.c:  /* Set up two quantization tables using the specified scaling */
3rdparty/libjpeg/jcparam.c:  jpeg_add_quant_table(cinfo, 0, std_luminance_quant_tbl,
3rdparty/libjpeg/jcparam.c:  jpeg_add_quant_table(cinfo, 1, std_chrominance_quant_tbl,
3rdparty/libjpeg/jcparam.c: * for an underlying quantization table, using our recommended scaling curve.
3rdparty/libjpeg/jcparam.c:  /* The basic table is used as-is (scaling 100) for a quality of 50.
3rdparty/libjpeg/jcparam.c:   * note that at Q=100 the scaling is 0, which will cause jpeg_add_quant_table
3rdparty/libjpeg/jcparam.c:   * to make all the table entries 1 (hence, minimum quantization loss).
3rdparty/libjpeg/jcparam.c:/* Set or change the 'quality' (quantization) setting, using default tables.
3rdparty/libjpeg/jcparam.c: * interfaces; only those who want detailed control over quantization tables
3rdparty/libjpeg/jcparam.c:  /* Set up standard quality tables */
3rdparty/libjpeg/jcparam.c: * Huffman table setup routines
3rdparty/libjpeg/jcparam.c:add_huff_table (j_compress_ptr cinfo,
3rdparty/libjpeg/jcparam.c:/* Define a Huffman table */
3rdparty/libjpeg/jcparam.c:    *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
3rdparty/libjpeg/jcparam.c:  /* Initialize sent_table FALSE so table will be written to JPEG file. */
3rdparty/libjpeg/jcparam.c:  (*htblptr)->sent_table = FALSE;
3rdparty/libjpeg/jcparam.c:std_huff_tables (j_compress_ptr cinfo)
3rdparty/libjpeg/jcparam.c:/* Set up the standard Huffman tables (cf. JPEG standard section K.3) */
3rdparty/libjpeg/jcparam.c:  add_huff_table(cinfo, &cinfo->dc_huff_tbl_ptrs[0],
3rdparty/libjpeg/jcparam.c:  add_huff_table(cinfo, &cinfo->ac_huff_tbl_ptrs[0],
3rdparty/libjpeg/jcparam.c:  add_huff_table(cinfo, &cinfo->dc_huff_tbl_ptrs[1],
3rdparty/libjpeg/jcparam.c:  add_huff_table(cinfo, &cinfo->ac_huff_tbl_ptrs[1],
3rdparty/libjpeg/jcparam.c: * to establish defaults and then alter parameters selectively.  This
3rdparty/libjpeg/jcparam.c: * your code will still work (they'll be set to reasonable defaults).
3rdparty/libjpeg/jcparam.c:  /* Set up two quantization tables using default quality of 75 */
3rdparty/libjpeg/jcparam.c:  /* Set up two Huffman tables */
3rdparty/libjpeg/jcparam.c:  std_huff_tables(cinfo);
3rdparty/libjpeg/jcparam.c:  /* The standard Huffman tables are only valid for 8-bit data precision.
3rdparty/libjpeg/jcparam.c:   * If the precision is higher, force optimization on so that usable
3rdparty/libjpeg/jcparam.c:   * tables will be computed.  This test can be removed if default tables
3rdparty/libjpeg/jcparam.c:   * JFIF_minor_version to 2.  We could probably get away with just defaulting
3rdparty/libjpeg/jcparam.c:   * about that; saying 1.01 should minimize compatibility problems.
3rdparty/libjpeg/jcparam.c:  /* For all colorspaces, we use Q and Huff tables 0 for luminance components,
3rdparty/libjpeg/jcparam.c:   * tables 1 for chrominance components.
3rdparty/libjpeg/jcapistd.c: * We require a write_all_tables parameter as a failsafe check when writing
3rdparty/libjpeg/jcapistd.c: * will have left all the tables marked sent_table=TRUE, a subsequent run
3rdparty/libjpeg/jcapistd.c: * would emit an abbreviated stream (no tables) by default.  This may be what
3rdparty/libjpeg/jcapistd.c: * programmers should have to make a deliberate choice to emit abbreviated
3rdparty/libjpeg/jcapistd.c: * to pass write_all_tables=TRUE; then it will take active thought to do the
3rdparty/libjpeg/jcapistd.c:jpeg_start_compress (j_compress_ptr cinfo, boolean write_all_tables)
3rdparty/libjpeg/jcapistd.c:  if (write_all_tables)
3rdparty/libjpeg/jcapistd.c:    jpeg_suppress_tables(cinfo, FALSE);	/* mark all tables to be written */
3rdparty/libjpeg/jcapistd.c: * Note: we warn about excess calls to jpeg_write_scanlines() since
3rdparty/libjpeg/jddctmgr.c: * dequantization multiplier table needed by the IDCT routine.
3rdparty/libjpeg/jddctmgr.c: * quantization table for each component at the start of the first scan
3rdparty/libjpeg/jddctmgr.c: * decode files that reuse Q-table slots.)
3rdparty/libjpeg/jddctmgr.c: * When we are ready to make an output pass, the saved Q-table is converted
3rdparty/libjpeg/jddctmgr.c: * to a multiplier table that will actually be used by the IDCT routine.
3rdparty/libjpeg/jddctmgr.c: * The multiplier table contents are IDCT-method-dependent.  To support
3rdparty/libjpeg/jddctmgr.c: * multiplier tables if necessary.
3rdparty/libjpeg/jddctmgr.c: * has been seen for some components, and thus before their Q-tables have
3rdparty/libjpeg/jddctmgr.c: * been saved away.  To handle this case, multiplier tables are preset
3rdparty/libjpeg/jddctmgr.c:  /* This array contains the IDCT method code that each multiplier table
3rdparty/libjpeg/jddctmgr.c:   * The actual multiplier tables are pointed to by dct_table in the
3rdparty/libjpeg/jddctmgr.c:/* Allocated multiplier tables: big enough for any supported variant */
3rdparty/libjpeg/jddctmgr.c:} multiplier_table;
3rdparty/libjpeg/jddctmgr.c:/* The current scaled-IDCT routines require ISLOW-style multiplier tables,
3rdparty/libjpeg/jddctmgr.c: * a matching multiplier table.
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:      method = JDCT_ISLOW;	/* jidctint uses islow-style table */
3rdparty/libjpeg/jddctmgr.c:    /* Create multiplier table from quant table.
3rdparty/libjpeg/jddctmgr.c:     * or if we already built the table.  Also, if no quant table
3rdparty/libjpeg/jddctmgr.c:     * multiplier table all-zero; we'll be reading zeroes from the
3rdparty/libjpeg/jddctmgr.c:    qtbl = compptr->quant_table;
3rdparty/libjpeg/jddctmgr.c:        ISLOW_MULT_TYPE * ismtbl = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jddctmgr.c:         * For integer operation, the multiplier table is to be scaled by
3rdparty/libjpeg/jddctmgr.c:        IFAST_MULT_TYPE * ifmtbl = (IFAST_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jddctmgr.c:        FLOAT_MULT_TYPE * fmtbl = (FLOAT_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jddctmgr.c:    /* Allocate and pre-zero a multiplier table for each component */
3rdparty/libjpeg/jddctmgr.c:    compptr->dct_table =
3rdparty/libjpeg/jddctmgr.c:                                  SIZEOF(multiplier_table));
3rdparty/libjpeg/jddctmgr.c:    MEMZERO(compptr->dct_table, SIZEOF(multiplier_table));
3rdparty/libjpeg/jddctmgr.c:    /* Mark multiplier table not yet set up for any method */
3rdparty/libjpeg/jdapistd.c:    /* If file has multiple scans, absorb them all into the coef buffer */
3rdparty/libjpeg/jdapistd.c: * Note: we warn about excess calls to jpeg_read_scanlines() since
3rdparty/libjpeg/jdpostct.c:  num_rows = post->strip_height - post->next_row; /* available in strip */
3rdparty/libjpeg/jdpostct.c:  max_rows = out_rows_avail - *out_row_ctr; /* available in output area */
3rdparty/libjpeg/jdatadst.c:#define OUTPUT_BUF_SIZE  4096	/* choose an efficiently fwrite'able size */
3rdparty/libjpeg/jdatadst.c: * In applications that need to be able to suspend compression due to output
3rdparty/libjpeg/jdatadst.c: * NB: *not* called by jpeg_abort or jpeg_destroy; surrounding
3rdparty/libjpeg/jdatadst.c: * larger memory, so the buffer is available to the application after
3rdparty/libjpeg/jcmarker.c:  if (! qtbl->sent_table) {
3rdparty/libjpeg/jcmarker.c:      /* The table entries must be emitted in zigzag order. */
3rdparty/libjpeg/jcmarker.c:    qtbl->sent_table = TRUE;
3rdparty/libjpeg/jcmarker.c:  if (! htbl->sent_table) {
3rdparty/libjpeg/jcmarker.c:    htbl->sent_table = TRUE;
3rdparty/libjpeg/jcmarker.c:/* Since the useful info is so small, we want to emit all the tables in */
3rdparty/libjpeg/jcmarker.c:/* one DAC marker.  Therefore this routine does its own scan of the table. */
3rdparty/libjpeg/jcmarker.c:    /* DC needs no table for refinement scan */
3rdparty/libjpeg/jcmarker.c:    /* AC needs no table when not present */
3rdparty/libjpeg/jcmarker.c:    /* DC needs no table for refinement scan */
3rdparty/libjpeg/jcmarker.c:    /* AC needs no table when not present */
3rdparty/libjpeg/jcmarker.c: * Other uses are not guaranteed to produce desirable results.
3rdparty/libjpeg/jcmarker.c: * try to error-check the quant table numbers as soon as they see the SOF.
3rdparty/libjpeg/jcmarker.c:  /* Emit DQT for each quantization table.
3rdparty/libjpeg/jcmarker.c:   * Note that emit_dqt() suppresses any duplicate tables.
3rdparty/libjpeg/jcmarker.c:  /* now prec is nonzero iff there are any 16-bit quant tables. */
3rdparty/libjpeg/jcmarker.c:   * Note we assume that Huffman table numbers won't be changed later.
3rdparty/libjpeg/jcmarker.c:     * worth worrying about.
3rdparty/libjpeg/jcmarker.c:    /* Emit Huffman tables.
3rdparty/libjpeg/jcmarker.c:     * Note that emit_dht() suppresses any duplicate tables.
3rdparty/libjpeg/jcmarker.c:      /* DC needs no table for refinement scan */
3rdparty/libjpeg/jcmarker.c:      /* AC needs no table when not present */
3rdparty/libjpeg/jcmarker.c: * Write an abbreviated table-specification datastream.
3rdparty/libjpeg/jcmarker.c: * This consists of SOI, DQT and DHT tables, and EOI.
3rdparty/libjpeg/jcmarker.c: * Any table that is defined and not marked sent_table = TRUE will be
3rdparty/libjpeg/jcmarker.c: * emitted.  Note that all tables will be marked sent_table = TRUE at exit.
3rdparty/libjpeg/jcmarker.c:write_tables_only (j_compress_ptr cinfo)
3rdparty/libjpeg/jcmarker.c:  marker->pub.write_tables_only = write_tables_only;
3rdparty/libjpeg/jccolor.c:  INT32 * rgb_ycc_tab;		/* => table for RGB to YCbCr conversion */
3rdparty/libjpeg/jccolor.c: * as integers scaled up by 2^16 (about 4 digits precision); we have to divide
3rdparty/libjpeg/jccolor.c: * For 8-bit JSAMPLEs this is very reasonable (only 256 entries per table);
3rdparty/libjpeg/jccolor.c: * for 12-bit samples it is still acceptable.  It's not very reasonable for
3rdparty/libjpeg/jccolor.c: * in the tables to save adding them separately in the inner loop.
3rdparty/libjpeg/jccolor.c:/* We allocate one big table and divide it up into eight parts, instead of
3rdparty/libjpeg/jccolor.c: * doing eight alloc_small requests.  This lets us use a single table base
3rdparty/libjpeg/jccolor.c:  INT32 * rgb_ycc_tab;
3rdparty/libjpeg/jccolor.c:  /* Allocate and fill in the conversion tables. */
3rdparty/libjpeg/jccolor.c:  cconvert->rgb_ycc_tab = rgb_ycc_tab = (INT32 *)
3rdparty/libjpeg/jccolor.c:    rgb_ycc_tab[i+R_Y_OFF] = FIX(0.29900) * i;
3rdparty/libjpeg/jccolor.c:    rgb_ycc_tab[i+G_Y_OFF] = FIX(0.58700) * i;
3rdparty/libjpeg/jccolor.c:    rgb_ycc_tab[i+B_Y_OFF] = FIX(0.11400) * i     + ONE_HALF;
3rdparty/libjpeg/jccolor.c:    rgb_ycc_tab[i+R_CB_OFF] = (-FIX(0.16874)) * i;
3rdparty/libjpeg/jccolor.c:    rgb_ycc_tab[i+G_CB_OFF] = (-FIX(0.33126)) * i;
3rdparty/libjpeg/jccolor.c:    rgb_ycc_tab[i+B_CB_OFF] = FIX(0.50000) * i    + CBCR_OFFSET + ONE_HALF-1;
3rdparty/libjpeg/jccolor.c:/*  B=>Cb and R=>Cr tables are the same
3rdparty/libjpeg/jccolor.c:    rgb_ycc_tab[i+R_CR_OFF] = FIX(0.50000) * i    + CBCR_OFFSET + ONE_HALF-1;
3rdparty/libjpeg/jccolor.c:    rgb_ycc_tab[i+G_CR_OFF] = (-FIX(0.41869)) * i;
3rdparty/libjpeg/jccolor.c:    rgb_ycc_tab[i+B_CR_OFF] = (-FIX(0.08131)) * i;
3rdparty/libjpeg/jccolor.c:  register INT32 * ctab = cconvert->rgb_ycc_tab;
3rdparty/libjpeg/jccolor.c:                ((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
3rdparty/libjpeg/jccolor.c:                ((ctab[r+R_CB_OFF] + ctab[g+G_CB_OFF] + ctab[b+B_CB_OFF])
3rdparty/libjpeg/jccolor.c:                ((ctab[r+R_CR_OFF] + ctab[g+G_CR_OFF] + ctab[b+B_CR_OFF])
3rdparty/libjpeg/jccolor.c: * We assume rgb_ycc_start has been called (we only use the Y tables).
3rdparty/libjpeg/jccolor.c:  register INT32 * ctab = cconvert->rgb_ycc_tab;
3rdparty/libjpeg/jccolor.c:                ((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
3rdparty/libjpeg/jccolor.c: * conversion as above, while passing K (black) unchanged.
3rdparty/libjpeg/jccolor.c:  register INT32 * ctab = cconvert->rgb_ycc_tab;
3rdparty/libjpeg/jccolor.c:                ((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
3rdparty/libjpeg/jccolor.c:                ((ctab[r+R_CB_OFF] + ctab[g+G_CB_OFF] + ctab[b+B_CB_OFF])
3rdparty/libjpeg/jccolor.c:                ((ctab[r+R_CR_OFF] + ctab[g+G_CR_OFF] + ctab[b+B_CR_OFF])
3rdparty/libjpeg/jaricom.c: * This file contains probability estimation tables for common use in
3rdparty/libjpeg/jaricom.c: * This data represents Table D.3 in the JPEG spec (D.2 in the draft),
3rdparty/libjpeg/jaricom.c: * ISO/IEC IS 10918-1 and CCITT Recommendation ITU-T T.81, and Table 24
3rdparty/libjpeg/jaricom.c: * implementation (jbig_tab.c).
3rdparty/libjpeg/jaricom.c:const INT32 jpeg_aritab[113+1] = {
3rdparty/libjpeg/jaricom.c:  V(  62, 0x00ab,  61,  63, 0 ),
3rdparty/libjpeg/jaricom.c: * This last entry is used for fixed probability estimate of 0.5
3rdparty/libjpeg/jaricom.c: * as suggested in Section 10.3 Table 5 of ITU-T Rec. T.851.
3rdparty/libjpeg/jmemnobs.c: * This is very portable in the sense that it'll compile on almost anything,
3rdparty/libjpeg/jmemnobs.c: * you probably won't be able to process useful-size images in only 64KB.
3rdparty/libjpeg/jmemnobs.c: * This routine computes the total memory space available for allocation.
3rdparty/libjpeg/jmemnobs.c:jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,
3rdparty/libjpeg/jmemnobs.c: * Since jpeg_mem_available always promised the moon,
3rdparty/libjpeg/README:REFERENCES          Where to learn more about JPEG.
3rdparty/libjpeg/README:considerable functionality beyond the bare JPEG coding/decoding capability;
3rdparty/libjpeg/README:The emphasis in designing this software has been on achieving portability and
3rdparty/libjpeg/README:be reliable, portable, industrial-strength code.  We do not claim to have
3rdparty/libjpeg/README:with respect to this software, its quality, accuracy, merchantability, or
3rdparty/libjpeg/README:(2) If only executable code is distributed, then the accompanying
3rdparty/libjpeg/README:full responsibility for any undesirable consequences; the authors accept
3rdparty/libjpeg/README:commercial products, provided that all warranty or liability claims are
3rdparty/libjpeg/README:It is copyright by the Free Software Foundation but is freely distributable.
3rdparty/libjpeg/README:but is also freely distributable.
3rdparty/libjpeg/README:resulting GIF files are larger than usual, but are readable by all standard
3rdparty/libjpeg/README:available at http://www.ijg.org/files/wallace.ps.gz.  The file (actually
3rdparty/libjpeg/README:including JPEG.  It is an excellent source if you are comfortable reading C
3rdparty/libjpeg/README:code but don't know much about data compression in general.  The book's JPEG
3rdparty/libjpeg/README:The best currently available description of JPEG is the textbook "JPEG Still
3rdparty/libjpeg/README:JPEG publicly available, we point out that it is still missing an explanation
3rdparty/libjpeg/README:If you think that you know about DCT-based JPEG after reading this book,
3rdparty/libjpeg/README:The JPEG standard does not specify all details of an interchangeable file
3rdparty/libjpeg/README:and thus received a formal publication status.  It is available as a free
3rdparty/libjpeg/README:A PostScript version of the JFIF document is available at
3rdparty/libjpeg/README:general information about JPEG.
3rdparty/libjpeg/README:It is available on the World Wide Web at http://www.faqs.org/faqs/jpeg-faq/
3rdparty/libjpeg/README:communication about JPEG configuration in Sigma Photo Pro software.
3rdparty/libjpeg/README:convergence on common, interoperable format standards for JPEG files.
3rdparty/libjpeg/README:(In any case, our decoder will remain capable of reading existing JPEG
3rdparty/libjpeg/README:the name of libjpeg for misdirection of people, similar to the abuse of the
3rdparty/libjpeg/README:name JPEG as described above, while having nothing in common with actual IJG
3rdparty/libjpeg/README:and violates the license conditions as described under LEGAL ISSUES above.
3rdparty/libjpeg/jidctfst.c: * a time).  Direct algorithms are also available, but they are much more
3rdparty/libjpeg/jidctfst.c: * table entries.  The AA&N method leaves only 5 multiplies and 29 adds
3rdparty/libjpeg/jidctfst.c: * quantization values.  The smaller the quantization table entry, the less
3rdparty/libjpeg/jidctfst.c: * for small quantization table entries, but it saves a lot of shifts.
3rdparty/libjpeg/jidctfst.c: * (With a reasonable C compiler, you can just rely on the FIX() macro...)
3rdparty/libjpeg/jidctfst.c:/* Multiply a DCTELEM variable by an INT32 constant, and immediately
3rdparty/libjpeg/jidctfst.c:/* Dequantize a coefficient by multiplying it by the multiplier-table
3rdparty/libjpeg/jidctfst.c: * multiplication will do.  For 12-bit data, the multiplier table is
3rdparty/libjpeg/jidctfst.c:  quantptr = (IFAST_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctfst.c:     * With typical images and quantization tables, half or more of the
3rdparty/libjpeg/jmemsys.h:#define jpeg_mem_available	jMemAvail
3rdparty/libjpeg/jmemsys.h: * memory (up to the total free space designated by jpeg_mem_available).
3rdparty/libjpeg/jmemsys.h: * The interface is the same as above, except that on an 80x86 machine,
3rdparty/libjpeg/jmemsys.h: * in case a different allocation strategy is desirable for large chunks.
3rdparty/libjpeg/jmemsys.h: * NB: jmemmgr.c expects that MAX_ALLOC_CHUNK will be representable as type
3rdparty/libjpeg/jmemsys.h: * This routine computes the total space still available for allocation by
3rdparty/libjpeg/jmemsys.h: * jpeg_mem_available returns zero.  The maximum space needed, enough to hold
3rdparty/libjpeg/jmemsys.h: * method is available, cinfo->mem->max_memory_to_use - already_allocated
3rdparty/libjpeg/jmemsys.h: * is often a suitable calculation.
3rdparty/libjpeg/jmemsys.h: * It is OK for jpeg_mem_available to underestimate the space available
3rdparty/libjpeg/jmemsys.h: * a slop factor from the true available space.  5% should be enough.
3rdparty/libjpeg/jmemsys.h:EXTERN(long) jpeg_mem_available JPP((j_common_ptr cinfo,
3rdparty/libjpeg/jmemsys.h: * (If jpeg_mem_available always returns a large value, this routine can
3rdparty/libjpeg/jmemsys.h: * manager pointer).  It should return a suitable default value for
3rdparty/libjpeg/jmemsys.h: * jpeg_mem_available chooses to consult it ... no one else will.)
3rdparty/libjpeg/jccoefct.c: * and saved into the virtual arrays.  We also generate suitable dummy blocks
3rdparty/libjpeg/jccoefct.c: * it possible for subsequent passes not to worry about real vs. dummy blocks.
3rdparty/libjpeg/jccoefct.c: * the entropy encoder during this first pass; be careful about looking
3rdparty/libjpeg/jccoefct.c: * at the scan-dependent variables (MCU dimensions, etc).
3rdparty/libjpeg/jccoefct.c:   * A suspension return will result in redoing all the work above next time.
3rdparty/libjpeg/change.log:SmartScale capable decoder (introduced with IJG JPEG 8) required.
3rdparty/libjpeg/change.log:Add option to disable the region adjustment in the transupp crop code.
3rdparty/libjpeg/change.log:SmartScale capable decoder (introduced with IJG JPEG 8) required.
3rdparty/libjpeg/change.log:Thank to Volker Grabsch for the suggestion.
3rdparty/libjpeg/change.log:Writing tables-only datastreams via jpeg_write_tables works again.
3rdparty/libjpeg/change.log:available as a contributed document at ITU and ISO.  Revision 2 or later
3rdparty/libjpeg/change.log:The SmartScale extension will enable more features beside lossless resize
3rdparty/libjpeg/change.log:quantization table slot).
3rdparty/libjpeg/change.log:New API function jpeg_default_qtables() and q_scale_factor array in library.
3rdparty/libjpeg/change.log:New variable "do_fancy_downsampling" in library, complement to fancy
3rdparty/libjpeg/change.log:jpegtran now copies comments by default; it has a -copy switch to enable
3rdparty/libjpeg/change.log:Huffman tables being used.
3rdparty/libjpeg/change.log:Huffman tables are checked for validity much more carefully than before.
3rdparty/libjpeg/change.log:To avoid the Unisys LZW patent, djpeg's GIF output capability has been
3rdparty/libjpeg/change.log:changed to produce "uncompressed GIFs", and cjpeg's GIF input capability
3rdparty/libjpeg/change.log:has been removed altogether.  We're not happy about it either, but there
3rdparty/libjpeg/change.log:build shared libraries for).  Use "./configure --enable-shared" to
3rdparty/libjpeg/change.log:djpeg's -map switch is now able to read raw-format PPM files reliably.
3rdparty/libjpeg/change.log:DCT coefficient quantization tables are now stored in normal array order
3rdparty/libjpeg/change.log:rather than zigzag order.  Application code that calls jpeg_add_quant_table,
3rdparty/libjpeg/change.log:or otherwise manipulates quantization tables directly, will need to be
3rdparty/libjpeg/change.log:djpeg's trace capability now dumps DQT tables in natural order, not zigzag
3rdparty/libjpeg/change.log:order.  This allows the trace output to be made into a "-qtables" file
3rdparty/libjpeg/change.log:reading and writing of JPEG files as DCT coefficient arrays.  This ability
3rdparty/libjpeg/change.log:* We changed jpeg_start_decompress() to be able to suspend; this makes all
3rdparty/libjpeg/change.log:decoding modes available to suspending-input applications.  However,
3rdparty/libjpeg/change.log:Revise jerror.h/jerror.c for more flexibility in message table.
3rdparty/libjpeg/change.log:but unreadable.
3rdparty/libjpeg/change.log:Notable improvements include:
3rdparty/libjpeg/change.log:  * JPEG abbreviated datastream formats are supported, ie, quantization and
3rdparty/libjpeg/change.log:    Huffman tables can be stored separately from the image data.
3rdparty/libjpeg/change.log:    considerably!
3rdparty/libjpeg/jmemmgr.c: * routines.  This code is usable across a wide variety of machines; most
3rdparty/libjpeg/jmemmgr.c: *   * policy decisions about how to divide available memory among the
3rdparty/libjpeg/jmemmgr.c: * access code, and it contains the policy decision about how much total
3rdparty/libjpeg/jmemmgr.c: * memory then you shouldn't care about a little bit of unused code...)
3rdparty/libjpeg/jmemmgr.c: * There isn't any really portable way to determine the worst-case alignment
3rdparty/libjpeg/jmemmgr.c:    size_t bytes_left;		/* bytes still available in this pool */
3rdparty/libjpeg/jmemmgr.c:    size_t bytes_left;		/* bytes still available in this pool */
3rdparty/libjpeg/jmemmgr.c:  /* Check for unsatisfiable request (do now to ensure no overflow below) */
3rdparty/libjpeg/jmemmgr.c:    out_of_memory(cinfo, 1);	/* request exceeds malloc's ability */
3rdparty/libjpeg/jmemmgr.c:  /* See if space is available in any existing pool */
3rdparty/libjpeg/jmemmgr.c:  /* Check for unsatisfiable request (do now to ensure no overflow below) */
3rdparty/libjpeg/jmemmgr.c:    out_of_memory(cinfo, 3);	/* request exceeds malloc's ability */
3rdparty/libjpeg/jmemmgr.c: * NB: the virtual array control routines, later in this file, know about
3rdparty/libjpeg/jmemmgr.c: * This is essentially the same as the code for sample arrays, above.
3rdparty/libjpeg/jmemmgr.c: * The above "normal" array routines are only used to allocate strip buffers
3rdparty/libjpeg/jmemmgr.c:   * These may be of use to the system-dependent jpeg_mem_available routine.
3rdparty/libjpeg/jmemmgr.c:  avail_mem = jpeg_mem_available(cinfo, space_per_minheight, maximum_space,
3rdparty/libjpeg/jmemmgr.c:  /* If the maximum space needed is available, make all the buffers full
3rdparty/libjpeg/jmemmgr.c:     * anyway.  This allows a "stub" implementation of jpeg_mem_available().
3rdparty/libjpeg/jmemmgr.c:                    boolean writable)
3rdparty/libjpeg/jmemmgr.c:/* and extending for num_rows rows.  writable is true if  */
3rdparty/libjpeg/jmemmgr.c:   * that the caller is about to access, not the entire in-memory array.
3rdparty/libjpeg/jmemmgr.c:      if (writable)		/* writer skipped over a section of array */
3rdparty/libjpeg/jmemmgr.c:    if (writable)
3rdparty/libjpeg/jmemmgr.c:      if (! writable)		/* reader looking at undefined data */
3rdparty/libjpeg/jmemmgr.c:  if (writable)
3rdparty/libjpeg/jmemmgr.c:                    boolean writable)
3rdparty/libjpeg/jmemmgr.c:/* and extending for num_rows rows.  writable is true if  */
3rdparty/libjpeg/jmemmgr.c:   * that the caller is about to access, not the entire in-memory array.
3rdparty/libjpeg/jmemmgr.c:      if (writable)		/* writer skipped over a section of array */
3rdparty/libjpeg/jmemmgr.c:    if (writable)
3rdparty/libjpeg/jmemmgr.c:      if (! writable)		/* reader looking at undefined data */
3rdparty/libjpeg/jmemmgr.c:  if (writable)
3rdparty/libjpeg/jmemmgr.c:   * SIZEOF(ALIGN_TYPE) should be a power of 2; otherwise, it probably
3rdparty/libjpeg/jmemmgr.c:   * Some compilers may give an "unreachable code" warning here; ignore it.
3rdparty/libjpeg/jmemmgr.c:  /* MAX_ALLOC_CHUNK must be representable as type size_t, and must be
3rdparty/libjpeg/jmemmgr.c:   * Again, an "unreachable code" warning may be ignored here.
3rdparty/libjpeg/jmemmgr.c:  /* Check for an environment variable JPEGMEM; if found, override the
3rdparty/libjpeg/jmemmgr.c:   * If your system doesn't support getenv(), define NO_GETENV to disable
3rdparty/libjpeg/jconfig.h: * systems that complains about the "b" spec, define this symbol.
3rdparty/libjpeg/jerror.h: * defining macro JMESSAGE.  To create a message string table, include it
3rdparty/libjpeg/jerror.h: * again with a suitable JMESSAGE definition (see jerror.c for an example).
3rdparty/libjpeg/jerror.h:/* For maintenance convenience, list is alphabetical by message code name */
3rdparty/libjpeg/jerror.h:JMESSAGE(JERR_BAD_HUFF_TABLE, "Bogus Huffman table definition")
3rdparty/libjpeg/jerror.h:JMESSAGE(JERR_HUFF_CLEN_OVERFLOW, "Huffman code size table overflow")
3rdparty/libjpeg/jerror.h:JMESSAGE(JERR_HUFF_MISSING_CODE, "Missing Huffman code table entry")
3rdparty/libjpeg/jerror.h:         "Cannot transcode due to multiple use of quantization table %d")
3rdparty/libjpeg/jerror.h:JMESSAGE(JERR_NO_ARITH_TABLE, "Arithmetic table 0x%02x was not defined")
3rdparty/libjpeg/jerror.h:JMESSAGE(JERR_NO_HUFF_TABLE, "Huffman table 0x%02x was not defined")
3rdparty/libjpeg/jerror.h:JMESSAGE(JERR_NO_QUANT_TABLE, "Quantization table 0x%02x was not defined")
3rdparty/libjpeg/jerror.h:         "Caution: quantization tables are too coarse for baseline JPEG")
3rdparty/libjpeg/jerror.h:JMESSAGE(JTRC_DAC, "Define Arithmetic Table 0x%02x: 0x%02x")
3rdparty/libjpeg/jerror.h:JMESSAGE(JTRC_DHT, "Define Huffman Table 0x%02x")
3rdparty/libjpeg/jerror.h:JMESSAGE(JTRC_DQT, "Define Quantization Table %d  precision %d")
3rdparty/libjpeg/jerror.h:/* Nonfatal errors (we can keep going, but the data is probably corrupt) */
3rdparty/libjpeg/jmemansi.c: * Also, the problem of determining the amount of memory available
3rdparty/libjpeg/jmemansi.c: * you probably won't be able to process useful-size images in only 64KB.
3rdparty/libjpeg/jmemansi.c: * This routine computes the total memory space available for allocation.
3rdparty/libjpeg/jmemansi.c: * It's impossible to do this in a portable way; our current solution is
3rdparty/libjpeg/jmemansi.c: * If you can actually get the available space, it's a good idea to subtract
3rdparty/libjpeg/jmemansi.c:#define DEFAULT_MAX_MEM		1000000L /* default: one megabyte */
3rdparty/libjpeg/jmemansi.c:jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,
3rdparty/libjpeg/jmemansi.c: * jpeg_mem_available is less than the total space needed.  You can dispense
3rdparty/libjpeg/jmemansi.c: * This version uses tmpfile(), which constructs a suitable file name
3rdparty/libjpeg/jdatasrc.c:#define INPUT_BUF_SIZE  4096	/* choose an efficiently fread'able size */
3rdparty/libjpeg/jdatasrc.c: * In applications that need to be able to suspend compression due to input
3rdparty/libjpeg/jdatasrc.c: * not being available yet, a FALSE return indicates that no more data can be
3rdparty/libjpeg/jdatasrc.c: * Writers of suspendable-input applications must note that skip_input_data
3rdparty/libjpeg/jdatasrc.c: * NB: *not* called by jpeg_abort or jpeg_destroy; surrounding
3rdparty/libjpeg/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS -Wcast-align -Wshadow -Wunused)
3rdparty/libjpeg/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS -Wunused-parameter) # clang
3rdparty/libjpeg/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS /wd4013 /wd4244 /wd4267) # vs2005
3rdparty/libjpeg/jdapimin.c:jpeg_abort_decompress (j_decompress_ptr cinfo)
3rdparty/libjpeg/jdapimin.c:  jpeg_abort((j_common_ptr) cinfo); /* use common routine */
3rdparty/libjpeg/jdapimin.c:  cinfo->enable_1pass_quant = FALSE;
3rdparty/libjpeg/jdapimin.c:  cinfo->enable_external_quant = FALSE;
3rdparty/libjpeg/jdapimin.c:  cinfo->enable_2pass_quant = FALSE;
3rdparty/libjpeg/jdapimin.c: * compressed data), and will save all tables and parameters in the JPEG
3rdparty/libjpeg/jdapimin.c: * the data need not be decompressed.  In that case, call jpeg_abort or
3rdparty/libjpeg/jdapimin.c: * If an abbreviated (tables only) datastream is presented, the routine will
3rdparty/libjpeg/jdapimin.c: * re-use the JPEG object to read the abbreviated image datastream(s).
3rdparty/libjpeg/jdapimin.c: * It is unnecessary (but OK) to call jpeg_abort in this case.
3rdparty/libjpeg/jdapimin.c:     * call jpeg_abort, but we can't change it now for compatibility reasons.
3rdparty/libjpeg/jdapimin.c:    jpeg_abort((j_common_ptr) cinfo); /* sets state = DSTATE_START */
3rdparty/libjpeg/jdapimin.c:  /* We can use jpeg_abort to release memory and reset global_state */
3rdparty/libjpeg/jdapimin.c:  jpeg_abort((j_common_ptr) cinfo);
3rdparty/libjpeg/jidctint.c: * a time).  Direct algorithms are also available, but they are much more
3rdparty/libjpeg/jidctint.c: * (With a reasonable C compiler, you can just rely on the FIX() macro...)
3rdparty/libjpeg/jidctint.c:/* Multiply an INT32 variable by an INT32 constant to yield an INT32 result.
3rdparty/libjpeg/jidctint.c: * For 8-bit samples with the recommended scaling, all the variable
3rdparty/libjpeg/jidctint.c:/* Dequantize a coefficient by multiplying it by the multiplier-table
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:     * With typical images and quantization tables, half or more of the
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:     * With typical images and quantization tables, half or more of the
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:     * With typical images and quantization tables, half or more of the
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctint.c:  quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jdmerge.c:  int * Cr_r_tab;		/* => table for Cr to R conversion */
3rdparty/libjpeg/jdmerge.c:  int * Cb_b_tab;		/* => table for Cb to B conversion */
3rdparty/libjpeg/jdmerge.c:  INT32 * Cr_g_tab;		/* => table for Cr to G conversion */
3rdparty/libjpeg/jdmerge.c:  INT32 * Cb_g_tab;		/* => table for Cb to G conversion */
3rdparty/libjpeg/jdmerge.c: * Initialize tables for YCC->RGB colorspace conversion.
3rdparty/libjpeg/jdmerge.c:build_ycc_rgb_table (j_decompress_ptr cinfo)
3rdparty/libjpeg/jdmerge.c:  upsample->Cr_r_tab = (int *)
3rdparty/libjpeg/jdmerge.c:  upsample->Cb_b_tab = (int *)
3rdparty/libjpeg/jdmerge.c:  upsample->Cr_g_tab = (INT32 *)
3rdparty/libjpeg/jdmerge.c:  upsample->Cb_g_tab = (INT32 *)
3rdparty/libjpeg/jdmerge.c:    upsample->Cr_r_tab[i] = (int)
3rdparty/libjpeg/jdmerge.c:    upsample->Cb_b_tab[i] = (int)
3rdparty/libjpeg/jdmerge.c:    upsample->Cr_g_tab[i] = (- FIX(0.71414)) * x;
3rdparty/libjpeg/jdmerge.c:    upsample->Cb_g_tab[i] = (- FIX(0.34414)) * x + ONE_HALF;
3rdparty/libjpeg/jdmerge.c: * we have to be honest about the output width; we can't assume the buffer
3rdparty/libjpeg/jdmerge.c:  int * Crrtab = upsample->Cr_r_tab;
3rdparty/libjpeg/jdmerge.c:  int * Cbbtab = upsample->Cb_b_tab;
3rdparty/libjpeg/jdmerge.c:  INT32 * Crgtab = upsample->Cr_g_tab;
3rdparty/libjpeg/jdmerge.c:  INT32 * Cbgtab = upsample->Cb_g_tab;
3rdparty/libjpeg/jdmerge.c:    cred = Crrtab[cr];
3rdparty/libjpeg/jdmerge.c:    cgreen = (int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr], SCALEBITS);
3rdparty/libjpeg/jdmerge.c:    cblue = Cbbtab[cb];
3rdparty/libjpeg/jdmerge.c:    cred = Crrtab[cr];
3rdparty/libjpeg/jdmerge.c:    cgreen = (int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr], SCALEBITS);
3rdparty/libjpeg/jdmerge.c:    cblue = Cbbtab[cb];
3rdparty/libjpeg/jdmerge.c:  int * Crrtab = upsample->Cr_r_tab;
3rdparty/libjpeg/jdmerge.c:  int * Cbbtab = upsample->Cb_b_tab;
3rdparty/libjpeg/jdmerge.c:  INT32 * Crgtab = upsample->Cr_g_tab;
3rdparty/libjpeg/jdmerge.c:  INT32 * Cbgtab = upsample->Cb_g_tab;
3rdparty/libjpeg/jdmerge.c:    cred = Crrtab[cr];
3rdparty/libjpeg/jdmerge.c:    cgreen = (int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr], SCALEBITS);
3rdparty/libjpeg/jdmerge.c:    cblue = Cbbtab[cb];
3rdparty/libjpeg/jdmerge.c:    cred = Crrtab[cr];
3rdparty/libjpeg/jdmerge.c:    cgreen = (int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr], SCALEBITS);
3rdparty/libjpeg/jdmerge.c:    cblue = Cbbtab[cb];
3rdparty/libjpeg/jdmerge.c: * in jdmaster.c.  That routine MUST correspond to the actual capabilities
3rdparty/libjpeg/jdmerge.c:  build_ycc_rgb_table(cinfo);
3rdparty/libjpeg/jpegint.h:  /* State variables made visible to other modules */
3rdparty/libjpeg/jpegint.h:  boolean need_context_rows;	/* TRUE if need rows above & below */
3rdparty/libjpeg/jpegint.h:  JMETHOD(void, write_tables_only, (j_compress_ptr cinfo));
3rdparty/libjpeg/jpegint.h:  /* Probably only COM and APPn markers should be written this way */
3rdparty/libjpeg/jpegint.h:  /* State variables made visible to other modules */
3rdparty/libjpeg/jpegint.h:  /* State variables made visible to other modules */
3rdparty/libjpeg/jpegint.h:  boolean need_context_rows;	/* TRUE if need rows above & below */
3rdparty/libjpeg/jpegint.h: * included in the variables of any routine using RIGHT_SHIFT.
3rdparty/libjpeg/jpegint.h:#define jpeg_zigzag_order	jZIGTable
3rdparty/libjpeg/jpegint.h:#define jpeg_natural_order	jZAGTable
3rdparty/libjpeg/jpegint.h:#define jpeg_natural_order7	jZAG7Table
3rdparty/libjpeg/jpegint.h:#define jpeg_natural_order6	jZAG6Table
3rdparty/libjpeg/jpegint.h:#define jpeg_natural_order5	jZAG5Table
3rdparty/libjpeg/jpegint.h:#define jpeg_natural_order4	jZAG4Table
3rdparty/libjpeg/jpegint.h:#define jpeg_natural_order3	jZAG3Table
3rdparty/libjpeg/jpegint.h:#define jpeg_natural_order2	jZAG2Table
3rdparty/libjpeg/jpegint.h:#define jpeg_aritab		jAriTab
3rdparty/libjpeg/jpegint.h:/* Constant tables in jutils.c */
3rdparty/libjpeg/jpegint.h:#if 0				/* This table is not actually needed in v6a */
3rdparty/libjpeg/jpegint.h:/* Arithmetic coding probability estimation tables in jaricom.c */
3rdparty/libjpeg/jpegint.h:extern const INT32 jpeg_aritab[];
3rdparty/libjpeg/jidctflt.c: * a time).  Direct algorithms are also available, but they are much more
3rdparty/libjpeg/jidctflt.c: * table entries.  The AA&N method leaves only 5 multiplies and 29 adds
3rdparty/libjpeg/jidctflt.c:/* Dequantize a coefficient by multiplying it by the multiplier-table
3rdparty/libjpeg/jidctflt.c:  quantptr = (FLOAT_MULT_TYPE *) compptr->dct_table;
3rdparty/libjpeg/jidctflt.c:     * With typical images and quantization tables, half or more of the
3rdparty/libjpeg/jpeglib.h: * manual configuration options that most people need not worry about.
3rdparty/libjpeg/jpeglib.h:#define NUM_QUANT_TBLS      4	/* Quantization tables are numbered 0..3 */
3rdparty/libjpeg/jpeglib.h:#define NUM_HUFF_TBLS       4	/* Huffman tables are numbered 0..3 */
3rdparty/libjpeg/jpeglib.h:#define NUM_ARITH_TBLS      16	/* Arith-coding tables are numbered 0..15 */
3rdparty/libjpeg/jpeglib.h:/* Types for JPEG compression parameters and working tables. */
3rdparty/libjpeg/jpeglib.h:/* DCT coefficient quantization tables. */
3rdparty/libjpeg/jpeglib.h:   * the table is created, and set TRUE when it's been output to the file.
3rdparty/libjpeg/jpeglib.h:   * You could suppress output of a table by setting this to TRUE.
3rdparty/libjpeg/jpeglib.h:   * (See jpeg_suppress_tables for an example.)
3rdparty/libjpeg/jpeglib.h:  boolean sent_table;		/* TRUE when table has been output */
3rdparty/libjpeg/jpeglib.h:/* Huffman coding tables. */
3rdparty/libjpeg/jpeglib.h:   * the table is created, and set TRUE when it's been output to the file.
3rdparty/libjpeg/jpeglib.h:   * You could suppress output of a table by setting this to TRUE.
3rdparty/libjpeg/jpeglib.h:   * (See jpeg_suppress_tables for an example.)
3rdparty/libjpeg/jpeglib.h:  boolean sent_table;		/* TRUE when table has been output */
3rdparty/libjpeg/jpeglib.h:/* Basic info about one component (color channel). */
3rdparty/libjpeg/jpeglib.h:  int quant_tbl_no;		/* quantization table selector (0..3) */
3rdparty/libjpeg/jpeglib.h:  /* The decompressor output side may not use these variables. */
3rdparty/libjpeg/jpeglib.h:  int dc_tbl_no;		/* DC entropy table selector (0..3) */
3rdparty/libjpeg/jpeglib.h:  int ac_tbl_no;		/* AC entropy table selector (0..3) */
3rdparty/libjpeg/jpeglib.h:  /* The decompressor output side may not use these variables. */
3rdparty/libjpeg/jpeglib.h:  /* Saved quantization table for component; NULL if none yet saved.
3rdparty/libjpeg/jpeglib.h:   * See jdinput.c comments about the need for this information.
3rdparty/libjpeg/jpeglib.h:  JQUANT_TBL * quant_table;
3rdparty/libjpeg/jpeglib.h:  void * dct_table;
3rdparty/libjpeg/jpeglib.h:  void * client_data;		/* Available for use by application */\
3rdparty/libjpeg/jpeglib.h:   * initialize everything to reasonable defaults, then changing anything
3rdparty/libjpeg/jpeglib.h:   * derived from input dimensions by scaling factors above.
3rdparty/libjpeg/jpeglib.h:  /* ptrs to coefficient quantization tables, or NULL if not defined,
3rdparty/libjpeg/jpeglib.h:  /* ptrs to Huffman coding tables, or NULL if not defined */
3rdparty/libjpeg/jpeglib.h:  UINT8 arith_dc_L[NUM_ARITH_TBLS]; /* L values for DC arith-coding tables */
3rdparty/libjpeg/jpeglib.h:  UINT8 arith_dc_U[NUM_ARITH_TBLS]; /* U values for DC arith-coding tables */
3rdparty/libjpeg/jpeglib.h:  UINT8 arith_ac_K[NUM_ARITH_TBLS]; /* Kx values for AC arith-coding tables */
3rdparty/libjpeg/jpeglib.h:  /* The restart interval can be specified in absolute MCUs by setting
3rdparty/libjpeg/jpeglib.h:  /* State variable: index of next scanline to be written to
3rdparty/libjpeg/jpeglib.h:   * Links to compression subobjects (methods and private variables of modules)
3rdparty/libjpeg/jpeglib.h:  boolean enable_1pass_quant;	/* enable future use of 1-pass quantizer */
3rdparty/libjpeg/jpeglib.h:  boolean enable_external_quant;/* enable future use of external colormap */
3rdparty/libjpeg/jpeglib.h:  boolean enable_2pass_quant;	/* enable future use of 2-pass quantizer */
3rdparty/libjpeg/jpeglib.h:  /* State variables: these variables indicate the progress of decompression.
3rdparty/libjpeg/jpeglib.h:  /* Quantization and Huffman tables are carried forward across input
3rdparty/libjpeg/jpeglib.h:   * datastreams when processing abbreviated JPEG datastreams.
3rdparty/libjpeg/jpeglib.h:  /* ptrs to coefficient quantization tables, or NULL if not defined */
3rdparty/libjpeg/jpeglib.h:  /* ptrs to Huffman coding tables, or NULL if not defined */
3rdparty/libjpeg/jpeglib.h:  UINT8 arith_dc_L[NUM_ARITH_TBLS]; /* L values for DC arith-coding tables */
3rdparty/libjpeg/jpeglib.h:  UINT8 arith_dc_U[NUM_ARITH_TBLS]; /* U values for DC arith-coding tables */
3rdparty/libjpeg/jpeglib.h:  UINT8 arith_ac_K[NUM_ARITH_TBLS]; /* Kx values for AC arith-coding tables */
3rdparty/libjpeg/jpeglib.h:  JSAMPLE * sample_range_limit; /* table for fast range-limiting */
3rdparty/libjpeg/jpeglib.h:   * Links to decompression subobjects (methods, private variables of modules)
3rdparty/libjpeg/jpeglib.h: * publicly visible methods and state variables of a module.  Additional
3rdparty/libjpeg/jpeglib.h:  /* Reset error state variables at start of a new image */
3rdparty/libjpeg/jpeglib.h:  /* Standard state variables for error facility */
3rdparty/libjpeg/jpeglib.h:  /* For recoverable corrupt-data errors, we emit a warning message,
3rdparty/libjpeg/jpeglib.h:   * but keep going unless emit_message chooses to abort.  emit_message
3rdparty/libjpeg/jpeglib.h:  /* These fields point to the table(s) of error message strings.
3rdparty/libjpeg/jpeglib.h:   * An application can change the table pointer to switch to a different
3rdparty/libjpeg/jpeglib.h:   * table pointer is used for this purpose.
3rdparty/libjpeg/jpeglib.h:   * First table includes all errors generated by JPEG library itself.
3rdparty/libjpeg/jpeglib.h:  const char * const * jpeg_message_table; /* Library errors */
3rdparty/libjpeg/jpeglib.h:  int last_jpeg_message;    /* Table contains strings 0..last_jpeg_message */
3rdparty/libjpeg/jpeglib.h:  /* Second table can be added by application (see cjpeg/djpeg for example).
3rdparty/libjpeg/jpeglib.h:  const char * const * addon_message_table; /* Non-library errors */
3rdparty/libjpeg/jpeglib.h:  int first_addon_message;	/* code for first string in addon table */
3rdparty/libjpeg/jpeglib.h:  int last_addon_message;	/* code for last string in addon table */
3rdparty/libjpeg/jpeglib.h:                                           boolean writable));
3rdparty/libjpeg/jpeglib.h:                                            boolean writable));
3rdparty/libjpeg/jpeglib.h:#define jpeg_default_qtables	jDefQTables
3rdparty/libjpeg/jpeglib.h:#define jpeg_add_quant_table	jAddQuantTable
3rdparty/libjpeg/jpeglib.h:#define jpeg_suppress_tables	jSuppressTables
3rdparty/libjpeg/jpeglib.h:#define jpeg_alloc_quant_table	jAlcQTable
3rdparty/libjpeg/jpeglib.h:#define jpeg_alloc_huff_table	jAlcHTable
3rdparty/libjpeg/jpeglib.h:#define jpeg_write_tables	jWrtTables
3rdparty/libjpeg/jpeglib.h:#define jpeg_abort_compress	jAbrtCompress
3rdparty/libjpeg/jpeglib.h:#define jpeg_abort_decompress	jAbrtDecompress
3rdparty/libjpeg/jpeglib.h:#define jpeg_abort		jAbort
3rdparty/libjpeg/jpeglib.h:EXTERN(void) jpeg_default_qtables JPP((j_compress_ptr cinfo,
3rdparty/libjpeg/jpeglib.h:EXTERN(void) jpeg_add_quant_table JPP((j_compress_ptr cinfo, int which_tbl,
3rdparty/libjpeg/jpeglib.h:                                       const unsigned int *basic_table,
3rdparty/libjpeg/jpeglib.h:EXTERN(void) jpeg_suppress_tables JPP((j_compress_ptr cinfo,
3rdparty/libjpeg/jpeglib.h:EXTERN(JQUANT_TBL *) jpeg_alloc_quant_table JPP((j_common_ptr cinfo));
3rdparty/libjpeg/jpeglib.h:EXTERN(JHUFF_TBL *) jpeg_alloc_huff_table JPP((j_common_ptr cinfo));
3rdparty/libjpeg/jpeglib.h:                                      boolean write_all_tables));
3rdparty/libjpeg/jpeglib.h:/* Alternate compression function: just write an abbreviated table file */
3rdparty/libjpeg/jpeglib.h:EXTERN(void) jpeg_write_tables JPP((j_compress_ptr cinfo));
3rdparty/libjpeg/jpeglib.h:#define JPEG_HEADER_TABLES_ONLY	2 /* Found valid table-specs-only datastream */
3rdparty/libjpeg/jpeglib.h: * a TABLES_ONLY return code; an abbreviated file will cause an error exit.
3rdparty/libjpeg/jpeglib.h:/* If you choose to abort compression or decompression before completing
3rdparty/libjpeg/jpeglib.h:EXTERN(void) jpeg_abort_compress JPP((j_compress_ptr cinfo));
3rdparty/libjpeg/jpeglib.h:EXTERN(void) jpeg_abort_decompress JPP((j_decompress_ptr cinfo));
3rdparty/libjpeg/jpeglib.h:/* Generic versions of jpeg_abort and jpeg_destroy that work on either
3rdparty/libjpeg/jpeglib.h:EXTERN(void) jpeg_abort JPP((j_common_ptr cinfo));
3rdparty/libjpeg/jfdctflt.c: * on each column.  Direct algorithms are also available, but they are
3rdparty/libjpeg/jfdctflt.c: * table entries.  The AA&N method leaves only 5 multiplies and 29 adds
3rdparty/libjpeg/jdhuff.c: * If the data source module demands suspension, we want to be able to back
3rdparty/libjpeg/jdhuff.c: * up to the start of the current MCU.  To do this, we copy state variables
3rdparty/libjpeg/jdhuff.c:/* Derived data constructed for each Huffman table */
3rdparty/libjpeg/jdhuff.c:  /* Basic tables: (element [0] of each array is unused) */
3rdparty/libjpeg/jdhuff.c:  /* Link to public Huffman table (needed only in jpeg_huff_decode) */
3rdparty/libjpeg/jdhuff.c:  /* Lookahead tables: indexed by the next HUFF_LOOKAHEAD bits of
3rdparty/libjpeg/jdhuff.c:   * the corresponding symbol directly from these tables.
3rdparty/libjpeg/jdhuff.c: * reasonably fast, making bit_buf_type be long and setting BIT_BUF_SIZE
3rdparty/libjpeg/jdhuff.c:  /* Bit input buffer --- note these values are kept in register variables,
3rdparty/libjpeg/jdhuff.c:/* Macros to declare and load/save bitread local variables. */
3rdparty/libjpeg/jdhuff.c: * The variables get_buffer and bits_left are assumed to be locals,
3rdparty/libjpeg/jdhuff.c: * The value N should be a simple variable, not an expression, because it
3rdparty/libjpeg/jdhuff.c: * We use a lookahead table to process codes of up to HUFF_LOOKAHEAD bits
3rdparty/libjpeg/jdhuff.c: * Notes about the HUFF_DECODE macro:
3rdparty/libjpeg/jdhuff.c: * 2. If the lookahead table contains no entry, the next code must be
3rdparty/libjpeg/jdhuff.c:#define HUFF_DECODE(result,state,htbl,failaction,slowlabel) \
3rdparty/libjpeg/jdhuff.c:      nb = 1; goto slowlabel; \
3rdparty/libjpeg/jdhuff.c:slowlabel: \
3rdparty/libjpeg/jdhuff.c: * The savable_state subrecord contains fields that change within an MCU,
3rdparty/libjpeg/jdhuff.c:} savable_state;
3rdparty/libjpeg/jdhuff.c:  /* These fields are loaded into local variables at start of each MCU.
3rdparty/libjpeg/jdhuff.c:  savable_state saved;		/* Other state at start of MCU */
3rdparty/libjpeg/jdhuff.c:  /* Pointers to derived tables (these workspaces have image lifespan) */
3rdparty/libjpeg/jdhuff.c:  d_derived_tbl * ac_derived_tbl; /* active table during an AC scan */
3rdparty/libjpeg/jdhuff.c:  /* Pointers to derived tables (these workspaces have image lifespan) */
3rdparty/libjpeg/jdhuff.c:  /* Pointers to derived tables to be used for each block within an MCU */
3rdparty/libjpeg/jdhuff.c:  /* Whether we care about the DC and AC coefficient values for each block */
3rdparty/libjpeg/jdhuff.c: * Compute the derived values for a Huffman table.
3rdparty/libjpeg/jdhuff.c: * This routine also performs some validation checks on the table.
3rdparty/libjpeg/jdhuff.c:  /* Find the input Huffman table */
3rdparty/libjpeg/jdhuff.c:  /* Figure C.1: make table of Huffman code length for each symbol */
3rdparty/libjpeg/jdhuff.c:    if (i < 0 || p + i > 256)	/* protect against table overrun */
3rdparty/libjpeg/jdhuff.c:  /* Figure F.15: generate decoding tables for bit-sequential decoding */
3rdparty/libjpeg/jdhuff.c:  /* Compute lookahead tables to speed up decoding.
3rdparty/libjpeg/jdhuff.c:   * First we set all the table entries to 0, indicating "too long";
3rdparty/libjpeg/jdhuff.c:  /* Validate symbols as being reasonable.
3rdparty/libjpeg/jdhuff.c:   * For AC tables, we make no check, but accept all byte values 0..255.
3rdparty/libjpeg/jdhuff.c:   * For DC tables, we require the symbols to be in range 0..15.
3rdparty/libjpeg/jdhuff.c:#define MIN_GET_BITS  15	/* minimum allowable value */
3rdparty/libjpeg/jdhuff.c: * On some machines, a shift and sub will be faster than a table lookup.
3rdparty/libjpeg/jdhuff.c:  savable_state state;
3rdparty/libjpeg/jdhuff.c:      HUFF_DECODE(s, br_state, tbl, return FALSE, label1);
3rdparty/libjpeg/jdhuff.c:        HUFF_DECODE(s, br_state, tbl, return FALSE, label2);
3rdparty/libjpeg/jdhuff.c:     * next time about which coefficients were already nonzero.
3rdparty/libjpeg/jdhuff.c:        HUFF_DECODE(s, br_state, tbl, goto undoit, label3);
3rdparty/libjpeg/jdhuff.c:         * if the absolute value of the coefficient must be increased.
3rdparty/libjpeg/jdhuff.c:       * if the absolute value of the coefficient must be increased.
3rdparty/libjpeg/jdhuff.c:  savable_state state;
3rdparty/libjpeg/jdhuff.c:      HUFF_DECODE(s, br_state, htbl, return FALSE, label1);
3rdparty/libjpeg/jdhuff.c:          HUFF_DECODE(s, br_state, htbl, return FALSE, label2);
3rdparty/libjpeg/jdhuff.c:        HUFF_DECODE(s, br_state, htbl, return FALSE, label3);
3rdparty/libjpeg/jdhuff.c:  savable_state state;
3rdparty/libjpeg/jdhuff.c:      HUFF_DECODE(s, br_state, htbl, return FALSE, label1);
3rdparty/libjpeg/jdhuff.c:          HUFF_DECODE(s, br_state, htbl, return FALSE, label2);
3rdparty/libjpeg/jdhuff.c:        HUFF_DECODE(s, br_state, htbl, return FALSE, label3);
3rdparty/libjpeg/jdhuff.c:      /* Arguably the maximum Al value should be less than 13 for 8-bit precision,
3rdparty/libjpeg/jdhuff.c:       * but the spec doesn't say so, and we try to be liberal about what we
3rdparty/libjpeg/jdhuff.c:      /* Make sure requested tables are present, and compute derived tables.
3rdparty/libjpeg/jdhuff.c:       * We may build same derived table more than once, but it's not expensive.
3rdparty/libjpeg/jdhuff.c:        if (cinfo->Ah == 0) {	/* DC refinement needs no table */
3rdparty/libjpeg/jdhuff.c:        /* remember the single active table */
3rdparty/libjpeg/jdhuff.c:    /* Initialize private state variables */
3rdparty/libjpeg/jdhuff.c:      /* Compute derived values for Huffman tables */
3rdparty/libjpeg/jdhuff.c:      /* We may do this more than once for a table, but it's not expensive */
3rdparty/libjpeg/jdhuff.c:      if (cinfo->lim_Se) {	/* AC needs no table when not present */
3rdparty/libjpeg/jdhuff.c:      /* Precalculate which table to use for each block */
3rdparty/libjpeg/jdhuff.c:      /* Decide whether we really care about the coefficient values */
3rdparty/libjpeg/jdhuff.c:  /* Initialize bitread state variables */
3rdparty/libjpeg/jdhuff.c:    /* Create progression status table */
3rdparty/libjpeg/jdhuff.c:    /* Mark derived tables unallocated */
3rdparty/libjpeg/jdhuff.c:    /* Mark tables unallocated */
3rdparty/libjpeg/jdarith.c: * This file contains portable arithmetic entropy decoding routines for JPEG
3rdparty/libjpeg/jdarith.c:  /* Statistics bin for coding with fixed probability 0.5 */
3rdparty/libjpeg/jdarith.c: * (more probable symbol) in the highest bit (mask 0x80), and the
3rdparty/libjpeg/jdarith.c: * index into the probability estimation state machine table
3rdparty/libjpeg/jdarith.c: * are not utilized in this portable implementation.
3rdparty/libjpeg/jdarith.c: * Thus, we also need only one (variable instead of
3rdparty/libjpeg/jdarith.c: * the probability estimation state machine table,
3rdparty/libjpeg/jdarith.c:  /* Fetch values from our compact representation of Table D.3(D.2):
3rdparty/libjpeg/jdarith.c:   * Qe values and probability estimation state machine
3rdparty/libjpeg/jdarith.c:  qe = jpeg_aritab[sv & 0x7F];	/* => Qe_Value */
3rdparty/libjpeg/jdarith.c:    /* Conditional LPS (less probable symbol) exchange */
3rdparty/libjpeg/jdarith.c:    /* Conditional MPS (more probable symbol) exchange */
3rdparty/libjpeg/jdarith.c:  /* Reset arithmetic decoding variables */
3rdparty/libjpeg/jdarith.c:    /* Table F.4: Point to statistics bin S0 for DC coefficient coding */
3rdparty/libjpeg/jdarith.c:        st = entropy->dc_stats[tbl] + 20;	/* Table F.4: X1 = 20 */
3rdparty/libjpeg/jdarith.c:      /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
3rdparty/libjpeg/jdarith.c:  st = entropy->fixed_bin;	/* use fixed probability estimation */
3rdparty/libjpeg/jdarith.c:  /* Establish EOBx (previous stage end-of-block) index */
3rdparty/libjpeg/jdarith.c:    /* Table F.4: Point to statistics bin S0 for DC coefficient coding */
3rdparty/libjpeg/jdarith.c:        st = entropy->dc_stats[tbl] + 20;	/* Table F.4: X1 = 20 */
3rdparty/libjpeg/jdarith.c:      /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
3rdparty/libjpeg/jdarith.c:  /* Initialize arithmetic decoding variables */
3rdparty/libjpeg/jdarith.c:  /* Mark tables unallocated */
3rdparty/libjpeg/jdarith.c:  /* Initialize index for fixed probability estimation */
3rdparty/libjpeg/jdarith.c:    /* Create progression status table */
3rdparty/libjpeg/jdmainct.c: * access to the sample row(s) above and below its current input row group.
3rdparty/libjpeg/jdmainct.c: * above and below the row group(s) being processed.  Note that the context
3rdparty/libjpeg/jdmainct.c: * rows "above" the first passed row group appear at negative row offsets in
3rdparty/libjpeg/jdmainct.c: * and so we have to save the next-to-last group too for its above-context.)
3rdparty/libjpeg/jdmainct.c: * the workspace.  Labeling the physical row groups 0 to M+1, the synthesized
3rdparty/libjpeg/jdmainct.c: * The above pictures describe the normal state of the pointer lists.
3rdparty/libjpeg/jdmainct.c: * be worth providing --- if someone wants a 1/8th-size preview, they probably
3rdparty/libjpeg/jdmainct.c:  JDIMENSION rowgroups_avail;	/* row groups available to postprocessor */
3rdparty/libjpeg/jdmainct.c:/* Create the funny pointer lists discussed in the comments above.
3rdparty/libjpeg/jdmainct.c:     * (see set_wraparound_pointers, below).  Initially we want the "above"
3rdparty/libjpeg/jdmainct.c:    if (cinfo->min_DCT_v_scaled_size < 2) /* unsupported, see comments above */
3rdparty/libjpeg/jfdctint.c: * on each column.  Direct algorithms are also available, but they are
3rdparty/libjpeg/jfdctint.c: * (With a reasonable C compiler, you can just rely on the FIX() macro...)
3rdparty/libjpeg/jfdctint.c:/* Multiply an INT32 variable by an INT32 constant to yield an INT32 result.
3rdparty/libjpeg/jfdctint.c: * For 8-bit samples with the recommended scaling, all the variable
3rdparty/libjpeg/jdinput.c:    /* Mark no quantization table yet saved for component */
3rdparty/libjpeg/jdinput.c:    compptr->quant_table = NULL;
3rdparty/libjpeg/jdinput.c: * Save away a copy of the Q-table referenced by each component present
3rdparty/libjpeg/jdinput.c: * the same Q-table slot number, but change table definitions between scans
3rdparty/libjpeg/jdinput.c: * so that each component uses a different Q-table.  (The IJG encoder is not
3rdparty/libjpeg/jdinput.c: * currently capable of doing this, but other encoders might.)  Since we want
3rdparty/libjpeg/jdinput.c: * to be able to dequantize all the components at the end of the file, this
3rdparty/libjpeg/jdinput.c: * means that we have to save away the table actually used for each component.
3rdparty/libjpeg/jdinput.c: * We do this by copying the table at the start of the first scan containing
3rdparty/libjpeg/jdinput.c: * The JPEG spec prohibits the encoder from changing the contents of a Q-table
3rdparty/libjpeg/jdinput.c: * anyway, this decoder will simply use the Q-table values that were current
3rdparty/libjpeg/jdinput.c: * The decompressor output side looks only at the saved quant tables,
3rdparty/libjpeg/jdinput.c: * not at the current Q-table slots.
3rdparty/libjpeg/jdinput.c:latch_quant_tables (j_decompress_ptr cinfo)
3rdparty/libjpeg/jdinput.c:    /* No work if we already saved Q-table for this component */
3rdparty/libjpeg/jdinput.c:    if (compptr->quant_table != NULL)
3rdparty/libjpeg/jdinput.c:    /* Make sure specified quantization table is present */
3rdparty/libjpeg/jdinput.c:    /* OK, save away the quantization table */
3rdparty/libjpeg/jdinput.c:    compptr->quant_table = qtbl;
3rdparty/libjpeg/jdinput.c:  latch_quant_tables(cinfo);
3rdparty/libjpeg/jdinput.c:      if (inputctl->inheaders) { /* Tables-only datastream, apparently */
3rdparty/libjpeg/jchuff.c: * If the data destination module demands suspension, we want to be able to
3rdparty/libjpeg/jchuff.c: * variables into local working storage, and update them back to the
3rdparty/libjpeg/jchuff.c:/* Derived data constructed for each Huffman table */
3rdparty/libjpeg/jchuff.c: * The savable_state subrecord contains fields that change within an MCU,
3rdparty/libjpeg/jchuff.c:} savable_state;
3rdparty/libjpeg/jchuff.c:  savable_state saved;		/* Bit buffer & DC state at start of MCU */
3rdparty/libjpeg/jchuff.c:  /* Pointers to derived tables (these workspaces have image lifespan) */
3rdparty/libjpeg/jchuff.c:  /* Statistics tables for optimization */
3rdparty/libjpeg/jchuff.c:  int ac_tbl_no;		/* the table number of the single component */
3rdparty/libjpeg/jchuff.c:  savable_state cur;		/* Current bit buffer & DC state */
3rdparty/libjpeg/jchuff.c: * Compute the derived values for a Huffman table.
3rdparty/libjpeg/jchuff.c: * This routine also performs some validation checks on the table.
3rdparty/libjpeg/jchuff.c:  /* Find the input Huffman table */
3rdparty/libjpeg/jchuff.c:  /* Figure C.1: make table of Huffman code length for each symbol */
3rdparty/libjpeg/jchuff.c:    if (i < 0 || p + i > 256)	/* protect against table overrun */
3rdparty/libjpeg/jchuff.c:  /* Figure C.3: generate encoding tables */
3rdparty/libjpeg/jchuff.c:  /* if size is 0, caller used an invalid Huffman table entry */
3rdparty/libjpeg/jchuff.c:  state->cur.put_buffer = put_buffer; /* update state variables */
3rdparty/libjpeg/jchuff.c:  /* if size is 0, caller used an invalid Huffman table entry */
3rdparty/libjpeg/jchuff.c:  entropy->saved.put_buffer = put_buffer; /* update variables */
3rdparty/libjpeg/jchuff.c:      temp = -temp;		/* temp is abs value of input */
3rdparty/libjpeg/jchuff.c:      /* For a negative input, want temp2 = bitwise complement of abs(input) */
3rdparty/libjpeg/jchuff.c:     * is an integer division with rounding towards 0.  To do this portably
3rdparty/libjpeg/jchuff.c:     * in C, we shift after obtaining the absolute value; so the code is
3rdparty/libjpeg/jchuff.c:     * interwoven with finding the abs value (temp) and output bits (temp2).
3rdparty/libjpeg/jchuff.c:      temp = -temp;		/* temp is abs value of input */
3rdparty/libjpeg/jchuff.c:      /* For a negative coef, want temp2 = bitwise complement of abs(coef) */
3rdparty/libjpeg/jchuff.c:  int absvalues[DCTSIZE2];
3rdparty/libjpeg/jchuff.c:   * coefficients' absolute values and the EOB position.
3rdparty/libjpeg/jchuff.c:     * is an integer division with rounding towards 0.  To do this portably
3rdparty/libjpeg/jchuff.c:     * in C, we shift after obtaining the absolute value.
3rdparty/libjpeg/jchuff.c:      temp = -temp;		/* temp is abs value of input */
3rdparty/libjpeg/jchuff.c:    absvalues[k] = temp;	/* save abs value for main pass */
3rdparty/libjpeg/jchuff.c:    if ((temp = absvalues[k]) == 0) {
3rdparty/libjpeg/jchuff.c:      /* The correction bit is the next bit of the absolute value. */
3rdparty/libjpeg/jchuff.c:    temp = -temp;		/* temp is abs value of input */
3rdparty/libjpeg/jchuff.c:    /* For a negative input, want temp2 = bitwise complement of abs(input) */
3rdparty/libjpeg/jchuff.c:        temp = -temp;		/* temp is abs value of input */
3rdparty/libjpeg/jchuff.c: * that is to be Huffman-coded. (This process MUST agree with the code above.)
3rdparty/libjpeg/jchuff.c: * Generate the best Huffman code table for the given counts, fill htbl.
3rdparty/libjpeg/jchuff.c: * If some symbols have a very small but nonzero probability, the Huffman tree
3rdparty/libjpeg/jchuff.c:jpeg_gen_optimal_table (j_compress_ptr cinfo, JHUFF_TBL * htbl, long freq[])
3rdparty/libjpeg/jchuff.c:   * Here is what the JPEG spec says about how this next bit works:
3rdparty/libjpeg/jchuff.c:   * changes made above, but the JPEG spec seems to think this works.
3rdparty/libjpeg/jchuff.c:  /* Set sent_table FALSE so updated table will be written to JPEG file. */
3rdparty/libjpeg/jchuff.c:  htbl->sent_table = FALSE;
3rdparty/libjpeg/jchuff.c: * Finish up a statistics-gathering pass and create the new Huffman tables.
3rdparty/libjpeg/jchuff.c:  /* It's important not to apply jpeg_gen_optimal_table more than once
3rdparty/libjpeg/jchuff.c:   * per table, because it clobbers the input frequency counts!
3rdparty/libjpeg/jchuff.c:    /* Flush out buffered data (all we care about is counting the EOB symbol) */
3rdparty/libjpeg/jchuff.c:    /* DC needs no table for refinement scan */
3rdparty/libjpeg/jchuff.c:          *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
3rdparty/libjpeg/jchuff.c:        jpeg_gen_optimal_table(cinfo, *htblptr, entropy->dc_count_ptrs[tbl]);
3rdparty/libjpeg/jchuff.c:    /* AC needs no table when not present */
3rdparty/libjpeg/jchuff.c:          *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
3rdparty/libjpeg/jchuff.c:        jpeg_gen_optimal_table(cinfo, *htblptr, entropy->ac_count_ptrs[tbl]);
3rdparty/libjpeg/jchuff.c: * just count the Huffman symbols used and generate Huffman code tables.
3rdparty/libjpeg/jchuff.c:    /* DC needs no table for refinement scan */
3rdparty/libjpeg/jchuff.c:        /* Check for invalid table index */
3rdparty/libjpeg/jchuff.c:        /* Allocate and zero the statistics tables */
3rdparty/libjpeg/jchuff.c:        /* Note that jpeg_gen_optimal_table expects 257 entries in each table! */
3rdparty/libjpeg/jchuff.c:        /* Compute derived values for Huffman tables */
3rdparty/libjpeg/jchuff.c:        /* We may do this more than once for a table, but it's not expensive */
3rdparty/libjpeg/jchuff.c:    /* AC needs no table when not present */
3rdparty/libjpeg/jchuff.c:  /* Mark tables unallocated */
3rdparty/libjpeg/jdmaster.c: * CRUCIAL: this must match the actual capabilities of jdmerge.c!
3rdparty/libjpeg/jdmaster.c:  /* Probably this should be in the color conversion module... */
3rdparty/libjpeg/jdmaster.c: * a (subscript-check-less) C table lookup
3rdparty/libjpeg/jdmaster.c: * These processes all use a common table prepared by the routine below.
3rdparty/libjpeg/jdmaster.c: * of x is within MAXJSAMPLE+1 of the legal range, so a table running from
3rdparty/libjpeg/jdmaster.c: * So the post-IDCT limiting table ends up looking like this:
3rdparty/libjpeg/jdmaster.c: * Negative inputs select values from the upper half of the table after
3rdparty/libjpeg/jdmaster.c: * We can save some space by overlapping the start of the post-IDCT table
3rdparty/libjpeg/jdmaster.c: * with the simpler range limiting table.  The post-IDCT table begins at
3rdparty/libjpeg/jdmaster.c: * Note that the table is allocated in near data space on PCs; it's small
3rdparty/libjpeg/jdmaster.c:prepare_range_limit_table (j_decompress_ptr cinfo)
3rdparty/libjpeg/jdmaster.c:/* Allocate and fill in the sample_range_limit table */
3rdparty/libjpeg/jdmaster.c:  JSAMPLE * table;
3rdparty/libjpeg/jdmaster.c:  table = (JSAMPLE *)
3rdparty/libjpeg/jdmaster.c:  table += (MAXJSAMPLE+1);	/* allow negative subscripts of simple table */
3rdparty/libjpeg/jdmaster.c:  cinfo->sample_range_limit = table;
3rdparty/libjpeg/jdmaster.c:  /* First segment of "simple" table: limit[x] = 0 for x < 0 */
3rdparty/libjpeg/jdmaster.c:  MEMZERO(table - (MAXJSAMPLE+1), (MAXJSAMPLE+1) * SIZEOF(JSAMPLE));
3rdparty/libjpeg/jdmaster.c:  /* Main part of "simple" table: limit[x] = x */
3rdparty/libjpeg/jdmaster.c:    table[i] = (JSAMPLE) i;
3rdparty/libjpeg/jdmaster.c:  table += CENTERJSAMPLE;	/* Point to where post-IDCT table starts */
3rdparty/libjpeg/jdmaster.c:  /* End of simple table, rest of first half of post-IDCT table */
3rdparty/libjpeg/jdmaster.c:    table[i] = MAXJSAMPLE;
3rdparty/libjpeg/jdmaster.c:  /* Second half of post-IDCT table */
3rdparty/libjpeg/jdmaster.c:  MEMZERO(table + (2 * (MAXJSAMPLE+1)),
3rdparty/libjpeg/jdmaster.c:  MEMCOPY(table + (4 * (MAXJSAMPLE+1) - CENTERJSAMPLE),
3rdparty/libjpeg/jdmaster.c:  prepare_range_limit_table(cinfo);
3rdparty/libjpeg/jdmaster.c:  /* Width of an output scanline must be representable as JDIMENSION. */
3rdparty/libjpeg/jdmaster.c:    cinfo->enable_1pass_quant = FALSE;
3rdparty/libjpeg/jdmaster.c:    cinfo->enable_external_quant = FALSE;
3rdparty/libjpeg/jdmaster.c:    cinfo->enable_2pass_quant = FALSE;
3rdparty/libjpeg/jdmaster.c:      cinfo->enable_1pass_quant = TRUE;
3rdparty/libjpeg/jdmaster.c:      cinfo->enable_external_quant = FALSE;
3rdparty/libjpeg/jdmaster.c:      cinfo->enable_2pass_quant = FALSE;
3rdparty/libjpeg/jdmaster.c:      cinfo->enable_external_quant = TRUE;
3rdparty/libjpeg/jdmaster.c:      cinfo->enable_2pass_quant = TRUE;
3rdparty/libjpeg/jdmaster.c:      cinfo->enable_1pass_quant = TRUE;
3rdparty/libjpeg/jdmaster.c:    if (cinfo->enable_1pass_quant) {
3rdparty/libjpeg/jdmaster.c:    if (cinfo->enable_2pass_quant || cinfo->enable_external_quant) {
3rdparty/libjpeg/jdmaster.c:    jinit_d_post_controller(cinfo, cinfo->enable_2pass_quant);
3rdparty/libjpeg/jdmaster.c:    cinfo->progress->total_passes = (cinfo->enable_2pass_quant ? 3 : 2);
3rdparty/libjpeg/jdmaster.c:      if (cinfo->two_pass_quantize && cinfo->enable_2pass_quant) {
3rdparty/libjpeg/jdmaster.c:      } else if (cinfo->enable_1pass_quant) {
3rdparty/libjpeg/jdmaster.c:      cinfo->progress->total_passes += (cinfo->enable_2pass_quant ? 2 : 1);
3rdparty/libjpeg/jdmaster.c:  if (cinfo->quantize_colors && cinfo->enable_external_quant &&
3rdparty/libjpeg/jcinit.c: * For a transcoding-only application, we want to be able to use jcmaster.c
3rdparty/libjpeg/jcarith.c: * This file contains portable arithmetic entropy encoding routines for JPEG
3rdparty/libjpeg/jcarith.c:  /* Statistics bin for coding with fixed probability 0.5 */
3rdparty/libjpeg/jcarith.c: * (more probable symbol) in the highest bit (mask 0x80), and the
3rdparty/libjpeg/jcarith.c: * index into the probability estimation state machine table
3rdparty/libjpeg/jcarith.c: * This is not worth worrying about IMHO. However, since the
3rdparty/libjpeg/jcarith.c: * spec defines the default values to be used if the tables
3rdparty/libjpeg/jcarith.c: * are omitted (unlike Huffman tables, which are required
3rdparty/libjpeg/jcarith.c: * and then it would be disadvantageous to use custom tables if
3rdparty/libjpeg/jcarith.c: * On the other hand, I'd consider it as a reasonable result
3rdparty/libjpeg/jcarith.c: * statistical model is already rather stable.
3rdparty/libjpeg/jcarith.c: * are not utilized in this portable implementation.
3rdparty/libjpeg/jcarith.c: * the probability estimation state machine table,
3rdparty/libjpeg/jcarith.c:  /* Fetch values from our compact representation of Table D.3(D.2):
3rdparty/libjpeg/jcarith.c:   * Qe values and probability estimation state machine
3rdparty/libjpeg/jcarith.c:  qe = jpeg_aritab[sv & 0x7F];	/* => Qe_Value */
3rdparty/libjpeg/jcarith.c:    /* Encode the less probable symbol */
3rdparty/libjpeg/jcarith.c:      /* If the interval size (qe) for the less probable symbol (LPS)
3rdparty/libjpeg/jcarith.c:    /* Encode the more probable symbol */
3rdparty/libjpeg/jcarith.c:      /* If the interval size (qe) for the less probable symbol (LPS)
3rdparty/libjpeg/jcarith.c:    /* DC needs no table for refinement scan */
3rdparty/libjpeg/jcarith.c:    /* AC needs no table when not present */
3rdparty/libjpeg/jcarith.c:  /* Reset arithmetic encoding variables */
3rdparty/libjpeg/jcarith.c:    /* Table F.4: Point to statistics bin S0 for DC coefficient coding */
3rdparty/libjpeg/jcarith.c:        arith_encode(cinfo, st + 1, 0);	/* Table F.4: SS = S0 + 1 */
3rdparty/libjpeg/jcarith.c:        st += 2;			/* Table F.4: SP = S0 + 2 */
3rdparty/libjpeg/jcarith.c:        arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
3rdparty/libjpeg/jcarith.c:        st += 3;			/* Table F.4: SN = S0 + 3 */
3rdparty/libjpeg/jcarith.c:        st = entropy->dc_stats[tbl] + 20; /* Table F.4: X1 = 20 */
3rdparty/libjpeg/jcarith.c:      /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
3rdparty/libjpeg/jcarith.c:  /* Establish EOB (end-of-block) index */
3rdparty/libjpeg/jcarith.c:     * is an integer division with rounding towards 0.  To do this portably
3rdparty/libjpeg/jcarith.c:     * in C, we shift after obtaining the absolute value.
3rdparty/libjpeg/jcarith.c:  st = entropy->fixed_bin;	/* use fixed probability estimation */
3rdparty/libjpeg/jcarith.c:  /* Establish EOB (end-of-block) index */
3rdparty/libjpeg/jcarith.c:     * is an integer division with rounding towards 0.  To do this portably
3rdparty/libjpeg/jcarith.c:     * in C, we shift after obtaining the absolute value.
3rdparty/libjpeg/jcarith.c:  /* Establish EOBx (previous stage end-of-block) index */
3rdparty/libjpeg/jcarith.c:    /* Table F.4: Point to statistics bin S0 for DC coefficient coding */
3rdparty/libjpeg/jcarith.c:        arith_encode(cinfo, st + 1, 0);	/* Table F.4: SS = S0 + 1 */
3rdparty/libjpeg/jcarith.c:        st += 2;			/* Table F.4: SP = S0 + 2 */
3rdparty/libjpeg/jcarith.c:        arith_encode(cinfo, st + 1, 1);	/* Table F.4: SS = S0 + 1 */
3rdparty/libjpeg/jcarith.c:        st += 3;			/* Table F.4: SN = S0 + 3 */
3rdparty/libjpeg/jcarith.c:        st = entropy->dc_stats[tbl] + 20; /* Table F.4: X1 = 20 */
3rdparty/libjpeg/jcarith.c:      /* Section F.1.4.4.1.2: Establish dc_context conditioning category */
3rdparty/libjpeg/jcarith.c:    /* Establish EOB (end-of-block) index */
3rdparty/libjpeg/jcarith.c:    /* DC needs no table for refinement scan */
3rdparty/libjpeg/jcarith.c:    /* AC needs no table when not present */
3rdparty/libjpeg/jcarith.c:  /* Initialize arithmetic encoding variables */
3rdparty/libjpeg/jcarith.c:  /* Mark tables unallocated */
3rdparty/libjpeg/jcarith.c:  /* Initialize index for fixed probability estimation */
3rdparty/libjpeg/jcdctmgr.c:  /* The actual post-DCT divisors --- not identical to the quant table
3rdparty/libjpeg/jcdctmgr.c:   * Each table is given in normal array order.
3rdparty/libjpeg/jcdctmgr.c:  /* Same as above for the floating-point case. */
3rdparty/libjpeg/jcdctmgr.c:/* The current scaled-DCT routines require ISLOW-style divisor tables,
3rdparty/libjpeg/jcdctmgr.c:         * quotients, we have to force the dividend positive for portability.
3rdparty/libjpeg/jcdctmgr.c:         * quotients, we have to force the dividend positive for portability.
3rdparty/libjpeg/jcdctmgr.c: * Verify that all referenced Q-tables are present, and set up
3rdparty/libjpeg/jcdctmgr.c: * the divisor table for each one.
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:      method = JDCT_ISLOW;	/* jfdctint uses islow-style table */
3rdparty/libjpeg/jcdctmgr.c:    /* Make sure specified quantization table is present */
3rdparty/libjpeg/jcdctmgr.c:    /* Compute divisors for this quant table */
3rdparty/libjpeg/jcdctmgr.c:    /* We may do this more than once for same table, but it's not a big deal */
3rdparty/libjpeg/jcdctmgr.c:  /* Mark divisor tables unallocated */
3rdparty/libjpeg/jctrans.c:  /* Mark all tables to be written */
3rdparty/libjpeg/jctrans.c:  jpeg_suppress_tables(cinfo, FALSE);
3rdparty/libjpeg/jctrans.c:   * Note: Entropy table assignment in jpeg_set_colorspace depends
3rdparty/libjpeg/jctrans.c:  /* Copy the source's quantization tables. */
3rdparty/libjpeg/jctrans.c:        *qtblptr = jpeg_alloc_quant_table((j_common_ptr) dstinfo);
3rdparty/libjpeg/jctrans.c:      (*qtblptr)->sent_table = FALSE;
3rdparty/libjpeg/jctrans.c:    /* Make sure saved quantization table for component matches the qtable
3rdparty/libjpeg/jctrans.c:     * slot.  If not, the input file re-used this qtable slot.
3rdparty/libjpeg/jctrans.c:    c_quant = incomp->quant_table;
3rdparty/libjpeg/jctrans.c:    /* Note: we do not copy the source's entropy table assignments;
3rdparty/libjpeg/jctrans.c:     * instead we rely on jpeg_set_colorspace to have made a suitable choice.
3rdparty/libjpeg/jctrans.c:  /* Also copy JFIF version and resolution information, if available.
3rdparty/libjpeg/jctrans.c:   * always appropriate to copy it if available.  In particular,
3rdparty/libjpeg/jctrans.c:   * We will *not*, however, copy version info from mislabeled "2.01" files.
3rdparty/libjpeg/jquant2.c: * usage count of each possible color.  To keep the histogram to a reasonable
3rdparty/libjpeg/jquant2.c: * considerable care.
3rdparty/libjpeg/jquant2.c: * and it also interfered with desired capabilities such as quantizing to an
3rdparty/libjpeg/jquant2.c: * externally-supplied colormap.  We have therefore abandoned that approach.
3rdparty/libjpeg/jquant2.c: * probably need to change these scale factors.
3rdparty/libjpeg/jquant2.c:/* Relabel R/G/B as components 0/1/2, respecting the RGB ordering defined
3rdparty/libjpeg/jquant2.c: * you'll probably want to tweak the histogram sizes too.
3rdparty/libjpeg/jquant2.c: * (preferably unsigned long) for each cell.  In practice this is overkill;
3rdparty/libjpeg/jquant2.c: * in that capacity, each cell must be able to store zero to the number of
3rdparty/libjpeg/jquant2.c: * need only a few extra variables to hold the errors immediately around the
3rdparty/libjpeg/jquant2.c: * current column.  (If we are lucky, those variables are in registers, but
3rdparty/libjpeg/jquant2.c: * even if not, they're probably cheaper to access than array elements are.)
3rdparty/libjpeg/jquant2.c:  /* Variables for accumulating image statistics */
3rdparty/libjpeg/jquant2.c:  /* Variables for Floyd-Steinberg dithering */
3rdparty/libjpeg/jquant2.c:  int * error_limiter;		/* table for clamping the applied error */
3rdparty/libjpeg/jquant2.c: * is actually output (in fact the buffer controller is probably passing a
3rdparty/libjpeg/jquant2.c:/* Find the splittable box with the largest color population */
3rdparty/libjpeg/jquant2.c:/* Returns NULL if no splittable boxes remain */
3rdparty/libjpeg/jquant2.c:/* Find the splittable box with the largest (scaled) volume */
3rdparty/libjpeg/jquant2.c:/* Returns NULL if no splittable boxes remain */
3rdparty/libjpeg/jquant2.c:   * a box is splittable iff norm > 0.
3rdparty/libjpeg/jquant2.c:    if (b1 == NULL)		/* no splittable boxes left! */
3rdparty/libjpeg/jquant2.c:     * See notes in update_box about scaling distances.
3rdparty/libjpeg/jquant2.c: * size seems to be about 1/512th of the histogram (1/8th in each direction).
3rdparty/libjpeg/jquant2.c: * useful for programs intended to be portable to DOS machines.  On machines
3rdparty/libjpeg/jquant2.c: * inner-loop variables.
3rdparty/libjpeg/jquant2.c:   * histogram cell, which are the upper bounds of the volume we care about.
3rdparty/libjpeg/jquant2.c:   * histogram cell, which are the lower bounds of the volume we care about.
3rdparty/libjpeg/jquant2.c: * Initialize the error-limiting transfer function (lookup table).
3rdparty/libjpeg/jquant2.c: * A simple clamping of the error values to about +- MAXJSAMPLE/8 works pretty
3rdparty/libjpeg/jquant2.c:/* Allocate and fill in the error_limiter table */
3rdparty/libjpeg/jquant2.c:  int * table;
3rdparty/libjpeg/jquant2.c:  table = (int *) (*cinfo->mem->alloc_small)
3rdparty/libjpeg/jquant2.c:  table += MAXJSAMPLE;		/* so can index -MAXJSAMPLE .. +MAXJSAMPLE */
3rdparty/libjpeg/jquant2.c:  cquantize->error_limiter = table;
3rdparty/libjpeg/jquant2.c:    table[in] = out; table[-in] = -out;
3rdparty/libjpeg/jquant2.c:    table[in] = out; table[-in] = -out;
3rdparty/libjpeg/jquant2.c:    table[in] = out; table[-in] = -out;
3rdparty/libjpeg/jquant2.c:  /* Force next pass to zero the color index table */
3rdparty/libjpeg/jquant2.c:    /* Make sure color count is acceptable */
3rdparty/libjpeg/jquant2.c:      /* Make the error-limit table if we didn't already. */
3rdparty/libjpeg/jquant2.c:  if (cinfo->enable_2pass_quant) {
3rdparty/libjpeg/jquant2.c:    /* Make sure color count is acceptable */
3rdparty/libjpeg/jquant2.c:    /* Might as well create the error-limiting table too. */
3rdparty/libjpeg/jdcolor.c:  int * Cr_r_tab;		/* => table for Cr to R conversion */
3rdparty/libjpeg/jdcolor.c:  int * Cb_b_tab;		/* => table for Cb to B conversion */
3rdparty/libjpeg/jdcolor.c:  INT32 * Cr_g_tab;		/* => table for Cr to G conversion */
3rdparty/libjpeg/jdcolor.c:  INT32 * Cb_g_tab;		/* => table for Cb to G conversion */
3rdparty/libjpeg/jdcolor.c:  INT32 * rgb_y_tab;		/* => table for RGB to Y conversion */
3rdparty/libjpeg/jdcolor.c: * as integers scaled up by 2^16 (about 4 digits precision); we have to divide
3rdparty/libjpeg/jdcolor.c: * For 8-bit JSAMPLEs this is very reasonable (only 256 entries per table);
3rdparty/libjpeg/jdcolor.c: * for 12-bit samples it is still acceptable.  It's not very reasonable for
3rdparty/libjpeg/jdcolor.c:/* We allocate one big table for RGB->Y conversion and divide it up into
3rdparty/libjpeg/jdcolor.c: * use a single table base address, which can be held in a register in the
3rdparty/libjpeg/jdcolor.c: * Initialize tables for YCC->RGB colorspace conversion.
3rdparty/libjpeg/jdcolor.c:build_ycc_rgb_table (j_decompress_ptr cinfo)
3rdparty/libjpeg/jdcolor.c:  cconvert->Cr_r_tab = (int *)
3rdparty/libjpeg/jdcolor.c:  cconvert->Cb_b_tab = (int *)
3rdparty/libjpeg/jdcolor.c:  cconvert->Cr_g_tab = (INT32 *)
3rdparty/libjpeg/jdcolor.c:  cconvert->Cb_g_tab = (INT32 *)
3rdparty/libjpeg/jdcolor.c:    cconvert->Cr_r_tab[i] = (int)
3rdparty/libjpeg/jdcolor.c:    cconvert->Cb_b_tab[i] = (int)
3rdparty/libjpeg/jdcolor.c:    cconvert->Cr_g_tab[i] = (- FIX(0.71414)) * x;
3rdparty/libjpeg/jdcolor.c:    cconvert->Cb_g_tab[i] = (- FIX(0.34414)) * x + ONE_HALF;
3rdparty/libjpeg/jdcolor.c:  register int * Crrtab = cconvert->Cr_r_tab;
3rdparty/libjpeg/jdcolor.c:  register int * Cbbtab = cconvert->Cb_b_tab;
3rdparty/libjpeg/jdcolor.c:  register INT32 * Crgtab = cconvert->Cr_g_tab;
3rdparty/libjpeg/jdcolor.c:  register INT32 * Cbgtab = cconvert->Cb_g_tab;
3rdparty/libjpeg/jdcolor.c:      outptr[RGB_RED] =   range_limit[y + Crrtab[cr]];
3rdparty/libjpeg/jdcolor.c:                              ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
3rdparty/libjpeg/jdcolor.c:      outptr[RGB_BLUE] =  range_limit[y + Cbbtab[cb]];
3rdparty/libjpeg/jdcolor.c:build_rgb_y_table (j_decompress_ptr cinfo)
3rdparty/libjpeg/jdcolor.c:  INT32 * rgb_y_tab;
3rdparty/libjpeg/jdcolor.c:  /* Allocate and fill in the conversion tables. */
3rdparty/libjpeg/jdcolor.c:  cconvert->rgb_y_tab = rgb_y_tab = (INT32 *)
3rdparty/libjpeg/jdcolor.c:    rgb_y_tab[i+R_Y_OFF] = FIX(0.29900) * i;
3rdparty/libjpeg/jdcolor.c:    rgb_y_tab[i+G_Y_OFF] = FIX(0.58700) * i;
3rdparty/libjpeg/jdcolor.c:    rgb_y_tab[i+B_Y_OFF] = FIX(0.11400) * i + ONE_HALF;
3rdparty/libjpeg/jdcolor.c:  register INT32 * ctab = cconvert->rgb_y_tab;
3rdparty/libjpeg/jdcolor.c:                ((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
3rdparty/libjpeg/jdcolor.c:  register INT32 * ctab = cconvert->rgb_y_tab;
3rdparty/libjpeg/jdcolor.c:                ((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
3rdparty/libjpeg/jdcolor.c: * conversion as above, while passing K (black) unchanged.
3rdparty/libjpeg/jdcolor.c: * We assume build_ycc_rgb_table has been called.
3rdparty/libjpeg/jdcolor.c:  register int * Crrtab = cconvert->Cr_r_tab;
3rdparty/libjpeg/jdcolor.c:  register int * Cbbtab = cconvert->Cb_b_tab;
3rdparty/libjpeg/jdcolor.c:  register INT32 * Crgtab = cconvert->Cr_g_tab;
3rdparty/libjpeg/jdcolor.c:  register INT32 * Cbgtab = cconvert->Cb_g_tab;
3rdparty/libjpeg/jdcolor.c:      outptr[0] = range_limit[MAXJSAMPLE - (y + Crrtab[cr])];	/* red */
3rdparty/libjpeg/jdcolor.c:                              ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
3rdparty/libjpeg/jdcolor.c:      outptr[2] = range_limit[MAXJSAMPLE - (y + Cbbtab[cb])];	/* blue */
3rdparty/libjpeg/jdcolor.c:      build_rgb_y_table(cinfo);
3rdparty/libjpeg/jdcolor.c:      build_ycc_rgb_table(cinfo);
3rdparty/libjpeg/jdcolor.c:      build_ycc_rgb_table(cinfo);
3rdparty/libjpeg/jcprepct.c: * arrays are made five row groups high, with the extra pointers above and
3rdparty/libjpeg/jcprepct.c:  /* Preset additional state variables for context mode.
3rdparty/libjpeg/jcprepct.c:  /* Grab enough space for fake row pointers for all the components;
3rdparty/libjpeg/jcprepct.c:    /* Fill in the above and below wraparound pointers */
3rdparty/libjpeg/jfdctfst.c: * on each column.  Direct algorithms are also available, but they are
3rdparty/libjpeg/jfdctfst.c: * table entries.  The AA&N method leaves only 5 multiplies and 29 adds
3rdparty/libjpeg/jfdctfst.c: * quantization values.  The smaller the quantization table entry, the less
3rdparty/libjpeg/jfdctfst.c: * (With a reasonable C compiler, you can just rely on the FIX() macro...)
3rdparty/libjpeg/jfdctfst.c:/* Multiply a DCTELEM variable by an INT32 constant, and immediately
3rdparty/libjpeg/jcmaster.c:  /* Width of an input scanline must be representable as JDIMENSION. */
3rdparty/libjpeg/jcmaster.c:    /* Special case: Huffman DC refinement scans need no Huffman table
3rdparty/libjpeg/jcmaster.c:    /* assume default tables no good for progressive or downscale mode */
3rdparty/libjpeg/jerror.c: * These are suitable for Unix-like systems and others where writing to
3rdparty/libjpeg/jerror.c: * Create the message string table.
3rdparty/libjpeg/jerror.c: * jerror.h with a suitable definition for macro JMESSAGE.
3rdparty/libjpeg/jerror.c: * The message table is made an external symbol just in case any applications
3rdparty/libjpeg/jerror.c:#define jpeg_std_message_table	jMsgTable
3rdparty/libjpeg/jerror.c:const char * const jpeg_std_message_table[] = {
3rdparty/libjpeg/jerror.c: * You should make sure that the JPEG object is cleaned up (with jpeg_abort
3rdparty/libjpeg/jerror.c: *   -1: recoverable corrupt-data warning, may want to abort.
3rdparty/libjpeg/jerror.c: * An application might override this method if it wanted to abort on warnings
3rdparty/libjpeg/jerror.c: * or change the policy about which messages to display.
3rdparty/libjpeg/jerror.c:  /* Look up message string in proper table */
3rdparty/libjpeg/jerror.c:    msgtext = err->jpeg_message_table[msg_code];
3rdparty/libjpeg/jerror.c:  } else if (err->addon_message_table != NULL &&
3rdparty/libjpeg/jerror.c:    msgtext = err->addon_message_table[msg_code - err->first_addon_message];
3rdparty/libjpeg/jerror.c:    msgtext = err->jpeg_message_table[0];
3rdparty/libjpeg/jerror.c: * Reset error state variables at start of a new image.
3rdparty/libjpeg/jerror.c:  /* Initialize message table pointers */
3rdparty/libjpeg/jerror.c:  err->jpeg_message_table = jpeg_std_message_table;
3rdparty/libjpeg/jerror.c:  err->addon_message_table = NULL;
3rdparty/libjpeg/jdmarker.c: * suspension: if not all of the data for a marker is available,
3rdparty/libjpeg/jdmarker.c:  /* Application-overridable marker processing methods */
3rdparty/libjpeg/jdmarker.c: * suitable place to restart if a suspension occurs.
3rdparty/libjpeg/jdmarker.c:/* Internal macro for INPUT_BYTE and INPUT_2BYTES: make a byte available.
3rdparty/libjpeg/jdmarker.c:/* Read a byte into variable V.
3rdparty/libjpeg/jdmarker.c:/* As above, but read two bytes interpreted as an unsigned 16-bit integer.
3rdparty/libjpeg/jdmarker.c:    if (index >= NUM_ARITH_TBLS) { /* define AC table */
3rdparty/libjpeg/jdmarker.c:    } else {			/* define DC table */
3rdparty/libjpeg/jdmarker.c:#define get_dac(cinfo)  skip_variable(cinfo)
3rdparty/libjpeg/jdmarker.c:     * off the end of our table space.  jdhuff.c will check more carefully.
3rdparty/libjpeg/jdmarker.c:    if (index & 0x10) {		/* AC table definition */
3rdparty/libjpeg/jdmarker.c:    } else {			/* DC table definition */
3rdparty/libjpeg/jdmarker.c:      *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
3rdparty/libjpeg/jdmarker.c:      cinfo->quant_tbl_ptrs[n] = jpeg_alloc_quant_table((j_common_ptr) cinfo);
3rdparty/libjpeg/jdmarker.c:        /* Initialize full table for safety. */
3rdparty/libjpeg/jdmarker.c:        /* Initialize full table for safety. */
3rdparty/libjpeg/jdmarker.c:      /* We convert the zigzag-order table to natural array order. */
3rdparty/libjpeg/jdmarker.c:#define APPN_DATA_LEN	14	/* Must be the largest of the above!! */
3rdparty/libjpeg/jdmarker.c:    /* Copy bytes with reasonable rapidity */
3rdparty/libjpeg/jdmarker.c:skip_variable (j_decompress_ptr cinfo)
3rdparty/libjpeg/jdmarker.c:/* Skip over an unknown or uninteresting variable-length marker */
3rdparty/libjpeg/jdmarker.c:      if (! skip_variable(cinfo))
3rdparty/libjpeg/jdmarker.c:    /* Successfully processed marker, so reset state variable */
3rdparty/libjpeg/jdmarker.c: * it holds a marker which the decoder will be unable to read past.
3rdparty/libjpeg/jdmarker.c: * may be able to back up, or may have additional knowledge about the data
3rdparty/libjpeg/jdmarker.c: * presumably supply their own resync method.
3rdparty/libjpeg/jdmarker.c: * that we have missed the desired restart marker, probably because it got
3rdparty/libjpeg/jdmarker.c: * (too much risk that the marker is erroneous; with luck we will be able to
3rdparty/libjpeg/jdmarker.c:  marker->process_COM = skip_variable;
3rdparty/libjpeg/jdmarker.c:    marker->process_APPn[i] = skip_variable;
3rdparty/libjpeg/jdmarker.c:    processor = skip_variable;
3rdparty/libjpeg/jcapimin.c:  /* Must do it here for emit_dqt in case jpeg_write_tables is used */
3rdparty/libjpeg/jcapimin.c:jpeg_abort_compress (j_compress_ptr cinfo)
3rdparty/libjpeg/jcapimin.c:  jpeg_abort((j_common_ptr) cinfo); /* use common routine */
3rdparty/libjpeg/jcapimin.c: * Forcibly suppress or un-suppress all quantization and Huffman tables.
3rdparty/libjpeg/jcapimin.c: * Marks all currently defined tables as already written (if suppress)
3rdparty/libjpeg/jcapimin.c: * abbreviated JPEG datastreams.  It logically belongs in jcparam.c, but
3rdparty/libjpeg/jcapimin.c:jpeg_suppress_tables (j_compress_ptr cinfo, boolean suppress)
3rdparty/libjpeg/jcapimin.c:      qtbl->sent_table = suppress;
3rdparty/libjpeg/jcapimin.c:      htbl->sent_table = suppress;
3rdparty/libjpeg/jcapimin.c:      htbl->sent_table = suppress;
3rdparty/libjpeg/jcapimin.c:  /* We can use jpeg_abort to release memory and reset global_state */
3rdparty/libjpeg/jcapimin.c:  jpeg_abort((j_common_ptr) cinfo);
3rdparty/libjpeg/jcapimin.c: * Alternate compression function: just write an abbreviated table file.
3rdparty/libjpeg/jcapimin.c: * To produce a pair of files containing abbreviated tables and abbreviated
3rdparty/libjpeg/jcapimin.c: *		set destination to table file
3rdparty/libjpeg/jcapimin.c: *		jpeg_write_tables(cinfo);
3rdparty/libjpeg/jcapimin.c: * jpeg_write_tables has the side effect of marking all tables written
3rdparty/libjpeg/jcapimin.c: * (same as jpeg_suppress_tables(..., TRUE)).  Thus a subsequent start_compress
3rdparty/libjpeg/jcapimin.c: * will not re-emit the tables unless it is passed write_all_tables=TRUE.
3rdparty/libjpeg/jcapimin.c:jpeg_write_tables (j_compress_ptr cinfo)
3rdparty/libjpeg/jcapimin.c:  /* Write them tables! */
3rdparty/libjpeg/jcapimin.c:  (*cinfo->marker->write_tables_only) (cinfo);
3rdparty/libjpeg/jcapimin.c:   * In library releases up through v6a, we called jpeg_abort() here to free
3rdparty/libjpeg/jcapimin.c:   * away during write_tables.  So now we do nothing.  This will cause a
3rdparty/libjpeg/jcapimin.c:   * memory leak if an app calls write_tables repeatedly without doing a full
3rdparty/libjpeg/jcapimin.c:   * An app that prefers the old behavior can call jpeg_abort for itself after
3rdparty/libjpeg/jcapimin.c:   * each call to jpeg_write_tables().
3rdparty/libjpeg/jdcoefct.c:/* Block smoothing is only applicable for progressive JPEG, so: */
3rdparty/libjpeg/jdcoefct.c:  /* These variables keep track of the current location of the input side. */
3rdparty/libjpeg/jdcoefct.c: * Determine whether block smoothing is applicable and safe.
3rdparty/libjpeg/jdcoefct.c:  JQUANT_TBL * qtable;
3rdparty/libjpeg/jdcoefct.c:    if ((qtable = compptr->quant_table) == NULL)
3rdparty/libjpeg/jdcoefct.c:    if (qtable->quantval[0] == 0 ||
3rdparty/libjpeg/jdcoefct.c:        qtable->quantval[Q01_POS] == 0 ||
3rdparty/libjpeg/jdcoefct.c:        qtable->quantval[Q10_POS] == 0 ||
3rdparty/libjpeg/jdcoefct.c:        qtable->quantval[Q20_POS] == 0 ||
3rdparty/libjpeg/jdcoefct.c:        qtable->quantval[Q11_POS] == 0 ||
3rdparty/libjpeg/jdcoefct.c:        qtable->quantval[Q02_POS] == 0)
3rdparty/libjpeg/jdcoefct.c:    quanttbl = compptr->quant_table;
3rdparty/libjpeg/jmorecfg.h: * mask).  We recommend 10 as a reasonable compromise; use 4 if you are
3rdparty/libjpeg/jmorecfg.h:/* These typedefs are used for various table entries and so forth.
3rdparty/libjpeg/jmorecfg.h: * Static analyzer tools can make improved inferences about
3rdparty/libjpeg/jmorecfg.h: * GCC, MSVC, etc. are not viable.
3rdparty/libjpeg/jmorecfg.h: * have a suitable noreturn type to match in place of void.
3rdparty/libjpeg/jmorecfg.h: * Undefining some of these symbols will produce a smaller but less capable
3rdparty/libjpeg/jmorecfg.h:/* Capability options common to encoder and decoder: */
3rdparty/libjpeg/jmorecfg.h:/* Encoder capability options: */
3rdparty/libjpeg/jmorecfg.h: * ENTROPY_OPT_SUPPORTED.  The standard Huffman tables are only good for 8-bit
3rdparty/libjpeg/jmorecfg.h: * usable tables for higher precision.  If you don't want to do optimization,
3rdparty/libjpeg/jmorecfg.h: * you'll have to supply different default Huffman tables.
3rdparty/libjpeg/jmorecfg.h: * The exact same statements apply for progressive JPEG: the default tables
3rdparty/libjpeg/jmorecfg.h:/* Decoder capability options: */
3rdparty/libjpeg/jmorecfg.h:/* more capability options later, no doubt */
3rdparty/libjpeg/jmorecfg.h: * 2. The color quantizer modules will not behave desirably if RGB_PIXELSIZE
3rdparty/libjpeg/jmorecfg.h: *    is not 3 (they don't understand about dummy color components!).  So you
3rdparty/libjpeg/jmorecfg.h:#ifdef __GNUC__			/* for instance, GNU C knows about inline */
3rdparty/libjpeg/jmorecfg.h:/* On some machines (notably 68000 series) "int" is 32 bits, but multiplying
3rdparty/libwebp/demux/demux.c:// Return the remaining data size available in 'mem'.
3rdparty/libwebp/demux/demux.c:    const size_t payload_available = (payload_size_padded > MemDataSize(mem))
3rdparty/libwebp/demux/demux.c:    const size_t chunk_size = CHUNK_HEADER_SIZE + payload_available;
3rdparty/libwebp/demux/demux.c:          Skip(mem, payload_available);
3rdparty/libwebp/demux/demux.c:          Skip(mem, payload_available);
3rdparty/libwebp/demux/demux.c:  // this frame is available.
3rdparty/libwebp/demux/demux.c:  // this fragment is available.
3rdparty/libwebp/mux/muxedit.c:  if (frame->id == WEBP_CHUNK_FRGM) {     // disabled for now.
3rdparty/libwebp/enc/tree.c:// Token probabilities
3rdparty/libwebp/enc/tree.c:// Default probabilities
3rdparty/libwebp/enc/quant.c:#define DO_TRELLIS_UV  0   // disable trellis for UV. Risky. Not worth.
3rdparty/libwebp/enc/quant.c:#define MIN_ALPHA 30      // lowest usable value for susceptibility
3rdparty/libwebp/enc/quant.c:static const uint8_t kDcTable[128] = {
3rdparty/libwebp/enc/quant.c:static const uint16_t kAcTable[128] = {
3rdparty/libwebp/enc/quant.c:static const uint16_t kAcTable2[128] = {
3rdparty/libwebp/enc/quant.c:    m->y1_.q_[0] = kDcTable[clip(q + enc->dq_y1_dc_, 0, 127)];
3rdparty/libwebp/enc/quant.c:    m->y1_.q_[1] = kAcTable[clip(q,                  0, 127)];
3rdparty/libwebp/enc/quant.c:    m->y2_.q_[0] = kDcTable[ clip(q + enc->dq_y2_dc_, 0, 127)] * 2;
3rdparty/libwebp/enc/quant.c:    m->y2_.q_[1] = kAcTable2[clip(q + enc->dq_y2_ac_, 0, 127)];
3rdparty/libwebp/enc/quant.c:    m->uv_.q_[0] = kDcTable[clip(q + enc->dq_uv_dc_, 0, 117)];
3rdparty/libwebp/enc/quant.c:    m->uv_.q_[1] = kAcTable[clip(q + enc->dq_uv_ac_, 0, 127)];
3rdparty/libwebp/enc/quant.c:    // TODO: Switch to kLambda*[] tables?
3rdparty/libwebp/enc/quant.c:  // low quant. Finer modelling for high-quant would make use of kAcTable[]
3rdparty/libwebp/enc/quant.c:  // TODO: incorporate the "* 256" in the tables?
3rdparty/libwebp/enc/backward_references.c:static void ConvertPopulationCountTableToBitEstimates(
3rdparty/libwebp/enc/backward_references.c:  ConvertPopulationCountTableToBitEstimates(
3rdparty/libwebp/enc/backward_references.c:  ConvertPopulationCountTableToBitEstimates(
3rdparty/libwebp/enc/backward_references.c:  ConvertPopulationCountTableToBitEstimates(
3rdparty/libwebp/enc/backward_references.c:  ConvertPopulationCountTableToBitEstimates(
3rdparty/libwebp/enc/backward_references.c:  ConvertPopulationCountTableToBitEstimates(
3rdparty/libwebp/enc/backward_references.h:// Having 9 instead of 11 only removes about 0.25 % of compression density.
3rdparty/libwebp/enc/backward_references.h:// use GNU builtins where available.
3rdparty/libwebp/enc/webpenc.c:  // The following are to prevent 'unused variable' error message.
3rdparty/libwebp/enc/webpenc.c:      // user abort requested
3rdparty/libwebp/enc/filter.c:// NOTE: clip1, tables and InitTables are repeated entries of dsp.c
3rdparty/libwebp/enc/filter.c:static uint8_t abs0[255 + 255 + 1];     // abs(i)
3rdparty/libwebp/enc/filter.c:static uint8_t abs1[255 + 255 + 1];     // abs(i)>>1
3rdparty/libwebp/enc/filter.c:static int tables_ok = 0;
3rdparty/libwebp/enc/filter.c:static void InitTables(void) {
3rdparty/libwebp/enc/filter.c:  if (!tables_ok) {
3rdparty/libwebp/enc/filter.c:      abs0[255 + i] = (i < 0) ? -i : i;
3rdparty/libwebp/enc/filter.c:      abs1[255 + i] = abs0[255 + i] >> 1;
3rdparty/libwebp/enc/filter.c:    tables_ok = 1;
3rdparty/libwebp/enc/filter.c:  return (abs0[255 + p1 - p0] > thresh) || (abs0[255 + q1 - q0] > thresh);
3rdparty/libwebp/enc/filter.c:  return (2 * abs0[255 + p0 - q0] + abs1[255 + p1 - q1]) <= thresh;
3rdparty/libwebp/enc/filter.c:  if ((2 * abs0[255 + p0 - q0] + abs1[255 + p1 - q1]) > t)
3rdparty/libwebp/enc/filter.c:  return abs0[255 + p3 - p2] <= it && abs0[255 + p2 - p1] <= it &&
3rdparty/libwebp/enc/filter.c:         abs0[255 + p1 - p0] <= it && abs0[255 + q3 - q2] <= it &&
3rdparty/libwebp/enc/filter.c:         abs0[255 + q2 - q1] <= it && abs0[255 + q1 - q0] <= it;
3rdparty/libwebp/enc/filter.c:  InitTables();
3rdparty/libwebp/enc/picture.c:// Grab the 'specs' (writer, *opaque, width, height...) from 'src' and copy them
3rdparty/libwebp/enc/picture.c:static void WebPPictureGrabSpecs(const WebPPicture* const src,
3rdparty/libwebp/enc/picture.c:  WebPPictureGrabSpecs(picture, &tmp);
3rdparty/libwebp/enc/picture.c:  WebPPictureGrabSpecs(src, dst);
3rdparty/libwebp/enc/picture.c:    WebPPictureGrabSpecs(src, dst);
3rdparty/libwebp/enc/picture.c:  WebPPictureGrabSpecs(pic, &tmp);
3rdparty/libwebp/enc/picture.c:  WebPPictureGrabSpecs(pic, &tmp);
3rdparty/libwebp/enc/cost.c:// Cost tables for level and modes
3rdparty/libwebp/enc/cost.c:// Boolean-cost cost table
3rdparty/libwebp/enc/cost.c:// Level cost tables
3rdparty/libwebp/enc/cost.c:// For each given level, the following table gives the pattern of contexts to
3rdparty/libwebp/enc/cost.c:// This is only the part that doesn't depend on the probability state.
3rdparty/libwebp/enc/cost.c:static int VariableLevelCost(int level, const uint8_t probas[NUM_PROBAS]) {
3rdparty/libwebp/enc/cost.c:        uint16_t* const table = proba->level_cost_[ctype][band][ctx];
3rdparty/libwebp/enc/cost.c:        table[0] = VP8BitCost(0, p[1]);
3rdparty/libwebp/enc/cost.c:          table[v] = cost_base + VariableLevelCost(v, p);
3rdparty/libwebp/enc/cost.c:        // Starting at level 67 and up, the variable part of the cost is
3rdparty/libwebp/enc/cost.c:// Mode cost tables.
3rdparty/libwebp/enc/cost.c:// These are the fixed probabilities (in the coding trees) turned into bit-cost
3rdparty/libwebp/enc/token.c://  A 'token' is a bit value associated with a probability, either fixed
3rdparty/libwebp/enc/token.c:// For dynamic probability, we just record the slot id (idx) for the probability
3rdparty/libwebp/enc/token.c:// value in the final probability array (uint8_t* probas in VP8EmitTokens).
3rdparty/libwebp/enc/token.c:        const uint8_t* tab;
3rdparty/libwebp/enc/token.c:          tab = VP8Cat3;
3rdparty/libwebp/enc/token.c:          tab = VP8Cat4;
3rdparty/libwebp/enc/token.c:          tab = VP8Cat5;
3rdparty/libwebp/enc/token.c:          tab = VP8Cat6;
3rdparty/libwebp/enc/token.c:          AddConstantToken(tokens, !!(v & mask), *tab++);
3rdparty/libwebp/enc/token.c:// Final coding pass, with known probabilities
3rdparty/libwebp/enc/analysis.c:        while (n < nb - 1 && abs(a - centers[n + 1]) < abs(a - centers[n])) {
3rdparty/libwebp/enc/analysis.c:        displaced += abs(centers[n] - new_center);
3rdparty/libwebp/enc/analysis.c:#define FAST_ANALYSIS_METHOD 4  // method above which we do partial analysis
3rdparty/libwebp/enc/analysis.c:    // about level bit-cost.
3rdparty/libwebp/enc/config.c:      config->filter_strength = 0;   // disable filtering to retain sharpness
3rdparty/libwebp/enc/config.c:      config->filter_strength = 0;   // disable filtering to retain sharpness
3rdparty/libwebp/enc/vp8l.c:    // If one VP8LCreateHuffmanTree() above fails, we need to clean up behind.
3rdparty/libwebp/enc/vp8l.c:  // RFC 1951 will calm you down if you are worried about this funny sequence.
3rdparty/libwebp/enc/vp8l.c:    // Color cache is disabled for palette.
3rdparty/libwebp/enc/cost.h:// Cost tables for level and modes.
3rdparty/libwebp/enc/cost.h:// Cost of coding one event with probability 'proba'.
3rdparty/libwebp/enc/cost.h:static WEBP_INLINE int VP8LevelCost(const uint16_t* const table, int level) {
3rdparty/libwebp/enc/cost.h:       + table[(level > MAX_VARIABLE_LEVEL) ? MAX_VARIABLE_LEVEL : level];
3rdparty/libwebp/enc/frame.c:// On-the-fly info about the current set of residuals. Handy to avoid
3rdparty/libwebp/enc/frame.c:// Tables for level coding
3rdparty/libwebp/enc/frame.c:// Reset the statistics about: number of skips, token proba, level cost,...
3rdparty/libwebp/enc/frame.c:// Skip decision probability
3rdparty/libwebp/enc/frame.c:// Returns the bit-cost for coding the skip probability.
3rdparty/libwebp/enc/frame.c:// Recording of token probabilities.
3rdparty/libwebp/enc/frame.c:// We keep the table free variant around for reference, in case.
3rdparty/libwebp/enc/frame.c:      v = abs(v);
3rdparty/libwebp/enc/frame.c:// Collect statistics and deduce probabilities for next coding pass.
3rdparty/libwebp/enc/frame.c:// Return the total bit-cost for coding the probability updates.
3rdparty/libwebp/enc/frame.c:// Cost of coding 'nb' 1's and 'total-nb' 0's using 'proba' probability.
3rdparty/libwebp/enc/frame.c:// Finalize Segment probability based on the coding tree
3rdparty/libwebp/enc/frame.c:  return (total == 0) ? 255     // that's the default probability.
3rdparty/libwebp/enc/frame.c:    v = abs(v);
3rdparty/libwebp/enc/frame.c:    const int v = abs(res->coeffs[n]);
3rdparty/libwebp/enc/frame.c:        const uint8_t* tab;
3rdparty/libwebp/enc/frame.c:          tab = VP8Cat3;
3rdparty/libwebp/enc/frame.c:          tab = VP8Cat4;
3rdparty/libwebp/enc/frame.c:          tab = VP8Cat5;
3rdparty/libwebp/enc/frame.c:          tab = VP8Cat6;
3rdparty/libwebp/enc/frame.c:          VP8PutBit(bw, !!(v & mask), *tab++);
3rdparty/libwebp/enc/frame.c://  This is used for deciding optimal probabilities. It also modifies the
3rdparty/libwebp/enc/frame.c:  SetSegmentProbas(enc);            // compute segment probabilities
3rdparty/libwebp/enc/frame.c:    if (method == 3) {  // we need more stats for method 3 to be reliable.
3rdparty/libwebp/enc/frame.c:      VP8CalculateLevelCosts(proba);  // refresh cost tables for rd-opt
3rdparty/libwebp/enc/syntax.c:      // we always use absolute values, not relative ones
3rdparty/libwebp/enc/vp8enci.h:       MAX_VARIABLE_LEVEL = 67,  // last (inclusive) level with variable cost
3rdparty/libwebp/enc/vp8enci.h:       MAX_LEVEL = 2047          // max level (note: max codable is 2047 + 67)
3rdparty/libwebp/enc/vp8enci.h:// Struct collecting all frame-persistent probabilities.
3rdparty/libwebp/enc/vp8enci.h:  uint8_t segments_[3];     // probabilities for segment tree
3rdparty/libwebp/enc/vp8enci.h:  uint8_t skip_proba_;      // final probability of being skipped.
3rdparty/libwebp/enc/vp8enci.h:// Informations about the macroblocks.
3rdparty/libwebp/enc/vp8enci.h:// Report progression based on macroblock rows. Return 0 for user-abort request.
3rdparty/libwebp/enc/vp8enci.h:// Finalizes bitstream when probabilities are known.
3rdparty/libwebp/enc/vp8enci.h:// record the coding of coefficients without knowing the probabilities yet
3rdparty/libwebp/enc/vp8enci.h:  // probabilities and statistics
3rdparty/libwebp/enc/vp8enci.h:  uint8_t   *y_left_;    // left luma samples (adressable from index -1 to 15).
3rdparty/libwebp/enc/vp8enci.h:  uint8_t   *u_left_;    // left u samples (adressable from index -1 to 7)
3rdparty/libwebp/enc/vp8enci.h:  uint8_t   *v_left_;    // left v samples (adressable from index -1 to 7)
3rdparty/libwebp/enc/vp8enci.h:// Reset the token probabilities to their initial (default) values
3rdparty/libwebp/enc/vp8enci.h:// Write the token probabilities
3rdparty/libwebp/cpu-features/cpu-features.h: *  * Redistributions of source code must retain the above copyright
3rdparty/libwebp/cpu-features/cpu-features.h: *  * Redistributions in binary form must reproduce the above copyright
3rdparty/libwebp/cpu-features/cpu-features.h: *     This feature is mandated by the 'armeabi-v7a' ABI.
3rdparty/libwebp/cpu-features/cpu-features.h: *     Note that only 16 FPU registers are available by default, unless
3rdparty/libwebp/cpu-features/cpu-features.h: *     'armeabi-v7a' ABI.
3rdparty/libwebp/cpu-features/cpu-features.h: *     Integer division available in ARM mode. Only available
3rdparty/libwebp/cpu-features/cpu-features.h: *     Integer division available in Thumb-2 mode. Only available
3rdparty/libwebp/cpu-features/cpu-features.h: *     ARM CPU. This is only available on a few XScale-based CPU designs
3rdparty/libwebp/cpu-features/cpu-features.h: * the feature set above, you should probably use one of the following
3rdparty/libwebp/cpu-features/cpu-features.h: *     'armeabi-v7a' Android ABI. Note that no ARMv6 CPU supports this.
3rdparty/libwebp/cpu-features/cpu-features.h: * the kernel about the current hardware (at least on ARM).
3rdparty/libwebp/cpu-features/cpu-features.c: *  * Redistributions of source code must retain the above copyright
3rdparty/libwebp/cpu-features/cpu-features.c: *  * Redistributions in binary form must reproduce the above copyright
3rdparty/libwebp/cpu-features/cpu-features.c:   *   non-readable, including /proc/self/auxv. This doesn't
3rdparty/libwebp/cpu-features/cpu-features.c:   *   happen however if the application is debuggable, or when
3rdparty/libwebp/cpu-features/cpu-features.c:            /* The LDREX / STREX instructions are available from ARMv6 */
3rdparty/libwebp/cpu-features/cpu-features.c: * supporting the 'armeabi' ABI doesn't necessarily support these.
3rdparty/libwebp/cpu-features/cpu-features.c: * by the Android 'armeabi-v7a' ABI. The -D16 suffix in its name means
3rdparty/libwebp/cpu-features/cpu-features.c: * -fpu=<name> values and their correspondance with FPU architectures above:
3rdparty/libwebp/cpu-features/cpu-features.c: * Only ARCH_VFP_V3D16 is actually mandated by the armeabi-v7a ABI,
3rdparty/libwebp/webp/encode.h:// These functions are the equivalent of the above, but compressing in a
3rdparty/libwebp/webp/encode.h:// false to request an abort of the encoding process, or true otherwise if
3rdparty/libwebp/webp/encode.h:  VP8_ENC_ERROR_USER_ABORT,               // abort request by user
3rdparty/libwebp/webp/encode.h:// Variants of the above, but taking BGR(A|X) input.
3rdparty/libwebp/webp/decode.h:// These five functions are variants of the above ones, that decode the image
3rdparty/libwebp/webp/decode.h:// available in this buffer is indicated by 'output_buffer_size'. If this
3rdparty/libwebp/webp/decode.h:// Picture can be incrementally decoded as data become available thanks to the
3rdparty/libwebp/webp/decode.h://     // The above call decodes the current available buffer.
3rdparty/libwebp/webp/decode.h:// Deprecated version of the above, without the alpha plane.
3rdparty/libwebp/webp/decode.h:// Copies and decodes the next available data. Returns VP8_STATUS_OK when
3rdparty/libwebp/webp/decode.h:// A variant of the above function to be used when data buffer contains
3rdparty/libwebp/webp/decode.h:// Same as above function to get a YUVA image. Returns pointer to the luma
3rdparty/libwebp/webp/decode.h:// Generic call to retrieve information about the displayable area.
3rdparty/libwebp/webp/decode.h:  WebPBitstreamFeatures input;  // Immutable bitstream features (optional)
3rdparty/libwebp/webp/mux.h:// Encapsulates data about a single frame/fragment.
3rdparty/libwebp/webp/demux.h:// Enables extraction of image and extended format data from WebP files.
3rdparty/libwebp/webp/demux.h://   // ... (Get information about the features present in the WebP file).
3rdparty/libwebp/webp/demux.h:  WEBP_DEMUX_PARSED_HEADER,   // Header parsing complete, data may be available.
3rdparty/libwebp/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS -Wunused-variable -Wunused-function -Wshadow -Wmaybe-uninitialized)
3rdparty/libwebp/CMakeLists.txt:ocv_warnings_disable(CMAKE_C_FLAGS /wd4244 /wd4267) # vs2005
3rdparty/libwebp/dec/tree.c:// Default probabilities
3rdparty/libwebp/dec/quant.c:static const uint8_t kDcTable[128] = {
3rdparty/libwebp/dec/quant.c:static const uint16_t kAcTable[128] = {
3rdparty/libwebp/dec/quant.c:      if (!hdr->absolute_delta_) {
3rdparty/libwebp/dec/quant.c:      m->y1_mat_[0] = kDcTable[clip(q + dqy1_dc, 127)];
3rdparty/libwebp/dec/quant.c:      m->y1_mat_[1] = kAcTable[clip(q + 0,       127)];
3rdparty/libwebp/dec/quant.c:      m->y2_mat_[0] = kDcTable[clip(q + dqy2_dc, 127)] * 2;
3rdparty/libwebp/dec/quant.c:      m->y2_mat_[1] = (kAcTable[clip(q + dqy2_ac, 127)] * 101581) >> 16;
3rdparty/libwebp/dec/quant.c:      m->uv_mat_[0] = kDcTable[clip(q + dquv_dc, 117)];
3rdparty/libwebp/dec/quant.c:      m->uv_mat_[1] = kAcTable[clip(q + dquv_ac, 127)];
3rdparty/libwebp/dec/webp.c:    // Verify if enough data is available to validate the VP8X chunk.
3rdparty/libwebp/dec/webp.c:      status = dec->status_;   // An error occurred. Grab error status.
3rdparty/libwebp/dec/webp.c:      status = dec->status_;   // An error occurred. Grab error status.
3rdparty/libwebp/dec/webp.c:    // disable filter (only for large downscaling ratio).
3rdparty/libwebp/dec/vp8i.h:       // Probabilities
3rdparty/libwebp/dec/vp8i.h:  int absolute_delta_;    // absolute or delta values for quantizer and filter
3rdparty/libwebp/dec/vp8i.h:// Struct collecting all frame-persistent probabilities.
3rdparty/libwebp/dec/vp8i.h:// Informations about the macroblocks.
3rdparty/libwebp/dec/vp8i.h:  // probabilities
3rdparty/libwebp/dec/vp8i.h:  // main memory chunk for the above data. Persistent.
3rdparty/libwebp/dec/vp8i.h:  // bit-wise info about the content of each sub-4x4 blocks: there are 16 bits
3rdparty/libwebp/dec/buffer.c:// Everything about WebPDecBuffer
3rdparty/libwebp/dec/buffer.c:void WebPGrabDecBuffer(WebPDecBuffer* const src, WebPDecBuffer* const dst) {
3rdparty/libwebp/dec/webpi.h:  size_t riff_size;            // size of the riff payload (or 0 if absent)
3rdparty/libwebp/dec/webpi.h:// in the case of non-decodable features (animation for instance).
3rdparty/libwebp/dec/webpi.h:void WebPGrabDecBuffer(WebPDecBuffer* const src, WebPDecBuffer* const dst);
3rdparty/libwebp/dec/vp8l.c:static const uint16_t kAlphabetSize[HUFFMAN_CODES_PER_META_CODE] = {
3rdparty/libwebp/dec/vp8l.c:static int ReadHuffmanCode(int alphabet_size, VP8LDecoder* const dec,
3rdparty/libwebp/dec/vp8l.c:                                  alphabet_size, num_symbols);
3rdparty/libwebp/dec/vp8l.c:        (int*)WebPSafeCalloc((uint64_t)alphabet_size, sizeof(*code_lengths));
3rdparty/libwebp/dec/vp8l.c:    ok = ReadHuffmanCodeLengths(dec, code_length_code_lengths, alphabet_size,
3rdparty/libwebp/dec/vp8l.c:      ok = HuffmanTreeBuildImplicit(tree, code_lengths, alphabet_size);
3rdparty/libwebp/dec/vp8l.c:      int alphabet_size = kAlphabetSize[j];
3rdparty/libwebp/dec/vp8l.c:        alphabet_size += 1 << color_cache_bits;
3rdparty/libwebp/dec/vp8l.c:      if (!ReadHuffmanCode(alphabet_size, dec, htrees + j)) goto Error;
3rdparty/libwebp/dec/vp8l.c:        // Approximated average-of-four. But it's an acceptable diff.
3rdparty/libwebp/dec/decode_vp8.h:  int width, height;         // picture dimensions, in pixels (invariable).
3rdparty/libwebp/dec/decode_vp8.h:  // called when fresh samples are available. Currently, samples are in
3rdparty/libwebp/dec/decode_vp8.h:  // or abort request. The actual size of the area to update is mb_w x mb_h
3rdparty/libwebp/dec/decode_vp8.h:// return readable string corresponding to the last status.
3rdparty/libwebp/dec/decode_vp8.h:    size_t data_size,    // data available so far
3rdparty/libwebp/dec/decode_vp8.h:    const uint8_t* data, size_t data_size,  // data available so far
3rdparty/libwebp/dec/idec.c:    // We copy and grab ownership of the partition #0 data.
3rdparty/libwebp/dec/idec.c:        // We shouldn't fail when MAX_MB data was available
3rdparty/libwebp/dec/frame.c:        if (!dec->segment_hdr_.absolute_delta_) {
3rdparty/libwebp/dec/frame.c:// Finalize and transmit a complete row. Return false in case of user-abort.
3rdparty/libwebp/dec/frame.c:  // Disable filtering per user request
3rdparty/libwebp/dec/frame.c:      // modify some abutting pixels.
3rdparty/libwebp/dec/frame.c:    // down-cast is ok, thanks to WebPSafeAlloc() above.
3rdparty/libwebp/dec/frame.c:  VP8DspInit();  // Init critical function pointers and look-up tables.
3rdparty/libwebp/dec/vp8.c:  hdr->absolute_delta_ = 1;
3rdparty/libwebp/dec/vp8.c:      hdr->absolute_delta_ = VP8Get(br);
3rdparty/libwebp/dec/vp8.c:// unavailable memory.
3rdparty/libwebp/dec/vp8.c:// is returned, and this is an unrecoverable error.
3rdparty/libwebp/dec/vp8.c:                         "Frame not displayable.");
3rdparty/libwebp/dec/vp8.c:  // Check if we have all the partition #0 available, and initialize dec->br_
3rdparty/libwebp/dec/vp8.c:      const uint8_t* tab;
3rdparty/libwebp/dec/vp8.c:      for (tab = kCat3456[cat]; *tab; ++tab) {
3rdparty/libwebp/dec/vp8.c:        v += v + VP8GetBit(br, *tab);
3rdparty/libwebp/dec/vp8.c:// Table to unpack four bits into four bytes
3rdparty/libwebp/dec/vp8.c:static const PackedNz kUnpackTab[16] = {
3rdparty/libwebp/dec/vp8.c:  tnz = kUnpackTab[mb->nz_ & 0xf];
3rdparty/libwebp/dec/vp8.c:  lnz = kUnpackTab[left_mb->nz_ & 0xf];
3rdparty/libwebp/dec/vp8.c:  tnz = kUnpackTab[mb->nz_ >> 4];
3rdparty/libwebp/dec/vp8.c:  lnz = kUnpackTab[left_mb->nz_ >> 4];
3rdparty/libwebp/dec/vp8.c:      return VP8SetError(dec, VP8_STATUS_USER_ABORT, "Output aborted.");
3rdparty/libwebp/utils/huffman_encode.c:  return abs(a - b) < 4;
3rdparty/libwebp/utils/huffman_encode.c:  (void)ending_token;    // suppress 'unused variable' warning
3rdparty/libwebp/utils/thread.c:  // note that there is a consumer available so the signal isn't dropped in
3rdparty/libwebp/utils/bit_reader.h:#else                      // reasonable default
3rdparty/libwebp/utils/filters.c:    // Leftmost pixel is predicted from above (except for topmost scanline).
3rdparty/libwebp/utils/filters.c:    // leftmost pixel: predict from above.
3rdparty/libwebp/utils/filters.c:#define SDIFF(a, b) (abs((a) - (b)) >> 4)   // Scoring diff, in [0..SMAX)
3rdparty/libwebp/utils/bit_writer.h:// Only useful in case of error, when the internal buffer hasn't been grabbed!
3rdparty/libwebp/utils/thread.h:  NOT_OK = 0,   // object is unusable
3rdparty/libwebp/dsp/dec_neon.c:  "vabd.u8    q15," #p0 "," #q0 "         \n"  /* abs(p0 - q0) */              \
3rdparty/libwebp/dsp/dec_neon.c:  "vabd.u8    q14," #p1 "," #q1 "         \n"  /* abs(p1 - q1) */              \
3rdparty/libwebp/dsp/dec_neon.c:  "vqadd.u8   q15, q15, q15               \n"  /* abs(p0 - q0) * 2 */          \
3rdparty/libwebp/dsp/dec_neon.c:  "vshr.u8    q14, q14, #1                \n"  /* abs(p1 - q1) / 2 */          \
3rdparty/libwebp/dsp/dec_neon.c:  "vqadd.u8   q15, q15, q14     \n"  /* abs(p0 - q0) * 2 + abs(p1 - q1) / 2 */ \
3rdparty/libwebp/dsp/dec_neon.c:   * Technically these are unsigned but vqdmulh is only available in signed.
3rdparty/libwebp/dsp/dec_sse2.c:  // To be able to use signed 16-bit integers, we use the following trick to
3rdparty/libwebp/dsp/dec_sse2.c:  // - The multiplication of a variable by a constant become the sum of the
3rdparty/libwebp/dsp/dec_sse2.c:  //   variable and the multiplication of that variable by the associated
3rdparty/libwebp/dsp/dec_sse2.c:// Compute abs(p - q) = subs(p - q) OR subs(q - p)
3rdparty/libwebp/dsp/dec_sse2.c:  const __m128i t_3 = _mm_subs_epu8(t_1, h);  /* abs(p1 - p0) - hev_tresh */   \
3rdparty/libwebp/dsp/dec_sse2.c:  const __m128i t_4 = _mm_subs_epu8(t_2, h);  /* abs(q1 - q0) - hev_tresh */   \
3rdparty/libwebp/dsp/dec_sse2.c:  __m128i t1 = MM_ABS(*p1, *q1);        // abs(p1 - q1)
3rdparty/libwebp/dsp/dec_sse2.c:  t1 = _mm_srli_epi16(t1, 1);           // abs(p1 - q1) / 2
3rdparty/libwebp/dsp/dec_sse2.c:  *mask = MM_ABS(*p0, *q0);             // abs(p0 - q0)
3rdparty/libwebp/dsp/dec_sse2.c:  *mask = _mm_adds_epu8(*mask, *mask);  // abs(p0 - q0) * 2
3rdparty/libwebp/dsp/dec_sse2.c:  *mask = _mm_adds_epu8(*mask, t1);     // abs(p0 - q0) * 2 + abs(p1 - q1) / 2
3rdparty/libwebp/dsp/dec_sse2.c:  a = _mm_and_si128(a, mask);     // mask filter values we don't care about
3rdparty/libwebp/dsp/dec_sse2.c:  t1 = _mm_and_si128(t1, *mask);       // mask filter values we don't care about
3rdparty/libwebp/dsp/upsampling_neon.c:  /* 9 pixels must be read-able for each block */                       \
3rdparty/libwebp/dsp/upsampling_sse2.c:  /* 17 pixels must be read-able for each block */                             \
3rdparty/libwebp/dsp/dec.c:// run-time tables (~4k)
3rdparty/libwebp/dsp/dec.c:static uint8_t abs0[255 + 255 + 1];     // abs(i)
3rdparty/libwebp/dsp/dec.c:static uint8_t abs1[255 + 255 + 1];     // abs(i)>>1
3rdparty/libwebp/dsp/dec.c:// We declare this variable 'volatile' to prevent instruction reordering
3rdparty/libwebp/dsp/dec.c:static volatile int tables_ok = 0;
3rdparty/libwebp/dsp/dec.c:static void DspInitTables(void) {
3rdparty/libwebp/dsp/dec.c:  if (!tables_ok) {
3rdparty/libwebp/dsp/dec.c:      abs0[255 + i] = (i < 0) ? -i : i;
3rdparty/libwebp/dsp/dec.c:      abs1[255 + i] = abs0[255 + i] >> 1;
3rdparty/libwebp/dsp/dec.c:    tables_ok = 1;
3rdparty/libwebp/dsp/dec.c:static void DC16NoTop(uint8_t *dst) {   // DC with top samples not available
3rdparty/libwebp/dsp/dec.c:static void DC16NoLeft(uint8_t *dst) {  // DC with left samples not available
3rdparty/libwebp/dsp/dec.c:  return (abs0[255 + p1 - p0] > thresh) || (abs0[255 + q1 - q0] > thresh);
3rdparty/libwebp/dsp/dec.c:  return (2 * abs0[255 + p0 - q0] + abs1[255 + p1 - q1]) <= thresh;
3rdparty/libwebp/dsp/dec.c:  if ((2 * abs0[255 + p0 - q0] + abs1[255 + p1 - q1]) > t)
3rdparty/libwebp/dsp/dec.c:  return abs0[255 + p3 - p2] <= it && abs0[255 + p2 - p1] <= it &&
3rdparty/libwebp/dsp/dec.c:         abs0[255 + p1 - p0] <= it && abs0[255 + q3 - q2] <= it &&
3rdparty/libwebp/dsp/dec.c:         abs0[255 + q2 - q1] <= it && abs0[255 + q1 - q0] <= it;
3rdparty/libwebp/dsp/dec.c:  DspInitTables();
3rdparty/libwebp/dsp/lossless.c:// lookup table for small values of log2(int)
3rdparty/libwebp/dsp/lossless.c:const float kLog2Table[LOG_LOOKUP_IDX_MAX] = {
3rdparty/libwebp/dsp/lossless.c:const float kSLog2Table[LOG_LOOKUP_IDX_MAX] = {
3rdparty/libwebp/dsp/lossless.c:    return v_f * (kLog2Table[v] + log_cnt);
3rdparty/libwebp/dsp/lossless.c:    return kLog2Table[v] + log_cnt;
3rdparty/libwebp/dsp/lossless.c:  return abs(pb) - abs(pa);
3rdparty/libwebp/dsp/lossless.c:  // Favor small absolute values for PredictionCostSpatial
3rdparty/libwebp/dsp/yuv.h:// In the table-lookup version (WEBP_YUV_USE_TABLE), the common factor
3rdparty/libwebp/dsp/yuv.h:// "1.164 * (Y-16)" can be handled as an offset in the VP8kClip[] table.
3rdparty/libwebp/dsp/yuv.h:// This colorspace is close to Rec.601's Y'CbCr model with the notable
3rdparty/libwebp/dsp/yuv.h:#else   // Table-free version (slower on x86)
3rdparty/libwebp/dsp/yuv.h:// Must be called before everything, to initialize the tables.
3rdparty/libwebp/dsp/cpu.c:// define a dummy function to enable turning off NEON at runtime by setting
3rdparty/libwebp/dsp/enc_sse2.c:#include <stdlib.h>  // for abs()
3rdparty/libwebp/dsp/enc_sse2.c:      // abs(out) = (out ^ sign) - sign
3rdparty/libwebp/dsp/enc_sse2.c:      const __m128i abs0 = _mm_sub_epi16(xor0, sign0);
3rdparty/libwebp/dsp/enc_sse2.c:      const __m128i abs1 = _mm_sub_epi16(xor1, sign1);
3rdparty/libwebp/dsp/enc_sse2.c:      // v = abs(out) >> 3
3rdparty/libwebp/dsp/enc_sse2.c:      const __m128i v0 = _mm_srai_epi16(abs0, 3);
3rdparty/libwebp/dsp/enc_sse2.c:      const __m128i v1 = _mm_srai_epi16(abs1, 3);
3rdparty/libwebp/dsp/enc_sse2.c:  // To be able to use signed 16-bit integers, we use the following trick to
3rdparty/libwebp/dsp/enc_sse2.c:  // - The multiplication of a variable by a constant become the sum of the
3rdparty/libwebp/dsp/enc_sse2.c:  //   variable and the multiplication of that variable by the associated
3rdparty/libwebp/dsp/enc_sse2.c:  // Compute differences; (a-b)^2 = (abs(a-b))^2 = (sat8(a-b) + sat8(b-a))^2
3rdparty/libwebp/dsp/enc_sse2.c:  //                  need absolute values, there is no need to do calculation
3rdparty/libwebp/dsp/enc_sse2.c:// Returns the difference between the weighted sum of the absolute value of
3rdparty/libwebp/dsp/enc_sse2.c:    // TODO(cduvivier): Make variable declarations and allocations aligned so
3rdparty/libwebp/dsp/enc_sse2.c:      // b = abs(b) = (b ^ sign) - sign
3rdparty/libwebp/dsp/enc_sse2.c:  return abs(diff_sum) >> 5;
3rdparty/libwebp/dsp/enc_sse2.c:  // TODO(cduvivier): Make variable declarations and allocations aligned so that
3rdparty/libwebp/dsp/enc_sse2.c:  // coeff = abs(in) = (in ^ sign) - sign
3rdparty/libwebp/dsp/enc_sse2.c:  // coeff = abs(in) + sharpen
3rdparty/libwebp/dsp/enc_neon.c:// Returns the weighted sum of the absolute value of transformed coefficients.
3rdparty/libwebp/dsp/enc_neon.c:    // abs(b0)
3rdparty/libwebp/dsp/enc_neon.c:    "vabs.s32        q1, q1                   \n"
3rdparty/libwebp/dsp/enc_neon.c:    "vabs.s32        q9, q9                   \n"
3rdparty/libwebp/dsp/enc_neon.c:    // abs(b1)
3rdparty/libwebp/dsp/enc_neon.c:    "vabs.s32        q12, q12                 \n"
3rdparty/libwebp/dsp/enc_neon.c:    "vabs.s32        q14, q14                 \n"
3rdparty/libwebp/dsp/enc_neon.c:    // abs(b2)
3rdparty/libwebp/dsp/enc_neon.c:    "vabs.s32        q0, q0                   \n"
3rdparty/libwebp/dsp/enc_neon.c:    "vabs.s32        q8, q8                   \n"
3rdparty/libwebp/dsp/enc_neon.c:    // abs(b3)
3rdparty/libwebp/dsp/enc_neon.c:    "vabs.s32        q2, q2                   \n"
3rdparty/libwebp/dsp/enc_neon.c:    "vabs.s32        q3, q3                   \n"
3rdparty/libwebp/dsp/enc_neon.c:    // w[0] * abs(b0)
3rdparty/libwebp/dsp/enc_neon.c:    // w[4] * abs(b1)
3rdparty/libwebp/dsp/enc_neon.c:    // w[8] * abs(b1)
3rdparty/libwebp/dsp/enc_neon.c:    // w[12] * abs(b1)
3rdparty/libwebp/dsp/enc_neon.c:    // 16bits for w[] + 2 bits of abs() summation.
3rdparty/libwebp/dsp/enc_neon.c:    // abs(sum2 - sum1)
3rdparty/libwebp/dsp/enc_neon.c:    "vabs.s32        d0, d0                   \n"
3rdparty/libwebp/dsp/enc_neon.c:    // abs(sum2 - sum1) >> 5
3rdparty/libwebp/dsp/dsp.h:void VP8EncDspInit(void);   // must be called before using any of the above
3rdparty/libwebp/dsp/dsp.h:// must be called before anything using the above
3rdparty/libwebp/dsp/dsp.h:// To be called first before using the above.
3rdparty/libwebp/dsp/lossless.h:// Faster logarithm for integers. Small values use a look-up table.
3rdparty/libwebp/dsp/lossless.h:extern const float kLog2Table[LOG_LOOKUP_IDX_MAX];
3rdparty/libwebp/dsp/lossless.h:extern const float kSLog2Table[LOG_LOOKUP_IDX_MAX];
3rdparty/libwebp/dsp/lossless.h:  return (v < LOG_LOOKUP_IDX_MAX) ? kLog2Table[v] : VP8LFastLog2Slow(v);
3rdparty/libwebp/dsp/lossless.h:  return (v < LOG_LOOKUP_IDX_MAX) ? kSLog2Table[v] : VP8LFastSLog2Slow(v);
3rdparty/libwebp/dsp/enc.c:#include <stdlib.h>  // for abs()
3rdparty/libwebp/dsp/enc.c:      const int v = abs(out[k]) >> 3;  // TODO(skal): add rounding?
3rdparty/libwebp/dsp/enc.c:// run-time tables (~4k)
3rdparty/libwebp/dsp/enc.c:// We declare this variable 'volatile' to prevent instruction reordering
3rdparty/libwebp/dsp/enc.c:static volatile int tables_ok = 0;
3rdparty/libwebp/dsp/enc.c:static void InitTables(void) {
3rdparty/libwebp/dsp/enc.c:  if (!tables_ok) {
3rdparty/libwebp/dsp/enc.c:    tables_ok = 1;
3rdparty/libwebp/dsp/enc.c:        const uint8_t* const clip_table = clip + left[y];
3rdparty/libwebp/dsp/enc.c:          dst[x] = clip_table[top[x]];
3rdparty/libwebp/dsp/enc.c:    // Note that if top samples are not available, the default value is
3rdparty/libwebp/dsp/enc.c:    const uint8_t* const clip_table = clip + top[-2 - y];
3rdparty/libwebp/dsp/enc.c:      dst[x] = clip_table[top[x]];
3rdparty/libwebp/dsp/enc.c:// Returns the weighted sum of the absolute value of transformed coefficients.
3rdparty/libwebp/dsp/enc.c:    sum += w[ 0] * abs(b0);
3rdparty/libwebp/dsp/enc.c:    sum += w[ 4] * abs(b1);
3rdparty/libwebp/dsp/enc.c:    sum += w[ 8] * abs(b2);
3rdparty/libwebp/dsp/enc.c:    sum += w[12] * abs(b3);
3rdparty/libwebp/dsp/enc.c:  return abs(sum2 - sum1) >> 5;
3rdparty/libwebp/dsp/enc.c:  InitTables();
3rdparty/include/dshow/control.h:  DEFINE_GUID(IID_IAMStats,0xbc9bcf80,0xdcd2,0x11d2,0xab,0xf6,0x00,0xa0,0xc9,0x05,0xf3,0x75);
3rdparty/include/dshow/uuids.h:OUR_GUID_ENTRY(CLSID_AVIDoc,0xd3588ab0,0x0781,0x11ce,0xb0,0x3a,0x00,0x20,0xaf,0xb,0xa7,0x70)
3rdparty/include/dshow/uuids.h:OUR_GUID_ENTRY(CLSID_MMSPLITTER,0x3ae86b20,0x7be8,0x11d1,0xab,0xe6,0x00,0xa0,0xc9,0x05,0xf3,0x75)
3rdparty/include/dshow/uuids.h:OUR_GUID_ENTRY(CLSID_StreamBufferRecordingAttributes,0xccaa63ac,0x1057,0x4778,0xae,0x92,0x12,0x6,0xab,0x9a,0xce,0xe6)
3rdparty/include/dshow/uuids.h:OUR_GUID_ENTRY(CLSID_MJPGEnc,0xb80ab0a0,0x7416,0x11d2,0x9e,0xeb,0x0,0x60,0x8,0x3,0x9e,0x37)
3rdparty/include/dshow/uuids.h:OUR_GUID_ENTRY(IID_IMpegAudioDecoder,0xb45dd570,0x3c77,0x11d1,0xab,0xe1,0x00,0xa0,0xc9,0x05,0xf3,0x75)
3rdparty/include/dshow/uuids.h:OUR_GUID_ENTRY(CLSID_VideoMixingRenderer9,0x51b4abf3,0x748f,0x4e3b,0xa2,0x76,0xc8,0x28,0x33,0x0e,0x92,0x6a)
3rdparty/include/dshow/uuids.h:OUR_GUID_ENTRY(CLSID_IVideoEncoderCodecAPIProxy,0xb05dabd9,0x56e5,0x4fdc,0xaf,0xa4,0x8a,0x47,0xe9,0x1f,0x1c,0x9c)
3rdparty/include/dshow/strmif.h:#ifndef __IGetCapabilitiesKey_FWD_DEFINED__
3rdparty/include/dshow/strmif.h:#define __IGetCapabilitiesKey_FWD_DEFINED__
3rdparty/include/dshow/strmif.h:typedef struct IGetCapabilitiesKey IGetCapabilitiesKey;
3rdparty/include/dshow/strmif.h:  typedef enum AM_SEEKING_SeekingCapabilities {
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCapabilities(DWORD *pCapabilities) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI CheckCapabilities(DWORD *pCapabilities) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetAvailable(LONGLONG *pEarliest,LONGLONG *pLatest) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCapabilities)(IMediaSeeking *This,DWORD *pCapabilities);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *CheckCapabilities)(IMediaSeeking *This,DWORD *pCapabilities);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetAvailable)(IMediaSeeking *This,LONGLONG *pEarliest,LONGLONG *pLatest);
3rdparty/include/dshow/strmif.h:#define IMediaSeeking_GetCapabilities(This,pCapabilities) (This)->lpVtbl->GetCapabilities(This,pCapabilities)
3rdparty/include/dshow/strmif.h:#define IMediaSeeking_CheckCapabilities(This,pCapabilities) (This)->lpVtbl->CheckCapabilities(This,pCapabilities)
3rdparty/include/dshow/strmif.h:#define IMediaSeeking_GetAvailable(This,pEarliest,pLatest) (This)->lpVtbl->GetAvailable(This,pEarliest,pLatest)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IMediaSeeking_GetCapabilities_Proxy(IMediaSeeking *This,DWORD *pCapabilities);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IMediaSeeking_GetCapabilities_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IMediaSeeking_CheckCapabilities_Proxy(IMediaSeeking *This,DWORD *pCapabilities);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IMediaSeeking_CheckCapabilities_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IMediaSeeking_GetAvailable_Proxy(IMediaSeeking *This,LONGLONG *pEarliest,LONGLONG *pLatest);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IMediaSeeking_GetAvailable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI Length(LONGLONG *pTotal,LONGLONG *pAvailable) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *Length)(IAsyncReader *This,LONGLONG *pTotal,LONGLONG *pAvailable);
3rdparty/include/dshow/strmif.h:#define IAsyncReader_Length(This,pTotal,pAvailable) (This)->lpVtbl->Length(This,pTotal,pAvailable)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAsyncReader_Length_Proxy(IAsyncReader *This,LONGLONG *pTotal,LONGLONG *pAvailable);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetNumberOfCapabilities(int *piCount,int *piSize) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetNumberOfCapabilities)(IAMStreamConfig *This,int *piCount,int *piSize);
3rdparty/include/dshow/strmif.h:#define IAMStreamConfig_GetNumberOfCapabilities(This,piCount,piSize) (This)->lpVtbl->GetNumberOfCapabilities(This,piCount,piSize)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMStreamConfig_GetNumberOfCapabilities_Proxy(IAMStreamConfig *This,int *piCount,int *piSize);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMStreamConfig_GetNumberOfCapabilities_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetInfo(WCHAR *pszVersion,int *pcbVersion,LPWSTR pszDescription,int *pcbDescription,long *pDefaultKeyFrameRate,long *pDefaultPFramesPerKey,double *pDefaultQuality,long *pCapabilities) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetInfo)(IAMVideoCompression *This,WCHAR *pszVersion,int *pcbVersion,LPWSTR pszDescription,int *pcbDescription,long *pDefaultKeyFrameRate,long *pDefaultPFramesPerKey,double *pDefaultQuality,long *pCapabilities);
3rdparty/include/dshow/strmif.h:#define IAMVideoCompression_GetInfo(This,pszVersion,pcbVersion,pszDescription,pcbDescription,pDefaultKeyFrameRate,pDefaultPFramesPerKey,pDefaultQuality,pCapabilities) (This)->lpVtbl->GetInfo(This,pszVersion,pcbVersion,pszDescription,pcbDescription,pDefaultKeyFrameRate,pDefaultPFramesPerKey,pDefaultQuality,pCapabilities)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMVideoCompression_GetInfo_Proxy(IAMVideoCompression *This,WCHAR *pszVersion,int *pcbVersion,LPWSTR pszDescription,int *pcbDescription,long *pDefaultKeyFrameRate,long *pDefaultPFramesPerKey,double *pDefaultQuality,long *pCapabilities);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI put_Enable(WINBOOL fEnable) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI get_Enable(WINBOOL *pfEnable) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *put_Enable)(IAMAudioInputMixer *This,WINBOOL fEnable);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *get_Enable)(IAMAudioInputMixer *This,WINBOOL *pfEnable);
3rdparty/include/dshow/strmif.h:#define IAMAudioInputMixer_put_Enable(This,fEnable) (This)->lpVtbl->put_Enable(This,fEnable)
3rdparty/include/dshow/strmif.h:#define IAMAudioInputMixer_get_Enable(This,pfEnable) (This)->lpVtbl->get_Enable(This,pfEnable)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMAudioInputMixer_put_Enable_Proxy(IAMAudioInputMixer *This,WINBOOL fEnable);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMAudioInputMixer_put_Enable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMAudioInputMixer_get_Enable_Proxy(IAMAudioInputMixer *This,WINBOOL *pfEnable);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMAudioInputMixer_get_Enable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    TunerInputCable = 0,TunerInputAntenna = TunerInputCable + 1
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI get_AvailableTVFormats(long *lAnalogVideoStandard) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI put_OutputEnable(long lOutputEnable) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI get_OutputEnable(long *plOutputEnable) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *get_AvailableTVFormats)(IAMAnalogVideoDecoder *This,long *lAnalogVideoStandard);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *put_OutputEnable)(IAMAnalogVideoDecoder *This,long lOutputEnable);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *get_OutputEnable)(IAMAnalogVideoDecoder *This,long *plOutputEnable);
3rdparty/include/dshow/strmif.h:#define IAMAnalogVideoDecoder_get_AvailableTVFormats(This,lAnalogVideoStandard) (This)->lpVtbl->get_AvailableTVFormats(This,lAnalogVideoStandard)
3rdparty/include/dshow/strmif.h:#define IAMAnalogVideoDecoder_put_OutputEnable(This,lOutputEnable) (This)->lpVtbl->put_OutputEnable(This,lOutputEnable)
3rdparty/include/dshow/strmif.h:#define IAMAnalogVideoDecoder_get_OutputEnable(This,plOutputEnable) (This)->lpVtbl->get_OutputEnable(This,plOutputEnable)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMAnalogVideoDecoder_get_AvailableTVFormats_Proxy(IAMAnalogVideoDecoder *This,long *lAnalogVideoStandard);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMAnalogVideoDecoder_get_AvailableTVFormats_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMAnalogVideoDecoder_put_OutputEnable_Proxy(IAMAnalogVideoDecoder *This,long lOutputEnable);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMAnalogVideoDecoder_put_OutputEnable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMAnalogVideoDecoder_get_OutputEnable_Proxy(IAMAnalogVideoDecoder *This,long *plOutputEnable);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMAnalogVideoDecoder_get_OutputEnable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    VideoProcAmp_Gamma,VideoProcAmp_ColorEnable,VideoProcAmp_WhiteBalance,
3rdparty/include/dshow/strmif.h:    VideoControlFlag_FlipHorizontal = 0x1,VideoControlFlag_FlipVertical = 0x2,VideoControlFlag_ExternalTriggerEnable = 0x4,VideoControlFlag_Trigger = 0x8
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetMaxAvailableFrameRate(IPin *pPin,long iIndex,SIZE Dimensions,LONGLONG *MaxAvailableFrameRate) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetMaxAvailableFrameRate)(IAMVideoControl *This,IPin *pPin,long iIndex,SIZE Dimensions,LONGLONG *MaxAvailableFrameRate);
3rdparty/include/dshow/strmif.h:#define IAMVideoControl_GetMaxAvailableFrameRate(This,pPin,iIndex,Dimensions,MaxAvailableFrameRate) (This)->lpVtbl->GetMaxAvailableFrameRate(This,pPin,iIndex,Dimensions,MaxAvailableFrameRate)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMVideoControl_GetMaxAvailableFrameRate_Proxy(IAMVideoControl *This,IPin *pPin,long iIndex,SIZE Dimensions,LONGLONG *MaxAvailableFrameRate);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMVideoControl_GetMaxAvailableFrameRate_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetAvailableModes(long *plModes) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetAvailableModes)(IAMTuner *This,long *plModes);
3rdparty/include/dshow/strmif.h:#define IAMTuner_GetAvailableModes(This,plModes) (This)->lpVtbl->GetAvailableModes(This,plModes)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMTuner_GetAvailableModes_Proxy(IAMTuner *This,long *plModes);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMTuner_GetAvailableModes_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI get_AvailableTVFormats(long *lAnalogVideoStandard) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetAvailableModes)(IAMTVTuner *This,long *plModes);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *get_AvailableTVFormats)(IAMTVTuner *This,long *lAnalogVideoStandard);
3rdparty/include/dshow/strmif.h:#define IAMTVTuner_GetAvailableModes(This,plModes) (This)->lpVtbl->GetAvailableModes(This,plModes)
3rdparty/include/dshow/strmif.h:#define IAMTVTuner_get_AvailableTVFormats(This,lAnalogVideoStandard) (This)->lpVtbl->get_AvailableTVFormats(This,lAnalogVideoStandard)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMTVTuner_get_AvailableTVFormats_Proxy(IAMTVTuner *This,long *lAnalogVideoStandard);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMTVTuner_get_AvailableTVFormats_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetAvailableModes)(IBPCSatelliteTuner *This,long *plModes);
3rdparty/include/dshow/strmif.h:#define IBPCSatelliteTuner_GetAvailableModes(This,plModes) (This)->lpVtbl->GetAvailableModes(This,plModes)
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetAvailableTVAudioModes(long *plModes) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetAvailableTVAudioModes)(IAMTVAudio *This,long *plModes);
3rdparty/include/dshow/strmif.h:#define IAMTVAudio_GetAvailableTVAudioModes(This,plModes) (This)->lpVtbl->GetAvailableTVAudioModes(This,plModes)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMTVAudio_GetAvailableTVAudioModes_Proxy(IAMTVAudio *This,long *plModes);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMTVAudio_GetAvailableTVAudioModes_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI get_AvailableTVFormats(long *lAnalogVideoStandard) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI put_CCEnable(long lCCEnable) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI get_CCEnable(long *lCCEnable) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *get_AvailableTVFormats)(IAMAnalogVideoEncoder *This,long *lAnalogVideoStandard);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *put_CCEnable)(IAMAnalogVideoEncoder *This,long lCCEnable);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *get_CCEnable)(IAMAnalogVideoEncoder *This,long *lCCEnable);
3rdparty/include/dshow/strmif.h:#define IAMAnalogVideoEncoder_get_AvailableTVFormats(This,lAnalogVideoStandard) (This)->lpVtbl->get_AvailableTVFormats(This,lAnalogVideoStandard)
3rdparty/include/dshow/strmif.h:#define IAMAnalogVideoEncoder_put_CCEnable(This,lCCEnable) (This)->lpVtbl->put_CCEnable(This,lCCEnable)
3rdparty/include/dshow/strmif.h:#define IAMAnalogVideoEncoder_get_CCEnable(This,lCCEnable) (This)->lpVtbl->get_CCEnable(This,lCCEnable)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMAnalogVideoEncoder_get_AvailableTVFormats_Proxy(IAMAnalogVideoEncoder *This,long *lAnalogVideoStandard);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMAnalogVideoEncoder_get_AvailableTVFormats_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMAnalogVideoEncoder_put_CCEnable_Proxy(IAMAnalogVideoEncoder *This,long lCCEnable);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMAnalogVideoEncoder_put_CCEnable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMAnalogVideoEncoder_get_CCEnable_Proxy(IAMAnalogVideoEncoder *This,long *lCCEnable);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMAnalogVideoEncoder_get_CCEnable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCapability(long Capability,long *pValue,double *pdblValue) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCapability)(IAMExtDevice *This,long Capability,long *pValue,double *pdblValue);
3rdparty/include/dshow/strmif.h:#define IAMExtDevice_GetCapability(This,Capability,pValue,pdblValue) (This)->lpVtbl->GetCapability(This,Capability,pValue,pdblValue)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMExtDevice_GetCapability_Proxy(IAMExtDevice *This,long Capability,long *pValue,double *pdblValue);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMExtDevice_GetCapability_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCapability(long Capability,long *pValue,double *pdblValue) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetChase(long *pEnabled,long *pOffset,HEVENT *phEvent) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI SetChase(long Enable,long Offset,HEVENT hEvent) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI get_AntiClogControl(long *pEnabled) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI put_AntiClogControl(long Enable) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCapability)(IAMExtTransport *This,long Capability,long *pValue,double *pdblValue);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetChase)(IAMExtTransport *This,long *pEnabled,long *pOffset,HEVENT *phEvent);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *SetChase)(IAMExtTransport *This,long Enable,long Offset,HEVENT hEvent);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *get_AntiClogControl)(IAMExtTransport *This,long *pEnabled);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *put_AntiClogControl)(IAMExtTransport *This,long Enable);
3rdparty/include/dshow/strmif.h:#define IAMExtTransport_GetCapability(This,Capability,pValue,pdblValue) (This)->lpVtbl->GetCapability(This,Capability,pValue,pdblValue)
3rdparty/include/dshow/strmif.h:#define IAMExtTransport_GetChase(This,pEnabled,pOffset,phEvent) (This)->lpVtbl->GetChase(This,pEnabled,pOffset,phEvent)
3rdparty/include/dshow/strmif.h:#define IAMExtTransport_SetChase(This,Enable,Offset,hEvent) (This)->lpVtbl->SetChase(This,Enable,Offset,hEvent)
3rdparty/include/dshow/strmif.h:#define IAMExtTransport_get_AntiClogControl(This,pEnabled) (This)->lpVtbl->get_AntiClogControl(This,pEnabled)
3rdparty/include/dshow/strmif.h:#define IAMExtTransport_put_AntiClogControl(This,Enable) (This)->lpVtbl->put_AntiClogControl(This,Enable)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMExtTransport_GetCapability_Proxy(IAMExtTransport *This,long Capability,long *pValue,double *pdblValue);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMExtTransport_GetCapability_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMExtTransport_GetChase_Proxy(IAMExtTransport *This,long *pEnabled,long *pOffset,HEVENT *phEvent);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMExtTransport_SetChase_Proxy(IAMExtTransport *This,long Enable,long Offset,HEVENT hEvent);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMExtTransport_get_AntiClogControl_Proxy(IAMExtTransport *This,long *pEnabled);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMExtTransport_put_AntiClogControl_Proxy(IAMExtTransport *This,long Enable);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetTCDisplayEnable(long *pState) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI SetTCDisplayEnable(long State) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetTCDisplayEnable)(IAMTimecodeDisplay *This,long *pState);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *SetTCDisplayEnable)(IAMTimecodeDisplay *This,long State);
3rdparty/include/dshow/strmif.h:#define IAMTimecodeDisplay_GetTCDisplayEnable(This,pState) (This)->lpVtbl->GetTCDisplayEnable(This,pState)
3rdparty/include/dshow/strmif.h:#define IAMTimecodeDisplay_SetTCDisplayEnable(This,State) (This)->lpVtbl->SetTCDisplayEnable(This,State)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMTimecodeDisplay_GetTCDisplayEnable_Proxy(IAMTimecodeDisplay *This,long *pState);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMTimecodeDisplay_GetTCDisplayEnable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMTimecodeDisplay_SetTCDisplayEnable_Proxy(IAMTimecodeDisplay *This,long State);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMTimecodeDisplay_SetTCDisplayEnable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI Enable(long lIndex,DWORD dwFlags) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *Enable)(IAMStreamSelect *This,long lIndex,DWORD dwFlags);
3rdparty/include/dshow/strmif.h:#define IAMStreamSelect_Enable(This,lIndex,dwFlags) (This)->lpVtbl->Enable(This,lIndex,dwFlags)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IAMStreamSelect_Enable_Proxy(IAMStreamSelect *This,long lIndex,DWORD dwFlags);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IAMStreamSelect_Enable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT UnableToRender(IPin *pPin) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI IsModifiable(const GUID *Api) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *IsModifiable)(ICodecAPI *This,const GUID *Api);
3rdparty/include/dshow/strmif.h:#define ICodecAPI_IsModifiable(This,Api) (This)->lpVtbl->IsModifiable(This,Api)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI ICodecAPI_IsModifiable_Proxy(ICodecAPI *This,const GUID *Api);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB ICodecAPI_IsModifiable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:#ifndef __IGetCapabilitiesKey_INTERFACE_DEFINED__
3rdparty/include/dshow/strmif.h:#define __IGetCapabilitiesKey_INTERFACE_DEFINED__
3rdparty/include/dshow/strmif.h:  EXTERN_C const IID IID_IGetCapabilitiesKey;
3rdparty/include/dshow/strmif.h:  struct IGetCapabilitiesKey : public IUnknown {
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCapabilitiesKey(HKEY *pHKey) = 0;
3rdparty/include/dshow/strmif.h:  typedef struct IGetCapabilitiesKeyVtbl {
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *QueryInterface)(IGetCapabilitiesKey *This,REFIID riid,void **ppvObject);
3rdparty/include/dshow/strmif.h:      ULONG (WINAPI *AddRef)(IGetCapabilitiesKey *This);
3rdparty/include/dshow/strmif.h:      ULONG (WINAPI *Release)(IGetCapabilitiesKey *This);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCapabilitiesKey)(IGetCapabilitiesKey *This,HKEY *pHKey);
3rdparty/include/dshow/strmif.h:  } IGetCapabilitiesKeyVtbl;
3rdparty/include/dshow/strmif.h:  struct IGetCapabilitiesKey {
3rdparty/include/dshow/strmif.h:    CONST_VTBL struct IGetCapabilitiesKeyVtbl *lpVtbl;
3rdparty/include/dshow/strmif.h:#define IGetCapabilitiesKey_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
3rdparty/include/dshow/strmif.h:#define IGetCapabilitiesKey_AddRef(This) (This)->lpVtbl->AddRef(This)
3rdparty/include/dshow/strmif.h:#define IGetCapabilitiesKey_Release(This) (This)->lpVtbl->Release(This)
3rdparty/include/dshow/strmif.h:#define IGetCapabilitiesKey_GetCapabilitiesKey(This,pHKey) (This)->lpVtbl->GetCapabilitiesKey(This,pHKey)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IGetCapabilitiesKey_GetCapabilitiesKey_Proxy(IGetCapabilitiesKey *This,HKEY *pHKey);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IGetCapabilitiesKey_GetCapabilitiesKey_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI IsAvailable(const GUID *Api) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *IsAvailable)(IEncoderAPI *This,const GUID *Api);
3rdparty/include/dshow/strmif.h:#define IEncoderAPI_IsAvailable(This,Api) (This)->lpVtbl->IsAvailable(This,Api)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IEncoderAPI_IsAvailable_Proxy(IEncoderAPI *This,const GUID *Api);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IEncoderAPI_IsAvailable_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *IsAvailable)(IVideoEncoder *This,const GUID *Api);
3rdparty/include/dshow/strmif.h:#define IVideoEncoder_IsAvailable(This,Api) (This)->lpVtbl->IsAvailable(This,Api)
3rdparty/include/dshow/strmif.h:    VariableBitRateAverage,VariableBitRatePeak
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCurrentButton(ULONG *pulButtonsAvailable,ULONG *pulCurrentButton) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCurrentAngle(ULONG *pulAnglesAvailable,ULONG *pulCurrentAngle) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCurrentAudio(ULONG *pulStreamsAvailable,ULONG *pulCurrentStream) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCurrentSubpicture(ULONG *pulStreamsAvailable,ULONG *pulCurrentStream,WINBOOL *pIsDisabled) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCurrentButton)(IDvdInfo *This,ULONG *pulButtonsAvailable,ULONG *pulCurrentButton);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCurrentAngle)(IDvdInfo *This,ULONG *pulAnglesAvailable,ULONG *pulCurrentAngle);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCurrentAudio)(IDvdInfo *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCurrentSubpicture)(IDvdInfo *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream,WINBOOL *pIsDisabled);
3rdparty/include/dshow/strmif.h:#define IDvdInfo_GetCurrentButton(This,pulButtonsAvailable,pulCurrentButton) (This)->lpVtbl->GetCurrentButton(This,pulButtonsAvailable,pulCurrentButton)
3rdparty/include/dshow/strmif.h:#define IDvdInfo_GetCurrentAngle(This,pulAnglesAvailable,pulCurrentAngle) (This)->lpVtbl->GetCurrentAngle(This,pulAnglesAvailable,pulCurrentAngle)
3rdparty/include/dshow/strmif.h:#define IDvdInfo_GetCurrentAudio(This,pulStreamsAvailable,pulCurrentStream) (This)->lpVtbl->GetCurrentAudio(This,pulStreamsAvailable,pulCurrentStream)
3rdparty/include/dshow/strmif.h:#define IDvdInfo_GetCurrentSubpicture(This,pulStreamsAvailable,pulCurrentStream,pIsDisabled) (This)->lpVtbl->GetCurrentSubpicture(This,pulStreamsAvailable,pulCurrentStream,pIsDisabled)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo_GetCurrentButton_Proxy(IDvdInfo *This,ULONG *pulButtonsAvailable,ULONG *pulCurrentButton);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo_GetCurrentAngle_Proxy(IDvdInfo *This,ULONG *pulAnglesAvailable,ULONG *pulCurrentAngle);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo_GetCurrentAudio_Proxy(IDvdInfo *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo_GetCurrentSubpicture_Proxy(IDvdInfo *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream,WINBOOL *pIsDisabled);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCurrentButton(ULONG *pulButtonsAvailable,ULONG *pulCurrentButton) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCurrentAngle(ULONG *pulAnglesAvailable,ULONG *pulCurrentAngle) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCurrentAudio(ULONG *pulStreamsAvailable,ULONG *pulCurrentStream) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetCurrentSubpicture(ULONG *pulStreamsAvailable,ULONG *pulCurrentStream,WINBOOL *pbIsDisabled) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI IsAudioStreamEnabled(ULONG ulStreamNum,WINBOOL *pbEnabled) = 0;
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI IsSubpictureStreamEnabled(ULONG ulStreamNum,WINBOOL *pbEnabled) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCurrentButton)(IDvdInfo2 *This,ULONG *pulButtonsAvailable,ULONG *pulCurrentButton);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCurrentAngle)(IDvdInfo2 *This,ULONG *pulAnglesAvailable,ULONG *pulCurrentAngle);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCurrentAudio)(IDvdInfo2 *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetCurrentSubpicture)(IDvdInfo2 *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream,WINBOOL *pbIsDisabled);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *IsAudioStreamEnabled)(IDvdInfo2 *This,ULONG ulStreamNum,WINBOOL *pbEnabled);
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *IsSubpictureStreamEnabled)(IDvdInfo2 *This,ULONG ulStreamNum,WINBOOL *pbEnabled);
3rdparty/include/dshow/strmif.h:#define IDvdInfo2_GetCurrentButton(This,pulButtonsAvailable,pulCurrentButton) (This)->lpVtbl->GetCurrentButton(This,pulButtonsAvailable,pulCurrentButton)
3rdparty/include/dshow/strmif.h:#define IDvdInfo2_GetCurrentAngle(This,pulAnglesAvailable,pulCurrentAngle) (This)->lpVtbl->GetCurrentAngle(This,pulAnglesAvailable,pulCurrentAngle)
3rdparty/include/dshow/strmif.h:#define IDvdInfo2_GetCurrentAudio(This,pulStreamsAvailable,pulCurrentStream) (This)->lpVtbl->GetCurrentAudio(This,pulStreamsAvailable,pulCurrentStream)
3rdparty/include/dshow/strmif.h:#define IDvdInfo2_GetCurrentSubpicture(This,pulStreamsAvailable,pulCurrentStream,pbIsDisabled) (This)->lpVtbl->GetCurrentSubpicture(This,pulStreamsAvailable,pulCurrentStream,pbIsDisabled)
3rdparty/include/dshow/strmif.h:#define IDvdInfo2_IsAudioStreamEnabled(This,ulStreamNum,pbEnabled) (This)->lpVtbl->IsAudioStreamEnabled(This,ulStreamNum,pbEnabled)
3rdparty/include/dshow/strmif.h:#define IDvdInfo2_IsSubpictureStreamEnabled(This,ulStreamNum,pbEnabled) (This)->lpVtbl->IsSubpictureStreamEnabled(This,ulStreamNum,pbEnabled)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo2_GetCurrentButton_Proxy(IDvdInfo2 *This,ULONG *pulButtonsAvailable,ULONG *pulCurrentButton);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo2_GetCurrentAngle_Proxy(IDvdInfo2 *This,ULONG *pulAnglesAvailable,ULONG *pulCurrentAngle);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo2_GetCurrentAudio_Proxy(IDvdInfo2 *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo2_GetCurrentSubpicture_Proxy(IDvdInfo2 *This,ULONG *pulStreamsAvailable,ULONG *pulCurrentStream,WINBOOL *pbIsDisabled);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo2_IsAudioStreamEnabled_Proxy(IDvdInfo2 *This,ULONG ulStreamNum,WINBOOL *pbEnabled);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IDvdInfo2_IsAudioStreamEnabled_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IDvdInfo2_IsSubpictureStreamEnabled_Proxy(IDvdInfo2 *This,ULONG ulStreamNum,WINBOOL *pbEnabled);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IDvdInfo2_IsSubpictureStreamEnabled_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/strmif.h:    virtual HRESULT WINAPI GetAvailableMonitors(VMRMONITORINFO *pInfo,DWORD dwMaxInfoArraySize,DWORD *pdwNumDevices) = 0;
3rdparty/include/dshow/strmif.h:      HRESULT (WINAPI *GetAvailableMonitors)(IVMRMonitorConfig *This,VMRMONITORINFO *pInfo,DWORD dwMaxInfoArraySize,DWORD *pdwNumDevices);
3rdparty/include/dshow/strmif.h:#define IVMRMonitorConfig_GetAvailableMonitors(This,pInfo,dwMaxInfoArraySize,pdwNumDevices) (This)->lpVtbl->GetAvailableMonitors(This,pInfo,dwMaxInfoArraySize,pdwNumDevices)
3rdparty/include/dshow/strmif.h:  HRESULT WINAPI IVMRMonitorConfig_GetAvailableMonitors_Proxy(IVMRMonitorConfig *This,VMRMONITORINFO *pInfo,DWORD dwMaxInfoArraySize,DWORD *pdwNumDevices);
3rdparty/include/dshow/strmif.h:  void __RPC_STUB IVMRMonitorConfig_GetAvailableMonitors_Stub(IRpcStubBuffer *This,IRpcChannelBuffer *_pRpcChannelBuffer,PRPC_MESSAGE _pRpcMessage,DWORD *_pdwStubPhase);
3rdparty/include/dshow/dvdmedia.h:    AM_MPEG2Profile_SNRScalable,
3rdparty/include/dshow/dvdmedia.h:    AM_MPEG2Profile_SpatiallyScalable,
3rdparty/include/dshow/ddraw.h:/* reserved1, was 3d capable */
3rdparty/include/dshow/ddraw.h:/* surface should be able to receive live video */
3rdparty/include/dshow/ddraw.h:/* should be able to have a hw codec decompress stuff into it */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps;	/* capabilities of surface wanted */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps;	/* capabilities of surface wanted */
3rdparty/include/dshow/ddraw.h:    DWORD   dwCaps2; /* additional capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD   dwCaps3; /* reserved capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps;                 /* driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps2;                /* more driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCKeyCaps;             /* color key capabilities of the surface */
3rdparty/include/dshow/ddraw.h:    DWORD	dwFXCaps;               /* driver specific stretching and effects capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwFXAlphaCaps;          /* alpha driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwPalCaps;              /* palette capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVCaps;               /* stereo vision capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBCaps;              /* driver specific capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBCKeyCaps;          /* driver color key capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBFXCaps;            /* driver FX capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBCaps;              /* driver specific capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBCKeyCaps;          /* driver color key capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBFXCaps;            /* driver FX capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBCaps;              /* driver specific capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBCKeyCaps;          /* driver color key capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBFXCaps;            /* driver FX capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD       dwMaxVideoPorts;        /* maximum number of usable video ports */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwSVBCaps2;             /* more driver specific capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBCaps;             /* driver specific capabilities for non-local->local vidmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBCaps2;            /* more driver specific capabilities non-local->local vidmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBCKeyCaps;         /* driver color key capabilities for non-local->local vidmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBFXCaps;           /* driver FX capabilities for non-local->local blts */
3rdparty/include/dshow/ddraw.h:    DDSCAPS2    ddsCaps;		/* surface capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps;                 /* driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps2;                /* more driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCKeyCaps;             /* color key capabilities of the surface */
3rdparty/include/dshow/ddraw.h:    DWORD	dwFXCaps;               /* driver specific stretching and effects capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwFXAlphaCaps;          /* alpha driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwPalCaps;              /* palette capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVCaps;               /* stereo vision capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBCaps;              /* driver specific capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBCKeyCaps;          /* driver color key capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBFXCaps;            /* driver FX capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBCaps;              /* driver specific capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBCKeyCaps;          /* driver color key capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBFXCaps;            /* driver FX capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBCaps;              /* driver specific capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBCKeyCaps;          /* driver color key capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBFXCaps;            /* driver FX capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD       dwMaxVideoPorts;        /* maximum number of usable video ports */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwSVBCaps2;             /* more driver specific capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBCaps;             /* driver specific capabilities for non-local->local vidmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBCaps2;            /* more driver specific capabilities non-local->local vidmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBCKeyCaps;         /* driver color key capabilities for non-local->local vidmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBFXCaps;           /* driver FX capabilities for non-local->local blts */
3rdparty/include/dshow/ddraw.h:    DDSCAPS2    ddsCaps;		/* surface capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps;                 /* driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps2;                /* more driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCKeyCaps;             /* color key capabilities of the surface */
3rdparty/include/dshow/ddraw.h:    DWORD	dwFXCaps;               /* driver specific stretching and effects capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwFXAlphaCaps;          /* alpha driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwPalCaps;              /* palette capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVCaps;               /* stereo vision capabilities */
3rdparty/include/dshow/ddraw.h:    DDSCAPS	ddsCaps;                /* DDSCAPS structure has all the general capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBCaps;              /* driver specific capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBCKeyCaps;          /* driver color key capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBFXCaps;            /* driver FX capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBCaps;              /* driver specific capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBCKeyCaps;          /* driver color key capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBFXCaps;            /* driver FX capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBCaps;              /* driver specific capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBCKeyCaps;          /* driver color key capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBFXCaps;            /* driver FX capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD       dwMaxVideoPorts;        /* maximum number of usable video ports */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwSVBCaps2;             /* more driver specific capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBCaps;             /* driver specific capabilities for non-local->local vidmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBCaps2;            /* more driver specific capabilities non-local->local vidmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBCKeyCaps;         /* driver color key capabilities for non-local->local vidmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD   	dwNLVBFXCaps;           /* driver FX capabilities for non-local->local blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps;                 /* driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCaps2;                /* more driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwCKeyCaps;             /* color key capabilities of the surface */
3rdparty/include/dshow/ddraw.h:    DWORD	dwFXCaps;               /* driver specific stretching and effects capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwFXAlphaCaps;          /* alpha driver specific capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwPalCaps;              /* palette capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVCaps;               /* stereo vision capabilities */
3rdparty/include/dshow/ddraw.h:    DDSCAPS	ddsCaps;                /* DDSCAPS structure has all the general capabilities */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBCaps;              /* driver specific capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBCKeyCaps;          /* driver color key capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSVBFXCaps;            /* driver FX capabilities for System->Vmem blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBCaps;              /* driver specific capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBCKeyCaps;          /* driver color key capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwVSBFXCaps;            /* driver FX capabilities for Vmem->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBCaps;              /* driver specific capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBCKeyCaps;          /* driver color key capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    DWORD	dwSSBFXCaps;            /* driver FX capabilities for System->System blts */
3rdparty/include/dshow/ddraw.h:    LONG	lColorEnable;
3rdparty/include/dshow/ddraw.h:  char    szDriver[MAX_DDDEVICEID_STRING];	/* user readable driver name */
3rdparty/include/dshow/ddraw.h:  char    szDescription[MAX_DDDEVICEID_STRING]; /* user readable description */
3rdparty/include/dshow/ddraw.h:  DWORD   dwWHQLLevel;				/* Windows Hardware Quality Lab certification level */
3rdparty/include/dshow/ddraw.h:    STDMETHOD(Initialize)(THIS_ LPDIRECTDRAW lpDD, DWORD dwFlags, LPPALETTEENTRY lpDDColorTable) PURE;
3rdparty/include/dshow/ddraw.h:    STDMETHOD(CreatePalette)(THIS_ DWORD dwFlags, LPPALETTEENTRY lpColorTable, LPDIRECTDRAWPALETTE *lplpDDPalette, IUnknown *pUnkOuter) PURE;
3rdparty/include/dshow/ddraw.h:/*14*/    STDMETHOD(CreatePalette)(THIS_ DWORD dwFlags, LPPALETTEENTRY lpColorTable, LPDIRECTDRAWPALETTE *lplpDDPalette, IUnknown *pUnkOuter) PURE;
3rdparty/include/dshow/ddraw.h:/*5c*/    STDMETHOD(GetAvailableVidMem)(THIS_ LPDDSCAPS lpDDCaps, LPDWORD lpdwTotal, LPDWORD lpdwFree) PURE;
3rdparty/include/dshow/ddraw.h:#define IDirectDraw2_GetAvailableVidMem(p,a,b,c) (p)->lpVtbl->GetAvailableVidMem(p,a,b,c)
3rdparty/include/dshow/ddraw.h:#define IDirectDraw2_GetAvailableVidMem(p,a,b,c) (p)->GetAvailableVidMem(a,b,c)
3rdparty/include/dshow/ddraw.h:/*14*/    STDMETHOD(CreatePalette)(THIS_ DWORD dwFlags, LPPALETTEENTRY lpColorTable, LPDIRECTDRAWPALETTE *lplpDDPalette, IUnknown *pUnkOuter) PURE;
3rdparty/include/dshow/ddraw.h:/*5c*/    STDMETHOD(GetAvailableVidMem)(THIS_ LPDDSCAPS lpDDCaps, LPDWORD lpdwTotal, LPDWORD lpdwFree) PURE;
3rdparty/include/dshow/ddraw.h:#define IDirectDraw3_GetAvailableVidMem(p,a,b,c) (p)->lpVtbl->GetAvailableVidMem(p,a,b,c)
3rdparty/include/dshow/ddraw.h:#define IDirectDraw3_GetAvailableVidMem(p,a,b,c) (p)->GetAvailableVidMem(a,b,c)
3rdparty/include/dshow/ddraw.h:/*14*/    STDMETHOD(CreatePalette)(THIS_ DWORD dwFlags, LPPALETTEENTRY lpColorTable, LPDIRECTDRAWPALETTE *lplpDDPalette, IUnknown *pUnkOuter) PURE;
3rdparty/include/dshow/ddraw.h:/*5c*/    STDMETHOD(GetAvailableVidMem)(THIS_ LPDDSCAPS2 lpDDCaps, LPDWORD lpdwTotal, LPDWORD lpdwFree) PURE;
3rdparty/include/dshow/ddraw.h:#define IDirectDraw4_GetAvailableVidMem(p,a,b,c) (p)->lpVtbl->GetAvailableVidMem(p,a,b,c)
3rdparty/include/dshow/ddraw.h:#define IDirectDraw4_GetAvailableVidMem(p,a,b,c) (p)->GetAvailableVidMem(a,b,c)
3rdparty/include/dshow/ddraw.h: * as not interchangeable with earlier DirectDraw interfaces.
3rdparty/include/dshow/ddraw.h:/*14*/    STDMETHOD(CreatePalette)(THIS_ DWORD dwFlags, LPPALETTEENTRY lpColorTable, LPDIRECTDRAWPALETTE *lplpDDPalette, IUnknown *pUnkOuter) PURE;
3rdparty/include/dshow/ddraw.h:/*5c*/    STDMETHOD(GetAvailableVidMem)(THIS_ LPDDSCAPS2 lpDDCaps, LPDWORD lpdwTotal, LPDWORD lpdwFree) PURE;
3rdparty/include/dshow/ddraw.h:#define IDirectDraw7_GetAvailableVidMem(p,a,b,c) (p)->lpVtbl->GetAvailableVidMem(p,a,b,c)
3rdparty/include/dshow/ddraw.h:#define IDirectDraw7_GetAvailableVidMem(p,a,b,c) (p)->GetAvailableVidMem(a,b,c)
3rdparty/include/dshow/ksuuids.h:        0x138aa9a4,0x1ee2,0x4c5b,0x98,0x8e,0x19,0xab,0xfd,0xbc,0x8a,0x11)
3rdparty/include/dshow/ksuuids.h:        0xc830acbd,0xab07,0x492f,0x88,0x52,0x45,0xb6,0x98,0x7c,0x29,0x79)
3rdparty/include/dshow/amvideo.h:    virtual HRESULT STDMETHODCALLTYPE IsModeAvailable(
3rdparty/include/dshow/amvideo.h:    virtual HRESULT STDMETHODCALLTYPE IsModeEnabled(
3rdparty/include/dshow/amvideo.h:    virtual HRESULT STDMETHODCALLTYPE SetEnabled(
3rdparty/include/dshow/amvideo.h:        LONG bEnabled) = 0;
3rdparty/include/dshow/amvideo.h:    HRESULT (STDMETHODCALLTYPE *IsModeAvailable)(
3rdparty/include/dshow/amvideo.h:    HRESULT (STDMETHODCALLTYPE *IsModeEnabled)(
3rdparty/include/dshow/amvideo.h:    HRESULT (STDMETHODCALLTYPE *SetEnabled)(
3rdparty/include/dshow/amvideo.h:        LONG bEnabled);
3rdparty/include/dshow/amvideo.h:#define IFullScreenVideo_IsModeAvailable(This,Mode) (This)->lpVtbl->IsModeAvailable(This,Mode)
3rdparty/include/dshow/amvideo.h:#define IFullScreenVideo_IsModeEnabled(This,Mode) (This)->lpVtbl->IsModeEnabled(This,Mode)
3rdparty/include/dshow/amvideo.h:#define IFullScreenVideo_SetEnabled(This,Mode,bEnabled) (This)->lpVtbl->SetEnabled(This,Mode,bEnabled)
3rdparty/include/dshow/amvideo.h:HRESULT STDMETHODCALLTYPE IFullScreenVideo_IsModeAvailable_Proxy(
3rdparty/include/dshow/amvideo.h:void __RPC_STUB IFullScreenVideo_IsModeAvailable_Stub(
3rdparty/include/dshow/amvideo.h:HRESULT STDMETHODCALLTYPE IFullScreenVideo_IsModeEnabled_Proxy(
3rdparty/include/dshow/amvideo.h:void __RPC_STUB IFullScreenVideo_IsModeEnabled_Stub(
3rdparty/include/dshow/amvideo.h:HRESULT STDMETHODCALLTYPE IFullScreenVideo_SetEnabled_Proxy(
3rdparty/include/dshow/amvideo.h:    LONG bEnabled);
3rdparty/include/dshow/amvideo.h:void __RPC_STUB IFullScreenVideo_SetEnabled_Stub(
3rdparty/include/dshow/amvideo.h:    virtual HRESULT STDMETHODCALLTYPE SetAcceleratorTable(
3rdparty/include/dshow/amvideo.h:    virtual HRESULT STDMETHODCALLTYPE GetAcceleratorTable(
3rdparty/include/dshow/amvideo.h:    HRESULT (STDMETHODCALLTYPE *IsModeAvailable)(
3rdparty/include/dshow/amvideo.h:    HRESULT (STDMETHODCALLTYPE *IsModeEnabled)(
3rdparty/include/dshow/amvideo.h:    HRESULT (STDMETHODCALLTYPE *SetEnabled)(
3rdparty/include/dshow/amvideo.h:        LONG bEnabled);
3rdparty/include/dshow/amvideo.h:    HRESULT (STDMETHODCALLTYPE *SetAcceleratorTable)(
3rdparty/include/dshow/amvideo.h:    HRESULT (STDMETHODCALLTYPE *GetAcceleratorTable)(
3rdparty/include/dshow/amvideo.h:#define IFullScreenVideoEx_IsModeAvailable(This,Mode) (This)->lpVtbl->IsModeAvailable(This,Mode)
3rdparty/include/dshow/amvideo.h:#define IFullScreenVideoEx_IsModeEnabled(This,Mode) (This)->lpVtbl->IsModeEnabled(This,Mode)
3rdparty/include/dshow/amvideo.h:#define IFullScreenVideoEx_SetEnabled(This,Mode,bEnabled) (This)->lpVtbl->SetEnabled(This,Mode,bEnabled)
3rdparty/include/dshow/amvideo.h:#define IFullScreenVideoEx_SetAcceleratorTable(This,hwnd,hAccel) (This)->lpVtbl->SetAcceleratorTable(This,hwnd,hAccel)
3rdparty/include/dshow/amvideo.h:#define IFullScreenVideoEx_GetAcceleratorTable(This,phwnd,phAccel) (This)->lpVtbl->GetAcceleratorTable(This,phwnd,phAccel)
3rdparty/include/dshow/amvideo.h:HRESULT STDMETHODCALLTYPE IFullScreenVideoEx_SetAcceleratorTable_Proxy(
3rdparty/include/dshow/amvideo.h:void __RPC_STUB IFullScreenVideoEx_SetAcceleratorTable_Stub(
3rdparty/include/dshow/amvideo.h:HRESULT STDMETHODCALLTYPE IFullScreenVideoEx_GetAcceleratorTable_Proxy(
3rdparty/include/dshow/amvideo.h:void __RPC_STUB IFullScreenVideoEx_GetAcceleratorTable_Stub(
3rdparty/include/dshow/dsound.h:#define DSBCAPS_CTRLALL             0x000001F0  /* All control capabilities */
3rdparty/include/msc_stdint.h://   1. Redistributions of source code must retain the above copyright notice,
3rdparty/include/msc_stdint.h://   2. Redistributions in binary form must reproduce the above copyright
3rdparty/include/msc_stdint.h:// 7.18.1.4 Integer types capable of holding object pointers
3rdparty/include/msc_stdint.h:// 7.18.2.4 Limits of integer types capable of holding object pointers
3rdparty/include/opencl/1.2/CL/cl_gl.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/cl_egl.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/opencl.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/cl.hpp: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/cl.hpp: * reasonable to define C++ bindings for OpenCL.
3rdparty/include/opencl/1.2/CL/cl.hpp:    (void) errStr; // suppress unused variable warning
3rdparty/include/opencl/1.2/CL/cl.hpp:     * exception if exceptions are enabled.
3rdparty/include/opencl/1.2/CL/cl.hpp:     * if exceptions are enabled.
3rdparty/include/opencl/1.2/CL/cl.hpp:     *  Will throw an exception if exceptions are enabled and size exceeded.
3rdparty/include/opencl/1.2/CL/cl.hpp:    F(cl_device_info, CL_DEVICE_EXECUTION_CAPABILITIES, cl_device_exec_capabilities) \
3rdparty/include/opencl/1.2/CL/cl.hpp:    // The platform cannot be queried directly, so we first have to grab a
3rdparty/include/opencl/1.2/CL/cl.hpp:    bool referenceCountable_;
3rdparty/include/opencl/1.2/CL/cl.hpp:    static bool isReferenceCountable(cl_device_id device)
3rdparty/include/opencl/1.2/CL/cl.hpp:    Wrapper() : object_(NULL), referenceCountable_(false) 
3rdparty/include/opencl/1.2/CL/cl.hpp:    Wrapper(const cl_type &obj) : object_(obj), referenceCountable_(false) 
3rdparty/include/opencl/1.2/CL/cl.hpp:        referenceCountable_ = isReferenceCountable(obj); 
3rdparty/include/opencl/1.2/CL/cl.hpp:        referenceCountable_ = isReferenceCountable(object_); 
3rdparty/include/opencl/1.2/CL/cl.hpp:        referenceCountable_ = rhs.referenceCountable_;
3rdparty/include/opencl/1.2/CL/cl.hpp:        referenceCountable_ = isReferenceCountable(object_); 
3rdparty/include/opencl/1.2/CL/cl.hpp:        if( referenceCountable_ ) {
3rdparty/include/opencl/1.2/CL/cl.hpp:        if( referenceCountable_ ) {
3rdparty/include/opencl/1.2/CL/cl.hpp:   /*! \brief Get the list of available D3D10 devices.
3rdparty/include/opencl/1.2/CL/cl.hpp:     *  The application can query specific capabilities of the OpenCL device(s)
3rdparty/include/opencl/1.2/CL/cl.hpp:     * \note In the case that exceptions are enabled and a return value
3rdparty/include/opencl/1.2/CL/cl.hpp:    /*! \brief Gets a list of available platforms.
3rdparty/include/opencl/1.2/CL/cl.hpp:    /*! \brief Gets the first available platform.
3rdparty/include/opencl/1.2/CL/cl.hpp:    /*! \brief Gets the first available platform, returning it by value.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Event for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  This is provided to facilitate interoperability with Direct3D.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  This is provided to facilitate interoperability with OpenGL.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  This is provided to facilitate interoperability with OpenGL.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp:            useCreateImage = (version >= 0x10002); // OpenCL 1.2 or above
3rdparty/include/opencl/1.2/CL/cl.hpp: *  This is provided to facilitate interoperability with OpenGL.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp:            useCreateImage = (version >= 0x10002); // OpenCL 1.2 or above
3rdparty/include/opencl/1.2/CL/cl.hpp: *  This is provided to facilitate interoperability with OpenGL.
3rdparty/include/opencl/1.2/CL/cl.hpp: *  See Memory for details about copy semantics, etc.
3rdparty/include/opencl/1.2/CL/cl.hpp: * We abstract the 2D and 3D GL images into a single instance here
3rdparty/include/opencl/1.2/CL/cl.hpp:    // if exceptions enabled, enqueueMapBuffer will throw
3rdparty/include/opencl/1.2/CL/cl.hpp:    // if exceptions enabled, enqueueUnmapMemObject will throw
3rdparty/include/opencl/1.2/CL/cl.hpp:    // if exceptions enabled, enqueueMapBuffer will throw
3rdparty/include/opencl/1.2/CL/cl.hpp:    // if exceptions enabled, enqueueUnmapMemObject will throw
3rdparty/include/opencl/1.2/CL/cl_dx9_media_sharing.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/cl_d3d11.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/cl.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/cl.h:typedef cl_bitfield         cl_device_exec_capabilities;
3rdparty/include/opencl/1.2/CL/cl.h:/* cl_device_exec_capabilities - bitfield */
3rdparty/include/opencl/1.2/CL/cl_d3d10.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/cl_platform.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/cl_platform.h:    #include <AvailabilityMacros.h>
3rdparty/include/opencl/1.2/CL/cl_platform.h:        #warning  This path should never happen outside of internal operating system development.  AvailabilityMacros do not function correctly here!
3rdparty/include/opencl/1.2/CL/cl_ext.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/opencl/1.2/CL/cl_ext.h:    #include <AvailabilityMacros.h>
3rdparty/include/opencl/1.2/CL/cl_ext.h: * Standard Portable Intermediate Representation (SPIR) instance
3rdparty/include/opencl/1.2/CL/cl_gl_ext.h: * The above copyright notice and this permission notice shall be included
3rdparty/include/msc_inttypes.h://   1. Redistributions of source code must retain the above copyright notice,
3rdparty/include/msc_inttypes.h://   2. Redistributions in binary form must reproduce the above copyright
3rdparty/include/msc_inttypes.h:// 7.8.2.1 The imaxabs function
3rdparty/include/msc_inttypes.h:#define imaxabs _abs64
doc/tutorials/imgproc/imgtrans/distance_transformation/distance_transform.markdown:-#  We are ready now to apply the Distance Tranform on the binary image. Moreover, we normalize the output image in order to be able visualize and threshold the result:
doc/tutorials/imgproc/imgtrans/distance_transformation/distance_transform.markdown:-#  We threshold the *dist* image and then perform some morphology operation (i.e. dilation) in order to extract the peaks from the above image:
Binary file doc/tutorials/imgproc/imgtrans/distance_transformation/images/laplace.jpeg matches
Binary file doc/tutorials/imgproc/imgtrans/distance_transformation/images/peaks.jpeg matches
Binary file doc/tutorials/imgproc/imgtrans/distance_transformation/images/markers.jpeg matches
Binary file doc/tutorials/imgproc/imgtrans/distance_transformation/images/final.jpeg matches
Binary file doc/tutorials/imgproc/imgtrans/distance_transformation/images/source.jpeg matches
Binary file doc/tutorials/imgproc/imgtrans/distance_transformation/images/black_bg.jpeg matches
Binary file doc/tutorials/imgproc/imgtrans/distance_transformation/images/bin.jpeg matches
doc/tutorials/imgproc/imgtrans/copyMakeBorder/copyMakeBorder.markdown:-#  First we declare the variables we are going to use:
doc/tutorials/imgproc/imgtrans/copyMakeBorder/copyMakeBorder.markdown:    Especial attention deserves the variable *rng* which is a random number generator. We use it to
doc/tutorials/imgproc/imgtrans/copyMakeBorder/copyMakeBorder.markdown:-#  The program begins a *while* loop. If the user presses 'c' or 'r', the *borderType* variable
doc/tutorials/imgproc/imgtrans/copyMakeBorder/copyMakeBorder.markdown:-#  In each iteration (after 0.5 seconds), the variable *value* is updated...
doc/tutorials/imgproc/imgtrans/copyMakeBorder/copyMakeBorder.markdown:    with a random value generated by the **RNG** variable *rng*. This value is a number picked
doc/tutorials/imgproc/imgtrans/copyMakeBorder/copyMakeBorder.markdown:-#  After compiling the code above, you can execute it giving as argument the path of an image. The
Binary file doc/tutorials/imgproc/imgtrans/laplace_operator/images/Laplace_Operator_Tutorial_Result.jpg matches
doc/tutorials/imgproc/imgtrans/laplace_operator/laplace_operator.markdown:-#  From the explanation above, we deduce that the second derivative can be used to *detect edges*.
doc/tutorials/imgproc/imgtrans/laplace_operator/laplace_operator.markdown:-#  Create some needed variables:
doc/tutorials/imgproc/imgtrans/laplace_operator/laplace_operator.markdown:    convertScaleAbs( dst, abs_dst );
doc/tutorials/imgproc/imgtrans/laplace_operator/laplace_operator.markdown:    imshow( window_name, abs_dst );
doc/tutorials/imgproc/imgtrans/laplace_operator/laplace_operator.markdown:-#  After compiling the code above, we can run it giving as argument the path to an image. For
doc/tutorials/imgproc/imgtrans/canny_detector/canny_detector.markdown:        connected to a pixel that is above the *upper* threshold.
doc/tutorials/imgproc/imgtrans/canny_detector/canny_detector.markdown:-#  Create some needed variables:
doc/tutorials/imgproc/imgtrans/canny_detector/canny_detector.markdown:    -#  We establish a ratio of lower:upper threshold of 3:1 (with the variable *ratio*)
doc/tutorials/imgproc/imgtrans/canny_detector/canny_detector.markdown:    -#  The variable to be controlled by the Trackbar is *lowThreshold* with a limit of
doc/tutorials/imgproc/imgtrans/canny_detector/canny_detector.markdown:-   After compiling the code above, we can run it giving as argument the path to an image. For
Binary file doc/tutorials/imgproc/imgtrans/canny_detector/images/Canny_Detector_Tutorial_Result.jpg matches
doc/tutorials/imgproc/imgtrans/warp_affine/warp_affine.markdown:-#  From the above, We can use an Affine Transformation to express:
doc/tutorials/imgproc/imgtrans/warp_affine/warp_affine.markdown:    between two images. The information about this relation can come, roughly, in two ways:
doc/tutorials/imgproc/imgtrans/warp_affine/warp_affine.markdown:-#  Declare some variables we will use, such as the matrices to store our results and 2 arrays of
doc/tutorials/imgproc/imgtrans/warp_affine/warp_affine.markdown:-#  **Affine Transform:** As we explained lines above, we need two sets of 3 points to derive the
doc/tutorials/imgproc/imgtrans/warp_affine/warp_affine.markdown:-#  After compiling the code above, we can give it the path of an image as argument. For instance,
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:-# To apply the Transform, first an edge detection pre-processing is desirable.
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:-#  As you know, a line in the image space can be expressed with two variables. For example:
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:-#  We can do the same operation above for all the points in an image. If the curves of two
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:    same line. For instance, following with the example above and drawing the plot for two more
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:-#  What does all the stuff above mean? It means that in general, a line can be *detected* by
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:    every point in the image. If the number of intersections is above some *threshold*, then it
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:### Standard and Probabilistic Hough Line Transform
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:b.  **The Probabilistic Hough Line Transform**
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:    -   Applies either a *Standard Hough Line Transform* or a *Probabilistic Line Transform*.
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:    (which shows both Hough standard and probabilistic with trackbars for changing the threshold
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:    available for this purpose:
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:-#  **Probabilistic Hough Line Transform**
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:    section. It still implements the same stuff as above, only adding the Trackbar for the
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:We get the following result by using the Probabilistic Hough Line Transform:
doc/tutorials/imgproc/imgtrans/hough_lines/hough_lines.markdown:explanation is sort of evident: If you establish a higher threshold, fewer lines will be detected
Binary file doc/tutorials/imgproc/imgtrans/hough_lines/images/Hough_Lines_Tutorial_Original_Image.jpg matches
doc/tutorials/imgproc/imgtrans/remap/remap.markdown:-#  Create some variables we will use:
doc/tutorials/imgproc/imgtrans/remap/remap.markdown:-#  Establish a loop. Each 1000 ms we update our mapping matrices (*mat_x* and *mat_y*) and apply
doc/tutorials/imgproc/imgtrans/remap/remap.markdown:    -   **map_y**: Same as above, but in y direction. Note that *map_y* and *map_x* are both of
doc/tutorials/imgproc/imgtrans/remap/remap.markdown:-#  After compiling the code above, you can execute it giving as argument an image path. For
Binary file doc/tutorials/imgproc/imgtrans/remap/images/Remap_Tutorial_Theory_0.jpg matches
Binary file doc/tutorials/imgproc/imgtrans/remap/images/Remap_Tutorial_Result_3.jpg matches
doc/tutorials/imgproc/imgtrans/sobel_derivatives/sobel_derivatives.markdown:-#  So, from the explanation above, we can deduce that a method to detect edges in an image can be
doc/tutorials/imgproc/imgtrans/sobel_derivatives/sobel_derivatives.markdown:    combining both results above:
doc/tutorials/imgproc/imgtrans/sobel_derivatives/sobel_derivatives.markdown:    When the size of the kernel is `3`, the Sobel kernel shown above may produce noticeable
doc/tutorials/imgproc/imgtrans/sobel_derivatives/sobel_derivatives.markdown:    Also, in the sample code below, you will notice that above the code for @ref cv::Sobel function
doc/tutorials/imgproc/imgtrans/sobel_derivatives/sobel_derivatives.markdown:-#  First we declare the variables we are going to use:
doc/tutorials/imgproc/imgtrans/sobel_derivatives/sobel_derivatives.markdown:    Mat abs_grad_x, abs_grad_y;
doc/tutorials/imgproc/imgtrans/sobel_derivatives/sobel_derivatives.markdown:    convertScaleAbs( grad_x, abs_grad_x );
doc/tutorials/imgproc/imgtrans/sobel_derivatives/sobel_derivatives.markdown:    convertScaleAbs( grad_y, abs_grad_y );
doc/tutorials/imgproc/imgtrans/sobel_derivatives/sobel_derivatives.markdown:    addWeighted( abs_grad_x, 0.5, abs_grad_y, 0.5, 0, grad );
Binary file doc/tutorials/imgproc/imgtrans/sobel_derivatives/images/Sobel_Derivatives_Tutorial_Result.jpg matches
doc/tutorials/imgproc/imgtrans/hough_circle/hough_circle.markdown:    -   *HOUGH_GRADIENT*: Define the detection method. Currently this is the only one available in
doc/tutorials/imgproc/imgtrans/hough_circle/hough_circle.markdown:The result of running the code above with a test image is shown below:
doc/tutorials/imgproc/imgtrans/filter_2d/filter_2d.markdown:Expressing the procedure above in the form of an equation we would have:
doc/tutorials/imgproc/imgtrans/filter_2d/filter_2d.markdown:  /// Declare variables
doc/tutorials/imgproc/imgtrans/filter_2d/filter_2d.markdown:-#  After compiling the code above, you can execute it giving as argument the path of an image. The
Binary file doc/tutorials/imgproc/shapedescriptors/bounding_rotated_ellipses/images/Bounding_Rotated_Ellipses_Source_Image.jpg matches
Binary file doc/tutorials/imgproc/shapedescriptors/bounding_rects_circles/images/Bounding_Rects_Circles_Source_Image.jpg matches
doc/tutorials/imgproc/opening_closing_hats/opening_closing_hats.markdown:/// Global variables
doc/tutorials/imgproc/opening_closing_hats/opening_closing_hats.markdown:-   After compiling the code above we can execute it giving an image path as an argument. For this
doc/tutorials/imgproc/opening_closing_hats/opening_closing_hats.markdown:    tutorial we use as input the image: **baboon.png**:
Binary file doc/tutorials/imgproc/opening_closing_hats/images/Morphology_2_Tutorial_Original_Image.jpg matches
doc/tutorials/imgproc/table_of_content_imgproc.markdown:Image Processing (imgproc module) {#tutorial_table_of_content_imgproc}
doc/tutorials/imgproc/table_of_content_imgproc.markdown:In this section you will learn about the image processing (manipulation) functions inside OpenCV.
doc/tutorials/imgproc/table_of_content_imgproc.markdown:    Where we learn about the *Laplace* operator and how to detect edges with it.
doc/tutorials/imgproc/threshold/threshold.markdown:            comment section of the function above.
Binary file doc/tutorials/imgproc/threshold/images/Threshold_Tutorial_Cover.jpg matches
doc/tutorials/imgproc/erosion_dilatation/erosion_dilatation.markdown:    name *dilation*). Take as an example the image above. Applying dilation we can get:
doc/tutorials/imgproc/erosion_dilatation/erosion_dilatation.markdown:    (shown above). You can see in the result below that the bright areas of the image (the
doc/tutorials/imgproc/erosion_dilatation/erosion_dilatation.markdown:Compile the code above and execute it with an image as argument. For instance, using this image:
doc/tutorials/imgproc/histograms/histogram_comparison/histogram_comparison.markdown:-   **Downloadable code**: Click
doc/tutorials/imgproc/histograms/histogram_comparison/histogram_comparison.markdown:-#  Declare variables such as the matrices to store the base image and the two other images to
doc/tutorials/imgproc/histograms/histogram_calculation/histogram_calculation.markdown:@note In the last tutorial (@ref tutorial_histogram_equalization) we talked about a particular kind of
doc/tutorials/imgproc/histograms/histogram_calculation/histogram_calculation.markdown:    this to the example above we get the image below ( axis x represents the bins and axis y the
doc/tutorials/imgproc/histograms/histogram_calculation/histogram_calculation.markdown:-   **Downloadable code**: Click
doc/tutorials/imgproc/histograms/histogram_calculation/histogram_calculation.markdown:    -#  Establish number of bins (5, 10...):
doc/tutorials/imgproc/histograms/histogram_calculation/histogram_calculation.markdown:    -   **NORM_MINMAX:** Argument that indicates the type of normalization (as described above, it
Binary file doc/tutorials/imgproc/histograms/histogram_calculation/images/Histogram_Calculation_Theory_Hist0.jpg matches
doc/tutorials/imgproc/histograms/back_projection/back_projection.markdown:    -#  Applying the steps above, we get the following BackProjection image for our Test Image:
doc/tutorials/imgproc/histograms/back_projection/back_projection.markdown:    -#  In terms of statistics, the values stored in *BackProjection* represent the *probability*
doc/tutorials/imgproc/histograms/back_projection/back_projection.markdown:        use. For instance in our Test image, the brighter areas are more probable to be skin area
doc/tutorials/imgproc/histograms/back_projection/back_projection.markdown:        (as they actually are), whereas the darker areas have less probability (notice that these
doc/tutorials/imgproc/histograms/back_projection/back_projection.markdown:-   **Downloadable code**:
doc/tutorials/imgproc/histograms/back_projection/back_projection.markdown:    code in the links above if you want to use the more standard H-S histogram, which yields better
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:    the image above is the result **R** of sliding the patch with a metric **TM_CCORR_NORMED**.
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:    red circle is probably the one with the highest value, so that location (the rectangle formed by
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:### Which are the matching methods available in OpenCV?
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:available methods are 6:
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:    -   Localize the location with higher matching probability
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:-   **Downloadable code**: Click
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:-#  Declare some global variables, such as the image, template and result matrices, as well as the
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:    char* trackbar_label = "Method: \n 0: SQDIFF \n 1: SQDIFF NORMED \n 2: TM CCORR \n 3: TM CCORR NORMED \n 4: TM COEFF \n 5: TM COEFF NORMED";
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:    createTrackbar( trackbar_label, image_window, &match_method, max_Trackbar, MatchingMethod );
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:    -   **&minVal** and **&maxVal:** Variables to save the minimum and maximum values in **result**
doc/tutorials/imgproc/histograms/template_matching/template_matching.markdown:    corresponding value in the **matchLoc** variable:
Binary file doc/tutorials/imgproc/histograms/template_matching/images/Template_Matching_Image_Result.jpg matches
Binary file doc/tutorials/imgproc/histograms/template_matching/images/Template_Matching_Template_Theory_Summary.jpg matches
Binary file doc/tutorials/imgproc/histograms/template_matching/images/Template_Matching_Template_Theory_Sliding.jpg matches
Binary file doc/tutorials/imgproc/histograms/template_matching/images/Template_Matching_Original_Image.jpg matches
Binary file doc/tutorials/imgproc/histograms/template_matching/images/Template_Matching_Correl_Result_5.jpg matches
Binary file doc/tutorials/imgproc/histograms/template_matching/images/Template_Matching_Correl_Result_4.jpg matches
Binary file doc/tutorials/imgproc/histograms/histogram_equalization/images/Histogram_Equalization_Original_Image.jpg matches
Binary file doc/tutorials/imgproc/histograms/histogram_equalization/images/Histogram_Equalization_Theory_0.jpg matches
Binary file doc/tutorials/imgproc/histograms/histogram_equalization/images/Histogram_Equalization_Equalized_Image.jpg matches
doc/tutorials/imgproc/histograms/histogram_equalization/histogram_equalization.markdown:-   To make it clearer, from the image above, you can see that the pixels seem clustered around the
doc/tutorials/imgproc/histograms/histogram_equalization/histogram_equalization.markdown:    middle of the available range of intensities. What Histogram Equalization does is to *stretch
doc/tutorials/imgproc/histograms/histogram_equalization/histogram_equalization.markdown:    is 255 ( or the maximum value for the intensity of the image ). From the example above, the
doc/tutorials/imgproc/histograms/histogram_equalization/histogram_equalization.markdown:-   **Downloadable code**: Click
doc/tutorials/imgproc/histograms/histogram_equalization/histogram_equalization.markdown:Are you wondering how did we draw the Histogram figures shown above? Check out the following
doc/tutorials/imgproc/morph_lines_detection/moprh_lines_detection.md:As it can be seen above and in general in any morphological operation the structuring element used to probe the input image, is the most important part.
doc/tutorials/imgproc/pyramids/pyramids.markdown:-   The procedure above was useful to downsample an image. What if we want to make it bigger?:
doc/tutorials/imgproc/pyramids/pyramids.markdown:    -   Perform a convolution with the same kernel shown above (multiplied by 4) to approximate the
doc/tutorials/imgproc/pyramids/pyramids.markdown:-   These two procedures (downsampling and upsampling as explained above) are implemented by the
doc/tutorials/imgproc/pyramids/pyramids.markdown:-   After compiling the code above we can test it. The program calls an image **chicky_512.jpg**
Binary file doc/tutorials/imgproc/pyramids/images/Pyramids_Tutorial_Original_Image.jpg matches
Binary file doc/tutorials/imgproc/images/imgtrans/Canny_Detector_Tutorial_Cover.jpg matches
Binary file doc/tutorials/imgproc/images/imgtrans/Sobel_Derivatives_Tutorial_Cover.jpg matches
doc/tutorials/imgproc/gausian_median_blur_bilateral_filter/gausian_median_blur_bilateral_filter.markdown:-   Probably the most useful filter (although not the fastest). Gaussian filtering is done by
doc/tutorials/imgproc/gausian_median_blur_bilateral_filter/gausian_median_blur_bilateral_filter.markdown:    variables \f$x\f$ and \f$y\f$)
doc/tutorials/imgproc/gausian_median_blur_bilateral_filter/gausian_median_blur_bilateral_filter.markdown:-   **Downloadable code**: Click
doc/tutorials/imgproc/gausian_median_blur_bilateral_filter/gausian_median_blur_bilateral_filter.markdown:/// Global Variables
doc/tutorials/viz/table_of_content_viz.markdown:OpenCV Viz {#tutorial_table_of_content_viz}
Binary file doc/tutorials/viz/images/facedetect.jpg matches
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_introduction
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_core
doc/tutorials/tutorials.markdown:    the about the basic building blocks of the library. A must read and know for understanding how
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_imgproc
doc/tutorials/tutorials.markdown:    you will learn about the image processing (manipulation) functions inside OpenCV.
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_highgui
doc/tutorials/tutorials.markdown:    contains valuable tutorials about how to read/save your image/video files and how to use the
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_calib3d
doc/tutorials/tutorials.markdown:    out from the 2D images information about the 3D world.
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_features2d
doc/tutorials/tutorials.markdown:    Learn about how
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_video
doc/tutorials/tutorials.markdown:    to find algorithms usable on your video streams like: motion extraction, feature tracking and
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_objdetect
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_ml
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_photo
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_gpu
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_ios
doc/tutorials/tutorials.markdown:-   @subpage tutorial_table_of_content_viz
doc/tutorials/gpu/table_of_content_gpu.markdown:GPU-Accelerated Computer Vision (cuda module) {#tutorial_table_of_content_gpu}
doc/tutorials/gpu/gpu-basics-similarity/gpu_basics_similarity.markdown:Once you have your data up in the GPU memory you may call GPU enabled functions of OpenCV. Most of
doc/tutorials/gpu/gpu-basics-similarity/gpu_basics_similarity.markdown:implementation where for the *absdiff* method the value of the neighbors is not important. However,
doc/tutorials/gpu/gpu-basics-similarity/gpu_basics_similarity.markdown:this knowledge you can already make a GPU viable code (like mine GPU one) and run it. You'll be
doc/tutorials/gpu/gpu-basics-similarity/gpu_basics_similarity.markdown:-#  Memory allocation on the GPU is considerable. Therefore, if it’s possible allocate new memory as
doc/tutorials/gpu/gpu-basics-similarity/gpu_basics_similarity.markdown:    do this you create a data structure containing all the local variables you will use. For
Binary file doc/tutorials/gpu/images/gpu-basics-similarity.png matches
doc/tutorials/gpu/gpu-thrust-interop/gpu_thrust_interop.markdown:Our goal is to have an iterator that will start at the beginning of the matrix, and increment correctly to access continuous matrix elements.  This is trivial for a continuous row, but how about for a column of a pitched matrix?  To do this we need the iterator to be aware of the matrix dimensions and step.  This information is embedded in the step_functor.
doc/tutorials/core/adding_images/adding_images.markdown:    In this case, `gamma` is the argument \f$0.0\f$ in the code above.
doc/tutorials/core/random_generator_and_text/random_generator_and_text.markdown:-   This code is in your OpenCV sample folder. Otherwise you can grab it from
doc/tutorials/core/random_generator_and_text/random_generator_and_text.markdown:        -   We know that **rng** is a *Random number generator* object. In the code above we are
doc/tutorials/core/random_generator_and_text/random_generator_and_text.markdown:        -   From the explanation above, we deduce that the extremes *pt1* and *pt2* will be random
doc/tutorials/core/random_generator_and_text/random_generator_and_text.markdown:            values, so the lines positions will be quite impredictable, giving a nice visual effect
doc/tutorials/core/random_generator_and_text/random_generator_and_text.markdown:-#  The explanation above applies for the other functions generating circles, ellipses, polygons,
Binary file doc/tutorials/core/random_generator_and_text/images/Drawing_2_Tutorial_Result_big.jpg matches
Binary file doc/tutorials/core/random_generator_and_text/images/Drawing_2_Tutorial_Result_0.jpg matches
Binary file doc/tutorials/core/how_to_use_ippa_conversion/images/How_To_Use_IPPA_Result.jpg matches
doc/tutorials/core/how_to_use_ippa_conversion/how_to_use_ippa_conversion.markdown:After compiling the code above we can execute it giving an image or video path and accelerator type
doc/tutorials/core/how_to_use_ippa_conversion/how_to_use_ippa_conversion.markdown:as an argument. For this tutorial we use baboon.png image as input. The result is below.
doc/tutorials/core/discrete_fourier_transform/discrete_fourier_transform.markdown:about the images geometric structure. Nevertheless, if you intend to make some modifications of the
doc/tutorials/core/discrete_fourier_transform/discrete_fourier_transform.markdown:                                          // viewable image form (float between values 0 and 1).
doc/tutorials/core/discrete_fourier_transform/discrete_fourier_transform.markdown:image about a text.
doc/tutorials/core/mat_the_basic_image_container/mat_the_basic_image_container.markdown:For example in the above image you can see that the mirror of the car is nothing more than a matrix
doc/tutorials/core/mat_the_basic_image_container/mat_the_basic_image_container.markdown:the table all the minuses of the C language. The biggest issue is the manual memory management. It
doc/tutorials/core/mat_the_basic_image_container/mat_the_basic_image_container.markdown:The first thing you need to know about *Mat* is that you no longer need to manually allocate its
doc/tutorials/core/mat_the_basic_image_container/mat_the_basic_image_container.markdown:that we are talking about image processing algorithms, which tend to be quite computational heavy.
doc/tutorials/core/mat_the_basic_image_container/mat_the_basic_image_container.markdown:All the above objects, in the end, point to the same single data matrix. Their headers are
doc/tutorials/core/mat_the_basic_image_container/mat_the_basic_image_container.markdown:-   You do not need to think about memory management with OpenCVs C++ interface.
doc/tutorials/core/mat_the_basic_image_container/mat_the_basic_image_container.markdown:This is about how you store the pixel values. You can select the color space and the data type used.
doc/tutorials/core/mat_the_basic_image_container/mat_the_basic_image_container.markdown:    @snippet mat_the_basic_image_container.cpp matlab
doc/tutorials/core/mat_the_basic_image_container/mat_the_basic_image_container.markdown:In the above examples you could see the default formatting option. OpenCV, however, allows you to
doc/tutorials/core/table_of_content_core.markdown:The Core Functionality (core module) {#tutorial_table_of_content_core}
doc/tutorials/core/table_of_content_core.markdown:Here you will learn the about the basic building blocks of the library. A must read and know for
doc/tutorials/core/table_of_content_core.markdown:-   @subpage tutorial_interoperability_with_OpenCV_1
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:How to scan images, lookup tables and time measurement with OpenCV {#tutorial_how_to_scan_images}
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:-   What are lookup tables and why use them?
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:the assignment just make the assignment, by using a lookup table. Lookup tables are simple arrays
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:the BGR color space is used. The first thing is to calculate the lookup table.
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:to an integer format. Then we use a simple look and the upper formula to calculate the lookup table.
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:    *p++ = table[*p];
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:get the same performance result (as most of the modern compilers will probably make this small
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:simple *uchar* iterator you'll be able to access only the blue channel values.
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:This is a bonus method of achieving lookup table modification in an image. Because in image
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:lookup table:
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:@snippet how_to_scan_images.cpp table-init
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:@snippet how_to_scan_images.cpp table-use
doc/tutorials/core/how_to_scan_images/how_to_scan_images.markdown:library is multi-thread enabled via Intel Threaded Building Blocks. However, if you need to write a
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:Interoperability with OpenCV 1 {#tutorial_interoperability_with_OpenCV_1}
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:thinking about methods that will ease your work process, while still maintain the libraries
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:-   What are lookup tables and why use them?
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:When making the switch you first need to learn some about the new data structure for images:
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:Now that you have the basics done [here's](https://github.com/Itseez/opencv/tree/master/samples/cpp/tutorial_code/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.cpp)
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:`samples/cpp/tutorial_code/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.cpp` .
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:@snippet interoperability_with_OpenCV_1.cpp head
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:@snippet interoperability_with_OpenCV_1.cpp start
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:@snippet interoperability_with_OpenCV_1.cpp new
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:@snippet interoperability_with_OpenCV_1.cpp scanning
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:@snippet interoperability_with_OpenCV_1.cpp noisy
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:As you may observe the *planes* variable is of type *Mat*. However, converting from *Mat* to
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:@snippet interoperability_with_OpenCV_1.cpp end
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:](https://github.com/Itseez/opencv/tree/master/samples/cpp/tutorial_code/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.cpp)
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:`samples/cpp/tutorial_code/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.cpp`
doc/tutorials/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.markdown:<iframe title="Interoperability with OpenCV 1" width="560" height="349" src="http://www.youtube.com/embed/qckm-zvo31w?rel=0&loop=1" frameborder="0" allowfullscreen align="middle"></iframe>
doc/tutorials/core/file_input_output_with_xml_yml/file_input_output_with_xml_yml.markdown:Here we talk only about XML and YAML file inputs. Your output (and its respective input) file may
doc/tutorials/core/file_input_output_with_xml_yml/file_input_output_with_xml_yml.markdown:    you'll be able to on them: WRITE, READ or APPEND. The extension specified in the file name also
doc/tutorials/core/file_input_output_with_xml_yml/file_input_output_with_xml_yml.markdown:    output maps and sequences (array, vector) too. Again we first print the name of the variable and
doc/tutorials/core/file_input_output_with_xml_yml/file_input_output_with_xml_yml.markdown:    fs << "image1.jpg" << "Awesomeness" << "baboon.jpg";
doc/tutorials/core/file_input_output_with_xml_yml/file_input_output_with_xml_yml.markdown:baboon.jpg
doc/tutorials/core/file_input_output_with_xml_yml/file_input_output_with_xml_yml.markdown:  image1.jpg Awesomeness baboon.jpg</strings>
doc/tutorials/core/file_input_output_with_xml_yml/file_input_output_with_xml_yml.markdown:   - "baboon.jpg"
doc/tutorials/core/basic_geometric_drawing/basic_geometric_drawing.markdown:-   This code is in your OpenCV sample folder. Otherwise you can grab it from
doc/tutorials/core/basic_geometric_drawing/basic_geometric_drawing.markdown:        From the code above, we can observe that the function @ref cv::ellipse draws an ellipse such
doc/tutorials/core/basic_linear_transform/basic_linear_transform.markdown:-   Get some cool info about pixel transformations
doc/tutorials/core/basic_linear_transform/basic_linear_transform.markdown:    We observe that @ref cv::Mat::zeros returns a Matlab-style zero initializer based on
doc/tutorials/video/background_subtraction/background_subtraction.markdown:    coming from the publicly available data set [Background Models Challenge
doc/tutorials/video/background_subtraction/background_subtraction.markdown:We discuss the main parts of the above code:
doc/tutorials/video/background_subtraction/background_subtraction.markdown:        cerr << "Unable to read next frame." << endl;
doc/tutorials/video/background_subtraction/background_subtraction.markdown:-#  The same operations listed above can be performed using a sequence of images as input. The
doc/tutorials/video/background_subtraction/background_subtraction.markdown:      cerr << "Unable to open first image frame: " << fistFrameFilename << endl;
doc/tutorials/video/background_subtraction/background_subtraction.markdown:      cerr << "Unable to open image frame: " << nextFrameFilename << endl;
doc/tutorials/video/background_subtraction/background_subtraction.markdown:    (about 32 MB).
doc/tutorials/video/background_subtraction/background_subtraction.markdown:    (about 708 MB). Please, note that this example works only on sequences in which the filename
doc/tutorials/video/background_subtraction/background_subtraction.markdown:  cerr << "Unable to save " << imageToSave << endl;
doc/tutorials/video/background_subtraction/background_subtraction.markdown:exist several publicly available sequences for background subtraction that come with ground truth
doc/tutorials/video/background_subtraction/background_subtraction.markdown:Wizard](http://bmc.univ-bpclermont.fr/?q=node/7). The wizard can compute different measures about
Binary file doc/tutorials/video/background_subtraction/images/Background_Subtraction_Tutorial_Result_2.png matches
Binary file doc/tutorials/video/background_subtraction/images/Background_Subtraction_Tutorial_Scheme.png matches
doc/tutorials/video/table_of_content_video.markdown:Video analysis (video module) {#tutorial_table_of_content_video}
doc/tutorials/features2d/table_of_content_features2d.markdown:2D Features framework (feature2d module) {#tutorial_table_of_content_features2d}
doc/tutorials/features2d/table_of_content_features2d.markdown:Learn about how to use the feature points detectors, descriptors and matching framework found inside
Binary file doc/tutorials/features2d/feature_flann_matcher/images/Feature_FlannMatcher_Keypoints_Result.jpg matches
doc/tutorials/features2d/akaze_matching/akaze_matching.markdown:<https://github.com/pablofdezalc/test_kaze_akaze_opencv>
Binary file doc/tutorials/features2d/akaze_matching/images/graf.png matches
Binary file doc/tutorials/features2d/akaze_matching/images/res.png matches
Binary file doc/tutorials/features2d/feature_homography/images/Feature_Homography_Result.jpg matches
doc/tutorials/features2d/trackingmotion/good_features_to_track/good_features_to_track.markdown:/// Global variables
doc/tutorials/features2d/trackingmotion/harris_detector/harris_detector.markdown:    -   It must be *uniquely recognizable*
doc/tutorials/features2d/trackingmotion/harris_detector/harris_detector.markdown:    in intensity. Hence, we have to maximize the equation above, specifically the term:
doc/tutorials/features2d/trackingmotion/harris_detector/harris_detector.markdown:/// Global variables
doc/tutorials/features2d/trackingmotion/corner_subpixeles/corner_subpixeles.markdown:/// Global variables
Binary file doc/tutorials/features2d/trackingmotion/generic_corner_detector/images/My_Shi_Tomasi_corner_detector_Result.jpg matches
Binary file doc/tutorials/features2d/trackingmotion/generic_corner_detector/images/My_Harris_corner_detector_Result.jpg matches
doc/tutorials/features2d/trackingmotion/generic_corner_detector/generic_corner_detector.markdown:    the two functions above.
Binary file doc/tutorials/features2d/images/AKAZE_Tracking_Tutorial_Cover.png matches
Binary file doc/tutorials/features2d/akaze_tracking/images/frame.png matches
doc/tutorials/features2d/akaze_tracking/akaze_tracking.markdown:This class implements algorithm described abobve using given feature detector and descriptor
doc/tutorials/features2d/akaze_tracking/akaze_tracking.markdown:        In this tutorial detectors are set up to find about 1000 keypoints on each frame.
doc/tutorials/features2d/akaze_tracking/akaze_tracking.markdown:        If there is a reasonable number of inliers we can use estimated transformation to locate the
Binary file doc/tutorials/highgui/video-write/images/resultOutputWideoWrite.png matches
doc/tutorials/highgui/table_of_content_highgui.markdown:High Level GUI and Media (highgui module) {#tutorial_table_of_content_highgui}
doc/tutorials/highgui/table_of_content_highgui.markdown:This section contains valuable tutorials about how to read/save your image/video files and how to
doc/tutorials/highgui/video-input-psnr-ssim/video_input_psnr_ssim.markdown:dependency of OpenCV so you shouldn't need to worry about this. A video is composed of a succession
doc/tutorials/highgui/video-input-psnr-ssim/video_input_psnr_ssim.markdown:will probably be zero and further ones increasing from there. If the parameter passed to these is a
doc/tutorials/highgui/video-input-psnr-ssim/video_input_psnr_ssim.markdown:A read method is made of a frame grab and a decoding applied on that. You may call explicitly these
doc/tutorials/highgui/video-input-psnr-ssim/video_input_psnr_ssim.markdown:two by using the @ref cv::VideoCapture::grab and then the @ref cv::VideoCapture::retrieve functions.
doc/tutorials/highgui/video-input-psnr-ssim/video_input_psnr_ssim.markdown: absdiff(I1, I2, s1);       // |I1 - I2|
Binary file doc/tutorials/highgui/video-input-psnr-ssim/images/outputVideoInput.png matches
doc/tutorials/highgui/kinect_openni.markdown:    corresponding CMake variables OPENNI_LIB_DIR, OPENNI_INCLUDE_DIR or/and
doc/tutorials/highgui/kinect_openni.markdown:    VideoCapture object will not grab data from Kinect sensor.
doc/tutorials/highgui/kinect_openni.markdown:For getting several data maps use VideoCapture::grab and VideoCapture::retrieve, e.g. :
doc/tutorials/highgui/kinect_openni.markdown:        capture.grab();
doc/tutorials/highgui/kinect_openni.markdown:property. The following properties of cameras available through OpenNI interfaces are supported:
doc/tutorials/highgui/kinect_openni.markdown:        Next properties are available for getting only:
doc/tutorials/highgui/intelperc.markdown:    change corresponding CMake variables INTELPERC_LIB_DIR and INTELPERC_INCLUDE_DIR to the
doc/tutorials/highgui/intelperc.markdown:For getting several data maps use VideoCapture::grab and VideoCapture::retrieve, e.g. :
doc/tutorials/highgui/intelperc.markdown:        capture.grab();
Binary file doc/tutorials/highgui/raster-gdal/images/gdal_heat-map.jpg matches
Binary file doc/tutorials/highgui/raster-gdal/images/gdal_flood-zone.jpg matches
Binary file doc/tutorials/highgui/raster-gdal/images/gdal_output.jpg matches
doc/tutorials/highgui/raster-gdal/raster_io_gdal.markdown:map of the image as well as labels areas of the city which would be affected should the water level
doc/tutorials/highgui/raster-gdal/raster_io_gdal.markdown:Cartesian mathematics is technically incorrect. This demo uses them to increase the readability and
Binary file doc/tutorials/highgui/images/gdal-io.jpg matches
Binary file doc/tutorials/highgui/trackbar/images/Adding_Trackbars_Tutorial_Result_1.jpg matches
doc/tutorials/highgui/trackbar/trackbar.markdown:-   In the previous tutorials (about *linear blending* and the *brightness and contrast
doc/tutorials/highgui/trackbar/trackbar.markdown:/// Global Variables
doc/tutorials/highgui/trackbar/trackbar.markdown:    -   Our Trackbar has a label **TrackbarName**
doc/tutorials/highgui/trackbar/trackbar.markdown:    -   We define *src1*, *src2*, *dist*, *alpha*, *alpha_slider* and *beta* as global variables,
doc/tutorials/calib3d/table_of_content_calib3d.markdown:Camera calibration and 3D reconstruction (calib3d module) {#tutorial_table_of_content_calib3d}
doc/tutorials/calib3d/table_of_content_calib3d.markdown:how to find out from the 2D images information about the 3D world.
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:aspect ratio and skew. It could be established with a minimum of 6 correspondences, using the well
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    files need to be specified using the absolute path or the relative one from your application’s
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    ./cpp-tutorial-pnp_detection --mesh=/absolute_path_to_your_mesh.ply --model=/absolute_path_to_your_model.yml
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    To detect is necessary capture video. It's done loading a recorded video by passing the absolute
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    ./cpp-tutorial-pnp_detection --video=/absolute_path_to_your_video.mp4
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    detailed information about *ORB* in the documentation.
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    keypoints and our 3D model using the obtained *DMatches* vector. For more information about
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    will be eliminated to then estimate the camera pose with a certain probability to obtain a good
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    the more suitable methods are EPNP and P3P due to that are faster than ITERATIVE and DLS at
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    above function and the second taking the output inliers vector from Ransac to get the 2D scene
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    The above function is used to compute all the 3D points of the object *Mesh* to show the pose of
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:    You can find more information about what [Kalman
doc/tutorials/calib3d/real_time_pose/real_time_pose.markdown:        // First predict, to update the internal statePre variable
Binary file doc/tutorials/calib3d/real_time_pose/images/pnp.jpg matches
Binary file doc/tutorials/calib3d/real_time_pose/images/registration.png matches
Binary file doc/tutorials/calib3d/images/real_time_pose_estimation.jpg matches
doc/tutorials/calib3d/camera_calibration/camera_calibration.markdown:noise present in our input images, so for good results you will probably need at least 10 good
doc/tutorials/calib3d/camera_calibration/camera_calibration.markdown:The important part to remember is that the images need to be specified using the absolute path or
doc/tutorials/calib3d/camera_calibration/camera_calibration.markdown:directory mentioned above.
doc/tutorials/calib3d/camera_calibration/camera_calibration.markdown:    good then *goodInput* variable will be true.
doc/tutorials/calib3d/camera_calibration/camera_calibration.markdown:    The formation of the equations I mentioned above aims
doc/tutorials/calib3d/camera_calibration/camera_calibration.markdown:    variable which states if the pattern was found in the input (we only need to take into account
doc/tutorials/calib3d/camera_calibration/camera_calibration.markdown:of the calibration variables we'll create these variables here and pass on both of them to the
doc/tutorials/calib3d/camera_calibration/camera_calibration.markdown:    calculate the absolute norm between what we got with our transformation and the corner/circle
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:Support Vector Machines for Non-Linearly Separable Data {#tutorial_non_linear_svms}
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:Why is it interesting to extend the SVM optimation problem in order to handle non-linearly separable
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:of each sample (_feature vector_) that could make the whole set of faces linearly separable from the
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:now non-linearly separable, we must admit that the hyperplane found will misclassify some of the
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:samples. This _misclassification_ is a new variable in the optimization that must be taken into
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:region. The following picture shows non-linearly separable training data from two classes, a
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:    The training data of this exercise is formed by a set of labeled 2D-points that belong to one of
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:    randomly using a uniform probability density functions (PDFs).
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:    In the first part we generate data for both classes that is linearly separable.
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:    In the second part we create data for both classes that is non-linearly separable, data that
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:        increased considerably in order to solve correctly a problem with non-linearly separable
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:    dark green if it is the class with label 1 and in dark blue if it is the class with label 2.
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:    of the class labeled with 1 are shown in light green and in light blue the samples of the class
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:    labeled with 2.
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:    We use here a couple of methods to obtain information about the support vectors. The method
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:    separating hyperplane. Since the training data is non-linearly separable, it can be seen that
doc/tutorials/ml/non_linear_svms/non_linear_svms.markdown:<iframe title="Support Vector Machines for Non-Linearly Separable Data" width="560" height="349" src="http://www.youtube.com/embed/vFv2yPcSo-Q?rel=0&loop=1" frameborder="0" allowfullscreen align="middle"></iframe>
doc/tutorials/ml/introduction_to_pca/introduction_to_pca.markdown:Consider that you have a set of 2D points as it is shown in the figure above. Each dimension corresponds to a feature you are interested in. Here some could argue that the points are set in a random order. However, if you have a better look you will see that there is a linear pattern (indicated by the blue line) which is hard to dismiss. A key point of PCA is the Dimensionality Reduction. Dimensionality Reduction is the process of reducing the number of the dimensions of the given dataset. For example, in the above case it is possible to approximate the set of points to a single line and therefore, reduce the dimensionality of the given points from 2D to 1D.
doc/tutorials/ml/introduction_to_pca/introduction_to_pca.markdown:Moreover, you could also see that the points vary the most along the blue line, more than they vary along the Feature 1 or Feature 2 axes. This means that if you know the position of a point along the blue line you have more information about the point than if you only knew where it was on Feature 1 axis or Feature 2 axis.
doc/tutorials/ml/introduction_to_pca/introduction_to_pca.markdown:Suppose you have data comprising a set of observations of _p_ variables, and you want to reduce the data so that each observation can be described with only _L_ variables, _L_ < _p_. Suppose further, that the data are arranged as a set of _n_ data vectors \f$ x_1...x_n \f$ with each \f$ x_i \f$  representing a single grouped observation of the _p_ variables.
doc/tutorials/ml/introduction_to_pca/introduction_to_pca.markdown:    Here we apply the necessary pre-processing procedures in order to be able to detect the objects of interest.
doc/tutorials/ml/introduction_to_pca/introduction_to_pca.markdown:    First the data need to be arranged in a matrix with size n x 2, where n is the number of data points we have. Then we can perform that PCA analysis. The calculated mean (i.e. center of mass) is stored in the _cntr_ variable and the eigenvectors and eigenvalues are stored in the corresponding std::vector’s.
Binary file doc/tutorials/ml/introduction_to_pca/images/output.png matches
Binary file doc/tutorials/ml/introduction_to_pca/images/pca_test1.jpg matches
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:hyperplane. In other words, given labeled training data (*supervised learning*), the algorithm
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:For a linearly separable set of 2D-points which belong to one of two classes, find a separating
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:In the above picture you can see that there exists multiple lines that offer a solution to the
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:where \f$y_{i}\f$ represents each of the labels of the training examples.
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:    The training data of this exercise is formed by a set of labeled 2D-points that belong to one of
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:    defined above:
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:    training examples are spread into two classes that are linearly separable. However, SVMs can be
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:    used in a wide variety of problems (e.g. problems with non-linearly separable data, a SVM using
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:        with imperfect separation of classes (i.e. when the training data is non-linearly separable).
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:        This feature is not important here since the data is linearly separable and we chose this SVM
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:    -   *Type of SVM kernel*. We have not talked about kernel functions since they are not
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:        its resemblance to a linearly separable set of data. This mapping consists of increasing the
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:    green if it is the class with label 1 and in blue if it is the class with label -1.
doc/tutorials/ml/introduction_to_svm/introduction_to_svm.markdown:    We use here a couple of methods to obtain information about the support vectors.
doc/tutorials/ml/table_of_content_ml.markdown:Machine Learning (ml module) {#tutorial_table_of_content_ml}
Binary file doc/tutorials/ml/images/non_linear_svms.png matches
doc/tutorials/photo/table_of_content_photo.markdown:Computational photography (photo module) {#tutorial_table_of_content_photo}
Binary file doc/tutorials/photo/hdr_imaging/images/ldr.png matches
Binary file doc/tutorials/photo/hdr_imaging/images/memorial.png matches
Binary file doc/tutorials/photo/hdr_imaging/images/fusion.png matches
Binary file doc/tutorials/photo/images/hdr.png matches
Binary file doc/tutorials/images/feature2D.jpg matches
Binary file doc/tutorials/images/retina.jpg matches
Binary file doc/tutorials/ios/hello/images/header_directive.png matches
Binary file doc/tutorials/ios/hello/images/output.png matches
doc/tutorials/ios/table_of_content_ios.markdown:OpenCV iOS {#tutorial_table_of_content_ios}
doc/tutorials/ios/image_manipulation/image_manipulation.markdown:convert an *OpenCV Mat* to an *UIImage* we use the *Core Graphics* framework available in iOS. Below
Binary file doc/tutorials/ios/image_manipulation/images/output.jpg matches
doc/tutorials/ios/video_processing/video_processing.markdown:#import <Availability.h>
doc/tutorials/ios/video_processing/video_processing.markdown:#warning "This project uses features only available in iOS SDK 4.0 and later."
Binary file doc/tutorials/ios/video_processing/images/xcode_hello_ios_framework_drag_and_drop.png matches
Binary file doc/tutorials/ios/images/facedetect.jpg matches
doc/tutorials/objdetect/traincascade.markdown:Documentation gives some basic information about cascade classifier. Current guide is describing how
doc/tutorials/objdetect/traincascade.markdown:background samples or background images, and are used interchangeably in this document.
doc/tutorials/objdetect/traincascade.markdown:positive sample for absolutely rigid object like an OpenCV logo, but you definetely need hundreds
doc/tutorials/objdetect/traincascade.markdown:Example of vec-file is available here opencv/data/vec_files/trainingfaces_24-24.vec. It can be
doc/tutorials/objdetect/traincascade.markdown:The next step is the training of classifier. As mentioned above opencv_traincascade or
doc/tutorials/objdetect/traincascade.markdown:        By default this value is set to -1 to disable this feature.
doc/tutorials/objdetect/table_of_content_objdetect.markdown:Object Detection (objdetect module) {#tutorial_table_of_content_objdetect}
doc/tutorials/objdetect/cascade_classifier/cascade_classifier.markdown:/* Global variables */
doc/tutorials/objdetect/cascade_classifier/cascade_classifier.markdown:-#  Here is the result of running the code above and using as input the video stream of a build-in
doc/tutorials/introduction/windows_install/windows_install.markdown:These videos above are long-obsolete and contain inaccurate information. Be careful, since
doc/tutorials/introduction/windows_install/windows_install.markdown:-   An IDE of choice (preferably), or just a CC++ compiler that will actually make the binary files.
doc/tutorials/introduction/windows_install/windows_install.markdown:the OpenCV may take advantage. These will improve its capabilities in many ways. In order to use any
doc/tutorials/introduction/windows_install/windows_install.markdown:Now we will describe the steps to follow for a full build (using all the above frameworks, tools and
doc/tutorials/introduction/windows_install/windows_install.markdown:    site](http://code.google.com/p/msysgit/downloads/list). There is also the portable version,
doc/tutorials/introduction/windows_install/windows_install.markdown:        application that will automatically connect to the python databases and download the latest
doc/tutorials/introduction/windows_install/windows_install.markdown:        variable **IPP_ASYNC_ROOT**. It should point to
doc/tutorials/introduction/windows_install/windows_install.markdown:    -#  Same as above with [OpenEXR](http://www.openexr.com/downloads.html).
doc/tutorials/introduction/windows_install/windows_install.markdown:        build](http://www.openni.org/downloadfiles/opennimodules/openni-binaries/21-stable) and the
doc/tutorials/introduction/windows_install/windows_install.markdown:        Module](http://www.openni.org/downloadfiles/opennimodules/openni-compliant-hardware-binaries/32-stable).
doc/tutorials/introduction/windows_install/windows_install.markdown:        After this set the Qt enviroment variables using the following command on Windows 7:
doc/tutorials/introduction/windows_install/windows_install.markdown:    CMake will start out and based on your system variables will try to automatically locate as many
doc/tutorials/introduction/windows_install/windows_install.markdown:    menu points (where *X* is the package abbreviation). Here are a list of current packages you can
doc/tutorials/introduction/windows_install/windows_install.markdown:        most of the libraries capabilities. This will also come handy to easily try out if OpenCV is
doc/tutorials/introduction/windows_install/windows_install.markdown:        you're concerned about performance, build them and run.
doc/tutorials/introduction/windows_install/windows_install.markdown:    directory and open the created **OpenCV** solution. Depending on just how much of the above
doc/tutorials/introduction/windows_install/windows_install.markdown:Set the OpenCV enviroment variable and add it to the systems path {#tutorial_windows_install_path}
doc/tutorials/introduction/windows_install/windows_install.markdown:First we set an enviroment variable to make easier our work. This will hold the build directory of
doc/tutorials/introduction/windows_install/windows_install.markdown:right beside the applications executable file (*exe*) for the OS to find it, which is highly
doc/tutorials/introduction/windows_install/windows_install.markdown:OPENCV_DIR variable via the *setx* command inside a command window.
Binary file doc/tutorials/introduction/windows_install/images/CMake_Configure_Windows.jpg matches
Binary file doc/tutorials/introduction/windows_install/images/visualstudiocommandprompt.jpg matches
Binary file doc/tutorials/introduction/windows_install/images/IntelTBB.png matches
Binary file doc/tutorials/introduction/windows_install/images/CMakeOutputPackageNotFound.jpg matches
Binary file doc/tutorials/introduction/windows_install/images/WindowsBuildDoc.png matches
doc/tutorials/introduction/java_eclipse/java_eclipse.markdown:**Windows**, so you can enjoy the benefits of garbage collected, very refactorable (rename variable,
doc/tutorials/introduction/java_eclipse/java_eclipse.markdown:extract method and whatnot) modern language that enables you to write code with less effort and make
doc/tutorials/introduction/java_eclipse/java_eclipse.markdown:On the Java Settings step, under Libraries tab, select Add Library... and select OpenCV-2.4.6, then
Binary file doc/tutorials/introduction/java_eclipse/images/7_5-new-java-project.png matches
Binary file doc/tutorials/introduction/java_eclipse/images/10-new-project-created.png matches
Binary file doc/tutorials/introduction/java_eclipse/images/8-add-library.png matches
Binary file doc/tutorials/introduction/java_eclipse/images/6-external-folder.png matches
Binary file doc/tutorials/introduction/java_eclipse/images/11-the-code.png matches
Binary file doc/tutorials/introduction/java_eclipse/images/1-window-preferences.png matches
Binary file doc/tutorials/introduction/java_eclipse/images/4-add-external-jars.png matches
Binary file doc/tutorials/introduction/desktop_java/images/lena.png matches
Binary file doc/tutorials/introduction/desktop_java/images/Java_logo.png matches
Binary file doc/tutorials/introduction/desktop_java/images/faceDetection.png matches
Binary file doc/tutorials/introduction/desktop_java/images/ant_output.png matches
Binary file doc/tutorials/introduction/desktop_java/images/sbt_run.png matches
Binary file doc/tutorials/introduction/desktop_java/images/sbt_run_face.png matches
Binary file doc/tutorials/introduction/desktop_java/images/sbt_eclipse.png matches
doc/tutorials/introduction/desktop_java/java_dev_intro.markdown:Generate a Makefile or a MS Visual Studio\* solution, or whatever you use for building executables
doc/tutorials/introduction/desktop_java/java_dev_intro.markdown:@note If CMake can't find Java in your system set the JAVA_HOME environment variable with the path to installed JDK before running it. E.g.:
doc/tutorials/introduction/desktop_java/java_dev_intro.markdown:Now edit `project/plugins.sbt` and paste the following. This will enable auto-generation of an
doc/tutorials/introduction/desktop_java/java_dev_intro.markdown:Make sure it's called `"lena.png"`. Items in the resources directory are available to the Java
doc/tutorials/introduction/transition_guide/transition_guide.markdown:@tableofcontents
doc/tutorials/introduction/transition_guide/transition_guide.markdown:This section describes most notable changes in general, all details and examples of transition actions are in the next part of the document.
doc/tutorials/introduction/transition_guide/transition_guide.markdown:- cv::makePtr function is now available
doc/tutorials/introduction/transition_guide/transition_guide.markdown:1.  Algorithm instances must be created with cv::makePtr function or corresponding static factory method if available:
doc/tutorials/introduction/transition_guide/transition_guide.markdown:The following table illustrates correspondence between 2.4 and 3.0 machine learning classes.
doc/tutorials/introduction/transition_guide/transition_guide.markdown:- _cudabgsegm_ - @ref cudabgsegm
doc/tutorials/introduction/transition_guide/transition_guide.markdown:It is possible to link different modules or enable/disable some of the features in your application by checking library version in the build system. Standard cmake or pkg-config variables can be used for this:
doc/tutorials/introduction/linux_eclipse/linux_eclipse.markdown:-#  Start Eclipse. Just run the executable that comes in the folder.
doc/tutorials/introduction/linux_eclipse/linux_eclipse.markdown:    -   In **C/C++ Build**, click on **Settings**. At the right, choose the **Tool Settings** Tab.
doc/tutorials/introduction/linux_eclipse/linux_eclipse.markdown:    If you check in your folder, there should be an executable there.
doc/tutorials/introduction/linux_eclipse/linux_eclipse.markdown:Running the executable
doc/tutorials/introduction/linux_eclipse/linux_eclipse.markdown:So, now we have an executable ready to run. If we were to use the Terminal, we would probably do
doc/tutorials/introduction/linux_eclipse/linux_eclipse.markdown:-#  Under C/C++ Application you will see the name of your executable + Debug (if not, click over
doc/tutorials/introduction/linux_eclipse/linux_eclipse.markdown:-#  Now, in the right side of the window, choose the **Arguments** Tab. Write the path of the image
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:@tableofcontents
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:    included into documentation and tutorials to demonstrate function calls and objects collaboration.
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:The maximum relative error is about 7e-6 for single-precision input and less than 1e-10 for
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:### tables {#tutorial_documentation_md_table}
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:available commands and detailed description, please visit [Command reference].
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:    function, provided for convenience. It differs from the above function only in what argument(s)
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:    documented entities - reference will be generated. This functionality can be disabled by prefixing
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:Implicit reference: cv::abc::MyClass1 or just MyClass1
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:Disable implicit reference: %MyClass1
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:    - Numbers will be inserted as plain text, possibly formatted as table.
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:    OpenCV library when `-DBUILD_EXAMPLES=ON` option is enabled on cmake step.
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:6.  Add newly created tutorial to the corresponding table of contents. Just find
doc/tutorials/introduction/documenting_opencv/documentation_tutorial.markdown:    <em>"table_of_content_*.markdown"</em> file with the needed table and place new record in it
doc/tutorials/introduction/biicode/tutorial_biicode.markdown:**biicode works with include headers in your source-code files**, it reads them and retrieves all the dependencies in its database. So it is as simple as typing:
doc/tutorials/introduction/biicode/tutorial_biicode.markdown:Now, you can just `bii cpp:configure` and `bii cpp:build` your project as described above.
doc/tutorials/introduction/biicode/tutorial_biicode.markdown:* [objdetect module from OpenCV](@ref tutorial_table_of_content_objdetect)
doc/tutorials/introduction/biicode/tutorial_biicode.markdown:This is just an example of how can it be done with biicode python hooks. Probably now that CMake files reuse is possible with biicode, it could be better to implement it with CMake, in order to get more control over the build of OpenCV.
doc/tutorials/introduction/biicode/tutorial_biicode.markdown:Switching between OpenCV versions is available too and effortless.
Binary file doc/tutorials/introduction/biicode/images/bii_lena.png matches
Binary file doc/tutorials/introduction/biicode/images/biiapp.png matches
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:If you need help with anything of the above, you may refer to our @ref tutorial_android_dev_intro guide.
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:OpenCV4Android SDK package enables development of Android applications with use of OpenCV library.
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    |               |_ armeabi
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    |               |_ armeabi-v7a
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    enable OpenCV library access via OpenCV Manager API (see details below).
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    @note Installation from Internet is the preferable way since OpenCV team may publish updated
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:-   `doc` folder contains various OpenCV documentation in PDF format. It's also available online at
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    @todo I'm not sure that this is the best place to talk about OpenCV Manager
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:-   Hardware specific optimizations are automatically enabled on all supported platforms;
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    the latest available version. Currently it's [OpenCV-2.4.9-android-sdk.zip](http://sourceforge.net/projects/opencvlibrary/files/opencv-android/2.4.9/OpenCV-2.4.9-android-sdk.zip/download).
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:At this point you should be able to build and run the samples. Keep in mind, that face-detection and
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:@note Recent *Android SDK tools, revision 19+* can run ARM v7a OS images but they available not for
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    run Eclipse will ask you about the running mode for your application:
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    @note armeabi, armv7a-neon, arm7a-neon-android8, mips and x86 stand for platform targets:
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:        -   armeabi is for ARM v5 and ARM v6 architectures with Android API 8+,
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    adb shell getprop ro.product.cpu.abi
doc/tutorials/introduction/android_binary_package/O4A_SDK.markdown:    When done, you will be able to run OpenCV samples on your device/emulator seamlessly.
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:If you need help with anything of the above, you may refer to our @ref tutorial_android_dev_intro guide.
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:release for Android, *OpenCV Manager* is used to provide apps with the best available version of
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:Google Play is not available, i.e. emulator, developer board, etc, you can install it manually using
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:                    mOpenCvCameraView.enableView();
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:described above.
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:    above. Use menu File -\> Import -\> Existing project in your workspace, press Browse button and
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:-#  The last step of enabling OpenCV in your application is Java initialization code before calling
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:-#  You can use an environment variable to specify the location of OpenCV package or just hardcode
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:    absolute or relative path in the `jni/Android.mk` of your projects.
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:-#  Several variables can be used to customize OpenCV stuff, but you **don't need** to use them when
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:    @note These variables should be set **before** the "include .../OpenCV.mk" line:
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:    APP_ABI := armeabi-v7a
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:application. It will be capable of accessing camera output, processing it and displaying the result.
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:        android:icon="@drawable/icon"
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:        android:label="@string/app_name"
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:                    mOpenCvCameraView.enableView();
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:            mOpenCvCameraView.disableView();
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:            mOpenCvCameraView.disableView();
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:already discussed above. In this sample we use asynchronous initialization. Implementation of
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:CvCameraViewListener interface allows you to add processing steps after frame grabbing from camera
doc/tutorials/introduction/android_binary_package/dev_with_OCV_on_Android.markdown:not have its own state and its behavior out of callback is unpredictable!
Binary file doc/tutorials/introduction/android_binary_package/images/eclipse_NDK_build_success.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/usb_device_connect_ubuntu.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/eclipse_cdt_cfg8.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/android_sdk_and_avd_manager.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/emulator_canny.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/eclipse_1_choose_workspace.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/eclipse_edit_configuration_build_options.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/dev_OCV_reference.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/eclipse_4_locate_sdk.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/eclipse_3_preferences_android.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/eclipse_inst_adt.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/eclipse_1a_locate_sdk.png matches
Binary file doc/tutorials/introduction/android_binary_package/images/eclipse_cdt_cfg5.png matches
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:If you need help with anything of the above, you may refer to our @ref tutorial_android_dev_intro guide.
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:This tutorial also assumes you have an Android operated device with OpenCL enabled.
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:[OpenGL-OpenCL Interoperability API (cl_khr_gl_sharing)](https://www.khronos.org/registry/cl/sdk/1.2/docs/man/xhtml/cl_khr_gl_sharing.html),
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:A minimal `Renderer` class can be implemented in Java (OpenGL ES 2.0 [available](http://developer.android.com/reference/android/opengl/GLES20.html) in Java),
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:public abstract class MyGLRendererBase implements GLSurfaceView.Renderer, SurfaceTexture.OnFrameAvailableListener {
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:    protected abstract void openCamera();
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:    protected abstract void closeCamera();
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:    protected abstract void setCameraPreviewSize(int width, int height);
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:    public synchronized void onFrameAvailable(SurfaceTexture surfaceTexture) {
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:        //Log.i(LOGTAG, "onFrameAvailable");
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:        mSTex.setOnFrameAvailableListener(this);
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:As you can see, inheritors for `Camera` and `Camera2` APIs should implement the following abstract methods:
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:    protected abstract void openCamera();
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:    protected abstract void closeCamera();
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:    protected abstract void setCameraPreviewSize(int width, int height);
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:That makes unable sharing it via CL-GL interop (`cl_khr_gl_sharing`) and accessing its pixel data via C/C++ code.
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:- @note By default the OpenCL support (T-API) is disabled in OpenCV builds for Android OS (so it's absent in official packages as of version 3.0),
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:  but it's possible to rebuild locally OpenCV for Android with OpenCL/T-API enabled: use `-DWITH_OPENCL=YES` option for CMake.
doc/tutorials/introduction/android_binary_package/android_ocl_intro.markdown:  path/to/cmake.exe -GNinja -DCMAKE_MAKE_PROGRAM="path/to/ninja.exe" -DCMAKE_TOOLCHAIN_FILE=path/to/opencv/platforms/android/android.toolchain.cmake -DANDROID_ABI="armeabi-v7a with NEON" -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON path/to/opencv
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:by Google. See the [Android home site](http://www.android.com/about/) for general details.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    OS (only JDK sections are applicable for OpenCV)
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    @note OpenJDK is not suitable for Android development, since Android SDK supports only Sun JDK. If you use Ubuntu, after installation of Sun JDK you should run the following command to set Sun java environment:
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    Assuming that you have Eclipse IDE installed, as described above, follow these steps to download
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    -#  In the Available Software dialog, select the checkbox next to Developer Tools and click Next.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:        @note If you also plan to develop native C++ code with Android NDK don't forget to enable NDK Plugins installations as well.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:        @note If you get a security warning saying that the authenticity or validity of the software can't be established, click OK.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    archive, in the folder `docs/`. The main article about using Android NDK build system is in the
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    above) your Eclipse IDE should already have CDT plugin (that means C/C++ Development Tooling).
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:-   `AndroidManifest.xml` file presents essential information about application to the Android
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:-   `project.properties` is a text file containing information about target Android platform and
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:<some variable name> := <some variable value>
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:<some variable name> := <some variable value>
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:explicitly, use armeabi for ARMv5/ARMv6, armeabi-v7a for ARMv7, x86 for Intel Atom or mips for MIPS.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:   **Windows**. Use the latter if only you're absolutely sure about, what you're doing. Cygwin is
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    it. So, use it only if you're capable of handling the consequences yourself.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:-#  Define the NDKROOT environment variable containing the path to Android NDK in your system (e.g.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    **On Windows** an environment variable can be set via
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    My Computer -\> Properties -\> Advanced -\> Environment variables. On Windows 7 it's also
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    **On Linux** and **MacOS** an environment variable can be set via appending a
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    @note It's also possible to define the NDKROOT environment variable within Eclipse IDE, but it
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    system environment variable, open Eclipse menu
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    Window -\> Preferences -\> C/C++ -\> Build -\> Environment, press the Add... button and set variable
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:-#  Go to Behaviour tab and change "Workbench build type" section like shown below:
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:        ${NDKROOT}/sources/cxx-stl/gnu-libstdc++/libs/armeabi-v7a/include
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:        ${NDKROOT}/sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a/include
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    The last path should be changed to the correct absolute or relative path to OpenCV4Android SDK
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:AVD (*Android Virtual Device*) is not probably the most convenient way to test an OpenCV-dependent
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:operating systems to be able to work with Android devices. No extra actions are required for Mac OS.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:-#  Enable USB debugging on the Android device (via Settings menu).
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:-#  Attach the Android device to your PC with a USB cable.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:    unknown device, select Properties menu item --\> Details tab --\> Update Driver button.
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:-#  If you get the prompt to install unverified drivers and report about success - you've finished
doc/tutorials/introduction/android_binary_package/android_dev_intro.markdown:information about your Android device. You may find some Vendor ID's
doc/tutorials/introduction/ios_install/ios_install.markdown:You can find several OpenCV+iOS tutorials here @ref tutorial_table_of_content_ios.
doc/tutorials/introduction/linux_install/linux_install.markdown:You can use the latest stable OpenCV version or you can grab the latest snapshot from our [Git
doc/tutorials/introduction/linux_install/linux_install.markdown:### Getting the Latest Stable OpenCV Version
doc/tutorials/introduction/linux_install/linux_install.markdown:    -   set OPENCV_TEST_DATA_PATH environment variable to \<path to opencv_extra/testdata\>.
doc/tutorials/introduction/linux_install/linux_install.markdown:    megabytes do really matter.
doc/tutorials/introduction/table_of_content_introduction.markdown:Introduction to OpenCV {#tutorial_table_of_content_introduction}
doc/tutorials/introduction/table_of_content_introduction.markdown:Here you can read tutorials about how to set up your computer to work with the OpenCV library.
doc/tutorials/introduction/table_of_content_introduction.markdown:    _Author:_ Maksim Shabunin
doc/tutorials/introduction/table_of_content_introduction.markdown:    _Author:_ Maksim Shabunin
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:several popular EABI versions that are used on ARM platform. This tutorial is written for *gnueabi*
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:and *gnueabihf*, but other variants should work with minimal changes.
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:    choose *gnueabi* or *gnueabihf* tools. Install command for *gnueabi*:
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:    sudo apt-get install gcc-arm-linux-gnueabi
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:    Install command for *gnueabihf*:
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:    sudo apt-get install gcc-arm-linux-gnueabihf
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:-   [optional] ffmpeg or libav development packages for armeabi(hf): libavcodec-dev,
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:-   [optional] GTK+2.x or higher, including headers (libgtk2.0-dev) for armeabi(hf);
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:-   [optional] libjpeg-dev, libpng-dev, libtiff-dev, libjasper-dev for armeabi(hf).
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:You can use the latest stable OpenCV version available in *sourceforge* or you can grab the latest
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:### Getting the Latest Stable OpenCV Version
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:    cmake [<some optional parameters>] -DCMAKE_TOOLCHAIN_FILE=<path to the OpenCV source directory>/platforms/linux/arm-gnueabi.toolchain.cmake <path to the OpenCV source directory>
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:    Toolchain uses *gnueabihf* EABI convention by default. Add -DSOFTFP=ON cmake argument to switch
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:    cmake [<some optional parameters>] -DSOFTFP=ON -DCMAKE_TOOLCHAIN_FILE=<path to the OpenCV source directory>/platforms/linux/arm-gnueabi.toolchain.cmake <path to the OpenCV source directory>
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:    cmake -DCMAKE_TOOLCHAIN_FILE=../arm-gnueabi.toolchain.cmake ../../..
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:### Enable hardware optimizations
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:cmake command line to enable code generation for VFPv3 and -DENABLE_NEON=ON for using NEON SIMD
doc/tutorials/introduction/crosscompilation/arm_crosscompile_with_cmake.markdown:TBB is supported on multi core ARM SoCs also. Add -DWITH_TBB=ON and -DBUILD_TBB=ON to enable it.
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:it offers a complete interoperability with the underlying JVM. This means that we should even be
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:able to use the Clojure REPL (Read Eval Print Loop) as and interactive programmable interface to the
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:OpenCV within the fully programmable CLojure REPL.
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:You can find a runnable source code of the sample in the `samples/java/clojure/simple-sample` folder
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:The available [installation guide](https://github.com/technomancy/leiningen#installation) is very
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:-#  [Download the script](https://raw.github.com/technomancy/leiningen/stable/bin/lein)
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:-#  Set the script to be executable. (i.e. chmod 755 \~/bin/lein).
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:Instead, when you want a plugin to be available to any CLJ project in your username space, you can
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:libs wrapped by a Java interface. So I decide to make it available to any CLJ project:
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:Here we're saying that the version release "0.5.2" of the lein-localrepo plugin will be available to
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:Create a new directory to store in the above two libs. Start by copying into it the opencv-247.jar
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:Now, to be able to add the libopencv_java247.dylib shared native lib to the local maven repository,
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:artifact will then be available to any maven compliant project (Leiningen is internally based on
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:The above task creates the following simple-sample directories layout:
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:maven repository. If the task returns without messages about not being able to retrieve the two new
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:loads all the project dependencies, you still need to load the opencv native library to be able to
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:within the java interface to OpenCV are immediately available from the CLJ REPL, it's very annoying
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:If you are accustomed to a functional language all those abused and mutating nouns are going to
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:#<Mat Mat [ 512*512*CV_8UC3, isCont=true, isSubmat=false, nativeObj=0x7f9ab3054c40, dataAddr=0x19fea9010 ]>
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:This tutorial only introduces the very basic environment set up to be able to interact with OpenCV
doc/tutorials/introduction/clojure_dev_intro/clojure_dev_intro.markdown:java lib that has not been wrapped in Clojure to make it usable in a more idiomatic and functional
Binary file doc/tutorials/introduction/clojure_dev_intro/images/lena.png matches
Binary file doc/tutorials/introduction/clojure_dev_intro/images/blurred.png matches
doc/tutorials/introduction/display_image/display_image.markdown:   OpenCV offers support for the image formats Windows bitmap (bmp), portable image formats (pbm,
doc/tutorials/introduction/display_image/display_image.markdown:    Jasper), TIFF files (tiff, tif) and portable network graphics (png). Furthermore, OpenEXR is
doc/tutorials/introduction/display_image/display_image.markdown:-   Compile your code and then run the executable giving an image path as argument. If you're on
doc/tutorials/introduction/display_image/display_image.markdown:    Windows the executable will of course contain an *exe* extension too. Of course assure the image
Binary file doc/tutorials/introduction/images/eclipse-logo.png matches
Binary file doc/tutorials/introduction/images/Java_logo.png matches
Binary file doc/tutorials/introduction/images/windows_logo.jpg matches
Binary file doc/tutorials/introduction/images/visual_studio_image_watch.png matches
doc/tutorials/introduction/linux_gcc_cmake/linux_gcc_cmake.markdown:add_executable( DisplayImage DisplayImage.cpp )
doc/tutorials/introduction/linux_gcc_cmake/linux_gcc_cmake.markdown:### Generate the executable
doc/tutorials/introduction/linux_gcc_cmake/linux_gcc_cmake.markdown:By now you should have an executable (called DisplayImage in this case). You just have to run it
doc/tutorials/introduction/windows_visual_studio_image_watch/windows_visual_studio_image_watch.markdown:This tutorial assumes that you have the following available:
doc/tutorials/introduction/windows_visual_studio_image_watch/windows_visual_studio_image_watch.markdown:build (usually called "Debug"). This should disable compiler optimizations so that viewing variables
doc/tutorials/introduction/windows_visual_studio_image_watch/windows_visual_studio_image_watch.markdown:in the debugger can work reliably.
doc/tutorials/introduction/windows_visual_studio_image_watch/windows_visual_studio_image_watch.markdown:(Debug --\> Windows --\> Locals), which will show the names and values of the variables in the
doc/tutorials/introduction/windows_visual_studio_image_watch/windows_visual_studio_image_watch.markdown:image list shows basic information such as width, height, number of channels, and, if available, a
doc/tutorials/introduction/windows_visual_studio_image_watch/windows_visual_studio_image_watch.markdown:thumbnail. In our example, the image list contains our two local image variables, *input* and
doc/tutorials/introduction/windows_visual_studio_image_watch/windows_visual_studio_image_watch.markdown:Right-click on the *Image Viewer* to bring up the view context menu and enable Link Views (a check
doc/tutorials/introduction/windows_visual_studio_image_watch/windows_visual_studio_image_watch.markdown:box next to the menu item indicates whether the option is enabled).
Binary file doc/tutorials/introduction/windows_visual_studio_image_watch/images/viewer.jpg matches
Binary file doc/tutorials/introduction/windows_visual_studio_image_watch/images/toolwindow.jpg matches
Binary file doc/tutorials/introduction/windows_visual_studio_image_watch/images/input_zoom.png matches
Binary file doc/tutorials/introduction/windows_visual_studio_image_watch/images/help_button.jpg matches
Binary file doc/tutorials/introduction/windows_visual_studio_image_watch/images/visual_studio_image_watch.png matches
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:header files plus binaries and you have set the environment variables as described here
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:    the definitions and implementation of all *used* functions and data structures to the executable
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:advantage of the global one is that you only need to do it once; however, it may be undesirable to
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:environment variables. The full location of the OpenCV library may change on each system. Moreover,
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:variables. Anything that you put inside a parenthesis started with a dollar sign will be replaced at
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:runtime with the current environment variables value. Here comes in play the environment variable
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:opencv_videostab300d.lib
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:omit the *d* letters from the library names and to save the property sheets with the save icon above
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:by using the environment variable *OPENCV_DIR*.
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:you give a full, explicit path as parameter for the I/O functions. In the code above we open [this
doc/tutorials/introduction/windows_visual_studio_Opencv/windows_visual_studio_Opencv.markdown:start menu), navigate to your executable file and start it with an argument. So for example in case
Binary file doc/tutorials/introduction/windows_visual_studio_Opencv/images/NewProjectVisualStudio.jpg matches
Binary file doc/tutorials/introduction/windows_visual_studio_Opencv/images/PropertySheetOpenCVLib.jpg matches
Binary file doc/tutorials/introduction/windows_visual_studio_Opencv/images/PropertySheetOpenCVInclude.jpg matches
Binary file doc/tutorials/introduction/windows_visual_studio_Opencv/images/VCDirectories2008.jpg matches
Binary file doc/tutorials/introduction/load_save_image/images/Load_Save_Image_Result_1.jpg matches
doc/DoxygenLayout.xml:  <!-- Navigation index tabs for HTML output -->
doc/DoxygenLayout.xml:    <tab type="mainpage" visible="yes" title=""/>
doc/DoxygenLayout.xml:    <tab type="pages" visible="yes" title="" intro=""/>
doc/DoxygenLayout.xml:    <tab type="modules" visible="yes" title="" intro=""/>
doc/DoxygenLayout.xml:    <tab type="namespaces" visible="yes" title="">
doc/DoxygenLayout.xml:      <tab type="namespacelist" visible="yes" title="" intro=""/>
doc/DoxygenLayout.xml:    </tab>
doc/DoxygenLayout.xml:    <tab type="classes" visible="yes" title="">
doc/DoxygenLayout.xml:      <tab type="classlist" visible="yes" title="" intro=""/>
doc/DoxygenLayout.xml:      <tab type="classindex" visible="$ALPHABETICAL_INDEX" title=""/>
doc/DoxygenLayout.xml:    </tab>
doc/DoxygenLayout.xml:    <tab type="files" visible="yes" title="">
doc/DoxygenLayout.xml:      <tab type="filelist" visible="yes" title="Files index" intro=""/>
doc/DoxygenLayout.xml:      <tab type="globals" visible="yes" title="Global objects" intro=""/>
doc/DoxygenLayout.xml:    </tab>
doc/DoxygenLayout.xml:    <tab type="examples" visible="yes" title="" intro=""/>
doc/DoxygenLayout.xml:    <tab type="user" url="/3.0-last-rst" title="Sphinx Documentation"/>
doc/DoxygenLayout.xml:    <collaborationgraph visible="$COLLABORATION_GRAPH"/>
doc/DoxygenLayout.xml:      <variables title=""/>
doc/DoxygenLayout.xml:      <variables title=""/>
doc/DoxygenLayout.xml:      <variables title=""/>
doc/DoxygenLayout.xml:      <variables title=""/>
doc/DoxygenLayout.xml:      <variables title=""/>
doc/DoxygenLayout.xml:      <variables title=""/>
doc/DoxygenLayout.xml:      <variables title=""/>
doc/opencv.bib:  author = {Alcantarilla, Pablo Fern{\'a}ndez and Bartoli, Adrien and Davison, Andrew J},
doc/opencv.bib:  author = {Alcantarilla, Pablo F and Nuevo, Jes{\'u}s and Bartoli, Adrien},
doc/opencv.bib:  title = {Camera Calibration Tool box for Matlab [EB/OL]},
doc/opencv.bib:  title = {Auto-directed video stabilization with robust l1 optimal camera paths},
doc/opencv.bib:  title = {Visual tracking of human visitors under variable-lighting conditions for a responsive audio art installation},
doc/opencv.bib:  author = {S{\'a}nchez P{\'e}rez, Javier and Meinhardt-Llopis, Enric and Facciolo, Gabriele},
doc/opencv.bib:  author = {Kim, Junhwan and Kolmogorov, Vladimir and Zabih, Ramin},
doc/opencv.bib:  title = {BRISK: Binary robust invariant scalable keypoints},
doc/opencv.bib:  title = {Robust detection of lines using the progressive probabilistic hough transform},
doc/opencv.bib:  title = {Full-frame video stabilization with motion inpainting},
doc/opencv.bib:  author = {Rublee, Ethan and Rabaud, Vincent and Konolige, Kurt and Bradski, Gary},
doc/opencv.bib:@ARTICLE{Slabaugh,
doc/opencv.bib:  author = {Slabaugh, Gregory G},
doc/opencv.bib:  title={Linear time maximally stable extremal regions},
doc/opencv.bib:  title={Maximally stable colour regions for recognition and matching},
doc/header.html:<link href="$relpath^tabs.css" rel="stylesheet" type="text/css"/>
doc/header.html:<table cellspacing="0" cellpadding="0">
doc/header.html:</table>
Binary file doc/acircles_pattern.png matches
doc/CMakeLists.txt:  # set export variables
doc/stylesheet.css:body, table, div, p, dl {
doc/py_tutorials/py_feature2d/py_surf_intro/py_surf_intro.markdown:times faster than SIFT while performance is comparable to SIFT. SURF is good at handling images with
Binary file doc/py_tutorials/py_feature2d/py_features_meaning/images/feature_building.jpg matches
doc/py_tutorials/py_feature2d/py_features_meaning/py_features_meaning.markdown:it?** What about the projecting the same theory to a computer program so that computer can play
doc/py_tutorials/py_feature2d/py_features_meaning/py_features_meaning.markdown:If the computer can stitch several natural images to one, what about giving a lot of pictures of a
doc/py_tutorials/py_feature2d/py_features_meaning/py_features_meaning.markdown:we look more into continuity of different images). All these abilities are present in us inherently.
doc/py_tutorials/py_feature2d/py_features_meaning/py_features_meaning.markdown:features?**. *(The answer should be understandable to a computer also.)*
doc/py_tutorials/py_feature2d/py_features_meaning/py_features_meaning.markdown:Just like above, blue patch is flat area and difficult to find and track. Wherever you move the blue
doc/py_tutorials/py_feature2d/py_matcher/py_matcher.markdown:Second param is boolean variable, crossCheck which is false by default. If it is true, Matcher
doc/py_tutorials/py_feature2d/py_matcher/py_matcher.markdown:                   table_number = 6, # 12
doc/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.markdown:    -   We will learn about the concepts of SIFT algorithm
doc/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.markdown:obvious because corners remain corners in rotated image also. But what about scaling? A corner may
doc/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.markdown:and considered to be best material available on SIFT. So this explanation is just a short summary of
doc/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.markdown:From the image above, it is obvious that we can't use the same window to detect keypoints with
doc/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.markdown:change in \f$\sigma\f$. In short, \f$\sigma\f$ acts as a scaling parameter. For eg, in the above image,
doc/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.markdown:and any peak above 80% of it is also considered to calculate the orientation. It creates keypoints
doc/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.markdown:with same location and scale, but different directions. It contribute to stability of matching.
doc/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.markdown:So a total of 128 bin values are available. It is represented as a vector to form keypoint
doc/py_tutorials/py_feature2d/py_sift_intro/py_sift_intro.markdown:So now let's see SIFT functionalities available in OpenCV. Let's start with keypoint detection and
Binary file doc/py_tutorials/py_feature2d/py_sift_intro/images/sift_keypoints.jpg matches
Binary file doc/py_tutorials/py_feature2d/py_shi_tomasi/images/shitomasi_block1.jpg matches
doc/py_tutorials/py_feature2d/py_shi_tomasi/py_shi_tomasi.markdown:-   We will learn about the another corner detector: Shi-Tomasi Corner Detector
doc/py_tutorials/py_feature2d/py_shi_tomasi/py_shi_tomasi.markdown:From the figure, you can see that only when \f$\lambda_1\f$ and \f$\lambda_2\f$ are above a minimum value,
doc/py_tutorials/py_feature2d/py_orb/py_orb.markdown:As an OpenCV enthusiast, the most important thing about the ORB is that it came from "OpenCV Labs".
doc/py_tutorials/py_feature2d/py_orb/py_orb.markdown:This algorithm was brought up by Ethan Rublee, Vincent Rabaud, Kurt Konolige and Gary R. Bradski in
doc/py_tutorials/py_feature2d/py_orb/py_orb.markdown:that, FAST doesn't compute the orientation. So what about rotation invariance? Authors came up with
doc/py_tutorials/py_feature2d/py_orb/py_orb.markdown:ORB discretize the angle to increments of \f$2 \pi /30\f$ (12 degrees), and construct a lookup table of
doc/py_tutorials/py_feature2d/py_orb/py_orb.markdown:Another desirable property is to have the tests uncorrelated, since then each test will contribute
doc/py_tutorials/py_feature2d/py_orb/py_orb.markdown:-#  Ethan Rublee, Vincent Rabaud, Kurt Konolige, Gary R. Bradski: ORB: An efficient alternative to
Binary file doc/py_tutorials/py_feature2d/py_features_harris/images/harris_region.jpg matches
doc/py_tutorials/py_feature2d/py_features_harris/py_features_harris.markdown:second term. Applying Taylor Expansion to above equation and using some mathematical steps (please
doc/py_tutorials/py_feature2d/py_features_harris/py_features_harris.markdown:suitable give you the corners in the image. We will do it with a simple image.
doc/py_tutorials/py_feature2d/py_features_harris/py_features_harris.markdown:ret, labels, stats, centroids = cv2.connectedComponentsWithStats(dst)
Binary file doc/py_tutorials/py_feature2d/images/homography_icon.jpg matches
doc/py_tutorials/py_feature2d/py_table_of_contents_feature2d.markdown:Feature Detection and Description {#tutorial_py_table_of_contents_feature2d}
doc/py_tutorials/py_feature2d/py_table_of_contents_feature2d.markdown:    All the above feature
doc/py_tutorials/py_feature2d/py_table_of_contents_feature2d.markdown:    We know a great deal about feature detectors and descriptors. It is time to learn how to match different descriptors. OpenCV provides two techniques, Brute-Force matcher and FLANN based matcher.
doc/py_tutorials/py_feature2d/py_table_of_contents_feature2d.markdown:    Now we know about feature matching. Let's mix it up with calib3d module to find objects in a complex image.
doc/py_tutorials/py_feature2d/py_fast/py_fast.markdown:    dash lines in the above image). \f$n\f$ was chosen to be 12.
doc/py_tutorials/py_feature2d/py_fast/py_fast.markdown:-#  Select a set of images for training (preferably from the target application domain)
doc/py_tutorials/py_feature2d/py_fast/py_fast.markdown:6.  Define a new boolean variable, \f$K_p\f$, which is true if \f$p\f$ is a corner and false otherwise.
doc/py_tutorials/py_feature2d/py_fast/py_fast.markdown:7.  Use the ID3 algorithm (decision tree classifier) to query each subset using the variable \f$K_p\f$
doc/py_tutorials/py_feature2d/py_fast/py_fast.markdown:    for the knowledge about the true class. It selects the \f$x\f$ which yields the most information
doc/py_tutorials/py_feature2d/py_fast/py_fast.markdown:    about whether the candidate pixel is a corner, measured by the entropy of \f$K_p\f$.
doc/py_tutorials/py_feature2d/py_fast/py_fast.markdown:-#  Compute a score function, \f$V\f$ for all the detected feature points. \f$V\f$ is the sum of absolute
doc/py_tutorials/py_feature2d/py_fast/py_fast.markdown:# Disable nonmaxSuppression
doc/py_tutorials/py_imgproc/py_filtering/py_filtering.markdown:Operation is like this: keep this kernel above a pixel, add all the 25 pixels below this kernel,
doc/py_tutorials/py_imgproc/py_filtering/py_filtering.markdown:**cv2.blur()** or **cv2.boxFilter()**. Check the docs for more details about the kernel. We should
doc/py_tutorials/py_imgproc/py_filtering/py_filtering.markdown:The above code can be modified for Gaussian blurring:
doc/py_tutorials/py_imgproc/py_filtering/py_filtering.markdown:in the images. Interesting thing is that, in the above filters, central element is a newly
doc/py_tutorials/py_imgproc/py_filtering/py_filtering.markdown:-#  Details about the [bilateral filtering](http://people.csail.mit.edu/sparis/bf_course/)
Binary file doc/py_tutorials/py_imgproc/py_filtering/images/bilateral.jpg matches
Binary file doc/py_tutorials/py_imgproc/py_filtering/images/median.jpg matches
doc/py_tutorials/py_imgproc/py_thresholding/py_thresholding.markdown:    p1,p2 = np.hsplit(hist_norm,[i]) # probabilities
doc/py_tutorials/py_imgproc/py_thresholding/py_thresholding.markdown:-#  There are some optimizations available for Otsu's binarization. You can search and implement it.
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:Image Processing in OpenCV {#tutorial_py_table_of_contents_imgproc}
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:    Learn about morphological transformations like Erosion, Dilation, Opening, Closing etc
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:    Learn about image pyramids and how to use them for image blending
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:-   @subpage tutorial_py_table_of_contents_contours
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:    about Contours in OpenCV
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:-   @subpage tutorial_py_table_of_contents_histograms
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:    about histograms in OpenCV
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:-   @subpage tutorial_py_table_of_contents_transforms
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:-   @subpage tutorial_py_grabcut
doc/py_tutorials/py_imgproc/py_table_of_contents_imgproc.markdown:    Learn to extract foreground with GrabCut algorithm
doc/py_tutorials/py_imgproc/py_histograms/py_2d_histogram/py_2d_histogram.markdown:It gives us a much better idea about the different pixel density. But this also, doesn't gives us
doc/py_tutorials/py_imgproc/py_histograms/py_2d_histogram/py_2d_histogram.markdown:output of that code for the same image as above:
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_equalization/py_histogram_equalization.markdown:Equalization](http://en.wikipedia.org/wiki/Histogram_equalization) for more details about it. It has
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_equalization/py_histogram_equalization.markdown:array, all operations are performed on non-masked elements. You can read more about it from Numpy
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_equalization/py_histogram_equalization.markdown:Now we have the look-up table that gives us the information on what is the output pixel value for
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_equalization/py_histogram_equalization.markdown:limiting** is applied. If any histogram bin is above the specified contrast limit (by default 40 in
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_equalization/py_histogram_equalization.markdown:See the result below and compare it with results above, especially the statue region:
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_backprojection/py_histogram_backprojection.markdown:In this chapter, we will learn about histogram backprojection.
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_backprojection/py_histogram_backprojection.markdown:that of our input image, where each pixel corresponds to the probability of that pixel belonging to
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_backprojection/py_histogram_backprojection.markdown:words, we calculate the probability of every pixel belonging to the ground and show it. The
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_backprojection/py_histogram_backprojection.markdown:    with every pixel as its corresponding probability of being target. ie B(x,y) = R[h(x,y),s(x,y)]
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_backprojection/py_histogram_backprojection.markdown:    region in the image, thresholding for a suitable value gives a nice result.
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_backprojection/py_histogram_backprojection.markdown:backproject function. It returns the probability image. Then we convolve the image with a disc
doc/py_tutorials/py_imgproc/py_histograms/py_table_of_contents_histograms.markdown:Histograms in OpenCV {#tutorial_py_table_of_contents_histograms}
Binary file doc/py_tutorials/py_imgproc/py_histograms/py_histogram_begins/images/histogram_rgb_plot.jpg matches
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_begins/py_histogram_begins.markdown:idea about the intensity distribution of an image. It is a plot with pixel values (ranging from 0 to
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_begins/py_histogram_begins.markdown:intuition about contrast, brightness, intensity distribution etc of that image. Almost all image
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_begins/py_histogram_begins.markdown:**BINS** :The above histogram shows the number of pixels for every pixel value, ie from 0 to 255. ie
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_begins/py_histogram_begins.markdown:you need 256 values to show the above histogram. But consider, what if you need not find the number
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_begins/py_histogram_begins.markdown:You can deduct from the above graph that, blue has some high value areas in the image (obviously it
doc/py_tutorials/py_imgproc/py_histograms/py_histogram_begins/py_histogram_begins.markdown:image as above. This is already available with OpenCV-Python2 official samples. Check the
doc/py_tutorials/py_imgproc/py_transforms/py_fourier_transform/py_fourier_transform.markdown:    -   To utilize the FFT functions available in Numpy
doc/py_tutorials/py_imgproc/py_transforms/py_fourier_transform/py_fourier_transform.markdown:called **Fast Fourier Transform (FFT)** is used for calculation of DFT. Details about these can be
doc/py_tutorials/py_imgproc/py_transforms/py_fourier_transform/py_fourier_transform.markdown:magnitude_spectrum = 20*np.log(np.abs(fshift))
doc/py_tutorials/py_imgproc/py_transforms/py_fourier_transform/py_fourier_transform.markdown:absolute value.
doc/py_tutorials/py_imgproc/py_transforms/py_fourier_transform/py_fourier_transform.markdown:img_back = np.abs(img_back)
doc/py_tutorials/py_imgproc/py_transforms/py_fourier_transform/py_fourier_transform.markdown:counterparts. But Numpy functions are more user-friendly. For more details about performance issues,
doc/py_tutorials/py_imgproc/py_transforms/py_fourier_transform/py_fourier_transform.markdown:efficiently. So if you are worried about the performance of your code, you can modify the size of
doc/py_tutorials/py_imgproc/py_transforms/py_fourier_transform/py_fourier_transform.markdown:this. It is applicable to both **cv2.dft()** and **np.fft.fft2()**. Let's check their performance
doc/py_tutorials/py_imgproc/py_transforms/py_fourier_transform/py_fourier_transform.markdown:mag_spectrum = [np.log(np.abs(z)+1) for z in fft_shift]
doc/py_tutorials/py_imgproc/py_transforms/py_table_of_contents_transforms.markdown:Image Transforms in OpenCV {#tutorial_py_table_of_contents_transforms}
doc/py_tutorials/py_imgproc/py_geometric_transformations/py_geometric_transformations.markdown:Different interpolation methods are used. Preferable interpolation methods are **cv2.INTER_AREA**
doc/py_tutorials/py_imgproc/py_geometric_transformations/py_geometric_transformations.markdown:But OpenCV provides scaled rotation with adjustable center of rotation so that you can rotate at any
doc/py_tutorials/py_imgproc/py_contours/py_contours_begin/py_contours_begin.markdown:    finding contours, already store it to some other variables.
doc/py_tutorials/py_imgproc/py_contours/py_contours_begin/py_contours_begin.markdown:@note We will discuss second and third arguments and about hierarchy in details later. Until then,
doc/py_tutorials/py_imgproc/py_contours/py_contour_features/py_contour_features.markdown:There is a little bit things to discuss about it its syntax:
doc/py_tutorials/py_imgproc/py_contours/py_contour_features/py_contour_features.markdown:So to get a convex hull as in above image, following is sufficient:
doc/py_tutorials/py_imgproc/py_contours/py_contour_features/py_contour_features.markdown:we will take the rectangle image above. First I found its contour as cnt. Now I found its convex
doc/py_tutorials/py_imgproc/py_contours/py_contour_features/py_contour_features.markdown:You will see it again when we discuss about convexity defects.
doc/py_tutorials/py_imgproc/py_contours/py_contours_more_functions/py_contours_more_functions.markdown:In this chapter, we will learn about
doc/py_tutorials/py_imgproc/py_contours/py_contours_more_functions/py_contours_more_functions.markdown:We saw what is convex hull in second chapter about contours. Any deviation of the object from this
doc/py_tutorials/py_imgproc/py_contours/py_contours_more_functions/py_contours_more_functions.markdown:time consuming process. So, making it False gives about 2-3X speedup.
doc/py_tutorials/py_imgproc/py_contours/py_contours_more_functions/py_contours_more_functions.markdown:OpenCV comes with a function **cv2.matchShapes()** which enables us to compare two shapes, or two
Binary file doc/py_tutorials/py_imgproc/py_contours/py_contours_more_functions/images/defects.jpg matches
doc/py_tutorials/py_imgproc/py_contours/py_contour_properties/py_contour_properties.markdown:Diameter, Mask image, Mean Intensity etc. More features can be found at [Matlab regionprops
doc/py_tutorials/py_imgproc/py_contours/py_contour_properties/py_contour_properties.markdown:-#  There are still some features left in matlab regionprops doc. Try to implement them.
Binary file doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/images/hierarchy.png matches
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:This time, we learn about the hierarchy of contours, i.e. the parent-child relationship in Contours.
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:What about contour-2? There is no next contour in the same level. So simply, put Next = -1. What
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:about contour-4? It is in same level with contour-5. So its next contour is contour-5, so Next = 5.
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:It is same as above. Previous contour of contour-1 is contour-0 in the same level. Similarly for
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:corresponding index value of contour-2a. What about contour-3a? It has two children. But we take
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:So now we know about the hierarchy style used in OpenCV, we can check into Contour Retrieval Modes
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:in OpenCV with the help of same image given above. ie what do flags like cv2.RETR_LIST,
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:can say, under this law, Only the eldest in every family is taken care of. It doesn't care about
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:element is same as above. Compare it with above result. Below is what I got :
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:We can explain it with a simple image. Here I have labelled the order of contours in red color and
doc/py_tutorials/py_imgproc/py_contours/py_contours_hierarchy/py_contours_hierarchy.markdown:For examle, I took above image, rewrite the code for cv2.RETR_TREE, reorder the contours as per the
Binary file doc/py_tutorials/py_imgproc/py_contours/images/contour_hierarchy.jpg matches
doc/py_tutorials/py_imgproc/py_contours/py_table_of_contents_contours.markdown:Contours in OpenCV {#tutorial_py_table_of_contents_contours}
doc/py_tutorials/py_imgproc/py_contours/py_table_of_contents_contours.markdown:    about Contour Hierarchy
Binary file doc/py_tutorials/py_imgproc/py_gradients/images/gradients.jpg matches
doc/py_tutorials/py_imgproc/py_gradients/py_gradients.markdown:like cv2.CV_16S, cv2.CV_64F etc, take its absolute value and then convert back to cv2.CV_8U.
doc/py_tutorials/py_imgproc/py_gradients/py_gradients.markdown:# Output dtype = cv2.CV_64F. Then take its absolute and convert to cv2.CV_8U
doc/py_tutorials/py_imgproc/py_gradients/py_gradients.markdown:abs_sobel64f = np.absolute(sobelx64f)
doc/py_tutorials/py_imgproc/py_gradients/py_gradients.markdown:sobel_8u = np.uint8(abs_sobel64f)
doc/py_tutorials/py_imgproc/py_gradients/py_gradients.markdown:plt.title('Sobel abs(CV_64F)'), plt.xticks([]), plt.yticks([])
Binary file doc/py_tutorials/py_imgproc/py_template_matching/images/template_sqdiff_5.jpg matches
Binary file doc/py_tutorials/py_imgproc/images/gradient.jpg matches
Binary file doc/py_tutorials/py_imgproc/images/contours.jpg matches
doc/py_tutorials/py_imgproc/py_morphological_ops/py_morphological_ops.markdown:we explained above. Here we use the function, **cv2.morphologyEx()**
doc/py_tutorials/py_imgproc/py_colorspaces/py_colorspaces.markdown:There are more than 150 color-space conversion methods available in OpenCV. But we will look into
doc/py_tutorials/py_imgproc/py_houghlines/images/houghlines1.svg:         rdf:about="">
doc/py_tutorials/py_imgproc/py_houghlines/images/houghlines1.svg:     inkscape:label="Layer 1"
Binary file doc/py_tutorials/py_imgproc/py_houghlines/images/houghlinesdemo.gif matches
Binary file doc/py_tutorials/py_imgproc/py_houghlines/images/houghlines5.jpg matches
Binary file doc/py_tutorials/py_imgproc/py_houghlines/images/houghlines3.jpg matches
doc/py_tutorials/py_imgproc/py_houghlines/py_houghlines.markdown:is going above the origin, instead of taking angle greater than 180, angle is taken less than 180,
doc/py_tutorials/py_imgproc/py_houghlines/py_houghlines.markdown:Now take the second point on the line. Do the same as above. Increment the the values in the cells
doc/py_tutorials/py_imgproc/py_houghlines/py_houghlines.markdown:Everything explained above is encapsulated in the OpenCV function, \*\*cv2.HoughLines()\*\*. It simply returns an array of :math:(rho,
doc/py_tutorials/py_imgproc/py_houghlines/py_houghlines.markdown:Probabilistic Hough Transform
doc/py_tutorials/py_imgproc/py_houghlines/py_houghlines.markdown:computation. Probabilistic Hough Transform is an optimization of Hough Transform we saw. It doesn't
doc/py_tutorials/py_imgproc/py_houghlines/py_houghlines.markdown:Hough Transform and Probabilistic Hough Transform in hough space. (Image Courtesy : [Franck
doc/py_tutorials/py_imgproc/py_houghlines/py_houghlines.markdown:OpenCV implementation is based on Robust Detection of Lines Using the Progressive Probabilistic
Binary file doc/py_tutorials/py_imgproc/py_watershed/images/water_marker.jpg matches
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:with different colored water (labels). As the water rises, depending on the peaks (gradients)
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:do is to give different labels for our object we know. Label the region which we are sure of being
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:the foreground or object with one color (or intensity), label the region which we are sure of being
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:anything, label it with 0. That is our marker. Then apply watershed algorithm. Then our marker will
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:be updated with the labels we gave, and the boundaries of objects will have a value of -1.
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:(it is an array of same size as that of original image, but with int32 datatype) and label the
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:regions inside it. The regions we know for sure (whether foreground or background) are labelled with
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:zero. For this we use **cv2.connectedComponents()**. It labels background of the image with 0, then
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:other objects are labelled with integers starting from 1.
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:# Marker labelling
doc/py_tutorials/py_imgproc/py_watershed/py_watershed.markdown:# Add one to all labels so that sure background is not 0, but 1
doc/py_tutorials/py_imgproc/py_pyramids/py_pyramids.markdown:    -   We will learn about Image Pyramids
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:Interactive Foreground Extraction using GrabCut Algorithm {#tutorial_py_grabcut}
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:    -   We will see GrabCut algorithm to extract foreground in images
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:GrabCut algorithm was designed by Carsten Rother, Vladimir Kolmogorov & Andrew Blake from Microsoft
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:Research Cambridge, UK. in their paper, ["GrabCut": interactive foreground extraction using iterated
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:extraction with minimal user interaction, and the result was GrabCut.
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:![image](images/grabcut_output1.jpg)
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:    foreground and background are considered as hard-labelling which means they won't change in
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:-   Computer does an initial labelling depeding on the data we gave. It labels the foreground and
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:    background pixels (or it hard-labels)
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:    unknown pixels are labelled either probable foreground or probable background depending on its
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:    relation with the other hard-labelled pixels in terms of color statistics (It is just like
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:-   The weights of edges connecting pixels to source node/end node are defined by the probability
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:![image](images/grabcut_scheme.jpg)
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:Now we go for grabcut algorithm with OpenCV. OpenCV has the function, **cv2.grabCut()** for this. We
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:    probable background/foreground etc. It is done by the following flags, **cv2.GC_BGD,
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:rectangle. Then run the grabcut. It modifies the mask image. In the new mask image, pixels will be
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:marked with four flags denoting background/foreground as specified above. So we modify the mask such
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:cv2.grabCut(img,mask,rect,bgdModel,fgdModel,5,cv2.GC_INIT_WITH_RECT)
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:![image](images/grabcut_rect.jpg)
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:# newmask is the mask image I manually labelled
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:mask, bgdModel, fgdModel = cv2.grabCut(img,mask,None,bgdModel,fgdModel,5,cv2.GC_INIT_WITH_MASK)
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:![image](images/grabcut_mask.jpg)
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:mark the rectangle area in mask image with 2-pixel or 3-pixel (probable background/foreground). Then
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:mark our sure_foreground with 1-pixel as we did in second example. Then directly apply the grabCut
doc/py_tutorials/py_imgproc/py_grabcut/py_grabcut.markdown:-#  OpenCV samples contain a sample grabcut.py which is an interactive tool using grabcut. Check it.
Binary file doc/py_tutorials/py_imgproc/py_grabcut/images/grabcut_scheme.jpg matches
doc/py_tutorials/py_imgproc/py_canny/py_canny.markdown:In this chapter, we will learn about
doc/py_tutorials/py_imgproc/py_canny/py_canny.markdown:    The edge A is above the maxVal, so considered as "sure-edge". Although edge C is below maxVal, it is
doc/py_tutorials/py_imgproc/py_canny/py_canny.markdown:    although it is above minVal and is in same region as that of edge C, it is not connected to any
doc/py_tutorials/py_imgproc/py_canny/py_canny.markdown:OpenCV puts all the above in single function, **cv2.Canny()**. We will see how to use it. First
doc/py_tutorials/py_imgproc/py_canny/py_canny.markdown:magnitude. If it is True, it uses the equation mentioned above which is more accurate, otherwise it
doc/py_tutorials/py_ml/py_svm/py_svm_opencv/py_svm_opencv.markdown:    if abs(m['mu02']) < 1e-2:
doc/py_tutorials/py_ml/py_svm/py_svm_opencv/py_svm_opencv.markdown:Below image shows above deskew function applied to an image of zero. Left image is the original
doc/py_tutorials/py_ml/py_svm/py_svm_opencv/py_svm_opencv.markdown:    if abs(m['mu02']) < 1e-2:
doc/py_tutorials/py_ml/py_svm/py_svm_opencv/py_svm_opencv.markdown:-#  OpenCV samples contain digits.py which applies a slight improvement of the above method to get
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:### Linearly Separable Data
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:hyperplanes in higher dimensions) is called **Linear Separable**.
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:So in above image, you can see plenty of such lines are possible. Which one we will take? Very
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:worry about all the data. It helps in data reduction.
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:where \f$t_i\f$ is the label of each class, \f$t_i \in [-1,1]\f$.
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:### Non-Linearly Separable Data
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:separable. But there are methods to solve these kinds of problems. If we can map this data set with
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:a function, \f$f(x) = x^2\f$, we get 'X' at 9 and 'O' at 1 which are linear separable.
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:This is also linear separable. In short, chance is more for a non-linear separable data in
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:lower-dimensional space to become linear separable in higher-dimensional space.
doc/py_tutorials/py_ml/py_svm/py_svm_basics/py_svm_basics.markdown:\f$(D>d)\f$ to check the possibility of linear separability. There is an idea which helps to compute the
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:    -   We will try with Digits and Alphabets data available that comes with OpenCV.
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:# Create labels for train and test data
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:train_labels = np.repeat(k,250)[:,np.newaxis]
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:test_labels = train_labels.copy()
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:knn.train(train,train_labels)
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:# For that, compare the result with test_labels and check which are wrong
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:matches = result==test_labels
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:np.savez('knn_data.npz',train=train, train_labels=train_labels)
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:    train_labels = data['train_labels']
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:OCR of English Alphabets
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:Next we will do the same for English alphabets, but there is a slight change in data and feature
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:like garbage. Actually, in each row, first column is an alphabet which is our label. Next 16 numbers
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:There are 20000 samples available, so we take first 10000 data as training samples and remaining
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:10000 as test samples. We should change the alphabets to ascii characters because we can't work with
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:alphabets directly.
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:labels, testData = np.hsplit(test,[1])
doc/py_tutorials/py_ml/py_knn/py_knn_opencv/py_knn_opencv.markdown:correct = np.count_nonzero(result == labels)
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:kNN is one of the simplest of classification algorithms available for supervised learning. The idea
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:-   You need to have information about all the houses in town, right? Because, we have to check
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:We will do a simple example here, with two families (classes), just like above. Then in the next
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:So here, we label the Red family as **Class-0** (so denoted by 0) and Blue family as **Class-1**
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:(denoted by 1). We create 25 families or 25 training data, and label them either Class-0 or Class-1.
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:# Labels each one either Red or Blue with numbers 0 and 1
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:-#  The label given to new-comer depending upon the kNN theory we saw earlier. If you want Nearest
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:2.  The labels of k-Nearest Neighbours.
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:It says our new-comer got 3 neighbours, all from Blue family. Therefore, he is labelled as Blue
doc/py_tutorials/py_ml/py_knn/py_knn_understanding/py_knn_understanding.markdown:# The results also will contain 10 labels.
doc/py_tutorials/py_ml/py_table_of_contents_ml.markdown:Machine Learning {#tutorial_py_table_of_contents_ml}
doc/py_tutorials/py_ml/py_table_of_contents_ml.markdown:    Plus learn about handwritten digit recognition using kNN
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_understanding/py_kmeans_understanding.markdown:closer to \f$C1\f$, then that data is labelled with '0'. If it is closer to \f$C2\f$, then labelled as '1'
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_understanding/py_kmeans_understanding.markdown:(If more centroids are there, labelled as '2','3' etc).
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_understanding/py_kmeans_understanding.markdown:In our case, we will color all '0' labelled with red, and '1' labelled with blue. So we get
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_understanding/py_kmeans_understanding.markdown:following image after above operations.
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_understanding/py_kmeans_understanding.markdown:![image](images/initial_labelling.jpg)
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_understanding/py_kmeans_understanding.markdown:And again, perform step 2 with new centroids and label data to '0' and '1'.
Binary file doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/images/oc_color_quantization.jpg matches
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:            - **cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_MAX_ITER** - stop the iteration when any of the above condition is met.
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:    initial labellings. The algorithm returns the labels that yield the best compactness. This
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:-#  **labels** : This is the label array (same as 'code' in previous article) where each element
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:compactness,labels,centers = cv2.kmeans(z,2,None,criteria,10,flags)
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:This gives us the compactness, labels and centers. In this case, I got centers as 60 and 207. Labels
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:will have the same size as that of test data where each data will be labelled as '0','1','2' etc.
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:depending on their centroids. Now we split the data to different clusters depending on their labels.
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:A = z[labels==0]
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:B = z[labels==1]
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:ret,label,center=cv2.kmeans(Z,2,None,criteria,10,cv2.KMEANS_RANDOM_CENTERS)
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:A = Z[label.ravel()==0]
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:B = Z[label.ravel()==1]
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:plt.xlabel('Height'),plt.ylabel('Weight')
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:ret,label,center=cv2.kmeans(Z,K,None,criteria,10,cv2.KMEANS_RANDOM_CENTERS)
doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.markdown:res = center[label.flatten()]
Binary file doc/py_tutorials/py_ml/images/svmicon.png matches
doc/py_tutorials/py_photo/py_table_of_contents_photo.markdown:Computational Photography {#tutorial_py_table_of_contents_photo}
Binary file doc/py_tutorials/py_photo/py_hdr/images/fusion_mertens.jpg matches
Binary file doc/py_tutorials/py_photo/py_hdr/images/crf.jpg matches
Binary file doc/py_tutorials/py_photo/py_hdr/images/exposures.jpg matches
Binary file doc/py_tutorials/py_photo/py_hdr/images/ldr_robertson.jpg matches
Binary file doc/py_tutorials/py_photo/py_inpainting/images/inpaint_result.jpg matches
doc/py_tutorials/py_photo/py_inpainting/py_inpainting.markdown:like a manual heuristic operation. This algorithm is enabled by using the flag, cv2.INPAINT_TELEA.
doc/py_tutorials/py_photo/py_inpainting/py_inpainting.markdown:color is filled to reduce minimum variance in that area. This algorithm is enabled by using the
doc/py_tutorials/py_photo/py_inpainting/py_inpainting.markdown:    Adobe Photoshop. On further search, I was able to find that same technique is already there in
doc/py_tutorials/py_photo/py_non_local_means/py_non_local_means.markdown:-   You will learn about Non-local Means Denoising algorithm to remove noise in the image.
doc/py_tutorials/py_photo/py_non_local_means/py_non_local_means.markdown:There is a property of noise. Noise is generally considered to be a random variable with zero mean.
doc/py_tutorials/py_photo/py_non_local_means/py_non_local_means.markdown:one noisy image available.
doc/py_tutorials/py_photo/py_non_local_means/py_non_local_means.markdown:image. Sometimes in a small neigbourhood around it. What about using these similar patches together
doc/py_tutorials/py_photo/py_non_local_means/py_non_local_means.markdown:4.  **cv2.fastNlMeansDenoisingColoredMulti()** - same as above, but for color images.
doc/py_tutorials/py_photo/py_non_local_means/py_non_local_means.markdown:As mentioned above it is used to remove noise from color images. (Noise is expected to be gaussian).
doc/py_tutorials/py_photo/py_non_local_means/py_non_local_means.markdown:It takes considerable amount of time for computation. In the result, first image is the original
Binary file doc/py_tutorials/py_photo/py_non_local_means/images/nlm_result1.jpg matches
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_setup
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_gui
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_core
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_imgproc
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_feature2d
doc/py_tutorials/py_tutorials.markdown:    you will learn about feature detectors and descriptors
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_video
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_calib3d
doc/py_tutorials/py_tutorials.markdown:    will learn about camera calibration, stereo imaging etc.
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_ml
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_photo
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_objdetect
doc/py_tutorials/py_tutorials.markdown:-   @subpage tutorial_py_table_of_contents_bindings
doc/py_tutorials/py_gui/py_image_display/py_image_display.markdown:that case, you can specify whether window is resizable or not. It is done with the function
doc/py_tutorials/py_gui/py_image_display/py_image_display.markdown:@sa Plenty of plotting options are available in Matplotlib. Please refer to Matplotlib docs for more
doc/py_tutorials/py_gui/py_mouse_handling/py_mouse_handling.markdown:location, we can do whatever we like. To list all available events available, run the following code
doc/py_tutorials/py_gui/py_video_display/py_video_display.markdown:is a number from 0 to 18. Each number denotes a property of the video (if it is applicable to that
doc/py_tutorials/py_gui/py_video_display/py_video_display.markdown:list of available codes can be found in [fourcc.org](http://www.fourcc.org/codecs.php). It is
doc/py_tutorials/py_gui/py_video_display/py_video_display.markdown:-   In Fedora: DIVX, XVID, MJPG, X264, WMV1, WMV2. (XVID is more preferable. MJPG results in high
doc/py_tutorials/py_gui/py_drawing_functions/py_drawing_functions.markdown:In all the above functions, you will see some common arguments as given below:
doc/py_tutorials/py_gui/py_drawing_functions/py_drawing_functions.markdown:rectangle drawn above.
doc/py_tutorials/py_gui/py_drawing_functions/py_drawing_functions.markdown:-#  Try to create the logo of OpenCV using drawing functions available in OpenCV.
doc/py_tutorials/py_gui/py_trackbar/py_trackbar.markdown:-#  Create a Paint application with adjustable colors and brush radius using trackbars. For drawing,
doc/py_tutorials/py_gui/py_table_of_contents_gui.markdown:Gui Features in OpenCV {#tutorial_py_table_of_contents_gui}
doc/py_tutorials/py_setup/py_setup_in_fedora/py_setup_in_fedora.markdown:OpenCV-Python can be installed in Fedora in two ways, 1) Install from pre-built binaries available
doc/py_tutorials/py_setup/py_setup_in_fedora/py_setup_in_fedora.markdown:you want to enable it, you need to install TBB first. ( Also while configuring installation with
doc/py_tutorials/py_setup/py_setup_in_fedora/py_setup_in_fedora.markdown:documentation, but we exclude Performance tests and building samples. We also disable GPU related
doc/py_tutorials/py_setup/py_setup_in_fedora/py_setup_in_fedora.markdown:-   Enable TBB and Eigen support:
doc/py_tutorials/py_setup/py_setup_in_fedora/py_setup_in_fedora.markdown:-   Enable documentation and disable tests and samples
doc/py_tutorials/py_setup/py_setup_in_fedora/py_setup_in_fedora.markdown:-   Disable all GPU related modules.
doc/py_tutorials/py_setup/py_setup_in_fedora/py_setup_in_fedora.markdown:some problem has happened. So check if you have correctly performed above steps.
doc/py_tutorials/py_setup/py_setup_in_fedora/py_setup_in_fedora.markdown:should be able to find OpenCV module. You have two options for that.
doc/py_tutorials/py_setup/py_intro/py_intro.markdown:available on different platforms including Windows, Linux, OS X, Android, and iOS. Interfaces for
doc/py_tutorials/py_setup/py_intro/py_intro.markdown:popular very quickly, mainly because of its simplicity and code readability. It enables the
doc/py_tutorials/py_setup/py_intro/py_intro.markdown:programmer to express ideas in fewer lines of code without reducing readability.
doc/py_tutorials/py_setup/py_intro/py_intro.markdown:OpenCV introduces a new set of tutorials which will guide you through various functions available in
doc/py_tutorials/py_setup/py_table_of_contents_setup.markdown:Introduction to OpenCV {#tutorial_py_table_of_contents_setup}
doc/py_tutorials/py_objdetect/py_table_of_contents_objdetect.markdown:Object Detection {#tutorial_py_table_of_contents_objdetect}
Binary file doc/py_tutorials/py_objdetect/py_face_detection/images/haar_features.jpg matches
doc/py_tutorials/py_objdetect/py_face_detection/py_face_detection.markdown:best features out of 160000+ features? It is achieved by **Adaboost**.
doc/py_tutorials/py_objdetect/py_face_detection/py_face_detection.markdown:stages. (Two features in the above image is actually obtained as the best two features from
doc/py_tutorials/py_objdetect/py_face_detection/py_face_detection.markdown:Adaboost). According to authors, on an average, 10 features out of 6000+ are evaluated per
doc/py_tutorials/py_calib3d/py_table_of_contents_calib3d.markdown:Camera Calibration and 3D Reconstruction {#tutorial_py_table_of_contents_calib3d}
doc/py_tutorials/py_calib3d/py_pose/py_pose.markdown:the camera matrix, distortion coefficients etc. Given a pattern image, we can utilize the above
Binary file doc/py_tutorials/py_calib3d/py_pose/images/pose_1.jpg matches
doc/py_tutorials/py_calib3d/py_calibration/py_calibration.markdown:    -   We will learn about distortions in camera, intrinsic and extrinsic parameters of camera etc.
doc/py_tutorials/py_calib3d/py_calibration/py_calibration.markdown:As mentioned above, we need atleast 10 test patterns for camera calibration. OpenCV comes with some
doc/py_tutorials/py_calib3d/py_calibration/py_calibration.markdown:What about the 3D points from real world space? Those images are taken from a static camera and
doc/py_tutorials/py_calib3d/py_calibration/py_calibration.markdown:@sa This function may not be able to find the required pattern in all the images. So one good option
doc/py_tutorials/py_calib3d/py_calibration/py_calibration.markdown:This is the shortest path. Just call the function and use ROI obtained above to crop the result.
doc/py_tutorials/py_calib3d/py_calibration/py_calibration.markdown:the absolute norm between what we got with our transformation and the corner finding algorithm. To
Binary file doc/py_tutorials/py_calib3d/py_calibration/images/calib_radial.jpg matches
doc/py_tutorials/py_calib3d/py_depthmap/py_depthmap.markdown:The above diagram contains equivalent triangles. Writing their equivalent equations will yield us
doc/py_tutorials/py_calib3d/py_depthmap/py_depthmap.markdown:length of camera (already known). So in short, above equation says that the depth of a point in a
doc/py_tutorials/py_calib3d/py_epipolar_geometry/py_epipolar_geometry.markdown:-   We will learn about the basics of multiview geometry
doc/py_tutorials/py_calib3d/py_epipolar_geometry/py_epipolar_geometry.markdown:\f$O\f$ and \f$O'\f$ are the camera centers. From the setup given above, you can see that projection of
doc/py_tutorials/py_calib3d/py_epipolar_geometry/py_epipolar_geometry.markdown:the epipole of the left camera. In some cases, you won't be able to locate the epipole in the image,
doc/py_tutorials/py_calib3d/py_epipolar_geometry/py_epipolar_geometry.markdown:the information about translation and rotation, which describe the location of the second camera
doc/py_tutorials/py_calib3d/py_epipolar_geometry/py_epipolar_geometry.markdown:same information as Essential Matrix in addition to the information about the intrinsics of both
Binary file doc/py_tutorials/py_calib3d/py_epipolar_geometry/images/epiresult.jpg matches
doc/py_tutorials/py_video/py_table_of_contents_video.markdown:Video Analysis {#tutorial_py_table_of_contents_video}
doc/py_tutorials/py_video/py_bg_subtraction/py_bg_subtraction.markdown:-   We will familiarize with the background subtraction methods available in OpenCV.
doc/py_tutorials/py_video/py_bg_subtraction/py_bg_subtraction.markdown:entering or leaving the room, or a traffic camera extracting information about the vehicles etc. In
doc/py_tutorials/py_video/py_bg_subtraction/py_bg_subtraction.markdown:the time proportions that those colours stay in the scene. The probable background colours are the
doc/py_tutorials/py_video/py_bg_subtraction/py_bg_subtraction.markdown:Tracking of Human Visitors under Variable-Lighting Conditions for a Responsive Audio Art
doc/py_tutorials/py_video/py_bg_subtraction/py_bg_subtraction.markdown:It uses first few (120 by default) frames for background modelling. It employs probabilistic
doc/py_tutorials/py_video/py_bg_subtraction/py_bg_subtraction.markdown:observations to accommodate variable illumination. Several morphological filtering operations like
Binary file doc/py_tutorials/py_video/py_bg_subtraction/images/resframe.jpg matches
Binary file doc/py_tutorials/py_video/py_bg_subtraction/images/resmog2.jpg matches
doc/py_tutorials/py_video/py_meanshift/py_meanshift.markdown:-   We will learn about Meanshift and Camshift algorithms to find and track objects in videos.
doc/py_tutorials/py_video/py_meanshift/py_meanshift.markdown:centroid. Again find the new centroid. Most probably, it won't match. So move it again, and continue
doc/py_tutorials/py_video/py_meanshift/py_meanshift.markdown:size with size and rotation of the target. Once again, the solution came from "OpenCV Labs" and it
Binary file doc/py_tutorials/py_video/py_meanshift/images/meanshift_face.gif matches
Binary file doc/py_tutorials/py_video/py_meanshift/images/camshift_face.gif matches
Binary file doc/py_tutorials/py_video/py_meanshift/images/camshift_result.jpg matches
doc/py_tutorials/py_video/py_lucas_kanade/py_lucas_kanade.markdown:-   Video Stabilization ...
doc/py_tutorials/py_video/py_lucas_kanade/py_lucas_kanade.markdown:one equation with two unknown variables. So several methods are provided to solve this problem and
doc/py_tutorials/py_video/py_lucas_kanade/py_lucas_kanade.markdown:two unknown variables which is over-determined. A better solution is obtained with least square fit
doc/py_tutorials/py_video/py_lucas_kanade/py_lucas_kanade.markdown:Below sample shows how to find the dense optical flow using above algorithm. We get a 2-channel
doc/py_tutorials/py_core/py_table_of_contents_core.markdown:Core Operations {#tutorial_py_table_of_contents_core}
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:of odd size ranging from 5 to 49. (Don't worry about what will the result look like, that is not our
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:support them). It is enabled by default while compiling. So OpenCV runs the optimized code if it is
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:enabled, else it runs the unoptimized code. You can use **cv2.useOptimized()** to check if it is
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:enabled/disabled and **cv2.setUseOptimized()** to enable/disable it. Let's see a simple example.
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:# check if optimization is enabled
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:# Disable it
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:you can see median filtering is SIMD optimized. So you can use this to enable optimization at the
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:top of your code (remember it is enabled by default).
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:Once again, they are suitable to measure single line codes.
doc/py_tutorials/py_core/py_optimization/py_optimization.markdown:inevitable, use additional libraries like Cython to make it faster.
doc/py_tutorials/py_core/py_image_arithmetics/py_image_arithmetics.markdown:I want to put OpenCV logo above an image. If I add two images, it will change color. If I blend it,
doc/py_tutorials/py_core/py_image_arithmetics/py_image_arithmetics.markdown:more understanding, display all the intermediate images in the above code, especially img1_bg and
Binary file doc/py_tutorials/py_core/py_image_arithmetics/images/overlay.jpg matches
doc/py_tutorials/py_core/py_basic_ops/py_basic_ops.markdown:            like this : *fedcba|abcdefgh|hgfedcb*
doc/py_tutorials/py_core/py_basic_ops/py_basic_ops.markdown:        -   **cv2.BORDER_REFLECT_101** or **cv2.BORDER_DEFAULT** - Same as above, but with a
doc/py_tutorials/py_core/py_basic_ops/py_basic_ops.markdown:            slight change, like this : *gfedcb|abcdefgh|gfedcba*
doc/py_tutorials/py_core/py_basic_ops/py_basic_ops.markdown:            *aaaaaa|abcdefgh|hhhhhhh*
doc/py_tutorials/py_core/py_basic_ops/py_basic_ops.markdown:            *cdefgh|abcdefgh|abcdefg*
Binary file doc/py_tutorials/py_core/py_basic_ops/images/border.jpg matches
doc/py_tutorials/py_bindings/py_table_of_contents_bindings.markdown:OpenCV-Python Bindings {#tutorial_py_table_of_contents_bindings}
doc/py_tutorials/py_bindings/py_bindings_basics/py_bindings_basics.markdown:create a bridge between C++ and Python which enables users to call C++ functions from Python. To get
doc/py_tutorials/py_bindings/py_bindings_basics/py_bindings_basics.markdown:Python. It will automatically check all the modules to be extended and grab their header files.
doc/py_tutorials/py_bindings/py_bindings_basics/py_bindings_basics.markdown:Python lists. So these lists contain all details about a particular function, class etc. For
doc/py_tutorials/py_bindings/py_bindings_basics/py_bindings_basics.markdown:the beginning of these declarations which enables the header parser to identify functions to be
doc/py_tutorials/py_bindings/py_bindings_basics/py_bindings_basics.markdown:functions are available, so each one is named with a suffix in Python. Similarly CV_WRAP_AS can be
doc/py_tutorials/py_bindings/py_bindings_basics/py_bindings_basics.markdown:So these are the major extension macros available in OpenCV. Typically, a developer has to put
Binary file doc/pattern.png matches
doc/pattern_tools/svgfig.py:        if re.search("windows", platform.system(), re.I) and not os.path.isabs(fileName):
doc/pattern_tools/svgfig.py:        """View in "inkview", assuming that program is available on your system.
doc/pattern_tools/svgfig.py:        """View in "inkscape", assuming that program is available on your system.
doc/pattern_tools/svgfig.py:        """View in "firefox", assuming that program is available on your system.
doc/pattern_tools/svgfig.py:    """Same as canvas(), but draws an outline around the drawable area,
doc/pattern_tools/svgfig.py:    vars       default=("x", "y")        independent variable names; a singleton
doc/pattern_tools/svgfig.py:    globals    default=None              dict of global variables
doc/pattern_tools/svgfig.py:    locals     default=None              dict of local variables
doc/pattern_tools/svgfig.py:    if callable(expr):
doc/pattern_tools/svgfig.py:            raise TypeError, "must be a function of 2 or 1 variables"
doc/pattern_tools/svgfig.py:    xlabels         True          request tick labels according to the standard tick label
doc/pattern_tools/svgfig.py:    text_attr       {}            a dictionary of attributes for label text
doc/pattern_tools/svgfig.py:                    "atx": 0, "xticks": -10, "xminiticks": True, "xlabels": True, "xlogbase": None,
doc/pattern_tools/svgfig.py:                    "aty": 0, "yticks": -10, "yminiticks": True, "ylabels": True, "ylogbase": None,
doc/pattern_tools/svgfig.py:        self.xlabels = kwds["xlabels"]; del kwds["xlabels"]
doc/pattern_tools/svgfig.py:        self.ylabels = kwds["ylabels"]; del kwds["ylabels"]
doc/pattern_tools/svgfig.py:                   self.xticks, self.xminiticks, self.xlabels, self.xlogbase,
doc/pattern_tools/svgfig.py:                   self.yticks, self.yminiticks, self.ylabels, self.ylogbase,
doc/pattern_tools/svgfig.py:        xtitle          None          if a string, label the x axis
doc/pattern_tools/svgfig.py:        xlabels         True          request tick labels according to the standard tick label
doc/pattern_tools/svgfig.py:        text_attr       {}            a dictionary of attributes for label text
doc/pattern_tools/svgfig.py:                    "xtitle": None, "xticks": -10, "xminiticks": True, "xlabels": True,
doc/pattern_tools/svgfig.py:                    "x2labels": None, "xlogbase": None,
doc/pattern_tools/svgfig.py:                    "ytitle": None, "yticks": -10, "yminiticks": True, "ylabels": True,
doc/pattern_tools/svgfig.py:                    "y2labels": None, "ylogbase": None,
doc/pattern_tools/svgfig.py:        self.xlabels = kwds["xlabels"]; del kwds["xlabels"]
doc/pattern_tools/svgfig.py:        self.x2labels = kwds["x2labels"]; del kwds["x2labels"]
doc/pattern_tools/svgfig.py:        self.ylabels = kwds["ylabels"]; del kwds["ylabels"]
doc/pattern_tools/svgfig.py:        self.y2labels = kwds["y2labels"]; del kwds["y2labels"]
doc/pattern_tools/svgfig.py:        left = YAxis(self.ymin, self.ymax, self.xmin, self.yticks, self.yminiticks, self.ylabels, self.ylogbase,
doc/pattern_tools/svgfig.py:        right = YAxis(self.ymin, self.ymax, self.xmax, self.yticks, self.yminiticks, self.y2labels, self.ylogbase,
doc/pattern_tools/svgfig.py:        bottom = XAxis(self.xmin, self.xmax, self.ymin, self.xticks, self.xminiticks, self.xlabels, self.xlogbase,
doc/pattern_tools/svgfig.py:        top = XAxis(self.xmin, self.xmax, self.ymax, self.xticks, self.xminiticks, self.x2labels, self.xlogbase,
doc/pattern_tools/svgfig.py:    transformable in a Fig.
doc/pattern_tools/svgfig.py:    """Converts a complex "z(t)" string to a function acceptable for Curve.
doc/pattern_tools/svgfig.py:    var     default="t"     name of the independent variable
doc/pattern_tools/svgfig.py:    globals default=None    dict of global variables used in the expression;
doc/pattern_tools/svgfig.py:    locals  default=None    dict of local variables
doc/pattern_tools/svgfig.py:    """Converts a "f(t), g(t)" string to a function acceptable for Curve.
doc/pattern_tools/svgfig.py:    var     default="t"     name of the independent variable
doc/pattern_tools/svgfig.py:    globals default=None    dict of global variables used in the expression;
doc/pattern_tools/svgfig.py:    locals  default=None    dict of local variables
doc/pattern_tools/svgfig.py:    """Converts a "f(x)" string to a function acceptable for Curve.
doc/pattern_tools/svgfig.py:    var     default="x"     name of the independent variable
doc/pattern_tools/svgfig.py:    globals default=None    dict of global variables used in the expression;
doc/pattern_tools/svgfig.py:    locals  default=None    dict of local variables
doc/pattern_tools/svgfig.py:    f                      required         a Python callable or string in
doc/pattern_tools/svgfig.py:                    if denom != 0. and abs(numer/denom) < self.linearity_limit:
doc/pattern_tools/svgfig.py:            (denom != 0. and abs(numer/denom) > self.linearity_limit)):
doc/pattern_tools/svgfig.py:                                            "foreback", "smooth", or an abbreviation
doc/pattern_tools/svgfig.py:            raise ValueError, "mode must be \"lines\", \"bezier\", \"velocity\", \"foreback\", \"smooth\", or an abbreviation"
doc/pattern_tools/svgfig.py:                                                  label an auto-generated symbol;
doc/pattern_tools/svgfig.py:    miniticks, and tick labels.  This class only draws the ticks.
doc/pattern_tools/svgfig.py:    Ticks(f, low, high, ticks, miniticks, labels, logbase, arrow_start,
doc/pattern_tools/svgfig.py:    low, high               required        range of the independent variable
doc/pattern_tools/svgfig.py:    labels                  True            request tick labels according to the
doc/pattern_tools/svgfig.py:                                            standard tick label specification (below)
doc/pattern_tools/svgfig.py:    text_attr               default={}      SVG attributes for the text labels
doc/pattern_tools/svgfig.py:        * Dict of value, label pairs: draw a tick mark at each value, labeling
doc/pattern_tools/svgfig.py:    Standard tick label specification:
doc/pattern_tools/svgfig.py:        * Python callable: function that converts numbers to strings
doc/pattern_tools/svgfig.py:        * False or None: no labels
doc/pattern_tools/svgfig.py:        return "<Ticks %s from %s to %s ticks=%s labels=%s %s>" % (
doc/pattern_tools/svgfig.py:               self.f, self.low, self.high, str(self.ticks), str(self.labels), self.attr)
doc/pattern_tools/svgfig.py:    def __init__(self, f, low, high, ticks=-10, miniticks=True, labels=True, logbase=None,
doc/pattern_tools/svgfig.py:        self.labels = labels
doc/pattern_tools/svgfig.py:        eps = _epsilon * abs(self.high - self.low)
doc/pattern_tools/svgfig.py:        for t, label in self.last_ticks.items():
doc/pattern_tools/svgfig.py:            if ((not self.arrow_start or abs(t - self.low) > eps) and
doc/pattern_tools/svgfig.py:                (not self.arrow_end or abs(t - self.high) > eps)):
doc/pattern_tools/svgfig.py:            if label != "":
doc/pattern_tools/svgfig.py:                output.append(SVG("text", label, transform="translate(%g, %g) rotate(%g)" %
doc/pattern_tools/svgfig.py:                if abs(t - tt) < eps:
doc/pattern_tools/svgfig.py:            if ((not self.arrow_start or abs(t - self.low) > eps) and
doc/pattern_tools/svgfig.py:                (not self.arrow_end or abs(t - self.high) > eps)):
doc/pattern_tools/svgfig.py:        if self.labels is None or self.labels == False:
doc/pattern_tools/svgfig.py:        elif self.labels == True:
doc/pattern_tools/svgfig.py:        elif isinstance(self.labels, basestring):
doc/pattern_tools/svgfig.py:            format = lambda x: (self.labels % x)
doc/pattern_tools/svgfig.py:        elif callable(self.labels):
doc/pattern_tools/svgfig.py:            format = self.labels
doc/pattern_tools/svgfig.py:            raise TypeError, "labels must be None/False, True, a format string, or a number->string function"
doc/pattern_tools/svgfig.py:        # Cases 3 & 4: ticks is iterable
doc/pattern_tools/svgfig.py:                    if format == unumber and abs(x) < eps:
doc/pattern_tools/svgfig.py:                if format == unumber and abs(x) < eps:
doc/pattern_tools/svgfig.py:                    label = u"0"
doc/pattern_tools/svgfig.py:                    label = format(x)
doc/pattern_tools/svgfig.py:                output[x] = label
doc/pattern_tools/svgfig.py:        granularity = 10**math.ceil(math.log10(max(abs(self.low), abs(self.high))))
doc/pattern_tools/svgfig.py:                if format == unumber and abs(x) < eps:
doc/pattern_tools/svgfig.py:                    label = u"0"
doc/pattern_tools/svgfig.py:                    label = format(x)
doc/pattern_tools/svgfig.py:                trial[x] = label
doc/pattern_tools/svgfig.py:                        if 1.*abs(t - self.low)/last_granularity < _epsilon:
doc/pattern_tools/svgfig.py:                        if 1.*abs(t - self.high)/last_granularity < _epsilon:
doc/pattern_tools/svgfig.py:                    if abs(lowN - round(lowN)) < _epsilon and not low_in_ticks:
doc/pattern_tools/svgfig.py:                    if abs(highN - round(highN)) < _epsilon and not high_in_ticks:
doc/pattern_tools/svgfig.py:                    if abs(x-t) < _epsilon * (self.high - self.low):
doc/pattern_tools/svgfig.py:                if format == unumber and abs(x) < eps:
doc/pattern_tools/svgfig.py:                    label = u"0"
doc/pattern_tools/svgfig.py:                    label = format(x)
doc/pattern_tools/svgfig.py:                output[x] = label
doc/pattern_tools/svgfig.py:            label = format(x)
doc/pattern_tools/svgfig.py:                output[x] = label
doc/pattern_tools/svgfig.py:    CurveAxis(f, low, high, ticks, miniticks, labels, logbase, arrow_start, arrow_end,
doc/pattern_tools/svgfig.py:    f                      required         a Python callable or string in
doc/pattern_tools/svgfig.py:    labels                 True             request tick labels according to the
doc/pattern_tools/svgfig.py:                                            standard tick label specification
doc/pattern_tools/svgfig.py:    text_attr              default={}       SVG attributes for the text labels
doc/pattern_tools/svgfig.py:        return "<CurveAxis %s [%s, %s] ticks=%s labels=%s %s>" % (
doc/pattern_tools/svgfig.py:               self.f, self.low, self.high, str(self.ticks), str(self.labels), self.attr)
doc/pattern_tools/svgfig.py:    def __init__(self, f, low, high, ticks=-10, miniticks=True, labels=True, logbase=None,
doc/pattern_tools/svgfig.py:        Ticks.__init__(self, f, low, high, ticks, miniticks, labels, logbase, arrow_start, arrow_end, tattr, **attr)
doc/pattern_tools/svgfig.py:    LineAxis(x1, y1, x2, y2, start, end, ticks, miniticks, labels, logbase,
doc/pattern_tools/svgfig.py:    start, end              default=0, 1    values to start and end labeling
doc/pattern_tools/svgfig.py:    labels                  True            request tick labels according to the
doc/pattern_tools/svgfig.py:                                            standard tick label specification
doc/pattern_tools/svgfig.py:    text_attr               default={}      SVG attributes for the text labels
doc/pattern_tools/svgfig.py:        return "<LineAxis (%g, %g) to (%g, %g) ticks=%s labels=%s %s>" % (
doc/pattern_tools/svgfig.py:               self.x1, self.y1, self.x2, self.y2, str(self.ticks), str(self.labels), self.attr)
doc/pattern_tools/svgfig.py:    def __init__(self, x1, y1, x2, y2, start=0., end=1., ticks=-10, miniticks=True, labels=True,
doc/pattern_tools/svgfig.py:        Ticks.__init__(self, None, None, None, ticks, miniticks, labels, logbase, arrow_start, arrow_end, tattr, **attr)
doc/pattern_tools/svgfig.py:        for loc, label in ticks.items():
doc/pattern_tools/svgfig.py:                ticks2[loc] = label
doc/pattern_tools/svgfig.py:    XAxis(xmin, xmax, aty, ticks, miniticks, labels, logbase, arrow_start, arrow_end,
doc/pattern_tools/svgfig.py:    labels                  True            request tick labels according to the
doc/pattern_tools/svgfig.py:                                            standard tick label specification
doc/pattern_tools/svgfig.py:                                            labels within this range
doc/pattern_tools/svgfig.py:    text_attr               default={}      SVG attributes for the text labels
doc/pattern_tools/svgfig.py:        return "<XAxis (%g, %g) at y=%g ticks=%s labels=%s %s>" % (
doc/pattern_tools/svgfig.py:               self.xmin, self.xmax, self.aty, str(self.ticks), str(self.labels), self.attr) # XXX self.xmin/xmax undefd!
doc/pattern_tools/svgfig.py:    def __init__(self, xmin, xmax, aty=0, ticks=-10, miniticks=True, labels=True, logbase=None,
doc/pattern_tools/svgfig.py:        LineAxis.__init__(self, xmin, aty, xmax, aty, xmin, xmax, ticks, miniticks, labels, logbase, arrow_start, arrow_end, exclude, tattr, **attr)
doc/pattern_tools/svgfig.py:    YAxis(ymin, ymax, atx, ticks, miniticks, labels, logbase, arrow_start, arrow_end,
doc/pattern_tools/svgfig.py:    labels                  True            request tick labels according to the
doc/pattern_tools/svgfig.py:                                            standard tick label specification
doc/pattern_tools/svgfig.py:                                            labels within this range
doc/pattern_tools/svgfig.py:    text_attr               default={}      SVG attributes for the text labels
doc/pattern_tools/svgfig.py:        return "<YAxis (%g, %g) at x=%g ticks=%s labels=%s %s>" % (
doc/pattern_tools/svgfig.py:               self.ymin, self.ymax, self.atx, str(self.ticks), str(self.labels), self.attr) # XXX self.ymin/ymax undefd!
doc/pattern_tools/svgfig.py:    def __init__(self, ymin, ymax, atx=0, ticks=-10, miniticks=True, labels=True, logbase=None,
doc/pattern_tools/svgfig.py:        LineAxis.__init__(self, atx, ymin, atx, ymax, ymin, ymax, ticks, miniticks, labels, logbase, arrow_start, arrow_end, exclude, tattr, **attr)
doc/pattern_tools/svgfig.py:    Axes(xmin, xmax, ymin, ymax, atx, aty, xticks, xminiticks, xlabels, xlogbase,
doc/pattern_tools/svgfig.py:    yticks, yminiticks, ylabels, ylogbase, arrows, text_attr, attribute=value)
doc/pattern_tools/svgfig.py:    xlabels                  True           request tick labels according to the
doc/pattern_tools/svgfig.py:                                            standard tick label specification
doc/pattern_tools/svgfig.py:    ylabels                  True           request tick labels according to the
doc/pattern_tools/svgfig.py:                                            standard tick label specification
doc/pattern_tools/svgfig.py:    text_attr                default={}     SVG attributes for the text labels
doc/pattern_tools/svgfig.py:                 xticks=-10, xminiticks=True, xlabels=True, xlogbase=None,
doc/pattern_tools/svgfig.py:                 yticks=-10, yminiticks=True, ylabels=True, ylogbase=None,
doc/pattern_tools/svgfig.py:        self.xticks, self.xminiticks, self.xlabels, self.xlogbase = xticks, xminiticks, xlabels, xlogbase
doc/pattern_tools/svgfig.py:        self.yticks, self.yminiticks, self.ylabels, self.ylogbase = yticks, yminiticks, ylabels, ylogbase
doc/pattern_tools/svgfig.py:        xmargin = 0.1 * abs(self.ymin - self.ymax)
doc/pattern_tools/svgfig.py:        ymargin = 0.1 * abs(self.xmin - self.xmax)
doc/pattern_tools/svgfig.py:        xaxis = XAxis(self.xmin, self.xmax, aty, self.xticks, self.xminiticks, self.xlabels, self.xlogbase, xarrow_start, xarrow_end, exclude=xexclude, text_attr=self.text_attr, **self.attr).SVG(trans)
doc/pattern_tools/svgfig.py:        yaxis = YAxis(self.ymin, self.ymax, atx, self.yticks, self.yminiticks, self.ylabels, self.ylogbase, yarrow_start, yarrow_end, exclude=yexclude, text_attr=self.text_attr, **self.attr).SVG(trans)
modules/imgproc/doc/colors.markdown:@anchor color_convert_rgb_lab
modules/imgproc/doc/colors.markdown:@see cv::COLOR_BGR2Lab, cv::COLOR_RGB2Lab, cv::COLOR_Lab2BGR, cv::COLOR_Lab2RGB
modules/imgproc/doc/colors.markdown:The above formulae for converting RGB to/from various color spaces have been taken from multiple
modules/imgproc/doc/colors.markdown:The Bayer pattern is widely used in CCD and CMOS cameras. It enables you to get color pictures
modules/imgproc/doc/colors.markdown:having the same color. There are several modifications of the above pattern that can be achieved
modules/imgproc/doc/colors.markdown:respectively. For example, the above pattern has a very popular "BG" type.
Binary file modules/imgproc/doc/pics/integral.png matches
Binary file modules/imgproc/doc/pics/quadedge.png matches
modules/imgproc/misc/java/test/ImgprocTest.java:    public void testDistanceTransformWithLabels() {
modules/imgproc/misc/java/test/ImgprocTest.java:        Mat dstLables = getMat(CvType.CV_32SC1, 0);
modules/imgproc/misc/java/test/ImgprocTest.java:        Mat labels = new Mat();
modules/imgproc/misc/java/test/ImgprocTest.java:        Imgproc.distanceTransformWithLabels(gray128, dst, labels, Imgproc.CV_DIST_L2, 3);
modules/imgproc/misc/java/test/ImgprocTest.java:        assertMatEqual(dstLables, labels);
modules/imgproc/misc/java/test/ImgprocTest.java:    public void testGrabCutMatMatRectMatMatInt() {
modules/imgproc/misc/java/test/ImgprocTest.java:    public void testGrabCutMatMatRectMatMatIntInt() {
modules/imgproc/misc/java/test/ImgprocTest.java:        Size labelSize = new Size(175, 22);
modules/imgproc/misc/java/test/ImgprocTest.java:        Mat img = new Mat(20 + (int) labelSize.height, 20 + (int) labelSize.width, CvType.CV_8U, colorBlack);
modules/imgproc/misc/java/test/ImgprocTest.java:        Point origin = new Point(10, labelSize.height + 10);
modules/imgproc/misc/java/test/ImgprocTest.java:        Imgproc.rectangle(img, new Point(11, 11), new Point(labelSize.width + 10, labelSize.height + 10), colorBlack, Core.FILLED);
modules/imgproc/misc/java/test/ImgprocTest.java:        Size labelSize = new Size(176, 22);
modules/imgproc/misc/java/test/ImgprocTest.java:        Mat img = new Mat(20 + (int) labelSize.height, 20 + (int) labelSize.width, CvType.CV_8U, colorBlack);
modules/imgproc/misc/java/test/ImgprocTest.java:        Point origin = new Point(10, labelSize.height + 10);
modules/imgproc/misc/java/test/ImgprocTest.java:        Imgproc.rectangle(img, new Point(10, 10), new Point(labelSize.width + 10 + 1, labelSize.height + 10 + 1), colorBlack, Core.FILLED);
modules/imgproc/misc/java/test/ImgprocTest.java:        Size labelSize = new Size(175, 22);
modules/imgproc/misc/java/test/ImgprocTest.java:        Mat img = new Mat(20 + (int) labelSize.height, 20 + (int) labelSize.width, CvType.CV_8U, colorBlack);
modules/imgproc/misc/java/test/ImgprocTest.java:        Imgproc.rectangle(img, new Point(10, 10), new Point(labelSize.width + 9, labelSize.height + 9), colorBlack, Core.FILLED);
modules/imgproc/misc/java/src/java/imgproc+Moments.java:        if( Math.abs(this.m00) > 0.00000001 )
modules/imgproc/misc/java/src/java/imgproc+Moments.java:        double inv_sqrt_m00 = Math.sqrt(Math.abs(inv_m00));
modules/imgproc/test/test_imgwarp_strict.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_imgwarp_strict.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_imgwarp_strict.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_imgwarp_strict.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_imgwarp_strict.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_imgwarp_strict.cpp:            if (fabs(rD[dx] - D[dx]) > t &&
modules/imgproc/test/test_imgwarp_strict.cpp://                fabs(rD[dx] - D[dx]) < 250.0f &&
modules/imgproc/test/test_imgwarp_strict.cpp:                    fabs(scale_x - cvRound(scale_x)) < FLT_EPSILON &&
modules/imgproc/test/test_imgwarp_strict.cpp:                    fabs(scale_y - cvRound(scale_y)) < FLT_EPSILON;
modules/imgproc/test/test_imgwarp_strict.cpp:                absdiff(reference_dst, _dst, diff);
modules/imgproc/test/test_imgwarp_strict.cpp:        fabs(scale_x - cvRound(scale_x)) < FLT_EPSILON &&
modules/imgproc/test/test_imgwarp_strict.cpp:        fabs(scale_y - cvRound(scale_y)) < FLT_EPSILON;
modules/imgproc/test/test_canny.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_canny.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_canny.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_canny.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_canny.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_canny.cpp:                (float)(fabs((double)dxval) + fabs((double)dyval));
modules/imgproc/test/test_canny.cpp:            if( fabs(tg) < tan_pi_8 )
modules/imgproc/test/test_canny.cpp:                assert( fabs(tg) > tan_3pi_8 );
modules/imgproc/test/test_canny.cpp:                b = (float)fabs(mag.at<float>(y1, x1));
modules/imgproc/test/test_canny.cpp:                c = (float)fabs(mag.at<float>(y2, x2));
modules/imgproc/test/test_goodfeaturetotrack.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_goodfeaturetotrack.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_goodfeaturetotrack.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_goodfeaturetotrack.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_goodfeaturetotrack.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_thresh.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_thresh.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_thresh.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_thresh.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_thresh.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_emd.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_emd.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_emd.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_emd.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_emd.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_emd.cpp:    if( fabs( emd - emd0 ) > success_error_level*emd0 )
modules/imgproc/test/test_contours.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_contours.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_contours.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_contours.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_contours.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_floodfill.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_floodfill.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_floodfill.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_floodfill.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_floodfill.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_floodfill.cpp:            l_diff.val[i] = fabs(m.at<short>(i)/16.);
modules/imgproc/test/test_floodfill.cpp:            u_diff.val[i] = fabs(m.at<short>(i+4)/16.);
modules/imgproc/test/test_imgwarp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_imgwarp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_imgwarp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_imgwarp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_imgwarp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_imgwarp.cpp:    int* x_tab = x_idx->data.i;
modules/imgproc/test/test_imgwarp.cpp:            const uchar* sptr = sptr0 + x_tab[j];
modules/imgproc/test/test_imgwarp.cpp:    absdiff(actual, expected, diff);
modules/imgproc/test/test_imgwarp.cpp:            if (fabs(static_cast<double>(aD[dx] - eD[dx])) > tolerance)
modules/imgproc/test/test_boundingrect.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_boundingrect.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_boundingrect.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_boundingrect.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_boundingrect.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_filter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_filter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_filter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_filter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_filter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_filter.cpp:    static const float small_gaussian_tab[][SMALL_GAUSSIAN_SIZE] =
modules/imgproc/test/test_filter.cpp:        memcpy( &kernel[0], small_gaussian_tab[n>>1], n*sizeof(kernel[0]));
modules/imgproc/test/test_filter.cpp:                if( fabs(a - l1) + fabs(b) >= 1e-3 )
modules/imgproc/test/test_filter.cpp:                if( fabs(a - l2) + fabs(b) >= 1e-3 )
modules/imgproc/test/test_filter.cpp:                if( (fabs(x1) >= fabs(y1) && ocv_eigenvp[j*6+2]*x1 < 0) ||
modules/imgproc/test/test_filter.cpp:                    (fabs(x1) < fabs(y1) && ocv_eigenvp[j*6+3]*y1 < 0) )
modules/imgproc/test/test_filter.cpp:                if( (fabs(x2) >= fabs(y2) && ocv_eigenvp[j*6+4]*x2 < 0) ||
modules/imgproc/test/test_filter.cpp:                    (fabs(x2) < fabs(y2) && ocv_eigenvp[j*6+5]*y2 < 0) )
modules/imgproc/test/test_filter.cpp:                // non-separable filtering with a small kernel
modules/imgproc/test/ocl/test_filters.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_filters.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_filters.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_filters.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_filters.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_canny.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_canny.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_canny.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_canny.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_canny.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_histogram.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_histogram.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_histogram.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_histogram.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_histogram.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_blend.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_blend.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_blend.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_blend.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_blend.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_accumulate.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_accumulate.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_accumulate.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_accumulate.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_accumulate.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_medianfilter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_medianfilter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_medianfilter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_medianfilter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_medianfilter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_match_template.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_match_template.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_match_template.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_match_template.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_match_template.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_imgproc.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_imgproc.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_imgproc.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_imgproc.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_imgproc.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_warp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_warp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_warp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_warp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_warp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_sepfilter2D.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_sepfilter2D.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_sepfilter2D.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_sepfilter2D.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_sepfilter2D.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_boxfilter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_boxfilter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_boxfilter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_boxfilter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_boxfilter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_gftt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_gftt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_gftt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_gftt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_gftt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_gftt.cpp:            bool eq = std::abs(a.x - b.x) < 1 && std::abs(a.y - b.y) < 1;
modules/imgproc/test/ocl/test_filter2d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_filter2d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_filter2d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_filter2d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_filter2d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_pyramids.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_pyramids.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_pyramids.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_pyramids.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_pyramids.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_color.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/ocl/test_color.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/ocl/test_color.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/ocl/test_color.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/ocl/test_color.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/ocl/test_color.cpp:// RGB <-> Lab
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, BGR2Lab) { performTest(3, 3, CVTCODE(BGR2Lab)); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, RGB2Lab) { performTest(3, 3, CVTCODE(RGB2Lab)); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, LBGR2Lab) { performTest(3, 3, CVTCODE(LBGR2Lab), IPP_EPS); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, LRGB2Lab) { performTest(3, 3, CVTCODE(LRGB2Lab), IPP_EPS); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, BGRA2Lab) { performTest(4, 3, CVTCODE(BGR2Lab)); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, RGBA2Lab) { performTest(4, 3, CVTCODE(RGB2Lab)); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, LBGRA2Lab) { performTest(4, 3, CVTCODE(LBGR2Lab), IPP_EPS); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, LRGBA2Lab) { performTest(4, 3, CVTCODE(LRGB2Lab), IPP_EPS); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, Lab2BGR) { performTest(3, 3, CVTCODE(Lab2BGR), depth == CV_8U ? 1 : 1e-5); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, Lab2RGB) { performTest(3, 3, CVTCODE(Lab2RGB), depth == CV_8U ? 1 : 1e-5); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, Lab2LBGR) { performTest(3, 3, CVTCODE(Lab2LBGR), depth == CV_8U ? 1 : 1e-5); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, Lab2LRGB) { performTest(3, 3, CVTCODE(Lab2LRGB), depth == CV_8U ? 1 : 1e-5); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, Lab2BGRA) { performTest(3, 4, CVTCODE(Lab2BGR), depth == CV_8U ? 1 : 1e-5); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, Lab2RGBA) { performTest(3, 4, CVTCODE(Lab2RGB), depth == CV_8U ? 1 : 1e-5); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, Lab2LBGRA) { performTest(3, 4, CVTCODE(Lab2LBGR), depth == CV_8U ? 1 : 1e-5); }
modules/imgproc/test/ocl/test_color.cpp:OCL_TEST_P(CvtColor8u32f, Lab2LRGBA) { performTest(3, 4, CVTCODE(Lab2LRGB), depth == CV_8U ? 1 : 1e-5); }
modules/imgproc/test/test_cvtyuv.cpp:    absdiff(gold, result, diff);
modules/imgproc/test/test_bilateral_filter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_bilateral_filter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_bilateral_filter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_bilateral_filter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_bilateral_filter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_bilateral_filter.cpp:        if(std::abs(minValSrc - maxValSrc) < FLT_EPSILON)
modules/imgproc/test/test_bilateral_filter.cpp:        // allocate lookup tables
modules/imgproc/test/test_bilateral_filter.cpp:                        float alpha = (float)(std::abs(val - val0)*scale_index);
modules/imgproc/test/test_bilateral_filter.cpp:                        float alpha = (float)((std::abs(b - b0) +
modules/imgproc/test/test_bilateral_filter.cpp:                            std::abs(g - g0) + std::abs(r - r0))*scale_index);
modules/imgproc/test/test_intersection.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_intersection.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_intersection.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_intersection.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/imgproc/test/test_intersection.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_houghLines.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_houghLines.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_houghLines.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_houghLines.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_houghLines.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_houghLines.cpp:    return abs(other[0] - value[0]) < rho_eps && abs(other[1] - value[1]) < theta_eps;
modules/imgproc/test/test_houghLines.cpp:class ProbabilisticHoughLinesTest : public BaseHoughLineTest, public testing::TestWithParam<Image_RhoStep_ThetaStep_Threshold_MinLine_MaxGap_t>
modules/imgproc/test/test_houghLines.cpp:    ProbabilisticHoughLinesTest()
modules/imgproc/test/test_houghLines.cpp:TEST_P(ProbabilisticHoughLinesTest, regression)
modules/imgproc/test/test_houghLines.cpp:INSTANTIATE_TEST_CASE_P( ImgProc, ProbabilisticHoughLinesTest, testing::Combine(testing::Values( "shared/pic5.png", "shared/pic1.png" ),
modules/imgproc/test/test_templmatch.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_templmatch.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_templmatch.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_templmatch.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_templmatch.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_templmatch.cpp:                if( fabs(value) < denom )
modules/imgproc/test/test_templmatch.cpp:                else if( fabs(value) < denom*1.125 )
modules/imgproc/test/test_templmatch.cpp:        // avoid numerical stability problems in singular cases (when the results are near to 0)
modules/imgproc/test/test_watershed.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_watershed.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_watershed.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_watershed.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_watershed.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_grabcut.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_grabcut.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_grabcut.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_grabcut.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_grabcut.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_grabcut.cpp:class CV_GrabcutTest : public cvtest::BaseTest
modules/imgproc/test/test_grabcut.cpp:    CV_GrabcutTest();
modules/imgproc/test/test_grabcut.cpp:    ~CV_GrabcutTest();
modules/imgproc/test/test_grabcut.cpp:CV_GrabcutTest::CV_GrabcutTest() {}
modules/imgproc/test/test_grabcut.cpp:CV_GrabcutTest::~CV_GrabcutTest() {}
modules/imgproc/test/test_grabcut.cpp:bool CV_GrabcutTest::verify(const Mat& mask, const Mat& exp)
modules/imgproc/test/test_grabcut.cpp:void CV_GrabcutTest::run( int /* start_from */)
modules/imgproc/test/test_grabcut.cpp:    Mat mask_prob = imread(string(ts->get_data_path()) + "grabcut/mask_prob.png", 0);
modules/imgproc/test/test_grabcut.cpp:    Mat exp_mask1 = imread(string(ts->get_data_path()) + "grabcut/exp_mask1.png", 0);
modules/imgproc/test/test_grabcut.cpp:    Mat exp_mask2 = imread(string(ts->get_data_path()) + "grabcut/exp_mask2.png", 0);
modules/imgproc/test/test_grabcut.cpp:    grabCut( img, mask, rect, bgdModel, fgdModel, 0, GC_INIT_WITH_RECT );
modules/imgproc/test/test_grabcut.cpp:    grabCut( img, mask, rect, bgdModel, fgdModel, 2, GC_EVAL );
modules/imgproc/test/test_grabcut.cpp:        imwrite(string(ts->get_data_path()) + "grabcut/mask_prob.png", mask_prob);
modules/imgproc/test/test_grabcut.cpp:        imwrite(string(ts->get_data_path()) + "grabcut/exp_mask1.png", exp_mask1);
modules/imgproc/test/test_grabcut.cpp:    grabCut( img, mask, rect, bgdModel, fgdModel, 0, GC_INIT_WITH_MASK );
modules/imgproc/test/test_grabcut.cpp:    grabCut( img, mask, rect, bgdModel, fgdModel, 1, GC_EVAL );
modules/imgproc/test/test_grabcut.cpp:        imwrite(string(ts->get_data_path()) + "grabcut/exp_mask2.png", exp_mask2);
modules/imgproc/test/test_grabcut.cpp:TEST(Imgproc_GrabCut, regression) { CV_GrabcutTest test; test.safe_run(); }
modules/imgproc/test/test_grabcut.cpp:TEST(Imgproc_GrabCut, repeatability)
modules/imgproc/test/test_grabcut.cpp:    Mat image_1 = imread(string(ts.get_data_path()) + "grabcut/image1652.ppm", IMREAD_COLOR);
modules/imgproc/test/test_grabcut.cpp:    Mat mask_1 = imread(string(ts.get_data_path()) + "grabcut/mask1652.ppm", IMREAD_GRAYSCALE);
modules/imgproc/test/test_grabcut.cpp:    grabCut(image_1, mask_1, roi_1, bgdModel_1, fgdModel_1, 1, GC_INIT_WITH_MASK);
modules/imgproc/test/test_grabcut.cpp:    grabCut(image_2, mask_2, roi_2, bgdModel_2, fgdModel_2, 1, GC_INIT_WITH_MASK);
modules/imgproc/test/test_grabcut.cpp:    grabCut(image_3, mask_3, roi_3, bgdModel_3, fgdModel_3, 1, GC_INIT_WITH_MASK);
modules/imgproc/test/test_distancetransform.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_distancetransform.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_distancetransform.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_distancetransform.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_distancetransform.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_distancetransform.cpp:    int fill_labels;
modules/imgproc/test/test_distancetransform.cpp:    // for now, check only the "labeled" distance transform mode
modules/imgproc/test/test_distancetransform.cpp:    fill_labels = 0;
modules/imgproc/test/test_distancetransform.cpp:    if( !fill_labels )
modules/imgproc/test/test_distancetransform.cpp:                   int mask_size, float* _mask, CvMat* /*_labels*/ )
modules/imgproc/test/test_connectedcomponents.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_connectedcomponents.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_connectedcomponents.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_connectedcomponents.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_connectedcomponents.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_connectedcomponents.cpp:    Mat labelImage;
modules/imgproc/test/test_connectedcomponents.cpp:    int nLabels = connectedComponents(bw, labelImage, 8, CV_32S);
modules/imgproc/test/test_connectedcomponents.cpp:    for(int r = 0; r < labelImage.rows; ++r){
modules/imgproc/test/test_connectedcomponents.cpp:        for(int c = 0; c < labelImage.cols; ++c){
modules/imgproc/test/test_connectedcomponents.cpp:            int l = labelImage.at<int>(r, c);
modules/imgproc/test/test_connectedcomponents.cpp:            bool pass = l >= 0 && l <= nLabels;
modules/imgproc/test/test_connectedcomponents.cpp:        imwrite(exp_path, labelImage);
modules/imgproc/test/test_connectedcomponents.cpp:        exp = labelImage;
modules/imgproc/test/test_connectedcomponents.cpp:    if (0 != cvtest::norm(labelImage > 0, exp > 0, NORM_INF))
modules/imgproc/test/test_connectedcomponents.cpp:    if (nLabels != cvtest::norm(labelImage, NORM_INF)+1)
modules/imgproc/test/test_moments.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_moments.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_moments.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_moments.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_moments.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_moments.cpp:        m.inv_sqrt_m00 = 1./sqrt(fabs(m.m00));
modules/imgproc/test/test_moments.cpp:        if( fabs(a[i]) < 1e-3 )
modules/imgproc/test/test_moments.cpp:        if( fabs(b[i]) < 1e-3 )
modules/imgproc/test/test_approxpoly.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_approxpoly.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_approxpoly.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_approxpoly.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_approxpoly.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_approxpoly.cpp://  (or its inability to handle possible self-intersections in the generated contours).
modules/imgproc/test/test_approxpoly.cpp:    ////////////// Variables ////////////////
modules/imgproc/test/test_imgproc_umat.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_imgproc_umat.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_imgproc_umat.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_imgproc_umat.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_imgproc_umat.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_histograms.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_histograms.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_histograms.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_histograms.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_histograms.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_histograms.cpp:            if( fabs(v0 - default_value) < FLT_EPSILON )
modules/imgproc/test/test_histograms.cpp:            if( fabs(v0 - default_value) < FLT_EPSILON )
modules/imgproc/test/test_histograms.cpp:            if( fabs(v0 - default_value) < FLT_EPSILON )
modules/imgproc/test/test_histograms.cpp:            if( fabs(v0 - default_value) < FLT_EPSILON )
modules/imgproc/test/test_histograms.cpp:        else if( fabs(v - v0) > FLT_EPSILON )
modules/imgproc/test/test_histograms.cpp:    else if( fabs(min_val - min_val0) > FLT_EPSILON ||
modules/imgproc/test/test_histograms.cpp:             fabs(max_val - max_val0) > FLT_EPSILON )
modules/imgproc/test/test_histograms.cpp:    else if( fabs(sum - factor) > FLT_EPSILON*10*fabs(factor) )
modules/imgproc/test/test_histograms.cpp:            else if( fabs(v0 - v) > FLT_EPSILON*10*fabs(v0) )
modules/imgproc/test/test_histograms.cpp:            if( fabs(v0) > DBL_EPSILON )
modules/imgproc/test/test_histograms.cpp:            if( fabs(v0 + v1) > DBL_EPSILON )
modules/imgproc/test/test_histograms.cpp:            if( fabs(v0) <= DBL_EPSILON  )
modules/imgproc/test/test_histograms.cpp:            if( fabs(v1) <= DBL_EPSILON )
modules/imgproc/test/test_histograms.cpp:            if( fabs(v0) > DBL_EPSILON )
modules/imgproc/test/test_histograms.cpp:            if( fabs(v0 + v1) > DBL_EPSILON )
modules/imgproc/test/test_histograms.cpp:    result0[CV_COMP_CORREL] = fabs(t) > DBL_EPSILON ?
modules/imgproc/test/test_histograms.cpp:        else if( fabs(v0 - v) > FLT_EPSILON*14*MAX(fabs(v0),0.1) )
modules/imgproc/test/test_histograms.cpp:            else if( fabs(v0 - v) > err_level*fabs(v0) )
modules/imgproc/test/test_pc.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_pc.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_pc.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_pc.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_pc.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_convhull.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_convhull.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_convhull.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_convhull.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_convhull.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_convhull.cpp:        if( fabs(t) > DBL_EPSILON )
modules/imgproc/test/test_convhull.cpp:        else if( fabs(dx) + fabs(dy) < DBL_EPSILON )
modules/imgproc/test/test_convhull.cpp:    dd = fabs((double)(pt.x - a.x)*(b.y - a.y) - (double)(pt.y - a.y)*(b.x - a.x))/dd;
modules/imgproc/test/test_convhull.cpp:    return (abs(d1 + d2 - d3) <= (1E-5));
modules/imgproc/test/test_convhull.cpp:    bool enable_flt_points;
modules/imgproc/test/test_convhull.cpp:    enable_flt_points = true;
modules/imgproc/test/test_convhull.cpp:        (enable_flt_points ? 2 : 1) ? CV_32F : CV_32S, dims);
modules/imgproc/test/test_convhull.cpp:    if( CV_MAT_DEPTH(points2->type) != CV_32F && enable_flt_points )
modules/imgproc/test/test_convhull.cpp:        if( fabs(d0 - d1) + fabs(x0 - x1) + fabs(y0 - y1) > eps*MAX(d0,d1) )
modules/imgproc/test/test_convhull.cpp:    else if( fabs(result - result0) > FLT_EPSILON*100*result0 )
modules/imgproc/test/test_convhull.cpp:    if( fabs(box.center.x - box0.center.x) > 3 ||
modules/imgproc/test/test_convhull.cpp:        fabs(box.center.y - box0.center.y) > 3 ||
modules/imgproc/test/test_convhull.cpp:        fabs(box.size.width - box0.size.width) > 0.1*fabs(box0.size.width) ||
modules/imgproc/test/test_convhull.cpp:        fabs(box.size.height - box0.size.height) > 0.1*fabs(box0.size.height) )
modules/imgproc/test/test_convhull.cpp:    diff_angle = fabs(box0.angle - box.angle);
modules/imgproc/test/test_convhull.cpp:    diff_angle = MIN( diff_angle, fabs(diff_angle - 360));
modules/imgproc/test/test_convhull.cpp:    diff_angle = MIN( diff_angle, fabs(diff_angle - 180));
modules/imgproc/test/test_convhull.cpp:        CV_Assert( fabs(e.center.x - 4) <= 1. &&
modules/imgproc/test/test_convhull.cpp:                   fabs(e.center.y - 4) <= 1. &&
modules/imgproc/test/test_convhull.cpp:                   fabs(e.size.width - 9) <= 1. &&
modules/imgproc/test/test_convhull.cpp:                   fabs(e.size.height - 9) <= 1. );
modules/imgproc/test/test_convhull.cpp:    if( fabs(line0[1]) > fabs(line0[0]) )
modules/imgproc/test/test_convhull.cpp:    if( fabs(line0[dims-1]) > fabs(line0[max_k]) )
modules/imgproc/test/test_convhull.cpp:    if( sqrt(vec_diff) > 1*MAX(fabs(t),1) )
modules/imgproc/test/test_convhull.cpp:    enable_flt_points = false;
modules/imgproc/test/test_convhull.cpp:        double t = fabs((&moments0.m00)[i]);
modules/imgproc/test/test_convhull.cpp:        if( fabs(v - v0) > 0.1*max_v0 )
modules/imgproc/test/test_color.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/test/test_color.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/test/test_color.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/test/test_color.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/test/test_color.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/test/test_color.cpp:    virtual void convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:    virtual void convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:                if( abs(*h - *h0) >= hue_range-1 && (*h <= 1 || *h0 <= 1) )
modules/imgproc/test/test_color.cpp:                convert_row_bgr2abc_32f_c3( src_buf, dst_buf, cols );
modules/imgproc/test/test_color.cpp:                convert_row_bgr2abc_32f_c3( src_buf, dst_buf, cols );
modules/imgproc/test/test_color.cpp:                convert_row_bgr2abc_32f_c3( src_buf, dst_row, cols );
modules/imgproc/test/test_color.cpp:void CV_ColorCvtBaseTest::convert_row_bgr2abc_32f_c3( const float* /*src_row*/,
modules/imgproc/test/test_color.cpp:void CV_ColorCvtBaseTest::convert_row_abc2bgr_32f_c3( const float* /*src_row*/,
modules/imgproc/test/test_color.cpp:                    convert_row_abc2bgr_32f_c3( src_buf, dst_buf, dst_cols );
modules/imgproc/test/test_color.cpp:                    convert_row_abc2bgr_32f_c3( src_buf, dst_buf, dst_cols );
modules/imgproc/test/test_color.cpp:                    convert_row_abc2bgr_32f_c3( src_row, dst_buf, dst_cols );
modules/imgproc/test/test_color.cpp:    void convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:    void convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:void CV_ColorGrayTest::convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:void CV_ColorGrayTest::convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:    void convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:    void convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:void CV_ColorYCrCbTest::convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:void CV_ColorYCrCbTest::convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:    void convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:    void convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:void CV_ColorHSVTest::convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:void CV_ColorHSVTest::convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:    void convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:    void convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:void CV_ColorHLSTest::convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:void CV_ColorHLSTest::convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:    void convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:    void convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:void CV_ColorXYZTest::convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:void CV_ColorXYZTest::convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:class CV_ColorLabTest : public CV_ColorCvtBaseTest
modules/imgproc/test/test_color.cpp:    CV_ColorLabTest();
modules/imgproc/test/test_color.cpp:    void convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:    void convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:CV_ColorLabTest::CV_ColorLabTest() : CV_ColorCvtBaseTest( true, true, false )
modules/imgproc/test/test_color.cpp:    INIT_FWD_INV_CODES( BGR2Lab, Lab2BGR );
modules/imgproc/test/test_color.cpp:void CV_ColorLabTest::get_test_array_types_and_sizes( int test_case_idx, vector<vector<Size> >& sizes, vector<vector<int> >& types )
modules/imgproc/test/test_color.cpp:        fwd_code = CV_LBGR2Lab, inv_code = CV_Lab2LBGR;
modules/imgproc/test/test_color.cpp:        fwd_code = CV_LRGB2Lab, inv_code = CV_Lab2LRGB;
modules/imgproc/test/test_color.cpp:double CV_ColorLabTest::get_success_error_level( int /*test_case_idx*/, int i, int j )
modules/imgproc/test/test_color.cpp:void CV_ColorLabTest::convert_row_bgr2abc_32f_c3(const float* src_row, float* dst_row, int n)
modules/imgproc/test/test_color.cpp:    float ab_bias = depth == CV_8U ? 128.f : depth == CV_16U ? 32768.f : 0.f;
modules/imgproc/test/test_color.cpp:        dst_row[x + 1] = a + ab_bias;
modules/imgproc/test/test_color.cpp:        dst_row[x + 2] = b + ab_bias;
modules/imgproc/test/test_color.cpp:void CV_ColorLabTest::convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:    float ab_bias = depth == CV_8U ? 128.f : depth == CV_16U ? 32768.f : 0.f;
modules/imgproc/test/test_color.cpp:        float a = src_row[x + 1] - ab_bias;
modules/imgproc/test/test_color.cpp:        float b = src_row[x + 2] - ab_bias;
modules/imgproc/test/test_color.cpp:    void convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:    void convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n );
modules/imgproc/test/test_color.cpp:void CV_ColorLuvTest::convert_row_bgr2abc_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:void CV_ColorLuvTest::convert_row_abc2bgr_32f_c3( const float* src_row, float* dst_row, int n )
modules/imgproc/test/test_color.cpp:TEST(Imgproc_ColorLab, accuracy) { CV_ColorLabTest test; test.safe_run(); }
modules/imgproc/test/test_color.cpp:    absdiff(gold, result, diff);
modules/imgproc/test/test_color.cpp:        absdiff(gold, result, diff);
modules/imgproc/test/test_color.cpp:        absdiff(reference, dst, diff);
modules/imgproc/test/test_color.cpp:            ts->printf(cvtest::TS::SUMMARY, "\nCount non zero in absdiff: %d\n", nonZero);
modules/imgproc/test/test_color.cpp:            if (fabs(rD[x] - D[x]) > 0.0001f)
modules/imgproc/test/test_color.cpp:                    cv::Mat lab;
modules/imgproc/test/test_color.cpp:                    cv::cvtColor(src, lab, mode);
modules/imgproc/test/test_color.cpp:                    std::cout << "lab: " << lab(cv::Rect(y, x / cn, 1, 1)) << std::endl;
modules/imgproc/test/test_color.cpp:TEST(Imgproc_ColorLab_Full, accuracy)
modules/imgproc/test/test_color.cpp:    cv::Mat lab;
modules/imgproc/test/test_color.cpp:    int forward_code = blueInd ? srgb ? CV_BGR2Lab : CV_LBGR2Lab : srgb ? CV_RGB2Lab : CV_LRGB2Lab;
modules/imgproc/test/test_color.cpp:    int inverse_code = blueInd ? srgb ? CV_Lab2BGR : CV_Lab2LBGR : srgb ? CV_Lab2RGB : CV_Lab2LRGB;
modules/imgproc/test/test_color.cpp:    cv::cvtColor(src, lab, forward_code);
modules/imgproc/test/test_color.cpp:    cv::cvtColor(lab, recons, inverse_code);
modules/imgproc/test/test_color.cpp:                D[1] = (std::abs(S[-1] - S[1]) > std::abs(S[step] - S[-step]) ? (S[step] + S[-step] + 1) : (S[-1] + S[1] + 1)) / 2;
modules/imgproc/test/test_color.cpp:                D[1] = (std::abs(S[-1] - S[1]) > std::abs(S[step] - S[-step]) ? (S[step] + S[-step] + 1) : (S[-1] + S[1] + 1)) / 2;
modules/imgproc/test/test_color.cpp:            if (std::abs(A[x] - R[x]) > 1)
modules/imgproc/test/test_color.cpp:                absdiff(actual, reference, diff);
modules/imgproc/test/test_color.cpp:                if (abs(rD[x] - D[x]) >= 1)
modules/imgproc/test/test_color.cpp:                    absdiff(actual, reference, diff);
modules/imgproc/include/opencv2/imgproc/imgproc.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/include/opencv2/imgproc/imgproc.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/include/opencv2/imgproc/imgproc.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/include/opencv2/imgproc/imgproc.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/include/opencv2/imgproc/imgproc.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/include/opencv2/imgproc/types_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/include/opencv2/imgproc/types_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/include/opencv2/imgproc/types_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/include/opencv2/imgproc/types_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/include/opencv2/imgproc/types_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/include/opencv2/imgproc/types_c.h:    CV_BGR2Lab     =44,
modules/imgproc/include/opencv2/imgproc/types_c.h:    CV_RGB2Lab     =45,
modules/imgproc/include/opencv2/imgproc/types_c.h:    CV_Lab2BGR     =56,
modules/imgproc/include/opencv2/imgproc/types_c.h:    CV_Lab2RGB     =57,
modules/imgproc/include/opencv2/imgproc/types_c.h:    CV_LBGR2Lab     = 74,
modules/imgproc/include/opencv2/imgproc/types_c.h:    CV_LRGB2Lab     = 75,
modules/imgproc/include/opencv2/imgproc/types_c.h:    CV_Lab2LBGR     = 78,
modules/imgproc/include/opencv2/imgproc/types_c.h:    CV_Lab2LRGB     = 79,
modules/imgproc/include/opencv2/imgproc/types_c.h:        double am00 = std::abs(m.m00);
modules/imgproc/include/opencv2/imgproc/types_c.h:/** Content of output label array: connected components or pixels */
modules/imgproc/include/opencv2/imgproc/types_c.h:                                 combine the flag with one of the above CV_THRESH_* values */
modules/imgproc/include/opencv2/imgproc/types_c.h:                                 combine the flag with one of the above CV_THRESH_* values, but not
modules/imgproc/include/opencv2/imgproc/detail/distortion_model.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/include/opencv2/imgproc/detail/distortion_model.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/include/opencv2/imgproc/detail/distortion_model.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/include/opencv2/imgproc/detail/distortion_model.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/include/opencv2/imgproc/detail/distortion_model.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/include/opencv2/imgproc/imgproc_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/include/opencv2/imgproc/imgproc_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/include/opencv2/imgproc/imgproc_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/include/opencv2/imgproc/imgproc_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/include/opencv2/imgproc/imgproc_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/include/opencv2/imgproc/imgproc_c.h:/** @brief Calculates bayesian probabilistic histograms
modules/imgproc/include/opencv2/imgproc/imgproc_c.h:The function calculates the object probability density from two histograms as:
modules/imgproc/include/opencv2/imgproc/imgproc_c.h:                              CvArr* labels CV_DEFAULT(NULL),
modules/imgproc/include/opencv2/imgproc/imgproc_c.h:                              int labelType CV_DEFAULT(CV_DIST_LABEL_CCOMP));
modules/imgproc/include/opencv2/imgproc/imgproc_c.h:   param1 ~ line length, param2 ~ line gap - for probabilistic,
modules/imgproc/include/opencv2/imgproc/imgproc_c.h:value means a non-italic font, 1.0f means about a 45 degree slope, etc.
modules/imgproc/include/opencv2/imgproc.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/include/opencv2/imgproc.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/include/opencv2/imgproc.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/include/opencv2/imgproc.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/include/opencv2/imgproc.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/include/opencv2/imgproc.hpp:border" extrapolation method), and so on. OpenCV enables you to specify the extrapolation method.
modules/imgproc/include/opencv2/imgproc.hpp:\f$\left<f_x, f_y\right>: \texttt{dst} \rightarrow \texttt{src}\f$ and then use the above formula.
modules/imgproc/include/opencv2/imgproc.hpp:the simplest and the fastest resize, need to solve two main problems with the above formula:
modules/imgproc/include/opencv2/imgproc.hpp:get a clue about them. OpenCV now comes with various colormaps to enhance the visualization in your
modules/imgproc/include/opencv2/imgproc.hpp://! class of the pixel in GrabCut algorithm
modules/imgproc/include/opencv2/imgproc.hpp:enum GrabCutClasses {
modules/imgproc/include/opencv2/imgproc.hpp://! GrabCut algorithm flags
modules/imgproc/include/opencv2/imgproc.hpp:enum GrabCutModes {
modules/imgproc/include/opencv2/imgproc.hpp:enum DistanceTransformLabelTypes {
modules/imgproc/include/opencv2/imgproc.hpp:    connected component) will be assigned the same label */
modules/imgproc/include/opencv2/imgproc.hpp:    /** each zero pixel (and all the non-zero pixels closest to it) gets its own label. */
modules/imgproc/include/opencv2/imgproc.hpp:    mask with the value specified in bits 8-16 of flags as described above. This option only make
modules/imgproc/include/opencv2/imgproc.hpp:    /** retrieves all of the contours without establishing any hierarchical relationships. */
modules/imgproc/include/opencv2/imgproc.hpp:    /** stores absolutely all the contour points. That is, any 2 subsequent points (x1,y1) and
modules/imgproc/include/opencv2/imgproc.hpp:    max(abs(x1-x2),abs(y2-y1))==1. */
modules/imgproc/include/opencv2/imgproc.hpp:    /** probabilistic Hough transform (more efficient in case if the picture contains a few long
modules/imgproc/include/opencv2/imgproc.hpp:    COLOR_BGR2Lab      = 44, //!< convert RGB/BGR to CIE Lab, @ref color_convert_rgb_lab "color conversions"
modules/imgproc/include/opencv2/imgproc.hpp:    COLOR_RGB2Lab      = 45,
modules/imgproc/include/opencv2/imgproc.hpp:    COLOR_Lab2BGR      = 56,
modules/imgproc/include/opencv2/imgproc.hpp:    COLOR_Lab2RGB      = 57,
modules/imgproc/include/opencv2/imgproc.hpp:    COLOR_LBGR2Lab     = 74,
modules/imgproc/include/opencv2/imgproc.hpp:    COLOR_LRGB2Lab     = 75,
modules/imgproc/include/opencv2/imgproc.hpp:    COLOR_Lab2LBGR     = 78,
modules/imgproc/include/opencv2/imgproc.hpp:    COLOR_Lab2LRGB     = 79,
modules/imgproc/include/opencv2/imgproc.hpp:    //! Demosaicing using Variable Number of Gradients
modules/imgproc/include/opencv2/imgproc.hpp:    //! R-Table levels.
modules/imgproc/include/opencv2/imgproc.hpp:    //! Feature table levels.
modules/imgproc/include/opencv2/imgproc.hpp:    This is the output of the default parameters of the algorithm on the above shown image.
modules/imgproc/include/opencv2/imgproc.hpp:    in order for lines1 and lines2 to be drawn in the above mentioned colors.
modules/imgproc/include/opencv2/imgproc.hpp:/** @brief Returns Gabor filter coefficients.
modules/imgproc/include/opencv2/imgproc.hpp:For more details about gabor filter equations and parameters, see: [Gabor
modules/imgproc/include/opencv2/imgproc.hpp:Filter](http://en.wikipedia.org/wiki/Gabor_filter).
modules/imgproc/include/opencv2/imgproc.hpp:@param theta Orientation of the normal to the parallel stripes of a Gabor function.
modules/imgproc/include/opencv2/imgproc.hpp:CV_EXPORTS_W Mat getGaborKernel( Size ksize, double sigma, double theta, double lambd,
modules/imgproc/include/opencv2/imgproc.hpp:algorithms, and so on). If you need to compute pixel sums over variable-size windows, use cv::integral.
modules/imgproc/include/opencv2/imgproc.hpp:/** @brief Applies a separable linear filter to an image.
modules/imgproc/include/opencv2/imgproc.hpp:The function applies a separable linear filter to the image. That is, first, every row of src is
modules/imgproc/include/opencv2/imgproc.hpp:In all cases except one, the \f$\texttt{ksize} \times \texttt{ksize}\f$ separable kernel is used to
modules/imgproc/include/opencv2/imgproc.hpp:/** @brief Finds line segments in a binary image using the probabilistic Hough transform.
modules/imgproc/include/opencv2/imgproc.hpp:The function implements the probabilistic Hough transform algorithm for line detection, described
modules/imgproc/include/opencv2/imgproc.hpp:And this is the output of the above program in case of the probabilistic Hough transform:
modules/imgproc/include/opencv2/imgproc.hpp:with cv::invertAffineTransform and then put in the formula above instead of M. The function cannot
modules/imgproc/include/opencv2/imgproc.hpp:and then put in the formula above instead of M. The function cannot operate in-place.
modules/imgproc/include/opencv2/imgproc.hpp:where values of pixels with non-integer coordinates are computed using one of available
modules/imgproc/include/opencv2/imgproc.hpp:cvFloor(y)) and \f$map_2\f$ contains indices in a table of interpolation coefficients.
modules/imgproc/include/opencv2/imgproc.hpp:contains indices in the interpolation tables.
modules/imgproc/include/opencv2/imgproc.hpp:- \f$\texttt{(CV\_32FC2)} \rightarrow \texttt{(CV\_16SC2, CV\_16UC1)}\f$. The same as above but
modules/imgproc/include/opencv2/imgproc.hpp:\f[\texttt{tilted} (X,Y) =  \sum _{y<Y,abs(x-X+1) \leq Y-y-1}  \texttt{image} (x,y)\f]
modules/imgproc/include/opencv2/imgproc.hpp:It makes possible to do a fast blurring or fast block correlation with a variable window size, for
modules/imgproc/include/opencv2/imgproc.hpp:That is, alpha regulates the update speed (how fast the accumulator "forgets" about earlier images).
modules/imgproc/include/opencv2/imgproc.hpp:above values. In these cases, the function determines the optimal threshold value using the Otsu's
modules/imgproc/include/opencv2/imgproc.hpp:@param uniform Flag indicating whether the histogram is uniform or not (see above).
modules/imgproc/include/opencv2/imgproc.hpp:when it is allocated. This feature enables you to compute a single histogram from several sets of
modules/imgproc/include/opencv2/imgproc.hpp:statistics, the function computes probability of each element value in respect with the empirical
modules/imgproc/include/opencv2/imgproc.hpp:probability distribution represented by the histogram. See how, for example, you can find and track
modules/imgproc/include/opencv2/imgproc.hpp:@param uniform Flag indicating whether the histogram is uniform or not (see above).
modules/imgproc/include/opencv2/imgproc.hpp:While the function works well with 1-, 2-, 3-dimensional dense histograms, it may not be suitable
modules/imgproc/include/opencv2/imgproc.hpp:- Transform the image using \f$H'\f$ as a look-up table: \f$\texttt{dst}(x,y) = H'(\texttt{src}(x,y))\f$
modules/imgproc/include/opencv2/imgproc.hpp:When maxLevel \> 0, the gaussian pyramid of maxLevel+1 levels is built, and the above procedure is
modules/imgproc/include/opencv2/imgproc.hpp:/** @example grabcut.cpp
modules/imgproc/include/opencv2/imgproc.hpp:An example using the GrabCut algorithm
modules/imgproc/include/opencv2/imgproc.hpp:/** @brief Runs the GrabCut algorithm.
modules/imgproc/include/opencv2/imgproc.hpp:The function implements the [GrabCut image segmentation algorithm](http://en.wikipedia.org/wiki/GrabCut).
modules/imgproc/include/opencv2/imgproc.hpp:mode is set to GC_INIT_WITH_RECT. Its elements may have one of the cv::GrabCutClasses.
modules/imgproc/include/opencv2/imgproc.hpp:@param mode Operation mode that could be one of the cv::GrabCutModes
modules/imgproc/include/opencv2/imgproc.hpp:CV_EXPORTS_W void grabCut( InputArray img, InputOutputArray mask, Rect rect,
modules/imgproc/include/opencv2/imgproc.hpp:diagonal, or knight's move (the latest is available for a \f$5\times 5\f$ mask). The overall
modules/imgproc/include/opencv2/imgproc.hpp:(labelType==DIST_LABEL_CCOMP) or the nearest zero pixel (labelType==DIST_LABEL_PIXEL). Index of the
modules/imgproc/include/opencv2/imgproc.hpp:component/pixel is stored in `labels(x, y)`. When labelType==DIST_LABEL_CCOMP, the function
modules/imgproc/include/opencv2/imgproc.hpp:distinct labels. When labelType==DIST_LABEL_CCOMP, the function scans through the input image and
modules/imgproc/include/opencv2/imgproc.hpp:marks all the zero pixels with distinct labels.
modules/imgproc/include/opencv2/imgproc.hpp:@param labels Output 2D array of labels (the discrete Voronoi diagram). It has the type
modules/imgproc/include/opencv2/imgproc.hpp:@param labelType Type of the label array to build, see cv::DistanceTransformLabelTypes.
modules/imgproc/include/opencv2/imgproc.hpp:CV_EXPORTS_AS(distanceTransformWithLabels) void distanceTransform( InputArray src, OutputArray dst,
modules/imgproc/include/opencv2/imgproc.hpp:                                     OutputArray labels, int distanceType, int maskSize,
modules/imgproc/include/opencv2/imgproc.hpp:                                     int labelType = DIST_LABEL_CCOMP );
modules/imgproc/include/opencv2/imgproc.hpp:applications, this will not be noticeable but it is recommended to use 32-bit images in applications
modules/imgproc/include/opencv2/imgproc.hpp:for the available comparison methods ( \f$I\f$ denotes image, \f$T\f$ template, \f$R\f$ result ). The summation
modules/imgproc/include/opencv2/imgproc.hpp:/** @brief computes the connected components labeled image of boolean image
modules/imgproc/include/opencv2/imgproc.hpp:image with 4 or 8 way connectivity - returns N, the total number of labels [0, N-1] where 0
modules/imgproc/include/opencv2/imgproc.hpp:represents the background label. ltype specifies the output label image type, an important
modules/imgproc/include/opencv2/imgproc.hpp:consideration based on the total number of labels or alternatively the total number of pixels in
modules/imgproc/include/opencv2/imgproc.hpp:@param image the 8-bit single-channel image to be labeled
modules/imgproc/include/opencv2/imgproc.hpp:@param labels destination labeled image
modules/imgproc/include/opencv2/imgproc.hpp:@param ltype output image label type. Currently CV_32S and CV_16U are supported.
modules/imgproc/include/opencv2/imgproc.hpp:CV_EXPORTS_W int connectedComponents(InputArray image, OutputArray labels,
modules/imgproc/include/opencv2/imgproc.hpp:@param image the 8-bit single-channel image to be labeled
modules/imgproc/include/opencv2/imgproc.hpp:@param labels destination labeled image
modules/imgproc/include/opencv2/imgproc.hpp:@param stats statistics output for each label, including the background label, see below for
modules/imgproc/include/opencv2/imgproc.hpp:available statistics. Statistics are accessed via stats(label, COLUMN) where COLUMN is one of
modules/imgproc/include/opencv2/imgproc.hpp:@param centroids centroid output for each label, including the background label. Centroids are
modules/imgproc/include/opencv2/imgproc.hpp:accessed via centroids(label, 0) for x and centroids(label, 1) for y. The data type CV_64F.
modules/imgproc/include/opencv2/imgproc.hpp:@param ltype output image label type. Currently CV_32S and CV_16U are supported.
modules/imgproc/include/opencv2/imgproc.hpp:CV_EXPORTS_W int connectedComponentsWithStats(InputArray image, OutputArray labels,
modules/imgproc/include/opencv2/imgproc.hpp:or RETR_FLOODFILL, the input can also be a 32-bit integer image of labels (CV_32SC1).
modules/imgproc/include/opencv2/imgproc.hpp:@param hierarchy Optional output vector, containing information about the image topology. It has
modules/imgproc/include/opencv2/imgproc.hpp:false, which means that the absolute value is returned.
modules/imgproc/include/opencv2/imgproc.hpp:connected components from the binary image and label them: :
modules/imgproc/include/opencv2/imgproc.hpp:@param hierarchy Optional information about hierarchy. It is only needed if you want to draw only
modules/imgproc/include/opencv2/imgproc.hpp:parameter is only taken into account when there is hierarchy available.
modules/imgproc/include/opencv2/imgproc.hpp:example, grab pixel values along the line or draw a line with an effect
modules/imgproc/include/opencv2/imgproc.hpp:// grabs pixels along the line (pt1, pt2)
modules/imgproc/perf/perf_goodFeaturesToTrack.cpp:        FAIL() << "Unable to load source image" << filename;
modules/imgproc/perf/perf_cvt_color.cpp:    CX_BGRA2Lab      = COLOR_COLORCVT_MAX + COLOR_BGR2Lab,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_Lab2BGRA      = COLOR_COLORCVT_MAX + COLOR_Lab2BGR,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_Lab2LBGRA     = COLOR_COLORCVT_MAX + COLOR_Lab2LBGR,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_Lab2LRGBA     = COLOR_COLORCVT_MAX + COLOR_Lab2LRGB,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_Lab2RGBA      = COLOR_COLORCVT_MAX + COLOR_Lab2RGB,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_LBGRA2Lab     = COLOR_COLORCVT_MAX + COLOR_LBGR2Lab,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_LRGBA2Lab     = COLOR_COLORCVT_MAX + COLOR_LRGB2Lab,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_RGBA2Lab      = COLOR_COLORCVT_MAX + COLOR_RGB2Lab,
modules/imgproc/perf/perf_cvt_color.cpp:    COLOR_BGR2Lab, COLOR_BGR2Luv, COLOR_BGR2RGB, COLOR_BGR2RGBA, COLOR_BGR2XYZ,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_BGRA2Lab, CX_BGRA2Luv, CX_BGRA2XYZ,
modules/imgproc/perf/perf_cvt_color.cpp:    COLOR_Lab2BGR, COLOR_Lab2LBGR, COLOR_Lab2LRGB, COLOR_Lab2RGB,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_Lab2BGRA, CX_Lab2LBGRA, CX_Lab2LRGBA, CX_Lab2RGBA,
modules/imgproc/perf/perf_cvt_color.cpp:    COLOR_LBGR2Lab, COLOR_LBGR2Luv, COLOR_LRGB2Lab, COLOR_LRGB2Luv,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_LBGRA2Lab, CX_LBGRA2Luv, CX_LRGBA2Lab, CX_LRGBA2Luv,
modules/imgproc/perf/perf_cvt_color.cpp:    COLOR_RGB2Lab, COLOR_RGB2Luv, COLOR_RGB2XYZ, COLOR_RGB2YCrCb, COLOR_RGB2YUV,
modules/imgproc/perf/perf_cvt_color.cpp:    CX_RGBA2Lab, CX_RGBA2Luv, CX_RGBA2XYZ,
modules/imgproc/perf/perf_cvt_color.cpp:    case COLOR_BGR2Lab: case COLOR_BGR2Luv:
modules/imgproc/perf/perf_cvt_color.cpp:    case COLOR_Lab2BGR: case COLOR_Lab2LBGR:
modules/imgproc/perf/perf_cvt_color.cpp:    case COLOR_Lab2LRGB: case COLOR_Lab2RGB:
modules/imgproc/perf/perf_cvt_color.cpp:    case COLOR_LBGR2Lab: case COLOR_LBGR2Luv:
modules/imgproc/perf/perf_cvt_color.cpp:    case COLOR_LRGB2Lab: case COLOR_LRGB2Luv:
modules/imgproc/perf/perf_cvt_color.cpp:    case COLOR_RGB2Lab: case COLOR_RGB2Luv:
modules/imgproc/perf/perf_cvt_color.cpp:    case CX_Lab2BGRA: case CX_Lab2LBGRA:
modules/imgproc/perf/perf_cvt_color.cpp:    case CX_Lab2LRGBA: case CX_Lab2RGBA:
modules/imgproc/perf/perf_cvt_color.cpp:    case CX_BGRA2HSV_FULL: case CX_BGRA2Lab:
modules/imgproc/perf/perf_cvt_color.cpp:    case CX_LBGRA2Lab: case CX_LBGRA2Luv:
modules/imgproc/perf/perf_cvt_color.cpp:    case CX_LRGBA2Lab: case CX_LRGBA2Luv:
modules/imgproc/perf/perf_cvt_color.cpp:    case CX_RGBA2HSV_FULL: case CX_RGBA2Lab:
modules/imgproc/perf/perf_canny.cpp:        FAIL() << "Unable to load source image " << filename;
modules/imgproc/perf/perf_distanceTransform.cpp:CV_ENUM(LabelType, DIST_LABEL_CCOMP, DIST_LABEL_PIXEL)
modules/imgproc/perf/perf_distanceTransform.cpp:typedef std::tr1::tuple<Size, DistanceType, MaskSize, LabelType> SrcSize_DistType_MaskSize_LabelType;
modules/imgproc/perf/perf_distanceTransform.cpp:typedef perf::TestBaseWithParam<SrcSize_DistType_MaskSize_LabelType> DistanceTransform_NeedLabels_Test;
modules/imgproc/perf/perf_distanceTransform.cpp:PERF_TEST_P(DistanceTransform_NeedLabels_Test, distanceTransform_NeedLabels,
modules/imgproc/perf/perf_distanceTransform.cpp:                LabelType::all()
modules/imgproc/perf/perf_distanceTransform.cpp:    int labelType = get<3>(GetParam());
modules/imgproc/perf/perf_distanceTransform.cpp:    Mat label(srcSize, CV_32S);
modules/imgproc/perf/perf_distanceTransform.cpp:        .out(label, WARMUP_RNG)
modules/imgproc/perf/perf_distanceTransform.cpp:    TEST_CYCLE() distanceTransform( src, dst, label, distanceType, maskSize, labelType);
modules/imgproc/perf/perf_distanceTransform.cpp:    SANITY_CHECK(label, eps);
modules/imgproc/perf/perf_filter2d.cpp:    double s = fabs( sum(kernel)[0] );
modules/imgproc/perf/perf_filter2d.cpp:PERF_TEST_P( Image_KernelSize, GaborFilter2d,
modules/imgproc/perf/perf_filter2d.cpp:        FAIL() << "Unable to load source image" << fileName;
modules/imgproc/perf/perf_filter2d.cpp:    Mat gaborKernel = getGaborKernel(Size(kernelSize, kernelSize), sigma, theta, lambda, gamma);
modules/imgproc/perf/perf_filter2d.cpp:        filter2D(sourceImage, filteredImage, CV_32F, gaborKernel);
modules/imgproc/perf/perf_corners.cpp:    ASSERT_FALSE(src.empty()) << "Unable to load source image: " << filename;
modules/imgproc/perf/perf_corners.cpp:    ASSERT_FALSE(src.empty()) << "Unable to load source image: " << filename;
modules/imgproc/perf/perf_corners.cpp:    ASSERT_FALSE(src.empty()) << "Unable to load source image: " << filename;
modules/imgproc/perf/opencl/perf_color.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/perf/opencl/perf_color.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/perf/opencl/perf_color.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/perf/opencl/perf_color.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/perf/opencl/perf_color.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/perf/opencl/perf_color.cpp:        COLOR_RGB2Lab, COLOR_Lab2BGR, COLOR_RGB2Luv, COLOR_Luv2LBGR, COLOR_YUV2RGB_NV12, COLOR_YUV2RGB_IYUV,
modules/imgproc/perf/opencl/perf_color.cpp:                    make_tuple(ConversionTypes(COLOR_RGB2Lab), 3, 3),
modules/imgproc/perf/opencl/perf_color.cpp:                    make_tuple(ConversionTypes(COLOR_Lab2BGR), 3, 4),
modules/imgproc/perf/opencl/perf_filters.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/perf/opencl/perf_filters.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/perf/opencl/perf_filters.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/perf/opencl/perf_filters.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/perf/opencl/perf_filters.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/perf/opencl/perf_imgproc.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/perf/opencl/perf_imgproc.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/perf/opencl/perf_imgproc.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/perf/opencl/perf_imgproc.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/perf/opencl/perf_imgproc.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/perf/opencl/perf_blend.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/perf/opencl/perf_blend.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/perf/opencl/perf_blend.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/perf/opencl/perf_blend.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/perf/opencl/perf_blend.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/perf/opencl/perf_gftt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/perf/opencl/perf_gftt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/perf/opencl/perf_gftt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/perf/opencl/perf_gftt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/perf/opencl/perf_gftt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/perf/opencl/perf_moments.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/perf/opencl/perf_moments.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/perf/opencl/perf_moments.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/perf/opencl/perf_moments.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/perf/opencl/perf_moments.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/perf/opencl/perf_pyramid.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/perf/opencl/perf_pyramid.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/perf/opencl/perf_pyramid.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/perf/opencl/perf_pyramid.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/perf/opencl/perf_pyramid.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/perf/opencl/perf_imgwarp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/perf/opencl/perf_imgwarp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/perf/opencl/perf_imgwarp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/perf/opencl/perf_imgwarp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/perf/opencl/perf_imgwarp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/perf/opencl/perf_accumulate.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/perf/opencl/perf_accumulate.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/perf/opencl/perf_accumulate.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/perf/opencl/perf_accumulate.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/perf/opencl/perf_accumulate.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/perf/perf_houghLines.cpp:        FAIL() << "Unable to load source image" << filename;
modules/imgproc/src/spatialgradient.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/spatialgradient.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/spatialgradient.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/spatialgradient.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/spatialgradient.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/spatialgradient.cpp:    // Characters in variable names have the following meanings:
modules/imgproc/src/accum.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/accum.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/accum.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/accum.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/accum.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/accum.cpp:static AccFunc accTab[] =
modules/imgproc/src/accum.cpp:static AccFunc accSqrTab[] =
modules/imgproc/src/accum.cpp:static AccProdFunc accProdTab[] =
modules/imgproc/src/accum.cpp:static AccWFunc accWTab[] =
modules/imgproc/src/accum.cpp:inline int getAccTabIdx(int sdepth, int ddepth)
modules/imgproc/src/accum.cpp:    int fidx = getAccTabIdx(sdepth, ddepth);
modules/imgproc/src/accum.cpp:    AccFunc func = fidx >= 0 ? accTab[fidx] : 0;
modules/imgproc/src/accum.cpp:    int fidx = getAccTabIdx(sdepth, ddepth);
modules/imgproc/src/accum.cpp:    AccFunc func = fidx >= 0 ? accSqrTab[fidx] : 0;
modules/imgproc/src/accum.cpp:    int fidx = getAccTabIdx(sdepth, ddepth);
modules/imgproc/src/accum.cpp:    AccProdFunc func = fidx >= 0 ? accProdTab[fidx] : 0;
modules/imgproc/src/accum.cpp:    int fidx = getAccTabIdx(sdepth, ddepth);
modules/imgproc/src/accum.cpp:    AccWFunc func = fidx >= 0 ? accWTab[fidx] : 0;
modules/imgproc/src/imgwarp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/imgwarp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/imgwarp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/imgwarp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/imgwarp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/imgwarp.cpp:/************** interpolation formulas and tables ***************/
modules/imgproc/src/imgwarp.cpp:static uchar NNDeltaTab_i[INTER_TAB_SIZE2][2];
modules/imgproc/src/imgwarp.cpp:static float BilinearTab_f[INTER_TAB_SIZE2][2][2];
modules/imgproc/src/imgwarp.cpp:static short BilinearTab_i[INTER_TAB_SIZE2][2][2];
modules/imgproc/src/imgwarp.cpp:static short BilinearTab_iC4_buf[INTER_TAB_SIZE2+2][2][8];
modules/imgproc/src/imgwarp.cpp:static short (*BilinearTab_iC4)[2][8] = (short (*)[2][8])alignPtr(BilinearTab_iC4_buf, 16);
modules/imgproc/src/imgwarp.cpp:static float BicubicTab_f[INTER_TAB_SIZE2][4][4];
modules/imgproc/src/imgwarp.cpp:static short BicubicTab_i[INTER_TAB_SIZE2][4][4];
modules/imgproc/src/imgwarp.cpp:static float Lanczos4Tab_f[INTER_TAB_SIZE2][8][8];
modules/imgproc/src/imgwarp.cpp:static short Lanczos4Tab_i[INTER_TAB_SIZE2][8][8];
modules/imgproc/src/imgwarp.cpp:static void initInterTab1D(int method, float* tab, int tabsz)
modules/imgproc/src/imgwarp.cpp:    float scale = 1.f/tabsz;
modules/imgproc/src/imgwarp.cpp:        for( int i = 0; i < tabsz; i++, tab += 2 )
modules/imgproc/src/imgwarp.cpp:            interpolateLinear( i*scale, tab );
modules/imgproc/src/imgwarp.cpp:        for( int i = 0; i < tabsz; i++, tab += 4 )
modules/imgproc/src/imgwarp.cpp:            interpolateCubic( i*scale, tab );
modules/imgproc/src/imgwarp.cpp:        for( int i = 0; i < tabsz; i++, tab += 8 )
modules/imgproc/src/imgwarp.cpp:            interpolateLanczos4( i*scale, tab );
modules/imgproc/src/imgwarp.cpp:static const void* initInterTab2D( int method, bool fixpt )
modules/imgproc/src/imgwarp.cpp:    static bool inittab[INTER_MAX+1] = {false};
modules/imgproc/src/imgwarp.cpp:    float* tab = 0;
modules/imgproc/src/imgwarp.cpp:    short* itab = 0;
modules/imgproc/src/imgwarp.cpp:        tab = BilinearTab_f[0][0], itab = BilinearTab_i[0][0], ksize=2;
modules/imgproc/src/imgwarp.cpp:        tab = BicubicTab_f[0][0], itab = BicubicTab_i[0][0], ksize=4;
modules/imgproc/src/imgwarp.cpp:        tab = Lanczos4Tab_f[0][0], itab = Lanczos4Tab_i[0][0], ksize=8;
modules/imgproc/src/imgwarp.cpp:    if( !inittab[method] )
modules/imgproc/src/imgwarp.cpp:        AutoBuffer<float> _tab(8*INTER_TAB_SIZE);
modules/imgproc/src/imgwarp.cpp:        initInterTab1D(method, _tab, INTER_TAB_SIZE);
modules/imgproc/src/imgwarp.cpp:            for( j = 0; j < INTER_TAB_SIZE; j++, tab += ksize*ksize, itab += ksize*ksize )
modules/imgproc/src/imgwarp.cpp:                NNDeltaTab_i[i*INTER_TAB_SIZE+j][0] = j < INTER_TAB_SIZE/2;
modules/imgproc/src/imgwarp.cpp:                NNDeltaTab_i[i*INTER_TAB_SIZE+j][1] = i < INTER_TAB_SIZE/2;
modules/imgproc/src/imgwarp.cpp:                    float vy = _tab[i*ksize + k1];
modules/imgproc/src/imgwarp.cpp:                        float v = vy*_tab[j*ksize + k2];
modules/imgproc/src/imgwarp.cpp:                        tab[k1*ksize + k2] = v;
modules/imgproc/src/imgwarp.cpp:                        isum += itab[k1*ksize + k2] = saturate_cast<short>(v*INTER_REMAP_COEF_SCALE);
modules/imgproc/src/imgwarp.cpp:                            if( itab[k1*ksize+k2] < itab[mk1*ksize+mk2] )
modules/imgproc/src/imgwarp.cpp:                            else if( itab[k1*ksize+k2] > itab[Mk1*ksize+Mk2] )
modules/imgproc/src/imgwarp.cpp:                        itab[Mk1*ksize + Mk2] = (short)(itab[Mk1*ksize + Mk2] - diff);
modules/imgproc/src/imgwarp.cpp:                        itab[mk1*ksize + mk2] = (short)(itab[mk1*ksize + mk2] - diff);
modules/imgproc/src/imgwarp.cpp:        tab -= INTER_TAB_SIZE2*ksize*ksize;
modules/imgproc/src/imgwarp.cpp:        itab -= INTER_TAB_SIZE2*ksize*ksize;
modules/imgproc/src/imgwarp.cpp:                    BilinearTab_iC4[i][0][j*2] = BilinearTab_i[i][0][0];
modules/imgproc/src/imgwarp.cpp:                    BilinearTab_iC4[i][0][j*2+1] = BilinearTab_i[i][0][1];
modules/imgproc/src/imgwarp.cpp:                    BilinearTab_iC4[i][1][j*2] = BilinearTab_i[i][1][0];
modules/imgproc/src/imgwarp.cpp:                    BilinearTab_iC4[i][1][j*2+1] = BilinearTab_i[i][1][1];
modules/imgproc/src/imgwarp.cpp:        inittab[method] = true;
modules/imgproc/src/imgwarp.cpp:    return fixpt ? (const void*)itab : (const void*)tab;
modules/imgproc/src/imgwarp.cpp:static bool initAllInterTab2D()
modules/imgproc/src/imgwarp.cpp:    return  initInterTab2D( INTER_LINEAR, false ) &&
modules/imgproc/src/imgwarp.cpp:            initInterTab2D( INTER_LINEAR, true ) &&
modules/imgproc/src/imgwarp.cpp:            initInterTab2D( INTER_CUBIC, false ) &&
modules/imgproc/src/imgwarp.cpp:            initInterTab2D( INTER_CUBIC, true ) &&
modules/imgproc/src/imgwarp.cpp:            initInterTab2D( INTER_LANCZOS4, false ) &&
modules/imgproc/src/imgwarp.cpp:            initInterTab2D( INTER_LANCZOS4, true );
modules/imgproc/src/imgwarp.cpp:static volatile bool doInitAllInterTab2D = initAllInterTab2D();
modules/imgproc/src/imgwarp.cpp:    // image resize is a separable operation. In case of not too strong
modules/imgproc/src/imgwarp.cpp:                        const DecimateAlpha* _xtab, int _xtab_size,
modules/imgproc/src/imgwarp.cpp:                        const DecimateAlpha* _ytab, int _ytab_size,
modules/imgproc/src/imgwarp.cpp:                        const int* _tabofs )
modules/imgproc/src/imgwarp.cpp:        xtab0 = _xtab;
modules/imgproc/src/imgwarp.cpp:        xtab_size0 = _xtab_size;
modules/imgproc/src/imgwarp.cpp:        ytab = _ytab;
modules/imgproc/src/imgwarp.cpp:        ytab_size = _ytab_size;
modules/imgproc/src/imgwarp.cpp:        tabofs = _tabofs;
modules/imgproc/src/imgwarp.cpp:        const DecimateAlpha* xtab = xtab0;
modules/imgproc/src/imgwarp.cpp:        int xtab_size = xtab_size0;
modules/imgproc/src/imgwarp.cpp:        int j_start = tabofs[range.start], j_end = tabofs[range.end], j, k, dx, prev_dy = ytab[j_start].di;
modules/imgproc/src/imgwarp.cpp:            WT beta = ytab[j].alpha;
modules/imgproc/src/imgwarp.cpp:            int dy = ytab[j].di;
modules/imgproc/src/imgwarp.cpp:            int sy = ytab[j].si;
modules/imgproc/src/imgwarp.cpp:                    for( k = 0; k < xtab_size; k++ )
modules/imgproc/src/imgwarp.cpp:                        int dxn = xtab[k].di;
modules/imgproc/src/imgwarp.cpp:                        WT alpha = xtab[k].alpha;
modules/imgproc/src/imgwarp.cpp:                        buf[dxn] += S[xtab[k].si]*alpha;
modules/imgproc/src/imgwarp.cpp:                    for( k = 0; k < xtab_size; k++ )
modules/imgproc/src/imgwarp.cpp:                        int sxn = xtab[k].si;
modules/imgproc/src/imgwarp.cpp:                        int dxn = xtab[k].di;
modules/imgproc/src/imgwarp.cpp:                        WT alpha = xtab[k].alpha;
modules/imgproc/src/imgwarp.cpp:                    for( k = 0; k < xtab_size; k++ )
modules/imgproc/src/imgwarp.cpp:                        int sxn = xtab[k].si;
modules/imgproc/src/imgwarp.cpp:                        int dxn = xtab[k].di;
modules/imgproc/src/imgwarp.cpp:                        WT alpha = xtab[k].alpha;
modules/imgproc/src/imgwarp.cpp:                    for( k = 0; k < xtab_size; k++ )
modules/imgproc/src/imgwarp.cpp:                        int sxn = xtab[k].si;
modules/imgproc/src/imgwarp.cpp:                        int dxn = xtab[k].di;
modules/imgproc/src/imgwarp.cpp:                        WT alpha = xtab[k].alpha;
modules/imgproc/src/imgwarp.cpp:                    for( k = 0; k < xtab_size; k++ )
modules/imgproc/src/imgwarp.cpp:                        int sxn = xtab[k].si;
modules/imgproc/src/imgwarp.cpp:                        int dxn = xtab[k].di;
modules/imgproc/src/imgwarp.cpp:                        WT alpha = xtab[k].alpha;
modules/imgproc/src/imgwarp.cpp:    const DecimateAlpha* xtab0;
modules/imgproc/src/imgwarp.cpp:    const DecimateAlpha* ytab;
modules/imgproc/src/imgwarp.cpp:    int xtab_size0, ytab_size;
modules/imgproc/src/imgwarp.cpp:    const int* tabofs;
modules/imgproc/src/imgwarp.cpp:                         const DecimateAlpha* xtab, int xtab_size,
modules/imgproc/src/imgwarp.cpp:                         const DecimateAlpha* ytab, int ytab_size,
modules/imgproc/src/imgwarp.cpp:                         const int* tabofs )
modules/imgproc/src/imgwarp.cpp:                 ResizeArea_Invoker<T, WT>(src, dst, xtab, xtab_size, ytab, ytab_size, tabofs),
modules/imgproc/src/imgwarp.cpp:                                const DecimateAlpha* xtab, int xtab_size,
modules/imgproc/src/imgwarp.cpp:                                const DecimateAlpha* ytab, int ytab_size,
modules/imgproc/src/imgwarp.cpp:static int computeResizeAreaTab( int ssize, int dsize, int cn, double scale, DecimateAlpha* tab )
modules/imgproc/src/imgwarp.cpp:            tab[k].di = dx * cn;
modules/imgproc/src/imgwarp.cpp:            tab[k].si = (sx1 - 1) * cn;
modules/imgproc/src/imgwarp.cpp:            tab[k++].alpha = (float)((sx1 - fsx1) / cellWidth);
modules/imgproc/src/imgwarp.cpp:            tab[k].di = dx * cn;
modules/imgproc/src/imgwarp.cpp:            tab[k].si = sx * cn;
modules/imgproc/src/imgwarp.cpp:            tab[k++].alpha = float(1.0 / cellWidth);
modules/imgproc/src/imgwarp.cpp:            tab[k].di = dx * cn;
modules/imgproc/src/imgwarp.cpp:            tab[k].si = sx2 * cn;
modules/imgproc/src/imgwarp.cpp:            tab[k++].alpha = (float)(std::min(std::min(fsx2 - sx2, 1.), cellWidth) / cellWidth);
modules/imgproc/src/imgwarp.cpp:#if IPP_DISABLE_BLOCK // disabled since it breaks tests for CascadeClassifier
modules/imgproc/src/imgwarp.cpp:static void ocl_computeResizeAreaTabs(int ssize, int dsize, double scale, int * const map_tab,
modules/imgproc/src/imgwarp.cpp:                                      float * const alpha_tab, int * const ofs_tab)
modules/imgproc/src/imgwarp.cpp:        ofs_tab[dx] = k;
modules/imgproc/src/imgwarp.cpp:            map_tab[k] = sx1 - 1;
modules/imgproc/src/imgwarp.cpp:            alpha_tab[k++] = (float)((sx1 - fsx1) / cellWidth);
modules/imgproc/src/imgwarp.cpp:            map_tab[k] = sx;
modules/imgproc/src/imgwarp.cpp:            alpha_tab[k++] = float(1.0 / cellWidth);
modules/imgproc/src/imgwarp.cpp:            map_tab[k] = sx2;
modules/imgproc/src/imgwarp.cpp:            alpha_tab[k++] = (float)(std::min(std::min(fsx2 - sx2, 1.), cellWidth) / cellWidth);
modules/imgproc/src/imgwarp.cpp:    ofs_tab[dx] = k;
modules/imgproc/src/imgwarp.cpp:    bool is_area_fast = std::abs(inv_fx - iscale_x) < DBL_EPSILON &&
modules/imgproc/src/imgwarp.cpp:        std::abs(inv_fy - iscale_y) < DBL_EPSILON;
modules/imgproc/src/imgwarp.cpp:        // integer path is slower because of CPU part, so it's disabled
modules/imgproc/src/imgwarp.cpp:        UMat alphaOcl, tabofsOcl, mapOcl;
modules/imgproc/src/imgwarp.cpp:            int xytab_size = (ssize.width + ssize.height) << 1;
modules/imgproc/src/imgwarp.cpp:            int tabofs_size = dsize.height + dsize.width + 2;
modules/imgproc/src/imgwarp.cpp:            AutoBuffer<int> _xymap_tab(xytab_size), _xyofs_tab(tabofs_size);
modules/imgproc/src/imgwarp.cpp:            AutoBuffer<float> _xyalpha_tab(xytab_size);
modules/imgproc/src/imgwarp.cpp:            int * xmap_tab = _xymap_tab, * ymap_tab = _xymap_tab + (ssize.width << 1);
modules/imgproc/src/imgwarp.cpp:            float * xalpha_tab = _xyalpha_tab, * yalpha_tab = _xyalpha_tab + (ssize.width << 1);
modules/imgproc/src/imgwarp.cpp:            int * xofs_tab = _xyofs_tab, * yofs_tab = _xyofs_tab + dsize.width + 1;
modules/imgproc/src/imgwarp.cpp:            ocl_computeResizeAreaTabs(ssize.width, dsize.width, inv_fx, xmap_tab, xalpha_tab, xofs_tab);
modules/imgproc/src/imgwarp.cpp:            ocl_computeResizeAreaTabs(ssize.height, dsize.height, inv_fy, ymap_tab, yalpha_tab, yofs_tab);
modules/imgproc/src/imgwarp.cpp:            Mat(1, xytab_size, CV_32FC1, (void *)_xyalpha_tab).copyTo(alphaOcl);
modules/imgproc/src/imgwarp.cpp:            Mat(1, xytab_size, CV_32SC1, (void *)_xymap_tab).copyTo(mapOcl);
modules/imgproc/src/imgwarp.cpp:            Mat(1, tabofs_size, CV_32SC1, (void *)_xyofs_tab).copyTo(tabofsOcl);
modules/imgproc/src/imgwarp.cpp:            k.args(srcarg, dstarg, inv_fxf, inv_fyf, ocl::KernelArg::PtrReadOnly(tabofsOcl),
modules/imgproc/src/imgwarp.cpp:    static ResizeFunc linear_tab[] =
modules/imgproc/src/imgwarp.cpp:    static ResizeFunc cubic_tab[] =
modules/imgproc/src/imgwarp.cpp:    static ResizeFunc lanczos4_tab[] =
modules/imgproc/src/imgwarp.cpp:    static ResizeAreaFastFunc areafast_tab[] =
modules/imgproc/src/imgwarp.cpp:    static ResizeAreaFunc area_tab[] =
modules/imgproc/src/imgwarp.cpp:    bool is_area_fast = std::abs(scale_x - iscale_x) < DBL_EPSILON &&
modules/imgproc/src/imgwarp.cpp:            std::abs(scale_y - iscale_y) < DBL_EPSILON;
modules/imgproc/src/imgwarp.cpp:    double ex = fabs((double)dsize.width / _src.cols()  - inv_scale_x) / inv_scale_x;
modules/imgproc/src/imgwarp.cpp:    double ey = fabs((double)dsize.height / _src.rows() - inv_scale_y) / inv_scale_y;
modules/imgproc/src/imgwarp.cpp:                ResizeAreaFastFunc func = areafast_tab[depth];
modules/imgproc/src/imgwarp.cpp:            ResizeAreaFunc func = area_tab[depth];
modules/imgproc/src/imgwarp.cpp:            AutoBuffer<DecimateAlpha> _xytab((ssize.width + ssize.height)*2);
modules/imgproc/src/imgwarp.cpp:            DecimateAlpha* xtab = _xytab, *ytab = xtab + ssize.width*2;
modules/imgproc/src/imgwarp.cpp:            int xtab_size = computeResizeAreaTab(ssize.width, dsize.width, cn, scale_x, xtab);
modules/imgproc/src/imgwarp.cpp:            int ytab_size = computeResizeAreaTab(ssize.height, dsize.height, 1, scale_y, ytab);
modules/imgproc/src/imgwarp.cpp:            AutoBuffer<int> _tabofs(dsize.height + 1);
modules/imgproc/src/imgwarp.cpp:            int* tabofs = _tabofs;
modules/imgproc/src/imgwarp.cpp:            for( k = 0, dy = 0; k < ytab_size; k++ )
modules/imgproc/src/imgwarp.cpp:                if( k == 0 || ytab[k].di != ytab[k-1].di )
modules/imgproc/src/imgwarp.cpp:                    assert( ytab[k].di == dy );
modules/imgproc/src/imgwarp.cpp:                    tabofs[dy++] = k;
modules/imgproc/src/imgwarp.cpp:            tabofs[dy] = ytab_size;
modules/imgproc/src/imgwarp.cpp:            func( src, dst, xtab, xtab_size, ytab, ytab_size, tabofs );
modules/imgproc/src/imgwarp.cpp:        ksize = 4, func = cubic_tab[depth];
modules/imgproc/src/imgwarp.cpp:        ksize = 8, func = lanczos4_tab[depth];
modules/imgproc/src/imgwarp.cpp:        ksize = 2, func = linear_tab[depth];
modules/imgproc/src/imgwarp.cpp:                    const ushort* FXY, const void* _wtab, int width ) const
modules/imgproc/src/imgwarp.cpp:        const short* wtab = cn == 1 ? (const short*)_wtab : &BilinearTab_iC4[0][0][0];
modules/imgproc/src/imgwarp.cpp:                a0 = _mm_unpacklo_epi32(_mm_loadl_epi64((__m128i*)(wtab+FXY[x]*4)),
modules/imgproc/src/imgwarp.cpp:                                        _mm_loadl_epi64((__m128i*)(wtab+FXY[x+1]*4)));
modules/imgproc/src/imgwarp.cpp:                a1 = _mm_unpacklo_epi32(_mm_loadl_epi64((__m128i*)(wtab+FXY[x+2]*4)),
modules/imgproc/src/imgwarp.cpp:                                        _mm_loadl_epi64((__m128i*)(wtab+FXY[x+3]*4)));
modules/imgproc/src/imgwarp.cpp:                a0 = _mm_unpacklo_epi32(_mm_loadl_epi64((__m128i*)(wtab+FXY[x+4]*4)),
modules/imgproc/src/imgwarp.cpp:                                        _mm_loadl_epi64((__m128i*)(wtab+FXY[x+5]*4)));
modules/imgproc/src/imgwarp.cpp:                a1 = _mm_unpacklo_epi32(_mm_loadl_epi64((__m128i*)(wtab+FXY[x+6]*4)),
modules/imgproc/src/imgwarp.cpp:                                        _mm_loadl_epi64((__m128i*)(wtab+FXY[x+7]*4)));
modules/imgproc/src/imgwarp.cpp:                w0 = (const __m128i*)(wtab + FXY[x]*16);
modules/imgproc/src/imgwarp.cpp:                w1 = (const __m128i*)(wtab + FXY[x+1]*16);
modules/imgproc/src/imgwarp.cpp:                w0 = (const __m128i*)(wtab + FXY[x+2]*16);
modules/imgproc/src/imgwarp.cpp:                w1 = (const __m128i*)(wtab + FXY[x+3]*16);
modules/imgproc/src/imgwarp.cpp:                w0 = (const __m128i*)(wtab + FXY[x]*16);
modules/imgproc/src/imgwarp.cpp:                w1 = (const __m128i*)(wtab + FXY[x+1]*16);
modules/imgproc/src/imgwarp.cpp:                w0 = (const __m128i*)(wtab + FXY[x+2]*16);
modules/imgproc/src/imgwarp.cpp:                w1 = (const __m128i*)(wtab + FXY[x+3]*16);
modules/imgproc/src/imgwarp.cpp:                           const Mat& _fxy, const void* _wtab,
modules/imgproc/src/imgwarp.cpp:    const AT* wtab = (const AT*)_wtab;
modules/imgproc/src/imgwarp.cpp:                int len = vecOp( _src, D, XY + dx*2, FXY + dx, wtab, X1 - dx );
modules/imgproc/src/imgwarp.cpp:                        const AT* w = wtab + FXY[dx]*4;
modules/imgproc/src/imgwarp.cpp:                        const AT* w = wtab + FXY[dx]*4;
modules/imgproc/src/imgwarp.cpp:                        const AT* w = wtab + FXY[dx]*4;
modules/imgproc/src/imgwarp.cpp:                        const AT* w = wtab + FXY[dx]*4;
modules/imgproc/src/imgwarp.cpp:                        const AT* w = wtab + FXY[dx]*4;
modules/imgproc/src/imgwarp.cpp:                            const AT* w = wtab + FXY[dx]*4;
modules/imgproc/src/imgwarp.cpp:                            const AT* w = wtab + FXY[dx]*4;
modules/imgproc/src/imgwarp.cpp:                          const Mat& _fxy, const void* _wtab,
modules/imgproc/src/imgwarp.cpp:    const AT* wtab = (const AT*)_wtab;
modules/imgproc/src/imgwarp.cpp:            const AT* w = wtab + FXY[dx]*16;
modules/imgproc/src/imgwarp.cpp:                           const Mat& _fxy, const void* _wtab,
modules/imgproc/src/imgwarp.cpp:    const AT* wtab = (const AT*)_wtab;
modules/imgproc/src/imgwarp.cpp:            const AT* w = wtab + FXY[dx]*64;
modules/imgproc/src/imgwarp.cpp:                          const Mat& _fxy, const void* _wtab,
modules/imgproc/src/imgwarp.cpp:                 int _planar_input, RemapNNFunc _nnfunc, RemapFunc _ifunc, const void *_ctab) :
modules/imgproc/src/imgwarp.cpp:        planar_input(_planar_input), nnfunc(_nnfunc), ifunc(_ifunc), ctab(_ctab)
modules/imgproc/src/imgwarp.cpp:                                XY[x1*2] = sXY[x1*2] + NNDeltaTab_i[a][0];
modules/imgproc/src/imgwarp.cpp:                                XY[x1*2+1] = sXY[x1*2+1] + NNDeltaTab_i[a][1];
modules/imgproc/src/imgwarp.cpp:                ifunc(*src, dpart, bufxy, bufa, ctab, borderType, borderValue);
modules/imgproc/src/imgwarp.cpp:    const void *ctab;
modules/imgproc/src/imgwarp.cpp:    static RemapNNFunc nn_tab[] =
modules/imgproc/src/imgwarp.cpp:    static RemapFunc linear_tab[] =
modules/imgproc/src/imgwarp.cpp:    static RemapFunc cubic_tab[] =
modules/imgproc/src/imgwarp.cpp:    static RemapFunc lanczos4_tab[] =
modules/imgproc/src/imgwarp.cpp:    const void* ctab = 0;
modules/imgproc/src/imgwarp.cpp:        nnfunc = nn_tab[depth];
modules/imgproc/src/imgwarp.cpp:            ifunc = linear_tab[depth];
modules/imgproc/src/imgwarp.cpp:            ifunc = cubic_tab[depth];
modules/imgproc/src/imgwarp.cpp:            ifunc = lanczos4_tab[depth];
modules/imgproc/src/imgwarp.cpp:        ctab = initInterTab2D( interpolation, fixpt );
modules/imgproc/src/imgwarp.cpp:                         ctab);
modules/imgproc/src/imgwarp.cpp:    AutoBuffer<int> _abdelta(dst.cols*2);
modules/imgproc/src/imgwarp.cpp:    int* adelta = &_abdelta[0], *bdelta = adelta + dst.cols;
modules/imgproc/src/imgwarp.cpp:        cv::AutoBuffer<double> _exp_tab(dsize.width);
modules/imgproc/src/imgwarp.cpp:        double* exp_tab = _exp_tab;
modules/imgproc/src/imgwarp.cpp:            exp_tab[rho] = std::exp(rho/M);
modules/imgproc/src/imgwarp.cpp:                double r = exp_tab[rho];
modules/imgproc/src/linefit.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/linefit.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/linefit.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/linefit.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/linefit.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/linefit.cpp:        dist[j] = (float) fabs( nx * x + ny * y );
modules/imgproc/src/linefit.cpp:        double t = fabs( (double) d[i] );
modules/imgproc/src/linefit.cpp:                if( fabs(acos(t)) < adelta )
modules/imgproc/src/linefit.cpp:                    x = (float) fabs( _line[2] - _lineprev[2] );
modules/imgproc/src/linefit.cpp:                    y = (float) fabs( _line[3] - _lineprev[3] );
modules/imgproc/src/linefit.cpp:            if( fabs(sum_w) > FLT_EPSILON )
modules/imgproc/src/linefit.cpp:                if( fabs(acos(t)) < adelta )
modules/imgproc/src/linefit.cpp:                    dx = (float) fabs( y * az - z * ay );
modules/imgproc/src/linefit.cpp:                    dy = (float) fabs( z * ax - x * az );
modules/imgproc/src/linefit.cpp:                    dz = (float) fabs( x * ay - y * ax );
modules/imgproc/src/linefit.cpp:            if( fabs(sum_w) > FLT_EPSILON )
modules/imgproc/src/blend.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/blend.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/blend.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/blend.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/blend.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/drawing.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/drawing.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/drawing.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/drawing.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/drawing.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/drawing.cpp:/* Correction table depent on the slope */
modules/imgproc/src/drawing.cpp:static const uchar SlopeCorrTable[] = {
modules/imgproc/src/drawing.cpp:static const int FilterTable[] = {
modules/imgproc/src/drawing.cpp:    int ep_table[9];
modules/imgproc/src/drawing.cpp:    slope = (slope & 0x20) ? 0x100 : SlopeCorrTable[slope];
modules/imgproc/src/drawing.cpp:    /* Calc end point correction table */
modules/imgproc/src/drawing.cpp:        ep_table[0] = 0;
modules/imgproc/src/drawing.cpp:        ep_table[8] = slope;
modules/imgproc/src/drawing.cpp:        ep_table[1] = ep_table[3] = ((((j - i) & 0x78) | 4) * slope >> 8) & 0x1ff;
modules/imgproc/src/drawing.cpp:        ep_table[2] = (t1 >> 8) & 0x1ff;
modules/imgproc/src/drawing.cpp:        ep_table[4] = ((((j - i) + 0x80) | 4) * slope >> 8) & 0x1ff;
modules/imgproc/src/drawing.cpp:        ep_table[5] = ((t1 + t0) >> 8) & 0x1ff;
modules/imgproc/src/drawing.cpp:        ep_table[6] = (t2 >> 8) & 0x1ff;
modules/imgproc/src/drawing.cpp:        ep_table[7] = ((t2 + t0) >> 8) & 0x1ff;
modules/imgproc/src/drawing.cpp:                int ep_corr = ep_table[(((scount >= 2) + 1) & (scount | 2)) * 3 +
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist + 32] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[63 - dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                int ep_corr = ep_table[(((scount >= 2) + 1) & (scount | 2)) * 3 +
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist + 32] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[63 - dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                int ep_corr = ep_table[(((scount >= 2) + 1) & (scount | 2)) * 3 +
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist + 32] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[63 - dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                int ep_corr = ep_table[(((scount >= 2) + 1) & (scount | 2)) * 3 +
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist + 32] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[63 - dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                int ep_corr = ep_table[(((scount >= 2) + 1) & (scount | 2)) * 3 +
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist + 32] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[63 - dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                int ep_corr = ep_table[(((scount >= 2) + 1) & (scount | 2)) * 3 +
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist + 32] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:                a = (ep_corr * FilterTable[63 - dist] >> 8) & 0xff;
modules/imgproc/src/drawing.cpp:static const float SinTable[] =
modules/imgproc/src/drawing.cpp:    sinval = SinTable[angle];
modules/imgproc/src/drawing.cpp:    cosval = SinTable[450 - angle];
modules/imgproc/src/drawing.cpp:        x = size_a * SinTable[450-angle];
modules/imgproc/src/drawing.cpp:        y = size_b * SinTable[angle];
modules/imgproc/src/drawing.cpp:    axes.width = std::abs(axes.width), axes.height = std::abs(axes.height);
modules/imgproc/src/drawing.cpp:        if( fabs(r) > DBL_EPSILON )
modules/imgproc/src/lsd.cpp://   * Redistributions of source code must retain the above copyright notice,
modules/imgproc/src/lsd.cpp://   * Redistributions in binary form must reproduce the above copyright notice,
modules/imgproc/src/lsd.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/lsd.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/lsd.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/lsd.cpp:#define NOTDEF      double(-1024.0) // Label for pixels with undefined gradient.
modules/imgproc/src/lsd.cpp:#define NOTUSED     0   // Label for pixels not used in yet.
modules/imgproc/src/lsd.cpp:#define USED        1   // Label for pixels already used in detection.
modules/imgproc/src/lsd.cpp:    return std::fabs(angle_diff_signed(a, b));
modules/imgproc/src/lsd.cpp:    double abs_diff = fabs(a - b);
modules/imgproc/src/lsd.cpp:    double aa = fabs(a);
modules/imgproc/src/lsd.cpp:    double bb = fabs(b);
modules/imgproc/src/lsd.cpp:    double abs_max = (aa > bb)? aa : bb;
modules/imgproc/src/lsd.cpp:    if(abs_max < DBL_MIN) abs_max = DBL_MIN;
modules/imgproc/src/lsd.cpp:    return (abs_diff / abs_max) <= (RELATIVE_ERROR_FACTOR * DBL_EPSILON);
modules/imgproc/src/lsd.cpp: *   Computes the natural logarithm of the absolute value of
modules/imgproc/src/lsd.cpp: *   Computes the natural logarithm of the absolute value of
modules/imgproc/src/lsd.cpp:        double p;                 // probability of a point with angle within 'prec'
modules/imgproc/src/lsd.cpp: * @param p         Probability of a point with angle within 'prec'.
modules/imgproc/src/lsd.cpp:    double theta = (fabs(Ixx)>fabs(Iyy))?
modules/imgproc/src/lsd.cpp:            if(err < tolerance * fabs(-log10(bin_tail) - LOG_NT) * bin_tail) break;
modules/imgproc/src/connectedcomponents.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/connectedcomponents.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/connectedcomponents.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/connectedcomponents.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/connectedcomponents.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/connectedcomponents.cpp:        void init(int /*labels*/){
modules/imgproc/src/connectedcomponents.cpp:        void init(int nlabels){
modules/imgproc/src/connectedcomponents.cpp:            _mstatsv->create(cv::Size(CC_STAT_MAX, nlabels), cv::DataType<int>::type);
modules/imgproc/src/connectedcomponents.cpp:            _mcentroidsv->create(cv::Size(2, nlabels), cv::DataType<double>::type);
modules/imgproc/src/connectedcomponents.cpp:            for(int l = 0; l < (int) nlabels; ++l){
modules/imgproc/src/connectedcomponents.cpp:            integrals.resize(nlabels, Point2ui64(0, 0));
modules/imgproc/src/connectedcomponents.cpp:    template<typename LabelT>
modules/imgproc/src/connectedcomponents.cpp:    LabelT findRoot(const LabelT *P, LabelT i){
modules/imgproc/src/connectedcomponents.cpp:        LabelT root = i;
modules/imgproc/src/connectedcomponents.cpp:    template<typename LabelT>
modules/imgproc/src/connectedcomponents.cpp:    void setRoot(LabelT *P, LabelT i, LabelT root){
modules/imgproc/src/connectedcomponents.cpp:            LabelT j = P[i];
modules/imgproc/src/connectedcomponents.cpp:    template<typename LabelT>
modules/imgproc/src/connectedcomponents.cpp:    LabelT find(LabelT *P, LabelT i){
modules/imgproc/src/connectedcomponents.cpp:        LabelT root = findRoot(P, i);
modules/imgproc/src/connectedcomponents.cpp:    template<typename LabelT>
modules/imgproc/src/connectedcomponents.cpp:    LabelT set_union(LabelT *P, LabelT i, LabelT j){
modules/imgproc/src/connectedcomponents.cpp:        LabelT root = findRoot(P, i);
modules/imgproc/src/connectedcomponents.cpp:            LabelT rootj = findRoot(P, j);
modules/imgproc/src/connectedcomponents.cpp:    //Flatten the Union Find tree and relabel the components
modules/imgproc/src/connectedcomponents.cpp:    template<typename LabelT>
modules/imgproc/src/connectedcomponents.cpp:    LabelT flattenL(LabelT *P, LabelT length){
modules/imgproc/src/connectedcomponents.cpp:        LabelT k = 1;
modules/imgproc/src/connectedcomponents.cpp:        for(LabelT i = 1; i < length; ++i){
modules/imgproc/src/connectedcomponents.cpp:    template<typename LabelT, typename PixelT, typename StatsOp = NoOp >
modules/imgproc/src/connectedcomponents.cpp:    struct LabelingImpl{
modules/imgproc/src/connectedcomponents.cpp:    LabelT operator()(const cv::Mat &I, cv::Mat &L, int connectivity, StatsOp &sop){
modules/imgproc/src/connectedcomponents.cpp:        //A quick and dirty upper bound for the maximimum number of labels.  The 4 comes from
modules/imgproc/src/connectedcomponents.cpp:        //the fact that a 3x3 block can never have more than 4 unique labels for both 4 & 8-way
modules/imgproc/src/connectedcomponents.cpp:        LabelT *P = (LabelT *) fastMalloc(sizeof(LabelT) * Plength);
modules/imgproc/src/connectedcomponents.cpp:        LabelT lunique = 1;
modules/imgproc/src/connectedcomponents.cpp:            LabelT * const Lrow = L.ptr<LabelT>(r_i);
modules/imgproc/src/connectedcomponents.cpp:            LabelT * const Lrow_prev = (LabelT *)(((char *)Lrow) - L.step.p[0]);
modules/imgproc/src/connectedcomponents.cpp:            LabelT *Lrows[2] = {
modules/imgproc/src/connectedcomponents.cpp:                                    //new label
modules/imgproc/src/connectedcomponents.cpp:                            //new label
modules/imgproc/src/connectedcomponents.cpp:        LabelT nLabels = flattenL(P, lunique);
modules/imgproc/src/connectedcomponents.cpp:        sop.init(nLabels);
modules/imgproc/src/connectedcomponents.cpp:            LabelT *Lrow_start = L.ptr<LabelT>(r_i);
modules/imgproc/src/connectedcomponents.cpp:            LabelT *Lrow_end = Lrow_start + cols;
modules/imgproc/src/connectedcomponents.cpp:            LabelT *Lrow = Lrow_start;
modules/imgproc/src/connectedcomponents.cpp:                const LabelT l = P[*Lrow];
modules/imgproc/src/connectedcomponents.cpp:        return nLabels;
modules/imgproc/src/connectedcomponents.cpp:    }//End function LabelingImpl operator()
modules/imgproc/src/connectedcomponents.cpp:    };//End struct LabelingImpl
modules/imgproc/src/connectedcomponents.cpp:    using connectedcomponents::LabelingImpl;
modules/imgproc/src/connectedcomponents.cpp:        return (int) LabelingImpl<uchar, uchar, StatsOp>()(I, L, connectivity, sop);
modules/imgproc/src/connectedcomponents.cpp:        return (int) LabelingImpl<ushort, uchar, StatsOp>()(I, L, connectivity, sop);
modules/imgproc/src/connectedcomponents.cpp:        //note that signed types don't really make sense here and not being able to use unsigned matters for scientific projects
modules/imgproc/src/connectedcomponents.cpp:        return (int) LabelingImpl<int, uchar, StatsOp>()(I, L, connectivity, sop);
modules/imgproc/src/connectedcomponents.cpp:    CV_Error(CV_StsUnsupportedFormat, "unsupported label/image type");
modules/imgproc/src/connectedcomponents.cpp:int cv::connectedComponents(InputArray _img, OutputArray _labels, int connectivity, int ltype){
modules/imgproc/src/connectedcomponents.cpp:    _labels.create(img.size(), CV_MAT_DEPTH(ltype));
modules/imgproc/src/connectedcomponents.cpp:    cv::Mat labels = _labels.getMat();
modules/imgproc/src/connectedcomponents.cpp:        return connectedComponents_sub1(img, labels, connectivity, sop);
modules/imgproc/src/connectedcomponents.cpp:        return connectedComponents_sub1(img, labels, connectivity, sop);
modules/imgproc/src/connectedcomponents.cpp:        CV_Error(CV_StsUnsupportedFormat, "the type of labels must be 16u or 32s");
modules/imgproc/src/connectedcomponents.cpp:int cv::connectedComponentsWithStats(InputArray _img, OutputArray _labels, OutputArray statsv,
modules/imgproc/src/connectedcomponents.cpp:    _labels.create(img.size(), CV_MAT_DEPTH(ltype));
modules/imgproc/src/connectedcomponents.cpp:    cv::Mat labels = _labels.getMat();
modules/imgproc/src/connectedcomponents.cpp:        return connectedComponents_sub1(img, labels, connectivity, sop);
modules/imgproc/src/connectedcomponents.cpp:        return connectedComponents_sub1(img, labels, connectivity, sop);
modules/imgproc/src/connectedcomponents.cpp:        CV_Error(CV_StsUnsupportedFormat, "the type of labels must be 16u or 32s");
modules/imgproc/src/thresh.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/thresh.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/thresh.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/thresh.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/thresh.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/thresh.cpp:    uchar tab[256];
modules/imgproc/src/thresh.cpp:            tab[i] = 0;
modules/imgproc/src/thresh.cpp:            tab[i] = maxval;
modules/imgproc/src/thresh.cpp:            tab[i] = maxval;
modules/imgproc/src/thresh.cpp:            tab[i] = 0;
modules/imgproc/src/thresh.cpp:            tab[i] = (uchar)i;
modules/imgproc/src/thresh.cpp:            tab[i] = thresh;
modules/imgproc/src/thresh.cpp:            tab[i] = 0;
modules/imgproc/src/thresh.cpp:            tab[i] = (uchar)i;
modules/imgproc/src/thresh.cpp:            tab[i] = (uchar)i;
modules/imgproc/src/thresh.cpp:            tab[i] = 0;
modules/imgproc/src/thresh.cpp:                uchar t0 = tab[src[j]];
modules/imgproc/src/thresh.cpp:                uchar t1 = tab[src[j+1]];
modules/imgproc/src/thresh.cpp:                t0 = tab[src[j+2]];
modules/imgproc/src/thresh.cpp:                t1 = tab[src[j+3]];
modules/imgproc/src/thresh.cpp:                dst[j] = tab[src[j]];
modules/imgproc/src/thresh.cpp:    uchar tab[768];
modules/imgproc/src/thresh.cpp:            tab[i] = (uchar)(i - 255 > -idelta ? imaxval : 0);
modules/imgproc/src/thresh.cpp:            tab[i] = (uchar)(i - 255 <= -idelta ? imaxval : 0);
modules/imgproc/src/thresh.cpp:            ddata[j] = tab[sdata[j] - mdata[j] + 255];
modules/imgproc/src/hershey_fonts.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/hershey_fonts.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/hershey_fonts.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/hershey_fonts.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/hershey_fonts.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/hershey_fonts.cpp://  CvMat helper tables
modules/imgproc/src/hershey_fonts.cpp: "BcGFG[ HFH[ RFR[ SFS[ ]F][ ^F^[ DFKF OFVF ZFaF D[a[ `[ab a[ab",
modules/imgproc/src/gabor.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/gabor.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/gabor.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/gabor.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/gabor.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/gabor.cpp: Gabor filters and such. To be greatly extended to have full texture analysis.
modules/imgproc/src/gabor.cpp: http://en.wikipedia.org/wiki/Gabor_filter
modules/imgproc/src/gabor.cpp:cv::Mat cv::getGaborKernel( Size ksize, double sigma, double theta,
modules/imgproc/src/gabor.cpp:        xmax = cvRound(std::max(fabs(nstds*sigma_x*c), fabs(nstds*sigma_y*s)));
modules/imgproc/src/gabor.cpp:        ymax = cvRound(std::max(fabs(nstds*sigma_x*s), fabs(nstds*sigma_y*c)));
modules/imgproc/src/shapedescr.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/shapedescr.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/shapedescr.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/shapedescr.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/shapedescr.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/shapedescr.cpp:        a00 = fabs(a00);
modules/imgproc/src/shapedescr.cpp:    if( fabs(gfp[2]) > min_eps )
modules/imgproc/src/shapedescr.cpp:    rp[2] = fabs(gfp[0] + gfp[1] - t);
modules/imgproc/src/shapedescr.cpp:    rp[3] = fabs(gfp[0] + gfp[1] + t);
modules/imgproc/src/shapedescr.cpp:    cv::AutoBuffer<double> abuf;
modules/imgproc/src/shapedescr.cpp:    cv::Mat points = cv::cvarrToMat(array, false, false, 0, &abuf);
modules/imgproc/src/shapedescr.cpp:            if( (fabs( sk ) < eps && lpt > 0) || sk * sk1 < -eps )
modules/imgproc/src/shapedescr.cpp:                if( fabs( sk ) < eps )
modules/imgproc/src/shapedescr.cpp:                    if( fabs( du ) > eps )
modules/imgproc/src/shapedescr.cpp:        area += fabs( p_are[i] );
modules/imgproc/src/shapedescr.cpp:        cv::AutoBuffer<double> abuf;
modules/imgproc/src/shapedescr.cpp:        cv::Mat points = cv::cvarrToMat(contour, false, false, 0, &abuf);
modules/imgproc/src/shapedescr.cpp:    return oriented ? area : fabs(area);
modules/imgproc/src/shapedescr.cpp:    cv::AutoBuffer<double> abuf;
modules/imgproc/src/shapedescr.cpp:    cv::Mat points = cv::cvarrToMat(array, false, false, 0, &abuf);
modules/imgproc/src/shapedescr.cpp:        cv::AutoBuffer<double> abuf;
modules/imgproc/src/shapedescr.cpp:        rect = cv::pointSetBoundingRect(cv::cvarrToMat(ptseq, false, false, 0, &abuf));
modules/imgproc/src/rotcalipers.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/rotcalipers.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/rotcalipers.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/rotcalipers.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/imgproc/src/rotcalipers.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/rotcalipers.cpp:    AutoBuffer<float> abuf(n*3);
modules/imgproc/src/rotcalipers.cpp:    float* inv_vect_length = abuf;
modules/imgproc/src/rotcalipers.cpp:                dist = (float)fabs(dx * base_a + dy * base_b);
modules/imgproc/src/rotcalipers.cpp:                dist = (float)fabs(dx * (-base_b) + dy * base_a);
modules/imgproc/src/rotcalipers.cpp:    cv::AutoBuffer<double> abuf;
modules/imgproc/src/rotcalipers.cpp:    cv::Mat points = cv::cvarrToMat(array, false, false, 0, &abuf);
modules/imgproc/src/sumpixels.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/sumpixels.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/sumpixels.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/sumpixels.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/sumpixels.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/sumpixels.cpp:#if !defined(HAVE_IPP_ICV_ONLY) && (IPP_VERSION_X100 != 900) // Disabled on ICV due invalid results
modules/imgproc/src/grabcut.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/grabcut.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/grabcut.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/grabcut.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/grabcut.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/grabcut.cpp:This is implementation of image segmentation algorithm GrabCut described in
modules/imgproc/src/grabcut.cpp:"GrabCut — Interactive Foreground Extraction using Iterated Graph Cuts".
modules/imgproc/src/grabcut.cpp:  Calculate beta - parameter of GrabCut algorithm.
modules/imgproc/src/grabcut.cpp:  beta and gamma - parameters of GrabCut algorithm.
modules/imgproc/src/grabcut.cpp:    Mat bgdLabels, fgdLabels;
modules/imgproc/src/grabcut.cpp:    kmeans( _bgdSamples, GMM::componentsCount, bgdLabels,
modules/imgproc/src/grabcut.cpp:    kmeans( _fgdSamples, GMM::componentsCount, fgdLabels,
modules/imgproc/src/grabcut.cpp:        bgdGMM.addSample( bgdLabels.at<int>(i,0), bgdSamples[i] );
modules/imgproc/src/grabcut.cpp:        fgdGMM.addSample( fgdLabels.at<int>(i,0), fgdSamples[i] );
modules/imgproc/src/grabcut.cpp:void cv::grabCut( InputArray _img, InputOutputArray _mask, Rect rect,
modules/imgproc/src/convhull.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/convhull.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/convhull.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/convhull.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/convhull.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/convhull.cpp:            double dist = fabs(-dy0*dx + dx0*dy) * scale;
modules/imgproc/src/convhull.cpp:                double dist = fabs(-dy0*dx + dx0*dy) * scale;
modules/imgproc/src/phasecorr.cpp: *   * Redistributions of source code must retain the above copyright
modules/imgproc/src/phasecorr.cpp: *   * Redistributions in binary form must reproduce the above
modules/imgproc/src/phasecorr.cpp:    // perform window multiplication if available
modules/imgproc/src/phasecorr.cpp:    // get the phase shift with sub-pixel accuracy, 5x5 window seems about right here...
modules/imgproc/src/tables.cpp://  CvMat helper tables
modules/imgproc/src/tables.cpp:const float icv8x32fTab_cv[] =
modules/imgproc/src/tables.cpp:const float icv8x32fSqrTab[] =
modules/imgproc/src/pyramids.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/pyramids.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/pyramids.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/pyramids.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/pyramids.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/pyramids.cpp:    int tabL[CV_CN_MAX*(PD_SZ+2)], tabR[CV_CN_MAX*(PD_SZ+2)];
modules/imgproc/src/pyramids.cpp:    AutoBuffer<int> _tabM(dsize.width*cn);
modules/imgproc/src/pyramids.cpp:    int* tabM = _tabM;
modules/imgproc/src/pyramids.cpp:               std::abs(dsize.width*2 - ssize.width) <= 2 &&
modules/imgproc/src/pyramids.cpp:               std::abs(dsize.height*2 - ssize.height) <= 2 );
modules/imgproc/src/pyramids.cpp:            tabL[x*cn + k] = sx0 + k;
modules/imgproc/src/pyramids.cpp:            tabR[x*cn + k] = sx1 + k;
modules/imgproc/src/pyramids.cpp:        tabM[x] = (x/cn)*2*cn + x % cn;
modules/imgproc/src/pyramids.cpp:            const int* tab = tabL;
modules/imgproc/src/pyramids.cpp:                    row[x] = src[tab[x+cn*2]]*6 + (src[tab[x+cn]] + src[tab[x+cn*3]])*4 +
modules/imgproc/src/pyramids.cpp:                        src[tab[x]] + src[tab[x+cn*4]];
modules/imgproc/src/pyramids.cpp:                        int sx = tabM[x];
modules/imgproc/src/pyramids.cpp:                tab = tabR - x;
modules/imgproc/src/pyramids.cpp:    AutoBuffer<int> _dtab(ssize.width*cn);
modules/imgproc/src/pyramids.cpp:    int* dtab = _dtab;
modules/imgproc/src/pyramids.cpp:    CV_Assert( std::abs(dsize.width - ssize.width*2) == dsize.width % 2 &&
modules/imgproc/src/pyramids.cpp:               std::abs(dsize.height - ssize.height*2) == dsize.height % 2);
modules/imgproc/src/pyramids.cpp:        dtab[x] = (x/cn)*2*cn + x % cn;
modules/imgproc/src/pyramids.cpp:                int dx = dtab[x];
modules/imgproc/src/pyramids.cpp:                dx = dtab[ssize.width - cn + x];
modules/imgproc/src/pyramids.cpp:                int dx = dtab[x];
modules/imgproc/src/pyramids.cpp:            std::abs(dsize.width*2 - ssize.width) <= 2 &&
modules/imgproc/src/pyramids.cpp:            std::abs(dsize.height*2 - ssize.height) <= 2 );
modules/imgproc/src/emd.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/emd.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/emd.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/emd.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/emd.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/emd.cpp:static int icvFindBasicVariables( float **cost, char **is_x,
modules/imgproc/src/emd.cpp:static void icvAddBasicVariable( CvEMDState * state,
modules/imgproc/src/emd.cpp:            /* find basic variables */
modules/imgproc/src/emd.cpp:            result = icvFindBasicVariables( state.cost, state.is_x,
modules/imgproc/src/emd.cpp:    if( fabs( diff ) >= CV_EMD_EPS * s_sum )
modules/imgproc/src/emd.cpp:*                              icvFindBasicVariables                                   *
modules/imgproc/src/emd.cpp:static int icvFindBasicVariables( float **cost, char **is_x,
modules/imgproc/src/emd.cpp:    /* there are ssize+dsize variables but only ssize+dsize-1 independent equations,
modules/imgproc/src/emd.cpp:    /* loop until all variables are found */
modules/imgproc/src/emd.cpp:                /* find the variables in column j */
modules/imgproc/src/emd.cpp:                /* find the variables in rows i */
modules/imgproc/src/emd.cpp:    /* enter the new basic variable */
modules/imgproc/src/emd.cpp:    /* remove the leaving basic variable */
modules/imgproc/src/emd.cpp:    /* find the basic variables */
modules/imgproc/src/emd.cpp:        icvAddBasicVariable( state, min_i, min_j, prev_u_min_i, prev_v_min_j, &u_head );
modules/imgproc/src/emd.cpp:                    if( fabs( diff ) < eps )
modules/imgproc/src/emd.cpp:                    if( fabs( diff ) < eps )
modules/imgproc/src/emd.cpp:*                                   icvAddBasicVariable                                *
modules/imgproc/src/emd.cpp:icvAddBasicVariable( CvEMDState * state,
modules/imgproc/src/emd.cpp:    /* x(min_i,min_j) is a basic variable */
modules/imgproc/src/emd.cpp:        s += fabs( t );
modules/imgproc/src/emd.cpp:        double t = fabs( x[i] - y[i] );
modules/imgproc/src/segmentation.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/segmentation.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/segmentation.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/segmentation.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/segmentation.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/segmentation.cpp:// A node represents a pixel to label
modules/imgproc/src/segmentation.cpp:    // Labels for pixels
modules/imgproc/src/segmentation.cpp:    int subs_tab[513];
modules/imgproc/src/segmentation.cpp:    #define ws_max(a,b) ((b) + subs_tab[(a)-(b)+NQ])
modules/imgproc/src/segmentation.cpp:    #define ws_min(a,b) ((a) - subs_tab[(a)-(b)+NQ])
modules/imgproc/src/segmentation.cpp:    // Get highest absolute channel difference in diff
modules/imgproc/src/segmentation.cpp:        db = std::abs((ptr1)[0] - (ptr2)[0]);\
modules/imgproc/src/segmentation.cpp:        dg = std::abs((ptr1)[1] - (ptr2)[1]);\
modules/imgproc/src/segmentation.cpp:        dr = std::abs((ptr1)[2] - (ptr2)[2]);\
modules/imgproc/src/segmentation.cpp:        subs_tab[i] = 0;
modules/imgproc/src/segmentation.cpp:        subs_tab[i] = i - 256;
modules/imgproc/src/segmentation.cpp:        int lab = 0, t;
modules/imgproc/src/segmentation.cpp:        // Check surrounding pixels for labels
modules/imgproc/src/segmentation.cpp:        // to determine label for current pixel
modules/imgproc/src/segmentation.cpp:        if( t > 0 ) lab = t;
modules/imgproc/src/segmentation.cpp:            if( lab == 0 ) lab = t;
modules/imgproc/src/segmentation.cpp:            else if( t != lab ) lab = WSHED;
modules/imgproc/src/segmentation.cpp:            if( lab == 0 ) lab = t;
modules/imgproc/src/segmentation.cpp:            else if( t != lab ) lab = WSHED;
modules/imgproc/src/segmentation.cpp:            if( lab == 0 ) lab = t;
modules/imgproc/src/segmentation.cpp:            else if( t != lab ) lab = WSHED;
modules/imgproc/src/segmentation.cpp:        // Set label to current pixel in marker image
modules/imgproc/src/segmentation.cpp:        assert( lab != 0 );
modules/imgproc/src/segmentation.cpp:        m[0] = lab;
modules/imgproc/src/segmentation.cpp:        if( lab == WSHED )
modules/imgproc/src/segmentation.cpp:        // Add adjacent, unlabeled pixels to corresponding queue
modules/imgproc/src/segmentation.cpp:    #define cdiff(ofs0) (tab[c0-dptr[ofs0]+255] + \
modules/imgproc/src/segmentation.cpp:        tab[c1-dptr[(ofs0)+1]+255] + tab[c2-dptr[(ofs0)+2]+255] >= isr22)
modules/imgproc/src/segmentation.cpp:    int tab[768];
modules/imgproc/src/segmentation.cpp:        tab[i] = (i - 255)*(i - 255);
modules/imgproc/src/segmentation.cpp:                            if( tab[t0-c0+255] + tab[t1-c1+255] + tab[t2-c2+255] <= isr2 )
modules/imgproc/src/segmentation.cpp:                            if( tab[t0-c0+255] + tab[t1-c1+255] + tab[t2-c2+255] <= isr2 )
modules/imgproc/src/segmentation.cpp:                            if( tab[t0-c0+255] + tab[t1-c1+255] + tab[t2-c2+255] <= isr2 )
modules/imgproc/src/segmentation.cpp:                            if( tab[t0-c0+255] + tab[t1-c1+255] + tab[t2-c2+255] <= isr2 )
modules/imgproc/src/segmentation.cpp:                            if( tab[t0-c0+255] + tab[t1-c1+255] + tab[t2-c2+255] <= isr2 )
modules/imgproc/src/segmentation.cpp:                    stop_flag = (x0 == x1 && y0 == y1) || std::abs(x1-x0) + std::abs(y1-y0) +
modules/imgproc/src/segmentation.cpp:                        tab[s0 - c0 + 255] + tab[s1 - c1 + 255] +
modules/imgproc/src/segmentation.cpp:                        tab[s2 - c2 + 255] <= termcrit.epsilon;
modules/imgproc/src/canny.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/canny.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/canny.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/canny.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/canny.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/canny.cpp:                    vst1q_s32(_norm + j, vaddq_s32(vabsq_s32(vmovl_s16(vget_low_s16(v_dx))),
modules/imgproc/src/canny.cpp:                                                   vabsq_s32(vmovl_s16(vget_low_s16(v_dy)))));
modules/imgproc/src/canny.cpp:                    vst1q_s32(_norm + j + 4, vaddq_s32(vabsq_s32(vmovl_s16(vget_high_s16(v_dx))),
modules/imgproc/src/canny.cpp:                                                       vabsq_s32(vmovl_s16(vget_high_s16(v_dy)))));
modules/imgproc/src/canny.cpp:                    _norm[j] = std::abs(int(_dx[j])) + std::abs(int(_dy[j]));
modules/imgproc/src/canny.cpp:                    int x = std::abs(xs);
modules/imgproc/src/canny.cpp:                    int y = std::abs(ys) << CANNY_SHIFT;
modules/imgproc/src/canny.cpp:                    vst1q_s32(_norm + j, vaddq_s32(vabsq_s32(vmovl_s16(vget_low_s16(v_dx))),
modules/imgproc/src/canny.cpp:                                                   vabsq_s32(vmovl_s16(vget_low_s16(v_dy)))));
modules/imgproc/src/canny.cpp:                    vst1q_s32(_norm + j + 4, vaddq_s32(vabsq_s32(vmovl_s16(vget_high_s16(v_dx))),
modules/imgproc/src/canny.cpp:                                                       vabsq_s32(vmovl_s16(vget_high_s16(v_dy)))));
modules/imgproc/src/canny.cpp:                    _norm[j] = std::abs(int(_dx[j])) + std::abs(int(_dy[j]));
modules/imgproc/src/canny.cpp:                int x = std::abs(xs);
modules/imgproc/src/canny.cpp:                int y = std::abs(ys) << CANNY_SHIFT;
modules/imgproc/src/undistort.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/undistort.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/undistort.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/undistort.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/undistort.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/undistort.cpp:    float scale = (float)std::min(dcenter.x/fabs(xmax), dcenter.x/fabs(xmin));
modules/imgproc/src/undistort.cpp:    Size dsize(destImageWidth, cvCeil(std::max(scale*fabs(ymin)*2, scale*fabs(ymax)*2)));
modules/imgproc/src/deriv.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/deriv.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/deriv.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/deriv.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/deriv.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/deriv.cpp:    return createSeparableLinearFilter(srcType, dstType,
modules/imgproc/src/deriv.cpp:    if (fabs(delta) > FLT_EPSILON)
modules/imgproc/src/deriv.cpp:        if (FLT_EPSILON < fabs(scale - 1.0))
modules/imgproc/src/deriv.cpp:    if (fabs(delta) > FLT_EPSILON)
modules/imgproc/src/deriv.cpp:    bool floatCoeff = std::fabs(delta - idelta) > DBL_EPSILON || std::fabs(scale - iscale) > DBL_EPSILON;
modules/imgproc/src/deriv.cpp:    bool floatScale = std::fabs(scale - iscale) > DBL_EPSILON, needScale = iscale != 1;
modules/imgproc/src/deriv.cpp:    bool floatDelta = std::fabs(delta - idelta) > DBL_EPSILON, needDelta = delta != 0;
modules/imgproc/src/deriv.cpp:        Ptr<FilterEngine> fx = createSeparableLinearFilter(stype,
modules/imgproc/src/deriv.cpp:        Ptr<FilterEngine> fy = createSeparableLinearFilter(stype,
modules/imgproc/src/filterengine.hpp:  * Redistributions of source code must retain the above copyright notice,
modules/imgproc/src/filterengine.hpp:  * Redistributions in binary form must reproduce the above copyright notice,
modules/imgproc/src/filterengine.hpp:warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/filterengine.hpp:In no event shall copyright holders or contributors be liable for any direct,
modules/imgproc/src/filterengine.hpp:and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/filterengine.hpp: In particular, such filters are used for the "horizontal" filtering parts in separable filters.
modules/imgproc/src/filterengine.hpp: Such filters are used for the "vertical" filtering parts in separable filters.
modules/imgproc/src/filterengine.hpp: The Base Class for Non-Separable 2D Filters.
modules/imgproc/src/filterengine.hpp: are returned by various OpenCV functions, such as cv::createSeparableLinearFilter(),
modules/imgproc/src/filterengine.hpp:     Ptr<FilterEngine> Fxx = createSeparableLinearFilter(src.type(),
modules/imgproc/src/filterengine.hpp:     Ptr<FilterEngine> Fyy = createSeparableLinearFilter(src.type(),
modules/imgproc/src/filterengine.hpp:     // this variable number of output rows is dy.
modules/imgproc/src/filterengine.hpp:    //! returns true if the filter is separable
modules/imgproc/src/filterengine.hpp:    bool isSeparable() const { return !filter2D; }
modules/imgproc/src/filterengine.hpp:    std::vector<int> borderTab;
modules/imgproc/src/filterengine.hpp://! returns the separable linear filter engine
modules/imgproc/src/filterengine.hpp:Ptr<FilterEngine> createSeparableLinearFilter(int srcType, int dstType,
modules/imgproc/src/filterengine.hpp://! returns the non-separable linear filter engine
modules/imgproc/src/floodfill.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/floodfill.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/floodfill.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/floodfill.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/floodfill.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/floodfill.cpp:    int label;
modules/imgproc/src/floodfill.cpp:    label = -1;
modules/imgproc/src/floodfill.cpp:        region->label = saturate_cast<int>(newMaskVal);
modules/imgproc/src/floodfill.cpp:        is_simple = is_simple && fabs(loDiff[i]) < DBL_EPSILON && fabs(upDiff[i]) < DBL_EPSILON;
modules/imgproc/src/color.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/color.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/color.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/color.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/color.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/color.cpp:  The function for RGB to Lab conversion is based on the MATLAB script
modules/imgproc/src/color.cpp:  RGB2Lab.m translated by Mark Ruzon from C code by Yossi Rubner, 23 September 1997.
modules/imgproc/src/color.cpp:  See the page [http://vision.stanford.edu/~ruzon/software/rgblab.html]
modules/imgproc/src/color.cpp:    the above copyright notice, this list of conditions and the following disclaimer.
modules/imgproc/src/color.cpp:    Redistributions in binary form must reproduce the above copyright notice,
modules/imgproc/src/color.cpp:template<typename _Tp> static void splineBuild(const _Tp* f, int n, _Tp* tab)
modules/imgproc/src/color.cpp:    tab[0] = tab[1] = (_Tp)0;
modules/imgproc/src/color.cpp:        _Tp l = 1/(4 - tab[(i-1)*4]);
modules/imgproc/src/color.cpp:        tab[i*4] = l; tab[i*4+1] = (t - tab[(i-1)*4+1])*l;
modules/imgproc/src/color.cpp:        _Tp c = tab[i*4+1] - tab[i*4]*cn;
modules/imgproc/src/color.cpp:        tab[i*4] = f[i]; tab[i*4+1] = b;
modules/imgproc/src/color.cpp:        tab[i*4+2] = c; tab[i*4+3] = d;
modules/imgproc/src/color.cpp:template<typename _Tp> static inline _Tp splineInterpolate(_Tp x, const _Tp* tab, int n)
modules/imgproc/src/color.cpp:    tab += ix*4;
modules/imgproc/src/color.cpp:    return ((tab[3]*x + tab[2])*x + tab[1])*x + tab[0];
modules/imgproc/src/color.cpp:static ippiReorderFunc ippiSwapChannelsC3C4RTab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiCopyAC4C3RTab[] =
modules/imgproc/src/color.cpp:static ippiReorderFunc ippiSwapChannelsC4C3RTab[] =
modules/imgproc/src/color.cpp:static ippiReorderFunc ippiSwapChannelsC3RTab[] =
modules/imgproc/src/color.cpp:static ippiReorderFunc ippiSwapChannelsC4RTab[] =
modules/imgproc/src/color.cpp:static ippiColor2GrayFunc ippiColor2GrayC3Tab[] =
modules/imgproc/src/color.cpp:static ippiColor2GrayFunc ippiColor2GrayC4Tab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiRGB2GrayC3Tab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiRGB2GrayC4Tab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiCopyP3C3RTab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiRGB2XYZTab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiXYZ2RGBTab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiRGB2HSVTab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiHSV2RGBTab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiRGB2HLSTab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiHLS2RGBTab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiRGBToLUVTab[] =
modules/imgproc/src/color.cpp:static ippiGeneralFunc ippiLUVToRGBTab[] =
modules/imgproc/src/color.cpp:            tab[i] = b;
modules/imgproc/src/color.cpp:            tab[i+256] = g;
modules/imgproc/src/color.cpp:            tab[i+512] = r;
modules/imgproc/src/color.cpp:        const int* _tab = tab;
modules/imgproc/src/color.cpp:            dst[i] = (uchar)((_tab[src[0]] + _tab[src[1]+256] + _tab[src[2]+512]) >> yuv_shift);
modules/imgproc/src/color.cpp:    int tab[256*3];
modules/imgproc/src/color.cpp:        static int sdiv_table[256];
modules/imgproc/src/color.cpp:        static int hdiv_table180[256];
modules/imgproc/src/color.cpp:        static int hdiv_table256[256];
modules/imgproc/src/color.cpp:        const int* hdiv_table = hr == 180 ? hdiv_table180 : hdiv_table256;
modules/imgproc/src/color.cpp:            sdiv_table[0] = hdiv_table180[0] = hdiv_table256[0] = 0;
modules/imgproc/src/color.cpp:                sdiv_table[i] = saturate_cast<int>((255 << hsv_shift)/(1.*i));
modules/imgproc/src/color.cpp:                hdiv_table180[i] = saturate_cast<int>((180 << hsv_shift)/(6.*i));
modules/imgproc/src/color.cpp:                hdiv_table256[i] = saturate_cast<int>((256 << hsv_shift)/(6.*i));
modules/imgproc/src/color.cpp:            s = (diff * sdiv_table[v] + (1 << (hsv_shift-1))) >> hsv_shift;
modules/imgproc/src/color.cpp:            h = (h * hdiv_table[diff] + (1 << (hsv_shift-1))) >> hsv_shift;
modules/imgproc/src/color.cpp:            s = diff/(float)(fabs(v) + FLT_EPSILON);
modules/imgproc/src/color.cpp:                float tab[4];
modules/imgproc/src/color.cpp:                tab[0] = v;
modules/imgproc/src/color.cpp:                tab[1] = v*(1.f - s);
modules/imgproc/src/color.cpp:                tab[2] = v*(1.f - s*h);
modules/imgproc/src/color.cpp:                tab[3] = v*(1.f - s*(1.f - h));
modules/imgproc/src/color.cpp:                b = tab[sector_data[sector][0]];
modules/imgproc/src/color.cpp:                g = tab[sector_data[sector][1]];
modules/imgproc/src/color.cpp:                r = tab[sector_data[sector][2]];
modules/imgproc/src/color.cpp:                float tab[4];
modules/imgproc/src/color.cpp:                tab[0] = p2;
modules/imgproc/src/color.cpp:                tab[1] = p1;
modules/imgproc/src/color.cpp:                tab[2] = p1 + (p2 - p1)*(1-h);
modules/imgproc/src/color.cpp:                tab[3] = p1 + (p2 - p1)*h;
modules/imgproc/src/color.cpp:                b = tab[sector_data[sector][0]];
modules/imgproc/src/color.cpp:                g = tab[sector_data[sector][1]];
modules/imgproc/src/color.cpp:                r = tab[sector_data[sector][2]];
modules/imgproc/src/color.cpp:static float LabCbrtTab[LAB_CBRT_TAB_SIZE*4];
modules/imgproc/src/color.cpp:static const float LabCbrtTabScale = LAB_CBRT_TAB_SIZE/1.5f;
modules/imgproc/src/color.cpp:static float sRGBGammaTab[GAMMA_TAB_SIZE*4], sRGBInvGammaTab[GAMMA_TAB_SIZE*4];
modules/imgproc/src/color.cpp:static const float GammaTabScale = (float)GAMMA_TAB_SIZE;
modules/imgproc/src/color.cpp:static ushort sRGBGammaTab_b[256], linearGammaTab_b[256];
modules/imgproc/src/color.cpp:#undef lab_shift
modules/imgproc/src/color.cpp:#define lab_shift xyz_shift
modules/imgproc/src/color.cpp:#define lab_shift2 (lab_shift + gamma_shift)
modules/imgproc/src/color.cpp:static ushort LabCbrtTab_b[LAB_CBRT_TAB_SIZE_B];
modules/imgproc/src/color.cpp:static void initLabTabs()
modules/imgproc/src/color.cpp:        float f[LAB_CBRT_TAB_SIZE+1], g[GAMMA_TAB_SIZE+1], ig[GAMMA_TAB_SIZE+1], scale = 1.f/LabCbrtTabScale;
modules/imgproc/src/color.cpp:        splineBuild(f, LAB_CBRT_TAB_SIZE, LabCbrtTab);
modules/imgproc/src/color.cpp:        scale = 1.f/GammaTabScale;
modules/imgproc/src/color.cpp:        splineBuild(g, GAMMA_TAB_SIZE, sRGBGammaTab);
modules/imgproc/src/color.cpp:        splineBuild(ig, GAMMA_TAB_SIZE, sRGBInvGammaTab);
modules/imgproc/src/color.cpp:            sRGBGammaTab_b[i] = saturate_cast<ushort>(255.f*(1 << gamma_shift)*(x <= 0.04045f ? x*(1.f/12.92f) : (float)std::pow((double)(x + 0.055)*(1./1.055), 2.4)));
modules/imgproc/src/color.cpp:            linearGammaTab_b[i] = (ushort)(i*(1 << gamma_shift));
modules/imgproc/src/color.cpp:            LabCbrtTab_b[i] = saturate_cast<ushort>((1 << lab_shift2)*(x < 0.008856f ? x*7.787f + 0.13793103448275862f : cvCbrt(x)));
modules/imgproc/src/color.cpp:struct RGB2Lab_b
modules/imgproc/src/color.cpp:    RGB2Lab_b(int _srccn, int blueIdx, const float* _coeffs,
modules/imgproc/src/color.cpp:        initLabTabs();
modules/imgproc/src/color.cpp:            (1 << lab_shift)/_whitept[0],
modules/imgproc/src/color.cpp:            (float)(1 << lab_shift),
modules/imgproc/src/color.cpp:            (1 << lab_shift)/_whitept[2]
modules/imgproc/src/color.cpp:                      coeffs[i*3] + coeffs[i*3+1] + coeffs[i*3+2] < 2*(1 << lab_shift) );
modules/imgproc/src/color.cpp:        const int Lshift = -((16*255*(1 << lab_shift2) + 50)/100);
modules/imgproc/src/color.cpp:        const ushort* tab = srgb ? sRGBGammaTab_b : linearGammaTab_b;
modules/imgproc/src/color.cpp:            int R = tab[src[0]], G = tab[src[1]], B = tab[src[2]];
modules/imgproc/src/color.cpp:            int fX = LabCbrtTab_b[CV_DESCALE(R*C0 + G*C1 + B*C2, lab_shift)];
modules/imgproc/src/color.cpp:            int fY = LabCbrtTab_b[CV_DESCALE(R*C3 + G*C4 + B*C5, lab_shift)];
modules/imgproc/src/color.cpp:            int fZ = LabCbrtTab_b[CV_DESCALE(R*C6 + G*C7 + B*C8, lab_shift)];
modules/imgproc/src/color.cpp:            int L = CV_DESCALE( Lscale*fY + Lshift, lab_shift2 );
modules/imgproc/src/color.cpp:            int a = CV_DESCALE( 500*(fX - fY) + 128*(1 << lab_shift2), lab_shift2 );
modules/imgproc/src/color.cpp:            int b = CV_DESCALE( 200*(fY - fZ) + 128*(1 << lab_shift2), lab_shift2 );
modules/imgproc/src/color.cpp:struct RGB2Lab_f
modules/imgproc/src/color.cpp:    RGB2Lab_f(int _srccn, int blueIdx, const float* _coeffs,
modules/imgproc/src/color.cpp:        initLabTabs();
modules/imgproc/src/color.cpp:                       coeffs[j] + coeffs[j + 1] + coeffs[j + 2] < 1.5f*LabCbrtTabScale );
modules/imgproc/src/color.cpp:        float gscale = GammaTabScale;
modules/imgproc/src/color.cpp:        const float* gammaTab = srgb ? sRGBGammaTab : 0;
modules/imgproc/src/color.cpp:            if (gammaTab)
modules/imgproc/src/color.cpp:                R = splineInterpolate(R * gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:                G = splineInterpolate(G * gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:                B = splineInterpolate(B * gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:struct Lab2RGB_f
modules/imgproc/src/color.cpp:    Lab2RGB_f( int _dstcn, int blueIdx, const float* _coeffs,
modules/imgproc/src/color.cpp:        initLabTabs();
modules/imgproc/src/color.cpp:        const float* gammaTab = srgb ? sRGBInvGammaTab : 0;
modules/imgproc/src/color.cpp:        float gscale = GammaTabScale;
modules/imgproc/src/color.cpp:            if (gammaTab)
modules/imgproc/src/color.cpp:                ro = splineInterpolate(ro * gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:                go = splineInterpolate(go * gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:                bo = splineInterpolate(bo * gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:struct Lab2RGB_b
modules/imgproc/src/color.cpp:    Lab2RGB_b( int _dstcn, int blueIdx, const float* _coeffs,
modules/imgproc/src/color.cpp:    Lab2RGB_f cvt;
modules/imgproc/src/color.cpp:        initLabTabs();
modules/imgproc/src/color.cpp:        float gscale = GammaTabScale;
modules/imgproc/src/color.cpp:        const float* gammaTab = srgb ? sRGBGammaTab : 0;
modules/imgproc/src/color.cpp:            if( gammaTab )
modules/imgproc/src/color.cpp:                R = splineInterpolate(R*gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:                G = splineInterpolate(G*gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:                B = splineInterpolate(B*gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:            float L = splineInterpolate(Y*LabCbrtTabScale, LabCbrtTab, LAB_CBRT_TAB_SIZE);
modules/imgproc/src/color.cpp:        initLabTabs();
modules/imgproc/src/color.cpp:        const float* gammaTab = srgb ? sRGBInvGammaTab : 0;
modules/imgproc/src/color.cpp:        float gscale = GammaTabScale;
modules/imgproc/src/color.cpp:            if( gammaTab )
modules/imgproc/src/color.cpp:                R = splineInterpolate(R*gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:                G = splineInterpolate(G*gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:                B = splineInterpolate(B*gscale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/color.cpp:            static int sdiv_table[256];
modules/imgproc/src/color.cpp:            static int hdiv_table180[256];
modules/imgproc/src/color.cpp:            static int hdiv_table256[256];
modules/imgproc/src/color.cpp:                int * const hdiv_table = hrange == 180 ? hdiv_table180 : hdiv_table256, hsv_shift = 12;
modules/imgproc/src/color.cpp:                sdiv_table[0] = hdiv_table180[0] = hdiv_table256[0] = 0;
modules/imgproc/src/color.cpp:                        sdiv_table[i] = saturate_cast<int>(v/(1.*i));
modules/imgproc/src/color.cpp:                    Mat(1, 256, CV_32SC1, sdiv_table).copyTo(sdiv_data);
modules/imgproc/src/color.cpp:                    hdiv_table[i] = saturate_cast<int>(v/(6.*i));
modules/imgproc/src/color.cpp:                Mat(1, 256, CV_32SC1, hdiv_table).copyTo(hdiv_data);
modules/imgproc/src/color.cpp:    case CV_BGR2Lab: case CV_RGB2Lab: case CV_LBGR2Lab: case CV_LRGB2Lab:
modules/imgproc/src/color.cpp:        bidx = code == CV_BGR2Lab || code == CV_LBGR2Lab || code == CV_BGR2Luv || code == CV_LBGR2Luv ? 0 : 2;
modules/imgproc/src/color.cpp:        bool srgb = code == CV_BGR2Lab || code == CV_RGB2Lab || code == CV_RGB2Luv || code == CV_BGR2Luv;
modules/imgproc/src/color.cpp:        bool lab = code == CV_BGR2Lab || code == CV_RGB2Lab || code == CV_LBGR2Lab || code == CV_LRGB2Lab;
modules/imgproc/src/color.cpp:        k.create(format("BGR2%s", lab ? "Lab" : "Luv").c_str(),
modules/imgproc/src/color.cpp:        initLabTabs();
modules/imgproc/src/color.cpp:        if (depth == CV_8U && lab)
modules/imgproc/src/color.cpp:            static UMat usRGBGammaTab, ulinearGammaTab, uLabCbrtTab, ucoeffs;
modules/imgproc/src/color.cpp:            if (srgb && usRGBGammaTab.empty())
modules/imgproc/src/color.cpp:                Mat(1, 256, CV_16UC1, sRGBGammaTab_b).copyTo(usRGBGammaTab);
modules/imgproc/src/color.cpp:            else if (ulinearGammaTab.empty())
modules/imgproc/src/color.cpp:                Mat(1, 256, CV_16UC1, linearGammaTab_b).copyTo(ulinearGammaTab);
modules/imgproc/src/color.cpp:            if (uLabCbrtTab.empty())
modules/imgproc/src/color.cpp:                Mat(1, LAB_CBRT_TAB_SIZE_B, CV_16UC1, LabCbrtTab_b).copyTo(uLabCbrtTab);
modules/imgproc/src/color.cpp:                    (1 << lab_shift)/_whitept[0],
modules/imgproc/src/color.cpp:                    (float)(1 << lab_shift),
modules/imgproc/src/color.cpp:                    (1 << lab_shift)/_whitept[2]
modules/imgproc/src/color.cpp:                              coeffs[i*3] + coeffs[i*3+1] + coeffs[i*3+2] < 2*(1 << lab_shift) );
modules/imgproc/src/color.cpp:            const int Lshift = -((16*255*(1 << lab_shift2) + 50)/100);
modules/imgproc/src/color.cpp:                   ocl::KernelArg::PtrReadOnly(srgb ? usRGBGammaTab : ulinearGammaTab),
modules/imgproc/src/color.cpp:                   ocl::KernelArg::PtrReadOnly(uLabCbrtTab), ocl::KernelArg::PtrReadOnly(ucoeffs),
modules/imgproc/src/color.cpp:            static UMat usRGBGammaTab, ucoeffs, uLabCbrtTab;
modules/imgproc/src/color.cpp:            if (srgb && usRGBGammaTab.empty())
modules/imgproc/src/color.cpp:                Mat(1, GAMMA_TAB_SIZE * 4, CV_32FC1, sRGBGammaTab).copyTo(usRGBGammaTab);
modules/imgproc/src/color.cpp:            if (!lab && uLabCbrtTab.empty())
modules/imgproc/src/color.cpp:                Mat(1, LAB_CBRT_TAB_SIZE * 4, CV_32FC1, LabCbrtTab).copyTo(uLabCbrtTab);
modules/imgproc/src/color.cpp:                    coeffs[j + (bidx ^ 2)] = _coeffs[j] * (lab ? scale[i] : 1);
modules/imgproc/src/color.cpp:                    coeffs[j + 1] = _coeffs[j + 1] * (lab ? scale[i] : 1);
modules/imgproc/src/color.cpp:                    coeffs[j + bidx] = _coeffs[j + 2] * (lab ? scale[i] : 1);
modules/imgproc/src/color.cpp:                               coeffs[j] + coeffs[j + 1] + coeffs[j + 2] < 1.5f*(lab ? LabCbrtTabScale : 1) );
modules/imgproc/src/color.cpp:            if (lab)
modules/imgproc/src/color.cpp:                    k.args(srcarg, dstarg, ocl::KernelArg::PtrReadOnly(usRGBGammaTab),
modules/imgproc/src/color.cpp:                ocl::KernelArg LabCbrtTabarg = ocl::KernelArg::PtrReadOnly(uLabCbrtTab);
modules/imgproc/src/color.cpp:                    k.args(srcarg, dstarg, ocl::KernelArg::PtrReadOnly(usRGBGammaTab),
modules/imgproc/src/color.cpp:                           LabCbrtTabarg, ucoeffsarg, un, vn);
modules/imgproc/src/color.cpp:                    k.args(srcarg, dstarg, LabCbrtTabarg, ucoeffsarg, un, vn);
modules/imgproc/src/color.cpp:    case CV_Lab2BGR: case CV_Lab2RGB: case CV_Lab2LBGR: case CV_Lab2LRGB:
modules/imgproc/src/color.cpp:        bidx = code == CV_Lab2BGR || code == CV_Lab2LBGR || code == CV_Luv2BGR || code == CV_Luv2LBGR ? 0 : 2;
modules/imgproc/src/color.cpp:        bool srgb = code == CV_Lab2BGR || code == CV_Lab2RGB || code == CV_Luv2BGR || code == CV_Luv2RGB;
modules/imgproc/src/color.cpp:        bool lab = code == CV_Lab2BGR || code == CV_Lab2RGB || code == CV_Lab2LBGR || code == CV_Lab2LRGB;
modules/imgproc/src/color.cpp:        k.create(format("%s2BGR", lab ? "Lab" : "Luv").c_str(),
modules/imgproc/src/color.cpp:        initLabTabs();
modules/imgproc/src/color.cpp:        static UMat ucoeffs, usRGBInvGammaTab;
modules/imgproc/src/color.cpp:        if (srgb && usRGBInvGammaTab.empty())
modules/imgproc/src/color.cpp:            Mat(1, GAMMA_TAB_SIZE*4, CV_32FC1, sRGBInvGammaTab).copyTo(usRGBInvGammaTab);
modules/imgproc/src/color.cpp:                coeffs[i+(bidx^2)*3] = _coeffs[i] * (lab ? _whitept[i] : 1);
modules/imgproc/src/color.cpp:                coeffs[i+3] = _coeffs[i+3] * (lab ? _whitept[i] : 1);
modules/imgproc/src/color.cpp:                coeffs[i+bidx*3] = _coeffs[i+6] * (lab ? _whitept[i] : 1);
modules/imgproc/src/color.cpp:        if (lab)
modules/imgproc/src/color.cpp:                k.args(srcarg, dstarg, ocl::KernelArg::PtrReadOnly(usRGBInvGammaTab),
modules/imgproc/src/color.cpp:                k.args(srcarg, dstarg, ocl::KernelArg::PtrReadOnly(usRGBInvGammaTab),
modules/imgproc/src/color.cpp:                if ( CvtColorIPPLoop(src, dst, IPPReorderFunctor(ippiSwapChannelsC3C4RTab[depth], 0, 1, 2)) )
modules/imgproc/src/color.cpp:                if ( CvtColorIPPLoop(src, dst, IPPGeneralFunctor(ippiCopyAC4C3RTab[depth])) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPReorderFunctor(ippiSwapChannelsC3C4RTab[depth], 2, 1, 0)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPReorderFunctor(ippiSwapChannelsC4C3RTab[depth], 2, 1, 0)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoopCopy(src, dst, IPPReorderFunctor(ippiSwapChannelsC3RTab[depth], 2, 1, 0)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoopCopy(src, dst, IPPReorderFunctor(ippiSwapChannelsC4RTab[depth], 2, 1, 0)) )
modules/imgproc/src/color.cpp:                                        IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth],
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoopCopy(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC3RTab[depth],
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoopCopy(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth],
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3RTab[depth], 2, 1, 0, depth)))
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3C4RTab[depth], 0, 1, 2, depth)))
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3C4RTab[depth], 2, 1, 0, depth)))
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPColor2GrayFunctor(ippiColor2GrayC3Tab[depth])) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralFunctor(ippiRGB2GrayC3Tab[depth])) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPColor2GrayFunctor(ippiColor2GrayC4Tab[depth])) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralFunctor(ippiRGB2GrayC4Tab[depth])) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGray2BGRFunctor(ippiCopyP3C3RTab[depth])) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGray2BGRAFunctor(ippiCopyP3C3RTab[depth], ippiSwapChannelsC3C4RTab[depth], depth)) )
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC3RTab[depth],
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth],
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth],
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3RTab[depth], 2, 1, 0, depth)))
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3C4RTab[depth], 0, 1, 2, depth)))
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3C4RTab[depth], 2, 1, 0, depth)))
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoopCopy(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC3RTab[depth], ippiRGB2XYZTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth], ippiRGB2XYZTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoopCopy(src, dst, IPPGeneralFunctor(ippiRGB2XYZTab[depth])) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth], ippiRGB2XYZTab[depth], 0, 1, 2, depth)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoopCopy(src, dst, IPPGeneralReorderFunctor(ippiXYZ2RGBTab[depth], ippiSwapChannelsC3RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor(ippiXYZ2RGBTab[depth], ippiSwapChannelsC3C4RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoopCopy(src, dst, IPPGeneralFunctor(ippiXYZ2RGBTab[depth])) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor(ippiXYZ2RGBTab[depth], ippiSwapChannelsC3C4RTab[depth], 0, 1, 2, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoopCopy(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC3RTab[depth], ippiRGB2HSVTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth], ippiRGB2HSVTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth], ippiRGB2HSVTab[depth], 0, 1, 2, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoopCopy(src, dst, IPPGeneralFunctor(ippiRGB2HSVTab[depth])) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoopCopy(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC3RTab[depth], ippiRGB2HLSTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth], ippiRGB2HLSTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoopCopy(src, dst, IPPGeneralFunctor(ippiRGB2HLSTab[depth])) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth], ippiRGB2HLSTab[depth], 0, 1, 2, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoopCopy(src, dst, IPPGeneralReorderFunctor(ippiHSV2RGBTab[depth], ippiSwapChannelsC3RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor(ippiHSV2RGBTab[depth], ippiSwapChannelsC3C4RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoopCopy(src, dst, IPPGeneralFunctor(ippiHSV2RGBTab[depth])) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor(ippiHSV2RGBTab[depth], ippiSwapChannelsC3C4RTab[depth], 0, 1, 2, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoopCopy(src, dst, IPPGeneralReorderFunctor(ippiHLS2RGBTab[depth], ippiSwapChannelsC3RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor(ippiHLS2RGBTab[depth], ippiSwapChannelsC3C4RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoopCopy(src, dst, IPPGeneralFunctor(ippiHLS2RGBTab[depth])) )
modules/imgproc/src/color.cpp:                    if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor(ippiHLS2RGBTab[depth], ippiSwapChannelsC3C4RTab[depth], 0, 1, 2, depth)) )
modules/imgproc/src/color.cpp:        case CV_BGR2Lab: case CV_RGB2Lab: case CV_LBGR2Lab: case CV_LRGB2Lab:
modules/imgproc/src/color.cpp:            bool srgb = code == CV_BGR2Lab || code == CV_RGB2Lab ||
modules/imgproc/src/color.cpp:            if (code == CV_LBGR2Lab && scn == 3 && depth == CV_8U)
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPGeneralFunctor((ippiGeneralFunc)ippiBGRToLab_8u_C3R)))
modules/imgproc/src/color.cpp:            else if (code == CV_LBGR2Lab && scn == 4 && depth == CV_8U)
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth],
modules/imgproc/src/color.cpp:                                                                        (ippiGeneralFunc)ippiBGRToLab_8u_C3R, 0, 1, 2, depth)))
modules/imgproc/src/color.cpp:            if (code == CV_LRGB2Lab && scn == 3 && depth == CV_8U) // slower than OpenCV
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC3RTab[depth],
modules/imgproc/src/color.cpp:                                                                        (ippiGeneralFunc)ippiBGRToLab_8u_C3R, 2, 1, 0, depth)))
modules/imgproc/src/color.cpp:            else if (code == CV_LRGB2Lab && scn == 4 && depth == CV_8U) // slower than OpenCV
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth],
modules/imgproc/src/color.cpp:                                                                        (ippiGeneralFunc)ippiBGRToLab_8u_C3R, 2, 1, 0, depth)))
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPGeneralFunctor(ippiRGBToLUVTab[depth])))
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth],
modules/imgproc/src/color.cpp:                                                                        ippiRGBToLUVTab[depth], 0, 1, 2, depth)))
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC3RTab[depth],
modules/imgproc/src/color.cpp:                                                                        ippiRGBToLUVTab[depth], 2, 1, 0, depth)))
modules/imgproc/src/color.cpp:                if (CvtColorIPPLoop(src, dst, IPPReorderGeneralFunctor(ippiSwapChannelsC4C3RTab[depth],
modules/imgproc/src/color.cpp:                                                                        ippiRGBToLUVTab[depth], 2, 1, 0, depth)))
modules/imgproc/src/color.cpp:        case CV_Lab2BGR: case CV_Lab2RGB: case CV_Lab2LBGR: case CV_Lab2LRGB:
modules/imgproc/src/color.cpp:            bool srgb = code == CV_Lab2BGR || code == CV_Lab2RGB ||
modules/imgproc/src/color.cpp:            if( code == CV_Lab2LBGR && dcn == 3 && depth == CV_8U)
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralFunctor((ippiGeneralFunc)ippiLabToBGR_8u_C3R)) )
modules/imgproc/src/color.cpp:            else if( code == CV_Lab2LBGR && dcn == 4 && depth == CV_8U )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor((ippiGeneralFunc)ippiLabToBGR_8u_C3R,
modules/imgproc/src/color.cpp:                                    ippiSwapChannelsC3C4RTab[depth], 0, 1, 2, depth)) )
modules/imgproc/src/color.cpp:            if( code == CV_Lab2LRGB && dcn == 3 && depth == CV_8U )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor((ippiGeneralFunc)ippiLabToBGR_8u_C3R,
modules/imgproc/src/color.cpp:                                                                            ippiSwapChannelsC3RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:            else if( code == CV_Lab2LRGB && dcn == 4 && depth == CV_8U )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor((ippiGeneralFunc)ippiLabToBGR_8u_C3R,
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3C4RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralFunctor(ippiLUVToRGBTab[depth])) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor(ippiLUVToRGBTab[depth],
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3C4RTab[depth], 0, 1, 2, depth)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor(ippiLUVToRGBTab[depth],
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:                if( CvtColorIPPLoop(src, dst, IPPGeneralReorderFunctor(ippiLUVToRGBTab[depth],
modules/imgproc/src/color.cpp:                                                                        ippiSwapChannelsC3C4RTab[depth], 2, 1, 0, depth)) )
modules/imgproc/src/color.cpp:        case CV_BGR2Lab: case CV_RGB2Lab: case CV_LBGR2Lab: case CV_LRGB2Lab:
modules/imgproc/src/color.cpp:            bidx = code == CV_BGR2Lab || code == CV_BGR2Luv ||
modules/imgproc/src/color.cpp:                   code == CV_LBGR2Lab || code == CV_LBGR2Luv ? 0 : 2;
modules/imgproc/src/color.cpp:            bool srgb = code == CV_BGR2Lab || code == CV_RGB2Lab ||
modules/imgproc/src/color.cpp:            if( code == CV_BGR2Lab || code == CV_RGB2Lab ||
modules/imgproc/src/color.cpp:                code == CV_LBGR2Lab || code == CV_LRGB2Lab )
modules/imgproc/src/color.cpp:                    CvtColorLoop(src, dst, RGB2Lab_b(scn, bidx, 0, 0, srgb));
modules/imgproc/src/color.cpp:                    CvtColorLoop(src, dst, RGB2Lab_f(scn, bidx, 0, 0, srgb));
modules/imgproc/src/color.cpp:        case CV_Lab2BGR: case CV_Lab2RGB: case CV_Lab2LBGR: case CV_Lab2LRGB:
modules/imgproc/src/color.cpp:            bidx = code == CV_Lab2BGR || code == CV_Luv2BGR ||
modules/imgproc/src/color.cpp:                   code == CV_Lab2LBGR || code == CV_Luv2LBGR ? 0 : 2;
modules/imgproc/src/color.cpp:            bool srgb = code == CV_Lab2BGR || code == CV_Lab2RGB ||
modules/imgproc/src/color.cpp:            if( code == CV_Lab2BGR || code == CV_Lab2RGB ||
modules/imgproc/src/color.cpp:                code == CV_Lab2LBGR || code == CV_Lab2LRGB )
modules/imgproc/src/color.cpp:                    CvtColorLoop(src, dst, Lab2RGB_b(dcn, bidx, 0, 0, srgb));
modules/imgproc/src/color.cpp:                    CvtColorLoop(src, dst, Lab2RGB_f(dcn, bidx, 0, 0, srgb));
modules/imgproc/src/intersection.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/intersection.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/intersection.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/intersection.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/imgproc/src/intersection.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/intersection.cpp:            if( fabs(pts1[i].x - pts2[i].x) > samePointEps || (fabs(pts1[i].y - pts2[i].y) > samePointEps) )
modules/imgproc/src/min_enclosing_triangle.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/min_enclosing_triangle.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/min_enclosing_triangle.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/min_enclosing_triangle.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/min_enclosing_triangle.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/min_enclosing_triangle.cpp:    // Algorithm specific variables
modules/imgproc/src/min_enclosing_triangle.cpp:    // Variables initialisation
modules/imgproc/src/min_enclosing_triangle.cpp://! Check if the line intersects above
modules/imgproc/src/min_enclosing_triangle.cpp:* the polygon above the point polygon[polygonPointIndex]
modules/imgproc/src/min_enclosing_triangle.cpp://! If (gamma(x) x) intersects P between successorOrPredecessorIndex and pointIntex is it above/below?
modules/imgproc/src/min_enclosing_triangle.cpp:    if (std::abs(angle2 - angle3) > 180) {
modules/imgproc/src/min_enclosing_triangle.cpp:    double nominator = std::abs((term1 * term2) - (term3 * term4));
modules/imgproc/src/min_enclosing_triangle.cpp:    return std::abs(determinant) / 2;
modules/imgproc/src/min_enclosing_triangle.cpp:    return (std::abs(number1 - number2) <= (EPSILON * maximum(1.0, std::abs(number1), std::abs(number2))));
modules/imgproc/src/approx.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/approx.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/approx.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/approx.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/approx.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/approx.cpp:    static const int abs_diff[] = { 1, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 2, 1 };
modules/imgproc/src/approx.cpp:        s = abs_diff[reader.code - prev_code + 7];
modules/imgproc/src/approx.cpp:                dist = fabs((pt.y - start_pt.y) * dx - (pt.x - start_pt.x) * dy);
modules/imgproc/src/approx.cpp:        dist = fabs((pt.x - start_pt.x)*dy - (pt.y - start_pt.y)*dx);
modules/imgproc/src/distransform.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/distransform.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/distransform.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/distransform.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/distransform.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/distransform.cpp:distanceTransformEx_5x5( const Mat& _src, Mat& _temp, Mat& _dist, Mat& _labels, const float* metrics )
modules/imgproc/src/distransform.cpp:    int* labels = _labels.ptr<int>();
modules/imgproc/src/distransform.cpp:    int lstep = (int)(_labels.step/sizeof(dist[0]));
modules/imgproc/src/distransform.cpp:        int* lls = (int*)(labels + i*lstep);
modules/imgproc/src/distransform.cpp:        int* lls = (int*)(labels + i*lstep);
modules/imgproc/src/distransform.cpp:    DTColumnInvoker( const Mat* _src, Mat* _dst, const int* _sat_tab, const float* _sqr_tab)
modules/imgproc/src/distransform.cpp:        sat_tab = _sat_tab + src->rows*2 + 1;
modules/imgproc/src/distransform.cpp:        sqr_tab = _sqr_tab;
modules/imgproc/src/distransform.cpp:                dist = dist + 1 - sat_tab[dist - d[j]];
modules/imgproc/src/distransform.cpp:                dptr[0] = sqr_tab[dist];
modules/imgproc/src/distransform.cpp:    const int* sat_tab;
modules/imgproc/src/distransform.cpp:    const float* sqr_tab;
modules/imgproc/src/distransform.cpp:    DTRowInvoker( Mat* _dst, const float* _sqr_tab, const float* _inv_tab )
modules/imgproc/src/distransform.cpp:        sqr_tab = _sqr_tab;
modules/imgproc/src/distransform.cpp:        inv_tab = _inv_tab;
modules/imgproc/src/distransform.cpp:                    float s = (fq + sqr_tab[q] - d[p] - sqr_tab[p])*inv_tab[q - p];
modules/imgproc/src/distransform.cpp:                d[q] = std::sqrt(sqr_tab[std::abs(q - p)] + f[p]);
modules/imgproc/src/distransform.cpp:    const float* sqr_tab;
modules/imgproc/src/distransform.cpp:    const float* inv_tab;
modules/imgproc/src/distransform.cpp:    float* sqr_tab = (float*)(uchar*)_buf;
modules/imgproc/src/distransform.cpp:    int* sat_tab = cv::alignPtr((int*)(sqr_tab + m*2), sizeof(int));
modules/imgproc/src/distransform.cpp:        sqr_tab[i] = (float)(i*i);
modules/imgproc/src/distransform.cpp:        sqr_tab[i] = inf;
modules/imgproc/src/distransform.cpp:        sat_tab[i] = 0;
modules/imgproc/src/distransform.cpp:        sat_tab[i] = i - shift;
modules/imgproc/src/distransform.cpp:    cv::parallel_for_(cv::Range(0, n), cv::DTColumnInvoker(&src, &dst, sat_tab, sqr_tab), src.total()/(double)(1<<16));
modules/imgproc/src/distransform.cpp:    float* inv_tab = sqr_tab + n;
modules/imgproc/src/distransform.cpp:    inv_tab[0] = sqr_tab[0] = 0.f;
modules/imgproc/src/distransform.cpp:        inv_tab[i] = (float)(0.5/i);
modules/imgproc/src/distransform.cpp:        sqr_tab[i] = (float)(i*i);
modules/imgproc/src/distransform.cpp:    cv::parallel_for_(cv::Range(0, m), cv::DTRowInvoker(&dst, sqr_tab, inv_tab));
modules/imgproc/src/distransform.cpp:void cv::distanceTransform( InputArray _src, OutputArray _dst, OutputArray _labels,
modules/imgproc/src/distransform.cpp:                            int distType, int maskSize, int labelType )
modules/imgproc/src/distransform.cpp:    Mat src = _src.getMat(), labels;
modules/imgproc/src/distransform.cpp:    bool need_labels = _labels.needed();
modules/imgproc/src/distransform.cpp:    if( need_labels )
modules/imgproc/src/distransform.cpp:        CV_Assert( labelType == DIST_LABEL_PIXEL || labelType == DIST_LABEL_CCOMP );
modules/imgproc/src/distransform.cpp:        _labels.create(src.size(), CV_32S);
modules/imgproc/src/distransform.cpp:        labels = _labels.getMat();
modules/imgproc/src/distransform.cpp:        maskSize = !need_labels ? CV_DIST_MASK_3 : CV_DIST_MASK_5;
modules/imgproc/src/distransform.cpp:    else if( distType == CV_DIST_L2 && need_labels )
modules/imgproc/src/distransform.cpp:    if( !need_labels )
modules/imgproc/src/distransform.cpp:        labels.setTo(Scalar::all(0));
modules/imgproc/src/distransform.cpp:        if( labelType == CV_DIST_LABEL_CCOMP )
modules/imgproc/src/distransform.cpp:            connectedComponents(zpix, labels, 8, CV_32S);
modules/imgproc/src/distransform.cpp:                int* labelptr = labels.ptr<int>(i);
modules/imgproc/src/distransform.cpp:                        labelptr[j] = k++;
modules/imgproc/src/distransform.cpp:       distanceTransformEx_5x5( src, temp, dst, labels, _mask );
modules/imgproc/src/distransform.cpp:                void* labelsarr, int labelType )
modules/imgproc/src/distransform.cpp:    const cv::Mat labels = cv::cvarrToMat(labelsarr);
modules/imgproc/src/distransform.cpp:    cv::distanceTransform(src, dst, labelsarr ? cv::_OutputArray(labels) : cv::_OutputArray(),
modules/imgproc/src/distransform.cpp:                          distType, maskSize, labelType);
modules/imgproc/src/histogram.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/histogram.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/histogram.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/histogram.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/histogram.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/histogram.cpp:calcHistLookupTables_8u( const Mat& hist, const SparseMat& shist,
modules/imgproc/src/histogram.cpp:                         bool uniform, bool issparse, std::vector<size_t>& _tab )
modules/imgproc/src/histogram.cpp:    _tab.resize((high-low)*dims);
modules/imgproc/src/histogram.cpp:    size_t* tab = &_tab[0];
modules/imgproc/src/histogram.cpp:                tab[i*(high - low) + j - low] = written_idx;
modules/imgproc/src/histogram.cpp:                    tab[i*(high - low) + j - low] = written_idx;
modules/imgproc/src/histogram.cpp:                        tab[i*(high - low) + j - low] = OUT_OF_RANGE;
modules/imgproc/src/histogram.cpp:                          Size imsize, Mat& hist, int dims, const std::vector<size_t>& tab,
modules/imgproc/src/histogram.cpp:          tab_((size_t*)&tab[0]),
modules/imgproc/src/histogram.cpp:            size_t hidx = tab_[i];
modules/imgproc/src/histogram.cpp:    size_t* tab_;
modules/imgproc/src/histogram.cpp:                          Size imsize, Mat& hist, int dims, const std::vector<size_t>& _tab,
modules/imgproc/src/histogram.cpp:          tab_((size_t*)&_tab[0]),
modules/imgproc/src/histogram.cpp:                    size_t idx = tab_[*p0] + tab_[*p1 + 256];
modules/imgproc/src/histogram.cpp:                    if( mask[x] && (idx = tab_[*p0] + tab_[*p1 + 256]) < OUT_OF_RANGE )
modules/imgproc/src/histogram.cpp:    size_t* tab_;
modules/imgproc/src/histogram.cpp:                          Size imsize, Mat& hist, int dims, const std::vector<size_t>& tab )
modules/imgproc/src/histogram.cpp:          tab_((size_t*)&tab[0]),
modules/imgproc/src/histogram.cpp:                    size_t idx = tab_[*p0] + tab_[*p1 + 256] + tab_[*p2 + 512];
modules/imgproc/src/histogram.cpp:                    if( mask[x] && (idx = tab_[*p0] + tab_[*p1 + 256] + tab_[*p2 + 512]) < OUT_OF_RANGE )
modules/imgproc/src/histogram.cpp:    size_t* tab_;
modules/imgproc/src/histogram.cpp:                   Size imsize, Mat& hist, int dims,  std::vector<size_t>& _tab )
modules/imgproc/src/histogram.cpp:    CalcHist2D_8uInvoker body(_ptrs, _deltas, imsize, hist, dims, _tab, &histogramWriteLock);
modules/imgproc/src/histogram.cpp:                   Size imsize, Mat& hist, int dims,  std::vector<size_t>& _tab )
modules/imgproc/src/histogram.cpp:    CalcHist3D_8uInvoker body(_ptrs, _deltas, imsize, hist, dims, _tab);
modules/imgproc/src/histogram.cpp:    std::vector<size_t> _tab;
modules/imgproc/src/histogram.cpp:    calcHistLookupTables_8u( hist, SparseMat(), dims, _ranges, _uniranges, uniform, false, _tab );
modules/imgproc/src/histogram.cpp:    const size_t* tab = &_tab[0];
modules/imgproc/src/histogram.cpp:            CalcHist1D_8uInvoker body(_ptrs, _deltas, imsize, hist, dims, _tab, &histogramWriteLock);
modules/imgproc/src/histogram.cpp:            size_t hidx = tab[i];
modules/imgproc/src/histogram.cpp:            callCalcHist2D_8u(_ptrs, _deltas, imsize, hist, dims, _tab);
modules/imgproc/src/histogram.cpp:                    size_t idx = tab[*p0] + tab[*p1 + 256];
modules/imgproc/src/histogram.cpp:                    if( mask[x] && (idx = tab[*p0] + tab[*p1 + 256]) < OUT_OF_RANGE )
modules/imgproc/src/histogram.cpp:            callCalcHist3D_8u(_ptrs, _deltas, imsize, hist, dims, _tab);
modules/imgproc/src/histogram.cpp:                    size_t idx = tab[*p0] + tab[*p1 + 256] + tab[*p2 + 512];
modules/imgproc/src/histogram.cpp:                    if( mask[x] && (idx = tab[*p0] + tab[*p1 + 256] + tab[*p2 + 512]) < OUT_OF_RANGE )
modules/imgproc/src/histogram.cpp:                        size_t idx = tab[*ptrs[i] + i*256];
modules/imgproc/src/histogram.cpp:                            size_t idx = tab[*ptrs[i] + i*256];
modules/imgproc/src/histogram.cpp:    std::vector<size_t> _tab;
modules/imgproc/src/histogram.cpp:    calcHistLookupTables_8u( Mat(), hist, dims, _ranges, _uniranges, uniform, true, _tab );
modules/imgproc/src/histogram.cpp:    const size_t* tab = &_tab[0];
modules/imgproc/src/histogram.cpp:                    size_t hidx = tab[*ptrs[i] + i*256];
modules/imgproc/src/histogram.cpp:    std::vector<size_t> _tab;
modules/imgproc/src/histogram.cpp:    calcHistLookupTables_8u( hist, SparseMat(), dims, _ranges, _uniranges, uniform, false, _tab );
modules/imgproc/src/histogram.cpp:    const size_t* tab = &_tab[0];
modules/imgproc/src/histogram.cpp:            size_t hidx = tab[i];
modules/imgproc/src/histogram.cpp:                size_t idx = tab[*p0] + tab[*p1 + 256];
modules/imgproc/src/histogram.cpp:                size_t idx = tab[*p0] + tab[*p1 + 256] + tab[*p2 + 512];
modules/imgproc/src/histogram.cpp:                    size_t idx = tab[*ptrs[i] + i*256];
modules/imgproc/src/histogram.cpp:    std::vector<size_t> _tab;
modules/imgproc/src/histogram.cpp:    calcHistLookupTables_8u( Mat(), hist, dims, _ranges, _uniranges, uniform, true, _tab );
modules/imgproc/src/histogram.cpp:    const size_t* tab = &_tab[0];
modules/imgproc/src/histogram.cpp:                size_t hidx = tab[*ptrs[i] + i*256];
modules/imgproc/src/histogram.cpp:                if( fabs(b) > DBL_EPSILON )
modules/imgproc/src/histogram.cpp:                if( fabs(p) <= DBL_EPSILON ) {
modules/imgproc/src/histogram.cpp:                if(  fabs(q) <= DBL_EPSILON ) {
modules/imgproc/src/histogram.cpp:        result = std::abs(denom2) > DBL_EPSILON ? num/std::sqrt(denom2) : 1.;
modules/imgproc/src/histogram.cpp:        s1 = fabs(s1) > FLT_EPSILON ? 1./std::sqrt(s1) : 1.;
modules/imgproc/src/histogram.cpp:            if( fabs(b) > DBL_EPSILON )
modules/imgproc/src/histogram.cpp:        result = std::abs(denom2) > DBL_EPSILON ? num/std::sqrt(denom2) : 1.;
modules/imgproc/src/histogram.cpp:        s1 = fabs(s1) > FLT_EPSILON ? 1./std::sqrt(s1) : 1.;
modules/imgproc/src/histogram.cpp:        if( fabs(sum) < DBL_EPSILON )
modules/imgproc/src/histogram.cpp:        if( fabs(sum) < DBL_EPSILON )
modules/imgproc/src/histogram.cpp:            if( fabs(b) > DBL_EPSILON )
modules/imgproc/src/histogram.cpp:        result = fabs(denom2) > DBL_EPSILON ? num/sqrt(denom2) : 1;
modules/imgproc/src/histogram.cpp:        s1 = fabs(s1) > FLT_EPSILON ? 1./sqrt(s1) : 1.;
modules/imgproc/src/histogram.cpp:// Calculates Bayes probabilistic histograms
modules/imgproc/src/moments.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/moments.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/moments.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/moments.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/moments.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/moments.cpp:    if( fabs(moments->m00) > DBL_EPSILON )
modules/imgproc/src/moments.cpp:    double inv_sqrt_m00 = std::sqrt(std::abs(inv_m00));
modules/imgproc/src/moments.cpp:    if( fabs(a00) > FLT_EPSILON )
modules/imgproc/src/moments.cpp:    if( std::abs(m00) > DBL_EPSILON )
modules/imgproc/src/moments.cpp:    double inv_sqrt_m00 = std::sqrt(std::abs(inv_m00));
modules/imgproc/src/samplers.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/samplers.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/samplers.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/samplers.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/samplers.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/morph.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/morph.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/morph.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/morph.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/morph.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/morph.cpp:            if( std::abs(dy) <= r )
modules/imgproc/src/morph.cpp:    // from reasonable choices for the workgroup size
modules/imgproc/src/opencl/precornerdetect.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/precornerdetect.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/precornerdetect.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/precornerdetect.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/precornerdetect.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/pyr_up.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/pyr_up.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/pyr_up.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/pyr_up.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/pyr_up.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/pyr_up.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/pyr_up.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/pyr_up.cl:#define EXTRAPOLATE(x, maxV) min(maxV - 1, (int) abs(x))
modules/imgproc/src/opencl/blend_linear.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/blend_linear.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/blend_linear.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/blend_linear.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/blend_linear.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/blend_linear.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/blend_linear.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/clahe.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/clahe.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/clahe.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/clahe.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/clahe.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/boxFilter.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/boxFilter.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/boxFilter.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/boxFilter.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/boxFilter.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/boxFilter.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/boxFilter.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/hough_lines.cl:            dir /= max(fabs(dir.x), fabs(dir.y));
modules/imgproc/src/opencl/hough_lines.cl:                        bool good_line = fabs(line_end[1].x - line_end[0].x) >= lineLength ||
modules/imgproc/src/opencl/hough_lines.cl:                                         fabs(line_end[1].y - line_end[0].y) >= lineLength;
modules/imgproc/src/opencl/hough_lines.cl:                        bool good_line = fabs(line_end[1].x - line_end[0].x) >= lineLength ||
modules/imgproc/src/opencl/hough_lines.cl:                                         fabs(line_end[1].y - line_end[0].y) >= lineLength;
modules/imgproc/src/opencl/filter2DSmall.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/filter2DSmall.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/filter2DSmall.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/filter2DSmall.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/filter2DSmall.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/filter2DSmall.cl://BORDER_REPLICATE:     aaaaaa|abcdefgh|hhhhhhh
modules/imgproc/src/opencl/filter2DSmall.cl://BORDER_REFLECT:       fedcba|abcdefgh|hgfedcb
modules/imgproc/src/opencl/filter2DSmall.cl://BORDER_REFLECT_101:   gfedcb|abcdefgh|gfedcba
modules/imgproc/src/opencl/filter2DSmall.cl://BORDER_WRAP:          cdefgh|abcdefgh|abcdefg
modules/imgproc/src/opencl/filter2DSmall.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/filter2DSmall.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/calc_back_project.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/calc_back_project.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/calc_back_project.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/calc_back_project.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/calc_back_project.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/filterSep_singlePass.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/filterSep_singlePass.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/filterSep_singlePass.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/filterSep_singlePass.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/filterSep_singlePass.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/filterSep_singlePass.cl:// CCCCCC|abcdefgh|CCCCCCC
modules/imgproc/src/opencl/filterSep_singlePass.cl:// aaaaaa|abcdefgh|hhhhhhh
modules/imgproc/src/opencl/filterSep_singlePass.cl:// cdefgh|abcdefgh|abcdefg
modules/imgproc/src/opencl/filterSep_singlePass.cl:// fedcba|abcdefgh|hgfedcb
modules/imgproc/src/opencl/filterSep_singlePass.cl:// gfedcb|abcdefgh|gfedcba
modules/imgproc/src/opencl/filterSep_singlePass.cl:// CCCCCC|abcdefgh|CCCCCCC
modules/imgproc/src/opencl/cvtcolor.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/cvtcolor.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/cvtcolor.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/cvtcolor.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/cvtcolor.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/cvtcolor.cl:                      __constant int * sdiv_table, __constant int * hdiv_table)
modules/imgproc/src/opencl/cvtcolor.cl:                s = mad24(diff, sdiv_table[v], (1 << (hsv_shift-1))) >> hsv_shift;
modules/imgproc/src/opencl/cvtcolor.cl:                h = mad24(h, hdiv_table[diff], (1 << (hsv_shift-1))) >> hsv_shift;
modules/imgproc/src/opencl/cvtcolor.cl:                    float tab[4];
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[0] = v;
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[1] = v*(1.f - s);
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[2] = v*(1.f - s*h);
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[3] = v*(1.f - s*(1.f - h));
modules/imgproc/src/opencl/cvtcolor.cl:                    b = tab[sector_data[sector][0]];
modules/imgproc/src/opencl/cvtcolor.cl:                    g = tab[sector_data[sector][1]];
modules/imgproc/src/opencl/cvtcolor.cl:                    r = tab[sector_data[sector][2]];
modules/imgproc/src/opencl/cvtcolor.cl:                s = diff/(float)(fabs(v) + FLT_EPSILON);
modules/imgproc/src/opencl/cvtcolor.cl:                    float tab[4];
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[0] = v;
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[1] = v*(1.f - s);
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[2] = v*(1.f - s*h);
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[3] = v*(1.f - s*(1.f - h));
modules/imgproc/src/opencl/cvtcolor.cl:                    b = tab[sector_data[sector][0]];
modules/imgproc/src/opencl/cvtcolor.cl:                    g = tab[sector_data[sector][1]];
modules/imgproc/src/opencl/cvtcolor.cl:                    r = tab[sector_data[sector][2]];
modules/imgproc/src/opencl/cvtcolor.cl:                    float tab[4];
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[0] = p2;
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[1] = p1;
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[2] = fma(p2 - p1, 1-h, p1);
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[3] = fma(p2 - p1, h, p1);
modules/imgproc/src/opencl/cvtcolor.cl:                    b = tab[sector_data[sector][0]];
modules/imgproc/src/opencl/cvtcolor.cl:                    g = tab[sector_data[sector][1]];
modules/imgproc/src/opencl/cvtcolor.cl:                    r = tab[sector_data[sector][2]];
modules/imgproc/src/opencl/cvtcolor.cl:                    float tab[4];
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[0] = p2;
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[1] = p1;
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[2] = fma(p2 - p1, 1-h, p1);
modules/imgproc/src/opencl/cvtcolor.cl:                    tab[3] = fma(p2 - p1, h, p1);
modules/imgproc/src/opencl/cvtcolor.cl:                    b = tab[sector_data[sector][0]];
modules/imgproc/src/opencl/cvtcolor.cl:                    g = tab[sector_data[sector][1]];
modules/imgproc/src/opencl/cvtcolor.cl:                    r = tab[sector_data[sector][2]];
modules/imgproc/src/opencl/cvtcolor.cl://///////////////////////////////// [l|s]RGB <-> Lab ///////////////////////////
modules/imgproc/src/opencl/cvtcolor.cl:#define lab_shift xyz_shift
modules/imgproc/src/opencl/cvtcolor.cl:#define lab_shift2 (lab_shift + gamma_shift)
modules/imgproc/src/opencl/cvtcolor.cl:#define GammaTabScale (float)GAMMA_TAB_SIZE
modules/imgproc/src/opencl/cvtcolor.cl:inline float splineInterpolate(float x, __global const float * tab, int n)
modules/imgproc/src/opencl/cvtcolor.cl:    tab += ix << 2;
modules/imgproc/src/opencl/cvtcolor.cl:    return fma(fma(fma(tab[3], x, tab[2]), x, tab[1]), x, tab[0]);
modules/imgproc/src/opencl/cvtcolor.cl:__kernel void BGR2Lab(__global const uchar * src, int src_step, int src_offset,
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const ushort * gammaTab, __global ushort * LabCbrtTab_b,
modules/imgproc/src/opencl/cvtcolor.cl:                int R = gammaTab[src_pix.x], G = gammaTab[src_pix.y], B = gammaTab[src_pix.z];
modules/imgproc/src/opencl/cvtcolor.cl:                int fX = LabCbrtTab_b[CV_DESCALE(mad24(R, C0, mad24(G, C1, B*C2)), lab_shift)];
modules/imgproc/src/opencl/cvtcolor.cl:                int fY = LabCbrtTab_b[CV_DESCALE(mad24(R, C3, mad24(G, C4, B*C5)), lab_shift)];
modules/imgproc/src/opencl/cvtcolor.cl:                int fZ = LabCbrtTab_b[CV_DESCALE(mad24(R, C6, mad24(G, C7, B*C8)), lab_shift)];
modules/imgproc/src/opencl/cvtcolor.cl:                int L = CV_DESCALE( Lscale*fY + Lshift, lab_shift2 );
modules/imgproc/src/opencl/cvtcolor.cl:                int a = CV_DESCALE( mad24(500, fX - fY, 128*(1 << lab_shift2)), lab_shift2 );
modules/imgproc/src/opencl/cvtcolor.cl:                int b = CV_DESCALE( mad24(200, fY - fZ, 128*(1 << lab_shift2)), lab_shift2 );
modules/imgproc/src/opencl/cvtcolor.cl:__kernel void BGR2Lab(__global const uchar * srcptr, int src_step, int src_offset,
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:                R = splineInterpolate(R * GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                G = splineInterpolate(G * GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                B = splineInterpolate(B * GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:inline void Lab2BGR_f(const float * srcbuf, float * dstbuf,
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:    ro = splineInterpolate(ro * GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:    go = splineInterpolate(go * GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:    bo = splineInterpolate(bo * GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:__kernel void Lab2BGR(__global const uchar * src, int src_step, int src_offset,
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:                Lab2BGR_f(&srcbuf[0], &dstbuf[0],
modules/imgproc/src/opencl/cvtcolor.cl:                    gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:__kernel void Lab2BGR(__global const uchar * srcptr, int src_step, int src_offset,
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:                Lab2BGR_f(&srcbuf[0], &dstbuf[0],
modules/imgproc/src/opencl/cvtcolor.cl:                    gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:__constant float LabCbrtTabScale = LAB_CBRT_TAB_SIZE/1.5f;
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * LabCbrtTab, __constant float * coeffs, float _un, float _vn)
modules/imgproc/src/opencl/cvtcolor.cl:                R = splineInterpolate(R*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                G = splineInterpolate(G*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                B = splineInterpolate(B*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                float L = splineInterpolate(Y*LabCbrtTabScale, LabCbrtTab, LAB_CBRT_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * LabCbrtTab, __constant float * coeffs, float _un, float _vn)
modules/imgproc/src/opencl/cvtcolor.cl:                R = splineInterpolate(R*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                G = splineInterpolate(G*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                B = splineInterpolate(B*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                float L = splineInterpolate(Y*LabCbrtTabScale, LabCbrtTab, LAB_CBRT_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:                R = splineInterpolate(R*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                G = splineInterpolate(G*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                B = splineInterpolate(B*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                      __global const float * gammaTab,
modules/imgproc/src/opencl/cvtcolor.cl:                R = splineInterpolate(R*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                G = splineInterpolate(G*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/cvtcolor.cl:                B = splineInterpolate(B*GammaTabScale, gammaTab, GAMMA_TAB_SIZE);
modules/imgproc/src/opencl/accumulate.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/accumulate.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/covardata.cl://CCCCCC|abcdefgh|CCCCCCC
modules/imgproc/src/opencl/covardata.cl://aaaaaa|abcdefgh|hhhhhhh
modules/imgproc/src/opencl/covardata.cl://cdefgh|abcdefgh|abcdefg
modules/imgproc/src/opencl/covardata.cl://fedcba|abcdefgh|hgfedcb
modules/imgproc/src/opencl/covardata.cl://gfedcb|abcdefgh|gfedcba
modules/imgproc/src/opencl/covardata.cl://CCCCCC|abcdefgh|CCCCCCC
modules/imgproc/src/opencl/remap.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/remap.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/remap.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/remap.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/remap.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/remap.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/remap.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/threshold.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/threshold.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/threshold.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/threshold.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/threshold.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/threshold.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/threshold.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/bilateral.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/bilateral.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/bilateral.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/bilateral.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/bilateral.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/bilateral.cl:            float diff = SUM(fabs(val - val0));
modules/imgproc/src/opencl/bilateral.cl:            int diff = SUM(abs(val - val0));
modules/imgproc/src/opencl/corner.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/corner.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/corner.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/corner.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/corner.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/integral_sum.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/integral_sum.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/warp_affine.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/warp_affine.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/warp_affine.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/warp_affine.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/warp_affine.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/warp_affine.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/warp_affine.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/warp_affine.cl:            float taby = 1.f/INTER_TAB_SIZE*ay;
modules/imgproc/src/opencl/warp_affine.cl:            float tabx = 1.f/INTER_TAB_SIZE*ax;
modules/imgproc/src/opencl/warp_affine.cl:            int itab0 = convert_short_sat_rte( (1.0f-taby)*(1.0f-tabx) * INTER_REMAP_COEF_SCALE );
modules/imgproc/src/opencl/warp_affine.cl:            int itab1 = convert_short_sat_rte( (1.0f-taby)*tabx * INTER_REMAP_COEF_SCALE );
modules/imgproc/src/opencl/warp_affine.cl:            int itab2 = convert_short_sat_rte( taby*(1.0f-tabx) * INTER_REMAP_COEF_SCALE );
modules/imgproc/src/opencl/warp_affine.cl:            int itab3 = convert_short_sat_rte( taby*tabx * INTER_REMAP_COEF_SCALE );
modules/imgproc/src/opencl/warp_affine.cl:            WT val = mad24(v0, itab0, mad24(v1, itab1, mad24(v2, itab2, v3 * itab3)));
modules/imgproc/src/opencl/warp_affine.cl:            float tabx2 = 1.0f - tabx, taby2 = 1.0f - taby;
modules/imgproc/src/opencl/warp_affine.cl:            WT val = fma(tabx2, fma(v0, taby2, v2 * taby), tabx * fma(v1, taby2, v3 * taby));
modules/imgproc/src/opencl/warp_affine.cl:        float tab1y[4], tab1x[4];
modules/imgproc/src/opencl/warp_affine.cl:        interpolateCubic(ayy, tab1y);
modules/imgproc/src/opencl/warp_affine.cl:        interpolateCubic(axx, tab1x);
modules/imgproc/src/opencl/warp_affine.cl:        int itab[16];
modules/imgproc/src/opencl/warp_affine.cl:            itab[i] = rint(tab1y[(i>>2)] * tab1x[(i&3)] * INTER_REMAP_COEF_SCALE);
modules/imgproc/src/opencl/warp_affine.cl:            sum = mad24(v[i], itab[i], sum);
modules/imgproc/src/opencl/warp_affine.cl:            sum = fma(v[i], tab1y[(i>>2)] * tab1x[(i&3)], sum);
modules/imgproc/src/opencl/gftt.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/gftt.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/gftt.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/gftt.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/gftt.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/pyr_down.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/pyr_down.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/pyr_down.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/pyr_down.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/pyr_down.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/pyr_down.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/pyr_down.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/pyr_down.cl:// aaaaaa|abcdefgh|hhhhhhh
modules/imgproc/src/opencl/pyr_down.cl:// cdefgh|abcdefgh|abcdefg
modules/imgproc/src/opencl/pyr_down.cl:// fedcba|abcdefgh|hgfedcb
modules/imgproc/src/opencl/pyr_down.cl:// gfedcb|abcdefgh|gfedcba
modules/imgproc/src/opencl/filter2D.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/filter2D.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/filter2D.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/filter2D.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/filter2D.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/filter2D.cl:// CCCCCC|abcdefgh|CCCCCCC
modules/imgproc/src/opencl/filter2D.cl:// aaaaaa|abcdefgh|hhhhhhh
modules/imgproc/src/opencl/filter2D.cl:// cdefgh|abcdefgh|abcdefg
modules/imgproc/src/opencl/filter2D.cl:// fedcba|abcdefgh|hgfedcb
modules/imgproc/src/opencl/filter2D.cl:// gfedcb|abcdefgh|gfedcba
modules/imgproc/src/opencl/filter2D.cl:// CCCCCC|abcdefgh|CCCCCCC
modules/imgproc/src/opencl/filter2D.cl:// aaaaaa|abcdefgh|hhhhhhh
modules/imgproc/src/opencl/filter2D.cl:// cdefgh|abcdefgh|abcdefg
modules/imgproc/src/opencl/filter2D.cl:// fedcba|abcdefgh|hgfedcb
modules/imgproc/src/opencl/filter2D.cl:// gfedcb|abcdefgh|gfedcba
modules/imgproc/src/opencl/filter2D.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/filter2D.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/morph.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/morph.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/morph.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/morph.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/morph.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/morph.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/morph.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/morph.cl:// BORDER_CONSTANT:      iiiiii|abcdefgh|iiiiiii
modules/imgproc/src/opencl/resize.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/resize.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/resize.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/resize.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/resize.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/resize.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/resize.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/resize.cl:                         float ifx, float ify, __global const int * ofs_tab,
modules/imgproc/src/opencl/resize.cl:                         __global const int * map_tab, __global const float * alpha_tab)
modules/imgproc/src/opencl/resize.cl:        __global const int * xmap_tab = map_tab;
modules/imgproc/src/opencl/resize.cl:        __global const int * ymap_tab = (__global const int *)(map_tab + (src_cols << 1));
modules/imgproc/src/opencl/resize.cl:        __global const float * xalpha_tab = alpha_tab;
modules/imgproc/src/opencl/resize.cl:        __global const float * yalpha_tab = (__global const float *)(alpha_tab + (src_cols << 1));
modules/imgproc/src/opencl/resize.cl:        __global const int * xofs_tab = ofs_tab;
modules/imgproc/src/opencl/resize.cl:        __global const int * yofs_tab = (__global const int *)(ofs_tab + dst_cols + 1);
modules/imgproc/src/opencl/resize.cl:        int xk0 = xofs_tab[dx], xk1 = xofs_tab[dx + 1];
modules/imgproc/src/opencl/resize.cl:        int yk0 = yofs_tab[dy], yk1 = yofs_tab[dy + 1];
modules/imgproc/src/opencl/resize.cl:        int sy0 = ymap_tab[yk0], sy1 = ymap_tab[yk1 - 1];
modules/imgproc/src/opencl/resize.cl:        int sx0 = xmap_tab[xk0], sx1 = xmap_tab[xk1 - 1];
modules/imgproc/src/opencl/resize.cl:            WTV beta = (WTV)(yalpha_tab[yk]);
modules/imgproc/src/opencl/resize.cl:                WTV alpha = (WTV)(xalpha_tab[xk]);
modules/imgproc/src/opencl/warp_perspective.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/warp_perspective.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/warp_perspective.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/warp_perspective.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/warp_perspective.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/warp_perspective.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/warp_perspective.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/warp_perspective.cl:        float taby = 1.f/INTER_TAB_SIZE*ay;
modules/imgproc/src/opencl/warp_perspective.cl:        float tabx = 1.f/INTER_TAB_SIZE*ax;
modules/imgproc/src/opencl/warp_perspective.cl:        int itab0 = convert_short_sat_rte( (1.0f-taby)*(1.0f-tabx) * INTER_REMAP_COEF_SCALE );
modules/imgproc/src/opencl/warp_perspective.cl:        int itab1 = convert_short_sat_rte( (1.0f-taby)*tabx * INTER_REMAP_COEF_SCALE );
modules/imgproc/src/opencl/warp_perspective.cl:        int itab2 = convert_short_sat_rte( taby*(1.0f-tabx) * INTER_REMAP_COEF_SCALE );
modules/imgproc/src/opencl/warp_perspective.cl:        int itab3 = convert_short_sat_rte( taby*tabx * INTER_REMAP_COEF_SCALE );
modules/imgproc/src/opencl/warp_perspective.cl:        WT val = v0 * itab0 +  v1 * itab1 + v2 * itab2 + v3 * itab3;
modules/imgproc/src/opencl/warp_perspective.cl:        float tabx2 = 1.0f - tabx, taby2 = 1.0f - taby;
modules/imgproc/src/opencl/warp_perspective.cl:        WT val = v0 * tabx2 * taby2 +  v1 * tabx * taby2 + v2 * tabx2 * taby + v3 * tabx * taby;
modules/imgproc/src/opencl/warp_perspective.cl:        float tab1y[4], tab1x[4];
modules/imgproc/src/opencl/warp_perspective.cl:        interpolateCubic(ayy, tab1y);
modules/imgproc/src/opencl/warp_perspective.cl:        interpolateCubic(axx, tab1x);
modules/imgproc/src/opencl/warp_perspective.cl:        int itab[16];
modules/imgproc/src/opencl/warp_perspective.cl:            itab[i] = rint(tab1y[(i>>2)] * tab1x[(i&3)] * INTER_REMAP_COEF_SCALE);
modules/imgproc/src/opencl/warp_perspective.cl:            sum += v[i] * itab[i];
modules/imgproc/src/opencl/warp_perspective.cl:            sum += v[i] * tab1y[(i>>2)] * tab1x[(i&3)];
modules/imgproc/src/opencl/laplacian5.cl:// CCCCCC|abcdefgh|CCCCCCC
modules/imgproc/src/opencl/laplacian5.cl:// aaaaaa|abcdefgh|hhhhhhh
modules/imgproc/src/opencl/laplacian5.cl:// cdefgh|abcdefgh|abcdefg
modules/imgproc/src/opencl/laplacian5.cl:// fedcba|abcdefgh|hgfedcb
modules/imgproc/src/opencl/laplacian5.cl:// gfedcb|abcdefgh|gfedcba
modules/imgproc/src/opencl/laplacian5.cl:// CCCCCC|abcdefgh|CCCCCCC
modules/imgproc/src/opencl/match_template.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/match_template.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/match_template.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/match_template.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/match_template.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/match_template.cl:    if (fabs(num) < denum)
modules/imgproc/src/opencl/match_template.cl:    if (fabs(num) < denum * 1.125f)
modules/imgproc/src/opencl/match_template.cl:    if (fabs(num) < denum)
modules/imgproc/src/opencl/match_template.cl:    if (fabs(num) < denum * 1.125f)
modules/imgproc/src/opencl/histogram.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/histogram.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/histogram.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/histogram.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/histogram.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/filterSmall.cl://BORDER_REPLICATE:     aaaaaa|abcdefgh|hhhhhhh
modules/imgproc/src/opencl/filterSmall.cl://BORDER_REFLECT:       fedcba|abcdefgh|hgfedcb
modules/imgproc/src/opencl/filterSmall.cl://BORDER_REFLECT_101:   gfedcb|abcdefgh|gfedcba
modules/imgproc/src/opencl/filterSmall.cl://BORDER_WRAP:          cdefgh|abcdefgh|abcdefg
modules/imgproc/src/opencl/filterSmall.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/filterSmall.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/canny.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/canny.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/canny.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/canny.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/canny.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/canny.cl:    floatN magN = fabs(dx) + fabs(dy);
modules/imgproc/src/opencl/canny.cl:        Therefore if abs(dy / dx) belongs to the interval
modules/imgproc/src/opencl/canny.cl:        a = abs(dy / dx) * tg(22.5) and b = abs(dy / dx) * tg(67.5)
modules/imgproc/src/opencl/canny.cl:        a = min((int)abs(a), 1) + 1;
modules/imgproc/src/opencl/canny.cl:        b = min((int)abs(b), 1);
modules/imgproc/src/opencl/canny.cl:#define dist(x, y) (abs(x) + abs(y))
modules/imgproc/src/opencl/canny.cl:        a = min((int)abs(a), 1) + 1;
modules/imgproc/src/opencl/canny.cl:        b = min((int)abs(b), 1);
modules/imgproc/src/opencl/canny.cl:        hysteresis (add edges labeled 0 if they are connected with an edge labeled 2)
modules/imgproc/src/opencl/medianFilter.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/medianFilter.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/medianFilter.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/medianFilter.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/medianFilter.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/medianFilter.cl://  - SHUFFLE4_3/SHUFFLE4_5 - rearrange scattered border/central pixels into regular 4-pixel variables
modules/imgproc/src/opencl/medianFilter.cl:            dst0 = (T4)(src0, dst1.s0123456789ab ); \
modules/imgproc/src/opencl/medianFilter.cl:            dst2 = (T4)(dst1.s456789abcdef, src2); }
modules/imgproc/src/opencl/medianFilter.cl:        dst1 = (T4)(src1, dst2.s0123456789ab); \
modules/imgproc/src/opencl/medianFilter.cl:        dst3 = (T4)(dst2.s456789abcdef, src3); \
modules/imgproc/src/opencl/medianFilter.cl:        dst4 = (T4)(dst2.s89abcdef, src3, src4); }
modules/imgproc/src/opencl/filterSepCol.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/filterSepCol.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/filterSepCol.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/filterSepCol.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/filterSepCol.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/filterSepCol.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/filterSepCol.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/filterSepRow.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/opencl/filterSepRow.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/opencl/filterSepRow.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/opencl/filterSepRow.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/opencl/filterSepRow.cl:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/opencl/filterSepRow.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/imgproc/src/opencl/filterSepRow.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/imgproc/src/opencl/filterSepRow.cl:// BORDER_REPLICATE: aaaaaa|abcdefgh|hhhhhhh
modules/imgproc/src/opencl/filterSepRow.cl:// BORDER_REFLECT: fedcba|abcdefgh|hgfedcb
modules/imgproc/src/opencl/filterSepRow.cl:// BORDER_REFLECT_101: gfedcb|abcdefgh|gfedcba
modules/imgproc/src/opencl/filterSepRow.cl:// BORDER_WRAP: cdefgh|abcdefgh|abcdefg
modules/imgproc/src/subdivision2d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/subdivision2d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/subdivision2d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/subdivision2d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/subdivision2d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/subdivision2d.cpp:        double t1 = fabs( pt.x - org_pt.x );
modules/imgproc/src/subdivision2d.cpp:        t1 += fabs( pt.y - org_pt.y );
modules/imgproc/src/subdivision2d.cpp:        double t2 = fabs( pt.x - dst_pt.x );
modules/imgproc/src/subdivision2d.cpp:        t2 += fabs( pt.y - dst_pt.y );
modules/imgproc/src/subdivision2d.cpp:        double t3 = fabs( org_pt.x - dst_pt.x );
modules/imgproc/src/subdivision2d.cpp:        t3 += fabs( org_pt.y - dst_pt.y );
modules/imgproc/src/subdivision2d.cpp:                fabs( triangleArea( pt, org_pt, dst_pt )) < FLT_EPSILON )
modules/imgproc/src/subdivision2d.cpp:            if( fabs( virt_point.x ) < FLT_MAX * 0.5 &&
modules/imgproc/src/subdivision2d.cpp:               fabs( virt_point.y ) < FLT_MAX * 0.5 )
modules/imgproc/src/subdivision2d.cpp:            if( fabs( virt_point.x ) < FLT_MAX * 0.5 &&
modules/imgproc/src/subdivision2d.cpp:               fabs( virt_point.y ) < FLT_MAX * 0.5 )
modules/imgproc/src/geometry.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/geometry.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/geometry.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/geometry.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/geometry.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/geometry.cpp:    cv::AutoBuffer<double> abuf;
modules/imgproc/src/geometry.cpp:    cv::Mat contour = cv::cvarrToMat(_contour, false, false, 0, &abuf);
modules/imgproc/src/geometry.cpp:// Returns true iff point c lies on the closed segement ab.
modules/imgproc/src/geometry.cpp:// Assumes it is already known that abc are collinear.
modules/imgproc/src/geometry.cpp:    // If ab not vertical, check betweenness on x; else on y.
modules/imgproc/src/geometry.cpp:// segments ab and cd.  Returns p and a char with the following meaning:
modules/imgproc/src/geometry.cpp:        // Computations of key variables.
modules/imgproc/src/geometry.cpp:    return (float)fabs(area);
modules/imgproc/src/generalized_hough.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/generalized_hough.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/generalized_hough.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/generalized_hough.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/generalized_hough.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/generalized_hough.cpp:        return fabs(v) > std::numeric_limits<float>::epsilon();
modules/imgproc/src/generalized_hough.cpp:        std::vector< std::vector<Point> > r_table_;
modules/imgproc/src/generalized_hough.cpp:        r_table_.resize(levels_ + 1);
modules/imgproc/src/generalized_hough.cpp:        std::for_each(r_table_.begin(), r_table_.end(), std::mem_fun_ref(&std::vector<Point>::clear));
modules/imgproc/src/generalized_hough.cpp:                    r_table_[n].push_back(p - templCenter_);
modules/imgproc/src/generalized_hough.cpp:        CV_Assert( levels_ > 0 && r_table_.size() == static_cast<size_t>(levels_ + 1) );
modules/imgproc/src/generalized_hough.cpp:                    const std::vector<Point>& r_row = r_table_[n];
modules/imgproc/src/generalized_hough.cpp:        return (fabs(clampAngle(a - b)) <= eps);
modules/imgproc/src/generalized_hough.cpp:                        if (fabs(c1.x - c2.x) > 1 || fabs(c1.y - c2.y) > 1)
modules/imgproc/src/clahe.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/clahe.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/clahe.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/clahe.cpp:// In no event shall the copyright holders or contributors be liable for any direct,
modules/imgproc/src/clahe.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/clahe.cpp:        mutable cv::Mat lut_;
modules/imgproc/src/clahe.cpp:        mutable cv::Mat dst_;
modules/imgproc/src/utils.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/utils.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/utils.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/utils.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/utils.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/matchcontours.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/matchcontours.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/matchcontours.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/matchcontours.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/matchcontours.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/matchcontours.cpp:            double ama = fabs( ma[i] );
modules/imgproc/src/matchcontours.cpp:            double amb = fabs( mb[i] );
modules/imgproc/src/matchcontours.cpp:                result += fabs( -ama + amb );
modules/imgproc/src/matchcontours.cpp:            double ama = fabs( ma[i] );
modules/imgproc/src/matchcontours.cpp:            double amb = fabs( mb[i] );
modules/imgproc/src/matchcontours.cpp:                result += fabs( -ama + amb );
modules/imgproc/src/matchcontours.cpp:            double ama = fabs( ma[i] );
modules/imgproc/src/matchcontours.cpp:            double amb = fabs( mb[i] );
modules/imgproc/src/matchcontours.cpp:                mmm = fabs( (ama - amb) / ama );
modules/imgproc/src/matchcontours.cpp:    cv::AutoBuffer<double> abuf1, abuf2;
modules/imgproc/src/matchcontours.cpp:    cv::Mat contour1 = cv::cvarrToMat(_contour1, false, false, 0, &abuf1);
modules/imgproc/src/matchcontours.cpp:    cv::Mat contour2 = cv::cvarrToMat(_contour2, false, false, 0, &abuf2);
modules/imgproc/src/templmatch.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/templmatch.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/templmatch.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/templmatch.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/templmatch.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/templmatch.cpp:                if( fabs(num) < t )
modules/imgproc/src/templmatch.cpp:                else if( fabs(num) < t*1.125 )
modules/imgproc/src/templmatch.cpp:    CV_Assert( result.size() == cv::Size(std::abs(img.cols - templ.cols) + 1,
modules/imgproc/src/templmatch.cpp:                                         std::abs(img.rows - templ.rows) + 1) &&
modules/imgproc/src/featureselect.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/featureselect.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/featureselect.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/featureselect.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/featureselect.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/demosaicing.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/demosaicing.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/demosaicing.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/demosaicing.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/demosaicing.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/demosaicing.cpp://///////////////// Demosaicing using Variable Number of Gradients ///////////////////////
modules/imgproc/src/demosaicing.cpp:    #define _mm_absdiff_epu16(a,b) _mm_adds_epu16(_mm_subs_epu16(a, b), _mm_subs_epu16(b, a))
modules/imgproc/src/demosaicing.cpp:                    b0 = _mm_adds_epu16(_mm_slli_epi16(_mm_absdiff_epu16(s2,s8),1),
modules/imgproc/src/demosaicing.cpp:                                        _mm_adds_epu16(_mm_absdiff_epu16(s1, s7),
modules/imgproc/src/demosaicing.cpp:                                                       _mm_absdiff_epu16(s3, s9)));
modules/imgproc/src/demosaicing.cpp:                    b1 = _mm_adds_epu16(_mm_slli_epi16(_mm_absdiff_epu16(s4,s6),1),
modules/imgproc/src/demosaicing.cpp:                                        _mm_adds_epu16(_mm_absdiff_epu16(s1, s3),
modules/imgproc/src/demosaicing.cpp:                                                       _mm_absdiff_epu16(s7, s9)));
modules/imgproc/src/demosaicing.cpp:                    b2 = _mm_slli_epi16(_mm_absdiff_epu16(s3,s7),1);
modules/imgproc/src/demosaicing.cpp:                    b3 = _mm_slli_epi16(_mm_absdiff_epu16(s1,s9),1);
modules/imgproc/src/demosaicing.cpp:                    b4 = _mm_adds_epu16(b2,_mm_adds_epu16(_mm_absdiff_epu16(s2, s4),
modules/imgproc/src/demosaicing.cpp:                                                          _mm_absdiff_epu16(s6, s8)));
modules/imgproc/src/demosaicing.cpp:                    b5 = _mm_adds_epu16(b3,_mm_adds_epu16(_mm_absdiff_epu16(s2, s6),
modules/imgproc/src/demosaicing.cpp:                                                          _mm_absdiff_epu16(s4, s8)));
modules/imgproc/src/demosaicing.cpp:                brow[0] = (ushort)(std::abs(srow[-1-bstep] - srow[-1+bstep]) +
modules/imgproc/src/demosaicing.cpp:                                   std::abs(srow[-bstep] - srow[+bstep])*2 +
modules/imgproc/src/demosaicing.cpp:                                   std::abs(srow[1-bstep] - srow[1+bstep]));
modules/imgproc/src/demosaicing.cpp:                brow[N] = (ushort)(std::abs(srow[-1-bstep] - srow[1-bstep]) +
modules/imgproc/src/demosaicing.cpp:                                   std::abs(srow[-1] - srow[1])*2 +
modules/imgproc/src/demosaicing.cpp:                                   std::abs(srow[-1+bstep] - srow[1+bstep]));
modules/imgproc/src/demosaicing.cpp:                brow[N2] = (ushort)(std::abs(srow[+1-bstep] - srow[-1+bstep])*2);
modules/imgproc/src/demosaicing.cpp:                brow[N3] = (ushort)(std::abs(srow[-1-bstep] - srow[1+bstep])*2);
modules/imgproc/src/demosaicing.cpp:                brow[N4] = (ushort)(brow[N2] + std::abs(srow[-bstep] - srow[-1]) +
modules/imgproc/src/demosaicing.cpp:                                    std::abs(srow[+bstep] - srow[1]));
modules/imgproc/src/demosaicing.cpp:                brow[N5] = (ushort)(brow[N3] + std::abs(srow[-bstep] - srow[1]) +
modules/imgproc/src/demosaicing.cpp:                                    std::abs(srow[+bstep] - srow[-1]));
modules/imgproc/src/demosaicing.cpp:                    D[1] = (std::abs(S[-1] - S[1]) > std::abs(S[sstep] - S[-sstep]) ? (S[sstep] + S[-sstep] + 1) : (S[-1] + S[1] + 1)) >> 1;
modules/imgproc/src/demosaicing.cpp:                    D[1] = (std::abs(S[-1] - S[1]) > std::abs(S[sstep] - S[-sstep]) ? (S[sstep] + S[-sstep] + 1) : (S[-1] + S[1] + 1)) >> 1;
modules/imgproc/src/demosaicing.cpp:                D[1] = (std::abs(S[-1] - S[1]) > std::abs(S[sstep] - S[-sstep]) ? (S[sstep] + S[-sstep] + 1) : (S[-1] + S[1] + 1)) >> 1;
modules/imgproc/src/cornersubpix.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/cornersubpix.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/cornersubpix.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/cornersubpix.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/cornersubpix.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/cornersubpix.cpp:            if( fabs( det ) <= DBL_EPSILON*DBL_EPSILON )
modules/imgproc/src/cornersubpix.cpp:        if( fabs( cI.x - cT.x ) > win.width || fabs( cI.y - cT.y ) > win.height )
modules/imgproc/src/filter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/filter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/filter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/filter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/filter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/filter.cpp:    if( isSeparable() )
modules/imgproc/src/filter.cpp:    borderTab.resize(borderLength*borderElemSize);
modules/imgproc/src/filter.cpp:            tdst = isSeparable() ? &srcRow[0] : dst;
modules/imgproc/src/filter.cpp:            if( isSeparable() )
modules/imgproc/src/filter.cpp:            (!isSeparable() ? ksize.width - 1 : 0),VEC_ALIGN);
modules/imgproc/src/filter.cpp:    bufStep = bufElemSize*(int)alignSize(roi.width + (!isSeparable() ? ksize.width - 1 : 0),16);
modules/imgproc/src/filter.cpp:    // recompute border tables
modules/imgproc/src/filter.cpp:            int nr = isSeparable() ? 1 : (int)rows.size();
modules/imgproc/src/filter.cpp:                uchar* dst = isSeparable() ? &srcRow[0] : alignPtr(&ringBuf[0],VEC_ALIGN) + bufStep*i;
modules/imgproc/src/filter.cpp:            int btab_esz = borderElemSize, wholeWidth = wholeSize.width;
modules/imgproc/src/filter.cpp:            int* btab = (int*)&borderTab[0];
modules/imgproc/src/filter.cpp:                int p0 = (borderInterpolate(i-dx1, wholeWidth, rowBorderType) + xofs1)*btab_esz;
modules/imgproc/src/filter.cpp:                for( j = 0; j < btab_esz; j++ )
modules/imgproc/src/filter.cpp:                    btab[i*btab_esz + j] = p0 + j;
modules/imgproc/src/filter.cpp:                int p0 = (borderInterpolate(wholeWidth + i, wholeWidth, rowBorderType) + xofs1)*btab_esz;
modules/imgproc/src/filter.cpp:                for( j = 0; j < btab_esz; j++ )
modules/imgproc/src/filter.cpp:                    btab[(i + dx1)*btab_esz + j] = p0 + j;
modules/imgproc/src/filter.cpp:    const int *btab = &borderTab[0];
modules/imgproc/src/filter.cpp:    int esz = (int)getElemSize(srcType), btab_esz = borderElemSize;
modules/imgproc/src/filter.cpp:    bool isSep = isSeparable();
modules/imgproc/src/filter.cpp:                if( btab_esz*(int)sizeof(int) == esz )
modules/imgproc/src/filter.cpp:                    for( i = 0; i < _dx1*btab_esz; i++ )
modules/imgproc/src/filter.cpp:                        irow[i] = isrc[btab[i]];
modules/imgproc/src/filter.cpp:                    for( i = 0; i < _dx2*btab_esz; i++ )
modules/imgproc/src/filter.cpp:                        irow[i + (width1 - _dx2)*btab_esz] = isrc[btab[i+_dx1*btab_esz]];
modules/imgproc/src/filter.cpp:                        row[i] = src[btab[i]];
modules/imgproc/src/filter.cpp:                        row[i + (width1 - _dx2)*esz] = src[btab[i+_dx1*esz]];
modules/imgproc/src/filter.cpp:        if( isSeparable() )
modules/imgproc/src/filter.cpp:*                                 Separable linear filter                                *
modules/imgproc/src/filter.cpp:    if( fabs(sum - 1) > FLT_EPSILON*(fabs(sum) + 1) )
modules/imgproc/src/filter.cpp:            if( fabs(ky[1]) == 1 && ky[1] == -ky[-1] )
modules/imgproc/src/filter.cpp:    mutable int bufsz;
modules/imgproc/src/filter.cpp:            if( fabs(ky[1]) == 1 && ky[1] == -ky[-1] )
modules/imgproc/src/filter.cpp://///////////////////////////// non-separable filters ///////////////////////////////
modules/imgproc/src/filter.cpp:            if( fabs(ky[1]) == 1 && ky[1] == -ky[-1] )
modules/imgproc/src/filter.cpp:cv::Ptr<cv::FilterEngine> cv::createSeparableLinearFilter(
modules/imgproc/src/filter.cpp:*                               Non-separable linear filter                              *
modules/imgproc/src/filter.cpp:        // from reasonable choices for the workgroup size
modules/imgproc/src/filter.cpp:            std::fabs(delta - 0) < DBL_EPSILON && ippAnchor == anchor && dst.data != src.data)
modules/imgproc/src/filter.cpp:    Ptr<FilterEngine> f = createSeparableLinearFilter(src.type(),
modules/imgproc/src/contours.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/contours.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/contours.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/contours.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/contours.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/contours.cpp:    struct _CvContourInfo *parent;      /* information about parent contour */
modules/imgproc/src/contours.cpp:    _CvContourInfo *l_cinfo;    /* information about latest approx. contour */
modules/imgproc/src/contours.cpp:    _CvContourInfo frame_info;  /* information about frame */
modules/imgproc/src/contours.cpp:    _CvContourInfo *cinfo_table[128];
modules/imgproc/src/contours.cpp:      new_storage variable is not needed here.
modules/imgproc/src/contours.cpp:      some nodes absent. But in the resulting tree the contour1 is a child
modules/imgproc/src/contours.cpp:                    _CvContourInfo *cur = scanner->cinfo_table[lval];
modules/imgproc/src/contours.cpp:                    l_cinfo->next = scanner->cinfo_table[lval];
modules/imgproc/src/contours.cpp:                    scanner->cinfo_table[lval] = l_cinfo;
modules/imgproc/src/gcgraph.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/gcgraph.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/gcgraph.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/gcgraph.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/gcgraph.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/gcgraph.hpp:            weight = fabs(v->weight);
modules/imgproc/src/smooth.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/smooth.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/smooth.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/smooth.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/smooth.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/smooth.cpp: *  Laboratoire de vision et systemes numeriques
modules/imgproc/src/smooth.cpp:        // from reasonable choices for the workgroup size
modules/imgproc/src/smooth.cpp:    static const float small_gaussian_tab[][SMALL_GAUSSIAN_SIZE] =
modules/imgproc/src/smooth.cpp:        small_gaussian_tab[n>>1] : 0;
modules/imgproc/src/smooth.cpp:    if( ksize.height == ksize.width && std::abs(sigma1 - sigma2) < DBL_EPSILON )
modules/imgproc/src/smooth.cpp:    return createSeparableLinearFilter( type, type, kx, ky, Point(-1,-1), 0, borderType );
modules/imgproc/src/smooth.cpp:                        float w = space_weight[k]*color_weight[std::abs(val - val0)];
modules/imgproc/src/smooth.cpp:                        float w = space_weight[k]*color_weight[std::abs(b - b0) +
modules/imgproc/src/smooth.cpp:                                                               std::abs(g - g0) + std::abs(r - r0)];
modules/imgproc/src/smooth.cpp:                        float alpha = (float)(std::abs(val - val0)*scale_index);
modules/imgproc/src/smooth.cpp:                        float alpha = (float)((std::abs(b - b0) +
modules/imgproc/src/smooth.cpp:                            std::abs(g - g0) + std::abs(r - r0))*scale_index);
modules/imgproc/src/smooth.cpp:    if(std::abs(minValSrc - maxValSrc) < FLT_EPSILON)
modules/imgproc/src/smooth.cpp:    // allocate lookup tables
modules/imgproc/src/main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/colormap.cpp: *   * Redistributions of source code must retain the above copyright
modules/imgproc/src/colormap.cpp: *   * Redistributions in binary form must reproduce the above copyright
modules/imgproc/src/colormap.cpp:#pragma warning( disable: 4305 )
modules/imgproc/src/colormap.cpp:    // sort input table
modules/imgproc/src/colormap.cpp:        // Throws an error for wrong-aligned lookup table, which must be
modules/imgproc/src/colormap.cpp:            // now build lookup table
modules/imgproc/src/colormap.cpp:            CV_Error(Error::StsAssert, "cv::LUT only supports tables of size 256.");
modules/imgproc/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/precomp.hpp:/* helper tables */
modules/imgproc/src/precomp.hpp:extern const float icv8x32fTab_cv[];
modules/imgproc/src/precomp.hpp:#define CV_8TO32F(x)  icv8x32fTab_cv[(x)+256]
modules/imgproc/src/precomp.hpp:extern const float icv8x32fSqrTab[];
modules/imgproc/src/precomp.hpp:#define CV_8TO32F_SQR(x)  icv8x32fSqrTab[(x)+128]
modules/imgproc/src/hough.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/hough.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/hough.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/hough.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/hough.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/hough.cpp:    AutoBuffer<float> _tabSin(numangle);
modules/imgproc/src/hough.cpp:    AutoBuffer<float> _tabCos(numangle);
modules/imgproc/src/hough.cpp:    float *tabSin = _tabSin, *tabCos = _tabCos;
modules/imgproc/src/hough.cpp:        tabSin[n] = (float)(sin((double)ang) * irho);
modules/imgproc/src/hough.cpp:        tabCos[n] = (float)(cos((double)ang) * irho);
modules/imgproc/src/hough.cpp:                    int r = cvRound( j * tabCos[n] + i * tabSin[n] );
modules/imgproc/src/hough.cpp:    // Precalculate sin table
modules/imgproc/src/hough.cpp:    std::vector<float> _sinTable( 5 * tn * stn );
modules/imgproc/src/hough.cpp:    float* sinTable = &_sinTable[0];
modules/imgproc/src/hough.cpp:        sinTable[index] = (float)cos( stheta * index * 0.2f );
modules/imgproc/src/hough.cpp:                t = (float) fabs( cvFastArctan( yc, xc ) * d2r );
modules/imgproc/src/hough.cpp:                    t = (float) fabs( cvFastArctan( yc, xc ) * d2r );
modules/imgproc/src/hough.cpp:                        rv = r * sinTable[(int) (std::abs( ti2 ))] - r0;
modules/imgproc/src/hough.cpp:*                              Probabilistic Hough Transform                             *
modules/imgproc/src/hough.cpp:HoughLinesProbabilistic( Mat& image,
modules/imgproc/src/hough.cpp:    std::vector<float> trigtab(numangle*2);
modules/imgproc/src/hough.cpp:        trigtab[n*2] = (float)(cos((double)n*theta) * irho);
modules/imgproc/src/hough.cpp:        trigtab[n*2+1] = (float)(sin((double)n*theta) * irho);
modules/imgproc/src/hough.cpp:    const float* ttab = &trigtab[0];
modules/imgproc/src/hough.cpp:        // update accumulator, find the most probable line
modules/imgproc/src/hough.cpp:            int r = cvRound( j * ttab[n*2] + i * ttab[n*2+1] );
modules/imgproc/src/hough.cpp:        a = -ttab[max_n*2+1];
modules/imgproc/src/hough.cpp:        b = ttab[max_n*2];
modules/imgproc/src/hough.cpp:        if( fabs(a) > fabs(b) )
modules/imgproc/src/hough.cpp:            dy0 = cvRound( b*(1 << shift)/fabs(a) );
modules/imgproc/src/hough.cpp:            dx0 = cvRound( a*(1 << shift)/fabs(b) );
modules/imgproc/src/hough.cpp:        good_line = std::abs(line_end[1].x - line_end[0].x) >= lineLength ||
modules/imgproc/src/hough.cpp:                    std::abs(line_end[1].y - line_end[0].y) >= lineLength;
modules/imgproc/src/hough.cpp:                            int r = cvRound( j1 * ttab[n*2] + i1 * ttab[n*2+1] );
modules/imgproc/src/hough.cpp:    HoughLinesProbabilistic(image, (float)rho, (float)theta, threshold, cvRound(minLineLength), cvRound(maxGap), lines, INT_MAX);
modules/imgproc/src/hough.cpp:        HoughLinesProbabilistic( image, (float)rho, (float)theta,
modules/imgproc/src/_geom.h://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/_geom.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/_geom.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/_geom.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/_geom.h:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/corner.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgproc/src/corner.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgproc/src/corner.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgproc/src/corner.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgproc/src/corner.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgproc/src/corner.cpp:        double e = fabs(x);
modules/imgproc/src/corner.cpp:        if( e + fabs(y) < 1e-4 )
modules/imgproc/src/corner.cpp:            e = fabs(x);
modules/imgproc/src/corner.cpp:            if( e + fabs(y) < 1e-4 )
modules/imgproc/src/corner.cpp:                e = 1./(e + fabs(y) + FLT_EPSILON);
modules/imgproc/src/corner.cpp:        e = fabs(x);
modules/imgproc/src/corner.cpp:        if( e + fabs(y) < 1e-4 )
modules/imgproc/src/corner.cpp:            e = fabs(x);
modules/imgproc/src/corner.cpp:            if( e + fabs(y) < 1e-4 )
modules/imgproc/src/corner.cpp:                e = 1./(e + fabs(y) + FLT_EPSILON);
modules/python/python3/CMakeLists.txt:  ocv_module_disable(python3)
modules/python/CMakeLists.txt:  ocv_module_disable(python2)
modules/python/CMakeLists.txt:  ocv_module_disable(python3)
modules/python/CMakeLists.txt:  ocv_module_disable(python2)
modules/python/CMakeLists.txt:  ocv_module_disable(python3)
modules/python/test/ticket_6.py:        open("large.jpg", "w").write(urllib.urlopen("http://www.cs.ubc.ca/labs/lci/curious_george/img/ROS_bug_imgs/IMG_3560.jpg").read())
modules/python/test/goodfeatures.py:        # Check for repeatability
modules/python/test/transformations.py:# * Redistributions of source code must retain the above copyright
modules/python/test/transformations.py:# * Redistributions in binary form must reproduce the above copyright
modules/python/test/transformations.py:  Laboratory for Fluorescence Dynamics, University of California, Irvine
modules/python/test/transformations.py:     of vectors. W Kabsch. Acta Cryst. 1978. A34, 827-828.
modules/python/test/transformations.py:(9)  Closed-form solution of absolute orientation using unit quaternions.
modules/python/test/transformations.py:>>> qx = quaternion_about_axis(alpha, xaxis)
modules/python/test/transformations.py:>>> qy = quaternion_about_axis(beta, yaxis)
modules/python/test/transformations.py:>>> qz = quaternion_about_axis(gamma, zaxis)
modules/python/test/transformations.py:    i = numpy.where(abs(numpy.real(l) + 1.0) < 1e-8)[0]
modules/python/test/transformations.py:    i = numpy.where(abs(numpy.real(l) - 1.0) < 1e-8)[0]
modules/python/test/transformations.py:    """Return matrix to rotate about axis defined by point and direction.
modules/python/test/transformations.py:    i = numpy.where(abs(numpy.real(l) - 1.0) < 1e-8)[0]
modules/python/test/transformations.py:    i = numpy.where(abs(numpy.real(l) - 1.0) < 1e-8)[0]
modules/python/test/transformations.py:    if abs(direction[2]) > 1e-8:
modules/python/test/transformations.py:    elif abs(direction[1]) > 1e-8:
modules/python/test/transformations.py:        i = numpy.where(abs(numpy.real(l) - factor) < 1e-8)[0][0]
modules/python/test/transformations.py:    i = numpy.where(abs(numpy.real(l) - 1.0) < 1e-8)[0]
modules/python/test/transformations.py:    i = numpy.where(abs(numpy.real(l) - 1.0) < 1e-8)[0]
modules/python/test/transformations.py:        i = numpy.where(abs(numpy.real(l)) < 1e-8)[0]
modules/python/test/transformations.py:        i = numpy.where(abs(numpy.real(l)) < 1e-8)[0]
modules/python/test/transformations.py:        i = numpy.where(abs(numpy.real(l)) > 1e-8)[0]
modules/python/test/transformations.py:    if abs(numpy.dot(normal, direction)) > 1e-6:
modules/python/test/transformations.py:    i = numpy.where(abs(numpy.real(l) - 1.0) < 1e-4)[0]
modules/python/test/transformations.py:    i = numpy.where(abs(numpy.real(l) - 1.0) < 1e-8)[0]
modules/python/test/transformations.py:        angles : list of Euler angles about static x, y, z axes
modules/python/test/transformations.py:    if abs(M[3, 3]) < _EPS:
modules/python/test/transformations.py:    if any(abs(M[:3, 3]) > _EPS):
modules/python/test/transformations.py:        angles : list of Euler angles about static x, y, z axes
modules/python/test/transformations.py:    minimized according to the algorithm by W. Kabsch [8]. Otherwise the
modules/python/test/transformations.py:def quaternion_about_axis(angle, axis):
modules/python/test/transformations.py:    """Return quaternion for rotation about axis.
modules/python/test/transformations.py:    >>> q = quaternion_about_axis(0.123, (1, 0, 0))
modules/python/test/transformations.py:    if abs(abs(d) - 1.0) < _EPS:
modules/python/test/transformations.py:    if abs(angle) < _EPS:
modules/python/test/transformations.py:        Three independent random variables that are uniformly distributed
modules/python/test/transformations.py:        Three independent random variables that are uniformly distributed
modules/python/test/test.py:        absa0 = np.abs(a)
modules/python/test/test.py:        absa1 = cv2.absdiff(a, 0)
modules/python/test/test.py:        self.assertEqual(cv2.norm(absa1, absa0, cv2.NORM_INF), 0)
modules/python/test/test.py:        self.assertTrue(abs(a - b) <= angle_delta or
modules/python/test/test.py:                        abs(360 - abs(a - b)) <= angle_delta)
modules/python/test/test.py:        self.assertLessEqual(abs(a[0] - b[0]), delta)
modules/python/test/test.py:        self.assertLessEqual(abs(a[1] - b[1]), delta)
modules/python/test/test.py:        self.assertLessEqual(abs(mr - mr0), 5)
modules/python/test/camera_calibration.py:    def __abs__(self):
modules/python/test/camera_calibration.py:        return self * (1.0 / abs(self))
modules/python/test/camera_calibration.py:        sq = numpy.sqrt(abs(det))
modules/python/test/camera_calibration.py:    return p.dot(plane) * (1. / abs(plane))
modules/python/test/camera_calibration.py:        return abs((x2 - x1) * (y1 - y0) - (x1 - x0) * (y2 - y1)) / math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
modules/python/src2/pycompat.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/python/src2/pycompat.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/python/src2/pycompat.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/python/src2/pycompat.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/python/src2/pycompat.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/python/src2/pycompat.hpp:// PyUnicode_AsUTF8 isn't available until Python 3.3
modules/python/src2/cv2.cpp:            // probably this is safe to do in such extreme case
modules/python/src2/cv2.cpp:    if (!PyCallable_Check(on_mouse)) {
modules/python/src2/cv2.cpp:        PyErr_SetString(PyExc_TypeError, "on_mouse must be callable");
modules/python/src2/cv2.cpp:    if (!PyCallable_Check(on_change)) {
modules/python/src2/cv2.cpp:        PyErr_SetString(PyExc_TypeError, "on_change must be callable");
modules/python/src2/cv2.cpp:               or -1 if the module keeps state in global variables. */
modules/python/src2/hdr_parser.py:        [<func name>, <return value C-type>, <list of modifiers>, <list of arguments>] (see above)
modules/python/src2/gen2.py:            methods_inits.write(m.get_tab_entry())
modules/python/src2/gen2.py:    def get_tab_entry(self):
modules/python/src2/gen2.py:            # add info about return value, if any, to all_cargs. if there non-void return value,
modules/python/src2/gen2.py:            self.code_ns_reg.write(func.get_tab_entry())
modules/python/src2/gen2.py:                    print("Generator error: unable to resolve base %s for %s"
modules/python/python2/CMakeLists.txt:  ocv_module_disable(python2)
modules/viz/CMakeLists.txt:  ocv_module_disable(viz)
modules/viz/test/tests_simple.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/viz/test/tests_simple.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/test/tests_simple.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/test/tests_simple.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/test/tests_simple.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/viz/test/tests_simple.cpp:    viz.setBackgroundMeshLab();
modules/viz/test/tests_simple.cpp:    viz.setBackgroundColor(Color::mlab());
modules/viz/test/tests_simple.cpp:    viz.setBackgroundMeshLab();
modules/viz/test/tests_simple.cpp:    viz.setBackgroundMeshLab();
modules/viz/test/tests_simple.cpp:    viz.setBackgroundMeshLab();
modules/viz/test/tests_simple.cpp:    viz.setBackgroundMeshLab();
modules/viz/test/tests_simple.cpp:    viz.setBackgroundMeshLab();
modules/viz/test/tests_simple.cpp:    viz.setBackgroundMeshLab();
modules/viz/test/test_viz3d.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/viz/test/test_viz3d.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/test/test_viz3d.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/test/test_viz3d.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/test/test_viz3d.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/viz/test/test_viz3d.cpp:    cv::viz::Viz3d viz("abc");
modules/viz/test/test_viz3d.cpp:    viz.setBackgroundMeshLab();
modules/viz/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/include/opencv2/viz/viz3d.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/include/opencv2/viz/viz3d.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/include/opencv2/viz/viz3d.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/include/opencv2/viz/viz3d.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/include/opencv2/viz/viz3d.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/include/opencv2/viz/viz3d.hpp:    //#error "Viz is in beta state now. Please define macro above to use it"
modules/viz/include/opencv2/viz/viz3d.hpp:            void setBackgroundMeshLab();
modules/viz/include/opencv2/viz/viz3d.hpp:            void setGlobalWarnings(bool enabled = false);
modules/viz/include/opencv2/viz/vizcore.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/include/opencv2/viz/vizcore.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/include/opencv2/viz/vizcore.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/include/opencv2/viz/vizcore.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/include/opencv2/viz/vizcore.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/include/opencv2/viz/vizcore.hpp:        //! Unregisters all Viz windows from internal database. After it 'getWindowByName()' will create new windows instead getting existing from the database.
modules/viz/include/opencv2/viz/widgets.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/include/opencv2/viz/widgets.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/include/opencv2/viz/widgets.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/include/opencv2/viz/widgets.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/include/opencv2/viz/widgets.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/include/opencv2/viz/widgets.hpp:        of merge won't have color at all. The class is suitable for merging large amount of similar
modules/viz/include/opencv2/viz/types.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/include/opencv2/viz/types.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/include/opencv2/viz/types.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/include/opencv2/viz/types.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/include/opencv2/viz/types.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/include/opencv2/viz/types.hpp:            static Color mlab();
modules/viz/include/opencv2/viz/types.hpp:inline cv::viz::Color cv::viz::Color::mlab()    { return Color(255, 128, 128); }
modules/viz/include/opencv2/viz/widget_accessor.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/include/opencv2/viz/widget_accessor.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/include/opencv2/viz/widget_accessor.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/include/opencv2/viz/widget_accessor.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/include/opencv2/viz/widget_accessor.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/include/opencv2/viz.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/include/opencv2/viz.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/include/opencv2/viz.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/include/opencv2/viz.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/include/opencv2/viz.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vizimpl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vizimpl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vizimpl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vizimpl.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vizimpl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vizimpl.hpp:    void setBackgroundMeshLab();
modules/viz/src/vizimpl.hpp:    mutable bool spin_once_state_;
modules/viz/src/widget.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/widget.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/widget.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/widget.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/widget.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/viz3d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/viz3d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/viz3d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/viz3d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/viz3d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/viz3d.cpp:void cv::viz::Viz3d::setBackgroundMeshLab() {impl_->setBackgroundMeshLab(); }
modules/viz/src/viz3d.cpp:void cv::viz::Viz3d::setGlobalWarnings(bool enabled) { vtkObject::SetGlobalWarningDisplay(enabled ? 1 : 0); }
modules/viz/src/vizcore.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vizcore.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vizcore.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vizcore.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vizcore.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vizimpl.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vizimpl.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vizimpl.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vizimpl.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vizimpl.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vizimpl.cpp:    setBackgroundMeshLab();
modules/viz/src/vizimpl.cpp:void cv::viz::Viz3d::VizImpl::setBackgroundMeshLab()
modules/viz/src/vizimpl.cpp:    // This is a hack around not being able to set Projection Matrix
modules/viz/src/clouds.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/clouds.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/clouds.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/clouds.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/clouds.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/clouds.cpp:    //if in future some need to replace color table with real scalars, then this can be done usine next calls:
modules/viz/src/clouds.cpp:    mapper->SetLookupTable(color_transfer);
modules/viz/src/vtk/vtkXYZWriter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkXYZWriter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkXYZWriter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkXYZWriter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkXYZWriter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkXYZWriter.cpp:        vtkErrorMacro(<< "Unable to open file: "<< this->FileName);
modules/viz/src/vtk/vtkCloudMatSink.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkCloudMatSink.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkCloudMatSink.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkCloudMatSink.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkCloudMatSink.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkImageMatSource.h://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkImageMatSource.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkImageMatSource.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkImageMatSource.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkImageMatSource.h:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkOBJWriter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkOBJWriter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkOBJWriter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkOBJWriter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkOBJWriter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkOBJWriter.cpp:        vtkErrorMacro(<< "Unable to open file: "<< this->FileName);
modules/viz/src/vtk/vtkXYZWriter.h://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkXYZWriter.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkXYZWriter.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkXYZWriter.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkXYZWriter.h:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkCloudMatSource.h://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkCloudMatSource.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkCloudMatSource.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkCloudMatSource.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkCloudMatSource.h:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkCloudMatSink.h://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkCloudMatSink.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkCloudMatSink.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkCloudMatSink.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkCloudMatSink.h:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkXYZReader.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkXYZReader.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkXYZReader.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkXYZReader.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkXYZReader.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkVizInteractorStyle.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkVizInteractorStyle.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:                 "          w, W   : switch to a wireframe-based representation (where available)\n"
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:                 "          s, S   : switch to a surface-based representation (where available)\n"
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:                 "          F5     : enable/disable fly mode (changes control style)\n"
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:    GrabFocus(EventCallbackCommand);
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:    GrabFocus(EventCallbackCommand);
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:    GrabFocus(EventCallbackCommand);
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:        GrabFocus(EventCallbackCommand);
modules/viz/src/vtk/vtkVizInteractorStyle.cpp:        GrabFocus(EventCallbackCommand);
modules/viz/src/vtk/vtkXYZReader.h://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkXYZReader.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkXYZReader.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkXYZReader.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkXYZReader.h:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkCloudMatSource.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkCloudMatSource.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkCloudMatSource.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkCloudMatSource.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkCloudMatSource.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkOBJWriter.h://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkOBJWriter.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkOBJWriter.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkOBJWriter.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkOBJWriter.h:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkImageMatSource.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkImageMatSource.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkImageMatSource.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkImageMatSource.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkImageMatSource.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkCocoaInteractorFix.mm: //   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkCocoaInteractorFix.mm: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkCocoaInteractorFix.mm: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkCocoaInteractorFix.mm: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkCocoaInteractorFix.mm: // and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkVizInteractorStyle.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkVizInteractorStyle.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkVizInteractorStyle.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkVizInteractorStyle.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkVizInteractorStyle.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkTrajectorySource.h://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkTrajectorySource.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkTrajectorySource.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkTrajectorySource.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkTrajectorySource.h:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/vtk/vtkTrajectorySource.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/vtk/vtkTrajectorySource.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/vtk/vtkTrajectorySource.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/vtk/vtkTrajectorySource.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/vtk/vtkTrajectorySource.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/shapes.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/shapes.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/shapes.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/shapes.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/shapes.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/types.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/viz/src/types.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/viz/src/types.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/viz/src/types.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/viz/src/types.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/viz/src/types.cpp:    principal_point_[0] = fabs(left-right) < epsilon ? window_size.width  * 0.5 : (left * window_size.width) / (left - right);
modules/viz/src/types.cpp:    principal_point_[1] = fabs(top-bottom) < epsilon ? window_size.height * 0.5 : (top * window_size.height) / (top - bottom);
modules/shape/test/test_shape.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/test/test_shape.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/test/test_shape.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/test/test_shape.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/test/test_shape.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/include/opencv2/shape.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/include/opencv2/shape.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/include/opencv2/shape.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/include/opencv2/shape.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/include/opencv2/shape.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/include/opencv2/shape/shape.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/include/opencv2/shape/shape.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/include/opencv2/shape/shape.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/include/opencv2/shape/shape.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/include/opencv2/shape/shape.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/include/opencv2/shape/shape_transformer.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/include/opencv2/shape/shape_transformer.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/include/opencv2/shape/shape_transformer.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/include/opencv2/shape/shape_transformer.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/include/opencv2/shape/shape_transformer.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/include/opencv2/shape/emdL1.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/include/opencv2/shape/emdL1.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/include/opencv2/shape/emdL1.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/include/opencv2/shape/emdL1.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/include/opencv2/shape/emdL1.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/include/opencv2/shape/hist_cost.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/include/opencv2/shape/hist_cost.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/include/opencv2/shape/hist_cost.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/include/opencv2/shape/hist_cost.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/include/opencv2/shape/hist_cost.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/include/opencv2/shape/shape_distance.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/include/opencv2/shape/shape_distance.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/include/opencv2/shape/shape_distance.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/include/opencv2/shape/shape_distance.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/include/opencv2/shape/shape_distance.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/include/opencv2/shape/shape_distance.hpp:    /** @brief Establish the number of angular bins for the Shape Context Descriptor used in the shape matching
modules/shape/include/opencv2/shape/shape_distance.hpp:    /** @brief Establish the number of radial bins for the Shape Context Descriptor used in the shape matching
modules/shape/include/opencv2/shape/shape_distance.hpp:    /** @brief This method sets the rank proportion (or fractional value) that establish the Kth ranked value of
modules/shape/src/haus_dis.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/haus_dis.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/haus_dis.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/haus_dis.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/haus_dis.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/emdL1_def.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/emdL1_def.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/emdL1_def.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/emdL1_def.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/emdL1_def.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/emdL1_def.hpp:    int nNBV; // number of Non-Basic Variables (NBV)
modules/shape/src/emdL1_def.hpp:    // auxiliary variables for searching a new loop
modules/shape/src/precomp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/precomp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/precomp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/precomp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/precomp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/aff_trans.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/aff_trans.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/aff_trans.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/aff_trans.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/aff_trans.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/sc_dis.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/sc_dis.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/sc_dis.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/sc_dis.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/sc_dis.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/sc_dis.cpp:    // Initializing some variables //
modules/shape/src/sc_dis.cpp:            if (fabs(umin-usubmin) > LOWV) //if( umin < usubmin )
modules/shape/src/sc_dis.cpp:                if (fabs(umin-usubmin) > LOWV)
modules/shape/src/emdL1.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/emdL1.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/emdL1.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/emdL1.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/emdL1.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/emdL1.cpp:        bUpward = (r<binsDim1-1) && (fabs(dFlow+d2s[c+1]) > fabs(dFlow+d1s[r+1]));	// Move upward or right
modules/shape/src/emdL1.cpp:        // modify basic variables, record BV and related values
modules/shape/src/emdL1.cpp:        pBV->flow = fabs(dFlow);
modules/shape/src/emdL1.cpp:        pBV->flow = fabs(dFlow);
modules/shape/src/emdL1.cpp:                f1 = (i1<(binsDim1-1))?fabs(dFlow+d1s[i1+1]):std::numeric_limits<float>::max();
modules/shape/src/emdL1.cpp:                f2 = (i2<(binsDim2-1))?fabs(dFlow+d2s[i2+1]):std::numeric_limits<float>::max();
modules/shape/src/emdL1.cpp:                f3 = (i3<(binsDim3-1))?fabs(dFlow+d3s[i3+1]):std::numeric_limits<float>::max();
modules/shape/src/emdL1.cpp:                pBV->flow = fabs(dFlow);
modules/shape/src/hist_cost.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/hist_cost.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/hist_cost.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/hist_cost.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/hist_cost.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/scd_def.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/scd_def.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/scd_def.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/scd_def.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/scd_def.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/tps_trans.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/shape/src/tps_trans.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/shape/src/tps_trans.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/shape/src/tps_trans.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/shape/src/tps_trans.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/shape/src/tps_trans.cpp:    transformCost=fabs(Q.at<float>(0,0)*Q.at<float>(1,1));//fabs(mean(Q.diag(0))[0]);//std::max(Q.at<float>(0,0),Q.at<float>(1,1));
modules/core/doc/intro.markdown:libraries. The following modules are available:
modules/core/doc/intro.markdown:    geometrical image transformations (resize, affine and perspective warping, generic table-based
modules/core/doc/intro.markdown:-   **highgui** - an easy-to-use interface to simple UI capabilities.
modules/core/doc/intro.markdown:You see that the use of Mat and other basic structures is simple. But what about high-level classes
modules/core/doc/intro.markdown:Some notable exceptions from this scheme are cv::mixChannels, cv::RNG::fill, and a few other
modules/core/doc/intro.markdown:functions and methods. They are not able to allocate the output array, so you have to do this in
modules/core/doc/intro.markdown:complex interpolation (bi-cubic, Lanczos) can produce values out of the available range. If you just
modules/core/doc/intro.markdown:resemble standard C++ cast operations. See below the implementation of the formula provided above:
modules/core/doc/intro.markdown:Templates is a great feature of C++ that enables implementation of very powerful, efficient and yet
modules/core/doc/intro.markdown:Matlab that do not have templates at all or have limited template capabilities, the current OpenCV
modules/core/doc/intro.markdown:-   a tuple of several elements where all elements have the same type (one of the above). An array
modules/core/doc/intro.markdown:not care of those intermediate types (and you should not declare variables of those types
modules/core/doc/intro.markdown:boolean variable).
modules/core/doc/intro.markdown:### Multi-threading and Re-enterability
modules/core/doc/intro.markdown:The current OpenCV implementation is fully re-enterable. That is, the same function, the same
modules/core/doc/cuda.markdown:The OpenCV CUDA module is a set of classes and functions to utilize CUDA computational capabilities.
modules/core/doc/cuda.markdown:To enable CUDA support, configure OpenCV using CMake with WITH\_CUDA=ON . When the flag is set and
modules/core/doc/cuda.markdown:code, except for cuda::getCudaEnabledDeviceCount(). The latter function returns zero GPU count in
modules/core/doc/cuda.markdown:not require the CUDA Toolkit installed. Therefore, using the cuda::getCudaEnabledDeviceCount()
modules/core/doc/cuda.markdown:NVIDIA\* compiler enables generating binary code (cubin and fatbin) and intermediate code (PTX).
modules/core/doc/cuda.markdown:set of capabilities or features. Depending on the selected virtual platform, some of the
modules/core/doc/cuda.markdown:instructions are emulated or disabled, even if the real hardware supports all the features.
modules/core/doc/cuda.markdown:compiler. When the target GPU has a compute capability (CC) lower than the PTX code, JIT fails. By
modules/core/doc/cuda.markdown:   Binaries for compute capabilities 1.3 and 2.0 (controlled by CUDA\_ARCH\_BIN in CMake)
modules/core/doc/cuda.markdown:   PTX code for compute capabilities 1.1 and 1.3 (controlled by CUDA\_ARCH\_PTX in CMake)
modules/core/doc/cuda.markdown:PTX for 1.1 is JIT'ed. For devices with CC 1.0, no code is available and the functions throw
modules/core/CMakeLists.txt:  ocv_warnings_disable(CMAKE_CXX_FLAGS -Wundef -Wenum-compare -Wunused-function -Wshadow)
modules/core/misc/java/test/CoreTest.java:        Core.absdiff(gray128, gray255, dst);
modules/core/misc/java/test/CoreTest.java:        assertTrue(Runtime.getRuntime().availableProcessors() <= cpus);
modules/core/misc/java/test/CoreTest.java:        Mat labels = new Mat();
modules/core/misc/java/test/CoreTest.java:        Core.kmeans(data, 2, labels, criteria, 1, Core.KMEANS_PP_CENTERS);
modules/core/misc/java/test/CoreTest.java:        labels.get(0, 0, first_center);
modules/core/misc/java/test/CoreTest.java:        Mat expected_labels = new Mat(4, 1, CvType.CV_32S) {
modules/core/misc/java/test/CoreTest.java:        assertMatEqual(expected_labels, labels);
modules/core/misc/java/test/CoreTest.java:        Mat labels = new Mat();
modules/core/misc/java/test/CoreTest.java:        Core.kmeans(data, 2, labels, criteria, 6, Core.KMEANS_RANDOM_CENTERS, centers);
modules/core/misc/java/test/CoreTest.java:        labels.get(0, 0, first_center);
modules/core/misc/java/test/CoreTest.java:        Mat expected_labels = new Mat(4, 1, CvType.CV_32S) {
modules/core/misc/java/test/CoreTest.java:        assertMatEqual(expected_labels, labels);
modules/core/misc/java/test/RotatedRectTest.java:                Math.abs((p[0].x + p[2].x) / 2 - center.x) + Math.abs((p[0].y + p[2].y) / 2 - center.y) < EPS);
modules/core/misc/java/test/RotatedRectTest.java:                Math.abs((p[1].x + p[3].x) / 2 - center.x) + Math.abs((p[1].y + p[3].y) / 2 - center.y) < EPS);
modules/core/misc/java/test/RotatedRectTest.java:                Math.abs((p[1].x - p[0].x) * (p[2].x - p[1].x) +
modules/core/misc/java/test/RotatedRectTest.java:                Math.abs((p[2].x - p[1].x) * (p[3].x - p[2].x) +
modules/core/misc/java/test/RotatedRectTest.java:                Math.abs((p[3].x - p[2].x) * (p[0].x - p[3].x) +
modules/core/misc/java/test/RotatedRectTest.java:                Math.abs((p[0].x - p[3].x) * (p[1].x - p[0].x) +
modules/core/misc/java/test/RotatedRectTest.java:                Math.abs((p[1].x - p[0].x) * (p[1].x - p[0].x) +
modules/core/misc/java/test/RotatedRectTest.java:                Math.abs((p[1].x - p[2].x) * (p[1].x - p[2].x) +
modules/core/misc/java/test/RotatedRectTest.java:        assertTrue("Angle of the vector 21 with the axes", Math.abs((p[2].x - p[1].x) / size.width - Math.cos(angle * Math.PI / 180)) < EPS);
modules/core/misc/java/src/cpp/core_manual.hpp:CV_EXPORTS_W void absdiff(InputArray src1, Scalar src2, OutputArray dst);
modules/core/misc/java/src/java/core+MatOfFloat4.java:        Float ab[] = lb.toArray(new Float[0]);
modules/core/misc/java/src/java/core+MatOfFloat4.java:        float a[] = new float[ab.length];
modules/core/misc/java/src/java/core+MatOfFloat4.java:        for(int i=0; i<ab.length; i++)
modules/core/misc/java/src/java/core+MatOfFloat4.java:            a[i] = ab[i];
modules/core/misc/java/src/java/core+MatOfFloat4.java:        Float ab[] = new Float[a.length];
modules/core/misc/java/src/java/core+MatOfFloat4.java:            ab[i] = a[i];
modules/core/misc/java/src/java/core+MatOfFloat4.java:        return Arrays.asList(ab);
modules/core/misc/java/src/java/core+MatOfInt.java:        Integer ab[] = lb.toArray(new Integer[0]);
modules/core/misc/java/src/java/core+MatOfInt.java:        int a[] = new int[ab.length];
modules/core/misc/java/src/java/core+MatOfInt.java:        for(int i=0; i<ab.length; i++)
modules/core/misc/java/src/java/core+MatOfInt.java:            a[i] = ab[i];
modules/core/misc/java/src/java/core+MatOfInt.java:        Integer ab[] = new Integer[a.length];
modules/core/misc/java/src/java/core+MatOfInt.java:            ab[i] = a[i];
modules/core/misc/java/src/java/core+MatOfInt.java:        return Arrays.asList(ab);
modules/core/misc/java/src/java/core+MatOfByte.java:        Byte ab[] = lb.toArray(new Byte[0]);
modules/core/misc/java/src/java/core+MatOfByte.java:        byte a[] = new byte[ab.length];
modules/core/misc/java/src/java/core+MatOfByte.java:        for(int i=0; i<ab.length; i++)
modules/core/misc/java/src/java/core+MatOfByte.java:            a[i] = ab[i];
modules/core/misc/java/src/java/core+MatOfByte.java:        Byte ab[] = new Byte[a.length];
modules/core/misc/java/src/java/core+MatOfByte.java:            ab[i] = a[i];
modules/core/misc/java/src/java/core+MatOfByte.java:        return Arrays.asList(ab);
modules/core/misc/java/src/java/core+Mat.java:    protected void finalize() throws Throwable {
modules/core/misc/java/src/java/core+MatOfFloat6.java:        Float ab[] = lb.toArray(new Float[0]);
modules/core/misc/java/src/java/core+MatOfFloat6.java:        float a[] = new float[ab.length];
modules/core/misc/java/src/java/core+MatOfFloat6.java:        for(int i=0; i<ab.length; i++)
modules/core/misc/java/src/java/core+MatOfFloat6.java:            a[i] = ab[i];
modules/core/misc/java/src/java/core+MatOfFloat6.java:        Float ab[] = new Float[a.length];
modules/core/misc/java/src/java/core+MatOfFloat6.java:            ab[i] = a[i];
modules/core/misc/java/src/java/core+MatOfFloat6.java:        return Arrays.asList(ab);
modules/core/misc/java/src/java/core+MatOfDouble.java:        Double ab[] = lb.toArray(new Double[0]);
modules/core/misc/java/src/java/core+MatOfDouble.java:        double a[] = new double[ab.length];
modules/core/misc/java/src/java/core+MatOfDouble.java:        for(int i=0; i<ab.length; i++)
modules/core/misc/java/src/java/core+MatOfDouble.java:            a[i] = ab[i];
modules/core/misc/java/src/java/core+MatOfDouble.java:        Double ab[] = new Double[a.length];
modules/core/misc/java/src/java/core+MatOfDouble.java:            ab[i] = a[i];
modules/core/misc/java/src/java/core+MatOfDouble.java:        return Arrays.asList(ab);
modules/core/misc/java/src/java/core+MatOfInt4.java:        Integer ab[] = lb.toArray(new Integer[0]);
modules/core/misc/java/src/java/core+MatOfInt4.java:        int a[] = new int[ab.length];
modules/core/misc/java/src/java/core+MatOfInt4.java:        for(int i=0; i<ab.length; i++)
modules/core/misc/java/src/java/core+MatOfInt4.java:            a[i] = ab[i];
modules/core/misc/java/src/java/core+MatOfInt4.java:        Integer ab[] = new Integer[a.length];
modules/core/misc/java/src/java/core+MatOfInt4.java:            ab[i] = a[i];
modules/core/misc/java/src/java/core+MatOfInt4.java:        return Arrays.asList(ab);
modules/core/misc/java/src/java/core+MatOfFloat.java:        Float ab[] = lb.toArray(new Float[0]);
modules/core/misc/java/src/java/core+MatOfFloat.java:        float a[] = new float[ab.length];
modules/core/misc/java/src/java/core+MatOfFloat.java:        for(int i=0; i<ab.length; i++)
modules/core/misc/java/src/java/core+MatOfFloat.java:            a[i] = ab[i];
modules/core/misc/java/src/java/core+MatOfFloat.java:        Float ab[] = new Float[a.length];
modules/core/misc/java/src/java/core+MatOfFloat.java:            ab[i] = a[i];
modules/core/misc/java/src/java/core+MatOfFloat.java:        return Arrays.asList(ab);
modules/core/misc/java/src/java/core+KeyPoint.java:     * Computed orientation of the keypoint (-1 if not applicable).
modules/core/test/test_hal_core.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_hal_core.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_hal_core.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_hal_core.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/test/test_hal_core.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_rand.cpp:    static float chi2_tab95[] = {
modules/core/test/test_rand.cpp:        return chi2_tab95[n-1];
modules/core/test/test_rand.cpp:    CV_Assert( fabs(1./sum - scale) < FLT_EPSILON );
modules/core/test/test_rand.cpp:                while( abs(a-b) <= 1 );
modules/core/test/test_rand.cpp:                           "(got %g vs probable maximum %g) on channel %d/%d\n",
modules/core/test/test_rand.cpp:            if( fabs(V - V0) > 0.3*fabs(V0) )
modules/core/test/test_main.cpp:#  pragma warning(disable:4447) // Disable warning 'main' signature found without threading model
modules/core/test/test_concatenation.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_concatenation.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_concatenation.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_concatenation.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/test/test_concatenation.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/ocl/test_channels.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/ocl/test_channels.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/ocl/test_channels.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/ocl/test_channels.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/test/ocl/test_channels.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/ocl/test_matrix_operation.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/ocl/test_matrix_operation.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/ocl/test_matrix_operation.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/ocl/test_matrix_operation.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/test/ocl/test_matrix_operation.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/ocl/test_gemm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/ocl/test_gemm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/ocl/test_gemm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/ocl/test_gemm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/test/ocl/test_gemm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/ocl/test_dft.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/ocl/test_dft.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/ocl/test_dft.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/ocl/test_dft.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/test/ocl/test_dft.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/ocl/test_arithm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/ocl/test_arithm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/ocl/test_arithm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/ocl/test_arithm.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/test/ocl/test_arithm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/ocl/test_arithm.cpp:        OCL_OFF(cv::absdiff(src1_roi, src2_roi, dst1_roi));
modules/core/test/ocl/test_arithm.cpp:        OCL_ON(cv::absdiff(usrc1_roi, usrc2_roi, udst1_roi));
modules/core/test/ocl/test_arithm.cpp:        OCL_OFF(cv::absdiff(src1_roi, val, dst1_roi));
modules/core/test/ocl/test_arithm.cpp:        OCL_ON(cv::absdiff(usrc1_roi, val, udst1_roi));
modules/core/test/ocl/test_arithm.cpp:    return std::abs(actual - expected) < eps*(1 + std::abs(actual));
modules/core/test/test_io.cpp:            if( fabs(*(float*)v1 - *(float*)v2) > eps*(fabs(*(float*)v2) + 1) )
modules/core/test/test_io.cpp:        else if( fabs(*(double*)v1 - *(double*)v2) > eps*(fabs(*(double*)v2) + 1) )
modules/core/test/test_io.cpp:               fabs(real_real - test_real) > DBL_EPSILON*(fabs(test_real)+1) ||
modules/core/test/test_io.cpp:               fabs((double)tl[0] - 0.0000000000001) >= DBL_EPSILON ||
modules/core/test/test_io.cpp:               fabs((double)tl[2] - CV_PI) >= DBL_EPSILON ||
modules/core/test/test_umat.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_umat.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_umat.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_umat.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/test/test_umat.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_umat.cpp:        isOpenCL_enabled = cv::ocl::useOpenCL();
modules/core/test/test_umat.cpp:        cv::ocl::setUseOpenCL(isOpenCL_enabled);
modules/core/test/test_umat.cpp:    bool isOpenCL_enabled;
modules/core/test/test_umat.cpp:        std::cout << "OpenCL is not enabled. Skip test" << std::endl;
modules/core/test/test_umat.cpp:        std::cout << "OpenCL is not enabled. Skip test" << std::endl;
modules/core/test/test_umat.cpp:        std::cout << "OpenCL is not enabled. Skip test" << std::endl;
modules/core/test/test_umat.cpp:// VP: this test (and probably others from same_behaviour series) is not valid in my opinion.
modules/core/test/test_umat.cpp:// Disabled due to failure in VS 2015:
modules/core/test/test_umat.cpp://  C++11 is enabled by default ==>
modules/core/test/test_lpsolver.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_lpsolver.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_lpsolver.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_lpsolver.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/test/test_lpsolver.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_lpsolver.cpp:TEST(DISABLED_Core_LPSolver, regression_absolutely_unfeasible){
modules/core/test/test_lpsolver.cpp:    //trivial absolutely unfeasible example
modules/core/test/test_lpsolver.cpp:    ASSERT_LT(fabs(z.dot(A) - 1), DBL_EPSILON);
modules/core/test/test_lpsolver.cpp:    ASSERT_LT(fabs(z.dot(A) - 1), DBL_EPSILON);
modules/core/test/test_math.cpp:        if( fabs(power-1./3) <= DBL_EPSILON && test_mat[INPUT][0].depth() == CV_32F )
modules/core/test/test_math.cpp:                b.at<float>(i,0) = (float)fabs(cvCbrt(a.at<float>(i,0)));
modules/core/test/test_math.cpp:                    b.at<float>(i,j) = (float)fabs(cv::cubeRoot(a.at<float>(i,j)));
modules/core/test/test_math.cpp:    int ipower = cvRound(power), apower = abs(ipower);
modules/core/test/test_math.cpp:                        val = pow( fabs(val), power );
modules/core/test/test_math.cpp:                        val = pow( fabs(val), power );
modules/core/test/test_math.cpp:    int tabc_flag;
modules/core/test/test_math.cpp:    tabc_flag = 0;
modules/core/test/test_math.cpp:    tabc_flag = cvtest::randInt(rng) & 7;
modules/core/test/test_math.cpp:    switch( tabc_flag & (CV_GEMM_A_T|CV_GEMM_B_T) )
modules/core/test/test_math.cpp:    else if( !(tabc_flag & CV_GEMM_C_T) )
modules/core/test/test_math.cpp:           test_array[INPUT][4], beta, test_array[OUTPUT][0], tabc_flag );
modules/core/test/test_math.cpp:             beta, test_mat[REF_OUTPUT][0], tabc_flag );
modules/core/test/test_math.cpp:        double max_val = fabs(a0[i*step + i]);
modules/core/test/test_math.cpp:            t = fabs(a0[j*step + i]);
modules/core/test/test_math.cpp:        normval = fabs(normval - aii);
modules/core/test/test_math.cpp:        return fabs(lhs.real() - rhs.real()) > fabs(rhs.real())*FLT_EPSILON ? lhs.real() < rhs.real() : lhs.imag() < rhs.imag();
modules/core/test/test_math.cpp:                    if( fabs(r[j].imag()) < DBL_EPSILON )
modules/core/test/test_math.cpp:                        s += fabs(ar1[j]);
modules/core/test/test_math.cpp:                        div += fabs(ar1[j] - ar2[j]);
modules/core/test/test_math.cpp:                s += fabs(r[j].real()) + fabs(r[j].imag());
modules/core/test/test_math.cpp:        if (fabs(re - v[0]) < 1e-6 && fabs(im - v[1]) < 1e-6)
modules/core/test/test_math.cpp:        Mat diff = abs(anglesInDegrees - resInDeg);
modules/core/test/test_math.cpp:        Mat labels;
modules/core/test/test_math.cpp:                    kmeans(data, K, labels, TermCriteria(TermCriteria::MAX_ITER+TermCriteria::EPS, 30, 0),
modules/core/test/test_math.cpp:                    kmeans(data, K, labels, TermCriteria(TermCriteria::MAX_ITER+TermCriteria::EPS, 30, 0),
modules/core/test/test_math.cpp:                    int l = labels.at<int>(i);
modules/core/test/test_math.cpp:            std::cout << labels << std::endl;
modules/core/test/test_math.cpp:    cv::absdiff(gold, actual, diff);
modules/core/test/test_math.cpp:    cv::absdiff(goldMean, actualMean.reshape(0,1), meanDiff);
modules/core/test/test_math.cpp:    cv::absdiff(gold, actual, diff);
modules/core/test/test_math.cpp:    cv::absdiff(goldMean, actualMean.reshape(0,1), meanDiff);
modules/core/test/test_math.cpp:                for( int k = 0; k < std::abs(ipower); k++ )
modules/core/test/test_math.cpp:                ASSERT_LT(fabs(r - r0), eps);
modules/core/test/test_intrin.cpp:    TheTest & test_sqrt_abs()
modules/core/test/test_intrin.cpp:        Data<R> resB = v_sqrt(a), resC = v_invsqrt(a), resE = v_abs(d);
modules/core/test/test_intrin.cpp:            EXPECT_FLOAT_EQ((float)abs(dataA[i]), (float)resE[i]);
modules/core/test/test_intrin.cpp:    TheTest & test_absdiff()
modules/core/test/test_intrin.cpp:        Data<Ru> resC = v_absdiff(a, b);
modules/core/test/test_intrin.cpp:    TheTest & test_float_absdiff()
modules/core/test/test_intrin.cpp:        Data<R> resC = v_absdiff(a, b);
modules/core/test/test_intrin.cpp:        .test_absdiff()
modules/core/test/test_intrin.cpp:        .test_absdiff()
modules/core/test/test_intrin.cpp:        .test_absdiff()
modules/core/test/test_intrin.cpp:        .test_absdiff()
modules/core/test/test_intrin.cpp:        .test_absdiff()
modules/core/test/test_intrin.cpp:        .test_absdiff()
modules/core/test/test_intrin.cpp:        .test_sqrt_abs()
modules/core/test/test_intrin.cpp:        .test_float_absdiff()
modules/core/test/test_intrin.cpp:        .test_sqrt_abs()
modules/core/test/test_intrin.cpp:        .test_float_absdiff()
modules/core/test/test_eigen.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_eigen.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_eigen.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_eigen.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/test/test_eigen.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_ptr.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_ptr.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_ptr.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_ptr.cpp:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/test/test_ptr.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_ptr.cpp:struct SpeciallyDeletable
modules/core/test/test_ptr.cpp:    SpeciallyDeletable() : deleted(false)
modules/core/test/test_ptr.cpp:void DefaultDeleter<SpeciallyDeletable>::operator()(SpeciallyDeletable * obj) const
modules/core/test/test_ptr.cpp:    SpeciallyDeletable sd;
modules/core/test/test_rotatedrect.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_rotatedrect.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_rotatedrect.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_rotatedrect.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/test/test_rotatedrect.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_conjugate_gradient.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_conjugate_gradient.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_conjugate_gradient.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_conjugate_gradient.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/test/test_conjugate_gradient.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_conjugate_gradient.cpp:    ASSERT_TRUE(std::abs(res-etalon_res)<tol);
modules/core/test/test_conjugate_gradient.cpp:        ASSERT_TRUE(std::abs((*it1)-(*it2))<tol);
modules/core/test/test_operations.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_operations.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_operations.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_operations.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/test/test_operations.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_operations.cpp:        CHECK_DIFF(abs(negf), -negf);
modules/core/test/test_operations.cpp:        CHECK_DIFF(abs(posf - posf2), -negf);
modules/core/test/test_operations.cpp:        CHECK_DIFF(abs(negi), -(negi & negi));
modules/core/test/test_operations.cpp:        CV_Assert( fabs(d - (-0.0262)) <= 0.001 );
modules/core/test/test_arithm.cpp:        absdiff(src[0], src[1], dst);
modules/core/test/test_arithm.cpp:        absdiff(src[0], gamma, dst);
modules/core/test/test_arithm.cpp:                ((float*)dptr)[j] = (float)std::log(fabs(((const float*)sptr)[j]));
modules/core/test/test_arithm.cpp:                ((double*)dptr)[j] = std::log(fabs(((const double*)sptr)[j]));
modules/core/test/test_countnonzero.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_countnonzero.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_countnonzero.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_countnonzero.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/test/test_countnonzero.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_countnonzero.cpp:        case CV_8S: { if (!src.at<char>(i, j)) {src.at<char>(i, j) = cv::randu<uchar>() - 128; n += abs(sign(src.at<char>(i, j)));} break; }
modules/core/test/test_countnonzero.cpp:        case CV_16S: { if (!src.at<short>(i, j)) {src.at<short>(i, j) = cv::randu<short>(); n += abs(sign(src.at<short>(i, j)));} break; }
modules/core/test/test_countnonzero.cpp:        case CV_32S: { if (!src.at<int>(i, j)) {src.at<int>(i, j) = cv::randu<int>(); n += abs(sign(src.at<int>(i, j)));} break; }
modules/core/test/test_countnonzero.cpp:        case CV_32F: { if (fabs(src.at<float>(i, j)) <= eps_32) {src.at<float>(i, j) = cv::randu<float>(); n += (fabs(src.at<float>(i, j)) > eps_32);} break; }
modules/core/test/test_countnonzero.cpp:        case CV_64F: { if (fabs(src.at<double>(i, j)) <= eps_64) {src.at<double>(i, j) = cv::randu<double>(); n += (fabs(src.at<double>(i, j)) > eps_64);} break; }
modules/core/test/test_countnonzero.cpp:            else if (current_type == CV_8S) result += abs(sign(src.at<char>(i, j)));
modules/core/test/test_countnonzero.cpp:            else if (current_type == CV_16S) result += abs(sign(src.at<short>(i, j)));
modules/core/test/test_countnonzero.cpp:            else if (current_type == CV_32S) result += abs(sign(src.at<int>(i, j)));
modules/core/test/test_countnonzero.cpp:            else if (current_type == CV_32F) result += (fabs(src.at<float>(i, j)) > eps_32);
modules/core/test/test_countnonzero.cpp:            else result += (fabs(src.at<double>(i, j)) > eps_64);
modules/core/test/test_misc.cpp:  absdiff(t, u, d);
modules/core/test/test_downhill_simplex.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/test/test_downhill_simplex.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/test/test_downhill_simplex.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/test/test_downhill_simplex.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/test/test_downhill_simplex.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/test/test_downhill_simplex.cpp:    ASSERT_TRUE(std::abs(res-etalon_res)<tol);
modules/core/test/test_downhill_simplex.cpp:        ASSERT_TRUE(std::abs((*it1)-(*it2))<tol);
modules/core/test/test_mat.cpp:    absdiff( opRes,dst,diff );
modules/core/test/test_mat.cpp:                    absdiff(rPCA.eigenvectors, subEvec, tmp);
modules/core/test/test_mat.cpp:        err = cvtest::norm(cv::abs(ocvPrjTestPoints), cv::abs(rPrjTestPoints.t()), CV_RELATIVE_L2 );
modules/core/test/test_mat.cpp:            err = cvtest::norm(cv::abs(rvPrjTestPoints.rowRange(0,maxComponents)), cv::abs(rPrjTestPoints.t()), CV_RELATIVE_L2 );
modules/core/test/test_mat.cpp:            err = cvtest::norm(cv::abs(rvPrjTestPoints), cv::abs(rPrjTestPoints.colRange(0,cPCA.eigenvectors.rows).t()), CV_RELATIVE_L2 );
modules/core/test/test_mat.cpp:        err = cvtest::norm(cv::abs(prjTestPoints), cv::abs(rPrjTestPoints.t()), CV_RELATIVE_L2 );
modules/core/test/test_mat.cpp:        if( fabs(norm0 - _norm0) > fabs(_norm0)*eps ||
modules/core/test/test_mat.cpp:           fabs(norm1 - _norm1) > fabs(_norm1)*eps ||
modules/core/test/test_mat.cpp:           fabs(norm2 - _norm2) > fabs(_norm2)*eps )
modules/core/test/test_mat.cpp:            if( val1 != val0 || val2 != val0 || fabs(val3 - val0*2) > fabs(val0*2)*FLT_EPSILON )
modules/core/test/test_mat.cpp:    double dataSize0 = ((double)m.hdr->pool.size() + (double)m.hdr->hashtab.size()*sizeof(size_t))*1e-6;
modules/core/test/test_mat.cpp:    double dataSize1 = ((double)m.hdr->pool.size() + (double)m.hdr->hashtab.size()*sizeof(size_t))*1e-6;
modules/core/include/opencv2/core/ippasync.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/ippasync.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/ippasync.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/ippasync.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/ippasync.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/ippasync.hpp:    -   **HPP_ACCEL_TYPE_GPU** - accelerated by GPU programmable units or fixed-function
modules/core/include/opencv2/core/ippasync.hpp:    -   **HPP_ACCEL_TYPE_ANY** - any acceleration or no acceleration available.
modules/core/include/opencv2/core/cuda.inl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda.inl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda.inl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda.inl.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda.inl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda.inl.hpp:    CV_Assert( device_id >= 0 && device_id < getCudaEnabledDeviceCount() );
modules/core/include/opencv2/core/opengl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/opengl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/opengl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/opengl.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/opengl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/opengl.hpp:This section describes OpenGL interoperability.
modules/core/include/opencv2/core/opengl.hpp:To enable OpenGL support, configure OpenCV using CMake with WITH_OPENGL=ON . Currently OpenGL is
modules/core/include/opencv2/core/opengl.hpp:    Creates empty ogl::Buffer object, creates ogl::Buffer object from existed buffer ( abufId
modules/core/include/opencv2/core/opengl.hpp:    @param abufId Buffer object name.
modules/core/include/opencv2/core/opengl.hpp:    Buffer(int arows, int acols, int atype, unsigned int abufId, bool autoRelease = false);
modules/core/include/opencv2/core/opengl.hpp:    @param abufId Buffer object name.
modules/core/include/opencv2/core/opengl.hpp:    Buffer(Size asize, int atype, unsigned int abufId, bool autoRelease = false);
modules/core/include/opencv2/core/opengl.hpp://///////////////// CL-GL Interoperability Functions ///////////////////
modules/core/include/opencv2/core/opengl.hpp:/** @brief Sets a CUDA device and initializes it for the current thread with OpenGL interoperability.
modules/core/include/opencv2/core/saturate.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/saturate.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/saturate.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/saturate.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/saturate.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cvdef.h://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cvdef.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cvdef.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cvdef.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cvdef.h:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cvdef.h:#undef abs
modules/core/include/opencv2/core/cvdef.h:/** @brief Available CPU features.
modules/core/include/opencv2/core/private.cuda.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/private.cuda.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/private.cuda.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/private.cuda.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/private.cuda.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/private.cuda.hpp:#    error "OpenCV CUDA module doesn't support NVIDIA compute capability 1.0"
modules/core/include/opencv2/core/private.cuda.hpp:static inline void throw_no_cuda() { CV_Error(cv::Error::StsNotImplemented, "The called functionality is disabled for current build or platform"); }
modules/core/include/opencv2/core/va_intel.hpp:This section describes Intel VA-API/OpenCL (CL-VA) interoperability.
modules/core/include/opencv2/core/va_intel.hpp:To enable CL-VA interoperability support, configure OpenCV using CMake with WITH_VA_INTEL=ON . Currently VA-API is
modules/core/include/opencv2/core/va_intel.hpp:have to specify the path(s) to MSS components for cmake in environment variables: VA_INTEL_MSDK_ROOT for Media SDK
modules/core/include/opencv2/core/va_intel.hpp:To use CL-VA interoperability you should first create VADisplay (libva), and then call initializeContextFromVA()
modules/core/include/opencv2/core/va_intel.hpp:function to create OpenCL context and set up interoperability.
modules/core/include/opencv2/core/va_intel.hpp://///////////////// CL-VA Interoperability Functions ///////////////////
modules/core/include/opencv2/core/va_intel.hpp:@param display    - VADisplay for which CL interop should be established.
modules/core/include/opencv2/core/va_intel.hpp:@param tryInterop - try to set up for interoperability, if true; set up for use slow copy if false.
modules/core/include/opencv2/core/cvstd.inl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cvstd.inl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cvstd.inl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cvstd.inl.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cvstd.inl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cvstd.inl.hpp:#pragma warning( disable: 4127 )
modules/core/include/opencv2/core/wimage.hpp://  * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/wimage.hpp://  * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/wimage.hpp:// implied warranties of merchantability and fitness for a particular purpose
modules/core/include/opencv2/core/wimage.hpp:// liable for any direct, indirect, incidental, special, exemplary, or
modules/core/include/opencv2/core/wimage.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/wimage.hpp:    -# Easy access to OpenCV methods (which will access IPP if available)
modules/core/include/opencv2/core/wimage.hpp:// allocation and will use SSE if IPP is available.
modules/core/include/opencv2/core/wimage.hpp:// Doesn't care about source of data since using WImage
modules/core/include/opencv2/core/wimage.hpp:    // WImage is an abstract class with no other virtual methods so make the
modules/core/include/opencv2/core/wimage.hpp:    // WImageC is an abstract class with no other virtual methods so make the
modules/core/include/opencv2/core/mat.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/mat.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/mat.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/mat.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/mat.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/mat.hpp:    InputArray, it means that you can actually pass `Mat`, `Matx`, `vector<T>` etc. (see above the
modules/core/include/opencv2/core/mat.hpp:    simply cv::Mat() as you probably did before).
modules/core/include/opencv2/core/mat.hpp:    declare class members, local and global variables of this type.
modules/core/include/opencv2/core/mat.hpp:Just like with InputArray, OpenCV users should not care about OutputArray, they just pass `Mat`,
modules/core/include/opencv2/core/mat.hpp:it is also not very difficult. Take the sample above as the reference. Note that
modules/core/include/opencv2/core/mat.hpp:An example demonstrating the serial out capabilities of cv::Mat
modules/core/include/opencv2/core/mat.hpp:In case of a 2-dimensional array, the above formula is reduced to:
modules/core/include/opencv2/core/mat.hpp:variables, expressions, and so on. Also, note the extra parentheses required to avoid compilation
modules/core/include/opencv2/core/mat.hpp:The next important thing to learn about the array class is element access. This manual already
modules/core/include/opencv2/core/mat.hpp:Some operations, like the one above, do not actually depend on the array shape. They just process
modules/core/include/opencv2/core/mat.hpp:smaller, which is especially noticeable in case of small matrices.
modules/core/include/opencv2/core/mat.hpp:    These are available assignment operators. Since they all are very different, make sure to read the
modules/core/include/opencv2/core/mat.hpp:    Remember that each of these operations is O(1), that is, no data is copied. Thus, the above
modules/core/include/opencv2/core/mat.hpp:      immediately above the main one.
modules/core/include/opencv2/core/mat.hpp:    When the operation mask is specified, if the Mat::create call shown above reallocates the matrix,
modules/core/include/opencv2/core/mat.hpp:    The method returns a Matlab-style zero array initializer. It can be used to quickly form a constant
modules/core/include/opencv2/core/mat.hpp:    In the example above, a new matrix is allocated only if A is not a 3x3 floating-point matrix.
modules/core/include/opencv2/core/mat.hpp:    The method returns a Matlab-style 1's array initializer, similarly to Mat::zeros. Note that using
modules/core/include/opencv2/core/mat.hpp:    this method you can initialize an array with an arbitrary value, using the following Matlab idiom:
modules/core/include/opencv2/core/mat.hpp:    The above operation does not form a 100x100 matrix of 1's and then multiply it by 3. Instead, it
modules/core/include/opencv2/core/mat.hpp:    The method returns a Matlab-style identity matrix initializer, similarly to Mat::zeros. Similarly to
modules/core/include/opencv2/core/mat.hpp:    `A(Range(0, 10), Range::all())` is equivalent to `A.rowRange(0, 10)`. Similarly to all of the above,
modules/core/include/opencv2/core/mat.hpp:`Mat::at(int y,int x)` and `Mat_::operator()(int y,int x)` do absolutely the same
modules/core/include/opencv2/core/mat.hpp:    //! Matlab-style matrix initialization
modules/core/include/opencv2/core/mat.hpp:using SparseMat::erase ). The non-zero elements are stored in a hash table that grows when it is
modules/core/include/opencv2/core/mat.hpp:    (lexicographical, and so on). They come in the same order as they are stored in the hash table
modules/core/include/opencv2/core/mat.hpp:-   Combination of the above 2 methods when you need to process 2 or more sparse matrices
modules/core/include/opencv2/core/mat.hpp:        std::vector<size_t> hashtab;
modules/core/include/opencv2/core/mat.hpp:    //! sparse matrix node - element of a hash table
modules/core/include/opencv2/core/mat.hpp:        //! index of the next node in the same hash table entry
modules/core/include/opencv2/core/mat.hpp:    //! sets all the sparse matrix elements to 0, which means clearing the hash table.
modules/core/include/opencv2/core/mat.hpp:    //! returns the number of non-zero elements (=the number of hash table nodes)
modules/core/include/opencv2/core/mat.hpp:    void resizeHashTab(size_t newsize);
modules/core/include/opencv2/core/mat.hpp:    virtual void abs(const MatExpr& expr, MatExpr& res) const;
modules/core/include/opencv2/core/mat.hpp:-   Element-wise absolute value: `abs(A)`
modules/core/include/opencv2/core/mat.hpp:@note Comma-separated initializers and probably some other operations may require additional
modules/core/include/opencv2/core/mat.hpp:    Mat lowContrastMask = abs(img - blurred) < threshold;
modules/core/include/opencv2/core/mat.hpp:/** @brief Calculates an absolute value of each matrix element.
modules/core/include/opencv2/core/mat.hpp:abs is a meta-function that is expanded to one of absdiff or convertScaleAbs forms:
modules/core/include/opencv2/core/mat.hpp:- C = abs(A-B) is equivalent to `absdiff(A, B, C)`
modules/core/include/opencv2/core/mat.hpp:- C = abs(A) is equivalent to `absdiff(A, Scalar::all(0), C)`
modules/core/include/opencv2/core/mat.hpp:- C = `Mat_<Vec<uchar,n> >(abs(A*alpha + beta))` is equivalent to `convertScaleAbs(A, C, alpha,
modules/core/include/opencv2/core/mat.hpp:@sa @ref MatrixExpressions, absdiff, convertScaleAbs
modules/core/include/opencv2/core/mat.hpp:CV_EXPORTS MatExpr abs(const Mat& m);
modules/core/include/opencv2/core/mat.hpp:CV_EXPORTS MatExpr abs(const MatExpr& e);
modules/core/include/opencv2/core/cvstd.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cvstd.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cvstd.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cvstd.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cvstd.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cvstd.hpp:#  include <cstdlib> //for abs(int)
modules/core/include/opencv2/core/cvstd.hpp:    using std::abs;
modules/core/include/opencv2/core/cvstd.hpp:    static inline uchar abs(uchar a) { return a; }
modules/core/include/opencv2/core/cvstd.hpp:    static inline ushort abs(ushort a) { return a; }
modules/core/include/opencv2/core/cvstd.hpp:    static inline unsigned abs(unsigned a) { return a; }
modules/core/include/opencv2/core/cvstd.hpp:    static inline uint64 abs(uint64 a) { return a; }
modules/core/include/opencv2/core/cvstd.hpp:    template<typename T> static inline T abs(T a) { return a < 0 ? -a : a; }
modules/core/include/opencv2/core/cvstd.hpp:    template<> inline uchar abs(uchar a) { return a; }
modules/core/include/opencv2/core/cvstd.hpp:    template<> inline ushort abs(ushort a) { return a; }
modules/core/include/opencv2/core/cvstd.hpp:    template<> inline unsigned abs(unsigned a) { return a; }
modules/core/include/opencv2/core/cvstd.hpp:    template<> inline uint64 abs(uint64 a) { return a; }
modules/core/include/opencv2/core/cvstd.hpp:    complex classifiers in OpenCV, copy constructors are absent and not easy to implement. Finally,
modules/core/include/opencv2/core/cvstd.hpp:-   *O(1)* complexity of the above-mentioned operations. While some structures, like std::vector,
modules/core/include/opencv2/core/cvstd.hpp:    provide a copy constructor and an assignment operator, the operations may take a considerable
modules/core/include/opencv2/core/cvstd.hpp:-   Automatic and customizable cleanup, even for C structures. See the example below with FILE\*.
modules/core/include/opencv2/core/cvstd.hpp:The owned pointer is treated as a black box. The only thing Ptr needs to know about it is how to
modules/core/include/opencv2/core/cvstd.hpp:Ptr construction. A deleter is simply a callable object that accepts the pointer as its sole
modules/core/include/opencv2/core/cvstd.hpp:    String(int); // disabled and invalid. Catch invalid usages like, commandLineParser.has(0) problem
modules/core/include/opencv2/core/fast_math.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/fast_math.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/fast_math.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/fast_math.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/fast_math.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/affine.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/affine.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/affine.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/affine.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/affine.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/affine.hpp:        //! Combines all contructors above. Supports 4x4, 4x3, 3x3, 1x3, 3x1 sizes of data matrix
modules/core/include/opencv2/core/affine.hpp:        //! Combines rotation methods above. Suports 3x3, 1x3, 3x1 sizes of data matrix;
modules/core/include/opencv2/core/affine.hpp://Combines rotation methods above. Suports 3x3, 1x3, 3x1 sizes of data matrix;
modules/core/include/opencv2/core/affine.hpp:            if( fabs(rx) < fabs(ry) && fabs(rx) < fabs(rz) && (R.val[5] > 0) != (ry*rz > 0) )
modules/core/include/opencv2/core/ocl_genbase.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/ocl_genbase.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/ocl_genbase.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/ocl_genbase.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/include/opencv2/core/ocl_genbase.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/core.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/core.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/core.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/core.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/core.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/hal/intrin.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/hal/intrin.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/hal/intrin.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/hal/intrin.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/hal/intrin.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef _Tp abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef uchar abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef uchar abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef ushort abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef ushort abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef unsigned abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef unsigned abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef uint64 abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef uint64 abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef float abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp:    typedef double abs_type;
modules/core/include/opencv2/core/hal/intrin.hpp://! Set to 1 if current compiler supports vector extensions (NEON or SSE is enabled)
modules/core/include/opencv2/core/hal/intrin_sse.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/hal/intrin_sse.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/hal/intrin_sse.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/hal/intrin_sse.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/hal/intrin_sse.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/hal/intrin_sse.hpp:inline v_float32x4 v_abs(const v_float32x4& x)
modules/core/include/opencv2/core/hal/intrin_sse.hpp:inline v_float64x2 v_abs(const v_float64x2& x)
modules/core/include/opencv2/core/hal/intrin_sse.hpp:inline _Tpuvec v_absdiff(const _Tpuvec& a, const _Tpuvec& b) \
modules/core/include/opencv2/core/hal/intrin_sse.hpp:inline _Tpuvec v_absdiff(const _Tpsvec& a, const _Tpsvec& b) \
modules/core/include/opencv2/core/hal/intrin_sse.hpp:inline v_uint32x4 v_absdiff(const v_uint32x4& a, const v_uint32x4& b)
modules/core/include/opencv2/core/hal/intrin_sse.hpp:inline v_uint32x4 v_absdiff(const v_int32x4& a, const v_int32x4& b)
modules/core/include/opencv2/core/hal/intrin_sse.hpp:#define OPENCV_HAL_IMPL_SSE_MISC_FLT_OP(_Tpvec, _Tp, _Tpreg, suffix, absmask_vec) \
modules/core/include/opencv2/core/hal/intrin_sse.hpp:inline _Tpvec v_absdiff(const _Tpvec& a, const _Tpvec& b) \
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    _Tpreg absmask = _mm_castsi128_##suffix(absmask_vec); \
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    return _Tpvec(_mm_and_##suffix(_mm_sub_##suffix(a.val, b.val), absmask)); \
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i ab0 = _mm_unpacklo_epi8(a.val, b.val);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i ab1 = _mm_unpackhi_epi8(a.val, b.val);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i p00 = _mm_unpacklo_epi16(ab0, c0);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i p01 = _mm_unpackhi_epi16(ab0, c0);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i p02 = _mm_unpacklo_epi16(ab1, c1);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i p03 = _mm_unpackhi_epi16(ab1, c1);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i ab0 = _mm_unpacklo_epi16(a.val, b.val);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i ab1 = _mm_unpackhi_epi16(a.val, b.val);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i p10 = _mm_unpacklo_epi32(ab0, c0);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i p11 = _mm_unpackhi_epi32(ab0, c0);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i p12 = _mm_unpacklo_epi32(ab1, c1);
modules/core/include/opencv2/core/hal/intrin_sse.hpp:    __m128i p13 = _mm_unpackhi_epi32(ab1, c1);
modules/core/include/opencv2/core/hal/intrin_cpp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/hal/intrin_cpp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:containing packed values of different types. In case when there is no SIMD extension available
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:- Absolute values: @ref v_abs, @ref v_absdiff
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:### Usability
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:Most operations are implemented only for some subset of the available types, following matrices
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:shows the applicability of different operations to the types.
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:|absdiff            | x | x | x | x | x | x |
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:|absdiff            | x | x |
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:|sqrt, abs          | x | x |
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:    typedef v_reg<typename V_TypeTraits<_Tp>::abs_type, n> abs_vec;
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:OPENCV_HAL_IMPL_MATH_FUNC(v_abs, (typename V_TypeTraits<_Tp>::abs_type)std::abs,
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:                          typename V_TypeTraits<_Tp>::abs_type)
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:template<typename T> inline T _absdiff(T a, T b)
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:v_uint32x4 c = v_absdiff(a, b); // result is {3, 1, 1, 3}
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:inline v_reg<typename V_TypeTraits<_Tp>::abs_type, n> v_absdiff(const v_reg<_Tp, n>& a, const v_reg<_Tp, n> & b)
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:    typedef typename V_TypeTraits<_Tp>::abs_type rtype;
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:        c.s[i] = _absdiff(ua, ub);
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:inline v_float32x4 v_absdiff(const v_float32x4& a, const v_float32x4& b)
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:        c.s[i] = _absdiff(a.s[i], b.s[i]);
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:inline v_float64x2 v_absdiff(const v_float64x2& a, const v_float64x2& b)
modules/core/include/opencv2/core/hal/intrin_cpp.hpp:        c.s[i] = _absdiff(a.s[i], b.s[i]);
modules/core/include/opencv2/core/hal/intrin_neon.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/hal/intrin_neon.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/hal/intrin_neon.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/hal/intrin_neon.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/hal/intrin_neon.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/hal/intrin_neon.hpp:inline v_float32x4 v_abs(v_float32x4 x)
modules/core/include/opencv2/core/hal/intrin_neon.hpp:{ return v_float32x4(vabsq_f32(x.val)); }
modules/core/include/opencv2/core/hal/intrin_neon.hpp:// TODO: absdiff for signed integers
modules/core/include/opencv2/core/hal/intrin_neon.hpp:OPENCV_HAL_IMPL_NEON_BIN_FUNC(v_uint8x16, v_absdiff, vabdq_u8)
modules/core/include/opencv2/core/hal/intrin_neon.hpp:OPENCV_HAL_IMPL_NEON_BIN_FUNC(v_uint16x8, v_absdiff, vabdq_u16)
modules/core/include/opencv2/core/hal/intrin_neon.hpp:OPENCV_HAL_IMPL_NEON_BIN_FUNC(v_uint32x4, v_absdiff, vabdq_u32)
modules/core/include/opencv2/core/hal/intrin_neon.hpp:OPENCV_HAL_IMPL_NEON_BIN_FUNC(v_float32x4, v_absdiff, vabdq_f32)
modules/core/include/opencv2/core/hal/intrin_neon.hpp:OPENCV_HAL_IMPL_NEON_BIN_FUNC2(v_int8x16, v_uint8x16, vreinterpretq_u8_s8, v_absdiff, vabdq_s8)
modules/core/include/opencv2/core/hal/intrin_neon.hpp:OPENCV_HAL_IMPL_NEON_BIN_FUNC2(v_int16x8, v_uint16x8, vreinterpretq_u16_s16, v_absdiff, vabdq_s16)
modules/core/include/opencv2/core/hal/intrin_neon.hpp:OPENCV_HAL_IMPL_NEON_BIN_FUNC2(v_int32x4, v_uint32x4, vreinterpretq_u32_s32, v_absdiff, vabdq_s32)
modules/core/include/opencv2/core/hal/hal.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/hal/hal.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/hal/hal.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/hal/hal.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/hal/hal.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/hal/hal.hpp:CV_EXPORTS void absdiff8u( const uchar* src1, size_t step1, const uchar* src2, size_t step2, uchar* dst, size_t step, int width, int height, void* );
modules/core/include/opencv2/core/hal/hal.hpp:CV_EXPORTS void absdiff8s( const schar* src1, size_t step1, const schar* src2, size_t step2, schar* dst, size_t step, int width, int height, void* );
modules/core/include/opencv2/core/hal/hal.hpp:CV_EXPORTS void absdiff16u( const ushort* src1, size_t step1, const ushort* src2, size_t step2, ushort* dst, size_t step, int width, int height, void* );
modules/core/include/opencv2/core/hal/hal.hpp:CV_EXPORTS void absdiff16s( const short* src1, size_t step1, const short* src2, size_t step2, short* dst, size_t step, int width, int height, void* );
modules/core/include/opencv2/core/hal/hal.hpp:CV_EXPORTS void absdiff32s( const int* src1, size_t step1, const int* src2, size_t step2, int* dst, size_t step, int width, int height, void* );
modules/core/include/opencv2/core/hal/hal.hpp:CV_EXPORTS void absdiff32f( const float* src1, size_t step1, const float* src2, size_t step2, float* dst, size_t step, int width, int height, void* );
modules/core/include/opencv2/core/hal/hal.hpp:CV_EXPORTS void absdiff64f( const double* src1, size_t step1, const double* src2, size_t step2, double* dst, size_t step, int width, int height, void* );
modules/core/include/opencv2/core/private.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/private.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/private.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/private.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/private.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/private.hpp:// General define for ipp function disabling
modules/core/include/opencv2/core/private.hpp:    // Disable copy operations
modules/core/include/opencv2/core/eigen.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/eigen.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/eigen.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/eigen.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/eigen.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/eigen.hpp:#pragma warning( disable: 4714 ) //__forceinline is not inlined
modules/core/include/opencv2/core/eigen.hpp:#pragma warning( disable: 4127 ) //conditional expression is constant
modules/core/include/opencv2/core/eigen.hpp:#pragma warning( disable: 4244 ) //conversion from '__int64' to 'int', possible loss of data
modules/core/include/opencv2/core/ptr.inl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/ptr.inl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/ptr.inl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/ptr.inl.hpp:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/include/opencv2/core/ptr.inl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/ptr.inl.hpp:    // noncopyable
modules/core/include/opencv2/core/base.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/base.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/base.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/base.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/base.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/base.hpp:It is notable that the \f$ L_{1} \f$ norm forms the upper and the \f$ L_{\infty} \f$ norm forms the lower border for the example function \f$ r(x) \f$.
modules/core/include/opencv2/core/base.hpp:![Graphs for the different norm functions from the above example](pics/NormTypes_OneArray_1-2-INF.png)
modules/core/include/opencv2/core/base.hpp:        matrix; this flag enables you to transform multiple vectors simultaneously and can be used to
modules/core/include/opencv2/core/base.hpp:        pass the flag to enable the function to produce a full-size complex output array. */
modules/core/include/opencv2/core/base.hpp:        matrix. This flag enables you to transform multiple vectors simultaneously and can be used to
modules/core/include/opencv2/core/base.hpp:    BORDER_CONSTANT    = 0, //!< `iiiiii|abcdefgh|iiiiiii`  with some specified `i`
modules/core/include/opencv2/core/base.hpp:    BORDER_REPLICATE   = 1, //!< `aaaaaa|abcdefgh|hhhhhhh`
modules/core/include/opencv2/core/base.hpp:    BORDER_REFLECT     = 2, //!< `fedcba|abcdefgh|hgfedcb`
modules/core/include/opencv2/core/base.hpp:    BORDER_WRAP        = 3, //!< `cdefgh|abcdefgh|abcdefg`
modules/core/include/opencv2/core/base.hpp:    BORDER_REFLECT_101 = 4, //!< `gfedcb|abcdefgh|gfedcba`
modules/core/include/opencv2/core/base.hpp:    BORDER_TRANSPARENT = 5, //!< `uvwxyz|absdefgh|ijklmno`
modules/core/include/opencv2/core/base.hpp:    CV_DO_PRAGMA(warning(disable: 4996))
modules/core/include/opencv2/core/base.hpp:By default the function prints information about the error to stderr,
modules/core/include/opencv2/core/base.hpp:@param _func - function name. Available only when the compiler supports getting it
modules/core/include/opencv2/core/base.hpp:    // this suppresses this warning: "noreturn" function does return [enabled by default]
modules/core/include/opencv2/core/base.hpp:template<typename _Tp> inline _Tp cv_abs(_Tp x) { return std::abs(x); }
modules/core/include/opencv2/core/base.hpp:inline int cv_abs(uchar x) { return x; }
modules/core/include/opencv2/core/base.hpp:inline int cv_abs(schar x) { return std::abs(x); }
modules/core/include/opencv2/core/base.hpp:inline int cv_abs(ushort x) { return x; }
modules/core/include/opencv2/core/base.hpp:inline int cv_abs(short x) { return std::abs(x); }
modules/core/include/opencv2/core/base.hpp:        s += (_AccTp)cv_abs(a[i]) + (_AccTp)cv_abs(a[i+1]) +
modules/core/include/opencv2/core/base.hpp:            (_AccTp)cv_abs(a[i+2]) + (_AccTp)cv_abs(a[i+3]);
modules/core/include/opencv2/core/base.hpp:        s += cv_abs(a[i]);
modules/core/include/opencv2/core/base.hpp:        s = std::max(s, (_AccTp)cv_abs(a[i]));
modules/core/include/opencv2/core/base.hpp:        s += std::abs(v0) + std::abs(v1) + std::abs(v2) + std::abs(v3);
modules/core/include/opencv2/core/base.hpp:        s += std::abs(v);
modules/core/include/opencv2/core/base.hpp:        s += std::abs(a[i] - b[i]);
modules/core/include/opencv2/core/base.hpp:        s += std::abs(a[i] - b[i]);
modules/core/include/opencv2/core/base.hpp:        s = std::max(s, std::abs(v0));
modules/core/include/opencv2/core/base.hpp: in degrees and varies from 0 to 360 degrees. The accuracy is about 0.3 degrees.
modules/core/include/opencv2/core/ocl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/ocl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/ocl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/ocl.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/include/opencv2/core/ocl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/ocl.hpp:    bool available() const;
modules/core/include/opencv2/core/ocl.hpp:    bool compilerAvailable() const;
modules/core/include/opencv2/core/ocl.hpp:    bool linkerAvailable() const;
modules/core/include/opencv2/core/ocl.hpp:    int executionCapabilities() const;
modules/core/include/opencv2/core/ocl.hpp:    void setUseSVM(bool enabled);
modules/core/include/opencv2/core/ocl.hpp://    OpenCV will check if available OpenCL platform has platformName name,
modules/core/include/opencv2/core/ocl.hpp://!                       this string is used to check if platform is available
modules/core/include/opencv2/core/ocl.hpp:    // norm:    Flag to enable the use of normalized channel data types
modules/core/include/opencv2/core/cuda_types.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda_types.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda_types.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda_types.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda_types.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda_types.hpp:        // Simple lightweight structures that encapsulates information about an image on device.
modules/core/include/opencv2/core/mat.inl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/mat.inl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/mat.inl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/mat.inl.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/mat.inl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/mat.inl.hpp:        hashidx = m->hdr->hashtab.size();
modules/core/include/opencv2/core/mat.inl.hpp:MatExpr abs(const Mat_<_Tp>& m)
modules/core/include/opencv2/core/mat.inl.hpp:    return cv::abs((const Mat&)m);
modules/core/include/opencv2/core/types_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/types_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/types_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/types_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/types_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/types_c.h:/** absolute value without jumps */
modules/core/include/opencv2/core/types_c.h:#  define  CV_IABS(a)     abs(a)
modules/core/include/opencv2/core/types_c.h:only supports a subset of possible IplImage formats, as outlined in the parameter list above.
modules/core/include/opencv2/core/types_c.h:In addition to the above restrictions, OpenCV handles ROIs differently. OpenCV functions require
modules/core/include/opencv2/core/types_c.h:    void** hashtable;
modules/core/include/opencv2/core/types_c.h:The structure contains information about one of the standard or user-defined types. Instances of the
modules/core/include/opencv2/core/types_c.h:    CvPluginFuncInfo* func_tab;
modules/core/include/opencv2/core/sse_utils.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/sse_utils.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/sse_utils.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/sse_utils.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/sse_utils.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/core_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/core_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/core_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/core_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/core_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/core_c.h:/* disable warning C4190: 'function' has C-linkage specified, but returns UDT 'typename'
modules/core/include/opencv2/core/core_c.h:   It is OK to disable it because we only extend few plain structures with
modules/core/include/opencv2/core/core_c.h:   C++ construrtors for simpler interoperability with C++ API of the library
modules/core/include/opencv2/core/core_c.h:#    pragma warning(disable:4190)
modules/core/include/opencv2/core/core_c.h:corresponds to the diagonal above the main, 1 corresponds to the diagonal below the main, and so
modules/core/include/opencv2/core/core_c.h:hash table. The sample below demonstrates how to iterate through the sparse matrix:
modules/core/include/opencv2/core/core_c.h:            CvSparseNode* node = (CvSparseNode*)mat_iterator->mat->hashtable[idx];
modules/core/include/opencv2/core/core_c.h:/** @brief Retrieves low-level information about the array.
modules/core/include/opencv2/core/core_c.h:The function fills output variables with low-level information about the array data. All output
modules/core/include/opencv2/core/core_c.h:The following example shows how to get access to array elements. It computes absolute values of the
modules/core/include/opencv2/core/core_c.h:            data[x] = (float)fabs(data[x]);
modules/core/include/opencv2/core/core_c.h:set to the nearest representable value on the real axis.
modules/core/include/opencv2/core/core_c.h:   stores absolute value of the result:
modules/core/include/opencv2/core/core_c.h:   dst(x,y,c) = abs(scale*src(x,y,c)+shift).
modules/core/include/opencv2/core/core_c.h:/** dst(x,y,c) = abs(src1(x,y,c) - src2(x,y,c)) */
modules/core/include/opencv2/core/core_c.h:/** dst(x,y,c) = abs(src(x,y,c) - value(c)) */
modules/core/include/opencv2/core/core_c.h:/** Calculates natural logarithms: dst(idx) = log(abs(src(idx))).
modules/core/include/opencv2/core/core_c.h:/** Changes sequence reader position. It may seek to an absolute or
modules/core/include/opencv2/core/core_c.h:                            CvSeq** labels, CvCmpFunc is_equal, void* userdata );
modules/core/include/opencv2/core/core_c.h:   (that should be 8uC1 or 8sC1) are used as indexes in lutarr 256-element table */
modules/core/include/opencv2/core/core_c.h:CVAPI(int) cvKMeans2( const CvArr* samples, int cluster_count, CvArr* labels,
modules/core/include/opencv2/core/core_c.h:One and only one of the two above flags must be specified
modules/core/include/opencv2/core/core_c.h:using plain sequences; for example, in the above example, it is more efficient to encode the points
modules/core/include/opencv2/core/core_c.h:@param create_missing Flag that specifies, whether an absent key should be added into the hash table
modules/core/include/opencv2/core/core_c.h:@param create_missing Flag that specifies whether an absent node should be added to the map
modules/core/include/opencv2/core/core_c.h:/*********************************** CPU capabilities ***********************************/
modules/core/include/opencv2/core/core_c.h:/** Retrieves detailed information about the last error occured */
modules/core/include/opencv2/core/core_c.h: After raising error, control will be transferred to the exit label.
modules/core/include/opencv2/core/core_c.h: label.
modules/core/include/opencv2/core/opencl/opencl_svm.hpp:struct SVMCapabilities
modules/core/include/opencv2/core/opencl/opencl_svm.hpp:    SVMCapabilities(int capabilities = 0) : value_(capabilities) { }
modules/core/include/opencv2/core/opencl/opencl_svm.hpp:CV_EXPORTS const SVMCapabilities getSVMCapabilitites(const ocl::Context& context);
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdfft.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdfft.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdfft.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdfft.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdfft.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/opencl/runtime/opencl_gl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_gl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_gl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/opencl/runtime/opencl_gl.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/include/opencv2/core/opencl/runtime/opencl_gl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/opencl/runtime/opencl_svm_definitions.hpp:typedef cl_bitfield cl_device_svm_capabilities;
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdblas.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdblas.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdblas.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdblas.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/include/opencv2/core/opencl/runtime/opencl_clamdblas.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/opencl/runtime/opencl_core_wrappers.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_core_wrappers.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_core_wrappers.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/opencl/runtime/opencl_core_wrappers.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/include/opencv2/core/opencl/runtime/opencl_core_wrappers.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/opencl/runtime/opencl_core.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_core.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_core.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/opencl/runtime/opencl_core.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/include/opencv2/core/opencl/runtime/opencl_core.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/opencl/runtime/opencl_gl_wrappers.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_gl_wrappers.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/opencl/runtime/opencl_gl_wrappers.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/opencl/runtime/opencl_gl_wrappers.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/include/opencv2/core/opencl/runtime/opencl_gl_wrappers.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/opencl/runtime/opencl_svm_hsa_extension.hpp: * The above copyright notice and this permission notice shall be included
modules/core/include/opencv2/core/opencl/runtime/opencl_svm_hsa_extension.hpp:typedef cl_bitfield                      cl_device_svm_capabilities_amd;
modules/core/include/opencv2/core/opencl/runtime/opencl_svm_hsa_extension.hpp:/* cl_device_svm_capabilities_amd */
modules/core/include/opencv2/core/cuda.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda.hpp:@note You are not recommended to leave static or global GpuMat variables allocated, that is, to rely
modules/core/include/opencv2/core/cuda.hpp:on its destructor. The destruction order of such variables and CUDA context is undefined. GPU memory
modules/core/include/opencv2/core/cuda.hpp:    //! template version of the above method
modules/core/include/opencv2/core/cuda.hpp:-   **SHARED** specifies a zero copy memory allocation that enables mapping the host memory to GPU
modules/core/include/opencv2/core/cuda.hpp:    //! returns matrix header with disabled reference counting for HostMem data.
modules/core/include/opencv2/core/cuda.hpp:/** @brief Unmaps the memory of matrix and makes it pageable again.
modules/core/include/opencv2/core/cuda.hpp:        INTERPROCESS   = 0x04   /**< Event is suitable for interprocess use. DisableTiming must be set */
modules/core/include/opencv2/core/cuda.hpp:/** @brief Returns the number of installed CUDA-enabled devices.
modules/core/include/opencv2/core/cuda.hpp:CV_EXPORTS int getCudaEnabledDeviceCount();
modules/core/include/opencv2/core/cuda.hpp:capability can always be compiled to binary code of greater or equal compute capability".
modules/core/include/opencv2/core/cuda.hpp:    @param major Major compute capability version.
modules/core/include/opencv2/core/cuda.hpp:    @param minor Minor compute capability version.
modules/core/include/opencv2/core/cuda.hpp:    //! global memory available on device in bytes
modules/core/include/opencv2/core/cuda.hpp:    //! shared memory available per block in bytes
modules/core/include/opencv2/core/cuda.hpp:    //! 32-bit registers available per block
modules/core/include/opencv2/core/cuda.hpp:    //! constant memory available on device in bytes
modules/core/include/opencv2/core/cuda.hpp:    //! major compute capability
modules/core/include/opencv2/core/cuda.hpp:    //! minor compute capability
modules/core/include/opencv2/core/cuda.hpp:    bool kernelExecTimeoutEnabled() const;
modules/core/include/opencv2/core/cuda.hpp:        ComputeModeExclusive,       /**< compute-exclusive-thread mode (Only one thread in one process will be able to use cudaSetDevice with this device) */
modules/core/include/opencv2/core/cuda.hpp:        ComputeModeExclusiveProcess /**< compute-exclusive-process mode (Many threads in one process will be able to use cudaSetDevice with this device) */
modules/core/include/opencv2/core/cuda.hpp:    //! device has ECC support enabled
modules/core/include/opencv2/core/cuda.hpp:    bool ECCEnabled() const;
modules/core/include/opencv2/core/persistence.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/persistence.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/persistence.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/persistence.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/persistence.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/persistence.hpp:The sample above stores to XML and integer, text string (calibration date), 2 matrices, and a custom
modules/core/include/opencv2/core/persistence.hpp:As an exercise, you can replace ".yml" with ".xml" in the sample above and see, how the
modules/core/include/opencv2/core/persistence.hpp:    cv::Mat) are written in absolutely the same way as simple C data structures - using `<<`
modules/core/include/opencv2/core/persistence.hpp:    form. In the sample above matrix elements, as well as each feature, including its lbp value, is
modules/core/include/opencv2/core/persistence.hpp:Here is how to read the file created by the code sample above:
modules/core/include/opencv2/core/persistence.hpp:equivalent notations of the above specification are `iif`, `2i1f` and so forth. Other examples: `u`
modules/core/include/opencv2/core/types.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/types.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/types.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/types.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/types.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/types.hpp:An instance of the class is interchangeable with C structures, CvPoint and CvPoint2D32f . There is
modules/core/include/opencv2/core/types.hpp:declaration above, the following operations on points are implemented:
modules/core/include/opencv2/core/types.hpp:An instance of the class is interchangeable with the C structure CvPoint2D32f . Similarly to
modules/core/include/opencv2/core/types.hpp:The following Point3_\<\> aliases are available:
modules/core/include/opencv2/core/types.hpp:operations as for Point_ is available.
modules/core/include/opencv2/core/types.hpp:This is an example how the partial ordering on rectangles can be established (rect1 \f$\subseteq\f$
modules/core/include/opencv2/core/types.hpp:For your convenience, the Rect_\<\> alias is available: cv::Rect
modules/core/include/opencv2/core/types.hpp:Range(a,b) is basically the same as a:b in Matlab or a..b in Python. As in Python, start is an
modules/core/include/opencv2/core/types.hpp:The static method Range::all() returns a special variable that means "the whole sequence" or "the
modules/core/include/opencv2/core/types.hpp:whole range", just like " : " in Matlab or " ... " in Python. All the methods and functions in
modules/core/include/opencv2/core/types.hpp:custom processing, you will probably have to check and handle it explicitly:
modules/core/include/opencv2/core/types.hpp:The class instance stores a keypoint, i.e. a point feature found by one of many available keypoint
modules/core/include/opencv2/core/types.hpp:    CV_PROP_RW float angle; //!< computed orientation of the keypoint (-1 if not applicable);
modules/core/include/opencv2/core/types.hpp:double abs(const Complex<_Tp>& a)
modules/core/include/opencv2/core/neon_utils.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/neon_utils.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/neon_utils.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/neon_utils.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/neon_utils.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/matx.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/matx.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/matx.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/matx.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/matx.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/matx.hpp:available. To do an operation on Matx that is not implemented, you can easily convert the matrix to
modules/core/include/opencv2/core/cuda/vec_traits.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/vec_traits.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/vec_traits.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/vec_traits.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/vec_traits.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/scan.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/scan.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/scan.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/scan.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/scan.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/scan.hpp:                //grab top warp elements
modules/core/include/opencv2/core/cuda/filters.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/filters.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/filters.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/filters.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/filters.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/filters.hpp:            float x = fabsf(x_);
modules/core/include/opencv2/core/cuda/saturate_cast.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/saturate_cast.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/saturate_cast.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/saturate_cast.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/saturate_cast.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/warp_shuffle.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/warp_shuffle.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/warp_shuffle.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/warp_shuffle.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/warp_shuffle.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/dynamic_smem.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/dynamic_smem.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/dynamic_smem.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/dynamic_smem.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/dynamic_smem.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/emulation.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/emulation.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/emulation.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/emulation.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/emulation.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/emulation.hpp:                // just campilation stab
modules/core/include/opencv2/core/cuda/border_interpolate.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/border_interpolate.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(x) % (last_col + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(last_col - ::abs(last_col - x)) % (last_col + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(y) % (last_row + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(last_row - ::abs(last_row - y)) % (last_row + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(y) % (last_row + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(last_row - ::abs(last_row - y)) % (last_row + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(x) % (last_col + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(last_col - ::abs(last_col - x)) % (last_col + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return (::abs(x) - (x < 0)) % (last_col + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(last_col - ::abs(last_col - x) + (x > last_col)) % (last_col + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return idx_col_high(::abs(x) - (x < 0));
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return (::abs(y) - (y < 0)) % (last_row + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return ::abs(last_row - ::abs(last_row - y) + (y > last_row)) % (last_row + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return idx_row_high(::abs(y) - (y < 0));
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return (::abs(y) - (y < 0)) % (last_row + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return /*::abs*/(last_row - ::abs(last_row - y) + (y > last_row)) /*% (last_row + 1)*/;
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return (::abs(x) - (x < 0)) % (last_col + 1);
modules/core/include/opencv2/core/cuda/border_interpolate.hpp:            return (last_col - ::abs(last_col - x) + (x > last_col));
modules/core/include/opencv2/core/cuda/funcattrib.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/funcattrib.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/funcattrib.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/funcattrib.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/funcattrib.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/common.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/common.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/common.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/common.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/common.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/warp_reduce.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/warp_reduce.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/warp_reduce.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/warp_reduce.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/warp_reduce.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/warp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/warp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/warp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/warp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/warp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/vec_math.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/vec_math.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/vec_math.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/vec_math.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/vec_math.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, /*::abs*/, uchar, uchar)
modules/core/include/opencv2/core/cuda/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, ::abs, char, char)
modules/core/include/opencv2/core/cuda/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, /*::abs*/, ushort, ushort)
modules/core/include/opencv2/core/cuda/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, ::abs, short, short)
modules/core/include/opencv2/core/cuda/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, ::abs, int, int)
modules/core/include/opencv2/core/cuda/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, /*::abs*/, uint, uint)
modules/core/include/opencv2/core/cuda/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, ::fabsf, float, float)
modules/core/include/opencv2/core/cuda/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, ::fabs, double, double)
modules/core/include/opencv2/core/cuda/type_traits.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/type_traits.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/type_traits.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/type_traits.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/type_traits.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/functional.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/functional.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/functional.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/functional.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/functional.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/functional.hpp:    template <typename T> struct abs_func : unary_function<T, T>
modules/core/include/opencv2/core/cuda/functional.hpp:            return abs(x);
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/functional.hpp:    template <> struct abs_func<unsigned char> : unary_function<unsigned char, unsigned char>
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/functional.hpp:    template <> struct abs_func<signed char> : unary_function<signed char, signed char>
modules/core/include/opencv2/core/cuda/functional.hpp:            return ::abs((int)x);
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/functional.hpp:    template <> struct abs_func<char> : unary_function<char, char>
modules/core/include/opencv2/core/cuda/functional.hpp:            return ::abs((int)x);
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/functional.hpp:    template <> struct abs_func<unsigned short> : unary_function<unsigned short, unsigned short>
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/functional.hpp:    template <> struct abs_func<short> : unary_function<short, short>
modules/core/include/opencv2/core/cuda/functional.hpp:            return ::abs((int)x);
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/functional.hpp:    template <> struct abs_func<unsigned int> : unary_function<unsigned int, unsigned int>
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/functional.hpp:    template <> struct abs_func<int> : unary_function<int, int>
modules/core/include/opencv2/core/cuda/functional.hpp:            return ::abs(x);
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/functional.hpp:    template <> struct abs_func<float> : unary_function<float, float>
modules/core/include/opencv2/core/cuda/functional.hpp:            return ::fabsf(x);
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/functional.hpp:    template <> struct abs_func<double> : unary_function<double, double>
modules/core/include/opencv2/core/cuda/functional.hpp:            return ::fabs(x);
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func() {}
modules/core/include/opencv2/core/cuda/functional.hpp:        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __constant__ int c_HsvDivTable   [256] = {0, 1044480, 522240, 348160, 261120, 208896, 174080, 149211, 130560, 116053, 104448, 94953, 87040, 80345, 74606, 69632, 65280, 61440, 58027, 54973, 52224, 49737, 47476, 45412, 43520, 41779, 40172, 38684, 37303, 36017, 34816, 33693, 32640, 31651, 30720, 29842, 29013, 28229, 27486, 26782, 26112, 25475, 24869, 24290, 23738, 23211, 22706, 22223, 21760, 21316, 20890, 20480, 20086, 19707, 19342, 18991, 18651, 18324, 18008, 17703, 17408, 17123, 16846, 16579, 16320, 16069, 15825, 15589, 15360, 15137, 14921, 14711, 14507, 14308, 14115, 13926, 13743, 13565, 13391, 13221, 13056, 12895, 12738, 12584, 12434, 12288, 12145, 12006, 11869, 11736, 11605, 11478, 11353, 11231, 11111, 10995, 10880, 10768, 10658, 10550, 10445, 10341, 10240, 10141, 10043, 9947, 9854, 9761, 9671, 9582, 9495, 9410, 9326, 9243, 9162, 9082, 9004, 8927, 8852, 8777, 8704, 8632, 8561, 8492, 8423, 8356, 8290, 8224, 8160, 8097, 8034, 7973, 7913, 7853, 7795, 7737, 7680, 7624, 7569, 7514, 7461, 7408, 7355, 7304, 7253, 7203, 7154, 7105, 7057, 7010, 6963, 6917, 6872, 6827, 6782, 6739, 6695, 6653, 6611, 6569, 6528, 6487, 6447, 6408, 6369, 6330, 6292, 6254, 6217, 6180, 6144, 6108, 6073, 6037, 6003, 5968, 5935, 5901, 5868, 5835, 5803, 5771, 5739, 5708, 5677, 5646, 5615, 5585, 5556, 5526, 5497, 5468, 5440, 5412, 5384, 5356, 5329, 5302, 5275, 5249, 5222, 5196, 5171, 5145, 5120, 5095, 5070, 5046, 5022, 4998, 4974, 4950, 4927, 4904, 4881, 4858, 4836, 4813, 4791, 4769, 4748, 4726, 4705, 4684, 4663, 4642, 4622, 4601, 4581, 4561, 4541, 4522, 4502, 4483, 4464, 4445, 4426, 4407, 4389, 4370, 4352, 4334, 4316, 4298, 4281, 4263, 4246, 4229, 4212, 4195, 4178, 4161, 4145, 4128, 4112, 4096};
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __constant__ int c_HsvDivTable180[256] = {0, 122880, 61440, 40960, 30720, 24576, 20480, 17554, 15360, 13653, 12288, 11171, 10240, 9452, 8777, 8192, 7680, 7228, 6827, 6467, 6144, 5851, 5585, 5343, 5120, 4915, 4726, 4551, 4389, 4237, 4096, 3964, 3840, 3724, 3614, 3511, 3413, 3321, 3234, 3151, 3072, 2997, 2926, 2858, 2793, 2731, 2671, 2614, 2560, 2508, 2458, 2409, 2363, 2318, 2276, 2234, 2194, 2156, 2119, 2083, 2048, 2014, 1982, 1950, 1920, 1890, 1862, 1834, 1807, 1781, 1755, 1731, 1707, 1683, 1661, 1638, 1617, 1596, 1575, 1555, 1536, 1517, 1499, 1480, 1463, 1446, 1429, 1412, 1396, 1381, 1365, 1350, 1336, 1321, 1307, 1293, 1280, 1267, 1254, 1241, 1229, 1217, 1205, 1193, 1182, 1170, 1159, 1148, 1138, 1127, 1117, 1107, 1097, 1087, 1078, 1069, 1059, 1050, 1041, 1033, 1024, 1016, 1007, 999, 991, 983, 975, 968, 960, 953, 945, 938, 931, 924, 917, 910, 904, 897, 890, 884, 878, 871, 865, 859, 853, 847, 842, 836, 830, 825, 819, 814, 808, 803, 798, 793, 788, 783, 778, 773, 768, 763, 759, 754, 749, 745, 740, 736, 731, 727, 723, 719, 714, 710, 706, 702, 698, 694, 690, 686, 683, 679, 675, 671, 668, 664, 661, 657, 654, 650, 647, 643, 640, 637, 633, 630, 627, 624, 621, 617, 614, 611, 608, 605, 602, 599, 597, 594, 591, 588, 585, 582, 580, 577, 574, 572, 569, 566, 564, 561, 559, 556, 554, 551, 549, 546, 544, 541, 539, 537, 534, 532, 530, 527, 525, 523, 521, 518, 516, 514, 512, 510, 508, 506, 504, 502, 500, 497, 495, 493, 492, 490, 488, 486, 484, 482};
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __constant__ int c_HsvDivTable256[256] = {0, 174763, 87381, 58254, 43691, 34953, 29127, 24966, 21845, 19418, 17476, 15888, 14564, 13443, 12483, 11651, 10923, 10280, 9709, 9198, 8738, 8322, 7944, 7598, 7282, 6991, 6722, 6473, 6242, 6026, 5825, 5638, 5461, 5296, 5140, 4993, 4855, 4723, 4599, 4481, 4369, 4263, 4161, 4064, 3972, 3884, 3799, 3718, 3641, 3567, 3495, 3427, 3361, 3297, 3236, 3178, 3121, 3066, 3013, 2962, 2913, 2865, 2819, 2774, 2731, 2689, 2648, 2608, 2570, 2533, 2497, 2461, 2427, 2394, 2362, 2330, 2300, 2270, 2241, 2212, 2185, 2158, 2131, 2106, 2081, 2056, 2032, 2009, 1986, 1964, 1942, 1920, 1900, 1879, 1859, 1840, 1820, 1802, 1783, 1765, 1748, 1730, 1713, 1697, 1680, 1664, 1649, 1633, 1618, 1603, 1589, 1574, 1560, 1547, 1533, 1520, 1507, 1494, 1481, 1469, 1456, 1444, 1432, 1421, 1409, 1398, 1387, 1376, 1365, 1355, 1344, 1334, 1324, 1314, 1304, 1295, 1285, 1276, 1266, 1257, 1248, 1239, 1231, 1222, 1214, 1205, 1197, 1189, 1181, 1173, 1165, 1157, 1150, 1142, 1135, 1128, 1120, 1113, 1106, 1099, 1092, 1085, 1079, 1072, 1066, 1059, 1053, 1046, 1040, 1034, 1028, 1022, 1016, 1010, 1004, 999, 993, 987, 982, 976, 971, 966, 960, 955, 950, 945, 940, 935, 930, 925, 920, 915, 910, 906, 901, 896, 892, 887, 883, 878, 874, 869, 865, 861, 857, 853, 848, 844, 840, 836, 832, 828, 824, 820, 817, 813, 809, 805, 802, 798, 794, 791, 787, 784, 780, 777, 773, 770, 767, 763, 760, 757, 753, 750, 747, 744, 741, 737, 734, 731, 728, 725, 722, 719, 716, 713, 710, 708, 705, 702, 699, 696, 694, 691, 688, 685};
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            const int* hdiv_table = hr == 180 ? c_HsvDivTable180 : c_HsvDivTable256;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            s = (diff * c_HsvDivTable[v] + (1 << (hsv_shift-1))) >> hsv_shift;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            h = (h * hdiv_table[diff] + (1 << (hsv_shift-1))) >> hsv_shift;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            const int* hdiv_table = hr == 180 ? c_HsvDivTable180 : c_HsvDivTable256;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            s = (diff * c_HsvDivTable[v] + (1 << (hsv_shift-1))) >> hsv_shift;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            h = (h * hdiv_table[diff] + (1 << (hsv_shift-1))) >> hsv_shift;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            s = diff / (float)(::fabs(v) + numeric_limits<float>::epsilon());
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                float tab[4];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                tab[0] = v;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                tab[1] = v * (1.f - s);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                tab[2] = v * (1.f - s * h);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                tab[3] = v * (1.f - s * (1.f - h));
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                b = tab[c_HsvSectorData[sector][0]];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                g = tab[c_HsvSectorData[sector][1]];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                r = tab[c_HsvSectorData[sector][2]];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                float tab[4];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                tab[0] = p2;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                tab[1] = p1;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                tab[2] = p1 + (p2 - p1) * (1 - h);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                tab[3] = p1 + (p2 - p1) * h;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                b = tab[c_HlsSectorData[sector][0]];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                g = tab[c_HlsSectorData[sector][1]];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                r = tab[c_HlsSectorData[sector][2]];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:///////////////////////////////////// RGB <-> Lab /////////////////////////////////////
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            lab_shift = xyz_shift,
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            lab_shift2 = (lab_shift + gamma_shift),
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __constant__ ushort c_sRGBGammaTab_b[] = {0,1,1,2,2,3,4,4,5,6,6,7,8,8,9,10,11,11,12,13,14,15,16,17,19,20,21,22,24,25,26,28,29,31,33,34,36,38,40,41,43,45,47,49,51,54,56,58,60,63,65,68,70,73,75,78,81,83,86,89,92,95,98,101,105,108,111,115,118,121,125,129,132,136,140,144,147,151,155,160,164,168,172,176,181,185,190,194,199,204,209,213,218,223,228,233,239,244,249,255,260,265,271,277,282,288,294,300,306,312,318,324,331,337,343,350,356,363,370,376,383,390,397,404,411,418,426,433,440,448,455,463,471,478,486,494,502,510,518,527,535,543,552,560,569,578,586,595,604,613,622,631,641,650,659,669,678,688,698,707,717,727,737,747,757,768,778,788,799,809,820,831,842,852,863,875,886,897,908,920,931,943,954,966,978,990,1002,1014,1026,1038,1050,1063,1075,1088,1101,1113,1126,1139,1152,1165,1178,1192,1205,1218,1232,1245,1259,1273,1287,1301,1315,1329,1343,1357,1372,1386,1401,1415,1430,1445,1460,1475,1490,1505,1521,1536,1551,1567,1583,1598,1614,1630,1646,1662,1678,1695,1711,1728,1744,1761,1778,1794,1811,1828,1846,1863,1880,1897,1915,1933,1950,1968,1986,2004,2022,2040};
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __device__ __forceinline__ int LabCbrt_b(int i)
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            return (1 << lab_shift2) * (x < 0.008856f ? x * 7.787f + 0.13793103448275862f : ::cbrtf(x));
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __device__ __forceinline__ void RGB2LabConvert_b(const T& src, D& dst)
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            const int Lshift = -((16 * 255 * (1 << lab_shift2) + 50) / 100);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                B = c_sRGBGammaTab_b[B];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                G = c_sRGBGammaTab_b[G];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                R = c_sRGBGammaTab_b[R];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            int fX = LabCbrt_b(CV_DESCALE(B * 778 + G * 1541 + R * 1777, lab_shift));
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            int fY = LabCbrt_b(CV_DESCALE(B * 296 + G * 2929 + R * 871, lab_shift));
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            int fZ = LabCbrt_b(CV_DESCALE(B * 3575 + G * 448 + R * 73, lab_shift));
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            int L = CV_DESCALE(Lscale * fY + Lshift, lab_shift2);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            int a = CV_DESCALE(500 * (fX - fY) + 128 * (1 << lab_shift2), lab_shift2);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            int b = CV_DESCALE(200 * (fY - fZ) + 128 * (1 << lab_shift2), lab_shift2);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __device__ __forceinline__ float splineInterpolate(float x, const float* tab, int n)
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            tab += ix * 4;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            return ((tab[3] * x + tab[2]) * x + tab[1]) * x + tab[0];
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __constant__ float c_sRGBGammaTab[] = {0,7.55853e-05,0.,-7.51331e-13,7.55853e-05,7.55853e-05,-2.25399e-12,3.75665e-12,0.000151171,7.55853e-05,9.01597e-12,-6.99932e-12,0.000226756,7.55853e-05,-1.1982e-11,2.41277e-12,0.000302341,7.55853e-05,-4.74369e-12,1.19001e-11,0.000377927,7.55853e-05,3.09568e-11,-2.09095e-11,0.000453512,7.55853e-05,-3.17718e-11,1.35303e-11,0.000529097,7.55853e-05,8.81905e-12,-4.10782e-12,0.000604683,7.55853e-05,-3.50439e-12,2.90097e-12,0.000680268,7.55853e-05,5.19852e-12,-7.49607e-12,0.000755853,7.55853e-05,-1.72897e-11,2.70833e-11,0.000831439,7.55854e-05,6.39602e-11,-4.26295e-11,0.000907024,7.55854e-05,-6.39282e-11,2.70193e-11,0.000982609,7.55853e-05,1.71298e-11,-7.24017e-12,0.00105819,7.55853e-05,-4.59077e-12,1.94137e-12,0.00113378,7.55853e-05,1.23333e-12,-5.25291e-13,0.00120937,7.55853e-05,-3.42545e-13,1.59799e-13,0.00128495,7.55853e-05,1.36852e-13,-1.13904e-13,0.00136054,7.55853e-05,-2.04861e-13,2.95818e-13,0.00143612,7.55853e-05,6.82594e-13,-1.06937e-12,0.00151171,7.55853e-05,-2.52551e-12,3.98166e-12,0.00158729,7.55853e-05,9.41946e-12,-1.48573e-11,0.00166288,7.55853e-05,-3.51523e-11,5.54474e-11,0.00173846,7.55854e-05,1.3119e-10,-9.0517e-11,0.00181405,7.55854e-05,-1.40361e-10,7.37899e-11,0.00188963,7.55853e-05,8.10085e-11,-8.82272e-11,0.00196522,7.55852e-05,-1.83673e-10,1.62704e-10,0.0020408,7.55853e-05,3.04438e-10,-2.13341e-10,0.00211639,7.55853e-05,-3.35586e-10,2.25e-10,0.00219197,7.55853e-05,3.39414e-10,-2.20997e-10,0.00226756,7.55853e-05,-3.23576e-10,1.93326e-10,0.00234315,7.55853e-05,2.564e-10,-8.66446e-11,0.00241873,7.55855e-05,-3.53328e-12,-7.9578e-11,0.00249432,7.55853e-05,-2.42267e-10,1.72126e-10,0.0025699,7.55853e-05,2.74111e-10,-1.43265e-10,0.00264549,7.55854e-05,-1.55683e-10,-6.47292e-11,0.00272107,7.55849e-05,-3.4987e-10,8.67842e-10,0.00279666,7.55868e-05,2.25366e-09,-3.8723e-09,0.00287224,7.55797e-05,-9.36325e-09,1.5087e-08,0.00294783,7.56063e-05,3.58978e-08,-5.69415e-08,0.00302341,7.55072e-05,-1.34927e-07,2.13144e-07,0.003099,7.58768e-05,5.04507e-07,1.38713e-07,0.00317552,7.7302e-05,9.20646e-07,-1.55186e-07,0.00325359,7.86777e-05,4.55087e-07,4.26813e-08,0.00333276,7.97159e-05,5.83131e-07,-1.06495e-08,0.00341305,8.08502e-05,5.51182e-07,3.87467e-09,0.00349446,8.19642e-05,5.62806e-07,-1.92586e-10,0.00357698,8.30892e-05,5.62228e-07,1.0866e-09,0.00366063,8.4217e-05,5.65488e-07,5.02818e-10,0.00374542,8.53494e-05,5.66997e-07,8.60211e-10,0.00383133,8.6486e-05,5.69577e-07,7.13044e-10,0.00391839,8.76273e-05,5.71716e-07,4.78527e-10,0.00400659,8.87722e-05,5.73152e-07,1.09818e-09,0.00409594,8.99218e-05,5.76447e-07,2.50964e-10,0.00418644,9.10754e-05,5.772e-07,1.15762e-09,0.00427809,9.22333e-05,5.80672e-07,2.40865e-10,0.0043709,9.33954e-05,5.81395e-07,1.13854e-09,0.00446488,9.45616e-05,5.84811e-07,3.27267e-10,0.00456003,9.57322e-05,5.85792e-07,8.1197e-10,0.00465635,9.69062e-05,5.88228e-07,6.15823e-10,0.00475384,9.80845e-05,5.90076e-07,9.15747e-10,0.00485252,9.92674e-05,5.92823e-07,3.778e-10,0.00495238,0.000100454,5.93956e-07,8.32623e-10,0.00505343,0.000101645,5.96454e-07,4.82695e-10,0.00515567,0.000102839,5.97902e-07,9.61904e-10,0.00525911,0.000104038,6.00788e-07,3.26281e-10,0.00536375,0.00010524,6.01767e-07,9.926e-10,0.00546959,0.000106447,6.04745e-07,3.59933e-10,0.00557664,0.000107657,6.05824e-07,8.2728e-10,0.0056849,0.000108871,6.08306e-07,5.21898e-10,0.00579438,0.00011009,6.09872e-07,8.10492e-10,0.00590508,0.000111312,6.12303e-07,4.27046e-10,0.00601701,0.000112538,6.13585e-07,7.40878e-10,0.00613016,0.000113767,6.15807e-07,8.00469e-10,0.00624454,0.000115001,6.18209e-07,2.48178e-10,0.00636016,0.000116238,6.18953e-07,1.00073e-09,0.00647702,0.000117479,6.21955e-07,4.05654e-10,0.00659512,0.000118724,6.23172e-07,6.36192e-10,0.00671447,0.000119973,6.25081e-07,7.74927e-10,0.00683507,0.000121225,6.27406e-07,4.54975e-10,0.00695692,0.000122481,6.28771e-07,6.64841e-10,0.00708003,0.000123741,6.30765e-07,6.10972e-10,0.00720441,0.000125004,6.32598e-07,6.16543e-10,0.00733004,0.000126271,6.34448e-07,6.48204e-10,0.00745695,0.000127542,6.36392e-07,5.15835e-10,0.00758513,0.000128816,6.3794e-07,5.48103e-10,0.00771458,0.000130094,6.39584e-07,1.01706e-09,0.00784532,0.000131376,6.42635e-07,4.0283e-11,0.00797734,0.000132661,6.42756e-07,6.84471e-10,0.00811064,0.000133949,6.4481e-07,9.47144e-10,0.00824524,0.000135241,6.47651e-07,1.83472e-10,0.00838112,0.000136537,6.48201e-07,1.11296e-09,0.00851831,0.000137837,6.5154e-07,2.13163e-11,0.0086568,0.00013914,6.51604e-07,6.64462e-10,0.00879659,0.000140445,6.53598e-07,1.04613e-09,0.00893769,0.000141756,6.56736e-07,-1.92377e-10,0.0090801,0.000143069,6.56159e-07,1.58601e-09,0.00922383,0.000144386,6.60917e-07,-5.63754e-10,0.00936888,0.000145706,6.59226e-07,1.60033e-09,0.00951524,0.000147029,6.64027e-07,-2.49543e-10,0.00966294,0.000148356,6.63278e-07,1.26043e-09,0.00981196,0.000149687,6.67059e-07,-1.35572e-10,0.00996231,0.00015102,6.66653e-07,1.14458e-09,0.010114,0.000152357,6.70086e-07,2.13864e-10,0.010267,0.000153698,6.70728e-07,7.93856e-10,0.0104214,0.000155042,6.73109e-07,3.36077e-10,0.0105771,0.000156389,6.74118e-07,6.55765e-10,0.0107342,0.000157739,6.76085e-07,7.66211e-10,0.0108926,0.000159094,6.78384e-07,4.66116e-12,0.0110524,0.000160451,6.78398e-07,1.07775e-09,0.0112135,0.000161811,6.81631e-07,3.41023e-10,0.011376,0.000163175,6.82654e-07,3.5205e-10,0.0115398,0.000164541,6.8371e-07,1.04473e-09,0.0117051,0.000165912,6.86844e-07,1.25757e-10,0.0118717,0.000167286,6.87222e-07,3.14818e-10,0.0120396,0.000168661,6.88166e-07,1.40886e-09,0.012209,0.000170042,6.92393e-07,-3.62244e-10,0.0123797,0.000171425,6.91306e-07,9.71397e-10,0.0125518,0.000172811,6.9422e-07,2.02003e-10,0.0127253,0.0001742,6.94826e-07,1.01448e-09,0.0129002,0.000175593,6.97869e-07,3.96653e-10,0.0130765,0.00017699,6.99059e-07,1.92927e-10,0.0132542,0.000178388,6.99638e-07,6.94305e-10,0.0134333,0.00017979,7.01721e-07,7.55108e-10,0.0136138,0.000181195,7.03986e-07,1.05918e-11,0.0137957,0.000182603,7.04018e-07,1.06513e-09,0.013979,0.000184015,7.07214e-07,3.85512e-10,0.0141637,0.00018543,7.0837e-07,1.86769e-10,0.0143499,0.000186848,7.0893e-07,7.30116e-10,0.0145374,0.000188268,7.11121e-07,6.17983e-10,0.0147264,0.000189692,7.12975e-07,5.23282e-10,0.0149168,0.000191119,7.14545e-07,8.28398e-11,0.0151087,0.000192549,7.14793e-07,1.0081e-09,0.0153019,0.000193981,7.17817e-07,5.41244e-10,0.0154966,0.000195418,7.19441e-07,-3.7907e-10,0.0156928,0.000196856,7.18304e-07,1.90641e-09,0.0158903,0.000198298,7.24023e-07,-7.27387e-10,0.0160893,0.000199744,7.21841e-07,1.00317e-09,0.0162898,0.000201191,7.24851e-07,4.39949e-10,0.0164917,0.000202642,7.2617e-07,9.6234e-10,0.0166951,0.000204097,7.29057e-07,-5.64019e-10,0.0168999,0.000205554,7.27365e-07,1.29374e-09,0.0171062,0.000207012,7.31247e-07,9.77025e-10,0.017314,0.000208478,7.34178e-07,-1.47651e-09,0.0175232,0.000209942,7.29748e-07,3.06636e-09,0.0177338,0.00021141,7.38947e-07,-1.47573e-09,0.017946,0.000212884,7.3452e-07,9.7386e-10,0.0181596,0.000214356,7.37442e-07,1.30562e-09,0.0183747,0.000215835,7.41358e-07,-6.08376e-10,0.0185913,0.000217315,7.39533e-07,1.12785e-09,0.0188093,0.000218798,7.42917e-07,-1.77711e-10,0.0190289,0.000220283,7.42384e-07,1.44562e-09,0.0192499,0.000221772,7.46721e-07,-1.68825e-11,0.0194724,0.000223266,7.4667e-07,4.84533e-10,0.0196964,0.000224761,7.48124e-07,-5.85298e-11,0.0199219,0.000226257,7.47948e-07,1.61217e-09,0.0201489,0.000227757,7.52785e-07,-8.02136e-10,0.0203775,0.00022926,7.50378e-07,1.59637e-09,0.0206075,0.000230766,7.55167e-07,4.47168e-12,0.020839,0.000232276,7.55181e-07,2.48387e-10,0.021072,0.000233787,7.55926e-07,8.6474e-10,0.0213066,0.000235302,7.5852e-07,1.78299e-11,0.0215426,0.000236819,7.58573e-07,9.26567e-10,0.0217802,0.000238339,7.61353e-07,1.34529e-12,0.0220193,0.000239862,7.61357e-07,9.30659e-10,0.0222599,0.000241387,7.64149e-07,1.34529e-12,0.0225021,0.000242915,7.64153e-07,9.26567e-10,0.0227458,0.000244447,7.66933e-07,1.76215e-11,0.022991,0.00024598,7.66986e-07,8.65536e-10,0.0232377,0.000247517,7.69582e-07,2.45677e-10,0.023486,0.000249057,7.70319e-07,1.44193e-11,0.0237358,0.000250598,7.70363e-07,1.55918e-09,0.0239872,0.000252143,7.7504e-07,-6.63173e-10,0.0242401,0.000253691,7.73051e-07,1.09357e-09,0.0244946,0.000255241,7.76331e-07,1.41919e-11,0.0247506,0.000256793,7.76374e-07,7.12248e-10,0.0250082,0.000258348,7.78511e-07,8.62049e-10,0.0252673,0.000259908,7.81097e-07,-4.35061e-10,0.025528,0.000261469,7.79792e-07,8.7825e-10,0.0257902,0.000263031,7.82426e-07,6.47181e-10,0.0260541,0.000264598,7.84368e-07,2.58448e-10,0.0263194,0.000266167,7.85143e-07,1.81558e-10,0.0265864,0.000267738,7.85688e-07,8.78041e-10,0.0268549,0.000269312,7.88322e-07,3.15102e-11,0.027125,0.000270889,7.88417e-07,8.58525e-10,0.0273967,0.000272468,7.90992e-07,2.59812e-10,0.02767,0.000274051,7.91772e-07,-3.5224e-11,0.0279448,0.000275634,7.91666e-07,1.74377e-09,0.0282212,0.000277223,7.96897e-07,-1.35196e-09,0.0284992,0.000278813,7.92841e-07,1.80141e-09,0.0287788,0.000280404,7.98246e-07,-2.65629e-10,0.0290601,0.000281999,7.97449e-07,1.12374e-09,0.0293428,0.000283598,8.0082e-07,-5.04106e-10,0.0296272,0.000285198,7.99308e-07,8.92764e-10,0.0299132,0.000286799,8.01986e-07,6.58379e-10,0.0302008,0.000288405,8.03961e-07,1.98971e-10,0.0304901,0.000290014,8.04558e-07,4.08382e-10,0.0307809,0.000291624,8.05783e-07,3.01839e-11,0.0310733,0.000293236,8.05874e-07,1.33343e-09,0.0313673,0.000294851,8.09874e-07,2.2419e-10,0.031663,0.000296472,8.10547e-07,-3.67606e-10,0.0319603,0.000298092,8.09444e-07,1.24624e-09,0.0322592,0.000299714,8.13182e-07,-8.92025e-10,0.0325597,0.000301338,8.10506e-07,2.32183e-09,0.0328619,0.000302966,8.17472e-07,-9.44719e-10,0.0331657,0.000304598,8.14638e-07,1.45703e-09,0.0334711,0.000306232,8.19009e-07,-1.15805e-09,0.0337781,0.000307866,8.15535e-07,3.17507e-09,0.0340868,0.000309507,8.2506e-07,-4.09161e-09,0.0343971,0.000311145,8.12785e-07,5.74079e-09,0.0347091,0.000312788,8.30007e-07,-3.97034e-09,0.0350227,0.000314436,8.18096e-07,2.68985e-09,0.035338,0.00031608,8.26166e-07,6.61676e-10,0.0356549,0.000317734,8.28151e-07,-1.61123e-09,0.0359734,0.000319386,8.23317e-07,2.05786e-09,0.0362936,0.000321038,8.29491e-07,8.30388e-10,0.0366155,0.0003227,8.31982e-07,-1.65424e-09,0.036939,0.000324359,8.27019e-07,2.06129e-09,0.0372642,0.000326019,8.33203e-07,8.59719e-10,0.0375911,0.000327688,8.35782e-07,-1.77488e-09,0.0379196,0.000329354,8.30458e-07,2.51464e-09,0.0382498,0.000331023,8.38002e-07,-8.33135e-10,0.0385817,0.000332696,8.35502e-07,8.17825e-10,0.0389152,0.00033437,8.37956e-07,1.28718e-09,0.0392504,0.00033605,8.41817e-07,-2.2413e-09,0.0395873,0.000337727,8.35093e-07,3.95265e-09,0.0399258,0.000339409,8.46951e-07,-2.39332e-09,0.0402661,0.000341095,8.39771e-07,1.89533e-09,0.040608,0.000342781,8.45457e-07,-1.46271e-09,0.0409517,0.000344467,8.41069e-07,3.95554e-09,0.041297,0.000346161,8.52936e-07,-3.18369e-09,0.041644,0.000347857,8.43385e-07,1.32873e-09,0.0419927,0.000349548,8.47371e-07,1.59402e-09,0.0423431,0.000351248,8.52153e-07,-2.54336e-10,0.0426952,0.000352951,8.5139e-07,-5.76676e-10,0.043049,0.000354652,8.4966e-07,2.56114e-09,0.0434045,0.000356359,8.57343e-07,-2.21744e-09,0.0437617,0.000358067,8.50691e-07,2.58344e-09,0.0441206,0.000359776,8.58441e-07,-6.65826e-10,0.0444813,0.000361491,8.56444e-07,7.99218e-11,0.0448436,0.000363204,8.56684e-07,3.46063e-10,0.0452077,0.000364919,8.57722e-07,2.26116e-09,0.0455734,0.000366641,8.64505e-07,-1.94005e-09,0.045941,0.000368364,8.58685e-07,1.77384e-09,0.0463102,0.000370087,8.64007e-07,-1.43005e-09,0.0466811,0.000371811,8.59717e-07,3.94634e-09,0.0470538,0.000373542,8.71556e-07,-3.17946e-09,0.0474282,0.000375276,8.62017e-07,1.32104e-09,0.0478043,0.000377003,8.6598e-07,1.62045e-09,0.0481822,0.00037874,8.70842e-07,-3.52297e-10,0.0485618,0.000380481,8.69785e-07,-2.11211e-10,0.0489432,0.00038222,8.69151e-07,1.19716e-09,0.0493263,0.000383962,8.72743e-07,-8.52026e-10,0.0497111,0.000385705,8.70187e-07,2.21092e-09,0.0500977,0.000387452,8.76819e-07,-5.41339e-10,0.050486,0.000389204,8.75195e-07,-4.5361e-11,0.0508761,0.000390954,8.75059e-07,7.22669e-10,0.0512679,0.000392706,8.77227e-07,8.79936e-10,0.0516615,0.000394463,8.79867e-07,-5.17048e-10,0.0520568,0.000396222,8.78316e-07,1.18833e-09,0.0524539,0.000397982,8.81881e-07,-5.11022e-10,0.0528528,0.000399744,8.80348e-07,8.55683e-10,0.0532534,0.000401507,8.82915e-07,8.13562e-10,0.0536558,0.000403276,8.85356e-07,-3.84603e-10,0.05406,0.000405045,8.84202e-07,7.24962e-10,0.0544659,0.000406816,8.86377e-07,1.20986e-09,0.0548736,0.000408592,8.90006e-07,-1.83896e-09,0.0552831,0.000410367,8.84489e-07,2.42071e-09,0.0556944,0.000412143,8.91751e-07,-3.93413e-10,0.0561074,0.000413925,8.90571e-07,-8.46967e-10,0.0565222,0.000415704,8.8803e-07,3.78122e-09,0.0569388,0.000417491,8.99374e-07,-3.1021e-09,0.0573572,0.000419281,8.90068e-07,1.17658e-09,0.0577774,0.000421064,8.93597e-07,2.12117e-09,0.0581993,0.000422858,8.99961e-07,-2.21068e-09,0.0586231,0.000424651,8.93329e-07,2.9961e-09,0.0590486,0.000426447,9.02317e-07,-2.32311e-09,0.059476,0.000428244,8.95348e-07,2.57122e-09,0.0599051,0.000430043,9.03062e-07,-5.11098e-10,0.0603361,0.000431847,9.01528e-07,-5.27166e-10,0.0607688,0.000433649,8.99947e-07,2.61984e-09,0.0612034,0.000435457,9.07806e-07,-2.50141e-09,0.0616397,0.000437265,9.00302e-07,3.66045e-09,0.0620779,0.000439076,9.11283e-07,-4.68977e-09,0.0625179,0.000440885,8.97214e-07,7.64783e-09,0.0629597,0.000442702,9.20158e-07,-7.27499e-09,0.0634033,0.000444521,8.98333e-07,6.55113e-09,0.0638487,0.000446337,9.17986e-07,-4.02844e-09,0.0642959,0.000448161,9.05901e-07,2.11196e-09,0.064745,0.000449979,9.12236e-07,3.03125e-09,0.0651959,0.000451813,9.2133e-07,-6.78648e-09,0.0656486,0.000453635,9.00971e-07,9.21375e-09,0.0661032,0.000455464,9.28612e-07,-7.71684e-09,0.0665596,0.000457299,9.05462e-07,6.7522e-09,0.0670178,0.00045913,9.25718e-07,-4.3907e-09,0.0674778,0.000460968,9.12546e-07,3.36e-09,0.0679397,0.000462803,9.22626e-07,-1.59876e-09,0.0684034,0.000464644,9.1783e-07,3.0351e-09,0.068869,0.000466488,9.26935e-07,-3.09101e-09,0.0693364,0.000468333,9.17662e-07,1.8785e-09,0.0698057,0.000470174,9.23298e-07,3.02733e-09,0.0702768,0.00047203,9.3238e-07,-6.53722e-09,0.0707497,0.000473875,9.12768e-07,8.22054e-09,0.0712245,0.000475725,9.37429e-07,-3.99325e-09,0.0717012,0.000477588,9.2545e-07,3.01839e-10,0.0721797,0.00047944,9.26355e-07,2.78597e-09,0.0726601,0.000481301,9.34713e-07,-3.99507e-09,0.0731423,0.000483158,9.22728e-07,5.7435e-09,0.0736264,0.000485021,9.39958e-07,-4.07776e-09,0.0741123,0.000486888,9.27725e-07,3.11695e-09,0.0746002,0.000488753,9.37076e-07,-9.39394e-10,0.0750898,0.000490625,9.34258e-07,6.4055e-10,0.0755814,0.000492495,9.3618e-07,-1.62265e-09,0.0760748,0.000494363,9.31312e-07,5.84995e-09,0.0765701,0.000496243,9.48861e-07,-6.87601e-09,0.0770673,0.00049812,9.28233e-07,6.75296e-09,0.0775664,0.000499997,9.48492e-07,-5.23467e-09,0.0780673,0.000501878,9.32788e-07,6.73523e-09,0.0785701,0.000503764,9.52994e-07,-6.80514e-09,0.0790748,0.000505649,9.32578e-07,5.5842e-09,0.0795814,0.000507531,9.49331e-07,-6.30583e-10,0.0800899,0.000509428,9.47439e-07,-3.0618e-09,0.0806003,0.000511314,9.38254e-07,5.4273e-09,0.0811125,0.000513206,9.54536e-07,-3.74627e-09,0.0816267,0.000515104,9.43297e-07,2.10713e-09,0.0821427,0.000516997,9.49618e-07,2.76839e-09,0.0826607,0.000518905,9.57924e-07,-5.73006e-09,0.0831805,0.000520803,9.40733e-07,5.25072e-09,0.0837023,0.0005227,9.56486e-07,-3.71718e-10,0.084226,0.000524612,9.5537e-07,-3.76404e-09,0.0847515,0.000526512,9.44078e-07,7.97735e-09,0.085279,0.000528424,9.6801e-07,-5.79367e-09,0.0858084,0.000530343,9.50629e-07,2.96268e-10,0.0863397,0.000532245,9.51518e-07,4.6086e-09,0.0868729,0.000534162,9.65344e-07,-3.82947e-09,0.087408,0.000536081,9.53856e-07,3.25861e-09,0.087945,0.000537998,9.63631e-07,-1.7543e-09,0.088484,0.00053992,9.58368e-07,3.75849e-09,0.0890249,0.000541848,9.69644e-07,-5.82891e-09,0.0895677,0.00054377,9.52157e-07,4.65593e-09,0.0901124,0.000545688,9.66125e-07,2.10643e-09,0.0906591,0.000547627,9.72444e-07,-5.63099e-09,0.0912077,0.000549555,9.55551e-07,5.51627e-09,0.0917582,0.000551483,9.721e-07,-1.53292e-09,0.0923106,0.000553422,9.67501e-07,6.15311e-10,0.092865,0.000555359,9.69347e-07,-9.28291e-10,0.0934213,0.000557295,9.66562e-07,3.09774e-09,0.0939796,0.000559237,9.75856e-07,-4.01186e-09,0.0945398,0.000561177,9.6382e-07,5.49892e-09,0.095102,0.000563121,9.80317e-07,-3.08258e-09,0.0956661,0.000565073,9.71069e-07,-6.19176e-10,0.0962321,0.000567013,9.69212e-07,5.55932e-09,0.0968001,0.000568968,9.8589e-07,-6.71704e-09,0.09737,0.00057092,9.65738e-07,6.40762e-09,0.0979419,0.00057287,9.84961e-07,-4.0122e-09,0.0985158,0.000574828,9.72925e-07,2.19059e-09,0.0990916,0.000576781,9.79496e-07,2.70048e-09,0.0996693,0.000578748,9.87598e-07,-5.54193e-09,0.100249,0.000580706,9.70972e-07,4.56597e-09,0.100831,0.000582662,9.8467e-07,2.17923e-09,0.101414,0.000584638,9.91208e-07,-5.83232e-09,0.102,0.000586603,9.73711e-07,6.24884e-09,0.102588,0.000588569,9.92457e-07,-4.26178e-09,0.103177,0.000590541,9.79672e-07,3.34781e-09,0.103769,0.00059251,9.89715e-07,-1.67904e-09,0.104362,0.000594485,9.84678e-07,3.36839e-09,0.104958,0.000596464,9.94783e-07,-4.34397e-09,0.105555,0.000598441,9.81751e-07,6.55696e-09,0.106155,0.000600424,1.00142e-06,-6.98272e-09,0.106756,0.000602406,9.80474e-07,6.4728e-09,0.107359,0.000604386,9.99893e-07,-4.00742e-09,0.107965,0.000606374,9.8787e-07,2.10654e-09,0.108572,0.000608356,9.9419e-07,3.0318e-09,0.109181,0.000610353,1.00329e-06,-6.7832e-09,0.109793,0.00061234,9.82936e-07,9.1998e-09,0.110406,0.000614333,1.01054e-06,-7.6642e-09,0.111021,0.000616331,9.87543e-07,6.55579e-09,0.111639,0.000618326,1.00721e-06,-3.65791e-09,0.112258,0.000620329,9.96236e-07,6.25467e-10,0.112879,0.000622324,9.98113e-07,1.15593e-09,0.113503,0.000624323,1.00158e-06,2.20158e-09,0.114128,0.000626333,1.00819e-06,-2.51191e-09,0.114755,0.000628342,1.00065e-06,3.95517e-10,0.115385,0.000630345,1.00184e-06,9.29807e-10,0.116016,0.000632351,1.00463e-06,3.33599e-09,0.116649,0.00063437,1.01463e-06,-6.82329e-09,0.117285,0.000636379,9.94163e-07,9.05595e-09,0.117922,0.000638395,1.02133e-06,-7.04862e-09,0.118562,0.000640416,1.00019e-06,4.23737e-09,0.119203,0.000642429,1.0129e-06,-2.45033e-09,0.119847,0.000644448,1.00555e-06,5.56395e-09,0.120492,0.000646475,1.02224e-06,-4.9043e-09,0.121139,0.000648505,1.00753e-06,-8.47952e-10,0.121789,0.000650518,1.00498e-06,8.29622e-09,0.122441,0.000652553,1.02987e-06,-9.98538e-09,0.123094,0.000654582,9.99914e-07,9.2936e-09,0.12375,0.00065661,1.02779e-06,-4.83707e-09,0.124407,0.000658651,1.01328e-06,2.60411e-09,0.125067,0.000660685,1.0211e-06,-5.57945e-09,0.125729,0.000662711,1.00436e-06,1.22631e-08,0.126392,0.000664756,1.04115e-06,-1.36704e-08,0.127058,0.000666798,1.00014e-06,1.26161e-08,0.127726,0.000668836,1.03798e-06,-6.99155e-09,0.128396,0.000670891,1.01701e-06,4.48836e-10,0.129068,0.000672926,1.01836e-06,5.19606e-09,0.129742,0.000674978,1.03394e-06,-6.3319e-09,0.130418,0.000677027,1.01495e-06,5.2305e-09,0.131096,0.000679073,1.03064e-06,3.11123e-10,0.131776,0.000681135,1.03157e-06,-6.47511e-09,0.132458,0.000683179,1.01215e-06,1.06882e-08,0.133142,0.000685235,1.04421e-06,-6.47519e-09,0.133829,0.000687304,1.02479e-06,3.11237e-10,0.134517,0.000689355,1.02572e-06,5.23035e-09,0.135207,0.000691422,1.04141e-06,-6.3316e-09,0.1359,0.000693486,1.02242e-06,5.19484e-09,0.136594,0.000695546,1.038e-06,4.53497e-10,0.137291,0.000697623,1.03936e-06,-7.00891e-09,0.137989,0.000699681,1.01834e-06,1.2681e-08,0.13869,0.000701756,1.05638e-06,-1.39128e-08,0.139393,0.000703827,1.01464e-06,1.31679e-08,0.140098,0.000705896,1.05414e-06,-8.95659e-09,0.140805,0.000707977,1.02727e-06,7.75742e-09,0.141514,0.000710055,1.05055e-06,-7.17182e-09,0.142225,0.000712135,1.02903e-06,6.02862e-09,0.142938,0.000714211,1.04712e-06,-2.04163e-09,0.143653,0.000716299,1.04099e-06,2.13792e-09,0.144371,0.000718387,1.04741e-06,-6.51009e-09,0.14509,0.000720462,1.02787e-06,9.00123e-09,0.145812,0.000722545,1.05488e-06,3.07523e-10,0.146535,0.000724656,1.0558e-06,-1.02312e-08,0.147261,0.000726737,1.02511e-06,1.0815e-08,0.147989,0.000728819,1.05755e-06,-3.22681e-09,0.148719,0.000730925,1.04787e-06,2.09244e-09,0.14945,0.000733027,1.05415e-06,-5.143e-09,0.150185,0.00073512,1.03872e-06,3.57844e-09,0.150921,0.000737208,1.04946e-06,5.73027e-09,0.151659,0.000739324,1.06665e-06,-1.15983e-08,0.152399,0.000741423,1.03185e-06,1.08605e-08,0.153142,0.000743519,1.06443e-06,-2.04106e-09,0.153886,0.000745642,1.05831e-06,-2.69642e-09,0.154633,0.00074775,1.05022e-06,-2.07425e-09,0.155382,0.000749844,1.044e-06,1.09934e-08,0.156133,0.000751965,1.07698e-06,-1.20972e-08,0.156886,0.000754083,1.04069e-06,7.59288e-09,0.157641,0.000756187,1.06347e-06,-3.37305e-09,0.158398,0.000758304,1.05335e-06,5.89921e-09,0.159158,0.000760428,1.07104e-06,-5.32248e-09,0.159919,0.000762554,1.05508e-06,4.8927e-10,0.160683,0.000764666,1.05654e-06,3.36547e-09,0.161448,0.000766789,1.06664e-06,9.50081e-10,0.162216,0.000768925,1.06949e-06,-7.16568e-09,0.162986,0.000771043,1.04799e-06,1.28114e-08,0.163758,0.000773177,1.08643e-06,-1.42774e-08,0.164533,0.000775307,1.0436e-06,1.44956e-08,0.165309,0.000777438,1.08708e-06,-1.39025e-08,0.166087,0.00077957,1.04538e-06,1.13118e-08,0.166868,0.000781695,1.07931e-06,-1.54224e-09,0.167651,0.000783849,1.07468e-06,-5.14312e-09,0.168436,0.000785983,1.05925e-06,7.21381e-09,0.169223,0.000788123,1.0809e-06,-8.81096e-09,0.170012,0.000790259,1.05446e-06,1.31289e-08,0.170803,0.000792407,1.09385e-06,-1.39022e-08,0.171597,0.000794553,1.05214e-06,1.26775e-08,0.172392,0.000796695,1.09018e-06,-7.00557e-09,0.17319,0.000798855,1.06916e-06,4.43796e-10,0.17399,0.000800994,1.07049e-06,5.23031e-09,0.174792,0.000803151,1.08618e-06,-6.46397e-09,0.175596,0.000805304,1.06679e-06,5.72444e-09,0.176403,0.000807455,1.08396e-06,-1.53254e-09,0.177211,0.000809618,1.07937e-06,4.05673e-10,0.178022,0.000811778,1.08058e-06,-9.01916e-11,0.178835,0.000813939,1.08031e-06,-4.49821e-11,0.17965,0.000816099,1.08018e-06,2.70234e-10,0.180467,0.00081826,1.08099e-06,-1.03603e-09,0.181286,0.000820419,1.07788e-06,3.87392e-09,0.182108,0.000822587,1.0895e-06,4.41522e-10,0.182932,0.000824767,1.09083e-06,-5.63997e-09,0.183758,0.000826932,1.07391e-06,7.21707e-09,0.184586,0.000829101,1.09556e-06,-8.32718e-09,0.185416,0.000831267,1.07058e-06,1.11907e-08,0.186248,0.000833442,1.10415e-06,-6.63336e-09,0.187083,0.00083563,1.08425e-06,4.41484e-10,0.187919,0.0008378,1.08557e-06,4.86754e-09,0.188758,0.000839986,1.10017e-06,-5.01041e-09,0.189599,0.000842171,1.08514e-06,2.72811e-10,0.190443,0.000844342,1.08596e-06,3.91916e-09,0.191288,0.000846526,1.09772e-06,-1.04819e-09,0.192136,0.000848718,1.09457e-06,2.73531e-10,0.192985,0.000850908,1.0954e-06,-4.58916e-11,0.193837,0.000853099,1.09526e-06,-9.01158e-11,0.194692,0.000855289,1.09499e-06,4.06506e-10,0.195548,0.00085748,1.09621e-06,-1.53595e-09,0.196407,0.000859668,1.0916e-06,5.73717e-09,0.197267,0.000861869,1.10881e-06,-6.51164e-09,0.19813,0.000864067,1.08928e-06,5.40831e-09,0.198995,0.000866261,1.1055e-06,-2.20401e-10,0.199863,0.000868472,1.10484e-06,-4.52652e-09,0.200732,0.000870668,1.09126e-06,3.42508e-09,0.201604,0.000872861,1.10153e-06,5.72762e-09,0.202478,0.000875081,1.11872e-06,-1.14344e-08,0.203354,0.000877284,1.08441e-06,1.02076e-08,0.204233,0.000879484,1.11504e-06,4.06355e-10,0.205113,0.000881715,1.11626e-06,-1.18329e-08,0.205996,0.000883912,1.08076e-06,1.71227e-08,0.206881,0.000886125,1.13213e-06,-1.19546e-08,0.207768,0.000888353,1.09626e-06,8.93465e-10,0.208658,0.000890548,1.09894e-06,8.38062e-09,0.209549,0.000892771,1.12408e-06,-4.61353e-09,0.210443,0.000895006,1.11024e-06,-4.82756e-09,0.211339,0.000897212,1.09576e-06,9.02245e-09,0.212238,0.00089943,1.12283e-06,-1.45997e-09,0.213138,0.000901672,1.11845e-06,-3.18255e-09,0.214041,0.000903899,1.1089e-06,-7.11073e-10,0.214946,0.000906115,1.10677e-06,6.02692e-09,0.215853,0.000908346,1.12485e-06,-8.49548e-09,0.216763,0.00091057,1.09936e-06,1.30537e-08,0.217675,0.000912808,1.13852e-06,-1.3917e-08,0.218588,0.000915044,1.09677e-06,1.28121e-08,0.219505,0.000917276,1.13521e-06,-7.5288e-09,0.220423,0.000919523,1.11262e-06,2.40205e-09,0.221344,0.000921756,1.11983e-06,-2.07941e-09,0.222267,0.000923989,1.11359e-06,5.91551e-09,0.223192,0.000926234,1.13134e-06,-6.68149e-09,0.224119,0.000928477,1.11129e-06,5.90929e-09,0.225049,0.000930717,1.12902e-06,-2.05436e-09,0.22598,0.000932969,1.12286e-06,2.30807e-09,0.226915,0.000935222,1.12978e-06,-7.17796e-09,0.227851,0.00093746,1.10825e-06,1.15028e-08,0.228789,0.000939711,1.14276e-06,-9.03083e-09,0.22973,0.000941969,1.11566e-06,9.71932e-09,0.230673,0.00094423,1.14482e-06,-1.49452e-08,0.231619,0.000946474,1.09998e-06,2.02591e-08,0.232566,0.000948735,1.16076e-06,-2.13879e-08,0.233516,0.000950993,1.0966e-06,2.05888e-08,0.234468,0.000953247,1.15837e-06,-1.62642e-08,0.235423,0.000955515,1.10957e-06,1.46658e-08,0.236379,0.000957779,1.15357e-06,-1.25966e-08,0.237338,0.000960048,1.11578e-06,5.91793e-09,0.238299,0.000962297,1.13353e-06,3.82602e-09,0.239263,0.000964576,1.14501e-06,-6.3208e-09,0.240229,0.000966847,1.12605e-06,6.55613e-09,0.241197,0.000969119,1.14572e-06,-5.00268e-09,0.242167,0.000971395,1.13071e-06,-1.44659e-09,0.243139,0.000973652,1.12637e-06,1.07891e-08,0.244114,0.000975937,1.15874e-06,-1.19073e-08,0.245091,0.000978219,1.12302e-06,7.03782e-09,0.246071,0.000980486,1.14413e-06,-1.34276e-09,0.247052,0.00098277,1.1401e-06,-1.66669e-09,0.248036,0.000985046,1.1351e-06,8.00935e-09,0.249022,0.00098734,1.15913e-06,-1.54694e-08,0.250011,0.000989612,1.11272e-06,2.4066e-08,0.251002,0.000991909,1.18492e-06,-2.11901e-08,0.251995,0.000994215,1.12135e-06,1.08973e-09,0.25299,0.000996461,1.12462e-06,1.68311e-08,0.253988,0.000998761,1.17511e-06,-8.8094e-09,0.254987,0.00100109,1.14868e-06,-1.13958e-08,0.25599,0.00100335,1.1145e-06,2.45902e-08,0.256994,0.00100565,1.18827e-06,-2.73603e-08,0.258001,0.00100795,1.10618e-06,2.52464e-08,0.25901,0.00101023,1.18192e-06,-1.40207e-08,0.260021,0.00101256,1.13986e-06,1.03387e-09,0.261035,0.00101484,1.14296e-06,9.8853e-09,0.262051,0.00101715,1.17262e-06,-1.07726e-08,0.263069,0.00101947,1.1403e-06,3.40272e-09,0.26409,0.00102176,1.15051e-06,-2.83827e-09,0.265113,0.00102405,1.142e-06,7.95039e-09,0.266138,0.00102636,1.16585e-06,8.39047e-10,0.267166,0.00102869,1.16836e-06,-1.13066e-08,0.268196,0.00103099,1.13444e-06,1.4585e-08,0.269228,0.00103331,1.1782e-06,-1.72314e-08,0.270262,0.00103561,1.1265e-06,2.45382e-08,0.271299,0.00103794,1.20012e-06,-2.13166e-08,0.272338,0.00104028,1.13617e-06,1.12364e-09,0.273379,0.00104255,1.13954e-06,1.68221e-08,0.274423,0.00104488,1.19001e-06,-8.80736e-09,0.275469,0.00104723,1.16358e-06,-1.13948e-08,0.276518,0.00104953,1.1294e-06,2.45839e-08,0.277568,0.00105186,1.20315e-06,-2.73361e-08,0.278621,0.00105418,1.12114e-06,2.51559e-08,0.279677,0.0010565,1.19661e-06,-1.36832e-08,0.280734,0.00105885,1.15556e-06,-2.25706e-10,0.281794,0.00106116,1.15488e-06,1.45862e-08,0.282857,0.00106352,1.19864e-06,-2.83167e-08,0.283921,0.00106583,1.11369e-06,3.90759e-08,0.284988,0.00106817,1.23092e-06,-3.85801e-08,0.286058,0.00107052,1.11518e-06,2.58375e-08,0.287129,0.00107283,1.19269e-06,-5.16498e-09,0.288203,0.0010752,1.1772e-06,-5.17768e-09,0.28928,0.00107754,1.16167e-06,-3.92671e-09,0.290358,0.00107985,1.14988e-06,2.08846e-08,0.29144,0.00108221,1.21254e-06,-2.00072e-08,0.292523,0.00108458,1.15252e-06,-4.60659e-10,0.293609,0.00108688,1.15114e-06,2.18499e-08,0.294697,0.00108925,1.21669e-06,-2.73343e-08,0.295787,0.0010916,1.13468e-06,2.78826e-08,0.29688,0.00109395,1.21833e-06,-2.45915e-08,0.297975,0.00109632,1.14456e-06,1.08787e-08,0.299073,0.00109864,1.17719e-06,1.08788e-08,0.300172,0.00110102,1.20983e-06,-2.45915e-08,0.301275,0.00110337,1.13605e-06,2.78828e-08,0.302379,0.00110573,1.2197e-06,-2.73348e-08,0.303486,0.00110808,1.1377e-06,2.18518e-08,0.304595,0.00111042,1.20325e-06,-4.67556e-10,0.305707,0.00111283,1.20185e-06,-1.99816e-08,0.306821,0.00111517,1.14191e-06,2.07891e-08,0.307937,0.00111752,1.20427e-06,-3.57026e-09,0.309056,0.00111992,1.19356e-06,-6.50797e-09,0.310177,0.00112228,1.17404e-06,-2.00165e-10,0.3113,0.00112463,1.17344e-06,7.30874e-09,0.312426,0.001127,1.19536e-06,7.67424e-10,0.313554,0.00112939,1.19767e-06,-1.03784e-08,0.314685,0.00113176,1.16653e-06,1.09437e-08,0.315818,0.00113412,1.19936e-06,-3.59406e-09,0.316953,0.00113651,1.18858e-06,3.43251e-09,0.318091,0.0011389,1.19888e-06,-1.0136e-08,0.319231,0.00114127,1.16847e-06,7.30915e-09,0.320374,0.00114363,1.1904e-06,1.07018e-08,0.321518,0.00114604,1.2225e-06,-2.03137e-08,0.322666,0.00114842,1.16156e-06,1.09484e-08,0.323815,0.00115078,1.19441e-06,6.32224e-09,0.324967,0.00115319,1.21337e-06,-6.43509e-09,0.326122,0.00115559,1.19407e-06,-1.03842e-08,0.327278,0.00115795,1.16291e-06,1.81697e-08,0.328438,0.00116033,1.21742e-06,-2.6901e-09,0.329599,0.00116276,1.20935e-06,-7.40939e-09,0.330763,0.00116515,1.18713e-06,2.52533e-09,0.331929,0.00116754,1.1947e-06,-2.69191e-09,0.333098,0.00116992,1.18663e-06,8.24218e-09,0.334269,0.00117232,1.21135e-06,-4.74377e-10,0.335443,0.00117474,1.20993e-06,-6.34471e-09,0.336619,0.00117714,1.1909e-06,-3.94922e-09,0.337797,0.00117951,1.17905e-06,2.21417e-08,0.338978,0.00118193,1.24547e-06,-2.50128e-08,0.340161,0.00118435,1.17043e-06,1.8305e-08,0.341346,0.00118674,1.22535e-06,-1.84048e-08,0.342534,0.00118914,1.17013e-06,2.55121e-08,0.343725,0.00119156,1.24667e-06,-2.40389e-08,0.344917,0.00119398,1.17455e-06,1.10389e-08,0.346113,0.00119636,1.20767e-06,9.68574e-09,0.34731,0.0011988,1.23673e-06,-1.99797e-08,0.34851,0.00120122,1.17679e-06,1.06284e-08,0.349713,0.0012036,1.20867e-06,7.26868e-09,0.350917,0.00120604,1.23048e-06,-9.90072e-09,0.352125,0.00120847,1.20078e-06,2.53177e-09,0.353334,0.00121088,1.20837e-06,-2.26199e-10,0.354546,0.0012133,1.20769e-06,-1.62705e-09,0.355761,0.00121571,1.20281e-06,6.73435e-09,0.356978,0.00121813,1.22302e-06,4.49207e-09,0.358197,0.00122059,1.23649e-06,-2.47027e-08,0.359419,0.00122299,1.16238e-06,3.47142e-08,0.360643,0.00122542,1.26653e-06,-2.47472e-08,0.36187,0.00122788,1.19229e-06,4.66965e-09,0.363099,0.00123028,1.20629e-06,6.06872e-09,0.36433,0.00123271,1.2245e-06,8.57729e-10,0.365564,0.00123516,1.22707e-06,-9.49952e-09,0.366801,0.00123759,1.19858e-06,7.33792e-09,0.36804,0.00124001,1.22059e-06,9.95025e-09,0.369281,0.00124248,1.25044e-06,-1.73366e-08,0.370525,0.00124493,1.19843e-06,-2.08464e-10,0.371771,0.00124732,1.1978e-06,1.81704e-08,0.373019,0.00124977,1.25232e-06,-1.28683e-08,0.37427,0.00125224,1.21371e-06,3.50042e-09,0.375524,0.00125468,1.22421e-06,-1.1335e-09,0.37678,0.00125712,1.22081e-06,1.03345e-09,0.378038,0.00125957,1.22391e-06,-3.00023e-09,0.379299,0.00126201,1.21491e-06,1.09676e-08,0.380562,0.00126447,1.24781e-06,-1.10676e-08,0.381828,0.00126693,1.21461e-06,3.50042e-09,0.383096,0.00126937,1.22511e-06,-2.93403e-09,0.384366,0.00127181,1.21631e-06,8.23574e-09,0.385639,0.00127427,1.24102e-06,-2.06607e-10,0.386915,0.00127675,1.2404e-06,-7.40935e-09,0.388193,0.00127921,1.21817e-06,4.1761e-11,0.389473,0.00128165,1.21829e-06,7.24223e-09,0.390756,0.0012841,1.24002e-06,7.91564e-10,0.392042,0.00128659,1.2424e-06,-1.04086e-08,0.393329,0.00128904,1.21117e-06,1.10405e-08,0.39462,0.0012915,1.24429e-06,-3.951e-09,0.395912,0.00129397,1.23244e-06,4.7634e-09,0.397208,0.00129645,1.24673e-06,-1.51025e-08,0.398505,0.0012989,1.20142e-06,2.58443e-08,0.399805,0.00130138,1.27895e-06,-2.86702e-08,0.401108,0.00130385,1.19294e-06,2.92318e-08,0.402413,0.00130632,1.28064e-06,-2.86524e-08,0.403721,0.0013088,1.19468e-06,2.57731e-08,0.405031,0.00131127,1.272e-06,-1.48355e-08,0.406343,0.00131377,1.2275e-06,3.76652e-09,0.407658,0.00131623,1.23879e-06,-2.30784e-10,0.408976,0.00131871,1.2381e-06,-2.84331e-09,0.410296,0.00132118,1.22957e-06,1.16041e-08,0.411618,0.00132367,1.26438e-06,-1.37708e-08,0.412943,0.00132616,1.22307e-06,1.36768e-08,0.41427,0.00132865,1.2641e-06,-1.1134e-08,0.4156,0.00133114,1.2307e-06,1.05714e-09,0.416933,0.00133361,1.23387e-06,6.90538e-09,0.418267,0.00133609,1.25459e-06,1.12372e-09,0.419605,0.00133861,1.25796e-06,-1.14002e-08,0.420945,0.00134109,1.22376e-06,1.46747e-08,0.422287,0.00134358,1.26778e-06,-1.7496e-08,0.423632,0.00134606,1.21529e-06,2.5507e-08,0.424979,0.00134857,1.29182e-06,-2.49272e-08,0.426329,0.00135108,1.21703e-06,1.45972e-08,0.427681,0.00135356,1.26083e-06,-3.65935e-09,0.429036,0.00135607,1.24985e-06,4.00178e-11,0.430393,0.00135857,1.24997e-06,3.49917e-09,0.431753,0.00136108,1.26047e-06,-1.40366e-08,0.433116,0.00136356,1.21836e-06,2.28448e-08,0.43448,0.00136606,1.28689e-06,-1.77378e-08,0.435848,0.00136858,1.23368e-06,1.83043e-08,0.437218,0.0013711,1.28859e-06,-2.56769e-08,0.43859,0.0013736,1.21156e-06,2.47987e-08,0.439965,0.0013761,1.28595e-06,-1.39133e-08,0.441342,0.00137863,1.24421e-06,1.05202e-09,0.442722,0.00138112,1.24737e-06,9.70507e-09,0.444104,0.00138365,1.27649e-06,-1.00698e-08,0.445489,0.00138617,1.24628e-06,7.72123e-10,0.446877,0.00138867,1.24859e-06,6.98132e-09,0.448267,0.00139118,1.26954e-06,1.10477e-09,0.449659,0.00139373,1.27285e-06,-1.14003e-08,0.451054,0.00139624,1.23865e-06,1.4694e-08,0.452452,0.00139876,1.28273e-06,-1.75734e-08,0.453852,0.00140127,1.23001e-06,2.5797e-08,0.455254,0.00140381,1.3074e-06,-2.60097e-08,0.456659,0.00140635,1.22937e-06,1.86371e-08,0.458067,0.00140886,1.28529e-06,-1.8736e-08,0.459477,0.00141137,1.22908e-06,2.65048e-08,0.46089,0.00141391,1.30859e-06,-2.76784e-08,0.462305,0.00141645,1.22556e-06,2.46043e-08,0.463722,0.00141897,1.29937e-06,-1.11341e-08,0.465143,0.00142154,1.26597e-06,-9.87033e-09,0.466565,0.00142404,1.23636e-06,2.08131e-08,0.467991,0.00142657,1.2988e-06,-1.37773e-08,0.469419,0.00142913,1.25746e-06,4.49378e-09,0.470849,0.00143166,1.27094e-06,-4.19781e-09,0.472282,0.00143419,1.25835e-06,1.22975e-08,0.473717,0.00143674,1.29524e-06,-1.51902e-08,0.475155,0.00143929,1.24967e-06,1.86608e-08,0.476596,0.00144184,1.30566e-06,-2.96506e-08,0.478039,0.00144436,1.2167e-06,4.03368e-08,0.479485,0.00144692,1.33771e-06,-4.22896e-08,0.480933,0.00144947,1.21085e-06,3.94148e-08,0.482384,0.00145201,1.32909e-06,-2.59626e-08,0.483837,0.00145459,1.2512e-06,4.83124e-09,0.485293,0.0014571,1.2657e-06,6.63757e-09,0.486751,0.00145966,1.28561e-06,-1.57911e-09,0.488212,0.00146222,1.28087e-06,-3.21468e-10,0.489676,0.00146478,1.27991e-06,2.86517e-09,0.491142,0.00146735,1.2885e-06,-1.11392e-08,0.49261,0.00146989,1.25508e-06,1.18893e-08,0.494081,0.00147244,1.29075e-06,-6.61574e-09,0.495555,0.001475,1.27091e-06,1.45736e-08,0.497031,0.00147759,1.31463e-06,-2.18759e-08,0.49851,0.00148015,1.249e-06,1.33252e-08,0.499992,0.00148269,1.28897e-06,-1.62277e-09,0.501476,0.00148526,1.28411e-06,-6.83421e-09,0.502962,0.00148781,1.2636e-06,2.89596e-08,0.504451,0.00149042,1.35048e-06,-4.93997e-08,0.505943,0.00149298,1.20228e-06,4.94299e-08,0.507437,0.00149553,1.35057e-06,-2.91107e-08,0.508934,0.00149814,1.26324e-06,7.40848e-09,0.510434,0.00150069,1.28547e-06,-5.23187e-10,0.511936,0.00150326,1.2839e-06,-5.31585e-09,0.51344,0.00150581,1.26795e-06,2.17866e-08,0.514947,0.00150841,1.33331e-06,-2.22257e-08,0.516457,0.00151101,1.26663e-06,7.51178e-09,0.517969,0.00151357,1.28917e-06,-7.82128e-09,0.519484,0.00151613,1.2657e-06,2.37733e-08,0.521002,0.00151873,1.33702e-06,-2.76674e-08,0.522522,0.00152132,1.25402e-06,2.72917e-08,0.524044,0.00152391,1.3359e-06,-2.18949e-08,0.525569,0.00152652,1.27021e-06,6.83372e-10,0.527097,0.00152906,1.27226e-06,1.91613e-08,0.528628,0.00153166,1.32974e-06,-1.77241e-08,0.53016,0.00153427,1.27657e-06,-7.86963e-09,0.531696,0.0015368,1.25296e-06,4.92027e-08,0.533234,0.00153945,1.40057e-06,-6.9732e-08,0.534775,0.00154204,1.19138e-06,5.09114e-08,0.536318,0.00154458,1.34411e-06,-1.4704e-08,0.537864,0.00154722,1.3e-06,7.9048e-09,0.539413,0.00154984,1.32371e-06,-1.69152e-08,0.540964,0.00155244,1.27297e-06,1.51355e-10,0.542517,0.00155499,1.27342e-06,1.63099e-08,0.544074,0.00155758,1.32235e-06,-5.78647e-09,0.545633,0.00156021,1.30499e-06,6.83599e-09,0.547194,0.00156284,1.3255e-06,-2.15575e-08,0.548758,0.00156543,1.26083e-06,1.97892e-08,0.550325,0.00156801,1.32019e-06,2.00525e-09,0.551894,0.00157065,1.32621e-06,-2.78103e-08,0.553466,0.00157322,1.24278e-06,4.96314e-08,0.555041,0.00157586,1.39167e-06,-5.1506e-08,0.556618,0.00157849,1.23716e-06,3.71835e-08,0.558198,0.00158107,1.34871e-06,-3.76233e-08,0.55978,0.00158366,1.23584e-06,5.37052e-08,0.561365,0.00158629,1.39695e-06,-5.79884e-08,0.562953,0.00158891,1.22299e-06,5.90392e-08,0.564543,0.00159153,1.4001e-06,-5.89592e-08,0.566136,0.00159416,1.22323e-06,5.7588e-08,0.567731,0.00159678,1.39599e-06,-5.21835e-08,0.569329,0.00159941,1.23944e-06,3.19369e-08,0.57093,0.00160199,1.33525e-06,-1.59594e-08,0.572533,0.00160461,1.28737e-06,3.19006e-08,0.574139,0.00160728,1.38307e-06,-5.20383e-08,0.575748,0.00160989,1.22696e-06,5.70431e-08,0.577359,0.00161251,1.39809e-06,-5.69247e-08,0.578973,0.00161514,1.22731e-06,5.14463e-08,0.580589,0.00161775,1.38165e-06,-2.9651e-08,0.582208,0.00162042,1.2927e-06,7.55339e-09,0.58383,0.00162303,1.31536e-06,-5.62636e-10,0.585455,0.00162566,1.31367e-06,-5.30281e-09,0.587081,0.00162827,1.29776e-06,2.17738e-08,0.588711,0.00163093,1.36309e-06,-2.21875e-08,0.590343,0.00163359,1.29652e-06,7.37164e-09,0.591978,0.00163621,1.31864e-06,-7.29907e-09,0.593616,0.00163882,1.29674e-06,2.18247e-08,0.595256,0.00164148,1.36221e-06,-2.03952e-08,0.596899,0.00164414,1.30103e-06,1.51241e-10,0.598544,0.00164675,1.30148e-06,1.97902e-08,0.600192,0.00164941,1.36085e-06,-1.97074e-08,0.601843,0.00165207,1.30173e-06,-5.65175e-10,0.603496,0.00165467,1.30004e-06,2.1968e-08,0.605152,0.00165734,1.36594e-06,-2.77024e-08,0.606811,0.00165999,1.28283e-06,2.92369e-08,0.608472,0.00166264,1.37054e-06,-2.96407e-08,0.610136,0.00166529,1.28162e-06,2.97215e-08,0.611803,0.00166795,1.37079e-06,-2.96408e-08,0.613472,0.0016706,1.28186e-06,2.92371e-08,0.615144,0.00167325,1.36957e-06,-2.77031e-08,0.616819,0.00167591,1.28647e-06,2.19708e-08,0.618496,0.00167855,1.35238e-06,-5.75407e-10,0.620176,0.00168125,1.35065e-06,-1.9669e-08,0.621858,0.00168389,1.29164e-06,1.96468e-08,0.623544,0.00168653,1.35058e-06,6.86403e-10,0.625232,0.00168924,1.35264e-06,-2.23924e-08,0.626922,0.00169187,1.28547e-06,2.92788e-08,0.628615,0.00169453,1.3733e-06,-3.51181e-08,0.630311,0.00169717,1.26795e-06,5.15889e-08,0.63201,0.00169987,1.42272e-06,-5.2028e-08,0.633711,0.00170255,1.26663e-06,3.73139e-08,0.635415,0.0017052,1.37857e-06,-3.76227e-08,0.637121,0.00170784,1.2657e-06,5.35722e-08,0.63883,0.00171054,1.42642e-06,-5.74567e-08,0.640542,0.00171322,1.25405e-06,5.70456e-08,0.642257,0.0017159,1.42519e-06,-5.15163e-08,0.643974,0.00171859,1.27064e-06,2.98103e-08,0.645694,0.00172122,1.36007e-06,-8.12016e-09,0.647417,0.00172392,1.33571e-06,2.67039e-09,0.649142,0.0017266,1.34372e-06,-2.56152e-09,0.65087,0.00172928,1.33604e-06,7.57571e-09,0.6526,0.00173197,1.35876e-06,-2.77413e-08,0.654334,0.00173461,1.27554e-06,4.3785e-08,0.65607,0.00173729,1.40689e-06,-2.81896e-08,0.657808,0.00174002,1.32233e-06,9.36893e-09,0.65955,0.00174269,1.35043e-06,-9.28617e-09,0.661294,0.00174536,1.32257e-06,2.77757e-08,0.66304,0.00174809,1.4059e-06,-4.2212e-08,0.66479,0.00175078,1.27926e-06,2.1863e-08,0.666542,0.0017534,1.34485e-06,1.43648e-08,0.668297,0.00175613,1.38795e-06,-1.97177e-08,0.670054,0.00175885,1.3288e-06,4.90115e-09,0.671814,0.00176152,1.3435e-06,1.13232e-10,0.673577,0.00176421,1.34384e-06,-5.3542e-09,0.675343,0.00176688,1.32778e-06,2.13035e-08,0.677111,0.0017696,1.39169e-06,-2.02553e-08,0.678882,0.00177232,1.33092e-06,1.13005e-10,0.680656,0.00177499,1.33126e-06,1.98031e-08,0.682432,0.00177771,1.39067e-06,-1.97211e-08,0.684211,0.00178043,1.33151e-06,-5.2349e-10,0.685993,0.00178309,1.32994e-06,2.18151e-08,0.687777,0.00178582,1.39538e-06,-2.71325e-08,0.689564,0.00178853,1.31398e-06,2.71101e-08,0.691354,0.00179124,1.39531e-06,-2.17035e-08,0.693147,0.00179396,1.3302e-06,9.92865e-11,0.694942,0.00179662,1.3305e-06,2.13063e-08,0.69674,0.00179935,1.39442e-06,-2.57198e-08,0.698541,0.00180206,1.31726e-06,2.19682e-08,0.700344,0.00180476,1.38317e-06,-2.54852e-09,0.70215,0.00180752,1.37552e-06,-1.17741e-08,0.703959,0.00181023,1.3402e-06,-9.95999e-09,0.705771,0.00181288,1.31032e-06,5.16141e-08,0.707585,0.00181566,1.46516e-06,-7.72869e-08,0.709402,0.00181836,1.2333e-06,7.87197e-08,0.711222,0.00182106,1.46946e-06,-5.87781e-08,0.713044,0.00182382,1.29312e-06,3.71834e-08,0.714869,0.00182652,1.40467e-06,-3.03511e-08,0.716697,0.00182924,1.31362e-06,2.46161e-08,0.718528,0.00183194,1.38747e-06,-8.5087e-09,0.720361,0.00183469,1.36194e-06,9.41892e-09,0.722197,0.00183744,1.3902e-06,-2.91671e-08,0.724036,0.00184014,1.3027e-06,4.76448e-08,0.725878,0.00184288,1.44563e-06,-4.22028e-08,0.727722,0.00184565,1.31902e-06,1.95682e-09,0.729569,0.00184829,1.3249e-06,3.43754e-08,0.731419,0.00185104,1.42802e-06,-2.0249e-08,0.733271,0.00185384,1.36727e-06,-1.29838e-08,0.735126,0.00185654,1.32832e-06,1.25794e-08,0.736984,0.00185923,1.36606e-06,2.22711e-08,0.738845,0.00186203,1.43287e-06,-4.20594e-08,0.740708,0.00186477,1.3067e-06,2.67571e-08,0.742574,0.00186746,1.38697e-06,-5.36424e-09,0.744443,0.00187022,1.37087e-06,-5.30023e-09,0.746315,0.00187295,1.35497e-06,2.65653e-08,0.748189,0.00187574,1.43467e-06,-4.13564e-08,0.750066,0.00187848,1.3106e-06,1.9651e-08,0.751946,0.00188116,1.36955e-06,2.23572e-08,0.753828,0.00188397,1.43663e-06,-4.9475e-08,0.755714,0.00188669,1.2882e-06,5.63335e-08,0.757602,0.00188944,1.4572e-06,-5.66499e-08,0.759493,0.00189218,1.28725e-06,5.10567e-08,0.761386,0.00189491,1.44042e-06,-2.83677e-08,0.763283,0.00189771,1.35532e-06,2.80962e-09,0.765182,0.00190042,1.36375e-06,1.71293e-08,0.767083,0.0019032,1.41513e-06,-1.17221e-08,0.768988,0.001906,1.37997e-06,-2.98453e-08,0.770895,0.00190867,1.29043e-06,7.14987e-08,0.772805,0.00191146,1.50493e-06,-7.73354e-08,0.774718,0.00191424,1.27292e-06,5.90292e-08,0.776634,0.00191697,1.45001e-06,-3.9572e-08,0.778552,0.00191975,1.33129e-06,3.9654e-08,0.780473,0.00192253,1.45026e-06,-5.94395e-08,0.782397,0.00192525,1.27194e-06,7.88945e-08,0.784324,0.00192803,1.50862e-06,-7.73249e-08,0.786253,0.00193082,1.27665e-06,5.15913e-08,0.788185,0.00193352,1.43142e-06,-9.83099e-09,0.79012,0.00193636,1.40193e-06,-1.22672e-08,0.792058,0.00193912,1.36513e-06,-7.05275e-10,0.793999,0.00194185,1.36301e-06,1.50883e-08,0.795942,0.00194462,1.40828e-06,-4.33147e-11,0.797888,0.00194744,1.40815e-06,-1.49151e-08,0.799837,0.00195021,1.3634e-06,9.93244e-11,0.801788,0.00195294,1.3637e-06,1.45179e-08,0.803743,0.00195571,1.40725e-06,1.43363e-09,0.8057,0.00195853,1.41155e-06,-2.02525e-08,0.80766,0.00196129,1.35079e-06,1.99718e-08,0.809622,0.00196405,1.41071e-06,-3.01649e-11,0.811588,0.00196687,1.41062e-06,-1.9851e-08,0.813556,0.00196964,1.35107e-06,1.98296e-08,0.815527,0.0019724,1.41056e-06,1.37485e-10,0.817501,0.00197522,1.41097e-06,-2.03796e-08,0.819477,0.00197798,1.34983e-06,2.17763e-08,0.821457,0.00198074,1.41516e-06,-7.12085e-09,0.823439,0.00198355,1.3938e-06,6.70707e-09,0.825424,0.00198636,1.41392e-06,-1.97074e-08,0.827412,0.00198913,1.35479e-06,1.25179e-08,0.829402,0.00199188,1.39235e-06,2.92405e-08,0.831396,0.00199475,1.48007e-06,-6.98755e-08,0.833392,0.0019975,1.27044e-06,7.14477e-08,0.835391,0.00200026,1.48479e-06,-3.71014e-08,0.837392,0.00200311,1.37348e-06,1.73533e-08,0.839397,0.00200591,1.42554e-06,-3.23118e-08,0.841404,0.00200867,1.32861e-06,5.2289e-08,0.843414,0.00201148,1.48547e-06,-5.76348e-08,0.845427,0.00201428,1.31257e-06,5.9041e-08,0.847443,0.00201708,1.48969e-06,-5.93197e-08,0.849461,0.00201988,1.31173e-06,5.90289e-08,0.851482,0.00202268,1.48882e-06,-5.75864e-08,0.853507,0.00202549,1.31606e-06,5.21075e-08,0.855533,0.00202828,1.47238e-06,-3.16344e-08,0.857563,0.00203113,1.37748e-06,1.48257e-08,0.859596,0.00203393,1.42196e-06,-2.76684e-08,0.861631,0.00203669,1.33895e-06,3.62433e-08,0.863669,0.00203947,1.44768e-06,1.90463e-09,0.86571,0.00204237,1.45339e-06,-4.38617e-08,0.867754,0.00204515,1.32181e-06,5.43328e-08,0.8698,0.00204796,1.48481e-06,-5.42603e-08,0.87185,0.00205076,1.32203e-06,4.34989e-08,0.873902,0.00205354,1.45252e-06,-5.26029e-10,0.875957,0.00205644,1.45095e-06,-4.13949e-08,0.878015,0.00205922,1.32676e-06,4.68962e-08,0.880075,0.00206201,1.46745e-06,-2.69807e-08,0.882139,0.00206487,1.38651e-06,1.42181e-09,0.884205,0.00206764,1.39077e-06,2.12935e-08,0.886274,0.00207049,1.45465e-06,-2.69912e-08,0.888346,0.00207332,1.37368e-06,2.70664e-08,0.890421,0.00207615,1.45488e-06,-2.16698e-08,0.892498,0.00207899,1.38987e-06,8.14756e-12,0.894579,0.00208177,1.38989e-06,2.16371e-08,0.896662,0.00208462,1.45481e-06,-2.6952e-08,0.898748,0.00208744,1.37395e-06,2.65663e-08,0.900837,0.00209027,1.45365e-06,-1.97084e-08,0.902928,0.00209312,1.39452e-06,-7.33731e-09,0.905023,0.00209589,1.37251e-06,4.90578e-08,0.90712,0.00209878,1.51968e-06,-6.96845e-08,0.90922,0.00210161,1.31063e-06,5.08664e-08,0.911323,0.00210438,1.46323e-06,-1.45717e-08,0.913429,0.00210727,1.41952e-06,7.42038e-09,0.915538,0.00211013,1.44178e-06,-1.51097e-08,0.917649,0.00211297,1.39645e-06,-6.58618e-09,0.919764,0.00211574,1.37669e-06,4.14545e-08,0.921881,0.00211862,1.50105e-06,-4.00222e-08,0.924001,0.0021215,1.38099e-06,-5.7518e-10,0.926124,0.00212426,1.37926e-06,4.23229e-08,0.92825,0.00212714,1.50623e-06,-4.9507e-08,0.930378,0.00213001,1.35771e-06,3.64958e-08,0.93251,0.00213283,1.4672e-06,-3.68713e-08,0.934644,0.00213566,1.35658e-06,5.13848e-08,0.936781,0.00213852,1.51074e-06,-4.94585e-08,0.938921,0.0021414,1.36236e-06,2.72399e-08,0.941064,0.0021442,1.44408e-06,1.0372e-10,0.943209,0.00214709,1.44439e-06,-2.76547e-08,0.945358,0.0021499,1.36143e-06,5.09106e-08,0.947509,0.00215277,1.51416e-06,-5.67784e-08,0.949663,0.00215563,1.34382e-06,5.69935e-08,0.95182,0.00215849,1.5148e-06,-5.19861e-08,0.95398,0.00216136,1.35885e-06,3.17417e-08,0.956143,0.00216418,1.45407e-06,-1.53758e-08,0.958309,0.00216704,1.40794e-06,2.97615e-08,0.960477,0.00216994,1.49723e-06,-4.40657e-08,0.962649,0.00217281,1.36503e-06,2.72919e-08,0.964823,0.00217562,1.44691e-06,-5.49729e-09,0.967,0.0021785,1.43041e-06,-5.30273e-09,0.96918,0.00218134,1.41451e-06,2.67084e-08,0.971363,0.00218425,1.49463e-06,-4.19265e-08,0.973548,0.00218711,1.36885e-06,2.17881e-08,0.975737,0.00218992,1.43422e-06,1.43789e-08,0.977928,0.00219283,1.47735e-06,-1.96989e-08,0.980122,0.00219572,1.41826e-06,4.81221e-09,0.98232,0.00219857,1.43269e-06,4.50048e-10,0.98452,0.00220144,1.43404e-06,-6.61237e-09,0.986722,0.00220429,1.41421e-06,2.59993e-08,0.988928,0.0022072,1.4922e-06,-3.77803e-08,0.991137,0.00221007,1.37886e-06,5.9127e-09,0.993348,0.00221284,1.3966e-06,1.33339e-07,0.995563,0.00221604,1.79662e-06,-5.98872e-07,0.99778,0.00222015,0.,0.};
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __device__ __forceinline__ void RGB2LabConvert_f(const T& src, D& dst)
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                B = splineInterpolate(B * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                G = splineInterpolate(G * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                R = splineInterpolate(R * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        template <typename T, int scn, int dcn, bool srgb, int blueIdx> struct RGB2Lab;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        struct RGB2Lab<uchar, scn, dcn, srgb, blueIdx>
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                RGB2LabConvert_b<srgb, blueIdx>(src, dst);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            __host__ __device__ __forceinline__ RGB2Lab() {}
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            __host__ __device__ __forceinline__ RGB2Lab(const RGB2Lab&) {}
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        struct RGB2Lab<float, scn, dcn, srgb, blueIdx>
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                RGB2LabConvert_f<srgb, blueIdx>(src, dst);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            __host__ __device__ __forceinline__ RGB2Lab() {}
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            __host__ __device__ __forceinline__ RGB2Lab(const RGB2Lab&) {}
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:#define OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(name, scn, dcn, srgb, blueIdx) \
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        typedef ::cv::cuda::device::color_detail::RGB2Lab<T, scn, dcn, srgb, blueIdx> functor_type; \
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __constant__ float c_sRGBInvGammaTab[] = {0,0.0126255,0.,-8.33961e-06,0.0126172,0.0126005,-2.50188e-05,4.1698e-05,0.0252344,0.0126756,0.000100075,-0.000158451,0.0378516,0.0124004,-0.000375277,-0.000207393,0.0496693,0.0110276,-0.000997456,0.00016837,0.0598678,0.00953783,-0.000492346,2.07235e-05,0.068934,0.00861531,-0.000430176,3.62876e-05,0.0771554,0.00786382,-0.000321313,1.87625e-05,0.0847167,0.00727748,-0.000265025,1.53594e-05,0.0917445,0.00679351,-0.000218947,1.10545e-05,0.0983301,0.00638877,-0.000185784,8.66984e-06,0.104542,0.00604322,-0.000159774,6.82996e-06,0.110432,0.00574416,-0.000139284,5.51008e-06,0.116042,0.00548212,-0.000122754,4.52322e-06,0.121406,0.00525018,-0.000109184,3.75557e-06,0.126551,0.00504308,-9.79177e-05,3.17134e-06,0.131499,0.00485676,-8.84037e-05,2.68469e-06,0.13627,0.004688,-8.03496e-05,2.31725e-06,0.14088,0.00453426,-7.33978e-05,2.00868e-06,0.145343,0.00439349,-6.73718e-05,1.74775e-06,0.149671,0.00426399,-6.21286e-05,1.53547e-06,0.153875,0.00414434,-5.75222e-05,1.364e-06,0.157963,0.00403338,-5.34301e-05,1.20416e-06,0.161944,0.00393014,-4.98177e-05,1.09114e-06,0.165825,0.00383377,-4.65443e-05,9.57987e-07,0.169613,0.00374356,-4.36703e-05,8.88359e-07,0.173314,0.00365888,-4.10052e-05,7.7849e-07,0.176933,0.00357921,-3.86697e-05,7.36254e-07,0.180474,0.00350408,-3.6461e-05,6.42534e-07,0.183942,0.00343308,-3.45334e-05,6.12614e-07,0.187342,0.00336586,-3.26955e-05,5.42894e-07,0.190675,0.00330209,-3.10669e-05,5.08967e-07,0.193947,0.00324149,-2.954e-05,4.75977e-07,0.197159,0.00318383,-2.8112e-05,4.18343e-07,0.200315,0.00312887,-2.6857e-05,4.13651e-07,0.203418,0.00307639,-2.5616e-05,3.70847e-07,0.206469,0.00302627,-2.45035e-05,3.3813e-07,0.209471,0.00297828,-2.34891e-05,3.32999e-07,0.212426,0.0029323,-2.24901e-05,2.96826e-07,0.215336,0.00288821,-2.15996e-05,2.82736e-07,0.218203,0.00284586,-2.07514e-05,2.70961e-07,0.221029,0.00280517,-1.99385e-05,2.42744e-07,0.223814,0.00276602,-1.92103e-05,2.33277e-07,0.226561,0.0027283,-1.85105e-05,2.2486e-07,0.229271,0.00269195,-1.78359e-05,2.08383e-07,0.231945,0.00265691,-1.72108e-05,1.93305e-07,0.234585,0.00262307,-1.66308e-05,1.80687e-07,0.237192,0.00259035,-1.60888e-05,1.86632e-07,0.239766,0.00255873,-1.55289e-05,1.60569e-07,0.24231,0.00252815,-1.50472e-05,1.54566e-07,0.244823,0.00249852,-1.45835e-05,1.59939e-07,0.247307,0.00246983,-1.41037e-05,1.29549e-07,0.249763,0.00244202,-1.3715e-05,1.41429e-07,0.252191,0.00241501,-1.32907e-05,1.39198e-07,0.254593,0.00238885,-1.28731e-05,1.06444e-07,0.256969,0.00236342,-1.25538e-05,1.2048e-07,0.25932,0.00233867,-1.21924e-05,1.26892e-07,0.261647,0.00231467,-1.18117e-05,8.72084e-08,0.26395,0.00229131,-1.15501e-05,1.20323e-07,0.26623,0.00226857,-1.11891e-05,8.71514e-08,0.268487,0.00224645,-1.09276e-05,9.73165e-08,0.270723,0.00222489,-1.06357e-05,8.98259e-08,0.272937,0.00220389,-1.03662e-05,7.98218e-08,0.275131,0.00218339,-1.01267e-05,9.75254e-08,0.277304,0.00216343,-9.83416e-06,6.65195e-08,0.279458,0.00214396,-9.63461e-06,8.34313e-08,0.281592,0.00212494,-9.38431e-06,7.65919e-08,0.283708,0.00210641,-9.15454e-06,5.7236e-08,0.285805,0.00208827,-8.98283e-06,8.18939e-08,0.287885,0.00207055,-8.73715e-06,6.2224e-08,0.289946,0.00205326,-8.55047e-06,5.66388e-08,0.291991,0.00203633,-8.38056e-06,6.88491e-08,0.294019,0.00201978,-8.17401e-06,5.53955e-08,0.296031,0.00200359,-8.00782e-06,6.71971e-08,0.298027,0.00198778,-7.80623e-06,3.34439e-08,0.300007,0.00197227,-7.7059e-06,6.7248e-08,0.301971,0.00195706,-7.50416e-06,5.51915e-08,0.303921,0.00194221,-7.33858e-06,3.98124e-08,0.305856,0.00192766,-7.21915e-06,5.37795e-08,0.307776,0.00191338,-7.05781e-06,4.30919e-08,0.309683,0.00189939,-6.92853e-06,4.20744e-08,0.311575,0.00188566,-6.80231e-06,5.68321e-08,0.313454,0.00187223,-6.63181e-06,2.86195e-08,0.31532,0.00185905,-6.54595e-06,3.73075e-08,0.317172,0.00184607,-6.43403e-06,6.05684e-08,0.319012,0.00183338,-6.25233e-06,1.84426e-08,0.320839,0.00182094,-6.197e-06,4.44757e-08,0.322654,0.00180867,-6.06357e-06,4.20729e-08,0.324456,0.00179667,-5.93735e-06,2.56511e-08,0.326247,0.00178488,-5.8604e-06,3.41368e-08,0.328026,0.00177326,-5.75799e-06,4.64177e-08,0.329794,0.00176188,-5.61874e-06,1.86107e-08,0.33155,0.0017507,-5.5629e-06,2.81511e-08,0.333295,0.00173966,-5.47845e-06,4.75987e-08,0.335029,0.00172884,-5.33565e-06,1.98726e-08,0.336753,0.00171823,-5.27604e-06,2.19226e-08,0.338466,0.00170775,-5.21027e-06,4.14483e-08,0.340169,0.00169745,-5.08592e-06,2.09017e-08,0.341861,0.00168734,-5.02322e-06,2.39561e-08,0.343543,0.00167737,-4.95135e-06,3.22852e-08,0.345216,0.00166756,-4.85449e-06,2.57173e-08,0.346878,0.00165793,-4.77734e-06,1.38569e-08,0.348532,0.00164841,-4.73577e-06,3.80634e-08,0.350175,0.00163906,-4.62158e-06,1.27043e-08,0.35181,0.00162985,-4.58347e-06,3.03279e-08,0.353435,0.00162078,-4.49249e-06,1.49961e-08,0.355051,0.00161184,-4.4475e-06,2.88977e-08,0.356659,0.00160303,-4.3608e-06,1.84241e-08,0.358257,0.00159436,-4.30553e-06,1.6616e-08,0.359848,0.0015858,-4.25568e-06,3.43218e-08,0.361429,0.00157739,-4.15272e-06,-4.89172e-09,0.363002,0.00156907,-4.16739e-06,4.48498e-08,0.364567,0.00156087,-4.03284e-06,4.30676e-09,0.366124,0.00155282,-4.01992e-06,2.73303e-08,0.367673,0.00154486,-3.93793e-06,5.58036e-09,0.369214,0.001537,-3.92119e-06,3.97554e-08,0.370747,0.00152928,-3.80193e-06,-1.55904e-08,0.372272,0.00152163,-3.8487e-06,5.24081e-08,0.37379,0.00151409,-3.69147e-06,-1.52272e-08,0.375301,0.00150666,-3.73715e-06,3.83028e-08,0.376804,0.0014993,-3.62225e-06,1.10278e-08,0.378299,0.00149209,-3.58916e-06,6.99326e-09,0.379788,0.00148493,-3.56818e-06,2.06038e-08,0.381269,0.00147786,-3.50637e-06,2.98009e-08,0.382744,0.00147093,-3.41697e-06,-2.05978e-08,0.384211,0.00146404,-3.47876e-06,5.25899e-08,0.385672,0.00145724,-3.32099e-06,-1.09471e-08,0.387126,0.00145056,-3.35383e-06,2.10009e-08,0.388573,0.00144392,-3.29083e-06,1.63501e-08,0.390014,0.00143739,-3.24178e-06,3.00641e-09,0.391448,0.00143091,-3.23276e-06,3.12282e-08,0.392875,0.00142454,-3.13908e-06,-8.70932e-09,0.394297,0.00141824,-3.16521e-06,3.34114e-08,0.395712,0.00141201,-3.06497e-06,-5.72754e-09,0.397121,0.00140586,-3.08215e-06,1.9301e-08,0.398524,0.00139975,-3.02425e-06,1.7931e-08,0.39992,0.00139376,-2.97046e-06,-1.61822e-09,0.401311,0.00138781,-2.97531e-06,1.83442e-08,0.402696,0.00138192,-2.92028e-06,1.76485e-08,0.404075,0.00137613,-2.86733e-06,4.68617e-10,0.405448,0.00137039,-2.86593e-06,1.02794e-08,0.406816,0.00136469,-2.83509e-06,1.80179e-08,0.408178,0.00135908,-2.78104e-06,7.05594e-09,0.409534,0.00135354,-2.75987e-06,1.33633e-08,0.410885,0.00134806,-2.71978e-06,-9.04568e-10,0.41223,0.00134261,-2.72249e-06,2.0057e-08,0.41357,0.00133723,-2.66232e-06,1.00841e-08,0.414905,0.00133194,-2.63207e-06,-7.88835e-10,0.416234,0.00132667,-2.63444e-06,2.28734e-08,0.417558,0.00132147,-2.56582e-06,-1.29785e-09,0.418877,0.00131633,-2.56971e-06,1.21205e-08,0.420191,0.00131123,-2.53335e-06,1.24202e-08,0.421499,0.0013062,-2.49609e-06,-2.19681e-09,0.422803,0.0013012,-2.50268e-06,2.61696e-08,0.424102,0.00129628,-2.42417e-06,-1.30747e-08,0.425396,0.00129139,-2.46339e-06,2.6129e-08,0.426685,0.00128654,-2.38501e-06,-2.03454e-09,0.427969,0.00128176,-2.39111e-06,1.18115e-08,0.429248,0.00127702,-2.35567e-06,1.43932e-08,0.430523,0.00127235,-2.31249e-06,-9.77965e-09,0.431793,0.00126769,-2.34183e-06,2.47253e-08,0.433058,0.00126308,-2.26766e-06,2.85278e-10,0.434319,0.00125855,-2.2668e-06,3.93614e-09,0.435575,0.00125403,-2.25499e-06,1.37722e-08,0.436827,0.00124956,-2.21368e-06,5.79803e-10,0.438074,0.00124513,-2.21194e-06,1.37112e-08,0.439317,0.00124075,-2.1708e-06,4.17973e-09,0.440556,0.00123642,-2.15826e-06,-6.27703e-10,0.44179,0.0012321,-2.16015e-06,2.81332e-08,0.44302,0.00122787,-2.07575e-06,-2.24985e-08,0.444246,0.00122365,-2.14324e-06,3.20586e-08,0.445467,0.00121946,-2.04707e-06,-1.6329e-08,0.446685,0.00121532,-2.09605e-06,3.32573e-08,0.447898,0.00121122,-1.99628e-06,-2.72927e-08,0.449107,0.00120715,-2.07816e-06,4.6111e-08,0.450312,0.00120313,-1.93983e-06,-3.79416e-08,0.451514,0.00119914,-2.05365e-06,4.60507e-08,0.452711,0.00119517,-1.9155e-06,-2.7052e-08,0.453904,0.00119126,-1.99666e-06,3.23551e-08,0.455093,0.00118736,-1.89959e-06,-1.29613e-08,0.456279,0.00118352,-1.93848e-06,1.94905e-08,0.45746,0.0011797,-1.88e-06,-5.39588e-09,0.458638,0.00117593,-1.89619e-06,2.09282e-09,0.459812,0.00117214,-1.88991e-06,2.68267e-08,0.460982,0.00116844,-1.80943e-06,-1.99925e-08,0.462149,0.00116476,-1.86941e-06,2.3341e-08,0.463312,0.00116109,-1.79939e-06,-1.37674e-08,0.464471,0.00115745,-1.84069e-06,3.17287e-08,0.465627,0.00115387,-1.7455e-06,-2.37407e-08,0.466779,0.00115031,-1.81673e-06,3.34315e-08,0.467927,0.00114677,-1.71643e-06,-2.05786e-08,0.469073,0.00114328,-1.77817e-06,1.90802e-08,0.470214,0.00113978,-1.72093e-06,3.86247e-09,0.471352,0.00113635,-1.70934e-06,-4.72759e-09,0.472487,0.00113292,-1.72352e-06,1.50478e-08,0.473618,0.00112951,-1.67838e-06,4.14108e-09,0.474746,0.00112617,-1.66595e-06,-1.80986e-09,0.47587,0.00112283,-1.67138e-06,3.09816e-09,0.476991,0.0011195,-1.66209e-06,1.92198e-08,0.478109,0.00111623,-1.60443e-06,-2.03726e-08,0.479224,0.00111296,-1.66555e-06,3.2468e-08,0.480335,0.00110973,-1.56814e-06,-2.00922e-08,0.481443,0.00110653,-1.62842e-06,1.80983e-08,0.482548,0.00110333,-1.57413e-06,7.30362e-09,0.48365,0.0011002,-1.55221e-06,-1.75107e-08,0.484749,0.00109705,-1.60475e-06,3.29373e-08,0.485844,0.00109393,-1.50594e-06,-2.48315e-08,0.486937,0.00109085,-1.58043e-06,3.65865e-08,0.488026,0.0010878,-1.47067e-06,-3.21078e-08,0.489112,0.00108476,-1.56699e-06,3.22397e-08,0.490195,0.00108172,-1.47027e-06,-7.44391e-09,0.491276,0.00107876,-1.49261e-06,-2.46428e-09,0.492353,0.00107577,-1.5e-06,1.73011e-08,0.493427,0.00107282,-1.4481e-06,-7.13552e-09,0.494499,0.0010699,-1.4695e-06,1.1241e-08,0.495567,0.001067,-1.43578e-06,-8.02637e-09,0.496633,0.0010641,-1.45986e-06,2.08645e-08,0.497695,0.00106124,-1.39726e-06,-1.58271e-08,0.498755,0.0010584,-1.44475e-06,1.26415e-08,0.499812,0.00105555,-1.40682e-06,2.48655e-08,0.500866,0.00105281,-1.33222e-06,-5.24988e-08,0.501918,0.00104999,-1.48972e-06,6.59206e-08,0.502966,0.00104721,-1.29196e-06,-3.237e-08,0.504012,0.00104453,-1.38907e-06,3.95479e-09,0.505055,0.00104176,-1.3772e-06,1.65509e-08,0.506096,0.00103905,-1.32755e-06,-1.05539e-08,0.507133,0.00103637,-1.35921e-06,2.56648e-08,0.508168,0.00103373,-1.28222e-06,-3.25007e-08,0.509201,0.00103106,-1.37972e-06,4.47336e-08,0.51023,0.00102844,-1.24552e-06,-2.72245e-08,0.511258,0.00102587,-1.32719e-06,4.55952e-09,0.512282,0.00102323,-1.31352e-06,8.98645e-09,0.513304,0.00102063,-1.28656e-06,1.90992e-08,0.514323,0.00101811,-1.22926e-06,-2.57786e-08,0.51534,0.00101557,-1.30659e-06,2.44104e-08,0.516355,0.00101303,-1.23336e-06,-1.22581e-08,0.517366,0.00101053,-1.27014e-06,2.4622e-08,0.518376,0.00100806,-1.19627e-06,-2.66253e-08,0.519383,0.00100559,-1.27615e-06,2.22744e-08,0.520387,0.00100311,-1.20932e-06,-2.8679e-09,0.521389,0.00100068,-1.21793e-06,-1.08029e-08,0.522388,0.000998211,-1.25034e-06,4.60795e-08,0.523385,0.000995849,-1.1121e-06,-5.4306e-08,0.52438,0.000993462,-1.27502e-06,5.19354e-08,0.525372,0.000991067,-1.11921e-06,-3.42262e-08,0.526362,0.000988726,-1.22189e-06,2.53646e-08,0.52735,0.000986359,-1.14579e-06,-7.62782e-09,0.528335,0.000984044,-1.16868e-06,5.14668e-09,0.529318,0.000981722,-1.15324e-06,-1.29589e-08,0.530298,0.000979377,-1.19211e-06,4.66888e-08,0.531276,0.000977133,-1.05205e-06,-5.45868e-08,0.532252,0.000974865,-1.21581e-06,5.24495e-08,0.533226,0.000972591,-1.05846e-06,-3.60019e-08,0.534198,0.000970366,-1.16647e-06,3.19537e-08,0.535167,0.000968129,-1.07061e-06,-3.2208e-08,0.536134,0.000965891,-1.16723e-06,3.72738e-08,0.537099,0.000963668,-1.05541e-06,2.32205e-09,0.538061,0.000961564,-1.04844e-06,-4.65618e-08,0.539022,0.000959328,-1.18813e-06,6.47159e-08,0.53998,0.000957146,-9.93979e-07,-3.3488e-08,0.540936,0.000955057,-1.09444e-06,9.63166e-09,0.54189,0.000952897,-1.06555e-06,-5.03871e-09,0.542842,0.000950751,-1.08066e-06,1.05232e-08,0.543792,0.000948621,-1.04909e-06,2.25503e-08,0.544739,0.000946591,-9.81444e-07,-4.11195e-08,0.545685,0.000944504,-1.1048e-06,2.27182e-08,0.546628,0.000942363,-1.03665e-06,9.85146e-09,0.54757,0.000940319,-1.00709e-06,-2.51938e-09,0.548509,0.000938297,-1.01465e-06,2.25858e-10,0.549446,0.000936269,-1.01397e-06,1.61598e-09,0.550381,0.000934246,-1.00913e-06,-6.68983e-09,0.551315,0.000932207,-1.0292e-06,2.51434e-08,0.552246,0.000930224,-9.53765e-07,-3.42793e-08,0.553175,0.000928214,-1.0566e-06,5.23688e-08,0.554102,0.000926258,-8.99497e-07,-5.59865e-08,0.555028,0.000924291,-1.06746e-06,5.23679e-08,0.555951,0.000922313,-9.10352e-07,-3.42763e-08,0.556872,0.00092039,-1.01318e-06,2.51326e-08,0.557792,0.000918439,-9.37783e-07,-6.64954e-09,0.558709,0.000916543,-9.57732e-07,1.46554e-09,0.559625,0.000914632,-9.53335e-07,7.87281e-10,0.560538,0.000912728,-9.50973e-07,-4.61466e-09,0.56145,0.000910812,-9.64817e-07,1.76713e-08,0.56236,0.000908935,-9.11804e-07,-6.46564e-09,0.563268,0.000907092,-9.312e-07,8.19121e-09,0.564174,0.000905255,-9.06627e-07,-2.62992e-08,0.565078,0.000903362,-9.85524e-07,3.74007e-08,0.565981,0.000901504,-8.73322e-07,-4.0942e-09,0.566882,0.000899745,-8.85605e-07,-2.1024e-08,0.56778,0.00089791,-9.48677e-07,2.85854e-08,0.568677,0.000896099,-8.62921e-07,-3.3713e-08,0.569573,0.000894272,-9.64059e-07,4.6662e-08,0.570466,0.000892484,-8.24073e-07,-3.37258e-08,0.571358,0.000890734,-9.25251e-07,2.86365e-08,0.572247,0.00088897,-8.39341e-07,-2.12155e-08,0.573135,0.000887227,-9.02988e-07,-3.37913e-09,0.574022,0.000885411,-9.13125e-07,3.47319e-08,0.574906,0.000883689,-8.08929e-07,-1.63394e-08,0.575789,0.000882022,-8.57947e-07,-2.8979e-08,0.57667,0.00088022,-9.44885e-07,7.26509e-08,0.57755,0.000878548,-7.26932e-07,-8.28106e-08,0.578427,0.000876845,-9.75364e-07,7.97774e-08,0.579303,0.000875134,-7.36032e-07,-5.74849e-08,0.580178,0.00087349,-9.08486e-07,3.09529e-08,0.58105,0.000871765,-8.15628e-07,-6.72206e-09,0.581921,0.000870114,-8.35794e-07,-4.06451e-09,0.582791,0.00086843,-8.47987e-07,2.29799e-08,0.583658,0.000866803,-7.79048e-07,-2.82503e-08,0.584524,0.00086516,-8.63799e-07,3.04167e-08,0.585388,0.000863524,-7.72548e-07,-3.38119e-08,0.586251,0.000861877,-8.73984e-07,4.52264e-08,0.587112,0.000860265,-7.38305e-07,-2.78842e-08,0.587972,0.000858705,-8.21958e-07,6.70567e-09,0.58883,0.000857081,-8.01841e-07,1.06161e-09,0.589686,0.000855481,-7.98656e-07,-1.09521e-08,0.590541,0.00085385,-8.31512e-07,4.27468e-08,0.591394,0.000852316,-7.03272e-07,-4.08257e-08,0.592245,0.000850787,-8.25749e-07,1.34677e-09,0.593095,0.000849139,-8.21709e-07,3.54387e-08,0.593944,0.000847602,-7.15393e-07,-2.38924e-08,0.59479,0.0008461,-7.8707e-07,5.26143e-10,0.595636,0.000844527,-7.85491e-07,2.17879e-08,0.596479,0.000843021,-7.20127e-07,-2.80733e-08,0.597322,0.000841497,-8.04347e-07,3.09005e-08,0.598162,0.000839981,-7.11646e-07,-3.5924e-08,0.599002,0.00083845,-8.19418e-07,5.3191e-08,0.599839,0.000836971,-6.59845e-07,-5.76307e-08,0.600676,0.000835478,-8.32737e-07,5.81227e-08,0.60151,0.000833987,-6.58369e-07,-5.56507e-08,0.602344,0.000832503,-8.25321e-07,4.52706e-08,0.603175,0.000830988,-6.89509e-07,-6.22236e-09,0.604006,0.000829591,-7.08176e-07,-2.03811e-08,0.604834,0.000828113,-7.6932e-07,2.8142e-08,0.605662,0.000826659,-6.84894e-07,-3.25822e-08,0.606488,0.000825191,-7.8264e-07,4.25823e-08,0.607312,0.000823754,-6.54893e-07,-1.85376e-08,0.608135,0.000822389,-7.10506e-07,-2.80365e-08,0.608957,0.000820883,-7.94616e-07,7.1079e-08,0.609777,0.000819507,-5.81379e-07,-7.74655e-08,0.610596,0.000818112,-8.13775e-07,5.9969e-08,0.611413,0.000816665,-6.33868e-07,-4.32013e-08,0.612229,0.000815267,-7.63472e-07,5.32313e-08,0.613044,0.0008139,-6.03778e-07,-5.05148e-08,0.613857,0.000812541,-7.55323e-07,2.96187e-08,0.614669,0.000811119,-6.66466e-07,-8.35545e-09,0.615479,0.000809761,-6.91533e-07,3.80301e-09,0.616288,0.00080839,-6.80124e-07,-6.85666e-09,0.617096,0.000807009,-7.00694e-07,2.36237e-08,0.617903,0.000805678,-6.29822e-07,-2.80336e-08,0.618708,0.000804334,-7.13923e-07,2.8906e-08,0.619511,0.000802993,-6.27205e-07,-2.79859e-08,0.620314,0.000801655,-7.11163e-07,2.34329e-08,0.621114,0.000800303,-6.40864e-07,-6.14108e-09,0.621914,0.000799003,-6.59287e-07,1.13151e-09,0.622712,0.000797688,-6.55893e-07,1.61507e-09,0.62351,0.000796381,-6.51048e-07,-7.59186e-09,0.624305,0.000795056,-6.73823e-07,2.87524e-08,0.6251,0.000793794,-5.87566e-07,-4.7813e-08,0.625893,0.000792476,-7.31005e-07,4.32901e-08,0.626685,0.000791144,-6.01135e-07,-6.13814e-09,0.627475,0.000789923,-6.19549e-07,-1.87376e-08,0.628264,0.000788628,-6.75762e-07,2.14837e-08,0.629052,0.000787341,-6.11311e-07,-7.59265e-09,0.629839,0.000786095,-6.34089e-07,8.88692e-09,0.630625,0.000784854,-6.07428e-07,-2.7955e-08,0.631409,0.000783555,-6.91293e-07,4.33285e-08,0.632192,0.000782302,-5.61307e-07,-2.61497e-08,0.632973,0.000781101,-6.39757e-07,1.6658e-09,0.633754,0.000779827,-6.34759e-07,1.94866e-08,0.634533,0.000778616,-5.76299e-07,-2.00076e-08,0.635311,0.000777403,-6.36322e-07,9.39091e-10,0.636088,0.000776133,-6.33505e-07,1.62512e-08,0.636863,0.000774915,-5.84751e-07,-6.33937e-09,0.637638,0.000773726,-6.03769e-07,9.10609e-09,0.638411,0.000772546,-5.76451e-07,-3.00849e-08,0.639183,0.000771303,-6.66706e-07,5.1629e-08,0.639953,0.000770125,-5.11819e-07,-5.7222e-08,0.640723,0.000768929,-6.83485e-07,5.80497e-08,0.641491,0.000767736,-5.09336e-07,-5.57674e-08,0.642259,0.000766551,-6.76638e-07,4.58105e-08,0.643024,0.000765335,-5.39206e-07,-8.26541e-09,0.643789,0.000764231,-5.64002e-07,-1.27488e-08,0.644553,0.000763065,-6.02249e-07,-3.44168e-10,0.645315,0.00076186,-6.03281e-07,1.41254e-08,0.646077,0.000760695,-5.60905e-07,3.44727e-09,0.646837,0.000759584,-5.50563e-07,-2.79144e-08,0.647596,0.000758399,-6.34307e-07,4.86057e-08,0.648354,0.000757276,-4.88489e-07,-4.72989e-08,0.64911,0.000756158,-6.30386e-07,2.13807e-08,0.649866,0.000754961,-5.66244e-07,2.13808e-08,0.65062,0.000753893,-5.02102e-07,-4.7299e-08,0.651374,0.000752746,-6.43999e-07,4.86059e-08,0.652126,0.000751604,-4.98181e-07,-2.79154e-08,0.652877,0.000750524,-5.81927e-07,3.45089e-09,0.653627,0.000749371,-5.71575e-07,1.41119e-08,0.654376,0.00074827,-5.29239e-07,-2.93748e-10,0.655123,0.00074721,-5.3012e-07,-1.29368e-08,0.65587,0.000746111,-5.68931e-07,-7.56355e-09,0.656616,0.000744951,-5.91621e-07,4.3191e-08,0.65736,0.000743897,-4.62048e-07,-4.59911e-08,0.658103,0.000742835,-6.00022e-07,2.15642e-08,0.658846,0.0007417,-5.35329e-07,1.93389e-08,0.659587,0.000740687,-4.77312e-07,-3.93152e-08,0.660327,0.000739615,-5.95258e-07,1.87126e-08,0.661066,0.00073848,-5.3912e-07,2.40695e-08,0.661804,0.000737474,-4.66912e-07,-5.53859e-08,0.662541,0.000736374,-6.33069e-07,7.82648e-08,0.663277,0.000735343,-3.98275e-07,-7.88593e-08,0.664012,0.00073431,-6.34853e-07,5.83585e-08,0.664745,0.000733215,-4.59777e-07,-3.53656e-08,0.665478,0.000732189,-5.65874e-07,2.34994e-08,0.66621,0.000731128,-4.95376e-07,9.72743e-10,0.66694,0.00073014,-4.92458e-07,-2.73903e-08,0.66767,0.000729073,-5.74629e-07,4.89839e-08,0.668398,0.000728071,-4.27677e-07,-4.93359e-08,0.669126,0.000727068,-5.75685e-07,2.91504e-08,0.669853,0.000726004,-4.88234e-07,-7.66109e-09,0.670578,0.000725004,-5.11217e-07,1.49392e-09,0.671303,0.000723986,-5.06735e-07,1.68533e-09,0.672026,0.000722978,-5.01679e-07,-8.23525e-09,0.672749,0.00072195,-5.26385e-07,3.12556e-08,0.67347,0.000720991,-4.32618e-07,-5.71825e-08,0.674191,0.000719954,-6.04166e-07,7.8265e-08,0.67491,0.00071898,-3.69371e-07,-7.70634e-08,0.675628,0.00071801,-6.00561e-07,5.11747e-08,0.676346,0.000716963,-4.47037e-07,-8.42615e-09,0.677062,0.000716044,-4.72315e-07,-1.747e-08,0.677778,0.000715046,-5.24725e-07,1.87015e-08,0.678493,0.000714053,-4.68621e-07,2.26856e-09,0.679206,0.000713123,-4.61815e-07,-2.77758e-08,0.679919,0.000712116,-5.45142e-07,4.92298e-08,0.68063,0.000711173,-3.97453e-07,-4.99339e-08,0.681341,0.000710228,-5.47255e-07,3.12967e-08,0.682051,0.000709228,-4.53365e-07,-1.56481e-08,0.68276,0.000708274,-5.00309e-07,3.12958e-08,0.683467,0.000707367,-4.06422e-07,-4.99303e-08,0.684174,0.000706405,-5.56213e-07,4.9216e-08,0.68488,0.00070544,-4.08565e-07,-2.77245e-08,0.685585,0.00070454,-4.91738e-07,2.07748e-09,0.686289,0.000703562,-4.85506e-07,1.94146e-08,0.686992,0.00070265,-4.27262e-07,-2.01314e-08,0.687695,0.000701735,-4.87656e-07,1.50616e-09,0.688396,0.000700764,-4.83137e-07,1.41067e-08,0.689096,0.00069984,-4.40817e-07,1.67168e-09,0.689795,0.000698963,-4.35802e-07,-2.07934e-08,0.690494,0.000698029,-4.98182e-07,2.18972e-08,0.691192,0.000697099,-4.32491e-07,-7.19092e-09,0.691888,0.000696212,-4.54064e-07,6.86642e-09,0.692584,0.000695325,-4.33464e-07,-2.02747e-08,0.693279,0.000694397,-4.94288e-07,1.46279e-08,0.693973,0.000693452,-4.50405e-07,2.13678e-08,0.694666,0.000692616,-3.86301e-07,-4.04945e-08,0.695358,0.000691721,-5.07785e-07,2.14009e-08,0.696049,0.00069077,-4.43582e-07,1.44955e-08,0.69674,0.000689926,-4.00096e-07,-1.97783e-08,0.697429,0.000689067,-4.5943e-07,5.01296e-09,0.698118,0.000688163,-4.44392e-07,-2.73521e-10,0.698805,0.000687273,-4.45212e-07,-3.91893e-09,0.699492,0.000686371,-4.56969e-07,1.59493e-08,0.700178,0.000685505,-4.09121e-07,-2.73351e-10,0.700863,0.000684686,-4.09941e-07,-1.4856e-08,0.701548,0.000683822,-4.54509e-07,9.25979e-11,0.702231,0.000682913,-4.54231e-07,1.44855e-08,0.702913,0.000682048,-4.10775e-07,1.56992e-09,0.703595,0.000681231,-4.06065e-07,-2.07652e-08,0.704276,0.000680357,-4.68361e-07,2.18864e-08,0.704956,0.000679486,-4.02701e-07,-7.17595e-09,0.705635,0.000678659,-4.24229e-07,6.81748e-09,0.706313,0.000677831,-4.03777e-07,-2.0094e-08,0.70699,0.000676963,-4.64059e-07,1.39538e-08,0.707667,0.000676077,-4.22197e-07,2.38835e-08,0.708343,0.000675304,-3.50547e-07,-4.98831e-08,0.709018,0.000674453,-5.00196e-07,5.64395e-08,0.709692,0.000673622,-3.30878e-07,-5.66657e-08,0.710365,0.00067279,-5.00875e-07,5.1014e-08,0.711037,0.000671942,-3.47833e-07,-2.81809e-08,0.711709,0.000671161,-4.32376e-07,2.10513e-09,0.712379,0.000670303,-4.2606e-07,1.97604e-08,0.713049,0.00066951,-3.66779e-07,-2.15422e-08,0.713718,0.000668712,-4.31406e-07,6.8038e-09,0.714387,0.000667869,-4.10994e-07,-5.67295e-09,0.715054,0.00066703,-4.28013e-07,1.5888e-08,0.715721,0.000666222,-3.80349e-07,1.72576e-09,0.716387,0.000665467,-3.75172e-07,-2.27911e-08,0.717052,0.000664648,-4.43545e-07,2.9834e-08,0.717716,0.00066385,-3.54043e-07,-3.69401e-08,0.718379,0.000663031,-4.64864e-07,5.83219e-08,0.719042,0.000662277,-2.89898e-07,-7.71382e-08,0.719704,0.000661465,-5.21313e-07,7.14171e-08,0.720365,0.000660637,-3.07061e-07,-2.97161e-08,0.721025,0.000659934,-3.96209e-07,-1.21575e-08,0.721685,0.000659105,-4.32682e-07,1.87412e-08,0.722343,0.000658296,-3.76458e-07,-3.2029e-09,0.723001,0.000657533,-3.86067e-07,-5.9296e-09,0.723659,0.000656743,-4.03856e-07,2.69213e-08,0.724315,0.000656016,-3.23092e-07,-4.21511e-08,0.724971,0.000655244,-4.49545e-07,2.24737e-08,0.725625,0.000654412,-3.82124e-07,1.18611e-08,0.726279,0.000653683,-3.46541e-07,-1.03132e-08,0.726933,0.000652959,-3.7748e-07,-3.02128e-08,0.727585,0.000652114,-4.68119e-07,7.15597e-08,0.728237,0.000651392,-2.5344e-07,-7.72119e-08,0.728888,0.000650654,-4.85075e-07,5.8474e-08,0.729538,0.000649859,-3.09654e-07,-3.74746e-08,0.730188,0.000649127,-4.22077e-07,3.18197e-08,0.730837,0.000648379,-3.26618e-07,-3.01997e-08,0.731485,0.000647635,-4.17217e-07,2.93747e-08,0.732132,0.000646888,-3.29093e-07,-2.76943e-08,0.732778,0.000646147,-4.12176e-07,2.17979e-08,0.733424,0.000645388,-3.46783e-07,1.07292e-10,0.734069,0.000644695,-3.46461e-07,-2.22271e-08,0.734713,0.000643935,-4.13142e-07,2.91963e-08,0.735357,0.000643197,-3.25553e-07,-3.49536e-08,0.736,0.000642441,-4.30414e-07,5.10133e-08,0.736642,0.000641733,-2.77374e-07,-4.98904e-08,0.737283,0.000641028,-4.27045e-07,2.93392e-08,0.737924,0.000640262,-3.39028e-07,-7.86156e-09,0.738564,0.000639561,-3.62612e-07,2.10703e-09,0.739203,0.000638842,-3.56291e-07,-5.6653e-10,0.739842,0.000638128,-3.57991e-07,1.59086e-10,0.740479,0.000637412,-3.57513e-07,-6.98321e-11,0.741116,0.000636697,-3.57723e-07,1.20214e-10,0.741753,0.000635982,-3.57362e-07,-4.10987e-10,0.742388,0.000635266,-3.58595e-07,1.5237e-09,0.743023,0.000634553,-3.54024e-07,-5.68376e-09,0.743657,0.000633828,-3.71075e-07,2.12113e-08,0.744291,0.00063315,-3.07441e-07,-1.95569e-08,0.744924,0.000632476,-3.66112e-07,-2.58816e-09,0.745556,0.000631736,-3.73877e-07,2.99096e-08,0.746187,0.000631078,-2.84148e-07,-5.74454e-08,0.746818,0.000630337,-4.56484e-07,8.06629e-08,0.747448,0.000629666,-2.14496e-07,-8.63922e-08,0.748077,0.000628978,-4.73672e-07,8.60918e-08,0.748706,0.000628289,-2.15397e-07,-7.91613e-08,0.749334,0.000627621,-4.5288e-07,5.17393e-08,0.749961,0.00062687,-2.97663e-07,-8.58662e-09,0.750588,0.000626249,-3.23422e-07,-1.73928e-08,0.751214,0.00062555,-3.75601e-07,1.85532e-08,0.751839,0.000624855,-3.19941e-07,2.78479e-09,0.752463,0.000624223,-3.11587e-07,-2.96923e-08,0.753087,0.000623511,-4.00664e-07,5.63799e-08,0.75371,0.000622879,-2.31524e-07,-7.66179e-08,0.754333,0.000622186,-4.61378e-07,7.12778e-08,0.754955,0.000621477,-2.47545e-07,-2.96794e-08,0.755576,0.000620893,-3.36583e-07,-1.21648e-08,0.756196,0.000620183,-3.73077e-07,1.87339e-08,0.756816,0.000619493,-3.16875e-07,-3.16622e-09,0.757435,0.00061885,-3.26374e-07,-6.0691e-09,0.758054,0.000618179,-3.44581e-07,2.74426e-08,0.758672,0.000617572,-2.62254e-07,-4.40968e-08,0.759289,0.000616915,-3.94544e-07,2.97352e-08,0.759906,0.000616215,-3.05338e-07,-1.52393e-08,0.760522,0.000615559,-3.51056e-07,3.12221e-08,0.761137,0.000614951,-2.5739e-07,-5.00443e-08,0.761751,0.000614286,-4.07523e-07,4.9746e-08,0.762365,0.00061362,-2.58285e-07,-2.97303e-08,0.762979,0.000613014,-3.47476e-07,9.57079e-09,0.763591,0.000612348,-3.18764e-07,-8.55287e-09,0.764203,0.000611685,-3.44422e-07,2.46407e-08,0.764815,0.00061107,-2.705e-07,-3.04053e-08,0.765426,0.000610437,-3.61716e-07,3.73759e-08,0.766036,0.000609826,-2.49589e-07,-5.94935e-08,0.766645,0.000609149,-4.28069e-07,8.13889e-08,0.767254,0.000608537,-1.83902e-07,-8.72483e-08,0.767862,0.000607907,-4.45647e-07,8.87901e-08,0.76847,0.000607282,-1.79277e-07,-8.90983e-08,0.769077,0.000606656,-4.46572e-07,8.87892e-08,0.769683,0.000606029,-1.80204e-07,-8.72446e-08,0.770289,0.000605407,-4.41938e-07,8.13752e-08,0.770894,0.000604768,-1.97812e-07,-5.94423e-08,0.771498,0.000604194,-3.76139e-07,3.71848e-08,0.772102,0.000603553,-2.64585e-07,-2.96922e-08,0.772705,0.000602935,-3.53661e-07,2.19793e-08,0.773308,0.000602293,-2.87723e-07,1.37955e-09,0.77391,0.000601722,-2.83585e-07,-2.74976e-08,0.774512,0.000601072,-3.66077e-07,4.9006e-08,0.775112,0.000600487,-2.19059e-07,-4.93171e-08,0.775712,0.000599901,-3.67011e-07,2.90531e-08,0.776312,0.000599254,-2.79851e-07,-7.29081e-09,0.776911,0.000598673,-3.01724e-07,1.10077e-10,0.777509,0.00059807,-3.01393e-07,6.85053e-09,0.778107,0.000597487,-2.80842e-07,-2.75123e-08,0.778704,0.000596843,-3.63379e-07,4.35939e-08,0.779301,0.000596247,-2.32597e-07,-2.7654e-08,0.779897,0.000595699,-3.15559e-07,7.41741e-09,0.780492,0.00059509,-2.93307e-07,-2.01562e-09,0.781087,0.000594497,-2.99354e-07,6.45059e-10,0.781681,0.000593901,-2.97418e-07,-5.64635e-10,0.782275,0.000593304,-2.99112e-07,1.61347e-09,0.782868,0.000592711,-2.94272e-07,-5.88926e-09,0.78346,0.000592105,-3.1194e-07,2.19436e-08,0.784052,0.000591546,-2.46109e-07,-2.22805e-08,0.784643,0.000590987,-3.1295e-07,7.57368e-09,0.785234,0.000590384,-2.90229e-07,-8.01428e-09,0.785824,0.00058978,-3.14272e-07,2.44834e-08,0.786414,0.000589225,-2.40822e-07,-3.03148e-08,0.787003,0.000588652,-3.31766e-07,3.7171e-08,0.787591,0.0005881,-2.20253e-07,-5.87646e-08,0.788179,0.000587483,-3.96547e-07,7.86782e-08,0.788766,0.000586926,-1.60512e-07,-7.71342e-08,0.789353,0.000586374,-3.91915e-07,5.10444e-08,0.789939,0.000585743,-2.38782e-07,-7.83422e-09,0.790524,0.000585242,-2.62284e-07,-1.97076e-08,0.791109,0.000584658,-3.21407e-07,2.70598e-08,0.791693,0.000584097,-2.40228e-07,-2.89269e-08,0.792277,0.000583529,-3.27008e-07,2.90431e-08,0.792861,0.000582963,-2.39879e-07,-2.76409e-08,0.793443,0.0005824,-3.22802e-07,2.1916e-08,0.794025,0.00058182,-2.57054e-07,-4.18368e-10,0.794607,0.000581305,-2.58309e-07,-2.02425e-08,0.795188,0.000580727,-3.19036e-07,2.17838e-08,0.795768,0.000580155,-2.53685e-07,-7.28814e-09,0.796348,0.000579625,-2.75549e-07,7.36871e-09,0.796928,0.000579096,-2.53443e-07,-2.21867e-08,0.797506,0.000578523,-3.20003e-07,2.17736e-08,0.798085,0.000577948,-2.54683e-07,-5.30296e-09,0.798662,0.000577423,-2.70592e-07,-5.61698e-10,0.799239,0.00057688,-2.72277e-07,7.54977e-09,0.799816,0.000576358,-2.49627e-07,-2.96374e-08,0.800392,0.00057577,-3.38539e-07,5.1395e-08,0.800968,0.000575247,-1.84354e-07,-5.67335e-08,0.801543,0.000574708,-3.54555e-07,5.63297e-08,0.802117,0.000574168,-1.85566e-07,-4.93759e-08,0.802691,0.000573649,-3.33693e-07,2.19646e-08,0.803264,0.000573047,-2.678e-07,2.1122e-08,0.803837,0.000572575,-2.04433e-07,-4.68482e-08,0.804409,0.000572026,-3.44978e-07,4.70613e-08,0.804981,0.000571477,-2.03794e-07,-2.21877e-08,0.805552,0.000571003,-2.70357e-07,-1.79153e-08,0.806123,0.000570408,-3.24103e-07,3.42443e-08,0.806693,0.000569863,-2.2137e-07,1.47556e-10,0.807263,0.000569421,-2.20928e-07,-3.48345e-08,0.807832,0.000568874,-3.25431e-07,1.99812e-08,0.808401,0.000568283,-2.65487e-07,1.45143e-08,0.808969,0.000567796,-2.21945e-07,-1.84338e-08,0.809536,0.000567297,-2.77246e-07,-3.83608e-10,0.810103,0.000566741,-2.78397e-07,1.99683e-08,0.81067,0.000566244,-2.18492e-07,-1.98848e-08,0.811236,0.000565747,-2.78146e-07,-3.38976e-11,0.811801,0.000565191,-2.78248e-07,2.00204e-08,0.812366,0.000564695,-2.18187e-07,-2.04429e-08,0.812931,0.000564197,-2.79516e-07,2.1467e-09,0.813495,0.000563644,-2.73076e-07,1.18561e-08,0.814058,0.000563134,-2.37507e-07,1.00334e-08,0.814621,0.000562689,-2.07407e-07,-5.19898e-08,0.815183,0.000562118,-3.63376e-07,7.87163e-08,0.815745,0.000561627,-1.27227e-07,-8.40616e-08,0.816306,0.000561121,-3.79412e-07,7.87163e-08,0.816867,0.000560598,-1.43263e-07,-5.19898e-08,0.817428,0.000560156,-2.99233e-07,1.00335e-08,0.817988,0.000559587,-2.69132e-07,1.18559e-08,0.818547,0.000559085,-2.33564e-07,2.14764e-09,0.819106,0.000558624,-2.27122e-07,-2.04464e-08,0.819664,0.000558108,-2.88461e-07,2.00334e-08,0.820222,0.000557591,-2.28361e-07,-8.24277e-11,0.820779,0.000557135,-2.28608e-07,-1.97037e-08,0.821336,0.000556618,-2.87719e-07,1.92925e-08,0.821893,0.000556101,-2.29841e-07,2.13831e-09,0.822448,0.000555647,-2.23427e-07,-2.78458e-08,0.823004,0.000555117,-3.06964e-07,4.96402e-08,0.823559,0.000554652,-1.58043e-07,-5.15058e-08,0.824113,0.000554181,-3.12561e-07,3.71737e-08,0.824667,0.000553668,-2.0104e-07,-3.75844e-08,0.82522,0.000553153,-3.13793e-07,5.35592e-08,0.825773,0.000552686,-1.53115e-07,-5.74431e-08,0.826326,0.000552207,-3.25444e-07,5.7004e-08,0.826878,0.000551728,-1.54433e-07,-5.13635e-08,0.827429,0.000551265,-3.08523e-07,2.92406e-08,0.82798,0.000550735,-2.20801e-07,-5.99424e-09,0.828531,0.000550276,-2.38784e-07,-5.26363e-09,0.829081,0.000549782,-2.54575e-07,2.70488e-08,0.82963,0.000549354,-1.73429e-07,-4.33268e-08,0.83018,0.000548878,-3.03409e-07,2.7049e-08,0.830728,0.000548352,-2.22262e-07,-5.26461e-09,0.831276,0.000547892,-2.38056e-07,-5.99057e-09,0.831824,0.000547397,-2.56027e-07,2.92269e-08,0.832371,0.000546973,-1.68347e-07,-5.13125e-08,0.832918,0.000546482,-3.22284e-07,5.68139e-08,0.833464,0.000546008,-1.51843e-07,-5.67336e-08,0.83401,0.000545534,-3.22043e-07,5.09113e-08,0.834555,0.000545043,-1.6931e-07,-2.77022e-08,0.8351,0.000544621,-2.52416e-07,2.92924e-10,0.835644,0.000544117,-2.51537e-07,2.65305e-08,0.836188,0.000543694,-1.71946e-07,-4.68105e-08,0.836732,0.00054321,-3.12377e-07,4.15021e-08,0.837275,0.000542709,-1.87871e-07,1.13355e-11,0.837817,0.000542334,-1.87837e-07,-4.15474e-08,0.838359,0.000541833,-3.12479e-07,4.69691e-08,0.838901,0.000541349,-1.71572e-07,-2.71196e-08,0.839442,0.000540925,-2.52931e-07,1.90462e-09,0.839983,0.000540425,-2.47217e-07,1.95011e-08,0.840523,0.000539989,-1.88713e-07,-2.03045e-08,0.841063,0.00053955,-2.49627e-07,2.11216e-09,0.841602,0.000539057,-2.4329e-07,1.18558e-08,0.842141,0.000538606,-2.07723e-07,1.00691e-08,0.842679,0.000538221,-1.77516e-07,-5.21324e-08,0.843217,0.00053771,-3.33913e-07,7.92513e-08,0.843755,0.00053728,-9.6159e-08,-8.60587e-08,0.844292,0.000536829,-3.54335e-07,8.61696e-08,0.844828,0.000536379,-9.58263e-08,-7.98057e-08,0.845364,0.000535948,-3.35243e-07,5.42394e-08,0.8459,0.00053544,-1.72525e-07,-1.79426e-08,0.846435,0.000535041,-2.26353e-07,1.75308e-08,0.84697,0.000534641,-1.73761e-07,-5.21806e-08,0.847505,0.000534137,-3.30302e-07,7.19824e-08,0.848038,0.000533692,-1.14355e-07,-5.69349e-08,0.848572,0.000533293,-2.8516e-07,3.65479e-08,0.849105,0.000532832,-1.75516e-07,-2.96519e-08,0.849638,0.000532392,-2.64472e-07,2.2455e-08,0.85017,0.000531931,-1.97107e-07,-5.63451e-10,0.850702,0.000531535,-1.98797e-07,-2.02011e-08,0.851233,0.000531077,-2.59401e-07,2.17634e-08,0.851764,0.000530623,-1.94111e-07,-7.24794e-09,0.852294,0.000530213,-2.15854e-07,7.22832e-09,0.852824,0.000529803,-1.94169e-07,-2.16653e-08,0.853354,0.00052935,-2.59165e-07,1.98283e-08,0.853883,0.000528891,-1.9968e-07,1.95678e-09,0.854412,0.000528497,-1.9381e-07,-2.76554e-08,0.85494,0.000528027,-2.76776e-07,4.90603e-08,0.855468,0.00052762,-1.29596e-07,-4.93764e-08,0.855995,0.000527213,-2.77725e-07,2.92361e-08,0.856522,0.000526745,-1.90016e-07,-7.96341e-09,0.857049,0.000526341,-2.13907e-07,2.61752e-09,0.857575,0.000525922,-2.06054e-07,-2.50665e-09,0.8581,0.000525502,-2.13574e-07,7.40906e-09,0.858626,0.000525097,-1.91347e-07,-2.71296e-08,0.859151,0.000524633,-2.72736e-07,4.15048e-08,0.859675,0.000524212,-1.48221e-07,-1.96802e-08,0.860199,0.000523856,-2.07262e-07,-2.23886e-08,0.860723,0.000523375,-2.74428e-07,4.96299e-08,0.861246,0.000522975,-1.25538e-07,-5.69216e-08,0.861769,0.000522553,-2.96303e-07,5.88473e-08,0.862291,0.000522137,-1.19761e-07,-5.92584e-08,0.862813,0.00052172,-2.97536e-07,5.8977e-08,0.863334,0.000521301,-1.20605e-07,-5.74403e-08,0.863855,0.000520888,-2.92926e-07,5.15751e-08,0.864376,0.000520457,-1.38201e-07,-2.96506e-08,0.864896,0.000520091,-2.27153e-07,7.42277e-09,0.865416,0.000519659,-2.04885e-07,-4.05057e-11,0.865936,0.00051925,-2.05006e-07,-7.26074e-09,0.866455,0.000518818,-2.26788e-07,2.90835e-08,0.866973,0.000518451,-1.39538e-07,-4.94686e-08,0.867492,0.000518024,-2.87944e-07,4.95814e-08,0.868009,0.000517597,-1.39199e-07,-2.96479e-08,0.868527,0.000517229,-2.28143e-07,9.40539e-09,0.869044,0.000516801,-1.99927e-07,-7.9737e-09,0.86956,0.000516378,-2.23848e-07,2.24894e-08,0.870077,0.000515997,-1.5638e-07,-2.23793e-08,0.870592,0.000515617,-2.23517e-07,7.42302e-09,0.871108,0.000515193,-2.01248e-07,-7.31283e-09,0.871623,0.000514768,-2.23187e-07,2.18283e-08,0.872137,0.000514387,-1.57702e-07,-2.03959e-08,0.872652,0.000514011,-2.1889e-07,1.50711e-10,0.873165,0.000513573,-2.18437e-07,1.97931e-08,0.873679,0.000513196,-1.59058e-07,-1.97183e-08,0.874192,0.000512819,-2.18213e-07,-5.24324e-10,0.874704,0.000512381,-2.19786e-07,2.18156e-08,0.875217,0.000512007,-1.54339e-07,-2.71336e-08,0.875728,0.000511616,-2.3574e-07,2.71141e-08,0.87624,0.000511226,-1.54398e-07,-2.17182e-08,0.876751,0.000510852,-2.19552e-07,1.54131e-10,0.877262,0.000510414,-2.1909e-07,2.11017e-08,0.877772,0.000510039,-1.55785e-07,-2.49562e-08,0.878282,0.000509652,-2.30654e-07,1.91183e-08,0.878791,0.000509248,-1.73299e-07,8.08751e-09,0.8793,0.000508926,-1.49036e-07,-5.14684e-08,0.879809,0.000508474,-3.03441e-07,7.85766e-08,0.880317,0.000508103,-6.77112e-08,-8.40242e-08,0.880825,0.000507715,-3.19784e-07,7.87063e-08,0.881333,0.000507312,-8.36649e-08,-5.19871e-08,0.88184,0.000506988,-2.39626e-07,1.00327e-08,0.882346,0.000506539,-2.09528e-07,1.18562e-08,0.882853,0.000506156,-1.73959e-07,2.14703e-09,0.883359,0.000505814,-1.67518e-07,-2.04444e-08,0.883864,0.000505418,-2.28851e-07,2.00258e-08,0.88437,0.00050502,-1.68774e-07,-5.42855e-11,0.884874,0.000504682,-1.68937e-07,-1.98087e-08,0.885379,0.000504285,-2.28363e-07,1.96842e-08,0.885883,0.000503887,-1.6931e-07,6.76342e-10,0.886387,0.000503551,-1.67281e-07,-2.23896e-08,0.88689,0.000503149,-2.3445e-07,2.92774e-08,0.887393,0.000502768,-1.46618e-07,-3.51152e-08,0.887896,0.00050237,-2.51963e-07,5.15787e-08,0.888398,0.00050202,-9.72271e-08,-5.19903e-08,0.8889,0.00050167,-2.53198e-07,3.71732e-08,0.889401,0.000501275,-1.41678e-07,-3.70978e-08,0.889902,0.00050088,-2.52972e-07,5.16132e-08,0.890403,0.000500529,-9.81321e-08,-5.01459e-08,0.890903,0.000500183,-2.4857e-07,2.9761e-08,0.891403,0.000499775,-1.59287e-07,-9.29351e-09,0.891903,0.000499428,-1.87167e-07,7.41301e-09,0.892402,0.000499076,-1.64928e-07,-2.03585e-08,0.892901,0.000498685,-2.26004e-07,1.44165e-08,0.893399,0.000498276,-1.82754e-07,2.22974e-08,0.893898,0.000497978,-1.15862e-07,-4.40013e-08,0.894395,0.000497614,-2.47866e-07,3.44985e-08,0.894893,0.000497222,-1.44371e-07,-3.43882e-08,0.89539,0.00049683,-2.47535e-07,4.34497e-08,0.895886,0.000496465,-1.17186e-07,-2.02012e-08,0.896383,0.00049617,-1.7779e-07,-2.22497e-08,0.896879,0.000495748,-2.44539e-07,4.95952e-08,0.897374,0.000495408,-9.57532e-08,-5.69217e-08,0.89787,0.000495045,-2.66518e-07,5.88823e-08,0.898364,0.000494689,-8.98713e-08,-5.93983e-08,0.898859,0.000494331,-2.68066e-07,5.95017e-08,0.899353,0.000493973,-8.95613e-08,-5.9399e-08,0.899847,0.000493616,-2.67758e-07,5.8885e-08,0.90034,0.000493257,-9.11033e-08,-5.69317e-08,0.900833,0.000492904,-2.61898e-07,4.96326e-08,0.901326,0.000492529,-1.13001e-07,-2.23893e-08,0.901819,0.000492236,-1.80169e-07,-1.968e-08,0.902311,0.000491817,-2.39209e-07,4.15047e-08,0.902802,0.000491463,-1.14694e-07,-2.71296e-08,0.903293,0.000491152,-1.96083e-07,7.409e-09,0.903784,0.000490782,-1.73856e-07,-2.50645e-09,0.904275,0.000490427,-1.81376e-07,2.61679e-09,0.904765,0.000490072,-1.73525e-07,-7.96072e-09,0.905255,0.000489701,-1.97407e-07,2.92261e-08,0.905745,0.000489394,-1.09729e-07,-4.93389e-08,0.906234,0.000489027,-2.57746e-07,4.89204e-08,0.906723,0.000488658,-1.10985e-07,-2.71333e-08,0.907211,0.000488354,-1.92385e-07,8.30861e-12,0.907699,0.00048797,-1.9236e-07,2.71001e-08,0.908187,0.000487666,-1.1106e-07,-4.88041e-08,0.908675,0.000487298,-2.57472e-07,4.89069e-08,0.909162,0.000486929,-1.10751e-07,-2.76143e-08,0.909649,0.000486625,-1.93594e-07,1.9457e-09,0.910135,0.000486244,-1.87757e-07,1.98315e-08,0.910621,0.000485928,-1.28262e-07,-2.16671e-08,0.911107,0.000485606,-1.93264e-07,7.23216e-09,0.911592,0.000485241,-1.71567e-07,-7.26152e-09,0.912077,0.000484877,-1.93352e-07,2.18139e-08,0.912562,0.000484555,-1.2791e-07,-2.03895e-08,0.913047,0.000484238,-1.89078e-07,1.39494e-10,0.913531,0.000483861,-1.8866e-07,1.98315e-08,0.914014,0.000483543,-1.29165e-07,-1.98609e-08,0.914498,0.000483225,-1.88748e-07,7.39912e-12,0.914981,0.000482847,-1.88726e-07,1.98313e-08,0.915463,0.000482529,-1.29232e-07,-1.9728e-08,0.915946,0.000482212,-1.88416e-07,-5.24035e-10,0.916428,0.000481833,-1.89988e-07,2.18241e-08,0.916909,0.000481519,-1.24516e-07,-2.71679e-08,0.917391,0.000481188,-2.06019e-07,2.72427e-08,0.917872,0.000480858,-1.24291e-07,-2.21985e-08,0.918353,0.000480543,-1.90886e-07,1.94644e-09,0.918833,0.000480167,-1.85047e-07,1.44127e-08,0.919313,0.00047984,-1.41809e-07,7.39438e-12,0.919793,0.000479556,-1.41787e-07,-1.44423e-08,0.920272,0.000479229,-1.85114e-07,-1.84291e-09,0.920751,0.000478854,-1.90642e-07,2.18139e-08,0.92123,0.000478538,-1.25201e-07,-2.58081e-08,0.921708,0.00047821,-2.02625e-07,2.18139e-08,0.922186,0.00047787,-1.37183e-07,-1.84291e-09,0.922664,0.00047759,-1.42712e-07,-1.44423e-08,0.923141,0.000477262,-1.86039e-07,7.34701e-12,0.923618,0.00047689,-1.86017e-07,1.44129e-08,0.924095,0.000476561,-1.42778e-07,1.94572e-09,0.924572,0.000476281,-1.36941e-07,-2.21958e-08,0.925048,0.000475941,-2.03528e-07,2.72327e-08,0.925523,0.000475615,-1.2183e-07,-2.71304e-08,0.925999,0.00047529,-2.03221e-07,2.16843e-08,0.926474,0.000474949,-1.38168e-07,-2.16005e-12,0.926949,0.000474672,-1.38175e-07,-2.16756e-08,0.927423,0.000474331,-2.03202e-07,2.71001e-08,0.927897,0.000474006,-1.21902e-07,-2.71201e-08,0.928371,0.000473681,-2.03262e-07,2.17757e-08,0.928845,0.00047334,-1.37935e-07,-3.78028e-10,0.929318,0.000473063,-1.39069e-07,-2.02636e-08,0.929791,0.000472724,-1.9986e-07,2.18276e-08,0.930263,0.000472389,-1.34377e-07,-7.44231e-09,0.930736,0.000472098,-1.56704e-07,7.94165e-09,0.931208,0.000471809,-1.32879e-07,-2.43243e-08,0.931679,0.00047147,-2.05851e-07,2.97508e-08,0.932151,0.000471148,-1.16599e-07,-3.50742e-08,0.932622,0.000470809,-2.21822e-07,5.09414e-08,0.933092,0.000470518,-6.89976e-08,-4.94821e-08,0.933563,0.000470232,-2.17444e-07,2.77775e-08,0.934033,0.00046988,-1.34111e-07,-2.02351e-09,0.934502,0.000469606,-1.40182e-07,-1.96835e-08,0.934972,0.000469267,-1.99232e-07,2.11529e-08,0.935441,0.000468932,-1.35774e-07,-5.32332e-09,0.93591,0.000468644,-1.51743e-07,1.40413e-10,0.936378,0.000468341,-1.51322e-07,4.76166e-09,0.936846,0.000468053,-1.37037e-07,-1.9187e-08,0.937314,0.000467721,-1.94598e-07,1.23819e-08,0.937782,0.000467369,-1.57453e-07,2.92642e-08,0.938249,0.000467142,-6.96601e-08,-6.98342e-08,0.938716,0.000466793,-2.79163e-07,7.12586e-08,0.939183,0.000466449,-6.53869e-08,-3.63863e-08,0.939649,0.000466209,-1.74546e-07,1.46818e-08,0.940115,0.000465904,-1.305e-07,-2.2341e-08,0.940581,0.000465576,-1.97523e-07,1.50774e-08,0.941046,0.000465226,-1.52291e-07,2.16359e-08,0.941511,0.000464986,-8.73832e-08,-4.20162e-08,0.941976,0.000464685,-2.13432e-07,2.72198e-08,0.942441,0.00046434,-1.31773e-07,-7.2581e-09,0.942905,0.000464055,-1.53547e-07,1.81263e-09,0.943369,0.000463753,-1.48109e-07,7.58386e-12,0.943832,0.000463457,-1.48086e-07,-1.84298e-09,0.944296,0.000463155,-1.53615e-07,7.36433e-09,0.944759,0.00046287,-1.31522e-07,-2.76143e-08,0.945221,0.000462524,-2.14365e-07,4.34883e-08,0.945684,0.000462226,-8.39003e-08,-2.71297e-08,0.946146,0.000461977,-1.65289e-07,5.42595e-09,0.946608,0.000461662,-1.49012e-07,5.42593e-09,0.947069,0.000461381,-1.32734e-07,-2.71297e-08,0.94753,0.000461034,-2.14123e-07,4.34881e-08,0.947991,0.000460736,-8.36585e-08,-2.76134e-08,0.948452,0.000460486,-1.66499e-07,7.36083e-09,0.948912,0.000460175,-1.44416e-07,-1.82993e-09,0.949372,0.000459881,-1.49906e-07,-4.11073e-11,0.949832,0.000459581,-1.50029e-07,1.99434e-09,0.950291,0.000459287,-1.44046e-07,-7.93627e-09,0.950751,0.000458975,-1.67855e-07,2.97507e-08,0.951209,0.000458728,-7.86029e-08,-5.1462e-08,0.951668,0.000458417,-2.32989e-07,5.6888e-08,0.952126,0.000458121,-6.2325e-08,-5.68806e-08,0.952584,0.000457826,-2.32967e-07,5.14251e-08,0.953042,0.000457514,-7.86914e-08,-2.96107e-08,0.953499,0.000457268,-1.67523e-07,7.41296e-09,0.953956,0.000456955,-1.45285e-07,-4.11262e-11,0.954413,0.000456665,-1.45408e-07,-7.24847e-09,0.95487,0.000456352,-1.67153e-07,2.9035e-08,0.955326,0.000456105,-8.00484e-08,-4.92869e-08,0.955782,0.000455797,-2.27909e-07,4.89032e-08,0.956238,0.000455488,-8.11994e-08,-2.71166e-08,0.956693,0.000455244,-1.62549e-07,-4.13678e-11,0.957148,0.000454919,-1.62673e-07,2.72821e-08,0.957603,0.000454675,-8.0827e-08,-4.94824e-08,0.958057,0.000454365,-2.29274e-07,5.14382e-08,0.958512,0.000454061,-7.49597e-08,-3.7061e-08,0.958965,0.0004538,-1.86143e-07,3.72013e-08,0.959419,0.000453539,-7.45389e-08,-5.21396e-08,0.959873,0.000453234,-2.30958e-07,5.21476e-08,0.960326,0.000452928,-7.45146e-08,-3.72416e-08,0.960778,0.000452667,-1.8624e-07,3.72143e-08,0.961231,0.000452407,-7.45967e-08,-5.20109e-08,0.961683,0.000452101,-2.30629e-07,5.16199e-08,0.962135,0.000451795,-7.57696e-08,-3.52595e-08,0.962587,0.000451538,-1.81548e-07,2.98133e-08,0.963038,0.000451264,-9.2108e-08,-2.43892e-08,0.963489,0.000451007,-1.65276e-07,8.13892e-09,0.96394,0.000450701,-1.40859e-07,-8.16647e-09,0.964391,0.000450394,-1.65358e-07,2.45269e-08,0.964841,0.000450137,-9.17775e-08,-3.03367e-08,0.965291,0.000449863,-1.82787e-07,3.7215e-08,0.965741,0.000449609,-7.11424e-08,-5.89188e-08,0.96619,0.00044929,-2.47899e-07,7.92509e-08,0.966639,0.000449032,-1.01462e-08,-7.92707e-08,0.967088,0.000448773,-2.47958e-07,5.90181e-08,0.967537,0.000448455,-7.0904e-08,-3.75925e-08,0.967985,0.0004482,-1.83681e-07,3.17471e-08,0.968433,0.000447928,-8.84401e-08,-2.97913e-08,0.968881,0.000447662,-1.77814e-07,2.78133e-08,0.969329,0.000447389,-9.4374e-08,-2.18572e-08,0.969776,0.000447135,-1.59946e-07,1.10134e-11,0.970223,0.000446815,-1.59913e-07,2.18132e-08,0.97067,0.000446561,-9.44732e-08,-2.76591e-08,0.971116,0.000446289,-1.7745e-07,2.92185e-08,0.971562,0.000446022,-8.97948e-08,-2.96104e-08,0.972008,0.000445753,-1.78626e-07,2.96185e-08,0.972454,0.000445485,-8.97706e-08,-2.92588e-08,0.972899,0.000445218,-1.77547e-07,2.78123e-08,0.973344,0.000444946,-9.41103e-08,-2.23856e-08,0.973789,0.000444691,-1.61267e-07,2.12559e-09,0.974233,0.000444374,-1.5489e-07,1.38833e-08,0.974678,0.000444106,-1.13241e-07,1.94591e-09,0.975122,0.000443886,-1.07403e-07,-2.16669e-08,0.975565,0.000443606,-1.72404e-07,2.5117e-08,0.976009,0.000443336,-9.70526e-08,-1.91963e-08,0.976452,0.000443085,-1.54642e-07,-7.93627e-09,0.976895,0.000442752,-1.7845e-07,5.09414e-08,0.977338,0.000442548,-2.56262e-08,-7.66201e-08,0.97778,0.000442266,-2.55486e-07,7.67249e-08,0.978222,0.000441986,-2.53118e-08,-5.14655e-08,0.978664,0.000441781,-1.79708e-07,9.92773e-09,0.979106,0.000441451,-1.49925e-07,1.17546e-08,0.979547,0.000441186,-1.14661e-07,2.65868e-09,0.979988,0.000440965,-1.06685e-07,-2.23893e-08,0.980429,0.000440684,-1.73853e-07,2.72939e-08,0.980869,0.000440419,-9.19716e-08,-2.71816e-08,0.98131,0.000440153,-1.73516e-07,2.18278e-08,0.98175,0.000439872,-1.08033e-07,-5.24833e-10,0.982189,0.000439654,-1.09607e-07,-1.97284e-08,0.982629,0.000439376,-1.68793e-07,1.98339e-08,0.983068,0.000439097,-1.09291e-07,-2.62901e-12,0.983507,0.000438879,-1.09299e-07,-1.98234e-08,0.983946,0.000438601,-1.68769e-07,1.96916e-08,0.984384,0.000438322,-1.09694e-07,6.6157e-10,0.984823,0.000438105,-1.0771e-07,-2.23379e-08,0.985261,0.000437823,-1.74723e-07,2.90855e-08,0.985698,0.00043756,-8.74669e-08,-3.43992e-08,0.986136,0.000437282,-1.90665e-07,4.89068e-08,0.986573,0.000437048,-4.39442e-08,-4.20188e-08,0.98701,0.000436834,-1.7e-07,-4.11073e-11,0.987446,0.000436494,-1.70124e-07,4.21832e-08,0.987883,0.00043628,-4.35742e-08,-4.94824e-08,0.988319,0.000436044,-1.92021e-07,3.6537e-08,0.988755,0.00043577,-8.24102e-08,-3.70611e-08,0.989191,0.000435494,-1.93593e-07,5.21026e-08,0.989626,0.000435263,-3.72855e-08,-5.21402e-08,0.990061,0.000435032,-1.93706e-07,3.7249e-08,0.990496,0.000434756,-8.19592e-08,-3.72512e-08,0.990931,0.000434481,-1.93713e-07,5.21511e-08,0.991365,0.00043425,-3.72595e-08,-5.21439e-08,0.991799,0.000434019,-1.93691e-07,3.72152e-08,0.992233,0.000433743,-8.20456e-08,-3.71123e-08,0.992667,0.000433468,-1.93382e-07,5.16292e-08,0.9931,0.000433236,-3.84947e-08,-5.01953e-08,0.993533,0.000433008,-1.89081e-07,2.99427e-08,0.993966,0.00043272,-9.92525e-08,-9.9708e-09,0.994399,0.000432491,-1.29165e-07,9.94051e-09,0.994831,0.000432263,-9.93434e-08,-2.97912e-08,0.995263,0.000431975,-1.88717e-07,4.96198e-08,0.995695,0.000431746,-3.98578e-08,-4.94785e-08,0.996127,0.000431518,-1.88293e-07,2.9085e-08,0.996558,0.000431229,-1.01038e-07,-7.25675e-09,0.996989,0.000431005,-1.22809e-07,-5.79945e-11,0.99742,0.000430759,-1.22983e-07,7.48873e-09,0.997851,0.000430536,-1.00516e-07,-2.98969e-08,0.998281,0.000430245,-1.90207e-07,5.24942e-08,0.998711,0.000430022,-3.27246e-08,-6.08706e-08,0.999141,0.000429774,-2.15336e-07,7.17788e-08,0.999571,0.000429392,0.,0.};
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __device__ __forceinline__ void Lab2RGBConvert_f(const T& src, D& dst)
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                B = splineInterpolate(B * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                G = splineInterpolate(G * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                R = splineInterpolate(R * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __device__ __forceinline__ void Lab2RGBConvert_b(const T& src, D& dst)
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            Lab2RGBConvert_f<srgb, blueIdx>(srcf, dstf);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        template <typename T, int scn, int dcn, bool srgb, int blueIdx> struct Lab2RGB;
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        struct Lab2RGB<uchar, scn, dcn, srgb, blueIdx>
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                Lab2RGBConvert_b<srgb, blueIdx>(src, dst);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            __host__ __device__ __forceinline__ Lab2RGB() {}
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            __host__ __device__ __forceinline__ Lab2RGB(const Lab2RGB&) {}
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        struct Lab2RGB<float, scn, dcn, srgb, blueIdx>
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                Lab2RGBConvert_f<srgb, blueIdx>(src, dst);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            __host__ __device__ __forceinline__ Lab2RGB() {}
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            __host__ __device__ __forceinline__ Lab2RGB(const Lab2RGB&) {}
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:#define OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(name, scn, dcn, srgb, blueIdx) \
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        typedef ::cv::cuda::device::color_detail::Lab2RGB<T, scn, dcn, srgb, blueIdx> functor_type; \
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:        __constant__ float c_LabCbrtTab[] = {0.137931,0.0114066,0.,1.18859e-07,0.149338,0.011407,3.56578e-07,-5.79396e-07,0.160745,0.0114059,-1.38161e-06,2.16892e-06,0.172151,0.0114097,5.12516e-06,-8.0814e-06,0.183558,0.0113957,-1.9119e-05,3.01567e-05,0.194965,0.0114479,7.13509e-05,-0.000112545,0.206371,0.011253,-0.000266285,-0.000106493,0.217252,0.0104009,-0.000585765,7.32149e-05,0.22714,0.00944906,-0.00036612,1.21917e-05,0.236235,0.0087534,-0.000329545,2.01753e-05,0.244679,0.00815483,-0.000269019,1.24435e-05,0.252577,0.00765412,-0.000231689,1.05618e-05,0.26001,0.00722243,-0.000200003,8.26662e-06,0.267041,0.00684723,-0.000175203,6.76746e-06,0.27372,0.00651712,-0.000154901,5.61192e-06,0.280088,0.00622416,-0.000138065,4.67009e-06,0.286179,0.00596204,-0.000124055,3.99012e-06,0.292021,0.0057259,-0.000112085,3.36032e-06,0.297638,0.00551181,-0.000102004,2.95338e-06,0.30305,0.00531666,-9.31435e-05,2.52875e-06,0.308277,0.00513796,-8.55572e-05,2.22022e-06,0.313331,0.00497351,-7.88966e-05,1.97163e-06,0.318228,0.00482163,-7.29817e-05,1.7248e-06,0.322978,0.00468084,-6.78073e-05,1.55998e-06,0.327593,0.0045499,-6.31274e-05,1.36343e-06,0.332081,0.00442774,-5.90371e-05,1.27136e-06,0.336451,0.00431348,-5.5223e-05,1.09111e-06,0.34071,0.00420631,-5.19496e-05,1.0399e-06,0.344866,0.00410553,-4.88299e-05,9.18347e-07,0.348923,0.00401062,-4.60749e-05,8.29942e-07,0.352889,0.00392096,-4.35851e-05,7.98478e-07,0.356767,0.00383619,-4.11896e-05,6.84917e-07,0.360562,0.00375586,-3.91349e-05,6.63976e-07,0.36428,0.00367959,-3.7143e-05,5.93086e-07,0.367923,0.00360708,-3.53637e-05,5.6976e-07,0.371495,0.00353806,-3.36544e-05,4.95533e-07,0.375,0.00347224,-3.21678e-05,4.87951e-07,0.378441,0.00340937,-3.0704e-05,4.4349e-07,0.38182,0.00334929,-2.93735e-05,4.20297e-07,0.38514,0.0032918,-2.81126e-05,3.7872e-07,0.388404,0.00323671,-2.69764e-05,3.596e-07,0.391614,0.00318384,-2.58976e-05,3.5845e-07,0.394772,0.00313312,-2.48223e-05,2.92765e-07,0.397881,0.00308435,-2.3944e-05,3.18232e-07,0.400942,0.00303742,-2.29893e-05,2.82046e-07,0.403957,0.00299229,-2.21432e-05,2.52315e-07,0.406927,0.00294876,-2.13862e-05,2.58416e-07,0.409855,0.00290676,-2.0611e-05,2.33939e-07,0.412741,0.00286624,-1.99092e-05,2.36342e-07,0.415587,0.00282713,-1.92001e-05,1.916e-07,0.418396,0.00278931,-1.86253e-05,2.1915e-07,0.421167,0.00275271,-1.79679e-05,1.83498e-07,0.423901,0.00271733,-1.74174e-05,1.79343e-07,0.426602,0.00268303,-1.68794e-05,1.72013e-07,0.429268,0.00264979,-1.63633e-05,1.75686e-07,0.431901,0.00261759,-1.58363e-05,1.3852e-07,0.434503,0.00258633,-1.54207e-05,1.64304e-07,0.437074,0.00255598,-1.49278e-05,1.28136e-07,0.439616,0.00252651,-1.45434e-05,1.57618e-07,0.442128,0.0024979,-1.40705e-05,1.0566e-07,0.444612,0.00247007,-1.37535e-05,1.34998e-07,0.447068,0.00244297,-1.33485e-05,1.29207e-07,0.449498,0.00241666,-1.29609e-05,9.32347e-08,0.451902,0.00239102,-1.26812e-05,1.23703e-07,0.45428,0.00236603,-1.23101e-05,9.74072e-08,0.456634,0.0023417,-1.20179e-05,1.12518e-07,0.458964,0.002318,-1.16803e-05,7.83681e-08,0.46127,0.00229488,-1.14452e-05,1.10452e-07,0.463554,0.00227232,-1.11139e-05,7.58719e-08,0.465815,0.00225032,-1.08863e-05,9.2699e-08,0.468055,0.00222882,-1.06082e-05,8.97738e-08,0.470273,0.00220788,-1.03388e-05,5.4845e-08,0.47247,0.00218736,-1.01743e-05,1.0808e-07,0.474648,0.00216734,-9.85007e-06,4.9277e-08,0.476805,0.00214779,-9.70224e-06,8.22408e-08,0.478943,0.00212863,-9.45551e-06,6.87942e-08,0.481063,0.00210993,-9.24913e-06,5.98144e-08,0.483163,0.00209161,-9.06969e-06,7.93789e-08,0.485246,0.00207371,-8.83155e-06,3.99032e-08,0.487311,0.00205616,-8.71184e-06,8.88325e-08,0.489358,0.002039,-8.44534e-06,2.20004e-08,0.491389,0.00202218,-8.37934e-06,9.13872e-08,0.493403,0.0020057,-8.10518e-06,2.96829e-08,0.495401,0.00198957,-8.01613e-06,5.81028e-08,0.497382,0.00197372,-7.84183e-06,6.5731e-08,0.499348,0.00195823,-7.64463e-06,3.66019e-08,0.501299,0.00194305,-7.53483e-06,2.62811e-08,0.503234,0.00192806,-7.45598e-06,9.66907e-08,0.505155,0.00191344,-7.16591e-06,4.18928e-09,0.507061,0.00189912,-7.15334e-06,6.53665e-08,0.508953,0.00188501,-6.95724e-06,3.23686e-08,0.510831,0.00187119,-6.86014e-06,4.35774e-08,0.512696,0.0018576,-6.72941e-06,3.17406e-08,0.514547,0.00184424,-6.63418e-06,6.78785e-08,0.516384,0.00183117,-6.43055e-06,-5.23126e-09,0.518209,0.0018183,-6.44624e-06,7.22562e-08,0.520021,0.00180562,-6.22947e-06,1.42292e-08,0.52182,0.0017932,-6.18679e-06,4.9641e-08,0.523607,0.00178098,-6.03786e-06,2.56259e-08,0.525382,0.00176898,-5.96099e-06,2.66696e-08,0.527145,0.00175714,-5.88098e-06,4.65094e-08,0.528897,0.00174552,-5.74145e-06,2.57114e-08,0.530637,0.00173411,-5.66431e-06,2.94588e-08,0.532365,0.00172287,-5.57594e-06,3.52667e-08,0.534082,0.00171182,-5.47014e-06,8.28868e-09,0.535789,0.00170091,-5.44527e-06,5.07871e-08,0.537484,0.00169017,-5.29291e-06,2.69817e-08,0.539169,0.00167967,-5.21197e-06,2.01009e-08,0.540844,0.0016693,-5.15166e-06,1.18237e-08,0.542508,0.00165903,-5.11619e-06,5.18135e-08,0.544162,0.00164896,-4.96075e-06,1.9341e-08,0.545806,0.00163909,-4.90273e-06,-9.96867e-09,0.54744,0.00162926,-4.93263e-06,8.01382e-08,0.549064,0.00161963,-4.69222e-06,-1.25601e-08,0.550679,0.00161021,-4.7299e-06,2.97067e-08,0.552285,0.00160084,-4.64078e-06,1.29426e-08,0.553881,0.0015916,-4.60195e-06,3.77327e-08,0.555468,0.00158251,-4.48875e-06,1.49412e-08,0.557046,0.00157357,-4.44393e-06,2.17118e-08,0.558615,0.00156475,-4.3788e-06,1.74206e-08,0.560176,0.00155605,-4.32653e-06,2.78152e-08,0.561727,0.00154748,-4.24309e-06,-9.47239e-09,0.563271,0.00153896,-4.27151e-06,6.9679e-08,0.564805,0.00153063,-4.06247e-06,-3.08246e-08,0.566332,0.00152241,-4.15494e-06,5.36188e-08,0.56785,0.00151426,-3.99409e-06,-4.83594e-09,0.56936,0.00150626,-4.00859e-06,2.53293e-08,0.570863,0.00149832,-3.93261e-06,2.27286e-08,0.572357,0.00149052,-3.86442e-06,2.96541e-09,0.573844,0.0014828,-3.85552e-06,2.50147e-08,0.575323,0.00147516,-3.78048e-06,1.61842e-08,0.576794,0.00146765,-3.73193e-06,2.94582e-08,0.578258,0.00146028,-3.64355e-06,-1.48076e-08,0.579715,0.00145295,-3.68798e-06,2.97724e-08,0.581164,0.00144566,-3.59866e-06,1.49272e-08,0.582606,0.00143851,-3.55388e-06,2.97285e-08,0.584041,0.00143149,-3.46469e-06,-1.46323e-08,0.585469,0.00142451,-3.50859e-06,2.88004e-08,0.58689,0.00141758,-3.42219e-06,1.864e-08,0.588304,0.00141079,-3.36627e-06,1.58482e-08,0.589712,0.00140411,-3.31872e-06,-2.24279e-08,0.591112,0.00139741,-3.38601e-06,7.38639e-08,0.592507,0.00139085,-3.16441e-06,-3.46088e-08,0.593894,0.00138442,-3.26824e-06,4.96675e-09,0.595275,0.0013779,-3.25334e-06,7.4346e-08,0.59665,0.00137162,-3.0303e-06,-6.39319e-08,0.598019,0.00136536,-3.2221e-06,6.21725e-08,0.599381,0.00135911,-3.03558e-06,-5.94423e-09,0.600737,0.00135302,-3.05341e-06,2.12091e-08,0.602087,0.00134697,-2.98979e-06,-1.92876e-08,0.603431,0.00134094,-3.04765e-06,5.5941e-08,0.604769,0.00133501,-2.87983e-06,-2.56622e-08,0.606101,0.00132917,-2.95681e-06,4.67078e-08,0.607427,0.0013234,-2.81669e-06,-4.19592e-08,0.608748,0.00131764,-2.94257e-06,6.15243e-08,0.610062,0.00131194,-2.75799e-06,-2.53244e-08,0.611372,0.00130635,-2.83397e-06,3.97739e-08,0.612675,0.0013008,-2.71465e-06,-1.45618e-08,0.613973,0.00129533,-2.75833e-06,1.84733e-08,0.615266,0.00128986,-2.70291e-06,2.73606e-10,0.616553,0.00128446,-2.70209e-06,4.00367e-08,0.617835,0.00127918,-2.58198e-06,-4.12113e-08,0.619111,0.00127389,-2.70561e-06,6.52039e-08,0.620383,0.00126867,-2.51e-06,-4.07901e-08,0.621649,0.00126353,-2.63237e-06,3.83516e-08,0.62291,0.00125838,-2.51732e-06,6.59315e-09,0.624166,0.00125337,-2.49754e-06,-5.11939e-09,0.625416,0.00124836,-2.5129e-06,1.38846e-08,0.626662,0.00124337,-2.47124e-06,9.18514e-09,0.627903,0.00123846,-2.44369e-06,8.97952e-09,0.629139,0.0012336,-2.41675e-06,1.45012e-08,0.63037,0.00122881,-2.37325e-06,-7.37949e-09,0.631597,0.00122404,-2.39538e-06,1.50169e-08,0.632818,0.00121929,-2.35033e-06,6.91648e-09,0.634035,0.00121461,-2.32958e-06,1.69219e-08,0.635248,0.00121,-2.27882e-06,-1.49997e-08,0.636455,0.0012054,-2.32382e-06,4.30769e-08,0.637659,0.00120088,-2.19459e-06,-3.80986e-08,0.638857,0.00119638,-2.30888e-06,4.97134e-08,0.640051,0.00119191,-2.15974e-06,-4.15463e-08,0.641241,0.00118747,-2.28438e-06,5.68667e-08,0.642426,0.00118307,-2.11378e-06,-7.10641e-09,0.643607,0.00117882,-2.1351e-06,-2.8441e-08,0.644784,0.00117446,-2.22042e-06,6.12658e-08,0.645956,0.00117021,-2.03663e-06,-3.78083e-08,0.647124,0.00116602,-2.15005e-06,3.03627e-08,0.648288,0.00116181,-2.05896e-06,-2.40379e-08,0.649448,0.00115762,-2.13108e-06,6.57887e-08,0.650603,0.00115356,-1.93371e-06,-6.03028e-08,0.651755,0.00114951,-2.11462e-06,5.62134e-08,0.652902,0.00114545,-1.94598e-06,-4.53417e-08,0.654046,0.00114142,-2.082e-06,6.55489e-08,0.655185,0.00113745,-1.88536e-06,-3.80396e-08,0.656321,0.00113357,-1.99948e-06,2.70049e-08,0.657452,0.00112965,-1.91846e-06,-1.03755e-08,0.65858,0.00112578,-1.94959e-06,1.44973e-08,0.659704,0.00112192,-1.9061e-06,1.1991e-08,0.660824,0.00111815,-1.87012e-06,-2.85634e-09,0.66194,0.0011144,-1.87869e-06,-5.65782e-10,0.663053,0.00111064,-1.88039e-06,5.11947e-09,0.664162,0.0011069,-1.86503e-06,3.96924e-08,0.665267,0.00110328,-1.74595e-06,-4.46795e-08,0.666368,0.00109966,-1.87999e-06,1.98161e-08,0.667466,0.00109596,-1.82054e-06,2.502e-08,0.66856,0.00109239,-1.74548e-06,-6.86593e-10,0.669651,0.0010889,-1.74754e-06,-2.22739e-08,0.670738,0.00108534,-1.81437e-06,3.01776e-08,0.671821,0.0010818,-1.72383e-06,2.07732e-08,0.672902,0.00107841,-1.66151e-06,-5.36658e-08,0.673978,0.00107493,-1.82251e-06,7.46802e-08,0.675051,0.00107151,-1.59847e-06,-6.62411e-08,0.676121,0.00106811,-1.79719e-06,7.10748e-08,0.677188,0.00106473,-1.58397e-06,-3.92441e-08,0.678251,0.00106145,-1.7017e-06,2.62973e-08,0.679311,0.00105812,-1.62281e-06,-6.34035e-09,0.680367,0.00105486,-1.64183e-06,-9.36249e-10,0.68142,0.00105157,-1.64464e-06,1.00854e-08,0.68247,0.00104831,-1.61438e-06,2.01995e-08,0.683517,0.00104514,-1.55378e-06,-3.1279e-08,0.68456,0.00104194,-1.64762e-06,4.53114e-08,0.685601,0.00103878,-1.51169e-06,-3.07573e-08,0.686638,0.00103567,-1.60396e-06,1.81133e-08,0.687672,0.00103251,-1.54962e-06,1.79085e-08,0.688703,0.00102947,-1.49589e-06,-3.01428e-08,0.689731,0.00102639,-1.58632e-06,4.30583e-08,0.690756,0.00102334,-1.45715e-06,-2.28814e-08,0.691778,0.00102036,-1.52579e-06,-1.11373e-08,0.692797,0.00101727,-1.5592e-06,6.74305e-08,0.693812,0.00101436,-1.35691e-06,-7.97709e-08,0.694825,0.0010114,-1.59622e-06,7.28391e-08,0.695835,0.00100843,-1.37771e-06,-3.27715e-08,0.696842,0.00100558,-1.47602e-06,-1.35807e-09,0.697846,0.00100262,-1.48009e-06,3.82037e-08,0.698847,0.000999775,-1.36548e-06,-3.22474e-08,0.699846,0.000996948,-1.46223e-06,3.11809e-08,0.700841,0.000994117,-1.36868e-06,-3.28714e-08,0.701834,0.000991281,-1.4673e-06,4.07001e-08,0.702824,0.000988468,-1.3452e-06,-1.07197e-08,0.703811,0.000985746,-1.37736e-06,2.17866e-09,0.704795,0.000982998,-1.37082e-06,2.00521e-09,0.705777,0.000980262,-1.3648e-06,-1.01996e-08,0.706756,0.000977502,-1.3954e-06,3.87931e-08,0.707732,0.000974827,-1.27902e-06,-2.57632e-08,0.708706,0.000972192,-1.35631e-06,4.65513e-09,0.709676,0.000969493,-1.34235e-06,7.14257e-09,0.710645,0.00096683,-1.32092e-06,2.63791e-08,0.71161,0.000964267,-1.24178e-06,-5.30543e-08,0.712573,0.000961625,-1.40095e-06,6.66289e-08,0.713533,0.000959023,-1.20106e-06,-3.46474e-08,0.714491,0.000956517,-1.305e-06,1.23559e-08,0.715446,0.000953944,-1.26793e-06,-1.47763e-08,0.716399,0.000951364,-1.31226e-06,4.67494e-08,0.717349,0.000948879,-1.17201e-06,-5.3012e-08,0.718297,0.000946376,-1.33105e-06,4.60894e-08,0.719242,0.000943852,-1.19278e-06,-1.21366e-08,0.720185,0.00094143,-1.22919e-06,2.45673e-09,0.721125,0.000938979,-1.22182e-06,2.30966e-09,0.722063,0.000936543,-1.21489e-06,-1.16954e-08,0.722998,0.000934078,-1.24998e-06,4.44718e-08,0.723931,0.000931711,-1.11656e-06,-4.69823e-08,0.724861,0.000929337,-1.25751e-06,2.4248e-08,0.725789,0.000926895,-1.18477e-06,9.5949e-09,0.726715,0.000924554,-1.15598e-06,-3.02286e-09,0.727638,0.000922233,-1.16505e-06,2.49649e-09,0.72856,0.00091991,-1.15756e-06,-6.96321e-09,0.729478,0.000917575,-1.17845e-06,2.53564e-08,0.730395,0.000915294,-1.10238e-06,-3.48578e-08,0.731309,0.000912984,-1.20695e-06,5.44704e-08,0.732221,0.000910734,-1.04354e-06,-6.38144e-08,0.73313,0.000908455,-1.23499e-06,8.15781e-08,0.734038,0.00090623,-9.90253e-07,-8.3684e-08,0.734943,0.000903999,-1.2413e-06,7.43441e-08,0.735846,0.000901739,-1.01827e-06,-3.48787e-08,0.736746,0.000899598,-1.12291e-06,5.56596e-09,0.737645,0.000897369,-1.10621e-06,1.26148e-08,0.738541,0.000895194,-1.06837e-06,3.57935e-09,0.739435,0.000893068,-1.05763e-06,-2.69322e-08,0.740327,0.000890872,-1.13842e-06,4.45448e-08,0.741217,0.000888729,-1.00479e-06,-3.20376e-08,0.742105,0.000886623,-1.1009e-06,2.40011e-08,0.74299,0.000884493,-1.0289e-06,-4.36209e-09,0.743874,0.000882422,-1.04199e-06,-6.55268e-09,0.744755,0.000880319,-1.06164e-06,3.05728e-08,0.745634,0.000878287,-9.69926e-07,-5.61338e-08,0.746512,0.000876179,-1.13833e-06,7.4753e-08,0.747387,0.000874127,-9.14068e-07,-6.40644e-08,0.74826,0.000872106,-1.10626e-06,6.22955e-08,0.749131,0.000870081,-9.19375e-07,-6.59083e-08,0.75,0.000868044,-1.1171e-06,8.21284e-08,0.750867,0.000866056,-8.70714e-07,-8.37915e-08,0.751732,0.000864064,-1.12209e-06,7.42237e-08,0.752595,0.000862042,-8.99418e-07,-3.42894e-08,0.753456,0.00086014,-1.00229e-06,3.32955e-09,0.754315,0.000858146,-9.92297e-07,2.09712e-08,0.755173,0.000856224,-9.29384e-07,-2.76096e-08,0.756028,0.000854282,-1.01221e-06,2.98627e-08,0.756881,0.000852348,-9.22625e-07,-3.22365e-08,0.757733,0.000850406,-1.01933e-06,3.94786e-08,0.758582,0.000848485,-9.00898e-07,-6.46833e-09,0.75943,0.000846664,-9.20303e-07,-1.36052e-08,0.760275,0.000844783,-9.61119e-07,1.28447e-09,0.761119,0.000842864,-9.57266e-07,8.4674e-09,0.761961,0.000840975,-9.31864e-07,2.44506e-08,0.762801,0.000839185,-8.58512e-07,-4.6665e-08,0.763639,0.000837328,-9.98507e-07,4.30001e-08,0.764476,0.00083546,-8.69507e-07,-6.12609e-09,0.76531,0.000833703,-8.87885e-07,-1.84959e-08,0.766143,0.000831871,-9.43372e-07,2.05052e-08,0.766974,0.000830046,-8.81857e-07,-3.92026e-09,0.767803,0.000828271,-8.93618e-07,-4.82426e-09,0.768631,0.000826469,-9.0809e-07,2.32172e-08,0.769456,0.000824722,-8.38439e-07,-2.84401e-08,0.77028,0.00082296,-9.23759e-07,3.09386e-08,0.771102,0.000821205,-8.30943e-07,-3.57099e-08,0.771922,0.000819436,-9.38073e-07,5.22963e-08,0.772741,0.000817717,-7.81184e-07,-5.42658e-08,0.773558,0.000815992,-9.43981e-07,4.55579e-08,0.774373,0.000814241,-8.07308e-07,-8.75656e-09,0.775186,0.0008126,-8.33578e-07,-1.05315e-08,0.775998,0.000810901,-8.65172e-07,-8.72188e-09,0.776808,0.000809145,-8.91338e-07,4.54191e-08,0.777616,0.000807498,-7.5508e-07,-5.37454e-08,0.778423,0.000805827,-9.16317e-07,5.03532e-08,0.779228,0.000804145,-7.65257e-07,-2.84584e-08,0.780031,0.000802529,-8.50632e-07,3.87579e-09,0.780833,0.00080084,-8.39005e-07,1.29552e-08,0.781633,0.0007992,-8.00139e-07,3.90804e-09,0.782432,0.000797612,-7.88415e-07,-2.85874e-08,0.783228,0.000795949,-8.74177e-07,5.0837e-08,0.784023,0.000794353,-7.21666e-07,-5.55513e-08,0.784817,0.000792743,-8.8832e-07,5.21587e-08,0.785609,0.000791123,-7.31844e-07,-3.38744e-08,0.786399,0.000789558,-8.33467e-07,2.37342e-08,0.787188,0.000787962,-7.62264e-07,-1.45775e-09,0.787975,0.000786433,-7.66638e-07,-1.79034e-08,0.788761,0.000784846,-8.20348e-07,1.34665e-08,0.789545,0.000783246,-7.79948e-07,2.3642e-08,0.790327,0.000781757,-7.09022e-07,-4.84297e-08,0.791108,0.000780194,-8.54311e-07,5.08674e-08,0.791888,0.000778638,-7.01709e-07,-3.58303e-08,0.792666,0.000777127,-8.092e-07,3.28493e-08,0.793442,0.000775607,-7.10652e-07,-3.59624e-08,0.794217,0.000774078,-8.1854e-07,5.13959e-08,0.79499,0.000772595,-6.64352e-07,-5.04121e-08,0.795762,0.000771115,-8.15588e-07,3.10431e-08,0.796532,0.000769577,-7.22459e-07,-1.41557e-08,0.797301,0.00076809,-7.64926e-07,2.55795e-08,0.798069,0.000766636,-6.88187e-07,-2.85578e-08,0.798835,0.000765174,-7.73861e-07,2.90472e-08,0.799599,0.000763714,-6.86719e-07,-2.80262e-08,0.800362,0.000762256,-7.70798e-07,2.34531e-08,0.801123,0.000760785,-7.00438e-07,-6.18144e-09,0.801884,0.000759366,-7.18983e-07,1.27263e-09,0.802642,0.000757931,-7.15165e-07,1.09101e-09,0.803399,0.000756504,-7.11892e-07,-5.63675e-09,0.804155,0.000755064,-7.28802e-07,2.14559e-08,0.80491,0.00075367,-6.64434e-07,-2.05821e-08,0.805663,0.00075228,-7.26181e-07,1.26812e-09,0.806414,0.000750831,-7.22377e-07,1.55097e-08,0.807164,0.000749433,-6.75848e-07,-3.70216e-09,0.807913,0.00074807,-6.86954e-07,-7.0105e-10,0.80866,0.000746694,-6.89057e-07,6.5063e-09,0.809406,0.000745336,-6.69538e-07,-2.53242e-08,0.810151,0.000743921,-7.45511e-07,3.51858e-08,0.810894,0.000742535,-6.39953e-07,3.79034e-09,0.811636,0.000741267,-6.28582e-07,-5.03471e-08,0.812377,0.000739858,-7.79624e-07,7.83886e-08,0.813116,0.000738534,-5.44458e-07,-8.43935e-08,0.813854,0.000737192,-7.97638e-07,8.03714e-08,0.81459,0.000735838,-5.56524e-07,-5.82784e-08,0.815325,0.00073455,-7.31359e-07,3.35329e-08,0.816059,0.000733188,-6.3076e-07,-1.62486e-08,0.816792,0.000731878,-6.79506e-07,3.14614e-08,0.817523,0.000730613,-5.85122e-07,-4.99925e-08,0.818253,0.000729293,-7.35099e-07,4.92994e-08,0.818982,0.000727971,-5.87201e-07,-2.79959e-08,0.819709,0.000726712,-6.71189e-07,3.07959e-09,0.820435,0.000725379,-6.6195e-07,1.56777e-08,0.82116,0.000724102,-6.14917e-07,-6.18564e-09,0.821883,0.000722854,-6.33474e-07,9.06488e-09,0.822606,0.000721614,-6.06279e-07,-3.00739e-08,0.823327,0.000720311,-6.96501e-07,5.16262e-08,0.824046,0.000719073,-5.41623e-07,-5.72214e-08,0.824765,0.000717818,-7.13287e-07,5.80503e-08,0.825482,0.000716566,-5.39136e-07,-5.57703e-08,0.826198,0.00071532,-7.06447e-07,4.58215e-08,0.826912,0.000714045,-5.68983e-07,-8.30636e-09,0.827626,0.000712882,-5.93902e-07,-1.25961e-08,0.828338,0.000711656,-6.3169e-07,-9.13985e-10,0.829049,0.00071039,-6.34432e-07,1.62519e-08,0.829759,0.00070917,-5.85676e-07,-4.48904e-09,0.830468,0.000707985,-5.99143e-07,1.70418e-09,0.831175,0.000706792,-5.9403e-07,-2.32768e-09,0.831881,0.000705597,-6.01014e-07,7.60648e-09,0.832586,0.000704418,-5.78194e-07,-2.80982e-08,0.83329,0.000703177,-6.62489e-07,4.51817e-08,0.833993,0.000701988,-5.26944e-07,-3.34192e-08,0.834694,0.000700834,-6.27201e-07,2.88904e-08,0.835394,0.000699666,-5.4053e-07,-2.25378e-08,0.836093,0.000698517,-6.08143e-07,1.65589e-09,0.836791,0.000697306,-6.03176e-07,1.59142e-08,0.837488,0.000696147,-5.55433e-07,-5.70801e-09,0.838184,0.000695019,-5.72557e-07,6.91792e-09,0.838878,0.000693895,-5.51803e-07,-2.19637e-08,0.839571,0.000692725,-6.17694e-07,2.13321e-08,0.840263,0.000691554,-5.53698e-07,-3.75996e-09,0.840954,0.000690435,-5.64978e-07,-6.29219e-09,0.841644,0.000689287,-5.83855e-07,2.89287e-08,0.842333,0.000688206,-4.97068e-07,-4.98181e-08,0.843021,0.000687062,-6.46523e-07,5.11344e-08,0.843707,0.000685922,-4.9312e-07,-3.55102e-08,0.844393,0.00068483,-5.9965e-07,3.13019e-08,0.845077,0.000683724,-5.05745e-07,-3.00925e-08,0.84576,0.000682622,-5.96022e-07,2.94636e-08,0.846442,0.000681519,-5.07631e-07,-2.81572e-08,0.847123,0.000680419,-5.92103e-07,2.35606e-08,0.847803,0.000679306,-5.21421e-07,-6.48045e-09,0.848482,0.000678243,-5.40863e-07,2.36124e-09,0.849159,0.000677169,-5.33779e-07,-2.96461e-09,0.849836,0.000676092,-5.42673e-07,9.49728e-09,0.850512,0.000675035,-5.14181e-07,-3.50245e-08,0.851186,0.000673902,-6.19254e-07,7.09959e-08,0.851859,0.000672876,-4.06267e-07,-7.01453e-08,0.852532,0.000671853,-6.16703e-07,3.07714e-08,0.853203,0.000670712,-5.24388e-07,6.66423e-09,0.853873,0.000669684,-5.04396e-07,2.17629e-09,0.854542,0.000668681,-4.97867e-07,-1.53693e-08,0.855211,0.000667639,-5.43975e-07,-3.03752e-10,0.855878,0.000666551,-5.44886e-07,1.65844e-08,0.856544,0.000665511,-4.95133e-07,-6.42907e-09,0.857209,0.000664501,-5.1442e-07,9.13195e-09,0.857873,0.0006635,-4.87024e-07,-3.00987e-08,0.858536,0.000662435,-5.7732e-07,5.16584e-08,0.859198,0.000661436,-4.22345e-07,-5.73255e-08,0.859859,0.000660419,-5.94322e-07,5.84343e-08,0.860518,0.000659406,-4.19019e-07,-5.72022e-08,0.861177,0.000658396,-5.90626e-07,5.11653e-08,0.861835,0.000657368,-4.3713e-07,-2.82495e-08,0.862492,0.000656409,-5.21878e-07,2.22788e-09,0.863148,0.000655372,-5.15195e-07,1.9338e-08,0.863803,0.0006544,-4.5718e-07,-1.99754e-08,0.864457,0.000653425,-5.17107e-07,9.59024e-10,0.86511,0.000652394,-5.1423e-07,1.61393e-08,0.865762,0.000651414,-4.65812e-07,-5.91149e-09,0.866413,0.000650465,-4.83546e-07,7.50665e-09,0.867063,0.00064952,-4.61026e-07,-2.4115e-08,0.867712,0.000648526,-5.33371e-07,2.93486e-08,0.86836,0.000647547,-4.45325e-07,-3.36748e-08,0.869007,0.000646555,-5.4635e-07,4.57461e-08,0.869653,0.0006456,-4.09112e-07,-3.01002e-08,0.870298,0.000644691,-4.99412e-07,1.50501e-08,0.870942,0.000643738,-4.54262e-07,-3.01002e-08,0.871585,0.000642739,-5.44563e-07,4.57461e-08,0.872228,0.000641787,-4.07324e-07,-3.36748e-08,0.872869,0.000640871,-5.08349e-07,2.93486e-08,0.873509,0.000639943,-4.20303e-07,-2.4115e-08,0.874149,0.00063903,-4.92648e-07,7.50655e-09,0.874787,0.000638067,-4.70128e-07,-5.91126e-09,0.875425,0.000637109,-4.87862e-07,1.61385e-08,0.876062,0.000636182,-4.39447e-07,9.61961e-10,0.876697,0.000635306,-4.36561e-07,-1.99863e-08,0.877332,0.000634373,-4.9652e-07,1.93785e-08,0.877966,0.000633438,-4.38384e-07,2.07697e-09,0.878599,0.000632567,-4.32153e-07,-2.76864e-08,0.879231,0.00063162,-5.15212e-07,4.90641e-08,0.879862,0.000630737,-3.6802e-07,-4.93606e-08,0.880493,0.000629852,-5.16102e-07,2.9169e-08,0.881122,0.000628908,-4.28595e-07,-7.71083e-09,0.881751,0.000628027,-4.51727e-07,1.6744e-09,0.882378,0.000627129,-4.46704e-07,1.01317e-09,0.883005,0.000626239,-4.43665e-07,-5.72703e-09,0.883631,0.000625334,-4.60846e-07,2.1895e-08,0.884255,0.000624478,-3.95161e-07,-2.22481e-08,0.88488,0.000623621,-4.61905e-07,7.4928e-09,0.885503,0.00062272,-4.39427e-07,-7.72306e-09,0.886125,0.000621818,-4.62596e-07,2.33995e-08,0.886746,0.000620963,-3.92398e-07,-2.62704e-08,0.887367,0.000620099,-4.71209e-07,2.20775e-08,0.887987,0.000619223,-4.04976e-07,-2.43496e-09,0.888605,0.000618406,-4.12281e-07,-1.23377e-08,0.889223,0.000617544,-4.49294e-07,-7.81876e-09,0.88984,0.000616622,-4.72751e-07,4.36128e-08,0.890457,0.000615807,-3.41912e-07,-4.7423e-08,0.891072,0.000614981,-4.84181e-07,2.68698e-08,0.891687,0.000614093,-4.03572e-07,-4.51384e-10,0.8923,0.000613285,-4.04926e-07,-2.50643e-08,0.892913,0.0006124,-4.80119e-07,4.11038e-08,0.893525,0.000611563,-3.56808e-07,-2.01414e-08,0.894136,0.000610789,-4.17232e-07,-2.01426e-08,0.894747,0.000609894,-4.7766e-07,4.11073e-08,0.895356,0.000609062,-3.54338e-07,-2.50773e-08,0.895965,0.000608278,-4.2957e-07,-4.02954e-10,0.896573,0.000607418,-4.30779e-07,2.66891e-08,0.89718,0.000606636,-3.50711e-07,-4.67489e-08,0.897786,0.000605795,-4.90958e-07,4.10972e-08,0.898391,0.000604936,-3.67666e-07,1.56948e-09,0.898996,0.000604205,-3.62958e-07,-4.73751e-08,0.8996,0.000603337,-5.05083e-07,6.87214e-08,0.900202,0.000602533,-2.98919e-07,-4.86966e-08,0.900805,0.000601789,-4.45009e-07,6.85589e-09,0.901406,0.00060092,-4.24441e-07,2.1273e-08,0.902007,0.000600135,-3.60622e-07,-3.23434e-08,0.902606,0.000599317,-4.57652e-07,4.84959e-08,0.903205,0.000598547,-3.12164e-07,-4.24309e-08,0.903803,0.000597795,-4.39457e-07,2.01844e-09,0.904401,0.000596922,-4.33402e-07,3.43571e-08,0.904997,0.000596159,-3.30331e-07,-2.02374e-08,0.905593,0.000595437,-3.91043e-07,-1.30123e-08,0.906188,0.000594616,-4.3008e-07,1.26819e-08,0.906782,0.000593794,-3.92034e-07,2.18894e-08,0.907376,0.000593076,-3.26366e-07,-4.06349e-08,0.907968,0.000592301,-4.4827e-07,2.1441e-08,0.90856,0.000591469,-3.83947e-07,1.44754e-08,0.909151,0.000590744,-3.40521e-07,-1.97379e-08,0.909742,0.000590004,-3.99735e-07,4.87161e-09,0.910331,0.000589219,-3.8512e-07,2.51532e-10,0.91092,0.00058845,-3.84366e-07,-5.87776e-09,0.911508,0.000587663,-4.01999e-07,2.32595e-08,0.912096,0.000586929,-3.3222e-07,-2.75554e-08,0.912682,0.000586182,-4.14887e-07,2.73573e-08,0.913268,0.000585434,-3.32815e-07,-2.22692e-08,0.913853,0.000584702,-3.99622e-07,2.11486e-09,0.914437,0.000583909,-3.93278e-07,1.38098e-08,0.915021,0.000583164,-3.51848e-07,2.25042e-09,0.915604,0.000582467,-3.45097e-07,-2.28115e-08,0.916186,0.000581708,-4.13531e-07,2.93911e-08,0.916767,0.000580969,-3.25358e-07,-3.51481e-08,0.917348,0.000580213,-4.30803e-07,5.15967e-08,0.917928,0.000579506,-2.76012e-07,-5.20296e-08,0.918507,0.000578798,-4.32101e-07,3.73124e-08,0.919085,0.000578046,-3.20164e-07,-3.76154e-08,0.919663,0.000577293,-4.3301e-07,5.35447e-08,0.92024,0.000576587,-2.72376e-07,-5.7354e-08,0.920816,0.000575871,-4.44438e-07,5.66621e-08,0.921391,0.000575152,-2.74452e-07,-5.00851e-08,0.921966,0.000574453,-4.24707e-07,2.4469e-08,0.92254,0.000573677,-3.513e-07,1.18138e-08,0.923114,0.000573009,-3.15859e-07,-1.21195e-08,0.923686,0.000572341,-3.52217e-07,-2.29403e-08,0.924258,0.000571568,-4.21038e-07,4.4276e-08,0.924829,0.000570859,-2.8821e-07,-3.49546e-08,0.9254,0.000570178,-3.93074e-07,3.59377e-08,0.92597,0.000569499,-2.85261e-07,-4.91915e-08,0.926539,0.000568781,-4.32835e-07,4.16189e-08,0.927107,0.00056804,-3.07979e-07,1.92523e-09,0.927675,0.00056743,-3.02203e-07,-4.93198e-08,0.928242,0.000566678,-4.50162e-07,7.61447e-08,0.928809,0.000566006,-2.21728e-07,-7.6445e-08,0.929374,0.000565333,-4.51063e-07,5.08216e-08,0.929939,0.000564583,-2.98599e-07,-7.63212e-09,0.930503,0.000563963,-3.21495e-07,-2.02931e-08,0.931067,0.000563259,-3.82374e-07,2.92001e-08,0.93163,0.000562582,-2.94774e-07,-3.69025e-08,0.932192,0.000561882,-4.05482e-07,5.88053e-08,0.932754,0.000561247,-2.29066e-07,-7.91094e-08,0.933315,0.000560552,-4.66394e-07,7.88184e-08,0.933875,0.000559856,-2.29939e-07,-5.73501e-08,0.934434,0.000559224,-4.01989e-07,3.13727e-08,0.934993,0.000558514,-3.07871e-07,-8.53611e-09,0.935551,0.000557873,-3.33479e-07,2.77175e-09,0.936109,0.000557214,-3.25164e-07,-2.55091e-09,0.936666,0.000556556,-3.32817e-07,7.43188e-09,0.937222,0.000555913,-3.10521e-07,-2.71766e-08,0.937778,0.00055521,-3.92051e-07,4.167e-08,0.938333,0.000554551,-2.67041e-07,-2.02941e-08,0.938887,0.000553956,-3.27923e-07,-2.00984e-08,0.93944,0.00055324,-3.88218e-07,4.10828e-08,0.939993,0.000552587,-2.6497e-07,-2.50237e-08,0.940546,0.000551982,-3.40041e-07,-5.92583e-10,0.941097,0.0005513,-3.41819e-07,2.7394e-08,0.941648,0.000550698,-2.59637e-07,-4.93788e-08,0.942199,0.000550031,-4.07773e-07,5.09119e-08,0.942748,0.000549368,-2.55038e-07,-3.50595e-08,0.943297,0.000548753,-3.60216e-07,2.97214e-08,0.943846,0.000548122,-2.71052e-07,-2.42215e-08,0.944394,0.000547507,-3.43716e-07,7.55985e-09,0.944941,0.000546842,-3.21037e-07,-6.01796e-09,0.945487,0.000546182,-3.3909e-07,1.65119e-08,0.946033,0.000545553,-2.89555e-07,-4.2498e-10,0.946578,0.000544973,-2.9083e-07,-1.4812e-08,0.947123,0.000544347,-3.35266e-07,6.83068e-11,0.947667,0.000543676,-3.35061e-07,1.45388e-08,0.94821,0.00054305,-2.91444e-07,1.38123e-09,0.948753,0.000542471,-2.87301e-07,-2.00637e-08,0.949295,0.000541836,-3.47492e-07,1.92688e-08,0.949837,0.000541199,-2.89685e-07,2.59298e-09,0.950378,0.000540628,-2.81906e-07,-2.96407e-08,0.950918,0.000539975,-3.70829e-07,5.63652e-08,0.951458,0.000539402,-2.01733e-07,-7.66107e-08,0.951997,0.000538769,-4.31565e-07,7.12638e-08,0.952535,0.00053812,-2.17774e-07,-2.96305e-08,0.953073,0.000537595,-3.06665e-07,-1.23464e-08,0.95361,0.000536945,-3.43704e-07,1.94114e-08,0.954147,0.000536316,-2.8547e-07,-5.69451e-09,0.954683,0.000535728,-3.02554e-07,3.36666e-09,0.955219,0.000535133,-2.92454e-07,-7.77208e-09,0.955753,0.000534525,-3.1577e-07,2.77216e-08,0.956288,0.000533976,-2.32605e-07,-4.35097e-08,0.956821,0.00053338,-3.63134e-07,2.7108e-08,0.957354,0.000532735,-2.8181e-07,-5.31772e-09,0.957887,0.000532156,-2.97764e-07,-5.83718e-09,0.958419,0.000531543,-3.15275e-07,2.86664e-08,0.95895,0.000530998,-2.29276e-07,-4.9224e-08,0.959481,0.000530392,-3.76948e-07,4.90201e-08,0.960011,0.000529785,-2.29887e-07,-2.76471e-08,0.96054,0.000529243,-3.12829e-07,1.96385e-09,0.961069,0.000528623,-3.06937e-07,1.97917e-08,0.961598,0.000528068,-2.47562e-07,-2.15261e-08,0.962125,0.000527508,-3.1214e-07,6.70795e-09,0.962653,0.000526904,-2.92016e-07,-5.30573e-09,0.963179,0.000526304,-3.07934e-07,1.4515e-08,0.963705,0.000525732,-2.64389e-07,6.85048e-09,0.964231,0.000525224,-2.43837e-07,-4.19169e-08,0.964756,0.00052461,-3.69588e-07,4.1608e-08,0.96528,0.000523996,-2.44764e-07,-5.30598e-09,0.965804,0.000523491,-2.60682e-07,-2.03841e-08,0.966327,0.000522908,-3.21834e-07,2.72378e-08,0.966849,0.000522346,-2.40121e-07,-2.89625e-08,0.967371,0.000521779,-3.27008e-07,2.90075e-08,0.967893,0.000521212,-2.39986e-07,-2.74629e-08,0.968414,0.00052065,-3.22374e-07,2.12396e-08,0.968934,0.000520069,-2.58656e-07,2.10922e-09,0.969454,0.000519558,-2.52328e-07,-2.96765e-08,0.969973,0.000518964,-3.41357e-07,5.6992e-08,0.970492,0.000518452,-1.70382e-07,-7.90821e-08,0.97101,0.000517874,-4.07628e-07,8.05224e-08,0.971528,0.000517301,-1.66061e-07,-6.41937e-08,0.972045,0.000516776,-3.58642e-07,5.70429e-08,0.972561,0.00051623,-1.87513e-07,-4.47686e-08,0.973077,0.00051572,-3.21819e-07,2.82237e-09,0.973593,0.000515085,-3.13352e-07,3.34792e-08,0.974108,0.000514559,-2.12914e-07,-1.75298e-08,0.974622,0.000514081,-2.65503e-07,-2.29648e-08,0.975136,0.000513481,-3.34398e-07,4.97843e-08,0.975649,0.000512961,-1.85045e-07,-5.6963e-08,0.976162,0.00051242,-3.55934e-07,5.88585e-08,0.976674,0.000511885,-1.79359e-07,-5.92616e-08,0.977185,0.000511348,-3.57143e-07,5.89785e-08,0.977696,0.000510811,-1.80208e-07,-5.74433e-08,0.978207,0.000510278,-3.52538e-07,5.15854e-08,0.978717,0.000509728,-1.97781e-07,-2.9689e-08,0.979226,0.000509243,-2.86848e-07,7.56591e-09,0.979735,0.000508692,-2.64151e-07,-5.74649e-10,0.980244,0.000508162,-2.65875e-07,-5.26732e-09,0.980752,0.000507615,-2.81677e-07,2.16439e-08,0.981259,0.000507116,-2.16745e-07,-2.17037e-08,0.981766,0.000506618,-2.81856e-07,5.56636e-09,0.982272,0.000506071,-2.65157e-07,-5.61689e-10,0.982778,0.000505539,-2.66842e-07,-3.31963e-09,0.983283,0.000504995,-2.76801e-07,1.38402e-08,0.983788,0.000504483,-2.3528e-07,7.56339e-09,0.984292,0.000504035,-2.1259e-07,-4.40938e-08,0.984796,0.000503478,-3.44871e-07,4.96026e-08,0.985299,0.000502937,-1.96064e-07,-3.51071e-08,0.985802,0.000502439,-3.01385e-07,3.12212e-08,0.986304,0.00050193,-2.07721e-07,-3.0173e-08,0.986806,0.000501424,-2.9824e-07,2.9866e-08,0.987307,0.000500917,-2.08642e-07,-2.96865e-08,0.987808,0.000500411,-2.97702e-07,2.92753e-08,0.988308,0.000499903,-2.09876e-07,-2.78101e-08,0.988807,0.0004994,-2.93306e-07,2.23604e-08,0.989307,0.000498881,-2.26225e-07,-2.02681e-09,0.989805,0.000498422,-2.32305e-07,-1.42531e-08,0.990303,0.000497915,-2.75065e-07,-5.65232e-10,0.990801,0.000497363,-2.76761e-07,1.65141e-08,0.991298,0.000496859,-2.27218e-07,-5.88639e-09,0.991795,0.000496387,-2.44878e-07,7.0315e-09,0.992291,0.000495918,-2.23783e-07,-2.22396e-08,0.992787,0.000495404,-2.90502e-07,2.23224e-08,0.993282,0.00049489,-2.23535e-07,-7.44543e-09,0.993776,0.000494421,-2.45871e-07,7.45924e-09,0.994271,0.000493951,-2.23493e-07,-2.23915e-08,0.994764,0.000493437,-2.90668e-07,2.25021e-08,0.995257,0.000492923,-2.23161e-07,-8.01218e-09,0.99575,0.000492453,-2.47198e-07,9.54669e-09,0.996242,0.000491987,-2.18558e-07,-3.01746e-08,0.996734,0.000491459,-3.09082e-07,5.1547e-08,0.997225,0.000490996,-1.54441e-07,-5.68039e-08,0.997716,0.000490517,-3.24853e-07,5.64594e-08,0.998206,0.000490036,-1.55474e-07,-4.98245e-08,0.998696,0.000489576,-3.04948e-07,2.36292e-08,0.999186,0.000489037,-2.3406e-07,1.49121e-08,0.999674,0.000488613,-1.89324e-07,-2.3673e-08,1.00016,0.000488164,-2.60343e-07,2.01754e-08,1.00065,0.000487704,-1.99816e-07,-5.70288e-08,1.00114,0.000487133,-3.70903e-07,8.87303e-08,1.00162,0.000486657,-1.04712e-07,-5.94737e-08,1.00211,0.000486269,-2.83133e-07,2.99553e-08,1.0026,0.000485793,-1.93267e-07,-6.03474e-08,1.00308,0.000485225,-3.74309e-07,9.2225e-08,1.00357,0.000484754,-9.76345e-08,-7.0134e-08,1.00405,0.000484348,-3.08036e-07,6.91016e-08,1.00454,0.000483939,-1.00731e-07,-8.70633e-08,1.00502,0.000483476,-3.61921e-07,4.07328e-08,1.0055,0.000482875,-2.39723e-07,4.33413e-08,1.00599,0.000482525,-1.09699e-07,-9.48886e-08,1.00647,0.000482021,-3.94365e-07,9.77947e-08,1.00695,0.000481526,-1.00981e-07,-5.78713e-08,1.00743,0.00048115,-2.74595e-07,1.44814e-08,1.00791,0.000480645,-2.31151e-07,-5.42665e-11,1.00839,0.000480182,-2.31314e-07,-1.42643e-08,1.00887,0.000479677,-2.74106e-07,5.71115e-08,1.00935,0.0004793,-1.02772e-07,-9.49724e-08,1.00983,0.000478809,-3.87689e-07,8.43596e-08,1.01031,0.000478287,-1.3461e-07,-4.04755e-09,1.01079,0.000478006,-1.46753e-07,-6.81694e-08,1.01127,0.000477508,-3.51261e-07,3.83067e-08,1.01174,0.00047692,-2.36341e-07,3.41521e-08,1.01222,0.00047655,-1.33885e-07,-5.57058e-08,1.0127,0.000476115,-3.01002e-07,6.94616e-08,1.01317,0.000475721,-9.26174e-08,-1.02931e-07,1.01365,0.000475227,-4.01412e-07,1.03846e-07,1.01412,0.000474736,-8.98751e-08,-7.40321e-08,1.0146,0.000474334,-3.11971e-07,7.30735e-08,1.01507,0.00047393,-9.27508e-08,-9.90527e-08,1.01554,0.000473447,-3.89909e-07,8.47188e-08,1.01602,0.000472921,-1.35753e-07,-1.40381e-09,1.01649,0.000472645,-1.39964e-07,-7.91035e-08,1.01696,0.000472128,-3.77275e-07,7.93993e-08,1.01744,0.000471612,-1.39077e-07,-7.52607e-11,1.01791,0.000471334,-1.39302e-07,-7.90983e-08,1.01838,0.000470818,-3.76597e-07,7.80499e-08,1.01885,0.000470299,-1.42448e-07,5.31733e-09,1.01932,0.00047003,-1.26496e-07,-9.93193e-08,1.01979,0.000469479,-4.24453e-07,1.53541e-07,1.02026,0.00046909,3.617e-08,-1.57217e-07,1.02073,0.000468691,-4.35482e-07,1.177e-07,1.02119,0.000468173,-8.23808e-08,-7.51659e-08,1.02166,0.000467783,-3.07878e-07,6.37538e-08,1.02213,0.000467358,-1.16617e-07,-6.064e-08,1.0226,0.000466943,-2.98537e-07,5.9597e-08,1.02306,0.000466525,-1.19746e-07,-5.85386e-08,1.02353,0.00046611,-2.95362e-07,5.53482e-08,1.024,0.000465685,-1.29317e-07,-4.36449e-08,1.02446,0.000465296,-2.60252e-07,2.20268e-11,1.02493,0.000464775,-2.60186e-07,4.35568e-08,1.02539,0.000464386,-1.29516e-07,-5.50398e-08,1.02586,0.000463961,-2.94635e-07,5.73932e-08,1.02632,0.000463544,-1.22456e-07,-5.53236e-08,1.02678,0.000463133,-2.88426e-07,4.46921e-08,1.02725,0.000462691,-1.5435e-07,-4.23534e-09,1.02771,0.000462369,-1.67056e-07,-2.77507e-08,1.02817,0.000461952,-2.50308e-07,-3.97101e-09,1.02863,0.000461439,-2.62221e-07,4.36348e-08,1.02909,0.000461046,-1.31317e-07,-5.13589e-08,1.02955,0.000460629,-2.85394e-07,4.25913e-08,1.03001,0.000460186,-1.5762e-07,2.0285e-10,1.03047,0.000459871,-1.57011e-07,-4.34027e-08,1.03093,0.000459427,-2.87219e-07,5.41987e-08,1.03139,0.000459015,-1.24623e-07,-5.4183e-08,1.03185,0.000458604,-2.87172e-07,4.33239e-08,1.03231,0.000458159,-1.572e-07,9.65817e-11,1.03277,0.000457845,-1.56911e-07,-4.37103e-08,1.03323,0.0004574,-2.88041e-07,5.55351e-08,1.03368,0.000456991,-1.21436e-07,-5.9221e-08,1.03414,0.00045657,-2.99099e-07,6.21394e-08,1.0346,0.000456158,-1.1268e-07,-7.01275e-08,1.03505,0.000455723,-3.23063e-07,9.91614e-08,1.03551,0.000455374,-2.55788e-08,-8.80996e-08,1.03596,0.000455058,-2.89878e-07,1.48184e-08,1.03642,0.000454523,-2.45422e-07,2.88258e-08,1.03687,0.000454119,-1.58945e-07,-1.09125e-08,1.03733,0.000453768,-1.91682e-07,1.48241e-08,1.03778,0.000453429,-1.4721e-07,-4.83838e-08,1.03823,0.00045299,-2.92361e-07,5.95019e-08,1.03869,0.000452584,-1.13856e-07,-7.04146e-08,1.03914,0.000452145,-3.25099e-07,1.02947e-07,1.03959,0.000451803,-1.62583e-08,-1.02955e-07,1.04004,0.000451462,-3.25123e-07,7.04544e-08,1.04049,0.000451023,-1.1376e-07,-5.96534e-08,1.04094,0.000450616,-2.9272e-07,4.89499e-08,1.04139,0.000450178,-1.45871e-07,-1.69369e-08,1.04184,0.000449835,-1.96681e-07,1.87977e-08,1.04229,0.000449498,-1.40288e-07,-5.82539e-08,1.04274,0.000449043,-3.1505e-07,9.50087e-08,1.04319,0.000448698,-3.00238e-08,-8.33623e-08,1.04364,0.000448388,-2.80111e-07,2.20363e-11,1.04409,0.000447828,-2.80045e-07,8.32742e-08,1.04454,0.000447517,-3.02221e-08,-9.47002e-08,1.04498,0.000447173,-3.14323e-07,5.7108e-08,1.04543,0.000446716,-1.42999e-07,-1.45225e-08,1.04588,0.000446386,-1.86566e-07,9.82022e-10,1.04632,0.000446016,-1.8362e-07,1.05944e-08,1.04677,0.00044568,-1.51837e-07,-4.33597e-08,1.04721,0.000445247,-2.81916e-07,4.36352e-08,1.04766,0.000444814,-1.51011e-07,-1.19717e-08,1.0481,0.000444476,-1.86926e-07,4.25158e-09,1.04855,0.000444115,-1.74171e-07,-5.03461e-09,1.04899,0.000443751,-1.89275e-07,1.58868e-08,1.04944,0.00044342,-1.41614e-07,-5.85127e-08,1.04988,0.000442961,-3.17152e-07,9.89548e-08,1.05032,0.000442624,-2.0288e-08,-9.88878e-08,1.05076,0.000442287,-3.16951e-07,5.81779e-08,1.05121,0.000441827,-1.42418e-07,-1.46144e-08,1.05165,0.000441499,-1.86261e-07,2.79892e-10,1.05209,0.000441127,-1.85421e-07,1.34949e-08,1.05253,0.000440797,-1.44937e-07,-5.42594e-08,1.05297,0.000440344,-3.07715e-07,8.43335e-08,1.05341,0.000439982,-5.47146e-08,-4.46558e-08,1.05385,0.000439738,-1.88682e-07,-2.49193e-08,1.05429,0.000439286,-2.6344e-07,2.5124e-08,1.05473,0.000438835,-1.88068e-07,4.36328e-08,1.05517,0.000438589,-5.71699e-08,-8.04459e-08,1.05561,0.000438234,-2.98508e-07,3.97324e-08,1.05605,0.000437756,-1.79311e-07,4.07258e-08,1.05648,0.000437519,-5.71332e-08,-8.34263e-08,1.05692,0.000437155,-3.07412e-07,5.45608e-08,1.05736,0.000436704,-1.4373e-07,-1.56078e-08,1.05779,0.000436369,-1.90553e-07,7.87043e-09,1.05823,0.000436012,-1.66942e-07,-1.58739e-08,1.05867,0.00043563,-2.14563e-07,5.56251e-08,1.0591,0.000435368,-4.76881e-08,-8.74172e-08,1.05954,0.000435011,-3.0994e-07,5.56251e-08,1.05997,0.000434558,-1.43064e-07,-1.58739e-08,1.06041,0.000434224,-1.90686e-07,7.87042e-09,1.06084,0.000433866,-1.67075e-07,-1.56078e-08,1.06127,0.000433485,-2.13898e-07,5.45609e-08,1.06171,0.000433221,-5.02157e-08,-8.34263e-08,1.06214,0.00043287,-3.00495e-07,4.07258e-08,1.06257,0.000432391,-1.78317e-07,3.97325e-08,1.063,0.000432154,-5.91198e-08,-8.04464e-08,1.06344,0.000431794,-3.00459e-07,4.36347e-08,1.06387,0.000431324,-1.69555e-07,2.5117e-08,1.0643,0.000431061,-9.42041e-08,-2.48934e-08,1.06473,0.000430798,-1.68884e-07,-4.47527e-08,1.06516,0.000430326,-3.03142e-07,8.46951e-08,1.06559,0.000429973,-4.90573e-08,-5.56089e-08,1.06602,0.000429708,-2.15884e-07,1.85314e-08,1.06645,0.000429332,-1.6029e-07,-1.85166e-08,1.06688,0.000428956,-2.1584e-07,5.5535e-08,1.06731,0.000428691,-4.92347e-08,-8.44142e-08,1.06774,0.000428339,-3.02477e-07,4.37032e-08,1.06816,0.000427865,-1.71368e-07,2.88107e-08,1.06859,0.000427609,-8.49356e-08,-3.97367e-08,1.06902,0.00042732,-2.04146e-07,1.09267e-08,1.06945,0.000426945,-1.71365e-07,-3.97023e-09,1.06987,0.00042659,-1.83276e-07,4.9542e-09,1.0703,0.000426238,-1.68414e-07,-1.58466e-08,1.07073,0.000425854,-2.15953e-07,5.84321e-08,1.07115,0.000425597,-4.0657e-08,-9.86725e-08,1.07158,0.00042522,-3.36674e-07,9.78392e-08,1.072,0.00042484,-4.31568e-08,-5.42658e-08,1.07243,0.000424591,-2.05954e-07,1.45377e-11,1.07285,0.000424179,-2.0591e-07,5.42076e-08,1.07328,0.00042393,-4.32877e-08,-9.76357e-08,1.0737,0.00042355,-3.36195e-07,9.79165e-08,1.07412,0.000423172,-4.24451e-08,-5.56118e-08,1.07455,0.00042292,-2.09281e-07,5.32143e-09,1.07497,0.000422518,-1.93316e-07,3.43261e-08,1.07539,0.000422234,-9.0338e-08,-2.34165e-08,1.07581,0.000421983,-1.60588e-07,-5.98692e-08,1.07623,0.000421482,-3.40195e-07,1.43684e-07,1.07666,0.000421233,9.08574e-08,-1.5724e-07,1.07708,0.000420943,-3.80862e-07,1.27647e-07,1.0775,0.000420564,2.0791e-09,-1.1493e-07,1.07792,0.000420223,-3.4271e-07,9.36534e-08,1.07834,0.000419819,-6.17499e-08,-2.12653e-08,1.07876,0.000419632,-1.25546e-07,-8.59219e-09,1.07918,0.000419355,-1.51322e-07,-6.35752e-08,1.0796,0.000418861,-3.42048e-07,1.43684e-07,1.08002,0.000418608,8.90034e-08,-1.53532e-07,1.08043,0.000418326,-3.71593e-07,1.12817e-07,1.08085,0.000417921,-3.31414e-08,-5.93184e-08,1.08127,0.000417677,-2.11097e-07,5.24697e-09,1.08169,0.00041727,-1.95356e-07,3.83305e-08,1.0821,0.000416995,-8.03642e-08,-3.93597e-08,1.08252,0.000416716,-1.98443e-07,-1.0094e-10,1.08294,0.000416319,-1.98746e-07,3.97635e-08,1.08335,0.00041604,-7.94557e-08,-3.97437e-08,1.08377,0.000415762,-1.98687e-07,1.94215e-12,1.08419,0.000415365,-1.98681e-07,3.97359e-08,1.0846,0.000415087,-7.94732e-08,-3.97362e-08,1.08502,0.000414809,-1.98682e-07,-4.31063e-13,1.08543,0.000414411,-1.98683e-07,3.97379e-08,1.08584,0.000414133,-7.94694e-08,-3.97418e-08,1.08626,0.000413855,-1.98695e-07,2.00563e-11,1.08667,0.000413458,-1.98635e-07,3.96616e-08,1.08709,0.000413179,-7.965e-08,-3.9457e-08,1.0875,0.000412902,-1.98021e-07,-1.04281e-09,1.08791,0.000412502,-2.01149e-07,4.36282e-08,1.08832,0.000412231,-7.02648e-08,-5.42608e-08,1.08874,0.000411928,-2.33047e-07,5.42057e-08,1.08915,0.000411624,-7.04301e-08,-4.33527e-08,1.08956,0.000411353,-2.00488e-07,-4.07378e-12,1.08997,0.000410952,-2.005e-07,4.3369e-08,1.09038,0.000410681,-7.03934e-08,-5.42627e-08,1.09079,0.000410378,-2.33182e-07,5.44726e-08,1.0912,0.000410075,-6.97637e-08,-4.44186e-08,1.09161,0.000409802,-2.03019e-07,3.99235e-09,1.09202,0.000409408,-1.91042e-07,2.84491e-08,1.09243,0.000409111,-1.05695e-07,1.42043e-09,1.09284,0.000408904,-1.01434e-07,-3.41308e-08,1.09325,0.000408599,-2.03826e-07,1.58937e-08,1.09366,0.000408239,-1.56145e-07,-2.94438e-08,1.09406,0.000407838,-2.44476e-07,1.01881e-07,1.09447,0.000407655,6.11676e-08,-1.39663e-07,1.09488,0.000407358,-3.57822e-07,9.91432e-08,1.09529,0.00040694,-6.03921e-08,-1.84912e-08,1.09569,0.000406764,-1.15866e-07,-2.51785e-08,1.0961,0.000406457,-1.91401e-07,-4.03115e-12,1.09651,0.000406074,-1.91413e-07,2.51947e-08,1.09691,0.000405767,-1.15829e-07,1.84346e-08,1.09732,0.00040559,-6.05254e-08,-9.89332e-08,1.09772,0.000405172,-3.57325e-07,1.3888e-07,1.09813,0.000404874,5.93136e-08,-9.8957e-08,1.09853,0.000404696,-2.37557e-07,1.853e-08,1.09894,0.000404277,-1.81968e-07,2.48372e-08,1.09934,0.000403987,-1.07456e-07,1.33047e-09,1.09975,0.000403776,-1.03465e-07,-3.01591e-08,1.10015,0.000403479,-1.93942e-07,9.66054e-11,1.10055,0.000403091,-1.93652e-07,2.97727e-08,1.10096,0.000402793,-1.04334e-07,2.19273e-11,1.10136,0.000402585,-1.04268e-07,-2.98604e-08,1.10176,0.000402287,-1.93849e-07,2.10325e-10,1.10216,0.0004019,-1.93218e-07,2.90191e-08,1.10256,0.0004016,-1.06161e-07,2.92264e-09,1.10297,0.000401397,-9.73931e-08,-4.07096e-08,1.10337,0.00040108,-2.19522e-07,4.07067e-08,1.10377,0.000400763,-9.7402e-08,-2.90783e-09,1.10417,0.000400559,-1.06126e-07,-2.90754e-08,1.10457,0.00040026,-1.93352e-07,9.00021e-14,1.10497,0.000399873,-1.93351e-07,2.9075e-08,1.10537,0.000399574,-1.06126e-07,2.90902e-09,1.10577,0.00039937,-9.73992e-08,-4.07111e-08,1.10617,0.000399053,-2.19533e-07,4.07262e-08,1.10657,0.000398736,-9.73541e-08,-2.98424e-09,1.10697,0.000398533,-1.06307e-07,-2.87892e-08,1.10736,0.000398234,-1.92674e-07,-1.06824e-09,1.10776,0.000397845,-1.95879e-07,3.30622e-08,1.10816,0.000397552,-9.66926e-08,-1.19712e-08,1.10856,0.000397323,-1.32606e-07,1.48225e-08,1.10895,0.000397102,-8.81387e-08,-4.73187e-08,1.10935,0.000396784,-2.30095e-07,5.52429e-08,1.10975,0.00039649,-6.4366e-08,-5.44437e-08,1.11014,0.000396198,-2.27697e-07,4.33226e-08,1.11054,0.000395872,-9.77293e-08,3.62656e-10,1.11094,0.000395678,-9.66414e-08,-4.47732e-08,1.11133,0.00039535,-2.30961e-07,5.95208e-08,1.11173,0.000395067,-5.23985e-08,-7.41008e-08,1.11212,0.00039474,-2.74701e-07,1.17673e-07,1.11252,0.000394543,7.83181e-08,-1.58172e-07,1.11291,0.000394225,-3.96199e-07,1.57389e-07,1.1133,0.000393905,7.59679e-08,-1.13756e-07,1.1137,0.000393716,-2.653e-07,5.92165e-08,1.11409,0.000393363,-8.76507e-08,-3.90074e-09,1.11449,0.000393176,-9.93529e-08,-4.36136e-08,1.11488,0.000392846,-2.30194e-07,5.91457e-08,1.11527,0.000392563,-5.27564e-08,-7.376e-08,1.11566,0.000392237,-2.74037e-07,1.16685e-07,1.11606,0.000392039,7.60189e-08,-1.54562e-07,1.11645,0.000391727,-3.87667e-07,1.43935e-07,1.11684,0.000391384,4.4137e-08,-6.35487e-08,1.11723,0.000391281,-1.46509e-07,-8.94896e-09,1.11762,0.000390961,-1.73356e-07,-1.98647e-08,1.11801,0.000390555,-2.3295e-07,8.8408e-08,1.1184,0.000390354,3.22736e-08,-9.53486e-08,1.11879,0.000390133,-2.53772e-07,5.45677e-08,1.11918,0.000389789,-9.0069e-08,-3.71296e-09,1.11957,0.000389598,-1.01208e-07,-3.97159e-08,1.11996,0.000389276,-2.20355e-07,4.33671e-08,1.12035,0.000388966,-9.02542e-08,-1.45431e-08,1.12074,0.000388741,-1.33883e-07,1.48052e-08,1.12113,0.000388518,-8.94678e-08,-4.46778e-08,1.12152,0.000388205,-2.23501e-07,4.46966e-08,1.12191,0.000387892,-8.94114e-08,-1.48992e-08,1.12229,0.000387669,-1.34109e-07,1.49003e-08,1.12268,0.000387445,-8.94082e-08,-4.47019e-08,1.12307,0.000387132,-2.23514e-07,4.4698e-08,1.12345,0.000386819,-8.942e-08,-1.48806e-08,1.12384,0.000386596,-1.34062e-07,1.48245e-08,1.12423,0.000386372,-8.95885e-08,-4.44172e-08,1.12461,0.00038606,-2.2284e-07,4.36351e-08,1.125,0.000385745,-9.19348e-08,-1.09139e-08,1.12539,0.000385528,-1.24677e-07,2.05584e-11,1.12577,0.000385279,-1.24615e-07,1.08317e-08,1.12616,0.000385062,-9.21198e-08,-4.33473e-08,1.12654,0.000384748,-2.22162e-07,4.33481e-08,1.12693,0.000384434,-9.21174e-08,-1.08356e-08,1.12731,0.000384217,-1.24624e-07,-5.50907e-12,1.12769,0.000383968,-1.24641e-07,1.08577e-08,1.12808,0.000383751,-9.20679e-08,-4.34252e-08,1.12846,0.000383437,-2.22343e-07,4.36337e-08,1.12884,0.000383123,-9.14422e-08,-1.19005e-08,1.12923,0.000382904,-1.27144e-07,3.96813e-09,1.12961,0.000382662,-1.15239e-07,-3.97207e-09,1.12999,0.000382419,-1.27155e-07,1.19201e-08,1.13038,0.000382201,-9.1395e-08,-4.37085e-08,1.13076,0.000381887,-2.2252e-07,4.37046e-08,1.13114,0.000381573,-9.14068e-08,-1.19005e-08,1.13152,0.000381355,-1.27108e-07,3.89734e-09,1.1319,0.000381112,-1.15416e-07,-3.68887e-09,1.13228,0.00038087,-1.26483e-07,1.08582e-08,1.13266,0.00038065,-9.39083e-08,-3.97438e-08,1.13304,0.000380343,-2.1314e-07,2.89076e-08,1.13342,0.000380003,-1.26417e-07,4.33225e-08,1.1338,0.00037988,3.55072e-09,-8.29883e-08,1.13418,0.000379638,-2.45414e-07,5.0212e-08,1.13456,0.000379298,-9.47781e-08,1.34964e-09,1.13494,0.000379113,-9.07292e-08,-5.56105e-08,1.13532,0.000378764,-2.57561e-07,1.01883e-07,1.1357,0.000378555,4.80889e-08,-1.13504e-07,1.13608,0.000378311,-2.92423e-07,1.13713e-07,1.13646,0.000378067,4.87176e-08,-1.02931e-07,1.13683,0.000377856,-2.60076e-07,5.95923e-08,1.13721,0.000377514,-8.12988e-08,-1.62288e-08,1.13759,0.000377303,-1.29985e-07,5.32278e-09,1.13797,0.000377059,-1.14017e-07,-5.06237e-09,1.13834,0.000376816,-1.29204e-07,1.49267e-08,1.13872,0.000376602,-8.44237e-08,-5.46444e-08,1.1391,0.000376269,-2.48357e-07,8.44417e-08,1.13947,0.000376026,4.96815e-09,-4.47039e-08,1.13985,0.000375902,-1.29143e-07,-2.48355e-08,1.14023,0.000375569,-2.0365e-07,2.48368e-08,1.1406,0.000375236,-1.2914e-07,4.46977e-08,1.14098,0.000375112,4.95341e-09,-8.44184e-08,1.14135,0.000374869,-2.48302e-07,5.45572e-08,1.14173,0.000374536,-8.463e-08,-1.46013e-08,1.1421,0.000374323,-1.28434e-07,3.8478e-09,1.14247,0.000374077,-1.1689e-07,-7.89941e-10,1.14285,0.000373841,-1.1926e-07,-6.88042e-10,1.14322,0.0003736,-1.21324e-07,3.54213e-09,1.1436,0.000373368,-1.10698e-07,-1.34805e-08,1.14397,0.000373107,-1.51139e-07,5.03798e-08,1.14434,0.000372767,0.,0.};
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                B = splineInterpolate(B * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                G = splineInterpolate(G * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                R = splineInterpolate(R * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:            float L = splineInterpolate(Y * (LAB_CBRT_TAB_SIZE / 1.5f), c_LabCbrtTab, LAB_CBRT_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                B = splineInterpolate(B * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                G = splineInterpolate(G * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/color_detail.hpp:                R = splineInterpolate(R * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/core/include/opencv2/core/cuda/detail/transform_detail.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/transform_detail.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/transform_detail.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/detail/transform_detail.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/detail/transform_detail.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/detail/type_traits_detail.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/type_traits_detail.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/type_traits_detail.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/detail/type_traits_detail.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/detail/type_traits_detail.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/detail/reduce_key_val.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/reduce_key_val.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/reduce_key_val.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/detail/reduce_key_val.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/detail/reduce_key_val.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/detail/reduce.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/reduce.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/reduce.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/detail/reduce.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/detail/reduce.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/detail/vec_distance_detail.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/vec_distance_detail.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/detail/vec_distance_detail.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/detail/vec_distance_detail.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/detail/vec_distance_detail.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/simd_functions.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/simd_functions.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/simd_functions.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/simd_functions.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/simd_functions.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/simd_functions.hpp: *   Redistributions of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/simd_functions.hpp: *   Redistributions in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/simd_functions.hpp:    static __device__ __forceinline__ unsigned int vabsdiff2(unsigned int a, unsigned int b)
modules/core/include/opencv2/core/cuda/simd_functions.hpp:        asm("vabsdiff2.u32.u32.u32.sat %0, %1, %2, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/core/include/opencv2/core/cuda/simd_functions.hpp:        asm("vabsdiff.u32.u32.u32.sat %0.h0, %1.h0, %2.h0, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/core/include/opencv2/core/cuda/simd_functions.hpp:        asm("vabsdiff.u32.u32.u32.sat %0.h1, %1.h1, %2.h1, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/core/include/opencv2/core/cuda/simd_functions.hpp:    static __device__ __forceinline__ unsigned int vabsdiff4(unsigned int a, unsigned int b)
modules/core/include/opencv2/core/cuda/simd_functions.hpp:        asm("vabsdiff4.u32.u32.u32.sat %0, %1, %2, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/core/include/opencv2/core/cuda/simd_functions.hpp:        asm("vabsdiff.u32.u32.u32.sat %0.b0, %1.b0, %2.b0, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/core/include/opencv2/core/cuda/simd_functions.hpp:        asm("vabsdiff.u32.u32.u32.sat %0.b1, %1.b1, %2.b1, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/core/include/opencv2/core/cuda/simd_functions.hpp:        asm("vabsdiff.u32.u32.u32.sat %0.b2, %1.b2, %2.b2, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/core/include/opencv2/core/cuda/simd_functions.hpp:        asm("vabsdiff.u32.u32.u32.sat %0.b3, %1.b3, %2.b3, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/core/include/opencv2/core/cuda/datamov_utils.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/datamov_utils.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/datamov_utils.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/datamov_utils.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/datamov_utils.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/transform.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/transform.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/transform.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/transform.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/transform.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/vec_distance.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/vec_distance.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/vec_distance.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/vec_distance.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/vec_distance.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/vec_distance.hpp:            mySum += ::fabs(val1 - val2);
modules/core/include/opencv2/core/cuda/color.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/color.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/color.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/color.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/color.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(rgb_to_lab, 3, 3, true, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(rgba_to_lab, 4, 3, true, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(rgb_to_lab4, 3, 4, true, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(rgba_to_lab4, 4, 4, true, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(bgr_to_lab, 3, 3, true, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(bgra_to_lab, 4, 3, true, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(bgr_to_lab4, 3, 4, true, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(bgra_to_lab4, 4, 4, true, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(lrgb_to_lab, 3, 3, false, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(lrgba_to_lab, 4, 3, false, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(lrgb_to_lab4, 3, 4, false, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(lrgba_to_lab4, 4, 4, false, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(lbgr_to_lab, 3, 3, false, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(lbgra_to_lab, 4, 3, false, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(lbgr_to_lab4, 3, 4, false, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS(lbgra_to_lab4, 4, 4, false, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    #undef OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab_to_rgb, 3, 3, true, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab4_to_rgb, 4, 3, true, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab_to_rgba, 3, 4, true, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab4_to_rgba, 4, 4, true, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab_to_bgr, 3, 3, true, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab4_to_bgr, 4, 3, true, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab_to_bgra, 3, 4, true, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab4_to_bgra, 4, 4, true, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab_to_lrgb, 3, 3, false, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab4_to_lrgb, 4, 3, false, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab_to_lrgba, 3, 4, false, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab4_to_lrgba, 4, 4, false, 2)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab_to_lbgr, 3, 3, false, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab4_to_lbgr, 4, 3, false, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab_to_lbgra, 3, 4, false, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS(lab4_to_lbgra, 4, 4, false, 0)
modules/core/include/opencv2/core/cuda/color.hpp:    #undef OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS
modules/core/include/opencv2/core/cuda/limits.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/limits.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/limits.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/limits.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/limits.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/block.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/block.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/block.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/block.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/block.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/utility.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/utility.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/utility.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/utility.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/utility.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda/reduce.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda/reduce.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda/reduce.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda/reduce.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda/reduce.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/operations.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/operations.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/operations.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/operations.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/operations.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/operations.hpp:@param labels Output vector of labels. It contains as many elements as vec. Each label labels[i] is
modules/core/include/opencv2/core/operations.hpp:partition( const std::vector<_Tp>& _vec, std::vector<int>& labels,
modules/core/include/opencv2/core/operations.hpp:    labels.resize(N);
modules/core/include/opencv2/core/operations.hpp:        // re-use the rank as the class label
modules/core/include/opencv2/core/operations.hpp:        labels[i] = ~nodes[root][RANK];
modules/core/include/opencv2/core/traits.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/traits.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/traits.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/traits.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/traits.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/traits.hpp:floating-point tuple \~ CV_32FC3, and so on. A universal OpenCV structure that is able to store a
modules/core/include/opencv2/core/traits.hpp:stored in a std::vector, Mat, Mat_, SparseMat, SparseMat_, or any other container that is able to
modules/core/include/opencv2/core/traits.hpp:not native to OpenCV. For example, the matrix B initialization above is compiled because OpenCV
modules/core/include/opencv2/core/version.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/version.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/version.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/version.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/version.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/utility.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/utility.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/utility.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/utility.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/utility.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/utility.hpp:If threads == 0, OpenCV will disable threading optimizations and run all it's functions
modules/core/include/opencv2/core/utility.hpp:-   `Concurrency` – If threads == 1, OpenCV will disable threading optimizations and run it's
modules/core/include/opencv2/core/utility.hpp:  available for the process.
modules/core/include/opencv2/core/utility.hpp:compiler flags, enabled modules and third party libraries, etc. Output format depends on target
modules/core/include/opencv2/core/utility.hpp:converted to time units. Therefore, getTickCount is generally a preferable solution for measuring
modules/core/include/opencv2/core/utility.hpp:/** @brief Returns the number of logical CPUs available for the process.
modules/core/include/opencv2/core/utility.hpp:/** @brief Enables or disables the optimized code.
modules/core/include/opencv2/core/utility.hpp:By default, the optimized code is enabled unless you disable it in CMake. The current status can be
modules/core/include/opencv2/core/utility.hpp:The function returns true if the optimized code is enabled. Otherwise, it returns false.
modules/core/include/opencv2/core/utility.hpp:            // "error: array subscript is above array bounds [-Werror=array-bounds]"
modules/core/include/opencv2/core/utility.hpp:    // Disable TLS copy operations
modules/core/include/opencv2/core/utility.hpp:    parser.about("Application name v1.0.0");
modules/core/include/opencv2/core/utility.hpp:    @param keys string describing acceptable command line parameters (see class description for syntax)
modules/core/include/opencv2/core/utility.hpp:    This method returns the path to the executable from the command line (`argv[0]`).
modules/core/include/opencv2/core/utility.hpp:    $ ./bin/my-executable
modules/core/include/opencv2/core/utility.hpp:    ./my-app abc qwe
modules/core/include/opencv2/core/utility.hpp:    String val_1 = parser.get<String>(0); // returns "abc", arg1
modules/core/include/opencv2/core/utility.hpp:    /** @brief Set the about message
modules/core/include/opencv2/core/utility.hpp:    The about message will be shown when @ref printMessage is called, right before arguments table.
modules/core/include/opencv2/core/utility.hpp:    void about(const String& message);
modules/core/include/opencv2/core/utility.hpp:    This method will print standard help message containing the about message and arguments description.
modules/core/include/opencv2/core/utility.hpp:    @sa about
modules/core/include/opencv2/core/utility.hpp:AutoBuffer<_Tp, fixed_size>::AutoBuffer(const AutoBuffer<_Tp, fixed_size>& abuf )
modules/core/include/opencv2/core/utility.hpp:    allocate(abuf.size());
modules/core/include/opencv2/core/utility.hpp:        ptr[i] = abuf.ptr[i];
modules/core/include/opencv2/core/utility.hpp:AutoBuffer<_Tp, fixed_size>::operator = (const AutoBuffer<_Tp, fixed_size>& abuf)
modules/core/include/opencv2/core/utility.hpp:    if( this != &abuf )
modules/core/include/opencv2/core/utility.hpp:        allocate(abuf.size());
modules/core/include/opencv2/core/utility.hpp:            ptr[i] = abuf.ptr[i];
modules/core/include/opencv2/core/optim.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/optim.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/optim.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/optim.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/include/opencv2/core/optim.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/optim.hpp:    *It should be called at least once before the call to* minimize(), as default value is not usable.
modules/core/include/opencv2/core/optim.hpp:**downhill simplex method**. The basic idea about the method can be obtained from
modules/core/include/opencv2/core/optim.hpp:which at each step uses an information about the values of a function evaluated only at `n+1`
modules/core/include/opencv2/core/optim.hpp:@note DownhillSolver is a derivative of the abstract interface
modules/core/include/opencv2/core/optim.hpp:    and call the MinProblemSolver::setFunction() and DownhillSolver::setInitStep()) are absolutely
modules/core/include/opencv2/core/optim.hpp:a function at any point, thus it is preferable to have analytic expression for gradient and
modules/core/include/opencv2/core/optim.hpp:    create() or miss it out and call the MinProblemSolver::setFunction()) are absolutely equivalent
modules/core/include/opencv2/core/optim.hpp:any problem written as above in polynomial time, while simplex method degenerates to exponential
modules/core/include/opencv2/core/optim.hpp:@param Func This row-vector corresponds to \f$c\f$ in the LP problem formulation (see above). It should
modules/core/include/opencv2/core/optim.hpp:@param Constr `m`-by-`n+1` matrix, whose rightmost column corresponds to \f$b\f$ in formulation above
modules/core/include/opencv2/core/optim.hpp:formulation above. It will contain 64-bit floating point numbers.
modules/core/include/opencv2/core/cuda_stream_accessor.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/cuda_stream_accessor.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/cuda_stream_accessor.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/cuda_stream_accessor.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core/cuda_stream_accessor.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/cuda_stream_accessor.hpp:        /** @brief Class that enables getting cudaStream_t from cuda::Stream
modules/core/include/opencv2/core/cuda_stream_accessor.hpp:        /** @brief Class that enables getting cudaEvent_t from cuda::Event
modules/core/include/opencv2/core/directx.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core/directx.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core/directx.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core/directx.hpp:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/include/opencv2/core/directx.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core/directx.hpp:// This section describes OpenCL and DirectX interoperability.
modules/core/include/opencv2/core/directx.hpp:// To enable DirectX support, configure OpenCV using CMake with WITH_DIRECTX=ON . Note, DirectX is
modules/core/include/opencv2/core.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/include/opencv2/core.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/include/opencv2/core.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/include/opencv2/core.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/include/opencv2/core.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/include/opencv2/core.hpp:    @defgroup core_opengl OpenGL interoperability
modules/core/include/opencv2/core.hpp:    @defgroup core_directx DirectX interoperability
modules/core/include/opencv2/core.hpp:    @defgroup core_va_intel Intel VA-API/OpenCL (CL-VA) interoperability
modules/core/include/opencv2/core.hpp:information about the error happened in the program. The exception is
modules/core/include/opencv2/core.hpp:    String func; ///< function name. Available only when the compiler supports getting it
modules/core/include/opencv2/core.hpp:By default the function prints information about the error to stderr,
modules/core/include/opencv2/core.hpp:        user-supplied labels instead of computing them from the initial centers. For the second and
modules/core/include/opencv2/core.hpp:left, to the right, above and below the copied source image will be filled with extrapolated
modules/core/include/opencv2/core.hpp:pixels outside of the ROI to form a border. To disable this feature and always do extrapolation, as
modules/core/include/opencv2/core.hpp:The first function in the list above can be replaced with matrix expressions:
modules/core/include/opencv2/core.hpp:and third cases above, as well as in the first case, when src1.depth() == src2.depth(), dtype can
modules/core/include/opencv2/core.hpp:The first function in the list above can be replaced with matrix expressions:
modules/core/include/opencv2/core.hpp:the output array is determined by dtype parameter. In the second and third cases above, as well as
modules/core/include/opencv2/core.hpp:/** @brief Scales, calculates absolute values, and converts the result to 8-bit.
modules/core/include/opencv2/core.hpp:performs three operations sequentially: scaling, taking an absolute
modules/core/include/opencv2/core.hpp:expressions) and then by calculating an absolute value of the result.
modules/core/include/opencv2/core.hpp:    B = abs(B);
modules/core/include/opencv2/core.hpp:    // Mat_<float> B = abs(A*5+3) will also do the job,
modules/core/include/opencv2/core.hpp:@sa  Mat::convertTo, cv::abs(const Mat&)
modules/core/include/opencv2/core.hpp:/** @brief Performs a look-up table transform of an array.
modules/core/include/opencv2/core.hpp:The function LUT fills the output array with values from the look-up table. Indices of the entries
modules/core/include/opencv2/core.hpp:@param lut look-up table of 256 elements; in case of multi-channel input array, the table should
modules/core/include/opencv2/core.hpp:either have a single channel (in this case the same table is used for all channels) or the same
modules/core/include/opencv2/core.hpp:/** @brief Calculates an absolute array norm, an absolute difference norm, or a
modules/core/include/opencv2/core.hpp:The functions norm calculate an absolute norm of src1 (when there is no
modules/core/include/opencv2/core.hpp:or an absolute or relative difference norm if src2 is there:
modules/core/include/opencv2/core.hpp:    // Norm to probability (total count)
modules/core/include/opencv2/core.hpp:    shift and absolute difference calculation to check for a
modules/core/include/opencv2/core.hpp:    the subsequent shift and absolute difference calculation to check
modules/core/include/opencv2/core.hpp:independently. In the second and third cases above, the scalar is first
modules/core/include/opencv2/core.hpp:independently. In the second and third cases above, the scalar is first
modules/core/include/opencv2/core.hpp:independently. In the 2nd and 3rd cases above, the scalar is first
modules/core/include/opencv2/core.hpp:/** @brief Calculates the per-element absolute difference between two arrays or between an array and a scalar.
modules/core/include/opencv2/core.hpp:The function absdiff calculates:
modules/core/include/opencv2/core.hpp:@sa cv::abs(const Mat&)
modules/core/include/opencv2/core.hpp:CV_EXPORTS_W void absdiff(InputArray src1, InputArray src2, OutputArray dst);
modules/core/include/opencv2/core.hpp:(I) at lowerb and upperb in the above formulas should be omitted.
modules/core/include/opencv2/core.hpp:So, for a non-integer power exponent, the absolute values of input array
modules/core/include/opencv2/core.hpp:The maximum relative error is about 7e-6 for single-precision input and
modules/core/include/opencv2/core.hpp:The function log calculates the natural logarithm of the absolute value
modules/core/include/opencv2/core.hpp:where C is a large negative number (about -700 in the current
modules/core/include/opencv2/core.hpp:implementation). The maximum relative error is about 7e-6 for
modules/core/include/opencv2/core.hpp:The relative accuracy of the estimated coordinates is about 1e-6.
modules/core/include/opencv2/core.hpp:The angles are calculated with accuracy about 0.3 degrees. For the point
modules/core/include/opencv2/core.hpp:The angle estimation accuracy is about 0.3 degrees. When x(I)=y(I)=0 ,
modules/core/include/opencv2/core.hpp:above call can be replaced with:
modules/core/include/opencv2/core.hpp:compute the most probable perspective transformation out of several
modules/core/include/opencv2/core.hpp:    // B will probably contain
modules/core/include/opencv2/core.hpp:the invert function (preferably using the cv::DECOMP_SVD method, as the most accurate).
modules/core/include/opencv2/core.hpp:In case of 1D transform of a real vector, the output looks like the first row of the matrix above.
modules/core/include/opencv2/core.hpp:        input. In case of 2D transform, it uses the packed format as shown above. In case of a
modules/core/include/opencv2/core.hpp:        single 1D transform, it looks like the first row of the matrix above. In case of
modules/core/include/opencv2/core.hpp:        looks like the first row of the matrix above.
modules/core/include/opencv2/core.hpp:        C.create(abs(A.rows - B.rows)+1, abs(A.cols - B.cols)+1, A.type());
modules/core/include/opencv2/core.hpp:All of the above improvements have been implemented in matchTemplate and filter2D . Therefore, by
modules/core/include/opencv2/core.hpp:using them, you can get the performance even better than with the above theoretically optimal
modules/core/include/opencv2/core.hpp:-   If none of the above is true, the function performs a 2D transform.
modules/core/include/opencv2/core.hpp:     Optimization Criterion on given data in src and corresponding labels
modules/core/include/opencv2/core.hpp:     in labels. If 0 (or less) number of components are given, they are
modules/core/include/opencv2/core.hpp:    LDA(InputArrayOfArrays src, InputArray labels, int num_components = 0);
modules/core/include/opencv2/core.hpp:    /** Compute the discriminants for data in src (row aligned) and labels.
modules/core/include/opencv2/core.hpp:    void compute(InputArrayOfArrays src, InputArray labels);
modules/core/include/opencv2/core.hpp:    void lda(InputArrayOfArrays src, InputArray labels);
modules/core/include/opencv2/core.hpp:If you want to compute a condition number of a matrix or an absolute value of
modules/core/include/opencv2/core.hpp:    (possibly with multiple rhs immediately available), simply call solve
modules/core/include/opencv2/core.hpp:    add pass DECOMP_SVD there. It does absolutely the same thing.
modules/core/include/opencv2/core.hpp:    , the constructor uses the above default value instead to avoid the
modules/core/include/opencv2/core.hpp:    types, the returned number is from the available value range for the
modules/core/include/opencv2/core.hpp:    The compiler does not take into account the type of the variable to
modules/core/include/opencv2/core.hpp:    use explicit type cast operators, as in the a1 initialization above.
modules/core/include/opencv2/core.hpp:    if true, the method will first convert a and b to the acceptable value
modules/core/include/opencv2/core.hpp:and groups the input samples around the clusters. As an output, \f$\texttt{labels}_i\f$ contains a
modules/core/include/opencv2/core.hpp:@param bestLabels Input/output integer array that stores the cluster indices for every sample.
modules/core/include/opencv2/core.hpp:initial labellings. The algorithm returns the labels that yield the best compactness (see the last
modules/core/include/opencv2/core.hpp:\f[\sum _i  \| \texttt{samples} _i -  \texttt{centers} _{ \texttt{labels} _i} \| ^2\f]
modules/core/include/opencv2/core.hpp:after every attempt. The best (minimum) value is chosen and the corresponding labels and the
modules/core/include/opencv2/core.hpp:function, set the number of attempts to 1, initialize labels each time using a custom algorithm,
modules/core/include/opencv2/core.hpp:CV_EXPORTS_W double kmeans( InputArray data, int K, InputOutputArray bestLabels,
modules/core/include/opencv2/core.hpp:     @param strModel The string variable containing the model you want to load.
modules/core/perf/perf_main.cpp:#  pragma warning(disable:4447) // Disable warning 'main' signature found without threading model
modules/core/perf/perf_math.cpp:    Mat labels, centers;
modules/core/perf/perf_math.cpp:        kmeans(data, K, labels, TermCriteria(TermCriteria::MAX_ITER+TermCriteria::EPS, 30, 0),
modules/core/perf/perf_math.cpp:    for( i = 0; i < labels.rows; i++ )
modules/core/perf/perf_math.cpp:        int clusterIdx = labels.at<int>(i);
modules/core/perf/perf_abs.cpp:PERF_TEST_P(Size_MatType, abs, TYPICAL_MATS_ABS)
modules/core/perf/perf_abs.cpp:    TEST_CYCLE() c = cv::abs(a);
modules/core/perf/opencl/perf_channels.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/perf/opencl/perf_channels.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/perf/opencl/perf_channels.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/perf/opencl/perf_channels.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/perf/opencl/perf_channels.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/perf/opencl/perf_gemm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/perf/opencl/perf_gemm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/perf/opencl/perf_gemm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/perf/opencl/perf_gemm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/perf/opencl/perf_gemm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/perf/opencl/perf_bufferpool.cpp:    BufferPoolState(BufferPoolController* c, bool enable)
modules/core/perf/opencl/perf_bufferpool.cpp:        if (!enable)
modules/core/perf/opencl/perf_dxt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/perf/opencl/perf_dxt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/perf/opencl/perf_dxt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/perf/opencl/perf_dxt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/perf/opencl/perf_dxt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/perf/opencl/perf_arithm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/perf/opencl/perf_arithm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/perf/opencl/perf_arithm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/perf/opencl/perf_arithm.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/perf/opencl/perf_arithm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/perf/opencl/perf_arithm.cpp:    OCL_TEST_CYCLE() cv::absdiff(src1, src2, dst);
modules/core/perf/perf_arithm.cpp:PERF_TEST_P(Size_MatType, absdiff, TYPICAL_MATS_CORE_ARITHM)
modules/core/perf/perf_arithm.cpp:        //see ticket 1529: absdiff can be without saturation on 32S
modules/core/perf/perf_arithm.cpp:    TEST_CYCLE() absdiff(a, b, c);
modules/core/perf/perf_arithm.cpp:PERF_TEST_P(Size_MatType, absdiffScalar, TYPICAL_MATS_CORE_ARITHM)
modules/core/perf/perf_arithm.cpp:        //see ticket 1529: absdiff can be without saturation on 32S
modules/core/perf/perf_arithm.cpp:    TEST_CYCLE() absdiff(a, b, c);
modules/core/perf/cuda/perf_gpumat.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/perf/cuda/perf_gpumat.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/perf/cuda/perf_gpumat.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/perf/cuda/perf_gpumat.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/perf/cuda/perf_gpumat.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/perf/perf_umat.cpp:        isOpenCL_enabled = cv::ocl::useOpenCL();
modules/core/perf/perf_umat.cpp:        cv::ocl::setUseOpenCL(isOpenCL_enabled);
modules/core/perf/perf_umat.cpp:    bool isOpenCL_enabled;
modules/core/src/opengl.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opengl.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opengl.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opengl.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/opengl.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opengl.cpp:                msg = "An unacceptable value is specified for an enumerated argument";
modules/core/src/opengl.cpp:    mutable CudaResource cudaResource_;
modules/core/src/opengl.cpp:cv::ogl::Buffer::Impl::Impl(GLuint abufId, bool autoRelease) : bufId_(abufId), autoRelease_(autoRelease)
modules/core/src/opengl.cpp:    CV_Assert( gl::IsBuffer(abufId) == gl::TRUE_ );
modules/core/src/opengl.cpp:cv::ogl::Buffer::Buffer(int arows, int acols, int atype, unsigned int abufId, bool autoRelease) : rows_(0), cols_(0), type_(0)
modules/core/src/opengl.cpp:    (void) abufId;
modules/core/src/opengl.cpp:    impl_.reset(new Impl(abufId, autoRelease));
modules/core/src/opengl.cpp:cv::ogl::Buffer::Buffer(Size asize, int atype, unsigned int abufId, bool autoRelease) : rows_(0), cols_(0), type_(0)
modules/core/src/opengl.cpp:    (void) abufId;
modules/core/src/opengl.cpp:    impl_.reset(new Impl(abufId, autoRelease));
modules/core/src/opengl.cpp:        gl::DisableClientState(gl::TEXTURE_COORD_ARRAY);
modules/core/src/opengl.cpp:        gl::EnableClientState(gl::TEXTURE_COORD_ARRAY);
modules/core/src/opengl.cpp:        gl::DisableClientState(gl::NORMAL_ARRAY);
modules/core/src/opengl.cpp:        gl::EnableClientState(gl::NORMAL_ARRAY);
modules/core/src/opengl.cpp:        gl::DisableClientState(gl::COLOR_ARRAY);
modules/core/src/opengl.cpp:        gl::EnableClientState(gl::COLOR_ARRAY);
modules/core/src/opengl.cpp:        gl::DisableClientState(gl::VERTEX_ARRAY);
modules/core/src/opengl.cpp:        gl::EnableClientState(gl::VERTEX_ARRAY);
modules/core/src/opengl.cpp:        gl::Disable(gl::LIGHTING);
modules/core/src/opengl.cpp:        gl::Enable(gl::TEXTURE_2D);
modules/core/src/opengl.cpp:        gl::EnableClientState(gl::TEXTURE_COORD_ARRAY);
modules/core/src/opengl.cpp:        gl::DisableClientState(gl::NORMAL_ARRAY);
modules/core/src/opengl.cpp:        gl::DisableClientState(gl::COLOR_ARRAY);
modules/core/src/opengl.cpp:        gl::EnableClientState(gl::VERTEX_ARRAY);
modules/core/src/opengl.cpp:// CL-GL Interoperability
modules/core/src/opengl.cpp:        CV_Error(cv::Error::OpenCLInitError, "OpenCL: No available platforms");
modules/core/src/mathfuncs_core.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/mathfuncs_core.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/mathfuncs_core.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/mathfuncs_core.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/mathfuncs_core.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/mathfuncs_core.cpp:    Cv32suf iabsmask; iabsmask.i = 0x7fffffff;
modules/core/src/mathfuncs_core.cpp:    __m128 eps = _mm_set1_ps((float)DBL_EPSILON), absmask = _mm_set1_ps(iabsmask.f);
modules/core/src/mathfuncs_core.cpp:        __m128 ax = _mm_and_ps(x, absmask), ay = _mm_and_ps(y, absmask);
modules/core/src/mathfuncs_core.cpp:        float32x4_t ax = vabsq_f32(x), ay = vabsq_f32(y);
modules/core/src/mathfuncs_core.cpp:        float ax = std::abs(x), ay = std::abs(y);
modules/core/src/mathfuncs_core.cpp:static const double expTab[] = {
modules/core/src/mathfuncs_core.cpp:// the code below uses _mm_cast* intrinsics, which are not avialable on VS2005
modules/core/src/mathfuncs_core.cpp:        ushort CV_DECL_ALIGNED(16) tab_idx[8];
modules/core/src/mathfuncs_core.cpp:            _mm_store_si128((__m128i*)tab_idx, _mm_and_si128(xi0, _mm_set1_epi16(EXPTAB_MASK)));
modules/core/src/mathfuncs_core.cpp:            __m128d yd0 = _mm_unpacklo_pd(_mm_load_sd(expTab + tab_idx[0]), _mm_load_sd(expTab + tab_idx[1]));
modules/core/src/mathfuncs_core.cpp:            __m128d yd1 = _mm_unpacklo_pd(_mm_load_sd(expTab + tab_idx[2]), _mm_load_sd(expTab + tab_idx[3]));
modules/core/src/mathfuncs_core.cpp:            __m128d yd2 = _mm_unpacklo_pd(_mm_load_sd(expTab + tab_idx[4]), _mm_load_sd(expTab + tab_idx[5]));
modules/core/src/mathfuncs_core.cpp:            __m128d yd3 = _mm_unpacklo_pd(_mm_load_sd(expTab + tab_idx[6]), _mm_load_sd(expTab + tab_idx[7]));
modules/core/src/mathfuncs_core.cpp:            x0 = buf[0].f * expTab[val0 & EXPTAB_MASK] * EXPPOLY( x0 );
modules/core/src/mathfuncs_core.cpp:            x1 = buf[1].f * expTab[val1 & EXPTAB_MASK] * EXPPOLY( x1 );
modules/core/src/mathfuncs_core.cpp:            x2 = buf[2].f * expTab[val2 & EXPTAB_MASK] * EXPPOLY( x2 );
modules/core/src/mathfuncs_core.cpp:            x3 = buf[3].f * expTab[val3 & EXPTAB_MASK] * EXPPOLY( x3 );
modules/core/src/mathfuncs_core.cpp:        y[i] = (float)(buf[0].f * expTab[val0 & EXPTAB_MASK] * EXPPOLY(x0));
modules/core/src/mathfuncs_core.cpp:    int CV_DECL_ALIGNED(16) tab_idx[4];
modules/core/src/mathfuncs_core.cpp:        _mm_store_si128((__m128i*)tab_idx, _mm_and_si128(xi0, _mm_set1_epi32(EXPTAB_MASK)));
modules/core/src/mathfuncs_core.cpp:        __m128d yf0 = _mm_unpacklo_pd(_mm_load_sd(expTab + tab_idx[0]), _mm_load_sd(expTab + tab_idx[1]));
modules/core/src/mathfuncs_core.cpp:        __m128d yf1 = _mm_unpacklo_pd(_mm_load_sd(expTab + tab_idx[2]), _mm_load_sd(expTab + tab_idx[3]));
modules/core/src/mathfuncs_core.cpp:        y0 = buf[0].f * expTab[val0 & EXPTAB_MASK] * EXPPOLY( x0 );
modules/core/src/mathfuncs_core.cpp:        y1 = buf[1].f * expTab[val1 & EXPTAB_MASK] * EXPPOLY( x1 );
modules/core/src/mathfuncs_core.cpp:        y2 = buf[2].f * expTab[val2 & EXPTAB_MASK] * EXPPOLY( x2 );
modules/core/src/mathfuncs_core.cpp:        y3 = buf[3].f * expTab[val3 & EXPTAB_MASK] * EXPPOLY( x3 );
modules/core/src/mathfuncs_core.cpp:        y[i] = buf[0].f * expTab[val0 & EXPTAB_MASK] * EXPPOLY( x0 );
modules/core/src/mathfuncs_core.cpp:static const double CV_DECL_ALIGNED(16) icvLogTab[] = {
modules/core/src/mathfuncs_core.cpp:#define LOGTAB_TRANSLATE(x,h) (((x) - 1.)*icvLogTab[(h)+1])
modules/core/src/mathfuncs_core.cpp:        t0 = _mm_load_pd(icvLogTab + idx[0]);
modules/core/src/mathfuncs_core.cpp:        t2 = _mm_load_pd(icvLogTab + idx[1]);
modules/core/src/mathfuncs_core.cpp:        t2 = _mm_load_pd(icvLogTab + idx[2]);
modules/core/src/mathfuncs_core.cpp:        t4 = _mm_load_pd(icvLogTab + idx[3]);
modules/core/src/mathfuncs_core.cpp:        y0 += icvLogTab[h0];
modules/core/src/mathfuncs_core.cpp:        y1 += icvLogTab[h1];
modules/core/src/mathfuncs_core.cpp:        y2 += icvLogTab[h2];
modules/core/src/mathfuncs_core.cpp:        y3 += icvLogTab[h3];
modules/core/src/mathfuncs_core.cpp:        y0 += icvLogTab[h0];
modules/core/src/mathfuncs_core.cpp:        t0 = _mm_load_pd(icvLogTab + idx[0]);
modules/core/src/mathfuncs_core.cpp:        t2 = _mm_load_pd(icvLogTab + idx[1]);
modules/core/src/mathfuncs_core.cpp:        t2 = _mm_load_pd(icvLogTab + idx[2]);
modules/core/src/mathfuncs_core.cpp:        t4 = _mm_load_pd(icvLogTab + idx[3]);
modules/core/src/mathfuncs_core.cpp:        y0 += icvLogTab[h0];
modules/core/src/mathfuncs_core.cpp:        y1 += icvLogTab[h1];
modules/core/src/mathfuncs_core.cpp:        y2 += icvLogTab[h2];
modules/core/src/mathfuncs_core.cpp:        y3 += icvLogTab[h3];
modules/core/src/mathfuncs_core.cpp:        y0 += icvLogTab[h0];
modules/core/src/parallel_pthreads.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/parallel_pthreads.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/parallel_pthreads.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/parallel_pthreads.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/parallel_pthreads.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/parallel_pthreads.cpp:// many modern phones/tables have 4-core CPUs. Let's use no more
modules/core/src/cuda_info.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/cuda_info.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/cuda_info.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/cuda_info.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/cuda_info.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/cuda_info.cpp:int cv::cuda::getCudaEnabledDeviceCount()
modules/core/src/cuda_info.cpp:        int count = getCudaEnabledDeviceCount();
modules/core/src/cuda_info.cpp:bool cv::cuda::DeviceInfo::kernelExecTimeoutEnabled() const
modules/core/src/cuda_info.cpp:    return deviceProps().get(device_id_)->kernelExecTimeoutEnabled != 0;
modules/core/src/cuda_info.cpp:bool cv::cuda::DeviceInfo::ECCEnabled() const
modules/core/src/cuda_info.cpp:    return deviceProps().get(device_id_)->ECCEnabled != 0;
modules/core/src/cuda_info.cpp:    int count = getCudaEnabledDeviceCount();
modules/core/src/cuda_info.cpp:        "Exclusive (only one host thread in one process is able to use ::cudaSetDevice() with this device)",
modules/core/src/cuda_info.cpp:        "Exclusive Process (many threads in one process is able to use ::cudaSetDevice() with this device)",
modules/core/src/cuda_info.cpp:        printf("  CUDA Capability Major/Minor version number:    %d.%d\n", prop.major, prop.minor);
modules/core/src/cuda_info.cpp:        printf("  Total number of registers available per block: %d\n", prop.regsPerBlock);
modules/core/src/cuda_info.cpp:        printf("  Run time limit on kernels:                     %s\n", prop.kernelExecTimeoutEnabled ? "Yes" : "No");
modules/core/src/cuda_info.cpp:        printf("  Device has ECC support enabled:                %s\n", prop.ECCEnabled ? "Yes" : "No");
modules/core/src/cuda_info.cpp:    int count = getCudaEnabledDeviceCount();
modules/core/src/arithm_simd.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/arithm_simd.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/arithm_simd.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/arithm_simd.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/arithm_simd.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/arithm_simd.hpp:static unsigned int CV_DECL_ALIGNED(32) v32f_absmask[] = { 0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff,
modules/core/src/arithm_simd.hpp:static unsigned int CV_DECL_ALIGNED(32) v64f_absmask[] = { 0xffffffff, 0x7fffffff, 0xffffffff, 0x7fffffff,
modules/core/src/arithm_simd.hpp:        return _mm256_and_ps(_mm256_sub_ps(a, b), *(const __m256*)v32f_absmask);
modules/core/src/arithm_simd.hpp:        return _mm256_and_pd(_mm256_sub_pd(a, b), *(const __m256d*)v64f_absmask);
modules/core/src/arithm_simd.hpp:static unsigned int CV_DECL_ALIGNED(16) v32f_absmask[] = { 0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff };
modules/core/src/arithm_simd.hpp:static unsigned int CV_DECL_ALIGNED(16) v64f_absmask[] = { 0xffffffff, 0x7fffffff, 0xffffffff, 0x7fffffff };
modules/core/src/arithm_simd.hpp:        return _mm_and_ps(_mm_sub_ps(a,b), *(const __m128*)v32f_absmask);
modules/core/src/arithm_simd.hpp:        return _mm_and_pd(_mm_sub_pd(a,b), *(const __m128d*)v64f_absmask);
modules/core/src/arithm_simd.hpp:FUNCTOR_CLOSURE_2arg(VAbsDiff,  uchar, vabdq_u8  (a, b));
modules/core/src/arithm_simd.hpp:FUNCTOR_CLOSURE_2arg(VAbsDiff,  schar, vqabsq_s8 (vqsubq_s8(a, b)));
modules/core/src/arithm_simd.hpp:FUNCTOR_CLOSURE_2arg(VAbsDiff, ushort, vabdq_u16 (a, b));
modules/core/src/arithm_simd.hpp:FUNCTOR_CLOSURE_2arg(VAbsDiff,  short, vqabsq_s16(vqsubq_s16(a, b)));
modules/core/src/arithm_simd.hpp:FUNCTOR_CLOSURE_2arg(VAbsDiff,    int, vabdq_s32 (a, b));
modules/core/src/arithm_simd.hpp:FUNCTOR_CLOSURE_2arg(VAbsDiff,  float, vabdq_f32 (a, b));
modules/core/src/lda.cpp: *   * Redistributions of source code must retain the above copyright
modules/core/src/lda.cpp: *   * Redistributions in binary form must reproduce the above copyright
modules/core/src/lda.cpp:            if (std::abs(a - b) > eps) {
modules/core/src/lda.cpp:    // safe to do, because of above assertion
modules/core/src/lda.cpp:    // safe to do because of above assertion
modules/core/src/lda.cpp:        if (std::abs(yr) > std::abs(yi)) {
modules/core/src/lda.cpp:                norm = norm + std::abs(H[i][j]);
modules/core/src/lda.cpp:                s = std::abs(H[l - 1][l - 1]) + std::abs(H[l][l]);
modules/core/src/lda.cpp:                if (std::abs(H[l][l - 1]) < eps * s) {
modules/core/src/lda.cpp:                z = std::sqrt(std::abs(q));
modules/core/src/lda.cpp:                    s = std::abs(x) + std::abs(z);
modules/core/src/lda.cpp:                    s = std::abs(H[n1][n1 - 1]) + std::abs(H[n1 - 1][n1 - 2]);
modules/core/src/lda.cpp:                    s = std::abs(p) + std::abs(q) + std::abs(r);
modules/core/src/lda.cpp:                    if (std::abs(H[m][m - 1]) * (std::abs(q) + std::abs(r)) < eps * (std::abs(p)
modules/core/src/lda.cpp:                                                                                     * (std::abs(H[m - 1][m - 1]) + std::abs(z) + std::abs(
modules/core/src/lda.cpp:                        x = std::abs(p) + std::abs(q) + std::abs(r);
modules/core/src/lda.cpp:                            if (std::abs(x) > std::abs(z)) {
modules/core/src/lda.cpp:                        t = std::abs(H[i][n1]);
modules/core/src/lda.cpp:                if (std::abs(H[n1][n1 - 1]) > std::abs(H[n1 - 1][n1])) {
modules/core/src/lda.cpp:                                vr = eps * norm * (std::abs(w) + std::abs(q) + std::abs(x)
modules/core/src/lda.cpp:                                                   + std::abs(y) + std::abs(z));
modules/core/src/lda.cpp:                            if (std::abs(x) > (std::abs(z) + std::abs(q))) {
modules/core/src/lda.cpp:                        t = std::max(std::abs(H[i][n1 - 1]), std::abs(H[i][n1]));
modules/core/src/lda.cpp:                scale = scale + std::abs(H[i][m - 1]);
modules/core/src/lda.cpp:LDA::LDA(InputArrayOfArrays src, InputArray labels, int num_components) : _dataAsRow(true),  _num_components(num_components)
modules/core/src/lda.cpp:    this->compute(src, labels); //! compute eigenvectors and eigenvalues
modules/core/src/lda.cpp:    std::vector<int> labels;
modules/core/src/lda.cpp:    // safely copy the labels
modules/core/src/lda.cpp:            labels.push_back(tmp.at<int>(i));
modules/core/src/lda.cpp:    // maps the labels, so they're ascending: [0,1,...,C]
modules/core/src/lda.cpp:    std::vector<int> mapped_labels(labels.size());
modules/core/src/lda.cpp:    std::vector<int> num2label = remove_dups(labels);
modules/core/src/lda.cpp:    std::map<int, int> label2num;
modules/core/src/lda.cpp:    for (int i = 0; i < (int)num2label.size(); i++)
modules/core/src/lda.cpp:        label2num[num2label[i]] = i;
modules/core/src/lda.cpp:    for (size_t i = 0; i < labels.size(); i++)
modules/core/src/lda.cpp:        mapped_labels[i] = label2num[labels[i]];
modules/core/src/lda.cpp:    // number of unique labels
modules/core/src/lda.cpp:    int C = (int)num2label.size();
modules/core/src/lda.cpp:    // throw error if less labels, than samples
modules/core/src/lda.cpp:    if (labels.size() != static_cast<size_t>(N)) {
modules/core/src/lda.cpp:        String error_message = format("The number of samples must equal the number of labels. Given %d labels, %d samples. ", labels.size(), N);
modules/core/src/lda.cpp:                  << "Computation will probably fail."
modules/core/src/lda.cpp:        int classIdx = mapped_labels[i];
modules/core/src/lda.cpp:        int classIdx = mapped_labels[i];
modules/core/src/merge.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/merge.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/merge.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/merge.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/merge.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/convert.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/convert.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/convert.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/convert.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/convert.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/convert.cpp:    static SplitFunc splitTab[] =
modules/core/src/convert.cpp:    return splitTab[depth];
modules/core/src/convert.cpp:    static MergeFunc mergeTab[] =
modules/core/src/convert.cpp:    return mergeTab[depth];
modules/core/src/convert.cpp:    static MixChannelsFunc mixchTab[] =
modules/core/src/convert.cpp:    return mixchTab[depth];
modules/core/src/convert.cpp:    int* tab = (int*)(dsts + npairs);
modules/core/src/convert.cpp:    int *sdelta = (int*)(tab + npairs*4), *ddelta = sdelta + npairs;
modules/core/src/convert.cpp:            tab[i*4] = (int)j; tab[i*4+1] = (int)(i0*esz1);
modules/core/src/convert.cpp:            tab[i*4] = (int)(nsrcs + ndsts); tab[i*4+1] = 0;
modules/core/src/convert.cpp:        tab[i*4+2] = (int)(j + nsrcs); tab[i*4+3] = (int)(i1*esz1);
modules/core/src/convert.cpp:            srcs[k] = ptrs[tab[k*4]] + tab[k*4+1];
modules/core/src/convert.cpp:            dsts[k] = ptrs[tab[k*4+2]] + tab[k*4+3];
modules/core/src/convert.cpp:            v_dst_0 = vabsq_f32(vaddq_f32(v_dst_0, v_shift));
modules/core/src/convert.cpp:            v_dst_1 = vabsq_f32(vaddq_f32(v_dst_1, v_shift));
modules/core/src/convert.cpp:            v_dst_2 = vabsq_f32(vaddq_f32(v_dst_2, v_shift));
modules/core/src/convert.cpp:            v_dst_3 = vabsq_f32(vaddq_f32(v_dst_3, v_shift));
modules/core/src/convert.cpp:            v_dst_0 = vabsq_f32(vaddq_f32(v_dst_0, v_shift));
modules/core/src/convert.cpp:            v_dst_1 = vabsq_f32(vaddq_f32(v_dst_1, v_shift));
modules/core/src/convert.cpp:            v_dst_2 = vabsq_f32(vaddq_f32(v_dst_2, v_shift));
modules/core/src/convert.cpp:            v_dst_3 = vabsq_f32(vaddq_f32(v_dst_3, v_shift));
modules/core/src/convert.cpp:            v_dst_0 = vabsq_f32(vaddq_f32(v_dst_0, v_shift));
modules/core/src/convert.cpp:            v_dst_1 = vabsq_f32(vaddq_f32(v_dst_1, v_shift));
modules/core/src/convert.cpp:            v_dst_0 = vabsq_f32(vaddq_f32(v_dst_0, v_shift));
modules/core/src/convert.cpp:            v_dst_1 = vabsq_f32(vaddq_f32(v_dst_1, v_shift));
modules/core/src/convert.cpp:            v_dst_0 = vabsq_f32(vaddq_f32(v_dst_0, v_shift));
modules/core/src/convert.cpp:            v_dst_1 = vabsq_f32(vaddq_f32(v_dst_1, v_shift));
modules/core/src/convert.cpp:            v_dst_0 = vabsq_f32(vaddq_f32(v_dst_0, v_shift));
modules/core/src/convert.cpp:            v_dst_1 = vabsq_f32(vaddq_f32(v_dst_1, v_shift));
modules/core/src/convert.cpp:            t0 = saturate_cast<DT>(std::abs(src[x]*scale + shift));
modules/core/src/convert.cpp:            t1 = saturate_cast<DT>(std::abs(src[x+1]*scale + shift));
modules/core/src/convert.cpp:            t0 = saturate_cast<DT>(std::abs(src[x+2]*scale + shift));
modules/core/src/convert.cpp:            t1 = saturate_cast<DT>(std::abs(src[x+3]*scale + shift));
modules/core/src/convert.cpp:            dst[x] = saturate_cast<DT>(std::abs(src[x]*scale + shift));
modules/core/src/convert.cpp:    static BinaryFunc cvtScaleAbsTab[] =
modules/core/src/convert.cpp:    return cvtScaleAbsTab[depth];
modules/core/src/convert.cpp:    static BinaryFunc cvtTab[][8] =
modules/core/src/convert.cpp:    return cvtTab[CV_MAT_DEPTH(ddepth)][CV_MAT_DEPTH(sdepth)];
modules/core/src/convert.cpp:    static BinaryFunc cvtScaleTab[][8] =
modules/core/src/convert.cpp:    return cvtScaleTab[CV_MAT_DEPTH(ddepth)][CV_MAT_DEPTH(sdepth)];
modules/core/src/convert.cpp:    bool noScale = fabs(alpha-1) < DBL_EPSILON && fabs(beta) < DBL_EPSILON;
modules/core/src/convert.cpp:static LUTFunc lutTab[] =
modules/core/src/convert.cpp:                          IppiSize roiSize, const void* pTable, int nBitSize);
modules/core/src/convert.cpp:    uchar* lutTable[4];
modules/core/src/convert.cpp:        lutTable[0] = lutBuffer + 0;
modules/core/src/convert.cpp:        lutTable[1] = lutBuffer + 1 * 256 * elemSize1;
modules/core/src/convert.cpp:        lutTable[2] = lutBuffer + 2 * 256 * elemSize1;
modules/core/src/convert.cpp:        lutTable[3] = lutBuffer + 3 * 256 * elemSize1;
modules/core/src/convert.cpp:            IppStatus status = ippiCopy_8u_C3P3R(lut.ptr(), (int)lut.step[0], lutTable, (int)lut.step[0], sz256);
modules/core/src/convert.cpp:            IppStatus status = ippiCopy_8u_C4P4R(lut.ptr(), (int)lut.step[0], lutTable, (int)lut.step[0], sz256);
modules/core/src/convert.cpp:        lutTable[0] = NULL;
modules/core/src/convert.cpp:                    ippiSize(dst.size()), lutTable, 8) >= 0)
modules/core/src/convert.cpp:                    ippiSize(dst.size()), lutTable, 8) >= 0)
modules/core/src/convert.cpp:        func = lutTab[lut.depth()];
modules/core/src/convert.cpp:    LUTFunc func = lutTab[lut.depth()];
modules/core/src/convert.cpp:        bool haveScale = std::fabs(scale - 1) > DBL_EPSILON,
modules/core/src/convert.cpp:                haveZeroScale = !(std::fabs(scale) > DBL_EPSILON),
modules/core/src/convert.cpp:                haveDelta = std::fabs(delta) > DBL_EPSILON,
modules/core/src/matop.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/matop.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/matop.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/matop.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/matop.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/matop.cpp:    void abs(const MatExpr& expr, MatExpr& res) const;
modules/core/src/matop.cpp:void MatOp::abs(const MatExpr& expr, MatExpr& res) const
modules/core/src/matop.cpp:MatExpr abs(const Mat& a)
modules/core/src/matop.cpp:MatExpr abs(const MatExpr& e)
modules/core/src/matop.cpp:    e.op->abs(e, en);
modules/core/src/matop.cpp:    else if( e.s.isReal() && (dst.data != m.data || fabs(e.alpha) != 1))
modules/core/src/matop.cpp:void MatOp_AddEx::abs(const MatExpr& e, MatExpr& res) const
modules/core/src/matop.cpp:    if( (!e.b.data || e.beta == 0) && fabs(e.alpha) == 1 )
modules/core/src/matop.cpp:        MatOp::abs(e, res);
modules/core/src/matop.cpp:        cv::absdiff(e.a, e.b, dst);
modules/core/src/matop.cpp:        cv::absdiff(e.a, e.s, dst);
modules/core/src/directx.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/directx.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/directx.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/directx.cpp:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/directx.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/directx.cpp:        CV_Error(cv::Error::OpenCLInitError, "OpenCL: No available platforms");
modules/core/src/directx.cpp:        CV_Error(cv::Error::OpenCLInitError, "OpenCL: No available platforms");
modules/core/src/directx.cpp:        CV_Error(cv::Error::OpenCLInitError, "OpenCL: No available platforms");
modules/core/src/directx.cpp:        CV_Error(cv::Error::OpenCLInitError, "OpenCL: No available platforms");
modules/core/src/matrix.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/matrix.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/matrix.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/matrix.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/matrix.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/matrix.cpp:               bool /*allowND*/, int coiMode, AutoBuffer<double>* abuf )
modules/core/src/matrix.cpp:        if( abuf )
modules/core/src/matrix.cpp:            abuf->allocate(((size_t)total*esz + sizeof(double)-1)/sizeof(double));
modules/core/src/matrix.cpp:            double* bufdata = *abuf;
modules/core/src/matrix.cpp:    CV_Error(cv::Error::StsNotImplemented, "getGpuMat is available only for cuda::GpuMat and cuda::HostMem");
modules/core/src/matrix.cpp:static TransposeFunc transposeTab[] =
modules/core/src/matrix.cpp:static TransposeInplaceFunc transposeInplaceTab[] =
modules/core/src/matrix.cpp:        TransposeInplaceFunc func = transposeInplaceTab[esz];
modules/core/src/matrix.cpp:        TransposeFunc func = transposeTab[esz];
modules/core/src/matrix.cpp:    static SortFunc tab[] =
modules/core/src/matrix.cpp:    SortFunc func = tab[src.depth()];
modules/core/src/matrix.cpp:    static SortFunc tab[] =
modules/core/src/matrix.cpp:    SortFunc func = tab[src.depth()];
modules/core/src/matrix.cpp:        if( fabs(val - ival) < DBL_EPSILON &&
modules/core/src/matrix.cpp:            fabs(delta - idelta) < DBL_EPSILON )
modules/core/src/matrix.cpp:cvKMeans2( const CvArr* _samples, int cluster_count, CvArr* _labels,
modules/core/src/matrix.cpp:    cv::Mat data = cv::cvarrToMat(_samples), labels = cv::cvarrToMat(_labels), centers;
modules/core/src/matrix.cpp:    CV_Assert( labels.isContinuous() && labels.type() == CV_32S &&
modules/core/src/matrix.cpp:        (labels.cols == 1 || labels.rows == 1) &&
modules/core/src/matrix.cpp:        labels.cols + labels.rows - 1 == data.rows );
modules/core/src/matrix.cpp:    double compactness = cv::kmeans(data, cluster_count, labels, termcrit, attempts,
modules/core/src/matrix.cpp:    static ConvertData tab[][8] =
modules/core/src/matrix.cpp:    ConvertData func = tab[CV_MAT_DEPTH(fromType)][CV_MAT_DEPTH(toType)];
modules/core/src/matrix.cpp:    static ConvertScaleData tab[][8] =
modules/core/src/matrix.cpp:    ConvertScaleData func = tab[CV_MAT_DEPTH(fromType)][CV_MAT_DEPTH(toType)];
modules/core/src/matrix.cpp:    hashtab.clear();
modules/core/src/matrix.cpp:    hashtab.resize(HASH_SIZE0);
modules/core/src/matrix.cpp:    size_t hidx = h & (hdr->hashtab.size() - 1), nidx = hdr->hashtab[hidx];
modules/core/src/matrix.cpp:    size_t hidx = h & (hdr->hashtab.size() - 1), nidx = hdr->hashtab[hidx];
modules/core/src/matrix.cpp:    size_t hidx = h & (hdr->hashtab.size() - 1), nidx = hdr->hashtab[hidx];
modules/core/src/matrix.cpp:    size_t hidx = h & (hdr->hashtab.size() - 1), nidx = hdr->hashtab[hidx];
modules/core/src/matrix.cpp:    size_t hidx = h & (hdr->hashtab.size() - 1), nidx = hdr->hashtab[hidx], previdx=0;
modules/core/src/matrix.cpp:    size_t hidx = h & (hdr->hashtab.size() - 1), nidx = hdr->hashtab[hidx], previdx=0;
modules/core/src/matrix.cpp:    size_t hidx = h & (hdr->hashtab.size() - 1), nidx = hdr->hashtab[hidx], previdx=0;
modules/core/src/matrix.cpp:void SparseMat::resizeHashTab(size_t newsize)
modules/core/src/matrix.cpp:    size_t i, hsize = hdr->hashtab.size();
modules/core/src/matrix.cpp:        size_t nidx = hdr->hashtab[i];
modules/core/src/matrix.cpp:    hdr->hashtab = _newh;
modules/core/src/matrix.cpp:    size_t hsize = hdr->hashtab.size();
modules/core/src/matrix.cpp:        resizeHashTab(std::max(hsize*2, (size_t)8));
modules/core/src/matrix.cpp:        hsize = hdr->hashtab.size();
modules/core/src/matrix.cpp:    elem->next = hdr->hashtab[hidx];
modules/core/src/matrix.cpp:    hdr->hashtab[hidx] = nidx;
modules/core/src/matrix.cpp:        hdr->hashtab[hidx] = n->next;
modules/core/src/matrix.cpp:    const std::vector<size_t>& htab = hdr.hashtab;
modules/core/src/matrix.cpp:    size_t i, hsize = htab.size();
modules/core/src/matrix.cpp:        size_t nidx = htab[i];
modules/core/src/matrix.cpp:    size_t i = hashidx + 1, sz = hdr.hashtab.size();
modules/core/src/matrix.cpp:        size_t nidx = hdr.hashtab[i];
modules/core/src/matrix.cpp:                result = std::max(result, std::abs((double)it.value<float>()));
modules/core/src/matrix.cpp:                result += std::abs(it.value<float>());
modules/core/src/matrix.cpp:                result = std::max(result, std::abs(it.value<double>()));
modules/core/src/matrix.cpp:                result += std::abs(it.value<double>());
modules/core/src/matrix.cpp:    CV_Assert( abs(vecs[0].dot(vecs[1])) / (norm(vecs[0]) * norm(vecs[1])) <= FLT_EPSILON );
modules/core/src/matrix.cpp:    if( abs(vecs[1][1]) < abs(vecs[1][0]) ) wd_i = 1;
modules/core/src/array.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/array.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/array.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/array.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/array.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/array.cpp:    size = arr->hashsize*sizeof(arr->hashtable[0]);
modules/core/src/array.cpp:    arr->hashtable = (void**)cvAlloc( size );
modules/core/src/array.cpp:    memset( arr->hashtable, 0, size );
modules/core/src/array.cpp:        cvFree( &arr->hashtable );
modules/core/src/array.cpp:        if( mat->hashtable[idx] )
modules/core/src/array.cpp:            node = iterator->node = (CvSparseNode*)mat->hashtable[idx];
modules/core/src/array.cpp:    int i, tabidx;
modules/core/src/array.cpp:    tabidx = hashval & (mat->hashsize - 1);
modules/core/src/array.cpp:        for( node = (CvSparseNode*)mat->hashtable[tabidx];
modules/core/src/array.cpp:            void** newtable;
modules/core/src/array.cpp:            int newrawsize = newsize*sizeof(newtable[0]);
modules/core/src/array.cpp:            // resize hash table
modules/core/src/array.cpp:            newtable = (void**)cvAlloc( newrawsize );
modules/core/src/array.cpp:            memset( newtable, 0, newrawsize );
modules/core/src/array.cpp:                node->next = (CvSparseNode*)newtable[newidx];
modules/core/src/array.cpp:                newtable[newidx] = node;
modules/core/src/array.cpp:            cvFree( &mat->hashtable );
modules/core/src/array.cpp:            mat->hashtable = newtable;
modules/core/src/array.cpp:            tabidx = hashval & (newsize - 1);
modules/core/src/array.cpp:        node->next = (CvSparseNode*)mat->hashtable[tabidx];
modules/core/src/array.cpp:        mat->hashtable[tabidx] = node;
modules/core/src/array.cpp:    int i, tabidx;
modules/core/src/array.cpp:    tabidx = hashval & (mat->hashsize - 1);
modules/core/src/array.cpp:    for( node = (CvSparseNode*)mat->hashtable[tabidx];
modules/core/src/array.cpp:            mat->hashtable[tabidx] = node->next;
modules/core/src/array.cpp:// Retrieves essential information about image ROI or CvMat data
modules/core/src/array.cpp:    static const char* tab[][2] =
modules/core/src/array.cpp:        *colorModel = tab[nchannels][0];
modules/core/src/array.cpp:        *channelSeq = tab[nchannels][1];
modules/core/src/cuda_host_mem.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/cuda_host_mem.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/cuda_host_mem.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/cuda_host_mem.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/cuda_host_mem.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/cuda_host_mem.cpp:    cudaSafeCall( cudaHostRegister(m.data, m.step * m.rows, cudaHostRegisterPortable) );
modules/core/src/tables.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/tables.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/tables.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/tables.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/tables.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/tables.cpp://  CvMat helper tables
modules/core/src/tables.cpp:const float g_8x32fTab[] =
modules/core/src/tables.cpp:const ushort g_8x16uSqrTab[] =
modules/core/src/hal_replacement.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/hal_replacement.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/hal_replacement.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/hal_replacement.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/hal_replacement.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/hal_replacement.hpp:inline int hal_ni_absdiff8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int) { return CV_HAL_ERROR_NOT_IMPLEMENTED; }
modules/core/src/hal_replacement.hpp:inline int hal_ni_absdiff8s(const schar*, size_t, const schar*, size_t, schar*, size_t, int, int) { return CV_HAL_ERROR_NOT_IMPLEMENTED; }
modules/core/src/hal_replacement.hpp:inline int hal_ni_absdiff16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int) { return CV_HAL_ERROR_NOT_IMPLEMENTED; }
modules/core/src/hal_replacement.hpp:inline int hal_ni_absdiff16s(const short*, size_t, const short*, size_t, short*, size_t, int, int) { return CV_HAL_ERROR_NOT_IMPLEMENTED; }
modules/core/src/hal_replacement.hpp:inline int hal_ni_absdiff32s(const int*, size_t, const int*, size_t, int*, size_t, int, int) { return CV_HAL_ERROR_NOT_IMPLEMENTED; }
modules/core/src/hal_replacement.hpp:inline int hal_ni_absdiff32f(const float*, size_t, const float*, size_t, float*, size_t, int, int) { return CV_HAL_ERROR_NOT_IMPLEMENTED; }
modules/core/src/hal_replacement.hpp:inline int hal_ni_absdiff64f(const double*, size_t, const double*, size_t, double*, size_t, int, int) { return CV_HAL_ERROR_NOT_IMPLEMENTED; }
modules/core/src/hal_replacement.hpp:#define cv_hal_absdiff8u hal_ni_absdiff8u
modules/core/src/hal_replacement.hpp:#define cv_hal_absdiff8s hal_ni_absdiff8s
modules/core/src/hal_replacement.hpp:#define cv_hal_absdiff16u hal_ni_absdiff16u
modules/core/src/hal_replacement.hpp:#define cv_hal_absdiff16s hal_ni_absdiff16s
modules/core/src/hal_replacement.hpp:#define cv_hal_absdiff32s hal_ni_absdiff32s
modules/core/src/hal_replacement.hpp:#define cv_hal_absdiff32f hal_ni_absdiff32f
modules/core/src/hal_replacement.hpp:#define cv_hal_absdiff64f hal_ni_absdiff64f
modules/core/src/lapack.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/lapack.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/lapack.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/lapack.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/lapack.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/lapack.cpp:    a = std::abs(a);
modules/core/src/lapack.cpp:    b = std::abs(b);
modules/core/src/lapack.cpp:            for( m = k+1, mv = std::abs(A[astep*k + m]), i = k+2; i < n; i++ )
modules/core/src/lapack.cpp:                _Tp val = std::abs(A[astep*k+i]);
modules/core/src/lapack.cpp:            for( m = 0, mv = std::abs(A[k]), i = 1; i < k; i++ )
modules/core/src/lapack.cpp:                _Tp val = std::abs(A[astep*i+k]);
modules/core/src/lapack.cpp:        for( k = 0, mv = std::abs(A[indR[0]]), i = 1; i < n-1; i++ )
modules/core/src/lapack.cpp:            _Tp val = std::abs(A[astep*i + indR[i]]);
modules/core/src/lapack.cpp:            _Tp val = std::abs(A[astep*indC[i] + i]);
modules/core/src/lapack.cpp:        if( std::abs(p) <= eps )
modules/core/src/lapack.cpp:        _Tp t = std::abs(y) + hypot(p, y);
modules/core/src/lapack.cpp:                for( m = idx+1, mv = std::abs(A[astep*idx + m]), i = idx+2; i < n; i++ )
modules/core/src/lapack.cpp:                    _Tp val = std::abs(A[astep*idx+i]);
modules/core/src/lapack.cpp:                for( m = 0, mv = std::abs(A[idx]), i = 1; i < idx; i++ )
modules/core/src/lapack.cpp:                    _Tp val = std::abs(A[astep*i+idx]);
modules/core/src/lapack.cpp:    float abuf[4], bbuf[4];
modules/core/src/lapack.cpp:    _mm_storeu_ps(abuf, sa);
modules/core/src/lapack.cpp:    *anorm = abuf[0] + abuf[1] + abuf[2] + abuf[3];
modules/core/src/lapack.cpp:    double abuf[2], bbuf[2];
modules/core/src/lapack.cpp:    _mm_storeu_pd(abuf, sa);
modules/core/src/lapack.cpp:    *anorm = abuf[0] + abuf[1];
modules/core/src/lapack.cpp:                if( std::abs(p) <= eps*std::sqrt((double)a*b) )
modules/core/src/lapack.cpp:                        asum += std::abs(t);
modules/core/src/lapack.cpp:        if( (double)std::abs(wi) <= threshold )
modules/core/src/glob.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/glob.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/glob.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/glob.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/glob.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/lpsolver.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/lpsolver.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/lpsolver.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/lpsolver.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/src/lpsolver.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/lpsolver.cpp: it also initializes N and B and does not make any assumptions about their init values
modules/core/src/directx.inc.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/directx.inc.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/directx.inc.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/directx.inc.hpp:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/directx.inc.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/algorithm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/algorithm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/algorithm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/algorithm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/algorithm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/command_line_parser.cpp:    String about_message;
modules/core/src/command_line_parser.cpp:void CommandLineParser::about(const String& message)
modules/core/src/command_line_parser.cpp:    impl->about_message = message;
modules/core/src/command_line_parser.cpp:    if (impl->about_message != "")
modules/core/src/command_line_parser.cpp:        printf("%s\n", impl->about_message.c_str());
modules/core/src/alloc.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/alloc.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/alloc.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/alloc.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/alloc.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/alloc.cpp:static const int binSizeTab[MAX_BIN+1] =
modules/core/src/alloc.cpp:struct MallocTables
modules/core/src/alloc.cpp:    void initBinTab()
modules/core/src/alloc.cpp:            n = binSizeTab[i]>>3;
modules/core/src/alloc.cpp:    MallocTables()
modules/core/src/alloc.cpp:        initBinTab();
modules/core/src/alloc.cpp:MallocTables mallocTables;
modules/core/src/alloc.cpp:        binIdx = mallocTables.bin(objSize);
modules/core/src/alloc.cpp:        // mark all the thread blocks as abandoned or even release them
modules/core/src/alloc.cpp:    int idx = mallocTables.bin(size);
modules/core/src/alloc.cpp:    size = binSizeTab[idx];
modules/core/src/alloc.cpp:            // take ownership of the abandoned block.
modules/core/src/alloc.cpp:            // ThreadData::deleteData() marks the blocks as abandoned,
modules/core/src/datastructs.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/datastructs.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/datastructs.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/datastructs.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/datastructs.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/datastructs.cpp:static const schar icvPower2ShiftTab[] =
modules/core/src/datastructs.cpp:            if( elem_size <= ICV_SHIFT_TAB_MAX && (id = icvPower2ShiftTab[elem_size - 1]) >= 0 )
modules/core/src/datastructs.cpp:    if( elem_size <= ICV_SHIFT_TAB_MAX && (index = icvPower2ShiftTab[elem_size - 1]) >= 0 )
modules/core/src/datastructs.cpp: * either absolute or relative to the
modules/core/src/datastructs.cpp://    * 1. Redistributions of source code must retain the above copyright
modules/core/src/datastructs.cpp://    * 2. Redistributions in binary form must reproduce the above copyright
modules/core/src/datastructs.cpp:cvSeqPartition( const CvSeq* seq, CvMemStorage* storage, CvSeq** labels,
modules/core/src/datastructs.cpp:    if( !labels )
modules/core/src/datastructs.cpp:    if( labels )
modules/core/src/datastructs.cpp:        *labels = result;
modules/core/src/kmeans.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/kmeans.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/kmeans.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/kmeans.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/kmeans.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/kmeans.cpp:                            int *_labels,
modules/core/src/kmeans.cpp:          labels(_labels),
modules/core/src/kmeans.cpp:            labels[i] = k_best;
modules/core/src/kmeans.cpp:    int *labels;
modules/core/src/kmeans.cpp:                   InputOutputArray _bestLabels,
modules/core/src/kmeans.cpp:    _bestLabels.create(N, 1, CV_32S, -1, true);
modules/core/src/kmeans.cpp:    Mat _labels, best_labels = _bestLabels.getMat();
modules/core/src/kmeans.cpp:        CV_Assert( (best_labels.cols == 1 || best_labels.rows == 1) &&
modules/core/src/kmeans.cpp:                  best_labels.cols*best_labels.rows == N &&
modules/core/src/kmeans.cpp:                  best_labels.type() == CV_32S &&
modules/core/src/kmeans.cpp:                  best_labels.isContinuous());
modules/core/src/kmeans.cpp:        best_labels.copyTo(_labels);
modules/core/src/kmeans.cpp:        if( !((best_labels.cols == 1 || best_labels.rows == 1) &&
modules/core/src/kmeans.cpp:             best_labels.cols*best_labels.rows == N &&
modules/core/src/kmeans.cpp:            best_labels.type() == CV_32S &&
modules/core/src/kmeans.cpp:            best_labels.isContinuous()))
modules/core/src/kmeans.cpp:            best_labels.create(N, 1, CV_32S);
modules/core/src/kmeans.cpp:        _labels.create(best_labels.size(), best_labels.type());
modules/core/src/kmeans.cpp:    int* labels = _labels.ptr<int>();
modules/core/src/kmeans.cpp:                        CV_Assert( (unsigned)labels[i] < (unsigned)K );
modules/core/src/kmeans.cpp:                    k = labels[i];
modules/core/src/kmeans.cpp:                        if( labels[i] != max_k )
modules/core/src/kmeans.cpp:                    labels[farthest_i] = k;
modules/core/src/kmeans.cpp:            // assign labels
modules/core/src/kmeans.cpp:                         KMeansDistanceComputer(dist, labels, data, centers));
modules/core/src/kmeans.cpp:            _labels.copyTo(best_labels);
modules/core/src/matmul.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/matmul.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/matmul.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/matmul.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/matmul.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/matmul.cpp:        std::abs(m[0]) < MAX_M && std::abs(m[1]) < MAX_M && std::abs(m[2]) < MAX_M && std::abs(m[3]) < MAX_M*256 &&
modules/core/src/matmul.cpp:        std::abs(m[4]) < MAX_M && std::abs(m[5]) < MAX_M && std::abs(m[6]) < MAX_M && std::abs(m[7]) < MAX_M*256 &&
modules/core/src/matmul.cpp:        std::abs(m[8]) < MAX_M && std::abs(m[9]) < MAX_M && std::abs(m[10]) < MAX_M && std::abs(m[11]) < MAX_M*256 )
modules/core/src/matmul.cpp:    static TransformFunc transformTab[] =
modules/core/src/matmul.cpp:    return transformTab[depth];
modules/core/src/matmul.cpp:    static TransformFunc diagTransformTab[] =
modules/core/src/matmul.cpp:    return diagTransformTab[depth];
modules/core/src/matmul.cpp:                if( i != j && fabs(v) > eps )
modules/core/src/matmul.cpp:            if( fabs(w) > eps )
modules/core/src/matmul.cpp:            if( fabs(w) > eps )
modules/core/src/matmul.cpp:            if( fabs(w) > eps )
modules/core/src/matmul.cpp:            if( fabs(w) > eps )
modules/core/src/matmul.cpp:    const int gemm_level = 100; // boundary above which GEMM is faster.
modules/core/src/matmul.cpp:    static DotProdFunc dotProdTab[] =
modules/core/src/matmul.cpp:    return dotProdTab[depth];
modules/core/src/cuda_gpu_mat.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/cuda_gpu_mat.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/cuda_gpu_mat.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/cuda_gpu_mat.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/cuda_gpu_mat.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/system.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/system.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/system.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/system.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/system.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/system.cpp:#  pragma warning(disable:4447) // Disable warning 'main' signature found without threading model
modules/core/src/system.cpp:#undef abs
modules/core/src/system.cpp:            // information about extended features like AVX2
modules/core/src/system.cpp:static HWFeatures  featuresEnabled = HWFeatures::initialize(), featuresDisabled = HWFeatures();
modules/core/src/system.cpp:static HWFeatures* currentFeatures = &featuresEnabled;
modules/core/src/system.cpp:    currentFeatures = flag ? &featuresEnabled : &featuresDisabled;
modules/core/src/system.cpp:    return (int64)mach_absolute_time();
modules/core/src/system.cpp:#pragma warning(disable:4505) // unreferenced local function has been removed
modules/core/src/system.cpp:// TLS platform abstraction layer
modules/core/src/system.cpp:    TlsAbstraction tls; // TLS abstraction layer instance
modules/core/src/system.cpp:    #pragma warning(disable:4447) // Disable warning 'main' signature found without threading model
modules/core/src/system.cpp:            if(env == "disabled")
modules/core/src/system.cpp:                std::cerr << "WARNING: IPP was disabled by OPENCV_IPP environment variable" << std::endl;
modules/core/src/system.cpp:        if (pTegraEnv && (cv::String(pTegraEnv) == "disabled"))
modules/core/src/conjugate_gradient.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/conjugate_gradient.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/conjugate_gradient.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/conjugate_gradient.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/src/conjugate_gradient.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/flip.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/flip.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/flip.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/flip.cl:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/src/opencl/flip.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/reduce2.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/reduce2.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/reduce2.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/reduce2.cl:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/opencl/reduce2.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/reduce2.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/reduce2.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/cvtclr_dx.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/cvtclr_dx.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/cvtclr_dx.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/cvtclr_dx.cl:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/opencl/cvtclr_dx.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/cvtclr_dx.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/cvtclr_dx.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/meanstddev.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/meanstddev.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/gemm.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/gemm.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/convert.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/convert.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/convert.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/convert.cl:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/opencl/convert.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/convert.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/convert.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/copymakeborder.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/copymakeborder.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/copymakeborder.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/copymakeborder.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/opencl/copymakeborder.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/copymakeborder.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/copymakeborder.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/runtime/runtime_common.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/runtime/runtime_common.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/runtime/runtime_common.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/runtime/runtime_common.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/src/opencl/runtime/runtime_common.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/runtime/opencl_clamdblas.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/runtime/opencl_clamdblas.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/runtime/opencl_clamdblas.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/runtime/opencl_clamdblas.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/src/opencl/runtime/opencl_clamdblas.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/runtime/opencl_clamdblas.cpp:                cv::format("OpenCL AMD BLAS function is not available: [%s]", e->fnName),
modules/core/src/opencl/runtime/autogenerated/opencl_clamdfft_impl.hpp:// number of enabled functions: 16
modules/core/src/opencl/runtime/autogenerated/opencl_clamdblas_impl.hpp:// number of enabled functions: 6
modules/core/src/opencl/runtime/autogenerated/opencl_gl_impl.hpp:// number of enabled functions: 10
modules/core/src/opencl/runtime/autogenerated/opencl_core_impl.hpp:// number of enabled functions: 88
modules/core/src/opencl/runtime/opencl_core.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/runtime/opencl_core.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/runtime/opencl_core.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/runtime/opencl_core.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/src/opencl/runtime/opencl_core.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/runtime/opencl_core.cpp:                cv::format("OpenCL function is not available: [%s]", e->fnName),
modules/core/src/opencl/runtime/opencl_core.cpp:                cv::format("OpenCL function is not available: [%s]", e->fnName),
modules/core/src/opencl/runtime/generator/parser_cl.py:numEnabled = readFunctionFilter(fns, filterFileName)
modules/core/src/opencl/runtime/generator/parser_cl.py:ctx['CL_NUMBER_OF_ENABLED_FUNCTIONS'] = '// number of enabled functions: %d' % (numEnabled)
modules/core/src/opencl/runtime/generator/parser_clamdblas.py:numEnabled = readFunctionFilter(fns, filterFileName)
modules/core/src/opencl/runtime/generator/parser_clamdblas.py:ctx['CL_NUMBER_OF_ENABLED_FUNCTIONS'] = '// number of enabled functions: %d' % (numEnabled)
modules/core/src/opencl/runtime/generator/parser_clamdfft.py:numEnabled = readFunctionFilter(fns, filterFileName)
modules/core/src/opencl/runtime/generator/parser_clamdfft.py:ctx['CL_NUMBER_OF_ENABLED_FUNCTIONS'] = '// number of enabled functions: %d' % (numEnabled)
modules/core/src/opencl/runtime/generator/common.py:                fn['enabled'] = True
modules/core/src/opencl/runtime/generator/common.py:        print '%s%s' % ('' if fn.has_key('enabled') else '//', fn['name'])
modules/core/src/opencl/runtime/generator/common.py:        commentStr = '' if fn.has_key('enabled') else '//'
modules/core/src/opencl/runtime/generator/common.py:        commentStr = '' if fn.has_key('enabled') else '//'
modules/core/src/opencl/runtime/generator/common.py:        if fn.has_key('enabled'):
modules/core/src/opencl/runtime/generator/common.py:        commentStr = '' if fn.has_key('enabled') else '//'
modules/core/src/opencl/runtime/generator/common.py:        commentStr = '' if fn.has_key('enabled') else '//'
modules/core/src/opencl/runtime/generator/common.py:        commentStr = '' if fn.has_key('enabled') else '//'
modules/core/src/opencl/runtime/generator/common.py:        commentStr = '' if fn.has_key('enabled') else '//'
modules/core/src/opencl/runtime/opencl_clamdfft.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/runtime/opencl_clamdfft.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/runtime/opencl_clamdfft.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/runtime/opencl_clamdfft.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/src/opencl/runtime/opencl_clamdfft.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/runtime/opencl_clamdfft.cpp:                cv::format("OpenCL AMD FFT function is not available: [%s]", e->fnName),
modules/core/src/opencl/split_merge.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/split_merge.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/split_merge.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/split_merge.cl:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/opencl/split_merge.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/arithm.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/arithm.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/arithm.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/arithm.cl:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/opencl/arithm.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/arithm.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/arithm.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/arithm.cl:    storedst(convertToDT(convertFromU(abs_diff(srcelem1, srcelem2))))
modules/core/src/opencl/arithm.cl:    storedst(convertToDT(fabs(srcelem1 - srcelem2)))
modules/core/src/opencl/arithm.cl:    storedst(log(fabs(srcelem1)))
modules/core/src/opencl/arithm.cl:    storedst(convertToDT(abs(value)))
modules/core/src/opencl/arithm.cl:    storedst(convertToDT(fabs(value)))
modules/core/src/opencl/set_identity.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/set_identity.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/set_identity.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/set_identity.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/opencl/set_identity.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/normalize.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/normalize.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/mulspectrums.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/mulspectrums.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/mulspectrums.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/mulspectrums.cl:// In no event shall the uintel Corporation or contributors be liable for any direct,
modules/core/src/opencl/mulspectrums.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/inrange.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/inrange.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/inrange.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/inrange.cl:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/opencl/inrange.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/inrange.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/inrange.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/transpose.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/transpose.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/transpose.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/transpose.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/opencl/transpose.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/reduce.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/reduce.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/reduce.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/reduce.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/opencl/reduce.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/reduce.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/reduce.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/reduce.cl:#define SUM_ABS(a) convertFromU(abs(a))
modules/core/src/opencl/reduce.cl:#define SUM_ABS2(a, b) convertFromU(abs_diff(a, b))
modules/core/src/opencl/reduce.cl:#define SUM_ABS(a) fabs(a)
modules/core/src/opencl/reduce.cl:#define SUM_ABS2(a, b) fabs(a - b)
modules/core/src/opencl/mixchannels.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/mixchannels.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/mixchannels.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/mixchannels.cl:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/opencl/mixchannels.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/fft.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/fft.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/lut.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/lut.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/lut.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/lut.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/opencl/lut.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/copyset.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/opencl/copyset.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/opencl/copyset.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/opencl/copyset.cl:// In no event shall the copyright holders or contributors be liable for any direct,
modules/core/src/opencl/copyset.cl:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/opencl/minmaxloc.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/core/src/opencl/minmaxloc.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/core/src/opencl/minmaxloc.cl:#define MIN_ABS(a) convertFromU(abs(a))
modules/core/src/opencl/minmaxloc.cl:#define MIN_ABS2(a, b) convertFromU(abs_diff(a, b))
modules/core/src/opencl/minmaxloc.cl:#define MIN_ABS(a) fabs(a)
modules/core/src/opencl/minmaxloc.cl:#define MIN_ABS2(a, b) fabs(a - b)
modules/core/src/stat.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/stat.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/stat.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/stat.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/stat.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/stat.cpp:    static SumFunc sumTab[] =
modules/core/src/stat.cpp:    return sumTab[depth];
modules/core/src/stat.cpp:static CountNonZeroFunc getCountNonZeroTab(int depth)
modules/core/src/stat.cpp:    static CountNonZeroFunc countNonZeroTab[] =
modules/core/src/stat.cpp:    return countNonZeroTab[depth];
modules/core/src/stat.cpp:static SumSqrFunc getSumSqrTab(int depth)
modules/core/src/stat.cpp:    static SumSqrFunc sumSqrTab[] =
modules/core/src/stat.cpp:    return sumSqrTab[depth];
modules/core/src/stat.cpp:    CountNonZeroFunc func = getCountNonZeroTab(src.depth());
modules/core/src/stat.cpp:    SumSqrFunc func = getSumSqrTab(depth);
modules/core/src/stat.cpp:static MinMaxIdxFunc getMinmaxTab(int depth)
modules/core/src/stat.cpp:    static MinMaxIdxFunc minmaxTab[] =
modules/core/src/stat.cpp:    return minmaxTab[depth];
modules/core/src/stat.cpp:                           int ddepth = -1, bool absValues = false, InputArray _src2 = noArray(), double * maxVal2 = NULL)
modules/core/src/stat.cpp:    // disabled following modes since it occasionally fails on AMD devices (e.g. A10-6800K, sep. 2014)
modules/core/src/stat.cpp:                         absValues ? " -D OP_ABS" : "",
modules/core/src/stat.cpp:    static const getMinMaxResFunc functab[7] =
modules/core/src/stat.cpp:    getMinMaxResFunc func = functab[ddepth];
modules/core/src/stat.cpp:    MinMaxIdxFunc func = getMinmaxTab(depth);
modules/core/src/stat.cpp:                    result = std::max(result, ST(cv_abs(src[k])));
modules/core/src/stat.cpp:                    result += cv_abs(src[k]);
modules/core/src/stat.cpp:                    result = std::max(result, (ST)std::abs(src1[k] - src2[k]));
modules/core/src/stat.cpp:                    result += std::abs(src1[k] - src2[k]);
modules/core/src/stat.cpp:    static NormFunc normTab[3][8] =
modules/core/src/stat.cpp:    return normTab[normType][depth];
modules/core/src/stat.cpp:    static NormDiffFunc normDiffTab[3][8] =
modules/core/src/stat.cpp:    return normDiffTab[normType][depth];
modules/core/src/stat.cpp:static const uchar popCountTable[] =
modules/core/src/stat.cpp:static const uchar popCountTable2[] =
modules/core/src/stat.cpp:static const uchar popCountTable4[] =
modules/core/src/stat.cpp:            result += popCountTable[a[i]] + popCountTable[a[i+1]] +
modules/core/src/stat.cpp:            popCountTable[a[i+2]] + popCountTable[a[i+3]];
modules/core/src/stat.cpp:        result += popCountTable[a[i]];
modules/core/src/stat.cpp:            result += popCountTable[a[i] ^ b[i]] + popCountTable[a[i+1] ^ b[i+1]] +
modules/core/src/stat.cpp:                    popCountTable[a[i+2] ^ b[i+2]] + popCountTable[a[i+3] ^ b[i+3]];
modules/core/src/stat.cpp:        result += popCountTable[a[i] ^ b[i]];
modules/core/src/stat.cpp:    const uchar* tab = 0;
modules/core/src/stat.cpp:        tab = popCountTable2;
modules/core/src/stat.cpp:        tab = popCountTable4;
modules/core/src/stat.cpp:        result += tab[a[i]] + tab[a[i+1]] + tab[a[i+2]] + tab[a[i+3]];
modules/core/src/stat.cpp:        result += tab[a[i]];
modules/core/src/stat.cpp:    const uchar* tab = 0;
modules/core/src/stat.cpp:        tab = popCountTable2;
modules/core/src/stat.cpp:        tab = popCountTable4;
modules/core/src/stat.cpp:        result += tab[a[i] ^ b[i]] + tab[a[i+1] ^ b[i+1]] +
modules/core/src/stat.cpp:                tab[a[i+2] ^ b[i+2]] + tab[a[i+3] ^ b[i+3]];
modules/core/src/stat.cpp:        result += tab[a[i] ^ b[i]];
modules/core/src/stat.cpp:    static const int CV_DECL_ALIGNED(16) absbuf[4] = {0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff};
modules/core/src/stat.cpp:    __m128 absmask = _mm_load_ps((const float*)absbuf);
modules/core/src/stat.cpp:        d0 = _mm_add_ps(d0, _mm_and_ps(t0, absmask));
modules/core/src/stat.cpp:        d1 = _mm_add_ps(d1, _mm_and_ps(t1, absmask));
modules/core/src/stat.cpp:        v_sum = vaddq_f32(v_sum, vabdq_f32(vld1q_f32(a + j), vld1q_f32(b + j)));
modules/core/src/stat.cpp:            d += std::abs(a[j] - b[j]) + std::abs(a[j+1] - b[j+1]) +
modules/core/src/stat.cpp:            std::abs(a[j+2] - b[j+2]) + std::abs(a[j+3] - b[j+3]);
modules/core/src/stat.cpp:        d += std::abs(a[j] - b[j]);
modules/core/src/stat.cpp:        uint8x16_t v_dst = vabdq_u8(vld1q_u8(a + j), vld1q_u8(b + j));
modules/core/src/stat.cpp:            d += std::abs(a[j] - b[j]) + std::abs(a[j+1] - b[j+1]) +
modules/core/src/stat.cpp:            std::abs(a[j+2] - b[j+2]) + std::abs(a[j+3] - b[j+3]);
modules/core/src/stat.cpp:        d += std::abs(a[j] - b[j]);
modules/core/src/downhill_simplex.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/downhill_simplex.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/downhill_simplex.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/downhill_simplex.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/src/downhill_simplex.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/downhill_simplex.cpp:            double error = fabs(y_[ihi] - y_[ilo]);
modules/core/src/downhill_simplex.cpp:                range = std::max(range, fabs(maxval - minval));
modules/core/src/downhill_simplex.cpp:            // Begin a new iteration. First, reflect the worst point about the centroid of others
modules/core/src/out.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/out.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/out.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/out.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/out.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/out.cpp:    class MatlabFormatter : public FormatterBase
modules/core/src/out.cpp:                return makePtr<MatlabFormatter>();
modules/core/src/dxt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/dxt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/dxt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/dxt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/dxt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/dxt.cpp:# pragma warning(disable: 4748)
modules/core/src/dxt.cpp:static unsigned char bitrevTab[] =
modules/core/src/dxt.cpp:  0x0b,0x8b,0x4b,0xcb,0x2b,0xab,0x6b,0xeb,0x1b,0x9b,0x5b,0xdb,0x3b,0xbb,0x7b,0xfb,
modules/core/src/dxt.cpp:static const double DFTTab[][2] =
modules/core/src/dxt.cpp:   ((int)((((unsigned)bitrevTab[(i)&255] << 24)+ \
modules/core/src/dxt.cpp:           ((unsigned)bitrevTab[((i)>> 8)&255] << 16)+ \
modules/core/src/dxt.cpp:           ((unsigned)bitrevTab[((i)>>16)&255] <<  8)+ \
modules/core/src/dxt.cpp:           ((unsigned)bitrevTab[((i)>>24)])) >> (shift)))
modules/core/src/dxt.cpp:DFTInit( int n0, int nf, int* factors, int* itab, int elem_size, void* _wave, int inv_itab )
modules/core/src/dxt.cpp:    int* itab0 = itab;
modules/core/src/dxt.cpp:        itab[0] = 0;
modules/core/src/dxt.cpp:        itab[n0-1] = n0-1;
modules/core/src/dxt.cpp:                itab[i] = i;
modules/core/src/dxt.cpp:            itab[1] = 2;
modules/core/src/dxt.cpp:            itab[2] = 1;
modules/core/src/dxt.cpp:        if( inv_itab && factors[0] != factors[nf-1] )
modules/core/src/dxt.cpp:            itab = (int*)_wave;
modules/core/src/dxt.cpp:                itab[0] = 0;
modules/core/src/dxt.cpp:                itab[1] = na2;
modules/core/src/dxt.cpp:                    j = (bitrevTab[i>>2]>>shift)*a;
modules/core/src/dxt.cpp:                    itab[i] = j;
modules/core/src/dxt.cpp:                    itab[i+1] = j + na2;
modules/core/src/dxt.cpp:                    itab[i+2] = j + na4;
modules/core/src/dxt.cpp:                    itab[i+3] = j + na2 + na4;
modules/core/src/dxt.cpp:                    itab[i] = j;
modules/core/src/dxt.cpp:                    itab[i+1] = j + na2;
modules/core/src/dxt.cpp:                    itab[i+2] = j + na4;
modules/core/src/dxt.cpp:                    itab[i+3] = j + na2 + na4;
modules/core/src/dxt.cpp:                        itab[i+k] = itab[k] + j;
modules/core/src/dxt.cpp:                itab[i] = j;
modules/core/src/dxt.cpp:        if( itab != itab0 )
modules/core/src/dxt.cpp:            itab0[0] = 0;
modules/core/src/dxt.cpp:                int k0 = itab[i];
modules/core/src/dxt.cpp:                int k1 = itab[i+1];
modules/core/src/dxt.cpp:                itab0[k0] = i;
modules/core/src/dxt.cpp:                itab0[k1] = i+1;
modules/core/src/dxt.cpp:        w.re = w1.re = DFTTab[m][0];
modules/core/src/dxt.cpp:        w.im = w1.im = -DFTTab[m][1];
modules/core/src/dxt.cpp:     int nf, const int* factors, const int* itab,
modules/core/src/dxt.cpp:     const Complex<T>* wave, int tab_size,
modules/core/src/dxt.cpp:    int dw0 = tab_size, dw;
modules/core/src/dxt.cpp:    int tab_step;
modules/core/src/dxt.cpp:    tab_step = tab_size == n ? 1 : tab_size == n*2 ? 2 : tab_size/n;
modules/core/src/dxt.cpp:            for( i = 0; i <= n - 2; i += 2, itab += 2*tab_step )
modules/core/src/dxt.cpp:                int k0 = itab[0], k1 = itab[tab_step];
modules/core/src/dxt.cpp:            for( i = 0; i <= n - 2; i += 2, itab += 2*tab_step )
modules/core/src/dxt.cpp:                int k0 = itab[0], k1 = itab[tab_step];
modules/core/src/dxt.cpp:                    for( i = 0; i < n2; i += 2, itab += tab_step*2 )
modules/core/src/dxt.cpp:                        j = itab[0];
modules/core/src/dxt.cpp:                for( i = 0; i < n; i++, itab += tab_step )
modules/core/src/dxt.cpp:                    j = itab[0];
modules/core/src/dxt.cpp:            int d, dd, dw_f = tab_size/factor;
modules/core/src/dxt.cpp:                            d -= -(d >= tab_size) & tab_size;
modules/core/src/dxt.cpp:RealDFT( const T* src, T* dst, int n, int nf, int* factors, const int* itab,
modules/core/src/dxt.cpp:         const Complex<T>* wave, int tab_size, const void*
modules/core/src/dxt.cpp:    assert( tab_size == n );
modules/core/src/dxt.cpp:            T t0 = src[itab[j]]*scale;
modules/core/src/dxt.cpp:            T t1 = src[itab[j+1]]*scale;
modules/core/src/dxt.cpp:        DFT( _dst, _dst, n, nf, factors, itab, wave,
modules/core/src/dxt.cpp:             tab_size, 0, buf, DFT_NO_PERMUTE, 1 );
modules/core/src/dxt.cpp:             itab, wave, tab_size, 0, buf, 0, 1 );
modules/core/src/dxt.cpp:CCSIDFT( const T* src, T* dst, int n, int nf, int* factors, const int* itab,
modules/core/src/dxt.cpp:         const Complex<T>* wave, int tab_size,
modules/core/src/dxt.cpp:    assert( tab_size == n );
modules/core/src/dxt.cpp:            int k0 = itab[j], k1 = itab[n-j];
modules/core/src/dxt.cpp:        DFT( _dst, _dst, n, nf, factors, itab, wave,
modules/core/src/dxt.cpp:             tab_size, 0, buf, DFT_NO_PERMUTE, 1. );
modules/core/src/dxt.cpp:                k = itab[j2];
modules/core/src/dxt.cpp:                k = itab[n2-j2];
modules/core/src/dxt.cpp:                k = itab[n2];
modules/core/src/dxt.cpp:             factors + (factors[0] == 1), itab,
modules/core/src/dxt.cpp:             wave, tab_size, 0, buf,
modules/core/src/dxt.cpp:     const int* itab, const void* wave, int tab_size,
modules/core/src/dxt.cpp:    int nf, const int* factors, const int* itab,
modules/core/src/dxt.cpp:    const Complexf* wave, int tab_size,
modules/core/src/dxt.cpp:    DFT(src, dst, n, nf, factors, itab, wave, tab_size, spec, buf, flags, scale);
modules/core/src/dxt.cpp:    int nf, const int* factors, const int* itab,
modules/core/src/dxt.cpp:    const Complexd* wave, int tab_size,
modules/core/src/dxt.cpp:    DFT(src, dst, n, nf, factors, itab, wave, tab_size, spec, buf, flags, scale);
modules/core/src/dxt.cpp:        const int* itab,  const Complexf* wave, int tab_size, const void* spec,
modules/core/src/dxt.cpp:    RealDFT( src, dst, n, nf, factors, itab, wave, tab_size, spec, buf, flags, scale);
modules/core/src/dxt.cpp:        const int* itab,  const Complexd* wave, int tab_size, const void* spec,
modules/core/src/dxt.cpp:    RealDFT( src, dst, n, nf, factors, itab, wave, tab_size, spec, buf, flags, scale);
modules/core/src/dxt.cpp:                         const int* itab,  const Complexf* wave, int tab_size, const void* spec,
modules/core/src/dxt.cpp:    CCSIDFT( src, dst, n, nf, factors, itab, wave, tab_size, spec, buf, flags, scale);
modules/core/src/dxt.cpp:                         const int* itab,  const Complexd* wave, int tab_size, const void* spec,
modules/core/src/dxt.cpp:    CCSIDFT( src, dst, n, nf, factors, itab, wave, tab_size, spec, buf, flags, scale);
modules/core/src/dxt.cpp:            fillRadixTable<float>(twiddles, radixes);
modules/core/src/dxt.cpp:            fillRadixTable<double>(twiddles, radixes);
modules/core/src/dxt.cpp:    static void fillRadixTable(UMat twiddles, const std::vector<int>& radixes)
modules/core/src/dxt.cpp:        int* itab = 0;
modules/core/src/dxt.cpp:        if( CV_IPP_CHECK_COND && (len*count >= 64) ) // use IPP DFT if available
modules/core/src/dxt.cpp:                          // twiddle factors and permutation table
modules/core/src/dxt.cpp:            itab = (int*)ptr;
modules/core/src/dxt.cpp:                DFTInit( len, nf, factors, itab, complex_elem_size,
modules/core/src/dxt.cpp:            // otherwise reuse the tables calculated on the previous stage
modules/core/src/dxt.cpp:                dft_func( sptr, dptr, len, nf, factors, itab, wave, len, spec, ptr, _flags, scale );
modules/core/src/dxt.cpp:                    dft_func( buf1, dbuf1, len, nf, factors, itab,
modules/core/src/dxt.cpp:                dft_func( buf0, dbuf0, len, nf, factors, itab,
modules/core/src/dxt.cpp:                    dft_func( buf1, dbuf1, len, nf, factors, itab,
modules/core/src/dxt.cpp:                dft_func( buf0, dbuf0, len, nf, factors, itab,
modules/core/src/dxt.cpp:     int n, int nf, int* factors, const int* itab, const Complex<T>* dft_wave,
modules/core/src/dxt.cpp:             itab, dft_wave, n, spec, buf, 0, 1.0 );
modules/core/src/dxt.cpp:      int n, int nf, int* factors, const int* itab, const Complex<T>* dft_wave,
modules/core/src/dxt.cpp:    CCSIDFT( dft_src, dft_dst, n, nf, factors, itab,
modules/core/src/dxt.cpp:        w1.re = DFTTab[m+2][0];
modules/core/src/dxt.cpp:        w1.im = -DFTTab[m+2][1];
modules/core/src/dxt.cpp:                        int nf, int* factors, const int* itab, const void* dft_wave,
modules/core/src/dxt.cpp:                    float* dst, int dst_step, int n, int nf, int* factors, const int* itab,
modules/core/src/dxt.cpp:        n, nf, factors, itab, dft_wave, dct_wave, spec, buf);
modules/core/src/dxt.cpp:                    float* dst, int dst_step, int n, int nf, int* factors, const int* itab,
modules/core/src/dxt.cpp:         n, nf, factors, itab, dft_wave, dct_wave, spec, buf);
modules/core/src/dxt.cpp:                    double* dst, int dst_step, int n, int nf, int* factors, const int* itab,
modules/core/src/dxt.cpp:        n, nf, factors, itab, dft_wave, dct_wave, spec, buf);
modules/core/src/dxt.cpp:                     double* dst, int dst_step, int n, int nf, int* factors, const int* itab,
modules/core/src/dxt.cpp:         n, nf, factors, itab, dft_wave, dct_wave, spec, buf);
modules/core/src/dxt.cpp:    int* itab = 0;
modules/core/src/dxt.cpp:                itab = (int*)ptr;
modules/core/src/dxt.cpp:                DFTInit( len, nf, factors, itab, complex_elem_size, dft_wave, inv );
modules/core/src/dxt.cpp:        // otherwise reuse the tables calculated on the previous stage
modules/core/src/dxt.cpp:                      itab, dft_wave, dct_wave, spec, ptr );
modules/core/src/dxt.cpp:static const int optimalDFTSizeTab[] = {
modules/core/src/dxt.cpp:    int a = 0, b = sizeof(optimalDFTSizeTab)/sizeof(optimalDFTSizeTab[0]) - 1;
modules/core/src/dxt.cpp:    if( (unsigned)size0 >= (unsigned)optimalDFTSizeTab[b] )
modules/core/src/dxt.cpp:        if( size0 <= optimalDFTSizeTab[c] )
modules/core/src/dxt.cpp:    return optimalDFTSizeTab[b];
modules/core/src/split.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/split.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/split.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/split.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/split.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/ocl.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/ocl.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/ocl.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/ocl.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/core/src/ocl.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/ocl.cpp: * If your system doesn't support getenv(), define NO_GETENV to disable
modules/core/src/ocl.cpp: * The above copyright notice and this permission notice shall be included
modules/core/src/ocl.cpp:typedef cl_bitfield         cl_device_exec_capabilities;
modules/core/src/ocl.cpp:#undef abs
modules/core/src/ocl.cpp:    static uint64 table[256];
modules/core/src/ocl.cpp:            table[i] = c;
modules/core/src/ocl.cpp:        crc = table[(uchar)crc ^ data[idx]] ^ (crc >> 8);
modules/core/src/ocl.cpp:    static bool g_isOpenCLAvailable = false;
modules/core/src/ocl.cpp:            g_isOpenCLAvailable = ::clGetPlatformIDs(0, NULL, &n) == CL_SUCCESS;
modules/core/src/ocl.cpp:            g_isOpenCLAvailable = false;
modules/core/src/ocl.cpp:    return g_isOpenCLAvailable;
modules/core/src/ocl.cpp:            data->useOpenCL = (int)haveOpenCL() && Device::getDefault().ptr() && Device::getDefault().available();
modules/core/src/ocl.cpp:    bool isAvailable() const
modules/core/src/ocl.cpp:        return g_isAmdBlasAvailable;
modules/core/src/ocl.cpp:                        g_isAmdBlasAvailable = clAmdBlasSetup() == clAmdBlasSuccess;
modules/core/src/ocl.cpp:                        g_isAmdBlasAvailable = false;
modules/core/src/ocl.cpp:                    g_isAmdBlasAvailable = false;
modules/core/src/ocl.cpp:    static bool g_isAmdBlasAvailable;
modules/core/src/ocl.cpp:bool AmdBlasHelper::g_isAmdBlasAvailable = false;
modules/core/src/ocl.cpp:    return AmdBlasHelper::getInstance().isAvailable();
modules/core/src/ocl.cpp:    bool isAvailable() const
modules/core/src/ocl.cpp:        return g_isAmdFftAvailable;
modules/core/src/ocl.cpp:                        g_isAmdFftAvailable = true;
modules/core/src/ocl.cpp:                        g_isAmdFftAvailable = false;
modules/core/src/ocl.cpp:                    g_isAmdFftAvailable = false;
modules/core/src/ocl.cpp:    static bool g_isAmdFftAvailable;
modules/core/src/ocl.cpp:bool AmdFftHelper::g_isAmdFftAvailable = false;
modules/core/src/ocl.cpp:    return AmdFftHelper::getInstance().isAvailable();
modules/core/src/ocl.cpp:bool Device::available() const
modules/core/src/ocl.cpp:bool Device::compilerAvailable() const
modules/core/src/ocl.cpp:bool Device::linkerAvailable() const
modules/core/src/ocl.cpp:int Device::executionCapabilities() const
modules/core/src/ocl.cpp:{ return p ? p->getProp<cl_device_exec_capabilities, int>(CL_DEVICE_EXECUTION_CAPABILITIES) : 0; }
modules/core/src/ocl.cpp:            (strcmp(configuration, "disabled") == 0 ||
modules/core/src/ocl.cpp:static bool checkDisableSVMUMatUsage()
modules/core/src/ocl.cpp:static bool checkDisableSVM()
modules/core/src/ocl.cpp:// see SVMCapabilities
modules/core/src/ocl.cpp:static unsigned int getSVMCapabilitiesMask()
modules/core/src/ocl.cpp:            if( !d.available() || !d.compilerAvailable() )
modules/core/src/ocl.cpp:    bool svmAvailable;
modules/core/src/ocl.cpp:    bool svmEnabled;
modules/core/src/ocl.cpp:    svm::SVMCapabilities svmCapabilities;
modules/core/src/ocl.cpp:        cl_device_svm_capabilities deviceCaps = 0;
modules/core/src/ocl.cpp:        svmCapabilities.value_ =
modules/core/src/ocl.cpp:                ((deviceCaps & CL_DEVICE_SVM_COARSE_GRAIN_BUFFER) ? svm::SVMCapabilities::SVM_COARSE_GRAIN_BUFFER : 0) |
modules/core/src/ocl.cpp:                ((deviceCaps & CL_DEVICE_SVM_FINE_GRAIN_BUFFER) ? svm::SVMCapabilities::SVM_FINE_GRAIN_BUFFER : 0) |
modules/core/src/ocl.cpp:                ((deviceCaps & CL_DEVICE_SVM_FINE_GRAIN_SYSTEM) ? svm::SVMCapabilities::SVM_FINE_GRAIN_SYSTEM : 0) |
modules/core/src/ocl.cpp:                ((deviceCaps & CL_DEVICE_SVM_ATOMICS) ? svm::SVMCapabilities::SVM_ATOMICS : 0);
modules/core/src/ocl.cpp:        svmCapabilities.value_ &= svm::getSVMCapabilitiesMask();
modules/core/src/ocl.cpp:        if (svmCapabilities.value_ == 0)
modules/core/src/ocl.cpp:            CV_OPENCL_SVM_TRACE_ERROR_P("svmCapabilities is empty\n");
modules/core/src/ocl.cpp:        svmAvailable = true;
modules/core/src/ocl.cpp:        svmEnabled = !svm::checkDisableSVM();
modules/core/src/ocl.cpp:        svmAvailable = false;
modules/core/src/ocl.cpp:        svmEnabled = false;
modules/core/src/ocl.cpp:        svmCapabilities.value_ = 0;
modules/core/src/ocl.cpp:    return i->svmEnabled;
modules/core/src/ocl.cpp:void Context::setUseSVM(bool enabled)
modules/core/src/ocl.cpp:    if (enabled && !i->svmAvailable)
modules/core/src/ocl.cpp:    i->svmEnabled = enabled;
modules/core/src/ocl.cpp:void Context::setUseSVM(bool enabled) { CV_Assert(!enabled); }
modules/core/src/ocl.cpp:const SVMCapabilities getSVMCapabilitites(const ocl::Context& context)
modules/core/src/ocl.cpp:    return i->svmCapabilities;
modules/core/src/ocl.cpp:    CV_Assert(i->svmInitialized); // getSVMCapabilitites() must be called first
modules/core/src/ocl.cpp:    if (checkDisableSVMUMatUsage())
modules/core/src/ocl.cpp:        CV_ErrorNoReturn(cv::Error::OpenCLApiCallError, "no OpenCL platform available!");
modules/core/src/ocl.cpp:    bool platformAvailable = false;
modules/core/src/ocl.cpp:    // check if external platformName contained in list of available platforms in OpenCV
modules/core/src/ocl.cpp:        String availablePlatformName;
modules/core/src/ocl.cpp:        get_platform_name(platforms[i], availablePlatformName);
modules/core/src/ocl.cpp:        // external platform is found in the list of available platforms
modules/core/src/ocl.cpp:        if (platformName == availablePlatformName)
modules/core/src/ocl.cpp:            platformAvailable = true;
modules/core/src/ocl.cpp:    if (!platformAvailable)
modules/core/src/ocl.cpp:        CV_ErrorNoReturn(cv::Error::OpenCLApiCallError, "No matched platforms available!");
modules/core/src/ocl.cpp:        CV_ErrorNoReturn(cv::Error::OpenCLApiCallError, "No matched platforms available!");
modules/core/src/ocl.cpp:        const svm::SVMCapabilities svmCaps = svm::getSVMCapabilitites(ctx);
modules/core/src/ocl.cpp:#pragma warning(disable:4127) // conditional expression is constant
modules/core/src/ocl.cpp:    AlignedDataPtr(const AlignedDataPtr&); // disabled
modules/core/src/ocl.cpp:    AlignedDataPtr& operator=(const AlignedDataPtr&); // disabled
modules/core/src/ocl.cpp:    AlignedDataPtr2D(const AlignedDataPtr2D&); // disabled
modules/core/src/ocl.cpp:    AlignedDataPtr2D& operator=(const AlignedDataPtr2D&); // disabled
modules/core/src/ocl.cpp:    mutable OpenCLBufferPoolImpl bufferPool;
modules/core/src/ocl.cpp:    mutable OpenCLBufferPoolImpl bufferPoolHostPtr;
modules/core/src/ocl.cpp:    mutable OpenCLSVMBufferPoolImpl bufferPoolSVM;
modules/core/src/ocl.cpp:        const svm::SVMCapabilities svmCaps = svm::getSVMCapabilitites(ctx);
modules/core/src/ocl.cpp:            svm::SVMCapabilities svmCaps = svm::getSVMCapabilitites(ctx);
modules/core/src/ocl.cpp:    static const char* tab[]=
modules/core/src/ocl.cpp:    return cn > 16 ? "?" : tab[depth*16 + cn-1];
modules/core/src/ocl.cpp:    static const char* tab[] =
modules/core/src/ocl.cpp:    return cn > 16 ? "?" : tab[depth*16 + cn-1];
modules/core/src/ocl.cpp:    static const char* tab[] =
modules/core/src/ocl.cpp:    return cn > 16 ? "?" : tab[depth*16 + cn-1];
modules/core/src/ocl.cpp:        // this enables backwards portability to
modules/core/src/persistence.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/persistence.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/persistence.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/persistence.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/persistence.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/persistence.cpp:#define cv_isprint_or_tab(c)  ((uchar)(c) >= (uchar)' ' || (c) == '\t')
modules/core/src/persistence.cpp:    unsigned val = abs(_val);
modules/core/src/persistence.cpp:    int tab_size;
modules/core/src/persistence.cpp:    void** table;
modules/core/src/persistence.cpp:             CvMemStorage* storage, int start_tab_size )
modules/core/src/persistence.cpp:    if( start_tab_size <= 0 )
modules/core/src/persistence.cpp:        start_tab_size = 16;
modules/core/src/persistence.cpp:    map->tab_size = start_tab_size;
modules/core/src/persistence.cpp:    start_tab_size *= sizeof(map->table[0]);
modules/core/src/persistence.cpp:    map->table = (void**)cvMemStorageAlloc( storage, start_tab_size );
modules/core/src/persistence.cpp:    memset( map->table, 0, start_tab_size );
modules/core/src/persistence.cpp:    int i, tab_size;
modules/core/src/persistence.cpp:    tab_size = map->tab_size;
modules/core/src/persistence.cpp:    if( (tab_size & (tab_size - 1)) == 0 )
modules/core/src/persistence.cpp:        i = (int)(hashval & (tab_size - 1));
modules/core/src/persistence.cpp:        i = (int)(hashval % tab_size);
modules/core/src/persistence.cpp:    for( node = (CvStringHashNode*)(map->table[i]); node != 0; node = node->next )
modules/core/src/persistence.cpp:        node->next = (CvStringHashNode*)(map->table[i]);
modules/core/src/persistence.cpp:        map->table[i] = node;
modules/core/src/persistence.cpp:        int i, tab_size;
modules/core/src/persistence.cpp:        tab_size = map->tab_size;
modules/core/src/persistence.cpp:        if( (tab_size & (tab_size - 1)) == 0 )
modules/core/src/persistence.cpp:            i = (int)(key->hashval & (tab_size - 1));
modules/core/src/persistence.cpp:            i = (int)(key->hashval % tab_size);
modules/core/src/persistence.cpp:        for( another = (CvFileMapNode*)(map->table[i]); another != 0; another = another->next )
modules/core/src/persistence.cpp:            node->next = (CvFileMapNode*)(map->table[i]);
modules/core/src/persistence.cpp:            map->table[i] = node;
modules/core/src/persistence.cpp:    int i, len, tab_size;
modules/core/src/persistence.cpp:        tab_size = map->tab_size;
modules/core/src/persistence.cpp:        if( (tab_size & (tab_size - 1)) == 0 )
modules/core/src/persistence.cpp:            i = (int)(hashval & (tab_size - 1));
modules/core/src/persistence.cpp:            i = (int)(hashval % tab_size);
modules/core/src/persistence.cpp:        for( another = (CvFileMapNode*)(map->table[i]); another != 0; another = another->next )
modules/core/src/persistence.cpp:            CV_PARSE_ERROR( *ptr == '\t' ? "Tabs are prohibited in YAML!" : "Invalid character" );
modules/core/src/persistence.cpp:            while( cv_isprint_or_tab(c) && (c != '-' || ptr[1] != '-' || ptr[2] != '>') );
modules/core/src/persistence.cpp:            } while( cv_isprint_or_tab(c) );
modules/core/src/persistence.cpp:        CV_Error( CV_StsError, "Some of essential matrix attributes are absent" );
modules/core/src/persistence.cpp:        CV_Error( CV_StsError, "Some of essential matrix attributes are absent" );
modules/core/src/persistence.cpp:        CV_Error( CV_StsError, "Some of essential matrix attributes are absent" );
modules/core/src/persistence.cpp:        CV_Error( CV_StsError, "Some of essential image attributes are absent" );
modules/core/src/persistence.cpp:        CV_Error( CV_StsError, "Some of essential sequence attributes are absent" );
modules/core/src/persistence.cpp:        CV_Error( CV_StsError, "Some of essential graph attributes are absent" );
modules/core/src/cuda/gpu_mat.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/cuda/gpu_mat.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/cuda/gpu_mat.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/cuda/gpu_mat.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/cuda/gpu_mat.cu:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/mathfuncs.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/mathfuncs.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/mathfuncs.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/mathfuncs.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/mathfuncs.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/mathfuncs.cpp:    float ax = std::abs(x), ay = std::abs(y);
modules/core/src/mathfuncs.cpp:    static const double sin_table[] =
modules/core/src/mathfuncs.cpp:            __m128d v_sin_a = _mm_i32gather_pd(sin_table, v_sin_idx, 8);
modules/core/src/mathfuncs.cpp:            __m128d v_cos_a = _mm_i32gather_pd(sin_table, v_cos_idx, 8);
modules/core/src/mathfuncs.cpp:            v_sin_a = _mm_i32gather_pd(sin_table, v_sin_idx, 8);
modules/core/src/mathfuncs.cpp:            v_cos_a = _mm_i32gather_pd(sin_table, v_cos_idx, 8);
modules/core/src/mathfuncs.cpp:        double sin_a = sin_table[sin_idx];
modules/core/src/mathfuncs.cpp:        double cos_a = sin_table[cos_idx];
modules/core/src/mathfuncs.cpp:            int p = std::abs(power);
modules/core/src/mathfuncs.cpp:            int p = std::abs(power);
modules/core/src/mathfuncs.cpp:        T tab[5] =
modules/core/src/mathfuncs.cpp:            dst[i] = cv_abs(val) <= 2 ? tab[val + 2] : (T)0;
modules/core/src/mathfuncs.cpp:    int power = std::abs(power0);
modules/core/src/mathfuncs.cpp:static IPowFunc ipowTab[] =
modules/core/src/mathfuncs.cpp:    bool issqrt = std::abs(power - 0.5) < DBL_EPSILON;
modules/core/src/mathfuncs.cpp:    bool is_ipower = fabs(ipower - power) < DBL_EPSILON;
modules/core/src/mathfuncs.cpp:        IPowFunc func = ipowTab[depth];
modules/core/src/mathfuncs.cpp:    else if( fabs(fabs(power) - 0.5) < DBL_EPSILON )
modules/core/src/mathfuncs.cpp:    static const type min_allowable = 0x0;
modules/core/src/mathfuncs.cpp:    static const type max_allowable = 0xFF;
modules/core/src/mathfuncs.cpp:    static const type min_allowable = SCHAR_MIN;
modules/core/src/mathfuncs.cpp:    static const type max_allowable = SCHAR_MAX;
modules/core/src/mathfuncs.cpp:    static const type min_allowable = 0x0;
modules/core/src/mathfuncs.cpp:    static const type max_allowable = USHRT_MAX;
modules/core/src/mathfuncs.cpp:    static const type min_allowable = SHRT_MIN;
modules/core/src/mathfuncs.cpp:    static const type max_allowable = SHRT_MAX;
modules/core/src/mathfuncs.cpp:    static const type min_allowable = (-INT_MAX - 1);
modules/core/src/mathfuncs.cpp:    static const type max_allowable = INT_MAX;
modules/core/src/mathfuncs.cpp:    if (minVal < type_ass::min_allowable && maxVal > type_ass::max_allowable)
modules/core/src/mathfuncs.cpp:    else if (minVal > type_ass::max_allowable || maxVal < type_ass::min_allowable || maxVal < minVal)
modules/core/src/mathfuncs.cpp:      software, its quality, accuracy, merchantability, or fitness for a
modules/core/src/mathfuncs.cpp:    this copyright notice and the above warranty information.
modules/core/src/mathfuncs.cpp:                if( fabs(q1) > fabs(q2) )
modules/core/src/mathfuncs.cpp:            e = pow(d + fabs(R), 1./3);
modules/core/src/mathfuncs.cpp:        if( std::abs(coeffs[n].re) + std::abs(coeffs[n].im) > DBL_EPSILON )
modules/core/src/mathfuncs.cpp:            maxDiff = std::max(maxDiff, cv::abs(num));
modules/core/src/mathfuncs.cpp:            if( fabs(roots[i].im) < verySmallEps )
modules/core/src/gl_core_3_1.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/gl_core_3_1.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/gl_core_3_1.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/gl_core_3_1.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/gl_core_3_1.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/gl_core_3_1.cpp:            #pragma warning(disable: 4055)
modules/core/src/gl_core_3_1.cpp:            #pragma warning(disable: 4054)
modules/core/src/gl_core_3_1.cpp:    PFNDISABLEPROC Disable;
modules/core/src/gl_core_3_1.cpp:    PFNENABLEPROC Enable;
modules/core/src/gl_core_3_1.cpp:    PFNISENABLEDPROC IsEnabled;
modules/core/src/gl_core_3_1.cpp:    PFNDISABLEVERTEXATTRIBARRAYPROC DisableVertexAttribArray;
modules/core/src/gl_core_3_1.cpp:    PFNENABLEVERTEXATTRIBARRAYPROC EnableVertexAttribArray;
modules/core/src/gl_core_3_1.cpp:    PFNENABLEIPROC Enablei;
modules/core/src/gl_core_3_1.cpp:    PFNDISABLEIPROC Disablei;
modules/core/src/gl_core_3_1.cpp:    PFNISENABLEDIPROC IsEnabledi;
modules/core/src/gl_core_3_1.cpp:    PFNENABLECLIENTSTATEPROC EnableClientState;
modules/core/src/gl_core_3_1.cpp:    PFNDISABLECLIENTSTATEPROC DisableClientState;
modules/core/src/gl_core_3_1.cpp:    static void CODEGEN_FUNCPTR Switch_Disable(GLenum cap)
modules/core/src/gl_core_3_1.cpp:        Disable = (PFNDISABLEPROC)IntGetProcAddress("glDisable");
modules/core/src/gl_core_3_1.cpp:        Disable(cap);
modules/core/src/gl_core_3_1.cpp:    static void CODEGEN_FUNCPTR Switch_Enable(GLenum cap)
modules/core/src/gl_core_3_1.cpp:        Enable = (PFNENABLEPROC)IntGetProcAddress("glEnable");
modules/core/src/gl_core_3_1.cpp:        Enable(cap);
modules/core/src/gl_core_3_1.cpp:    static GLboolean CODEGEN_FUNCPTR Switch_IsEnabled(GLenum cap)
modules/core/src/gl_core_3_1.cpp:        IsEnabled = (PFNISENABLEDPROC)IntGetProcAddress("glIsEnabled");
modules/core/src/gl_core_3_1.cpp:        return IsEnabled(cap);
modules/core/src/gl_core_3_1.cpp:    static void CODEGEN_FUNCPTR Switch_DisableVertexAttribArray(GLuint index)
modules/core/src/gl_core_3_1.cpp:        DisableVertexAttribArray = (PFNDISABLEVERTEXATTRIBARRAYPROC)IntGetProcAddress("glDisableVertexAttribArray");
modules/core/src/gl_core_3_1.cpp:        DisableVertexAttribArray(index);
modules/core/src/gl_core_3_1.cpp:    static void CODEGEN_FUNCPTR Switch_EnableVertexAttribArray(GLuint index)
modules/core/src/gl_core_3_1.cpp:        EnableVertexAttribArray = (PFNENABLEVERTEXATTRIBARRAYPROC)IntGetProcAddress("glEnableVertexAttribArray");
modules/core/src/gl_core_3_1.cpp:        EnableVertexAttribArray(index);
modules/core/src/gl_core_3_1.cpp:    static void CODEGEN_FUNCPTR Switch_Enablei(GLenum target, GLuint index)
modules/core/src/gl_core_3_1.cpp:        Enablei = (PFNENABLEIPROC)IntGetProcAddress("glEnablei");
modules/core/src/gl_core_3_1.cpp:        Enablei(target, index);
modules/core/src/gl_core_3_1.cpp:    static void CODEGEN_FUNCPTR Switch_Disablei(GLenum target, GLuint index)
modules/core/src/gl_core_3_1.cpp:        Disablei = (PFNDISABLEIPROC)IntGetProcAddress("glDisablei");
modules/core/src/gl_core_3_1.cpp:        Disablei(target, index);
modules/core/src/gl_core_3_1.cpp:    static GLboolean CODEGEN_FUNCPTR Switch_IsEnabledi(GLenum target, GLuint index)
modules/core/src/gl_core_3_1.cpp:        IsEnabledi = (PFNISENABLEDIPROC)IntGetProcAddress("glIsEnabledi");
modules/core/src/gl_core_3_1.cpp:        return IsEnabledi(target, index);
modules/core/src/gl_core_3_1.cpp:    static void CODEGEN_FUNCPTR Switch_EnableClientState(GLenum cap)
modules/core/src/gl_core_3_1.cpp:        EnableClientState = (PFNENABLECLIENTSTATEPROC)IntGetProcAddress("glEnableClientState");
modules/core/src/gl_core_3_1.cpp:        EnableClientState(cap);
modules/core/src/gl_core_3_1.cpp:    static void CODEGEN_FUNCPTR Switch_DisableClientState(GLenum cap)
modules/core/src/gl_core_3_1.cpp:        DisableClientState = (PFNDISABLECLIENTSTATEPROC)IntGetProcAddress("glDisableClientState");
modules/core/src/gl_core_3_1.cpp:        DisableClientState(cap);
modules/core/src/gl_core_3_1.cpp:    struct InitializeVariables
modules/core/src/gl_core_3_1.cpp:        InitializeVariables()
modules/core/src/gl_core_3_1.cpp:            Disable = Switch_Disable;
modules/core/src/gl_core_3_1.cpp:            Enable = Switch_Enable;
modules/core/src/gl_core_3_1.cpp:            IsEnabled = Switch_IsEnabled;
modules/core/src/gl_core_3_1.cpp:            DisableVertexAttribArray = Switch_DisableVertexAttribArray;
modules/core/src/gl_core_3_1.cpp:            EnableVertexAttribArray = Switch_EnableVertexAttribArray;
modules/core/src/gl_core_3_1.cpp:            Enablei = Switch_Enablei;
modules/core/src/gl_core_3_1.cpp:            Disablei = Switch_Disablei;
modules/core/src/gl_core_3_1.cpp:            IsEnabledi = Switch_IsEnabledi;
modules/core/src/gl_core_3_1.cpp:            EnableClientState = Switch_EnableClientState;
modules/core/src/gl_core_3_1.cpp:            DisableClientState = Switch_DisableClientState;
modules/core/src/gl_core_3_1.cpp:    InitializeVariables g_initVariables;
modules/core/src/umatrix.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/umatrix.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/umatrix.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/umatrix.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/umatrix.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/umatrix.cpp:    bool noScale = std::fabs(alpha - 1) < DBL_EPSILON && std::fabs(beta) < DBL_EPSILON;
modules/core/src/parallel.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/parallel.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/parallel.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/parallel.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/parallel.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/parallel.cpp:    #undef abs
modules/core/src/parallel.cpp:   1. HAVE_TBB         - 3rdparty library, should be explicitly enabled
modules/core/src/parallel.cpp:   2. HAVE_CSTRIPES    - 3rdparty library, should be explicitly enabled
modules/core/src/parallel.cpp:   3. HAVE_OPENMP      - integrated to compiler, should be explicitly enabled
modules/core/src/parallel.cpp:   7. HAVE_PTHREADS_PF - pthreads if available
modules/core/src/parallel.cpp:        // Concurrency always uses >=2 threads, so we just disable it if 1 thread is requested
modules/core/src/parallel.cpp:   int cpusAvailable = 0;
modules/core/src/parallel.cpp:        ++cpusAvailable;
modules/core/src/parallel.cpp:          cpusAvailable += rend - rstart + 1;
modules/core/src/parallel.cpp:   return cpusAvailable ? cpusAvailable : 1;
modules/core/src/va_intel.cpp:// CL-VA Interoperability
modules/core/src/va_intel.cpp:            CV_Error(cv::Error::OpenCLInitError, "OpenCL: No available platforms");
modules/core/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/precomp.hpp:extern const float g_8x32fTab[];
modules/core/src/precomp.hpp:#define CV_8TO32F(x)  cv::g_8x32fTab[(x)+128]
modules/core/src/precomp.hpp:extern const ushort g_8x16uSqrTab[];
modules/core/src/precomp.hpp:#define CV_SQR_8U(x)  cv::g_8x16uSqrTab[(x)+255]
modules/core/src/precomp.hpp:{ return saturate_cast<short>(std::abs(a - b)); }
modules/core/src/precomp.hpp:{ return saturate_cast<schar>(std::abs(a - b)); }
modules/core/src/precomp.hpp:/* initial hash table size */
modules/core/src/precomp.hpp:/* maximal average node_count/hash_size ratio beyond which hash table is resized */
modules/core/src/precomp.hpp:    bool useCollection; // enable/disable impl data collection
modules/core/src/types.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/types.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/types.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/types.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/types.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/arithm_core.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/arithm_core.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/arithm_core.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/arithm_core.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/arithm_core.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/arithm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/arithm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/arithm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/arithm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/arithm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/arithm.cpp://  Arithmetic and logical operations: +, -, *, /, &, |, ^, ~, abs ...
modules/core/src/arithm.cpp:                       InputArray _mask, const BinaryFuncC* tab,
modules/core/src/arithm.cpp:            func = *tab;
modules/core/src/arithm.cpp:            func = tab[depth1];
modules/core/src/arithm.cpp:        func = *tab;
modules/core/src/arithm.cpp:        func = tab[depth1];
modules/core/src/arithm.cpp:static BinaryFuncC* getMaxTab()
modules/core/src/arithm.cpp:    static BinaryFuncC maxTab[] =
modules/core/src/arithm.cpp:    return maxTab;
modules/core/src/arithm.cpp:static BinaryFuncC* getMinTab()
modules/core/src/arithm.cpp:    static BinaryFuncC minTab[] =
modules/core/src/arithm.cpp:    return minTab;
modules/core/src/arithm.cpp:    binary_op(src1, src2, dst, noArray(), getMaxTab(), false, OCL_OP_MAX );
modules/core/src/arithm.cpp:    binary_op(src1, src2, dst, noArray(), getMinTab(), false, OCL_OP_MIN );
modules/core/src/arithm.cpp:    binary_op(src1, src2, _dst, noArray(), getMaxTab(), false, OCL_OP_MAX );
modules/core/src/arithm.cpp:    binary_op(src1, src2, _dst, noArray(), getMinTab(), false, OCL_OP_MIN );
modules/core/src/arithm.cpp:    binary_op(src1, src2, _dst, noArray(), getMaxTab(), false, OCL_OP_MAX );
modules/core/src/arithm.cpp:    binary_op(src1, src2, _dst, noArray(), getMinTab(), false, OCL_OP_MIN );
modules/core/src/arithm.cpp:                      InputArray _mask, int dtype, BinaryFuncC* tab, bool muldiv=false,
modules/core/src/arithm.cpp:        tab[depth1](src1.ptr(), src1.step, src2.ptr(), src2.step, dst.ptr(), dst.step, sz.width, sz.height, usrdata);
modules/core/src/arithm.cpp:    BinaryFuncC func = tab[CV_MAT_DEPTH(wtype)];
modules/core/src/arithm.cpp:static BinaryFuncC* getAddTab()
modules/core/src/arithm.cpp:    static BinaryFuncC addTab[] =
modules/core/src/arithm.cpp:    return addTab;
modules/core/src/arithm.cpp:static BinaryFuncC* getSubTab()
modules/core/src/arithm.cpp:    static BinaryFuncC subTab[] =
modules/core/src/arithm.cpp:    return subTab;
modules/core/src/arithm.cpp:static BinaryFuncC* getAbsDiffTab()
modules/core/src/arithm.cpp:    static BinaryFuncC absDiffTab[] =
modules/core/src/arithm.cpp:        (BinaryFuncC)GET_OPTIMIZED(cv::hal::absdiff8u), (BinaryFuncC)GET_OPTIMIZED(cv::hal::absdiff8s),
modules/core/src/arithm.cpp:        (BinaryFuncC)GET_OPTIMIZED(cv::hal::absdiff16u), (BinaryFuncC)GET_OPTIMIZED(cv::hal::absdiff16s),
modules/core/src/arithm.cpp:        (BinaryFuncC)GET_OPTIMIZED(cv::hal::absdiff32s),
modules/core/src/arithm.cpp:        (BinaryFuncC)GET_OPTIMIZED(cv::hal::absdiff32f), (BinaryFuncC)cv::hal::absdiff64f,
modules/core/src/arithm.cpp:    return absDiffTab;
modules/core/src/arithm.cpp:    arithm_op(src1, src2, dst, mask, dtype, getAddTab(), false, 0, OCL_OP_ADD );
modules/core/src/arithm.cpp:    arithm_op(_src1, _src2, _dst, mask, dtype, getSubTab(), false, 0, OCL_OP_SUB );
modules/core/src/arithm.cpp:void cv::absdiff( InputArray src1, InputArray src2, OutputArray dst )
modules/core/src/arithm.cpp:    arithm_op(src1, src2, dst, noArray(), -1, getAbsDiffTab(), false, 0, OCL_OP_ABSDIFF);
modules/core/src/arithm.cpp:static BinaryFuncC* getMulTab()
modules/core/src/arithm.cpp:    static BinaryFuncC mulTab[] =
modules/core/src/arithm.cpp:    return mulTab;
modules/core/src/arithm.cpp:static BinaryFuncC* getDivTab()
modules/core/src/arithm.cpp:    static BinaryFuncC divTab[] =
modules/core/src/arithm.cpp:    return divTab;
modules/core/src/arithm.cpp:static BinaryFuncC* getRecipTab()
modules/core/src/arithm.cpp:    static BinaryFuncC recipTab[] =
modules/core/src/arithm.cpp:    return recipTab;
modules/core/src/arithm.cpp:    arithm_op(src1, src2, dst, noArray(), dtype, getMulTab(),
modules/core/src/arithm.cpp:              true, &scale, std::abs(scale - 1.0) < DBL_EPSILON ? OCL_OP_MUL : OCL_OP_MUL_SCALE);
modules/core/src/arithm.cpp:    arithm_op(src1, src2, dst, noArray(), dtype, getDivTab(), true, &scale, OCL_OP_DIV_SCALE);
modules/core/src/arithm.cpp:    arithm_op(src2, src2, dst, noArray(), dtype, getRecipTab(), true, &scale, OCL_OP_RECIP_SCALE);
modules/core/src/arithm.cpp:static BinaryFuncC* getAddWeightedTab()
modules/core/src/arithm.cpp:    static BinaryFuncC addWeightedTab[] =
modules/core/src/arithm.cpp:    return addWeightedTab;
modules/core/src/arithm.cpp:    arithm_op(src1, src2, dst, noArray(), dtype, getAddWeightedTab(), true, scalars, OCL_OP_ADDW);
modules/core/src/arithm.cpp:    static BinaryFuncC cmpTab[] =
modules/core/src/arithm.cpp:    return cmpTab[depth];
modules/core/src/arithm.cpp:    static const double tab[] = {0, -128, 0, -32768, INT_MIN, -FLT_MAX, -DBL_MAX, 0};
modules/core/src/arithm.cpp:    return tab[depth];
modules/core/src/arithm.cpp:    static const double tab[] = {255, 127, 65535, 32767, INT_MAX, FLT_MAX, DBL_MAX, 0};
modules/core/src/arithm.cpp:    return tab[depth];
modules/core/src/arithm.cpp:    static InRangeFunc inRangeTab[] =
modules/core/src/arithm.cpp:    return inRangeTab[depth];
modules/core/src/arithm.cpp:    cv::absdiff( src1, cv::cvarrToMat(srcarr2), dst );
modules/core/src/arithm.cpp:    cv::absdiff( src1, (const cv::Scalar&)scalar, dst );
modules/core/src/arithm.cpp:void absdiff8u( const uchar* src1, size_t step1,
modules/core/src/arithm.cpp:    CALL_HAL(absdiff8u, cv_hal_absdiff8u, src1, step1, src2, step2, dst, step, width, height)
modules/core/src/arithm.cpp:void absdiff8s( const schar* src1, size_t step1,
modules/core/src/arithm.cpp:    CALL_HAL(absdiff8s, cv_hal_absdiff8s, src1, step1, src2, step2, dst, step, width, height)
modules/core/src/arithm.cpp:void absdiff16u( const ushort* src1, size_t step1,
modules/core/src/arithm.cpp:    CALL_HAL(absdiff16u, cv_hal_absdiff16u, src1, step1, src2, step2, dst, step, width, height)
modules/core/src/arithm.cpp:void absdiff16s( const short* src1, size_t step1,
modules/core/src/arithm.cpp:    CALL_HAL(absdiff16s, cv_hal_absdiff16s, src1, step1, src2, step2, dst, step, width, height)
modules/core/src/arithm.cpp:void absdiff32s( const int* src1, size_t step1,
modules/core/src/arithm.cpp:    CALL_HAL(absdiff32s, cv_hal_absdiff32s, src1, step1, src2, step2, dst, step, width, height)
modules/core/src/arithm.cpp:void absdiff32f( const float* src1, size_t step1,
modules/core/src/arithm.cpp:    CALL_HAL(absdiff32f, cv_hal_absdiff32f, src1, step1, src2, step2, dst, step, width, height)
modules/core/src/arithm.cpp:void absdiff64f( const double* src1, size_t step1,
modules/core/src/arithm.cpp:    CALL_HAL(absdiff64f, cv_hal_absdiff64f, src1, step1, src2, step2, dst, step, width, height)
modules/core/src/arithm.cpp:        if (std::fabs(fscale - 1) <= FLT_EPSILON) \
modules/core/src/arithm.cpp:        if (std::fabs(fscale - 1) <= FLT_EPSILON) \
modules/core/src/cuda_stream.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/cuda_stream.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/cuda_stream.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/cuda_stream.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/cuda_stream.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/cuda_stream.cpp:            int deviceCount = getCudaEnabledDeviceCount();
modules/core/src/cuda_stream.cpp:            int deviceCount = getCudaEnabledDeviceCount();
modules/core/src/cuda_stream.cpp:    bool enableMemoryPool = true;
modules/core/src/cuda_stream.cpp:        if (enableMemoryPool)
modules/core/src/cuda_stream.cpp:    enableMemoryPool = on;
modules/core/src/cuda_stream.cpp:        const int deviceCount = getCudaEnabledDeviceCount();
modules/core/src/rand.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/rand.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/rand.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/rand.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/rand.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/rand.cpp:    #undef abs
modules/core/src/rand.cpp:        // handwritten SSE is required not for performance but for numerical stability!
modules/core/src/rand.cpp:static RandFunc randTab[][8] =
modules/core/src/rand.cpp:   "The Ziggurat Method for Generating Random Variables"
modules/core/src/rand.cpp:        // Set up the tables
modules/core/src/rand.cpp:            if( (unsigned)std::abs(hz) < kn[iz] )
modules/core/src/rand.cpp:static RandnScaleFunc randnScaleTab[] =
modules/core/src/rand.cpp:            func = randTab[fast_int_mode][depth];
modules/core/src/rand.cpp:            func = randTab[0][depth];
modules/core/src/rand.cpp:        scaleFunc = randnScaleTab[depth];
modules/core/src/rand.cpp:    RandShuffleFunc tab[] =
modules/core/src/rand.cpp:    RandShuffleFunc func = tab[dst.elemSize()];
modules/core/src/rand.cpp:     1. Redistributions of source code must retain the above copyright
modules/core/src/rand.cpp:     2. Redistributions in binary form must reproduce the above copyright
modules/core/src/stl.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/stl.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/stl.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/stl.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/stl.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/gl_core_3_1.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/gl_core_3_1.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/gl_core_3_1.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/gl_core_3_1.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/gl_core_3_1.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/gl_core_3_1.hpp:        // Fallback if nothing above works
modules/core/src/gl_core_3_1.hpp:    extern void (CODEGEN_FUNCPTR *Disable)(GLenum cap);
modules/core/src/gl_core_3_1.hpp:    extern void (CODEGEN_FUNCPTR *Enable)(GLenum cap);
modules/core/src/gl_core_3_1.hpp:    extern GLboolean (CODEGEN_FUNCPTR *IsEnabled)(GLenum cap);
modules/core/src/gl_core_3_1.hpp:    extern void (CODEGEN_FUNCPTR *DisableVertexAttribArray)(GLuint index);
modules/core/src/gl_core_3_1.hpp:    extern void (CODEGEN_FUNCPTR *EnableVertexAttribArray)(GLuint index);
modules/core/src/gl_core_3_1.hpp:    extern void (CODEGEN_FUNCPTR *Enablei)(GLenum target, GLuint index);
modules/core/src/gl_core_3_1.hpp:    extern void (CODEGEN_FUNCPTR *Disablei)(GLenum target, GLuint index);
modules/core/src/gl_core_3_1.hpp:    extern GLboolean (CODEGEN_FUNCPTR *IsEnabledi)(GLenum target, GLuint index);
modules/core/src/gl_core_3_1.hpp:    extern void (CODEGEN_FUNCPTR *EnableClientState)(GLenum cap);
modules/core/src/gl_core_3_1.hpp:    extern void (CODEGEN_FUNCPTR *DisableClientState)(GLenum cap);
modules/core/src/copy.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/copy.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/copy.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/copy.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/copy.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/copy.cpp:BinaryFunc copyMaskTab[] =
modules/core/src/copy.cpp:    return esz <= 32 && copyMaskTab[esz] ? copyMaskTab[esz] : copyMaskGeneric;
modules/core/src/copy.cpp:    AutoBuffer<int> _tab(size.width*esz);
modules/core/src/copy.cpp:    int* tab = _tab;
modules/core/src/copy.cpp:            tab[i*esz + k] = (int)((size.width - i - 1)*esz + k);
modules/core/src/copy.cpp:            j = tab[i];
modules/core/src/copy.cpp: * BORDER_REPLICATE:     aaaaaa|abcdefgh|hhhhhhh
modules/core/src/copy.cpp: * BORDER_REFLECT:       fedcba|abcdefgh|hgfedcb
modules/core/src/copy.cpp: * BORDER_REFLECT_101:   gfedcb|abcdefgh|gfedcba
modules/core/src/copy.cpp: * BORDER_WRAP:          cdefgh|abcdefgh|abcdefg
modules/core/src/copy.cpp: * BORDER_CONSTANT:      iiiiii|abcdefgh|iiiiiii  with some specified 'i'
modules/core/src/copy.cpp:    cv::AutoBuffer<int> _tab((dstroi.width - srcroi.width)*cn);
modules/core/src/copy.cpp:    int* tab = _tab;
modules/core/src/copy.cpp:            tab[i*cn + k] = j + k;
modules/core/src/copy.cpp:            tab[(i+left)*cn + k] = j + k;
modules/core/src/copy.cpp:                idstInner[j - left] = isrc[tab[j]];
modules/core/src/copy.cpp:                idstInner[j + srcroi.width] = isrc[tab[j + left]];
modules/core/src/copy.cpp:                dstInner[j - left] = src[tab[j]];
modules/core/src/copy.cpp:                dstInner[j + srcroi.width] = src[tab[j + left]];
modules/core/src/copy.cpp:            cvFree( &dst1->hashtable );
modules/core/src/copy.cpp:            dst1->hashtable =
modules/core/src/copy.cpp:                (void**)cvAlloc( dst1->hashsize*sizeof(dst1->hashtable[0]));
modules/core/src/copy.cpp:        memset( dst1->hashtable, 0, dst1->hashsize*sizeof(dst1->hashtable[0]));
modules/core/src/copy.cpp:            int tabidx = node->hashval & (dst1->hashsize - 1);
modules/core/src/copy.cpp:            node_copy->next = (CvSparseNode*)dst1->hashtable[tabidx];
modules/core/src/copy.cpp:            dst1->hashtable[tabidx] = node_copy;
modules/core/src/copy.cpp:        if( mat1->hashtable )
modules/core/src/copy.cpp:            memset( mat1->hashtable, 0, mat1->hashsize*sizeof(mat1->hashtable[0]));
modules/core/src/pca.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/pca.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/pca.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/pca.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/pca.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/matrix_decomp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/core/src/matrix_decomp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/core/src/matrix_decomp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/core/src/matrix_decomp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/core/src/matrix_decomp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/core/src/matrix_decomp.cpp:            if( std::abs(A[j*astep + i]) > std::abs(A[k*astep + i]) )
modules/core/src/matrix_decomp.cpp:        if( std::abs(A[k*astep + i]) < eps )
modules/ts/CMakeLists.txt:  ocv_module_disable(ts)
modules/ts/CMakeLists.txt:  # WINRT doesn't have access to environment variables
modules/ts/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wundef)
modules/ts/misc/perf_tests_timing.py:from table_formatter import *
modules/ts/misc/perf_tests_timing.py:            flist = [os.path.abspath(f) for f in glob.glob(arg)]
modules/ts/misc/perf_tests_timing.py:            fname = os.path.abspath(arg)
modules/ts/misc/perf_tests_timing.py:            file = os.path.abspath(fname)
modules/ts/misc/perf_tests_timing.py:    tbl = table()
modules/ts/misc/perf_tests_timing.py:    # output table
modules/ts/misc/perf_tests_timing.py:            tbl.htmlPrintTable(sys.stdout)
modules/ts/misc/perf_tests_timing.py:            tbl.consolePrintTable(sys.stdout)
modules/ts/misc/xls-report.py:        find the list of available colors here:
modules/ts/misc/xls-report.py:        sheet = wb.add_sheet(sheet_conf.get('sheet_name', os.path.basename(os.path.abspath(sheet_path))))
modules/ts/misc/run.py:Additional options starting with "--gtest_" and "--perf_" will be passed directly to the test executables.
modules/ts/misc/run.py:    parser.add_argument("build_path", nargs = "*", default = ["."], help="Path to build directory (should contain CMakeCache.txt, default is current) or to directory with tests (all platform checks will be disabled in this case)")
modules/ts/misc/run.py:    parser.add_argument("--list", action="store_true", default=False, help="List available tests (executables)")
modules/ts/misc/run.py:    parser.add_argument("--list_short", action="store_true", default=False, help="List available tests (aliases)")
modules/ts/misc/run.py:    parser.add_argument("--list_short_main", action="store_true", default=False, help="List available tests (main repository, aliases)")
modules/ts/misc/run.py:    parser.add_argument("--android_env", action='append', help="Android: add environment variable (NAME=VALUE)")
modules/ts/misc/run.py:    parser.add_argument("--android_propagate_opencv_env", action="store_true", default=False, help="Android: propagate OPENCV* environment variables")
modules/ts/misc/run.py:                raise Err("Not a directory (should contain CMakeCache.txt ot test executables)")
modules/ts/misc/color.py:"peachpuff": "#ffdab9",
modules/ts/misc/color.py:"olivedrab": "#6b8e23",
modules/ts/misc/table_formatter.py:class table(object):
modules/ts/misc/table_formatter.py:    def layoutTable(self):
modules/ts/misc/table_formatter.py:                cell.awailable = sum([col.minwidth for col in columns[c:c + cell.colspan]]) + cell.colspan - 1
modules/ts/misc/table_formatter.py:                if cell.awailable < cell.width:
modules/ts/misc/table_formatter.py:                total = cell.awailable - cell.colspan + 1
modules/ts/misc/table_formatter.py:                budget = cell.width - cell.awailable
modules/ts/misc/table_formatter.py:                cell.awailable = sum([row.minheight for row in self.rows[r:r + cell.rowspan]])
modules/ts/misc/table_formatter.py:                if cell.awailable < cell.height:
modules/ts/misc/table_formatter.py:                total = cell.awailable
modules/ts/misc/table_formatter.py:                budget = cell.height - cell.awailable
modules/ts/misc/table_formatter.py:    def consolePrintTable(self, out):
modules/ts/misc/table_formatter.py:        columns = self.layoutTable()
modules/ts/misc/table_formatter.py:    def htmlPrintTable(self, out, embeedcss = False):
modules/ts/misc/table_formatter.py:        columns = self.layoutTable()
modules/ts/misc/table_formatter.py:            out.write("<div style=\"font-family: Lucida Console, Courier New, Courier;font-size: 16px;color:#3e4758;\">\n<table style=\"background:none repeat scroll 0 0 #FFFFFF;border-collapse:collapse;font-family:'Lucida Sans Unicode','Lucida Grande',Sans-Serif;font-size:14px;margin:20px;text-align:left;width:480px;margin-left: auto;margin-right: auto;white-space:nowrap;\">\n")
modules/ts/misc/table_formatter.py:            out.write("<div class=\"tableFormatter\">\n<table class=\"tbl\">\n")
modules/ts/misc/table_formatter.py:        out.write(" </tbody>\n</table>\n</div>\n")
modules/ts/misc/table_formatter.py:function abs(val) { return val < 0 ? -val : val }
modules/ts/misc/table_formatter.py:  $("div.tableFormatter table.tbl").each(function(tblIdx, tbl) {
modules/ts/misc/table_formatter.py:  $("div.tableFormatter table.tbl").each(function(tblIdx, tbl) {
modules/ts/misc/table_formatter.py:metrix_table = \
modules/ts/misc/table_formatter.py:    if options.metric not in metrix_table:
modules/ts/misc/table_formatter.py:#    tbl = table()
modules/ts/misc/table_formatter.py:#        tbl.consolePrintTable(sys.stdout)
modules/ts/misc/table_formatter.py:#        tbl.htmlPrintTable(sys.stdout)
modules/ts/misc/table_formatter.py:        htmlPrintHeader(sys.stdout, "Tables demo")
modules/ts/misc/table_formatter.py:    getter = metrix_table[options.metric][1]
modules/ts/misc/table_formatter.py:        tbl = table(arg)
modules/ts/misc/table_formatter.py:        tbl.newColumn("value", metrix_table[options.metric][0], align = "center", bold = "true")
modules/ts/misc/table_formatter.py:            tbl.htmlPrintTable(sys.stdout)
modules/ts/misc/table_formatter.py:            tbl.consolePrintTable(sys.stdout)
modules/ts/misc/run_suite.py:        exe = os.path.abspath(path)
modules/ts/misc/run_suite.py:            cmd = [self.cache.ant_executable, "-Dopencv.build.type=%s" % self.cache.build_type, "buildAndTest"]
modules/ts/misc/run_suite.py:            if isColorEnabled(args):
modules/ts/misc/concatlogs.py:            files.extend([os.path.abspath(f) for f in glob.glob(arg)])
modules/ts/misc/concatlogs.py:            files.append(os.path.abspath(arg))
modules/ts/misc/summary.py:from table_formatter import *
modules/ts/misc/summary.py:    parser.add_option("", "--progress", action="store_true", dest="progress_mode", default=False, help="enable progress mode")
modules/ts/misc/summary.py:    if options.metric not in metrix_table:
modules/ts/misc/summary.py:            flist = [os.path.abspath(f) for f in glob.glob(arg)]
modules/ts/misc/summary.py:            fname = os.path.abspath(arg)
modules/ts/misc/summary.py:    # build table
modules/ts/misc/summary.py:    getter = metrix_table[options.metric][1]
modules/ts/misc/summary.py:    getter_score = metrix_table["score"][1] if options.calc_score else None
modules/ts/misc/summary.py:    getter_p = metrix_table[options.metric + "%"][1] if options.calc_relatives else None
modules/ts/misc/summary.py:    getter_cr = metrix_table[options.metric + "$"][1] if options.calc_cr else None
modules/ts/misc/summary.py:    tbl = table(metrix_table[options.metric][0])
modules/ts/misc/summary.py:    # output table
modules/ts/misc/summary.py:            tbl.htmlPrintTable(sys.stdout, True)
modules/ts/misc/summary.py:            tbl.htmlPrintTable(sys.stdout)
modules/ts/misc/summary.py:        tbl.consolePrintTable(sys.stdout)
modules/ts/misc/chart.py:from table_formatter import *
modules/ts/misc/chart.py:    if options.metric not in metrix_table:
modules/ts/misc/chart.py:    getter = metrix_table[options.metric][1]
modules/ts/misc/chart.py:                print >> sys.stderr, "Error - unable to create chart tables for functions having different argument numbers"
modules/ts/misc/chart.py:        print >> sys.stderr, "Error - unable to create tables for functions from different test suits:"
modules/ts/misc/chart.py:        tbl = table(metrix_table[options.metric][0] + " for\n" + getTestWideName(sname, indexes, arglists, x, y))
modules/ts/misc/chart.py:            tbl.htmlPrintTable(sys.stdout, options.format == "moinwiki")
modules/ts/misc/chart.py:            tbl.consolePrintTable(sys.stdout)
modules/ts/misc/run_android.py:    def checkArmHardware(self, expected_abi):
modules/ts/misc/run_android.py:        if expected_abi and "armeabi-v7a" in expected_abi:
modules/ts/misc/run_android.py:                raise Err("Android device does not support ARMv7 commands, but tests are built for armeabi-v7a")
modules/ts/misc/run_android.py:            if "NEON" in expected_abi and "neon" not in self.cpuinfo:
modules/ts/misc/run_android.py:                raise Err("Android device has no NEON, but tests are built for %s", expected_abi)
modules/ts/misc/run_android.py:        sdk_dir = options.android_sdk or os.environ.get("ANDROID_SDK", False) or os.path.dirname(os.path.dirname(self.cache.android_executable))
modules/ts/misc/run_android.py:        self.adb.checkArmHardware(self.cache.android_abi)
modules/ts/misc/run_android.py:        exe = os.path.abspath(path)
modules/ts/misc/run_android.py:            if isColorEnabled(args):
modules/ts/misc/testlog_parser.py:            self.status = "disabled"
modules/ts/misc/run_utils.py:def isColorEnabled(args):
modules/ts/misc/run_utils.py:    {'name': "git_executable",           'default': None,       'pattern': re.compile(r"^GIT_EXECUTABLE:FILEPATH=(.*)$")},
modules/ts/misc/run_utils.py:    {'name': "android_abi",              'default': None,       'pattern': re.compile(r"^ANDROID_ABI:STRING=(.*)$")},
modules/ts/misc/run_utils.py:    {'name': "android_executable",       'default': None,       'pattern': re.compile(r"^ANDROID_EXECUTABLE:FILEPATH=(.*android.*)$")},
modules/ts/misc/run_utils.py:    {'name': "ant_executable",           'default': None,       'pattern': re.compile(r"^ANT_EXECUTABLE:FILEPATH=(.*ant.*)$")},
modules/ts/misc/run_utils.py:        self.cmake_home_vcver = readGitVersion(self.git_executable, self.cmake_home)
modules/ts/misc/run_utils.py:            self.opencv_home_vcver = readGitVersion(self.git_executable, self.opencv_home)
modules/ts/misc/run_utils.py:            d = os.path.abspath(self.tests_dir)
modules/ts/misc/run_utils.py:        return self.ant_executable and self.java_test_binary_dir
modules/ts/misc/run_utils.py:        if self.android_executable:
modules/ts/misc/run_utils.py:            if "armeabi-v7a" in self.android_abi:
modules/ts/misc/run_utils.py:            elif "armeabi-v6" in self.android_abi:
modules/ts/misc/run_utils.py:            elif "armeabi" in self.android_abi:
modules/ts/misc/run_utils.py:            elif "x86" in self.android_abi:
modules/ts/misc/run_utils.py:            elif "mips" in self.android_abi:
modules/ts/misc/report.py:from table_formatter import *
modules/ts/misc/report.py:            files1.extend([os.path.abspath(f) for f in glob.glob(arg)])
modules/ts/misc/report.py:            files.append(os.path.abspath(arg))
modules/ts/misc/report.py:    tbl = table(", ".join(files))
modules/ts/misc/report.py:        metrics = [m for m in metrics if m and not m.endswith("%") and m in metrix_table]
modules/ts/misc/report.py:            tbl.newColumn(m, metrix_table[m][0])
modules/ts/misc/report.py:            tbl.newColumn(m, metrix_table[m][0], align = "center")
modules/ts/misc/report.py:                val = metrix_table[m][1](case, None, options.units)
modules/ts/misc/report.py:    # output table
modules/ts/misc/report.py:            tbl.htmlPrintTable(sys.stdout, True)
modules/ts/misc/report.py:            tbl.htmlPrintTable(sys.stdout)
modules/ts/misc/report.py:        tbl.consolePrintTable(sys.stdout)
modules/ts/include/opencv2/ts.hpp:    #pragma warning(disable:4447) // Disable warning 'main' signature found without threading model
modules/ts/include/opencv2/ts.hpp:#pragma warning( disable: 4127 ) // conditional expression is constant
modules/ts/include/opencv2/ts.hpp:#pragma warning( disable: 4503 ) // decorated name length exceeded, name was truncated
modules/ts/include/opencv2/ts.hpp:*                               Information about a failed test                           *
modules/ts/include/opencv2/ts.hpp:    // sets information about a failed test
modules/ts/include/opencv2/ts.hpp:    // information about the current test
modules/ts/include/opencv2/ts.hpp:// some of which are not available.
modules/ts/include/opencv2/ts/ocl_test.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/include/opencv2/ts/ocl_test.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/include/opencv2/ts/ocl_test.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/include/opencv2/ts/ocl_test.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/ts/include/opencv2/ts/ocl_test.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/include/opencv2/ts/ocl_test.hpp:    absdiff(mat1, mat2, diff); \
modules/ts/include/opencv2/ts/cuda_perf.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/include/opencv2/ts/cuda_perf.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/include/opencv2/ts/cuda_perf.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/include/opencv2/ts/cuda_perf.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ts/include/opencv2/ts/cuda_perf.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/include/opencv2/ts/ocl_perf.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/include/opencv2/ts/ocl_perf.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/include/opencv2/ts/ocl_perf.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/include/opencv2/ts/ocl_perf.hpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/ts/include/opencv2/ts/ocl_perf.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/include/opencv2/ts/ts_perf.hpp:*                MatType - printable wrapper over integer 'type' of Mat                   *
modules/ts/include/opencv2/ts/ts_perf.hpp:*     CV_ENUM and CV_FLAGS - macro to create printable wrappers for defines and enums     *
modules/ts/include/opencv2/ts/ts_perf.hpp:    // convert flags register to more handy variables
modules/ts/include/opencv2/ts/ts_perf.hpp:    static void Init(const std::vector<std::string> & availableImpls,
modules/ts/include/opencv2/ts/cuda_test.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/include/opencv2/ts/cuda_test.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/include/opencv2/ts/cuda_test.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/include/opencv2/ts/cuda_test.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ts/include/opencv2/ts/cuda_test.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h://                              is/isn't available.
modules/ts/include/opencv2/ts/ts_gtest.h://                              are enabled.
modules/ts/include/opencv2/ts/ts_gtest.h://                              is/isn't available (some systems define
modules/ts/include/opencv2/ts/ts_gtest.h://                              is/isn't available (some systems define
modules/ts/include/opencv2/ts/ts_gtest.h://                              expressions are/aren't available.
modules/ts/include/opencv2/ts/ts_gtest.h://                              is/isn't available.
modules/ts/include/opencv2/ts/ts_gtest.h://                              enabled.
modules/ts/include/opencv2/ts/ts_gtest.h://                              be used where std::wstring is unavailable).
modules/ts/include/opencv2/ts/ts_gtest.h://                              is/isn't available.
modules/ts/include/opencv2/ts/ts_gtest.h:// most stable support.  Since core members of the Google Test project
modules/ts/include/opencv2/ts/ts_gtest.h:// stable.  If you notice any problems on your platform, please notify
modules/ts/include/opencv2/ts/ts_gtest.h:// Macros indicating available Google Test features (defined to 1 if
modules/ts/include/opencv2/ts/ts_gtest.h://                            GTEST_HAS_POSIX_RE (see above) which users can
modules/ts/include/opencv2/ts/ts_gtest.h://                            the above two are mutually exclusive.
modules/ts/include/opencv2/ts/ts_gtest.h://   GTEST_AMBIGUOUS_ELSE_BLOCKER_ - for disabling a gcc warning.
modules/ts/include/opencv2/ts/ts_gtest.h://                              variable don't have to be used.
modules/ts/include/opencv2/ts/ts_gtest.h://   GTEST_DISALLOW_ASSIGN_   - disables operator=.
modules/ts/include/opencv2/ts/ts_gtest.h://   GTEST_DISALLOW_COPY_AND_ASSIGN_ - disables copy ctor and operator=.
modules/ts/include/opencv2/ts/ts_gtest.h://   GTEST_IS_THREADSAFE - defined to 1 to indicate that the above
modules/ts/include/opencv2/ts/ts_gtest.h://                    is not available in libCstd when compiled with Sun C++.
modules/ts/include/opencv2/ts/ts_gtest.h://   GetInjectableArgvs() - returns the command line as a vector of strings.
modules/ts/include/opencv2/ts/ts_gtest.h:// Environment variable utilities:
modules/ts/include/opencv2/ts/ts_gtest.h://   GetEnv()             - gets the value of an environment variable.
modules/ts/include/opencv2/ts/ts_gtest.h://   BoolFromGTestEnv()   - parses a bool environment variable.
modules/ts/include/opencv2/ts/ts_gtest.h://   Int32FromGTestEnv()  - parses an Int32 environment variable.
modules/ts/include/opencv2/ts/ts_gtest.h://   StringFromGTestEnv() - parses a string environment variable.
modules/ts/include/opencv2/ts/ts_gtest.h:# include <AvailabilityMacros.h>
modules/ts/include/opencv2/ts/ts_gtest.h:// probably other compilers set that too in C++11 mode.
modules/ts/include/opencv2/ts/ts_gtest.h:// mentioned above.
modules/ts/include/opencv2/ts/ts_gtest.h:// On Android, <regex.h> is only available starting with Froyo.
modules/ts/include/opencv2/ts/ts_gtest.h:// <regex.h> is not available on Windows.  Use our own simple regex
modules/ts/include/opencv2/ts/ts_gtest.h:// <regex.h> may not be available on this platform.  Use our own
modules/ts/include/opencv2/ts/ts_gtest.h:// The user didn't tell us whether exceptions are enabled, so we need
modules/ts/include/opencv2/ts/ts_gtest.h:// macro to enable exceptions, so we'll do the same.
modules/ts/include/opencv2/ts/ts_gtest.h:// Assumes that exceptions are enabled by default.
modules/ts/include/opencv2/ts/ts_gtest.h:// gcc defines __EXCEPTIONS to 1 iff exceptions are enabled.
modules/ts/include/opencv2/ts/ts_gtest.h:// detecting whether they are enabled or not.  Therefore, we assume that
modules/ts/include/opencv2/ts/ts_gtest.h:// they are enabled unless the user tells us otherwise.
modules/ts/include/opencv2/ts/ts_gtest.h:// xlC defines __EXCEPTIONS to 1 iff exceptions are enabled.
modules/ts/include/opencv2/ts/ts_gtest.h:// For other compilers, we assume exceptions are disabled to be
modules/ts/include/opencv2/ts/ts_gtest.h:// The user told us that ::std::string isn't available.
modules/ts/include/opencv2/ts/ts_gtest.h:# error "Google Test cannot be used where ::std::string isn't available."
modules/ts/include/opencv2/ts/ts_gtest.h:// The user didn't tell us whether ::string is available, so we need
modules/ts/include/opencv2/ts/ts_gtest.h:// The user didn't tell us whether ::std::wstring is available, so we need
modules/ts/include/opencv2/ts/ts_gtest.h://   is available.
modules/ts/include/opencv2/ts/ts_gtest.h:// The user didn't tell us whether ::wstring is available, so we need
modules/ts/include/opencv2/ts/ts_gtest.h:// Determines whether RTTI is available.
modules/ts/include/opencv2/ts/ts_gtest.h:// The user didn't tell us whether RTTI is enabled, so we need to
modules/ts/include/opencv2/ts/ts_gtest.h:#  ifdef _CPPRTTI  // MSVC defines this macro iff RTTI is enabled.
modules/ts/include/opencv2/ts/ts_gtest.h:// Starting with version 4.3.2, gcc defines __GXX_RTTI iff RTTI is enabled.
modules/ts/include/opencv2/ts/ts_gtest.h:// so disable RTTI when detected.
modules/ts/include/opencv2/ts/ts_gtest.h:// For all other compilers, we assume RTTI is enabled.
modules/ts/include/opencv2/ts/ts_gtest.h:// is enabled.
modules/ts/include/opencv2/ts/ts_gtest.h:// available on Linux and Mac.
modules/ts/include/opencv2/ts/ts_gtest.h:// To disable threading support in Google Test, add -DGTEST_HAS_PTHREAD=0
modules/ts/include/opencv2/ts/ts_gtest.h:// feature depending on tuple with be disabled in this mode).
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// Sun Studio versions < 12 also have the above bug.
modules/ts/include/opencv2/ts/ts_gtest.h:// disabled.  _TR1_FUNCTIONAL is the header guard for
modules/ts/include/opencv2/ts/ts_gtest.h:// Usually it will only be available on Linux, excluding
modules/ts/include/opencv2/ts/ts_gtest.h:// On Android, clone() is only available on ARM starting with Gingerbread.
modules/ts/include/opencv2/ts/ts_gtest.h:// abort() in a VC 7.1 application compiled as GUI in debug config
modules/ts/include/opencv2/ts/ts_gtest.h:// We don't support MSVC 7.1 with exceptions disabled now.  Therefore
modules/ts/include/opencv2/ts/ts_gtest.h:// all the compilers we care about are adequate for supporting
modules/ts/include/opencv2/ts/ts_gtest.h:// value-parameterized tests are enabled.  The implementation doesn't
modules/ts/include/opencv2/ts/ts_gtest.h:// Also use it after a variable or parameter declaration to tell the
modules/ts/include/opencv2/ts/ts_gtest.h:// compiler the variable/parameter does not have to be used.
modules/ts/include/opencv2/ts/ts_gtest.h:// Tell the compiler to warn about unused return values for functions declared
modules/ts/include/opencv2/ts/ts_gtest.h:// A secret type that Google Test users don't know about.  It has no
modules/ts/include/opencv2/ts/ts_gtest.h:// The second argument to the macro is the name of the variable. If
modules/ts/include/opencv2/ts/ts_gtest.h:// containing the name of the variable.
modules/ts/include/opencv2/ts/ts_gtest.h://   does not work, as gcc supports variable-length arrays whose sizes
modules/ts/include/opencv2/ts/ts_gtest.h:  // used where std::string is not available.  TODO(wan@google.com): change to
modules/ts/include/opencv2/ts/ts_gtest.h:  // Flushes the buffers and, if severity is GTEST_FATAL, aborts the program.
modules/ts/include/opencv2/ts/ts_gtest.h:// GTEST_CHECK_ is an all-mode assert. It aborts the program if the condition
modules/ts/include/opencv2/ts/ts_gtest.h://    it prints message about the condition violation, including the
modules/ts/include/opencv2/ts/ts_gtest.h://    and then it aborts the program. It aborts the program irrespective of
modules/ts/include/opencv2/ts/ts_gtest.h:// instead of an argument type convertable to a target type.
modules/ts/include/opencv2/ts/ts_gtest.h:// but the proposal was submitted too late.  It will probably make
modules/ts/include/opencv2/ts/ts_gtest.h:// When RTTI is available, the function performs a runtime
modules/ts/include/opencv2/ts/ts_gtest.h:const ::std::vector<testing::internal::string>& GetInjectableArgvs();
modules/ts/include/opencv2/ts/ts_gtest.h:void SetInjectableArgvs(const ::std::vector<testing::internal::string>*
modules/ts/include/opencv2/ts/ts_gtest.h:  // with high probability.
modules/ts/include/opencv2/ts/ts_gtest.h:  // must be able to initialize a static mutex object at link time.
modules/ts/include/opencv2/ts/ts_gtest.h:  // This means MutexBase has to be a POD and its member variables
modules/ts/include/opencv2/ts/ts_gtest.h:// and thread-local variable).  Necessary for compiling Google Test where
modules/ts/include/opencv2/ts/ts_gtest.h:// The above synchronization primitives have dummy implementations.
modules/ts/include/opencv2/ts/ts_gtest.h:// for objects passed through ellipsis (...), failing for uncopyable
modules/ts/include/opencv2/ts/ts_gtest.h:// Temporarily disable warning 4996 (deprecated function).
modules/ts/include/opencv2/ts/ts_gtest.h:# pragma warning(disable:4996)
modules/ts/include/opencv2/ts/ts_gtest.h:  // We are on Windows CE, which has no environment variables.
modules/ts/include/opencv2/ts/ts_gtest.h:  // Environment variables which we programmatically clear will be set to the
modules/ts/include/opencv2/ts/ts_gtest.h:// Windows CE has no C library. The abort() function is used in
modules/ts/include/opencv2/ts/ts_gtest.h:// several places in Google Test. This implementation provides a reasonable
modules/ts/include/opencv2/ts/ts_gtest.h:inline void Abort() { abort(); }
modules/ts/include/opencv2/ts/ts_gtest.h:// MSVC 2005 and above support variadic macros.
modules/ts/include/opencv2/ts/ts_gtest.h:// complain about _snprintf.
modules/ts/include/opencv2/ts/ts_gtest.h:// Utilities for command line flags and environment variables.
modules/ts/include/opencv2/ts/ts_gtest.h:// Parses a bool/Int32/string from the environment variable
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:  // templatized version above.  Without this definition, streaming
modules/ts/include/opencv2/ts/ts_gtest.h:    // See the comments in Message& operator <<(const T&) above for why
modules/ts/include/opencv2/ts/ts_gtest.h:// Converts a streamable value to an std::string.  A NULL pointer is
modules/ts/include/opencv2/ts/ts_gtest.h:std::string StreamableToString(const T& streamable) {
modules/ts/include/opencv2/ts/ts_gtest.h:  return (Message() << streamable).GetString();
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// String - an abstract class holding static string utilities.
modules/ts/include/opencv2/ts/ts_gtest.h:  // able to pass strings to Win32 APIs on CE we need to convert them
modules/ts/include/opencv2/ts/ts_gtest.h:  // environment variable. On GNU platform this method uses wcscasecmp
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// "immutable value object" -- useful for peace of mind.
modules/ts/include/opencv2/ts/ts_gtest.h:  // the directories already exist; returns false if unable to create
modules/ts/include/opencv2/ts/ts_gtest.h:  // if the directory already exists; returns false if unable to create the
modules/ts/include/opencv2/ts/ts_gtest.h:  // Returns true if pathname describes an absolute path.
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// libstdc++ (which is where cxxabi.h comes from).
modules/ts/include/opencv2/ts/ts_gtest.h:#  include <cxxabi.h>
modules/ts/include/opencv2/ts/ts_gtest.h:// GetTypeName<T>() returns a human-readable name of type T.
modules/ts/include/opencv2/ts/ts_gtest.h:  using abi::__cxa_demangle;
modules/ts/include/opencv2/ts/ts_gtest.h:  char* const readable_name = __cxa_demangle(name, 0, 0, &status);
modules/ts/include/opencv2/ts/ts_gtest.h:  const std::string name_str(status == 0 ? readable_name : name);
modules/ts/include/opencv2/ts/ts_gtest.h:  free(readable_name);
modules/ts/include/opencv2/ts/ts_gtest.h:// readable.  The translation is done by the 'type' member of the
modules/ts/include/opencv2/ts/ts_gtest.h:// readable.  The translation is done by the 'type' member of the
modules/ts/include/opencv2/ts/ts_gtest.h:class TestInfo;                        // Information about a test.
modules/ts/include/opencv2/ts/ts_gtest.h:struct TraceInfo;                      // Information about a trace point.
modules/ts/include/opencv2/ts/ts_gtest.h:// are enabled).  We derive it from std::runtime_error, which is for
modules/ts/include/opencv2/ts/ts_gtest.h:// errors presumably detectable only at run time.  Since
modules/ts/include/opencv2/ts/ts_gtest.h:# pragma warning(disable:4275)  // Temporarily disables warning 4275.
modules/ts/include/opencv2/ts/ts_gtest.h:  // Returns the maximum representable finite floating-point number.
modules/ts/include/opencv2/ts/ts_gtest.h:  //   -N + 1 (the most negative number representable using
modules/ts/include/opencv2/ts/ts_gtest.h:  //   N - 1  (the biggest number representable using
modules/ts/include/opencv2/ts/ts_gtest.h:  // TypeIdHelper<T>::dummy_ variable for each T used to instantiate
modules/ts/include/opencv2/ts/ts_gtest.h:// Defines the abstract factory interface that creates instances
modules/ts/include/opencv2/ts/ts_gtest.h:  // if the test case hasn't been registered; otherwise aborts the
modules/ts/include/opencv2/ts/ts_gtest.h:  // aborts the program otherwise.
modules/ts/include/opencv2/ts/ts_gtest.h:         + StreamableToString(index)).c_str(),
modules/ts/include/opencv2/ts/ts_gtest.h:// Helpers for suppressing warnings on unreachable code or constant
modules/ts/include/opencv2/ts/ts_gtest.h:// variable declared in a conditional expression always being NULL in
modules/ts/include/opencv2/ts/ts_gtest.h:// code).  Unlike rand_r(), it's portable.  An LCG isn't very random,
modules/ts/include/opencv2/ts/ts_gtest.h:// Defining a variable of type CompileAssertTypesEqual<T1, T2> will cause a
modules/ts/include/opencv2/ts/ts_gtest.h:// tr1::remove_reference, which is not widely available yet.
modules/ts/include/opencv2/ts/ts_gtest.h:// widely available yet.
modules/ts/include/opencv2/ts/ts_gtest.h:// MSVC 8.0, Sun C++, and IBM XL C++ have a bug which causes the above
modules/ts/include/opencv2/ts/ts_gtest.h:// tr1::add_reference, which is not widely available yet.
modules/ts/include/opencv2/ts/ts_gtest.h:  // MSVC warns about implicitly converting from double to int for
modules/ts/include/opencv2/ts/ts_gtest.h:  // possible loss of data, so we need to temporarily disable the
modules/ts/include/opencv2/ts/ts_gtest.h:# pragma warning(disable:4244)  // Temporarily disables warning 4244.
modules/ts/include/opencv2/ts/ts_gtest.h:  // functions (C++Builder 2009 and above only).
modules/ts/include/opencv2/ts/ts_gtest.h:// will be viable (since both C::iterator* and C::const_iterator* are
modules/ts/include/opencv2/ts/ts_gtest.h:// a valid type, the first overload is not viable, and the second
modules/ts/include/opencv2/ts/ts_gtest.h:// EnableIf<condition>::type is void when 'Cond' is true, and
modules/ts/include/opencv2/ts/ts_gtest.h:// "typename EnableIf<expression>::type* = 0" as the last parameter.
modules/ts/include/opencv2/ts/ts_gtest.h:template<bool> struct EnableIf;
modules/ts/include/opencv2/ts/ts_gtest.h:template<> struct EnableIf<true> { typedef void type; };  // NOLINT
modules/ts/include/opencv2/ts/ts_gtest.h:// Suppresses MSVC warnings 4072 (unreachable code) for the code following
modules/ts/include/opencv2/ts/ts_gtest.h:      goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \
modules/ts/include/opencv2/ts/ts_gtest.h:      goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \
modules/ts/include/opencv2/ts/ts_gtest.h:    GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__): \
modules/ts/include/opencv2/ts/ts_gtest.h:      goto GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__); \
modules/ts/include/opencv2/ts/ts_gtest.h:    GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__): \
modules/ts/include/opencv2/ts/ts_gtest.h:      goto GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__); \
modules/ts/include/opencv2/ts/ts_gtest.h:    GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__): \
modules/ts/include/opencv2/ts/ts_gtest.h:      goto GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__); \
modules/ts/include/opencv2/ts/ts_gtest.h:    GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__): \
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// GTEST_DEATH_TEST_ macro.  It is abstract; its static Create method
modules/ts/include/opencv2/ts/ts_gtest.h:  // A helper class that aborts a death test when it's deleted.
modules/ts/include/opencv2/ts/ts_gtest.h:  // An enumeration of the three reasons that a test might be aborted.
modules/ts/include/opencv2/ts/ts_gtest.h:  // Assumes one of the above roles.
modules/ts/include/opencv2/ts/ts_gtest.h:  // Returns a human-readable outcome message regarding the outcome of
modules/ts/include/opencv2/ts/ts_gtest.h:      goto GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__); \
modules/ts/include/opencv2/ts/ts_gtest.h:            goto GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__); \
modules/ts/include/opencv2/ts/ts_gtest.h:    GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__): \
modules/ts/include/opencv2/ts/ts_gtest.h://  never executed. The unreachable code macro protects the terminator
modules/ts/include/opencv2/ts/ts_gtest.h://  statement from generating an 'unreachable code' warning in case
modules/ts/include/opencv2/ts/ts_gtest.h://   above syntax.
modules/ts/include/opencv2/ts/ts_gtest.h://   /absolute/path/to/bar_test are fine, but foo_test is not).  This
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// copyable type. If it's a raw pointer, you are responsible for managing the
modules/ts/include/opencv2/ts/ts_gtest.h:// instantiations. The tests from the instantiation above will have
modules/ts/include/opencv2/ts/ts_gtest.h:// The tests from the instantiation above will have these names:
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:  // variable p in the same circle as this object.  Therefore we need
modules/ts/include/opencv2/ts/ts_gtest.h:  // contention in production code, but is acceptable in a testing
modules/ts/include/opencv2/ts/ts_gtest.h:  mutable linked_ptr_internal const* next_;
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// If none of the above is defined, it will print the debug string of
modules/ts/include/opencv2/ts/ts_gtest.h://   // element for each field. Tuple support must be enabled in
modules/ts/include/opencv2/ts/ts_gtest.h:// DebugString() for better readability.
modules/ts/include/opencv2/ts/ts_gtest.h:// what UniversalPrinter<T>::Print() does when it knows nothing about
modules/ts/include/opencv2/ts/ts_gtest.h:  //   3. testing::internal2::operator<< (thanks to the using statement above).
modules/ts/include/opencv2/ts/ts_gtest.h:// variable pointer or member function pointer doesn't really point to
modules/ts/include/opencv2/ts/ts_gtest.h:    // "unreachable code".
modules/ts/include/opencv2/ts/ts_gtest.h:// Foo is not desirable (e.g. the coding style may prevent doing it,
modules/ts/include/opencv2/ts/ts_gtest.h:// Prints a wchar_t as a symbol if it is printable or as its internal
modules/ts/include/opencv2/ts/ts_gtest.h:  // MSVC warns about adding const to a function type, so we want to
modules/ts/include/opencv2/ts/ts_gtest.h:  // disable the warning.
modules/ts/include/opencv2/ts/ts_gtest.h:# pragma warning(disable:4180)  // Temporarily disables warning 4180.
modules/ts/include/opencv2/ts/ts_gtest.h:  // MSVC warns about adding const to a function type, so we want to
modules/ts/include/opencv2/ts/ts_gtest.h:  // disable the warning.
modules/ts/include/opencv2/ts/ts_gtest.h:# pragma warning(disable:4180)  // Temporarily disables warning 4180.
modules/ts/include/opencv2/ts/ts_gtest.h:// of the original object. This is possible because that instance is immutable.
modules/ts/include/opencv2/ts/ts_gtest.h:// Generates values from a range of two comparable values. Can be used to
modules/ts/include/opencv2/ts/ts_gtest.h:    // value_ needs to be mutable to be accessed in Current().
modules/ts/include/opencv2/ts/ts_gtest.h:    mutable scoped_ptr<const T> value_;
modules/ts/include/opencv2/ts/ts_gtest.h:  // about a single test in a LocalTestInfo structure.
modules/ts/include/opencv2/ts/ts_gtest.h:  // about a generator.
modules/ts/include/opencv2/ts/ts_gtest.h:  // LocalTestInfo structure keeps information about a single test registered
modules/ts/include/opencv2/ts/ts_gtest.h:  // Looks up or creates and returns a structure containing information about
modules/ts/include/opencv2/ts/ts_gtest.h:          // Complain about incorrect usage of Google Test facilities
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// Used in the Values() function to provide polymorphic capabilities.
modules/ts/include/opencv2/ts/ts_gtest.h://     * It must be assignable (have operator=() defined).
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// A copyable object representing the result of a test part (i.e. an
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// Type-parameterized tests are abstract test patterns parameterized
modules/ts/include/opencv2/ts/ts_gtest.h:// want.  If you put the above code in a header file, you can #include
modules/ts/include/opencv2/ts/ts_gtest.h:// Expands to the name of the variable used to remember the names of
modules/ts/include/opencv2/ts/ts_gtest.h:// Expands to the name of the variable used to remember the names of
modules/ts/include/opencv2/ts/ts_gtest.h:// The variables defined in the type-parameterized test macros are
modules/ts/include/opencv2/ts/ts_gtest.h:// Depending on the platform, different string classes are available.
modules/ts/include/opencv2/ts/ts_gtest.h:// ::string is available AND is a distinct type to ::std::string, or
modules/ts/include/opencv2/ts/ts_gtest.h:// This flag temporary enables the disabled tests.
modules/ts/include/opencv2/ts/ts_gtest.h:GTEST_DECLARE_bool_(also_run_disabled_tests);
modules/ts/include/opencv2/ts/ts_gtest.h:// This flag enables using colors in terminal output. Available values are
modules/ts/include/opencv2/ts/ts_gtest.h:// "yes" to enable colors, "no" (disable colors), or "auto" (the default)
modules/ts/include/opencv2/ts/ts_gtest.h:// exception if exceptions are enabled, or exit the program with a
modules/ts/include/opencv2/ts/ts_gtest.h:// about half as often as positive ones in our tests), supply messages for
modules/ts/include/opencv2/ts/ts_gtest.h:// The abstract class that all tests inherit from.
modules/ts/include/opencv2/ts/ts_gtest.h:// Test is not copyable.
modules/ts/include/opencv2/ts/ts_gtest.h:  // If you see an error about overriding the following function or
modules/ts/include/opencv2/ts/ts_gtest.h:  // about it being private, you have mis-spelled SetUp() as Setup().
modules/ts/include/opencv2/ts/ts_gtest.h:// A copyable object representing a user specified test property which can be
modules/ts/include/opencv2/ts/ts_gtest.h:// TestResult is not copyable.
modules/ts/include/opencv2/ts/ts_gtest.h:  // from 0 to test_property_count() - 1. If i is not in that range, aborts
modules/ts/include/opencv2/ts/ts_gtest.h:  // test_property_count() - 1. If i is not in that range, aborts the
modules/ts/include/opencv2/ts/ts_gtest.h:  // TODO(russr): Validate attribute names are legal and human readable.
modules/ts/include/opencv2/ts/ts_gtest.h:  // Protects mutable state of the property vector and of owned
modules/ts/include/opencv2/ts/ts_gtest.h:// A TestInfo object stores the following information about a test:
modules/ts/include/opencv2/ts/ts_gtest.h:  // disabled (or it is disabled but the also_run_disabled_tests flag has
modules/ts/include/opencv2/ts/ts_gtest.h:  bool is_reportable() const {
modules/ts/include/opencv2/ts/ts_gtest.h:  // These fields are immutable properties of the test.
modules/ts/include/opencv2/ts/ts_gtest.h:  bool is_disabled_;                // True iff this test is disabled
modules/ts/include/opencv2/ts/ts_gtest.h:  // This field is mutable and needs to be reset before running the
modules/ts/include/opencv2/ts/ts_gtest.h:// TestCase is not copyable.
modules/ts/include/opencv2/ts/ts_gtest.h:  // Gets the number of disabled tests that will be reported in the XML report.
modules/ts/include/opencv2/ts/ts_gtest.h:  int reportable_disabled_test_count() const;
modules/ts/include/opencv2/ts/ts_gtest.h:  // Gets the number of disabled tests in this test case.
modules/ts/include/opencv2/ts/ts_gtest.h:  int disabled_test_count() const;
modules/ts/include/opencv2/ts/ts_gtest.h:  int reportable_test_count() const;
modules/ts/include/opencv2/ts/ts_gtest.h:  // Gets the (mutable) vector of TestInfos in this TestCase.
modules/ts/include/opencv2/ts/ts_gtest.h:  // Gets the (immutable) vector of TestInfos in this TestCase.
modules/ts/include/opencv2/ts/ts_gtest.h:  TestInfo* GetMutableTestInfo(int i);
modules/ts/include/opencv2/ts/ts_gtest.h:  // Returns true iff the test is disabled and will be reported in the XML
modules/ts/include/opencv2/ts/ts_gtest.h:  static bool TestReportableDisabled(const TestInfo* test_info) {
modules/ts/include/opencv2/ts/ts_gtest.h:    return test_info->is_reportable() && test_info->is_disabled_;
modules/ts/include/opencv2/ts/ts_gtest.h:  // Returns true iff test is disabled.
modules/ts/include/opencv2/ts/ts_gtest.h:  static bool TestDisabled(const TestInfo* test_info) {
modules/ts/include/opencv2/ts/ts_gtest.h:    return test_info->is_disabled_;
modules/ts/include/opencv2/ts/ts_gtest.h:  static bool TestReportable(const TestInfo* test_info) {
modules/ts/include/opencv2/ts/ts_gtest.h:    return test_info->is_reportable();
modules/ts/include/opencv2/ts/ts_gtest.h:// An Environment object is capable of setting up and tearing down an
modules/ts/include/opencv2/ts/ts_gtest.h://      as in some cases Google Test is used where exceptions are enabled, and
modules/ts/include/opencv2/ts/ts_gtest.h://      available.
modules/ts/include/opencv2/ts/ts_gtest.h:  // If you see an error about overriding the following function or
modules/ts/include/opencv2/ts/ts_gtest.h:  // about it being private, you have mis-spelled SetUp() as Setup().
modules/ts/include/opencv2/ts/ts_gtest.h:// comments about each method please see the definition of TestEventListener
modules/ts/include/opencv2/ts/ts_gtest.h:// above.
modules/ts/include/opencv2/ts/ts_gtest.h:  bool EventForwardingEnabled() const;
modules/ts/include/opencv2/ts/ts_gtest.h:// UnitTest is not copyable.
modules/ts/include/opencv2/ts/ts_gtest.h:  // Gets the number of disabled tests that will be reported in the XML report.
modules/ts/include/opencv2/ts/ts_gtest.h:  int reportable_disabled_test_count() const;
modules/ts/include/opencv2/ts/ts_gtest.h:  // Gets the number of disabled tests.
modules/ts/include/opencv2/ts/ts_gtest.h:  int disabled_test_count() const;
modules/ts/include/opencv2/ts/ts_gtest.h:  int reportable_test_count() const;
modules/ts/include/opencv2/ts/ts_gtest.h:  TestCase* GetMutableTestCase(int i);
modules/ts/include/opencv2/ts/ts_gtest.h:  // Protects mutable state in *impl_.  This is mutable as some const
modules/ts/include/opencv2/ts/ts_gtest.h:  mutable internal::Mutex mutex_;
modules/ts/include/opencv2/ts/ts_gtest.h:  // Mutable state in *impl_ is protected by mutex_.
modules/ts/include/opencv2/ts/ts_gtest.h:// You should call this before RUN_ALL_TESTS() is called, probably in
modules/ts/include/opencv2/ts/ts_gtest.h:// variable like this:
modules/ts/include/opencv2/ts/ts_gtest.h:// of global variables makes the code harder to read and may cause
modules/ts/include/opencv2/ts/ts_gtest.h:// global variables from different translation units are initialized).
modules/ts/include/opencv2/ts/ts_gtest.h:// No value is returned.  Instead, the Google Test flag variables are
modules/ts/include/opencv2/ts/ts_gtest.h:# pragma warning(disable:4389)  // Temporarily disables warning on
modules/ts/include/opencv2/ts/ts_gtest.h:  // Even though its body looks the same as the above version, we
modules/ts/include/opencv2/ts/ts_gtest.h:      typename EnableIf<!is_pointer<T2>::value>::type* = 0) {
modules/ts/include/opencv2/ts/ts_gtest.h:      // than the first overload even without the first overload's EnableIf.
modules/ts/include/opencv2/ts/ts_gtest.h:                                                const char* abs_error_expr,
modules/ts/include/opencv2/ts/ts_gtest.h:                                                double abs_error);
modules/ts/include/opencv2/ts/ts_gtest.h:// A class that enables one to stream messages to assertion macros
modules/ts/include/opencv2/ts/ts_gtest.h:  // Message assignment is a semantic trick to enable assertion
modules/ts/include/opencv2/ts/ts_gtest.h:  // be as small as possible.  This is important because gcc is incapable of
modules/ts/include/opencv2/ts/ts_gtest.h:  // re-using stack space even for temporary variables, so every EXPECT_EQ
modules/ts/include/opencv2/ts/ts_gtest.h:  // The current parameter value. Is also available in the test fixture's
modules/ts/include/opencv2/ts/ts_gtest.h:// that they will also abort the current function on failure.  People
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions of source code must retain the above copyright
modules/ts/include/opencv2/ts/ts_gtest.h://     * Redistributions in binary form must reproduce the above
modules/ts/include/opencv2/ts/ts_gtest.h:// If you don't care about formatting, you can use the more
modules/ts/include/opencv2/ts/ts_gtest.h://    * {ASSERT|EXPECT}_NEAR(v1, v2, abs_error):
modules/ts/include/opencv2/ts/ts_gtest.h:#define EXPECT_NEAR(val1, val2, abs_error)\
modules/ts/include/opencv2/ts/ts_gtest.h:                      val1, val2, abs_error)
modules/ts/include/opencv2/ts/ts_gtest.h:#define ASSERT_NEAR(val1, val2, abs_error)\
modules/ts/include/opencv2/ts/ts_gtest.h:                      val1, val2, abs_error)
modules/ts/include/opencv2/ts/ts_gtest.h:// expected result and the actual result with both a human-readable
modules/ts/include/opencv2/ts/ts_gtest.h:// string representation of the error, if available, as well as the
modules/ts/include/opencv2/ts/ts_gtest.h:// The message argument can be anything streamable to std::ostream.
modules/ts/include/opencv2/ts/ts_gtest.h:// of the dummy variable name, thus allowing multiple SCOPED_TRACE()s
modules/ts/src/ocl_test.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/src/ocl_test.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/src/ocl_test.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/src/ocl_test.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/ts/src/ocl_test.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/src/ocl_test.cpp:            DUMP_MESSAGE_STDOUT("OpenCL is disabled");
modules/ts/src/ocl_test.cpp:            DUMP_PROPERTY_XML("cv_ocl", "disabled");
modules/ts/src/ocl_test.cpp:            DUMP_MESSAGE_STDOUT("OpenCL is not available");
modules/ts/src/ocl_test.cpp:            DUMP_PROPERTY_XML("cv_ocl", "not available");
modules/ts/src/ocl_test.cpp:        if (!device.available())
modules/ts/src/ocl_test.cpp:            CV_ErrorNoReturn(CV_OpenCLInitError, "OpenCL device is not available");
modules/ts/src/ocl_test.cpp:        DUMP_MESSAGE_STDOUT("OpenCL device not available");
modules/ts/src/ocl_test.cpp:        DUMP_PROPERTY_XML("cv_ocl", "not available");
modules/ts/src/ocl_test.cpp:    return std::abs(diff.at<float>(0, 0) - 1.f);
modules/ts/src/ocl_test.cpp:    absdiff(gold, actual, diff);
modules/ts/src/ocl_perf.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/src/ocl_perf.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/src/ocl_perf.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/src/ocl_perf.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/ts/src/ocl_perf.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/src/ts_arrtest.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/src/ts_arrtest.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/src/ts_arrtest.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/src/ts_arrtest.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ts/src/ts_arrtest.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/src/ts.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/src/ts.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/src/ts.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/src/ts.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ts/src/ts.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/src/ts.cpp:#undef abs
modules/ts/src/ts.cpp:        std::cout << "\nAvailable options besides google test option: \n";
modules/ts/src/ts_perf.cpp:static std::vector<std::string> available_impls;
modules/ts/src/ts_perf.cpp:        err=err;//to avoid warnings about unused variables
modules/ts/src/ts_perf.cpp:static double perf_stability_criteria = 0.03; // 3%
modules/ts/src/ts_perf.cpp:        eps *= std::max(std::abs(expect_min), std::abs(expect_max));
modules/ts/src/ts_perf.cpp:    cv::Mat expected_abs = cv::abs(expected.reshape(1));
modules/ts/src/ts_perf.cpp:    cv::Mat actual_abs = cv::abs(actual.reshape(1));
modules/ts/src/ts_perf.cpp:    cv::max(expected_abs, actual_abs, maximum);
modules/ts/src/ts_perf.cpp:                cv::absdiff(expected, actual, diff);
modules/ts/src/ts_perf.cpp:                cv::absdiff(expected, actual, diff);
modules/ts/src/ts_perf.cpp:static bool perf_validation_enabled = false;
modules/ts/src/ts_perf.cpp:void TestBase::Init(const std::vector<std::string> & availableImpls,
modules/ts/src/ts_perf.cpp:    available_impls = availableImpls;
modules/ts/src/ts_perf.cpp:        "{   perf_threads                |-1       |the number of worker threads, if parallel execution is enabled}"
modules/ts/src/ts_perf.cpp:        "{   perf_impl                   |" + available_impls[0] +
modules/ts/src/ts_perf.cpp:        "{   perf_list_impls             |false    |list available implementation variants and exit}"
modules/ts/src/ts_perf.cpp:        "{   perf_collect_impl           |false    |collect info about executed implementations}"
modules/ts/src/ts_perf.cpp:        "{   perf_cuda_device            |0        |run CUDA test suite onto specific CUDA capable device}"
modules/ts/src/ts_perf.cpp:        "{   perf_cuda_info_only         |false    |print an information about system and an available CUDA devices and then exit.}"
modules/ts/src/ts_perf.cpp:        fputs("Available implementation variants:", stdout);
modules/ts/src/ts_perf.cpp:        for (size_t i = 0; i < available_impls.size(); ++i) {
modules/ts/src/ts_perf.cpp:            fputs(available_impls[i].c_str(), stdout);
modules/ts/src/ts_perf.cpp:    if (std::find(available_impls.begin(), available_impls.end(), param_impl) == available_impls.end())
modules/ts/src/ts_perf.cpp:    if (available_impls.size() > 1)
modules/ts/src/ts_perf.cpp:    param_cuda_device      = std::max(0, std::min(cv::cuda::getCudaEnabledDeviceCount(), args.get<int>("perf_cuda_device")));
modules/ts/src/ts_perf.cpp:        perf_validation_enabled = true;
modules/ts/src/ts_perf.cpp:        perf_validation_enabled = true;
modules/ts/src/ts_perf.cpp:# pragma warning(disable:4355)  // 'this' : used in base member initializer list
modules/ts/src/ts_perf.cpp:            if (fabs(metrics.mean) > 1e-6)
modules/ts/src/ts_perf.cpp:                has_next = metrics.stddev > perf_stability_criteria * fabs(metrics.mean);
modules/ts/src/ts_perf.cpp:    if (perf_validation_enabled && !has_next)
modules/ts/src/ts_perf.cpp:                isSame = fabs(median_ms - prev_result) <= perf_validation_criteria * fabs(median_ms);
modules/ts/src/ts_perf.cpp:                            (grow || metrics.stddev > perf_stability_criteria * fabs(metrics.mean)))
modules/ts/src/ts_perf.cpp:                        printf("Performance is unstable, it may be a result of overheat problems\n");
modules/ts/src/ts_perf.cpp:          << "  Only a few samples are collected.\nPlease increase number of iterations or/and time limit to get reliable performance measurements.";
modules/ts/src/ts_perf.cpp:              << "  Test results are not reliable ((mean-sigma,mean+sigma) deviation interval is greater than measured time interval).";
modules/ts/src/ts_perf.cpp:          << "  Test results are not reliable (too many outliers).";
modules/ts/src/ts_perf.cpp:            LOGD("termination reason:  aborted by the performance testing framework");
modules/ts/src/cuda_perf.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/src/cuda_perf.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/src/cuda_perf.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/src/cuda_perf.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ts/src/cuda_perf.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/src/cuda_perf.cpp:            "BGR2Lab",
modules/ts/src/cuda_perf.cpp:            "RGB2Lab",
modules/ts/src/cuda_perf.cpp:            "Lab2BGR",
modules/ts/src/cuda_perf.cpp:            "Lab2RGB",
modules/ts/src/cuda_perf.cpp:            "LBGR2Lab",
modules/ts/src/cuda_perf.cpp:            "LRGB2Lab",
modules/ts/src/cuda_perf.cpp:            "Lab2LBGR",
modules/ts/src/cuda_perf.cpp:            "Lab2LRGB",
modules/ts/src/cuda_perf.cpp:        for (int i = 0; i < cv::cuda::getCudaEnabledDeviceCount(); i++)
modules/ts/src/cuda_test.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ts/src/cuda_test.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ts/src/cuda_test.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ts/src/cuda_test.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ts/src/cuda_test.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ts/src/cuda_test.cpp:        if (i < 0 || i >= getCudaEnabledDeviceCount())
modules/ts/src/cuda_test.cpp:        int deviceCount = getCudaEnabledDeviceCount();
modules/ts/src/cuda_test.cpp:            std::cout << "\nAvailable options besides google test option: \n";
modules/ts/src/cuda_test.cpp:        absdiff(m1.reshape(1), m2.reshape(1), diff);
modules/ts/src/cuda_test.cpp:        return std::abs(diff.at<float>(0, 0) - 1.f);
modules/ts/src/cuda_test.cpp:        absdiff(gold, actual, diff);
modules/ts/src/cuda_test.cpp:                fabs(p1.size - p2.size) < maxSizeDif &&
modules/ts/src/cuda_test.cpp:                abs(p1.angle - p2.angle) < maxAngleDif &&
modules/ts/src/cuda_test.cpp:                abs(p1.response - p2.response) < maxResponseDif &&
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp:// Sometimes it's desirable to build Google Test by compiling a single file.
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp:  // Same as above, but you can choose the interception scope of this object.
modules/ts/src/ts_gtest.cpp:// throws an exception or aborts the current function.
modules/ts/src/ts_gtest.cpp://   - 'statement' cannot reference local non-static variables or
modules/ts/src/ts_gtest.cpp:// 'statement' is allowed to reference local variables and members of
modules/ts/src/ts_gtest.cpp:// throws an exception or aborts the current function.
modules/ts/src/ts_gtest.cpp:// to avoid an MSVC warning on unreachable code.
modules/ts/src/ts_gtest.cpp:// TODO(kenton@google.com): Use autoconf to detect availability of
modules/ts/src/ts_gtest.cpp:// Declares vsnprintf().  This header is not available on Windows.
modules/ts/src/ts_gtest.cpp:// TODO(kenton@google.com): Use autoconf to detect availability of
modules/ts/src/ts_gtest.cpp:// TODO(kenton@google.com): Use autoconf to detect availability of
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp:// Google Test's own unit tests to be able to access it. Therefore we
modules/ts/src/ts_gtest.cpp:const char kAlsoRunDisabledTestsFlag[] = "also_run_disabled_tests";
modules/ts/src/ts_gtest.cpp:    also_run_disabled_tests_ = GTEST_FLAG(also_run_disabled_tests);
modules/ts/src/ts_gtest.cpp:    GTEST_FLAG(also_run_disabled_tests) = also_run_disabled_tests_;
modules/ts/src/ts_gtest.cpp:  bool also_run_disabled_tests_;
modules/ts/src/ts_gtest.cpp:// Reads the GTEST_SHARD_STATUS_FILE environment variable, and creates the file
modules/ts/src/ts_gtest.cpp:// if the variable is present. If a file already exists at this location, this
modules/ts/src/ts_gtest.cpp:// function will write over it. If the variable is present, but the file cannot
modules/ts/src/ts_gtest.cpp:// Checks whether sharding is enabled by examining the relevant
modules/ts/src/ts_gtest.cpp:// environment variable values. If the variables are present,
modules/ts/src/ts_gtest.cpp:// disabled because it must only be applied to the original test
modules/ts/src/ts_gtest.cpp:// Parses the environment variable var as an Int32. If it is unset,
modules/ts/src/ts_gtest.cpp:// and aborts.
modules/ts/src/ts_gtest.cpp:// TestPropertyKeyIs is copyable.
modules/ts/src/ts_gtest.cpp:// environment variable or a command line flag.  E.g. you can set the
modules/ts/src/ts_gtest.cpp:// the variable and the flag are present, the latter overrides the
modules/ts/src/ts_gtest.cpp:  // Returns the absolute path of the requested output file, or the
modules/ts/src/ts_gtest.cpp:GTEST_API_ FilePath GetCurrentExecutableName();
modules/ts/src/ts_gtest.cpp:  // user code. It saves some information about the current stack that
modules/ts/src/ts_gtest.cpp:// Information about a Google Test trace point.
modules/ts/src/ts_gtest.cpp:  // Gets the number of disabled tests that will be reported in the XML report.
modules/ts/src/ts_gtest.cpp:  int reportable_disabled_test_count() const;
modules/ts/src/ts_gtest.cpp:  // Gets the number of disabled tests.
modules/ts/src/ts_gtest.cpp:  int disabled_test_count() const;
modules/ts/src/ts_gtest.cpp:  int reportable_test_count() const;
modules/ts/src/ts_gtest.cpp:  TestCase* GetMutableTestCase(int i) {
modules/ts/src/ts_gtest.cpp:  // value-parameterized tests are disabled, RegisterParameterizedTests is
modules/ts/src/ts_gtest.cpp:  // based on sharding variables in the environment.
modules/ts/src/ts_gtest.cpp:  // or minus sign" semantics, which are undesirable here.
modules/ts/src/ts_gtest.cpp:  // available.
modules/ts/src/ts_gtest.cpp:           StreamableToString(iteration));
modules/ts/src/ts_gtest.cpp:           StreamableToString(unit_test.elapsed_time()) + "ms");
modules/ts/src/ts_gtest.cpp:           + "&elapsed_time=" + StreamableToString(test_case.elapsed_time())
modules/ts/src/ts_gtest.cpp:           StreamableToString((test_info.result())->elapsed_time()) + "ms");
modules/ts/src/ts_gtest.cpp:           "&line=" + StreamableToString(test_part_result.line_number()) +
modules/ts/src/ts_gtest.cpp:// disabled and not run.
modules/ts/src/ts_gtest.cpp:static const char kDisableTestFilter[] = "DISABLED_*:*/DISABLED_*";
modules/ts/src/ts_gtest.cpp:// The environment variable name for the test shard index.
modules/ts/src/ts_gtest.cpp:// The environment variable name for the total number of test shards.
modules/ts/src/ts_gtest.cpp:// The environment variable name for the test shard status file.
modules/ts/src/ts_gtest.cpp:    also_run_disabled_tests,
modules/ts/src/ts_gtest.cpp:    internal::BoolFromGTestEnv("also_run_disabled_tests", false),
modules/ts/src/ts_gtest.cpp:    "Run disabled tests too, in addition to the tests normally being run.");
modules/ts/src/ts_gtest.cpp:    "being sent to a terminal and the TERM environment variable "
modules/ts/src/ts_gtest.cpp:    "executable's name and, if necessary, made unique by adding "
modules/ts/src/ts_gtest.cpp:    "if exceptions are enabled or exit the program with a non-zero code "
modules/ts/src/ts_gtest.cpp:// InitGoogleTest() has been called.  We don't protect this variable
modules/ts/src/ts_gtest.cpp:std::string g_executable_path;
modules/ts/src/ts_gtest.cpp:FilePath GetCurrentExecutableName() {
modules/ts/src/ts_gtest.cpp:  result.Set(FilePath(g_executable_path).RemoveExtension("exe"));
modules/ts/src/ts_gtest.cpp:  result.Set(FilePath(g_executable_path));
modules/ts/src/ts_gtest.cpp:    // TODO(wan@google.com): on Windows \some\path is not an absolute
modules/ts/src/ts_gtest.cpp:    // following logic for turning it into an absolute path is wrong.
modules/ts/src/ts_gtest.cpp:      output_name, internal::GetCurrentExecutableName(),
modules/ts/src/ts_gtest.cpp:// Gets the number of disabled tests that will be reported in the XML report.
modules/ts/src/ts_gtest.cpp:int UnitTestImpl::reportable_disabled_test_count() const {
modules/ts/src/ts_gtest.cpp:                             &TestCase::reportable_disabled_test_count);
modules/ts/src/ts_gtest.cpp:// Gets the number of disabled tests.
modules/ts/src/ts_gtest.cpp:int UnitTestImpl::disabled_test_count() const {
modules/ts/src/ts_gtest.cpp:  return SumOverTestCaseList(test_cases_, &TestCase::disabled_test_count);
modules/ts/src/ts_gtest.cpp:int UnitTestImpl::reportable_test_count() const {
modules/ts/src/ts_gtest.cpp:  return SumOverTestCaseList(test_cases_, &TestCase::reportable_test_count);
modules/ts/src/ts_gtest.cpp:#  pragma warning(disable:4996)  // Temporarily disables warning 4996.
modules/ts/src/ts_gtest.cpp:                                     const char* abs_error_expr,
modules/ts/src/ts_gtest.cpp:                                     double abs_error) {
modules/ts/src/ts_gtest.cpp:  const double diff = fabs(val1 - val2);
modules/ts/src/ts_gtest.cpp:  if (diff <= abs_error) return AssertionSuccess();
modules/ts/src/ts_gtest.cpp:      << " is " << diff << ", which exceeds " << abs_error_expr << ", where\n"
modules/ts/src/ts_gtest.cpp:      << abs_error_expr << " evaluates to " << abs_error << ".";
modules/ts/src/ts_gtest.cpp:  // Note that the above two checks will both fail if either val1 or
modules/ts/src/ts_gtest.cpp:  // Looks up the human-readable system message for the HRESULT code
modules/ts/src/ts_gtest.cpp:  // Gets the system's human readable message string for this HRESULT.
modules/ts/src/ts_gtest.cpp:  // environment variable. On GNU platform this method uses wcscasecmp
modules/ts/src/ts_gtest.cpp:// aborts the program.
modules/ts/src/ts_gtest.cpp:// test_property_count() - 1. If i is not in that range, aborts the
modules/ts/src/ts_gtest.cpp:  "disabled",
modules/ts/src/ts_gtest.cpp:  "disabled",
modules/ts/src/ts_gtest.cpp:  // This code is unreachable but some compilers may not realizes that.
modules/ts/src/ts_gtest.cpp:      NULL,  // No info about the source file where the exception occurred.
modules/ts/src/ts_gtest.cpp:  // Info about the first test in the current test case.
modules/ts/src/ts_gtest.cpp:  // Info about the current test.
modules/ts/src/ts_gtest.cpp:          << "test " << TEST_name << " is defined using TEST.  You probably\n"
modules/ts/src/ts_gtest.cpp:          << "units and have the same name.  You should probably rename one\n"
modules/ts/src/ts_gtest.cpp:  // the check early, sacrificing the ability to affect Google Test's
modules/ts/src/ts_gtest.cpp:      is_disabled_(false),
modules/ts/src/ts_gtest.cpp:      << "probably rename one of the classes to put the tests into different\n"
modules/ts/src/ts_gtest.cpp:// TestNameIs is copyable.
modules/ts/src/ts_gtest.cpp:  // Notifies the unit test event listeners that a test is about to start.
modules/ts/src/ts_gtest.cpp:// Gets the number of disabled tests that will be reported in the XML report.
modules/ts/src/ts_gtest.cpp:int TestCase::reportable_disabled_test_count() const {
modules/ts/src/ts_gtest.cpp:  return CountIf(test_info_list_, TestReportableDisabled);
modules/ts/src/ts_gtest.cpp:// Gets the number of disabled tests in this test case.
modules/ts/src/ts_gtest.cpp:int TestCase::disabled_test_count() const {
modules/ts/src/ts_gtest.cpp:  return CountIf(test_info_list_, TestDisabled);
modules/ts/src/ts_gtest.cpp:int TestCase::reportable_test_count() const {
modules/ts/src/ts_gtest.cpp:  return CountIf(test_info_list_, TestReportable);
modules/ts/src/ts_gtest.cpp:TestInfo* TestCase::GetMutableTestInfo(int i) {
modules/ts/src/ts_gtest.cpp:    GetMutableTestInfo(i)->Run();
modules/ts/src/ts_gtest.cpp:// Formats a countable noun.  Depending on its quantity, either the
modules/ts/src/ts_gtest.cpp:// FormatCountableNoun(1, "formula", "formuli") returns "1 formula".
modules/ts/src/ts_gtest.cpp:// FormatCountableNoun(5, "book", "books") returns "5 books".
modules/ts/src/ts_gtest.cpp:static std::string FormatCountableNoun(int count,
modules/ts/src/ts_gtest.cpp:  return internal::StreamableToString(count) + " " +
modules/ts/src/ts_gtest.cpp:  return FormatCountableNoun(test_count, "test", "tests");
modules/ts/src/ts_gtest.cpp:  return FormatCountableNoun(test_case_count, "test case", "test cases");
modules/ts/src/ts_gtest.cpp:// to "Failure", as the user usually doesn't care about the difference
modules/ts/src/ts_gtest.cpp:    // On Windows the TERM variable is usually not set, but the
modules/ts/src/ts_gtest.cpp:    // On non-Windows platforms, we rely on the TERM variable.
modules/ts/src/ts_gtest.cpp:// output to label the type parameter and value parameter for a test.
modules/ts/src/ts_gtest.cpp:static const char kTypeParamLabel[] = "TypeParam";
modules/ts/src/ts_gtest.cpp:static const char kValueParamLabel[] = "GetParam()";
modules/ts/src/ts_gtest.cpp:      printf("%s = %s", kTypeParamLabel, type_param);
modules/ts/src/ts_gtest.cpp:      printf("%s = %s", kValueParamLabel, value_param);
modules/ts/src/ts_gtest.cpp:// Class PrettyUnitTestResultPrinter is copyable.
modules/ts/src/ts_gtest.cpp:      FormatCountableNoun(test_case.test_to_run_count(), "test", "tests");
modules/ts/src/ts_gtest.cpp:    printf(", where %s = %s\n", kTypeParamLabel, test_case.type_param());
modules/ts/src/ts_gtest.cpp:    printf(" (%s ms)\n", internal::StreamableToString(
modules/ts/src/ts_gtest.cpp:      FormatCountableNoun(test_case.test_to_run_count(), "test", "tests");
modules/ts/src/ts_gtest.cpp:         internal::StreamableToString(test_case.elapsed_time()).c_str());
modules/ts/src/ts_gtest.cpp:           internal::StreamableToString(unit_test.elapsed_time()).c_str());
modules/ts/src/ts_gtest.cpp:  int num_disabled = unit_test.reportable_disabled_test_count();
modules/ts/src/ts_gtest.cpp:  if (num_disabled && !GTEST_FLAG(also_run_disabled_tests)) {
modules/ts/src/ts_gtest.cpp:                  num_disabled,
modules/ts/src/ts_gtest.cpp:                  num_disabled == 1 ? "TEST" : "TESTS");
modules/ts/src/ts_gtest.cpp:  TestEventRepeater() : forwarding_enabled_(true) {}
modules/ts/src/ts_gtest.cpp:  bool forwarding_enabled() const { return forwarding_enabled_; }
modules/ts/src/ts_gtest.cpp:  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }
modules/ts/src/ts_gtest.cpp:  bool forwarding_enabled_;
modules/ts/src/ts_gtest.cpp:  if (forwarding_enabled_) { \
modules/ts/src/ts_gtest.cpp:  if (forwarding_enabled_) { \
modules/ts/src/ts_gtest.cpp:  if (forwarding_enabled_) {
modules/ts/src/ts_gtest.cpp:  if (forwarding_enabled_) {
modules/ts/src/ts_gtest.cpp:  static bool IsNormalizableWhitespace(char c) {
modules/ts/src/ts_gtest.cpp:    return IsNormalizableWhitespace(c) || c >= 0x20;
modules/ts/src/ts_gtest.cpp:  // value, and normalizable whitespace is preserved by replacing it
modules/ts/src/ts_gtest.cpp:    //   2. It's a bit involved to make the errno variable thread-safe on
modules/ts/src/ts_gtest.cpp:    //      we need the strerror_r() function, which is not available on
modules/ts/src/ts_gtest.cpp:            "Unable to open file \"%s\"\n",
modules/ts/src/ts_gtest.cpp:// normalizable whitespace is preserved by replacing it with character
modules/ts/src/ts_gtest.cpp:// TODO(wan): It might be nice to have a minimally invasive, human-readable
modules/ts/src/ts_gtest.cpp:          if (is_attribute && IsNormalizableWhitespace(ch))
modules/ts/src/ts_gtest.cpp:  // Using non-reentrant version as localtime_r is not portable.
modules/ts/src/ts_gtest.cpp:# pragma warning(disable:4996)  // Temporarily disables warning 4996
modules/ts/src/ts_gtest.cpp:                                // (function or variable may be unsafe).
modules/ts/src/ts_gtest.cpp:  return StreamableToString(time_struct->tm_year + 1900) + "-" +
modules/ts/src/ts_gtest.cpp:                     StreamableToString(test_case.reportable_test_count()));
modules/ts/src/ts_gtest.cpp:                     StreamableToString(test_case.failed_test_count()));
modules/ts/src/ts_gtest.cpp:      stream, kTestsuite, "disabled",
modules/ts/src/ts_gtest.cpp:      StreamableToString(test_case.reportable_disabled_test_count()));
modules/ts/src/ts_gtest.cpp:    if (test_case.GetTestInfo(i)->is_reportable())
modules/ts/src/ts_gtest.cpp:                     StreamableToString(unit_test.reportable_test_count()));
modules/ts/src/ts_gtest.cpp:                     StreamableToString(unit_test.failed_test_count()));
modules/ts/src/ts_gtest.cpp:      stream, kTestsuites, "disabled",
modules/ts/src/ts_gtest.cpp:      StreamableToString(unit_test.reportable_disabled_test_count()));
modules/ts/src/ts_gtest.cpp:                       StreamableToString(unit_test.random_seed()));
modules/ts/src/ts_gtest.cpp:    if (unit_test.GetTestCase(i)->reportable_test_count() > 0)
modules/ts/src/ts_gtest.cpp:bool TestEventListeners::EventForwardingEnabled() const {
modules/ts/src/ts_gtest.cpp:  return repeater_->forwarding_enabled();
modules/ts/src/ts_gtest.cpp:  repeater_->set_forwarding_enabled(false);
modules/ts/src/ts_gtest.cpp:// Gets the number of disabled tests that will be reported in the XML report.
modules/ts/src/ts_gtest.cpp:int UnitTest::reportable_disabled_test_count() const {
modules/ts/src/ts_gtest.cpp:  return impl()->reportable_disabled_test_count();
modules/ts/src/ts_gtest.cpp:// Gets the number of disabled tests.
modules/ts/src/ts_gtest.cpp:int UnitTest::disabled_test_count() const {
modules/ts/src/ts_gtest.cpp:  return impl()->disabled_test_count();
modules/ts/src/ts_gtest.cpp:int UnitTest::reportable_test_count() const {
modules/ts/src/ts_gtest.cpp:  return impl()->reportable_test_count();
modules/ts/src/ts_gtest.cpp:TestCase* UnitTest::GetMutableTestCase(int i) {
modules/ts/src/ts_gtest.cpp:  return impl()->GetMutableTestCase(i);
modules/ts/src/ts_gtest.cpp:      // from removing. We use this rather than abort() or __builtin_trap() for
modules/ts/src/ts_gtest.cpp:      // portability: Symbian doesn't implement abort() well, and some debuggers
modules/ts/src/ts_gtest.cpp:      // don't correctly trap abort().
modules/ts/src/ts_gtest.cpp:      // We cannot call abort() as it generates a pop-up in debug mode
modules/ts/src/ts_gtest.cpp:  //   1. Upon start, Google Test creates a file whose absolute path
modules/ts/src/ts_gtest.cpp:  //      is specified by the environment variable
modules/ts/src/ts_gtest.cpp:  // about crashes - they are expected.
modules/ts/src/ts_gtest.cpp:    // Death test children can be terminated with _abort().  On Windows,
modules/ts/src/ts_gtest.cpp:    // _abort() can show a dialog with a warning message.  This forces the
modules/ts/src/ts_gtest.cpp:    // abort message to go to stderr instead.
modules/ts/src/ts_gtest.cpp:    // offering a choice to debug the aborted program. We need to suppress
modules/ts/src/ts_gtest.cpp:    // VC++ doesn't define _set_abort_behavior() prior to the version 8.0.
modules/ts/src/ts_gtest.cpp:    // TODO(vladl@google.com): find a way to suppress the abort dialog() in the
modules/ts/src/ts_gtest.cpp:      _set_abort_behavior(
modules/ts/src/ts_gtest.cpp:# pragma warning(disable:4355)            // Temporarily disables warning 4355
modules/ts/src/ts_gtest.cpp:// Disables event forwarding if the control is currently in a death test
modules/ts/src/ts_gtest.cpp:    // available to the UnitTest reflection API without running
modules/ts/src/ts_gtest.cpp:// TestCaseNameIs is copyable.
modules/ts/src/ts_gtest.cpp:// When parameterized tests are enabled, it expands and registers
modules/ts/src/ts_gtest.cpp:    // Tells the unit test event listeners that the tests are about to start.
modules/ts/src/ts_gtest.cpp:          GetMutableTestCase(test_index)->Run();
modules/ts/src/ts_gtest.cpp:// Reads the GTEST_SHARD_STATUS_FILE environment variable, and creates the file
modules/ts/src/ts_gtest.cpp:// if the variable is present. If a file already exists at this location, this
modules/ts/src/ts_gtest.cpp:// function will write over it. If the variable is present, but the file cannot
modules/ts/src/ts_gtest.cpp:                    "specified by the %s environment variable.\n",
modules/ts/src/ts_gtest.cpp:// Checks whether sharding is enabled by examining the relevant
modules/ts/src/ts_gtest.cpp:// environment variable values. If the variables are present,
modules/ts/src/ts_gtest.cpp:// disabled because it must only be applied to the original test
modules/ts/src/ts_gtest.cpp:      << "Invalid environment variables: you have "
modules/ts/src/ts_gtest.cpp:      << "Invalid environment variables: you have "
modules/ts/src/ts_gtest.cpp:      << "Invalid environment variables: we require 0 <= "
modules/ts/src/ts_gtest.cpp:// Parses the environment variable var as an Int32. If it is unset,
modules/ts/src/ts_gtest.cpp:// and aborts.
modules/ts/src/ts_gtest.cpp:  if (!ParseInt32(Message() << "The value of environment variable " << var,
modules/ts/src/ts_gtest.cpp:// variables in the environment - see
modules/ts/src/ts_gtest.cpp:  // num_runnable_tests are the number of tests that will
modules/ts/src/ts_gtest.cpp:  // run across all shards (i.e., match filter and are not disabled).
modules/ts/src/ts_gtest.cpp:  int num_runnable_tests = 0;
modules/ts/src/ts_gtest.cpp:      // A test is disabled if test case name or test name matches
modules/ts/src/ts_gtest.cpp:      // kDisableTestFilter.
modules/ts/src/ts_gtest.cpp:      const bool is_disabled =
modules/ts/src/ts_gtest.cpp:                                                   kDisableTestFilter) ||
modules/ts/src/ts_gtest.cpp:                                                   kDisableTestFilter);
modules/ts/src/ts_gtest.cpp:      test_info->is_disabled_ = is_disabled;
modules/ts/src/ts_gtest.cpp:      const bool is_runnable =
modules/ts/src/ts_gtest.cpp:          (GTEST_FLAG(also_run_disabled_tests) || !is_disabled) &&
modules/ts/src/ts_gtest.cpp:      const bool is_selected = is_runnable &&
modules/ts/src/ts_gtest.cpp:                                num_runnable_tests));
modules/ts/src/ts_gtest.cpp:      num_runnable_tests += is_runnable;
modules/ts/src/ts_gtest.cpp:            printf("  # %s = ", kTypeParamLabel);
modules/ts/src/ts_gtest.cpp:          printf("  # %s = ", kValueParamLabel);
modules/ts/src/ts_gtest.cpp:// suppress unreachable code warnings.
modules/ts/src/ts_gtest.cpp:"  @G--" GTEST_FLAG_PREFIX_ "also_run_disabled_tests@D\n"
modules/ts/src/ts_gtest.cpp:"      Run all disabled tests too.\n"
modules/ts/src/ts_gtest.cpp:"      Enable/disable colored output. The default is @Gauto@D.\n"
modules/ts/src/ts_gtest.cpp:"environment variable of a flag (all letters in upper-case). For example, to\n"
modules/ts/src/ts_gtest.cpp:"disable colored text output, you can either specify @G--" GTEST_FLAG_PREFIX_
modules/ts/src/ts_gtest.cpp:"the @G" GTEST_FLAG_PREFIX_UPPER_ "COLOR@D environment variable to @Gno@D.\n"
modules/ts/src/ts_gtest.cpp:    const std::string arg_string = StreamableToString(argv[i]);
modules/ts/src/ts_gtest.cpp:    if (ParseBoolFlag(arg, kAlsoRunDisabledTestsFlag,
modules/ts/src/ts_gtest.cpp:                      &GTEST_FLAG(also_run_disabled_tests)) ||
modules/ts/src/ts_gtest.cpp:  internal::g_executable_path = internal::StreamableToString(argv[0]);
modules/ts/src/ts_gtest.cpp:    g_argvs.push_back(StreamableToString(argv[i]));
modules/ts/src/ts_gtest.cpp:// No value is returned.  Instead, the Google Test flag variables are
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp:// AbortReason, DeathTestOutcome, and flag characters above.
modules/ts/src/ts_gtest.cpp:// Routine for aborting the program which is safe to call from an
modules/ts/src/ts_gtest.cpp:          + ::testing::internal::StreamableToString(__LINE__) + ": " \
modules/ts/src/ts_gtest.cpp:          + ::testing::internal::StreamableToString(__LINE__) + ": " \
modules/ts/src/ts_gtest.cpp:  // The read() here blocks until data is available (signifying the
modules/ts/src/ts_gtest.cpp://   status_ok: true if exit_status is acceptable in the context of
modules/ts/src/ts_gtest.cpp:// Returns true iff all of the above conditions are met.  Otherwise, the
modules/ts/src/ts_gtest.cpp:// first failing condition, in the order given above, is the one that is
modules/ts/src/ts_gtest.cpp:// process with the same executable as the current process to run the
modules/ts/src/ts_gtest.cpp:  SECURITY_ATTRIBUTES handles_are_inheritable = {
modules/ts/src/ts_gtest.cpp:      ::CreatePipe(&read_handle, &write_handle, &handles_are_inheritable,
modules/ts/src/ts_gtest.cpp:      &handles_are_inheritable,
modules/ts/src/ts_gtest.cpp:      "=" + file_ + "|" + StreamableToString(line_) + "|" +
modules/ts/src/ts_gtest.cpp:      StreamableToString(death_test_index) + "|" +
modules/ts/src/ts_gtest.cpp:      StreamableToString(static_cast<unsigned int>(::GetCurrentProcessId())) +
modules/ts/src/ts_gtest.cpp:      "|" + StreamableToString(reinterpret_cast<size_t>(write_handle)) +
modules/ts/src/ts_gtest.cpp:      "|" + StreamableToString(reinterpret_cast<size_t>(event_handle_.Get()));
modules/ts/src/ts_gtest.cpp:  char executable_path[_MAX_PATH + 1];  // NOLINT
modules/ts/src/ts_gtest.cpp:                                            executable_path,
modules/ts/src/ts_gtest.cpp:      executable_path,
modules/ts/src/ts_gtest.cpp:      NULL,   // Retuned process handle is not inheritable.
modules/ts/src/ts_gtest.cpp:      NULL,   // Retuned thread handle is not inheritable.
modules/ts/src/ts_gtest.cpp:      TRUE,   // Child inherits all inheritable handles (for write_handle_).
modules/ts/src/ts_gtest.cpp:// ForkingDeathTest provides implementations for most of the abstract
modules/ts/src/ts_gtest.cpp:    ::std::vector<testing::internal::string> args = GetInjectableArgvs();
modules/ts/src/ts_gtest.cpp:  // When Google Test is built as a framework on MacOS X, the environ variable
modules/ts/src/ts_gtest.cpp:  // is unavailable. Apple's documentation (man environ) recommends using
modules/ts/src/ts_gtest.cpp:// Spawns a child process with the same executable as the current process in
modules/ts/src/ts_gtest.cpp:// available, it is used instead, being slightly more thread-safe.  On QNX,
modules/ts/src/ts_gtest.cpp:  // the process may hang. To avoid this, we ignore SIGPROF here and re-enable
modules/ts/src/ts_gtest.cpp:    // about.  As far as I know there is no ABI with stack alignment greater
modules/ts/src/ts_gtest.cpp:      + file_ + "|" + StreamableToString(line_) + "|"
modules/ts/src/ts_gtest.cpp:      + StreamableToString(death_test_index) + "|"
modules/ts/src/ts_gtest.cpp:      + StreamableToString(pipe_fd[1]);
modules/ts/src/ts_gtest.cpp:          "Death test count (" + StreamableToString(death_test_index)
modules/ts/src/ts_gtest.cpp:          + StreamableToString(flag->index()) + ")");
modules/ts/src/ts_gtest.cpp:  else {  // NOLINT - this is more readable than unbalanced brackets inside #if.
modules/ts/src/ts_gtest.cpp:                                                   FALSE,  // Non-inheritable.
modules/ts/src/ts_gtest.cpp:    DeathTestAbort("Unable to open parent process " +
modules/ts/src/ts_gtest.cpp:                   StreamableToString(parent_process_id));
modules/ts/src/ts_gtest.cpp:  // compile-time assertion when available.
modules/ts/src/ts_gtest.cpp:                         FALSE,  // Request non-inheritable handler.
modules/ts/src/ts_gtest.cpp:    DeathTestAbort("Unable to duplicate the pipe handle " +
modules/ts/src/ts_gtest.cpp:                   StreamableToString(write_handle_as_size_t) +
modules/ts/src/ts_gtest.cpp:                   StreamableToString(parent_process_id));
modules/ts/src/ts_gtest.cpp:    DeathTestAbort("Unable to duplicate the event handle " +
modules/ts/src/ts_gtest.cpp:                   StreamableToString(event_handle_as_size_t) +
modules/ts/src/ts_gtest.cpp:                   StreamableToString(parent_process_id));
modules/ts/src/ts_gtest.cpp:    DeathTestAbort("Unable to convert pipe handle " +
modules/ts/src/ts_gtest.cpp:                   StreamableToString(write_handle_as_size_t) +
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp:// provides a reasonable fallback.
modules/ts/src/ts_gtest.cpp:  // something reasonable.
modules/ts/src/ts_gtest.cpp:    file = base_name.string() + "_" + StreamableToString(number)
modules/ts/src/ts_gtest.cpp:// Returns true if pathname describes something findable in the file-system,
modules/ts/src/ts_gtest.cpp:// Returns true if pathname describes an absolute path.
modules/ts/src/ts_gtest.cpp:// the directories already exist; returns false if unable to create directories
modules/ts/src/ts_gtest.cpp:// if the directory already exists; returns false if unable to create the
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp:  // There's no portable way to detect the number of threads, so we just
modules/ts/src/ts_gtest.cpp:  bool prev_repeatable = false;
modules/ts/src/ts_gtest.cpp:      prev_repeatable = true;
modules/ts/src/ts_gtest.cpp:      } else if (IsRepeat(ch) && !prev_repeatable) {
modules/ts/src/ts_gtest.cpp:                      << "'" << ch << "' can only follow a repeatable token.";
modules/ts/src/ts_gtest.cpp:      prev_repeatable = !IsInSet(ch, "^$?*+");
modules/ts/src/ts_gtest.cpp:// characters to be indexable by size_t, in which case the test will
modules/ts/src/ts_gtest.cpp:// probably time out anyway.  We are fine with this limitation as
modules/ts/src/ts_gtest.cpp:      // Since we only care about *whether* the pattern matches str
modules/ts/src/ts_gtest.cpp:// the regex length, so we won't need to worry about running out of
modules/ts/src/ts_gtest.cpp:  return file_name + "(" + StreamableToString(line) + "):";
modules/ts/src/ts_gtest.cpp:  return file_name + ":" + StreamableToString(line) + ":";
modules/ts/src/ts_gtest.cpp:    return file_name + ":" + StreamableToString(line);
modules/ts/src/ts_gtest.cpp:// Flushes the buffers and, if severity is GTEST_FATAL, aborts the program.
modules/ts/src/ts_gtest.cpp:// Disable Microsoft deprecation warnings for POSIX functions called from
modules/ts/src/ts_gtest.cpp:# pragma warning(disable: 4996)
modules/ts/src/ts_gtest.cpp:        << "Unable to create a temporary file in " << temp_dir_path;
modules/ts/src/ts_gtest.cpp:    GTEST_CHECK_(captured_fd != -1) << "Unable to open temporary file "
modules/ts/src/ts_gtest.cpp:    // the location of the world-writable SD Card directory. However,
modules/ts/src/ts_gtest.cpp:    // code as part of a regular standalone executable, which doesn't
modules/ts/src/ts_gtest.cpp:void SetInjectableArgvs(const ::std::vector<testing::internal::string>* argvs) {
modules/ts/src/ts_gtest.cpp:const ::std::vector<testing::internal::string>& GetInjectableArgvs() {
modules/ts/src/ts_gtest.cpp:// Returns the name of the environment variable corresponding to the
modules/ts/src/ts_gtest.cpp:  // Parses the environment variable as a decimal integer.
modules/ts/src/ts_gtest.cpp:// Reads and returns the Boolean environment variable corresponding to
modules/ts/src/ts_gtest.cpp:// variable corresponding to the given flag; if it isn't set or
modules/ts/src/ts_gtest.cpp:    // The environment variable is not set.
modules/ts/src/ts_gtest.cpp:  if (!ParseInt32(Message() << "Environment variable " << env_var,
modules/ts/src/ts_gtest.cpp:// Reads and returns the string environment variable corresponding to
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp://   - as is if it's a printable ASCII (e.g. 'a', '2', ' '),
modules/ts/src/ts_gtest.cpp:// Returns true if c is a printable ASCII character.  We test the
modules/ts/src/ts_gtest.cpp:inline bool IsPrintableAscii(wchar_t c) {
modules/ts/src/ts_gtest.cpp:      if (IsPrintableAscii(c)) {
modules/ts/src/ts_gtest.cpp:// as "'\\0'", other unprintable characters are also properly escaped
modules/ts/src/ts_gtest.cpp:  // First, print c as a literal in the most readable form we can find.
modules/ts/src/ts_gtest.cpp:// Prints a wchar_t as a symbol if it is printable or as its internal
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp://     * Redistributions of source code must retain the above copyright
modules/ts/src/ts_gtest.cpp://     * Redistributions in binary form must reproduce the above
modules/ts/src/ts_gtest.cpp:// aborts the program otherwise.
modules/ts/src/ts_func.cpp:                    aptr[k] = fabs(aptr[k]);
modules/ts/src/ts_func.cpp:        vector<int> tabvec((left + right)*esz + 1);
modules/ts/src/ts_func.cpp:        int* ltab = &tabvec[0];
modules/ts/src/ts_func.cpp:        int* rtab = &tabvec[left*esz];
modules/ts/src/ts_func.cpp:                ltab[i*esz + k] = j + k;
modules/ts/src/ts_func.cpp:                rtab[i*esz + k] = j + k;
modules/ts/src/ts_func.cpp:                dptr[j] = sptr[ltab[j]];
modules/ts/src/ts_func.cpp:                dptr[j + left + width] = sptr[rtab[j]];
modules/ts/src/ts_func.cpp:                result = std::max(result, (double)std::abs(0+src[i]));// trick with 0 used to quiet gcc warning
modules/ts/src/ts_func.cpp:                        result = std::max(result, (double)std::abs(0+src[i*cn + c]));
modules/ts/src/ts_func.cpp:                result += std::abs(0+src[i]);
modules/ts/src/ts_func.cpp:                        result += std::abs(0+src[i*cn + c]);
modules/ts/src/ts_func.cpp:                result = std::max(result, (double)std::abs(src1[i] - src2[i]));
modules/ts/src/ts_func.cpp:                        result = std::max(result, (double)std::abs(src1[i*cn + c] - src2[i*cn + c]));
modules/ts/src/ts_func.cpp:                result += std::abs(src1[i] - src2[i]);
modules/ts/src/ts_func.cpp:                        result += std::abs(src1[i*cn + c] - src2[i*cn + c]);
modules/ts/src/ts_func.cpp:        int diff = std::abs(src1[i] - src2[i]);
modules/ts/src/ts_func.cpp:        double diff = fabs((double)src1[i] - (double)src2[i]);
modules/ts/src/ts_func.cpp:        int diff = std::abs(a - b);
modules/ts/src/ts_func.cpp:        double diff = fabs((double)a - (double)b);
modules/ts/src/ts_func.cpp:                a_val = fabs(a_val - b_val);
modules/ts/src/ts_func.cpp:                threshold = element_wise_relative_error ? fabs(b_val) + 1 : maxval;
modules/ts/src/ts_func.cpp:                a_val = fabs(a_val - b_val);
modules/ts/src/ts_func.cpp:                threshold = element_wise_relative_error ? fabs(b_val) + 1 : maxval;
modules/ts/src/ts_func.cpp:                if( fabs(data[j]) < level )
modules/ts/src/ts_func.cpp:                if( fabs(data[j]) < level )
modules/ts/src/ts_func.cpp:    const char * tegra_optimization = tegra::useTegra() && tegra::isDeviceSupported() ? "enabled" : "disabled";
modules/cudalegacy/CMakeLists.txt:  ocv_module_disable(cudalegacy)
modules/cudalegacy/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4130 /wd4324 /wd4512 /wd4310 -Wundef -Wmissing-declarations -Wuninitialized -Wshadow)
modules/cudalegacy/test/TestHaarCascadeApplication.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestHaarCascadeApplication.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestHaarCascadeApplication.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestHaarCascadeApplication.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestHaarCascadeApplication.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestHypothesesGrow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestHypothesesGrow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestHypothesesGrow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestHypothesesGrow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestHypothesesGrow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestResize.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestResize.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestResize.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestResize.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestResize.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestTranspose.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestTranspose.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestTranspose.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestTranspose.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestTranspose.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestHypothesesFilter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestHypothesesFilter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestHypothesesFilter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestHypothesesFilter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestHypothesesFilter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestHypothesesFilter.cpp:    return std::abs((Ncv32s)r1.x - (Ncv32s)r2.x) <= delta &&
modules/cudalegacy/test/TestHypothesesFilter.cpp:        std::abs((Ncv32s)r1.y - (Ncv32s)r2.y) <= delta &&
modules/cudalegacy/test/TestHypothesesFilter.cpp:        std::abs((Ncv32s)r1.x + (Ncv32s)r1.width - (Ncv32s)r2.x - (Ncv32s)r2.width) <= delta &&
modules/cudalegacy/test/TestHypothesesFilter.cpp:        std::abs((Ncv32s)r1.y + (Ncv32s)r1.height - (Ncv32s)r2.y - (Ncv32s)r2.height) <= delta;
modules/cudalegacy/test/TestIntegralImage.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestIntegralImage.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestIntegralImage.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestIntegralImage.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestIntegralImage.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestIntegralImage.cpp:                if (fabsf((float)h_imgII.ptr()[h_imgII.stride()*i+j] - (float)h_imgII_d.ptr()[h_imgII_d.stride()*i+j]) > 0.01f)
modules/cudalegacy/test/TestRectStdDev.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestRectStdDev.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestRectStdDev.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestRectStdDev.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestRectStdDev.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestRectStdDev.cpp:            Ncv64f absErr = fabs(h_norm.ptr()[h_norm.stride()*i+j] - h_norm_d.ptr()[h_norm_d.stride()*i+j]);
modules/cudalegacy/test/TestRectStdDev.cpp:            Ncv64f relErr = absErr / h_norm.ptr()[h_norm.stride()*i+j];
modules/cudalegacy/test/TestIntegralImageSquared.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestIntegralImageSquared.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestIntegralImageSquared.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestIntegralImageSquared.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestIntegralImageSquared.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestRectStdDev.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestRectStdDev.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestRectStdDev.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestRectStdDev.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestRectStdDev.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/test_main.cpp:                "{ i info              |      | Print information about system and exit }"
modules/cudalegacy/test/TestCompact.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestCompact.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestCompact.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestCompact.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestCompact.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/NCVAutoTestLister.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/NCVAutoTestLister.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/NCVAutoTestLister.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/NCVAutoTestLister.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/NCVAutoTestLister.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/NCVTest.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/NCVTest.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/NCVTest.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/NCVTest.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/NCVTest.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/NCVTest.hpp:# pragma warning( disable : 4201 4408 4127 4100)
modules/cudalegacy/test/test_labeling.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/test_labeling.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/test_labeling.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/test_labeling.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/test_labeling.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/test_labeling.cpp:    struct GreedyLabeling
modules/cudalegacy/test/test_labeling.cpp:        GreedyLabeling(cv::Mat img)
modules/cudalegacy/test/test_labeling.cpp:        : image(img), _labels(image.size(), CV_32SC1, cv::Scalar::all(-1)) {}
modules/cudalegacy/test/test_labeling.cpp:        void operator() (cv::Mat labels) const
modules/cudalegacy/test/test_labeling.cpp:            int* dist_labels = (int*)labels.data;
modules/cudalegacy/test/test_labeling.cpp:            int pitch = (int) labels.step1();
modules/cudalegacy/test/test_labeling.cpp:                    if (dist_labels[j * pitch + i] != -1) continue;
modules/cudalegacy/test/test_labeling.cpp:                    dist_labels[j * pitch + i] = cc;
modules/cudalegacy/test/test_labeling.cpp:                        int*  dl = &dist_labels[p.y * pitch + p.x];
modules/cudalegacy/test/test_labeling.cpp:            cv::Mat diff = gpu - _labels;
modules/cudalegacy/test/test_labeling.cpp:                    if ( (_labels.at<int>(j,i) == gpu.at<int>(j,i + 1)) && (diff.at<int>(j, i) != diff.at<int>(j,i + 1)))
modules/cudalegacy/test/test_labeling.cpp:        cv::Mat _labels;
modules/cudalegacy/test/test_labeling.cpp:struct Labeling : testing::TestWithParam<cv::cuda::DeviceInfo>
modules/cudalegacy/test/test_labeling.cpp:        return cv::imread(std::string( cvtest::TS::ptr()->get_data_path() ) + "labeling/label.png");
modules/cudalegacy/test/test_labeling.cpp:CUDA_TEST_P(Labeling, DISABLED_ConnectedComponents)
modules/cudalegacy/test/test_labeling.cpp:    GreedyLabeling host(image);
modules/cudalegacy/test/test_labeling.cpp:    host(host._labels);
modules/cudalegacy/test/test_labeling.cpp:    cv::cuda::labelComponents(mask, components);
modules/cudalegacy/test/test_labeling.cpp:INSTANTIATE_TEST_CASE_P(CUDA_ConnectedComponents, Labeling, ALL_DEVICES);
modules/cudalegacy/test/TestHaarCascadeApplication.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestHaarCascadeApplication.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestHaarCascadeApplication.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestHaarCascadeApplication.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestHaarCascadeApplication.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/main_test_nvidia.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/main_test_nvidia.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/main_test_nvidia.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/main_test_nvidia.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/main_test_nvidia.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestIntegralImageSquared.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestIntegralImageSquared.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestIntegralImageSquared.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestIntegralImageSquared.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestIntegralImageSquared.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestCompact.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestCompact.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestCompact.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestCompact.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestCompact.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestIntegralImage.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestIntegralImage.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestIntegralImage.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestIntegralImage.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestIntegralImage.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestHypothesesFilter.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestHypothesesFilter.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestHypothesesFilter.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestHypothesesFilter.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestHypothesesFilter.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/NCVTestSourceProvider.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/NCVTestSourceProvider.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/NCVTestSourceProvider.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/NCVTestSourceProvider.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/NCVTestSourceProvider.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/test_nvidia.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/test_nvidia.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/test_nvidia.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/test_nvidia.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/test_nvidia.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestTranspose.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestTranspose.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestTranspose.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestTranspose.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestTranspose.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestHaarCascadeLoader.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestHaarCascadeLoader.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestHaarCascadeLoader.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestHaarCascadeLoader.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestHaarCascadeLoader.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestHaarCascadeLoader.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestHaarCascadeLoader.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestHaarCascadeLoader.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestHaarCascadeLoader.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestHaarCascadeLoader.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestDrawRects.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestDrawRects.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestDrawRects.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestDrawRects.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestDrawRects.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestDrawRects.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestDrawRects.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestDrawRects.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestDrawRects.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestDrawRects.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestHypothesesGrow.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestHypothesesGrow.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestHypothesesGrow.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestHypothesesGrow.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestHypothesesGrow.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/main_nvidia.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/main_nvidia.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/main_nvidia.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/main_nvidia.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/main_nvidia.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/main_nvidia.cpp:# pragma warning (disable : 4408 4201 4100)
modules/cudalegacy/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/test_calib3d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/test_calib3d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/test_calib3d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/test_calib3d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/test_calib3d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/test/TestResize.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/test/TestResize.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/test/TestResize.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/test/TestResize.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/test/TestResize.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/include/opencv2/cudalegacy/NCVBroxOpticalFlow.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NCVBroxOpticalFlow.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NCVBroxOpticalFlow.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/include/opencv2/cudalegacy/NCVBroxOpticalFlow.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/include/opencv2/cudalegacy/NCVBroxOpticalFlow.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/include/opencv2/cudalegacy/private.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/private.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/private.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/include/opencv2/cudalegacy/private.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/include/opencv2/cudalegacy/private.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/include/opencv2/cudalegacy/NCVPyramid.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NCVPyramid.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NCVPyramid.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/include/opencv2/cudalegacy/NCVPyramid.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/include/opencv2/cudalegacy/NCVPyramid.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/include/opencv2/cudalegacy/NCV.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NCV.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NCV.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/include/opencv2/cudalegacy/NCV.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/include/opencv2/cudalegacy/NCV.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/include/opencv2/cudalegacy/NCV.hpp:    NCVMemoryTypeHostPageable,
modules/cudalegacy/include/opencv2/cudalegacy/NPP_staging.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NPP_staging.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NPP_staging.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/include/opencv2/cudalegacy/NPP_staging.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/include/opencv2/cudalegacy/NPP_staging.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/include/opencv2/cudalegacy/NPP_staging.hpp: * \param pBufsize          [OUT] Pointer to host variable that returns the size of the temporary buffer (in bytes)
modules/cudalegacy/include/opencv2/cudalegacy/NPP_staging.hpp: * \param pBufsize          [OUT] Pointer to host variable that returns the size of the temporary buffer (in bytes)
modules/cudalegacy/include/opencv2/cudalegacy/NPP_staging.hpp: * \param pBufsize          [OUT] Pointer to host variable that returns the size of the temporary buffer (in bytes)
modules/cudalegacy/include/opencv2/cudalegacy/NCVHaarObjectDetection.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NCVHaarObjectDetection.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy/NCVHaarObjectDetection.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/include/opencv2/cudalegacy/NCVHaarObjectDetection.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/include/opencv2/cudalegacy/NCVHaarObjectDetection.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/include/opencv2/cudalegacy.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/include/opencv2/cudalegacy.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/include/opencv2/cudalegacy.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/include/opencv2/cudalegacy.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/include/opencv2/cudalegacy.hpp:@param decisionThreshold Value above which pixel is determined to be FG.
modules/cudalegacy/include/opencv2/cudalegacy.hpp:// Labeling
modules/cudalegacy/include/opencv2/cudalegacy.hpp://!performs labeling via graph cuts of a 2D regular 4-connected graph.
modules/cudalegacy/include/opencv2/cudalegacy.hpp:CV_EXPORTS void graphcut(GpuMat& terminals, GpuMat& leftTransp, GpuMat& rightTransp, GpuMat& top, GpuMat& bottom, GpuMat& labels,
modules/cudalegacy/include/opencv2/cudalegacy.hpp://!performs labeling via graph cuts of a 2D regular 8-connected graph.
modules/cudalegacy/include/opencv2/cudalegacy.hpp:                         GpuMat& labels,
modules/cudalegacy/include/opencv2/cudalegacy.hpp://! compute mask for Generalized Flood fill componetns labeling.
modules/cudalegacy/include/opencv2/cudalegacy.hpp://! performs connected componnents labeling.
modules/cudalegacy/include/opencv2/cudalegacy.hpp:CV_EXPORTS void labelComponents(const GpuMat& mask, GpuMat& components, int flags = 0, Stream& stream = Stream::Null());
modules/cudalegacy/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/perf/perf_calib3d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/perf/perf_calib3d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/perf/perf_calib3d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/perf/perf_calib3d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/perf/perf_calib3d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/perf/perf_labeling.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/perf/perf_labeling.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/perf/perf_labeling.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/perf/perf_labeling.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/perf/perf_labeling.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/perf/perf_labeling.cpp:struct GreedyLabeling
modules/cudalegacy/perf/perf_labeling.cpp:    GreedyLabeling(cv::Mat img)
modules/cudalegacy/perf/perf_labeling.cpp:    : image(img), _labels(image.size(), CV_32SC1, cv::Scalar::all(-1)) {stack = new dot[image.cols * image.rows];}
modules/cudalegacy/perf/perf_labeling.cpp:    ~GreedyLabeling(){delete[] stack;}
modules/cudalegacy/perf/perf_labeling.cpp:    void operator() (cv::Mat labels) const
modules/cudalegacy/perf/perf_labeling.cpp:        labels.setTo(cv::Scalar::all(-1));
modules/cudalegacy/perf/perf_labeling.cpp:        int* dist_labels = (int*)labels.data;
modules/cudalegacy/perf/perf_labeling.cpp:        int pitch = static_cast<int>(labels.step1());
modules/cudalegacy/perf/perf_labeling.cpp:                if (dist_labels[j * pitch + i] != -1) continue;
modules/cudalegacy/perf/perf_labeling.cpp:                dist_labels[j * pitch + i] = cc;
modules/cudalegacy/perf/perf_labeling.cpp:                    int*  dl = &dist_labels[p.y * pitch + p.x];
modules/cudalegacy/perf/perf_labeling.cpp:    cv::Mat _labels;
modules/cudalegacy/perf/perf_labeling.cpp:PERF_TEST_P(Image, DISABLED_Labeling_ConnectivityMask,
modules/cudalegacy/perf/perf_labeling.cpp:            Values<string>("gpu/labeling/aloe-disp.png"))
modules/cudalegacy/perf/perf_labeling.cpp:PERF_TEST_P(Image, DISABLED_Labeling_ConnectedComponents,
modules/cudalegacy/perf/perf_labeling.cpp:            Values<string>("gpu/labeling/aloe-disp.png"))
modules/cudalegacy/perf/perf_labeling.cpp:        TEST_CYCLE() cv::cuda::labelComponents(d_mask, components);
modules/cudalegacy/perf/perf_labeling.cpp:        GreedyLabeling host(image);
modules/cudalegacy/perf/perf_labeling.cpp:        TEST_CYCLE() host(host._labels);
modules/cudalegacy/perf/perf_labeling.cpp:        cv::Mat components = host._labels;
modules/cudalegacy/perf/perf_bgsegm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/perf/perf_bgsegm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/perf/perf_bgsegm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/perf/perf_bgsegm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/perf/perf_bgsegm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/gmg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/gmg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/gmg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/gmg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/gmg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/gmg.cpp:        //! Prior probability that any given pixel is a background pixel. A sensitivity parameter.
modules/cudalegacy/src/gmg.cpp:        //! Value above which pixel is determined to be FG.
modules/cudalegacy/src/bm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/bm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/bm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/bm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/bm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/image_pyramid.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/image_pyramid.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/image_pyramid.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/image_pyramid.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/image_pyramid.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/fgd.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/fgd.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/fgd.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/fgd.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/fgd.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/fgd.cpp:    // 0.002f ~ 1K frame(~45sec), 0.005 ~ 18sec (if 25fps and absolutely static BG)
modules/cudalegacy/src/fgd.cpp:        GpuMat ctable_Pv_;
modules/cudalegacy/src/fgd.cpp:        GpuMat ctable_Pvb_;
modules/cudalegacy/src/fgd.cpp:        GpuMat ctable_v_;
modules/cudalegacy/src/fgd.cpp:        GpuMat cctable_Pv_;
modules/cudalegacy/src/fgd.cpp:        GpuMat cctable_Pvb_;
modules/cudalegacy/src/fgd.cpp:        GpuMat cctable_v1_;
modules/cudalegacy/src/fgd.cpp:        GpuMat cctable_v2_;
modules/cudalegacy/src/fgd.cpp:        cuda::ensureSizeIsEnough(params.N2c * size.height, size.width, CV_32FC1, ctable_Pv_);
modules/cudalegacy/src/fgd.cpp:        ctable_Pv_.setTo(Scalar::all(0));
modules/cudalegacy/src/fgd.cpp:        cuda::ensureSizeIsEnough(params.N2c * size.height, size.width, CV_32FC1, ctable_Pvb_);
modules/cudalegacy/src/fgd.cpp:        ctable_Pvb_.setTo(Scalar::all(0));
modules/cudalegacy/src/fgd.cpp:        cuda::ensureSizeIsEnough(params.N2c * size.height, size.width, CV_8UC4, ctable_v_);
modules/cudalegacy/src/fgd.cpp:        ctable_v_.setTo(Scalar::all(0));
modules/cudalegacy/src/fgd.cpp:        cuda::ensureSizeIsEnough(params.N2cc * size.height, size.width, CV_32FC1, cctable_Pv_);
modules/cudalegacy/src/fgd.cpp:        cctable_Pv_.setTo(Scalar::all(0));
modules/cudalegacy/src/fgd.cpp:        cuda::ensureSizeIsEnough(params.N2cc * size.height, size.width, CV_32FC1, cctable_Pvb_);
modules/cudalegacy/src/fgd.cpp:        cctable_Pvb_.setTo(Scalar::all(0));
modules/cudalegacy/src/fgd.cpp:        cuda::ensureSizeIsEnough(params.N2cc * size.height, size.width, CV_8UC4, cctable_v1_);
modules/cudalegacy/src/fgd.cpp:        cctable_v1_.setTo(Scalar::all(0));
modules/cudalegacy/src/fgd.cpp:        cuda::ensureSizeIsEnough(params.N2cc * size.height, size.width, CV_8UC4, cctable_v2_);
modules/cudalegacy/src/fgd.cpp:        cctable_v2_.setTo(Scalar::all(0));
modules/cudalegacy/src/fgd.cpp:        stat.ctable_Pv_data_ = ctable_Pv_.data;
modules/cudalegacy/src/fgd.cpp:        stat.ctable_Pv_step_ = ctable_Pv_.step;
modules/cudalegacy/src/fgd.cpp:        stat.ctable_Pvb_data_ = ctable_Pvb_.data;
modules/cudalegacy/src/fgd.cpp:        stat.ctable_Pvb_step_ = ctable_Pvb_.step;
modules/cudalegacy/src/fgd.cpp:        stat.ctable_v_data_ = ctable_v_.data;
modules/cudalegacy/src/fgd.cpp:        stat.ctable_v_step_ = ctable_v_.step;
modules/cudalegacy/src/fgd.cpp:        stat.cctable_Pv_data_ = cctable_Pv_.data;
modules/cudalegacy/src/fgd.cpp:        stat.cctable_Pv_step_ = cctable_Pv_.step;
modules/cudalegacy/src/fgd.cpp:        stat.cctable_Pvb_data_ = cctable_Pvb_.data;
modules/cudalegacy/src/fgd.cpp:        stat.cctable_Pvb_step_ = cctable_Pvb_.step;
modules/cudalegacy/src/fgd.cpp:        stat.cctable_v1_data_ = cctable_v1_.data;
modules/cudalegacy/src/fgd.cpp:        stat.cctable_v1_step_ = cctable_v1_.step;
modules/cudalegacy/src/fgd.cpp:        stat.cctable_v2_data_ = cctable_v2_.data;
modules/cudalegacy/src/fgd.cpp:        stat.cctable_v2_step_ = cctable_v2_.step;
modules/cudalegacy/src/graphcuts.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/graphcuts.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/graphcuts.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/graphcuts.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/graphcuts.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/graphcuts.cpp:void cv::cuda::labelComponents(const GpuMat&, GpuMat&, int, Stream&) { throw_no_cuda(); }
modules/cudalegacy/src/graphcuts.cpp:        void labelComponents(const PtrStepSzb& edges, PtrStepSzi comps, int flags, cudaStream_t stream);
modules/cudalegacy/src/graphcuts.cpp:void cv::cuda::labelComponents(const GpuMat& mask, GpuMat& components, int flags, Stream& s)
modules/cudalegacy/src/graphcuts.cpp:    device::ccl::labelComponents(mask, components, flags, stream);
modules/cudalegacy/src/graphcuts.cpp:void cv::cuda::graphcut(GpuMat& terminals, GpuMat& leftTransp, GpuMat& rightTransp, GpuMat& top, GpuMat& bottom, GpuMat& labels, GpuMat& buf, Stream& s)
modules/cudalegacy/src/graphcuts.cpp:    labels.create(src_size, CV_8U);
modules/cudalegacy/src/graphcuts.cpp:        static_cast<int>(terminals.step), static_cast<int>(leftTransp.step), sznpp, labels.ptr<Npp8u>(), static_cast<int>(labels.step), state) );
modules/cudalegacy/src/graphcuts.cpp:            static_cast<int>(terminals.step), static_cast<int>(leftTransp.step), sznpp, labels.ptr<Npp8u>(), static_cast<int>(labels.step), state) );
modules/cudalegacy/src/graphcuts.cpp:            static_cast<int>(terminals.step), static_cast<int>(leftTransp.step), sznpp, labels.ptr<Npp8u>(), static_cast<int>(labels.step), state) );
modules/cudalegacy/src/graphcuts.cpp:              GpuMat& bottom, GpuMat& bottomLeft, GpuMat& bottomRight, GpuMat& labels, GpuMat& buf, Stream& s)
modules/cudalegacy/src/graphcuts.cpp:    labels.create(src_size, CV_8U);
modules/cudalegacy/src/graphcuts.cpp:        static_cast<int>(terminals.step), static_cast<int>(leftTransp.step), sznpp, labels.ptr<Npp8u>(), static_cast<int>(labels.step), state) );
modules/cudalegacy/src/graphcuts.cpp:            static_cast<int>(terminals.step), static_cast<int>(leftTransp.step), sznpp, labels.ptr<Npp8u>(), static_cast<int>(labels.step), state) );
modules/cudalegacy/src/graphcuts.cpp:            static_cast<int>(terminals.step), static_cast<int>(leftTransp.step), sznpp, labels.ptr<Npp8u>(), static_cast<int>(labels.step), state) );
modules/cudalegacy/src/calib3d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/calib3d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/calib3d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/calib3d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/calib3d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/NCV.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/NCV.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/NCV.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/NCV.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/NCV.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/NCV.cpp:    case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:        case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:        case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:    case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:        case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:        case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:        case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:            case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:    case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:    case NCVMemoryTypeHostPageable:
modules/cudalegacy/src/NCV.cpp:    ncvAssertReturn(hypotheses.memType() == NCVMemoryTypeHostPageable ||
modules/cudalegacy/src/NCV.cpp:        ncvAssertReturn(hypothesesWeights->memType() == NCVMemoryTypeHostPageable ||
modules/cudalegacy/src/bm_fast.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/bm_fast.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/bm_fast.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/bm_fast.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/bm_fast.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/fgd.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/fgd.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/fgd.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/fgd.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/fgd.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/fgd.hpp:        unsigned char* ctable_Pv_data_;
modules/cudalegacy/src/cuda/fgd.hpp:        size_t ctable_Pv_step_;
modules/cudalegacy/src/cuda/fgd.hpp:        unsigned char* ctable_Pvb_data_;
modules/cudalegacy/src/cuda/fgd.hpp:        size_t ctable_Pvb_step_;
modules/cudalegacy/src/cuda/fgd.hpp:        unsigned char* ctable_v_data_;
modules/cudalegacy/src/cuda/fgd.hpp:        size_t ctable_v_step_;
modules/cudalegacy/src/cuda/fgd.hpp:        unsigned char* cctable_Pv_data_;
modules/cudalegacy/src/cuda/fgd.hpp:        size_t cctable_Pv_step_;
modules/cudalegacy/src/cuda/fgd.hpp:        unsigned char* cctable_Pvb_data_;
modules/cudalegacy/src/cuda/fgd.hpp:        size_t cctable_Pvb_step_;
modules/cudalegacy/src/cuda/fgd.hpp:        unsigned char* cctable_v1_data_;
modules/cudalegacy/src/cuda/fgd.hpp:        size_t cctable_v1_step_;
modules/cudalegacy/src/cuda/fgd.hpp:        unsigned char* cctable_v2_data_;
modules/cudalegacy/src/cuda/fgd.hpp:        size_t cctable_v2_step_;
modules/cudalegacy/src/cuda/fgd.hpp:        return *((float*)(ctable_Pv_data_ + ((k * rows_) + i) * ctable_Pv_step_) + j);
modules/cudalegacy/src/cuda/fgd.hpp:        return *((float*)(ctable_Pvb_data_ + ((k * rows_) + i) * ctable_Pvb_step_) + j);
modules/cudalegacy/src/cuda/fgd.hpp:        return *((T*)(ctable_v_data_ + ((k * rows_) + i) * ctable_v_step_) + j);
modules/cudalegacy/src/cuda/fgd.hpp:        return *((float*)(cctable_Pv_data_ + ((k * rows_) + i) * cctable_Pv_step_) + j);
modules/cudalegacy/src/cuda/fgd.hpp:        return *((float*)(cctable_Pvb_data_ + ((k * rows_) + i) * cctable_Pvb_step_) + j);
modules/cudalegacy/src/cuda/fgd.hpp:        return *((T*)(cctable_v1_data_ + ((k * rows_) + i) * cctable_v1_step_) + j);
modules/cudalegacy/src/cuda/fgd.hpp:        return *((T*)(cctable_v2_data_ + ((k * rows_) + i) * cctable_v2_step_) + j);
modules/cudalegacy/src/cuda/NCV.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/NCV.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/NCV.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/NCV.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/NCV.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/NCVAlg.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/NCVAlg.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/NCVAlg.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/NCVAlg.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/NCVAlg.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/needle_map.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/needle_map.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/needle_map.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/needle_map.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/needle_map.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp:#pragma warning( disable: 4800 )
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp://     purpose is hereby granted without fee, provided that the above copyright
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp:// The author or Addison-Welsey Longman make no representations about the
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp://     suitability of this software for any purpose. It is provided "as is"
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp:        //Takes a variable argument list, transforms it into a list
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp:            //Variable argument list manipulation
modules/cudalegacy/src/cuda/NCVRuntimeTemplates.hpp:            //depending on the runtime variable and make recursive call.
modules/cudalegacy/src/cuda/NCVHaarObjectDetection.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/NCVHaarObjectDetection.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/NCVHaarObjectDetection.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/NCVHaarObjectDetection.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/NCVHaarObjectDetection.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/NCVHaarObjectDetection.cu:            //grab top warp elements
modules/cudalegacy/src/cuda/NCVHaarObjectDetection.cu:        //this variable is subject to reduction
modules/cudalegacy/src/cuda/NCVHaarObjectDetection.cu:                     (h_integralImage.memType() == NCVMemoryTypeHostPageable ||
modules/cudalegacy/src/cuda/NCVHaarObjectDetection.cu:                     (h_HaarStages.memType() == NCVMemoryTypeHostPageable ||
modules/cudalegacy/src/cuda/calib3d.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/calib3d.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/calib3d.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/calib3d.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/calib3d.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/bm_fast.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/bm_fast.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/bm_fast.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/bm_fast.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/bm_fast.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/bm_fast.cu:        return ::abs(a - b);
modules/cudalegacy/src/cuda/bm_fast.cu:        mutable PtrStepi buffer;
modules/cudalegacy/src/cuda/NCVPyramid.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/NCVPyramid.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/NCVPyramid.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/NCVPyramid.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/NCVPyramid.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/ccomponetns.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/ccomponetns.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/ccomponetns.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/ccomponetns.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/ccomponetns.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/ccomponetns.cu:        __global__ void lableTiles(const PtrStepSzb edges, PtrStepSzi comps)
modules/cudalegacy/src/cuda/ccomponetns.cu:            __shared__ int labelsTile[TILE_ROWS][TILE_COLS];
modules/cudalegacy/src/cuda/ccomponetns.cu:            int new_labels[TPB_Y][TPB_X];
modules/cudalegacy/src/cuda/ccomponetns.cu:            int old_labels[TPB_Y][TPB_X];
modules/cudalegacy/src/cuda/ccomponetns.cu:                    new_labels[i][j] = yloc * TILE_COLS + xloc;
modules/cudalegacy/src/cuda/ccomponetns.cu:                        old_labels[i][j]       = new_labels[i][j];
modules/cudalegacy/src/cuda/ccomponetns.cu:                        labelsTile[yloc][xloc] = new_labels[i][j];
modules/cudalegacy/src/cuda/ccomponetns.cu:                        int label = new_labels[i][j];
modules/cudalegacy/src/cuda/ccomponetns.cu:                           label = ::min(label, labelsTile[yloc - 1][xloc]);
modules/cudalegacy/src/cuda/ccomponetns.cu:                           label = ::min(label, labelsTile[yloc + 1][xloc]);
modules/cudalegacy/src/cuda/ccomponetns.cu:                           label = ::min(label, labelsTile[yloc][xloc - 1]);
modules/cudalegacy/src/cuda/ccomponetns.cu:                           label = ::min(label, labelsTile[yloc][xloc + 1]);
modules/cudalegacy/src/cuda/ccomponetns.cu:                       new_labels[i][j] = label;
modules/cudalegacy/src/cuda/ccomponetns.cu:                        if (new_labels[i][j] < old_labels[i][j])
modules/cudalegacy/src/cuda/ccomponetns.cu:                            Emulation::smem::atomicMin(&labelsTile[0][0] + old_labels[i][j], new_labels[i][j]);
modules/cudalegacy/src/cuda/ccomponetns.cu:                const int *labels = &labelsTile[0][0];
modules/cudalegacy/src/cuda/ccomponetns.cu:                        int label = new_labels[i][j];
modules/cudalegacy/src/cuda/ccomponetns.cu:                        while( labels[label] < label ) label = labels[label];
modules/cudalegacy/src/cuda/ccomponetns.cu:                        new_labels[i][j] = label;
modules/cudalegacy/src/cuda/ccomponetns.cu:                    int label = new_labels[i][j];
modules/cudalegacy/src/cuda/ccomponetns.cu:                    int yloc = label / TILE_COLS;
modules/cudalegacy/src/cuda/ccomponetns.cu:                    int xloc = label - yloc * TILE_COLS;
modules/cudalegacy/src/cuda/ccomponetns.cu:                    label = yloc * edges.cols + xloc;
modules/cudalegacy/src/cuda/ccomponetns.cu:                    if (y + CTA_SIZE_Y * i < comps.rows) comps(y + CTA_SIZE_Y * i, x + CTA_SIZE_X * j) = label;
modules/cudalegacy/src/cuda/ccomponetns.cu:        __device__ __forceinline__ int root(const PtrStepSzi& comps, int label)
modules/cudalegacy/src/cuda/ccomponetns.cu:                int y = label / comps.cols;
modules/cudalegacy/src/cuda/ccomponetns.cu:                int x = label - y * comps.cols;
modules/cudalegacy/src/cuda/ccomponetns.cu:                if (label == parent) break;
modules/cudalegacy/src/cuda/ccomponetns.cu:                label = parent;
modules/cudalegacy/src/cuda/ccomponetns.cu:            return label;
modules/cudalegacy/src/cuda/ccomponetns.cu:        void labelComponents(const PtrStepSzb& edges, PtrStepSzi comps, int flags, cudaStream_t stream)
modules/cudalegacy/src/cuda/ccomponetns.cu:            lableTiles<<<grid, block, 0, stream>>>(edges, comps);
modules/cudalegacy/src/cuda/NPP_staging.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/NPP_staging.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/NPP_staging.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/NPP_staging.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/NPP_staging.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/NPP_staging.cu:            //grab top warp elements
modules/cudalegacy/src/cuda/NPP_staging.cu:    float x = fabsf(x_);
modules/cudalegacy/src/cuda/fgd.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/fgd.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/fgd.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/fgd.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/fgd.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/fgd.cu:                ::abs(curVal.x - prevVal.x),
modules/cudalegacy/src/cuda/fgd.cu:                ::abs(curVal.y - prevVal.y),
modules/cudalegacy/src/cuda/fgd.cu:                ::abs(curVal.z - prevVal.z)
modules/cudalegacy/src/cuda/fgd.cu:            ::abs(curVal.x - prevVal.x),
modules/cudalegacy/src/cuda/fgd.cu:            ::abs(curVal.y - prevVal.y),
modules/cudalegacy/src/cuda/fgd.cu:            ::abs(curVal.z - prevVal.z)
modules/cudalegacy/src/cuda/fgd.cu:                        if (::abs(v1.x - prevVal.x) <= deltaCC &&
modules/cudalegacy/src/cuda/fgd.cu:                            ::abs(v1.y - prevVal.y) <= deltaCC &&
modules/cudalegacy/src/cuda/fgd.cu:                            ::abs(v1.z - prevVal.z) <= deltaCC &&
modules/cudalegacy/src/cuda/fgd.cu:                            ::abs(v2.x - curVal.x) <= deltaCC &&
modules/cudalegacy/src/cuda/fgd.cu:                            ::abs(v2.y - curVal.y) <= deltaCC &&
modules/cudalegacy/src/cuda/fgd.cu:                            ::abs(v2.z - curVal.z) <= deltaCC)
modules/cudalegacy/src/cuda/fgd.cu:                    if (::abs(v.x - curVal.x) <= deltaC &&
modules/cudalegacy/src/cuda/fgd.cu:                        ::abs(v.y - curVal.y) <= deltaC &&
modules/cudalegacy/src/cuda/fgd.cu:                        ::abs(v.z - curVal.z) <= deltaC)
modules/cudalegacy/src/cuda/fgd.cu:                    ::abs(v1.x - prevVal.x),
modules/cudalegacy/src/cuda/fgd.cu:                    ::abs(v1.y - prevVal.y),
modules/cudalegacy/src/cuda/fgd.cu:                    ::abs(v1.z - prevVal.z)
modules/cudalegacy/src/cuda/fgd.cu:                    ::abs(v2.x - curVal.x),
modules/cudalegacy/src/cuda/fgd.cu:                    ::abs(v2.y - curVal.y),
modules/cudalegacy/src/cuda/fgd.cu:                    ::abs(v2.z - curVal.z)
modules/cudalegacy/src/cuda/fgd.cu:                // Replace N2th elem in the table by new feature:
modules/cudalegacy/src/cuda/fgd.cu:            //re-sort CCt table by Pv
modules/cudalegacy/src/cuda/fgd.cu:            // Update stat table:
modules/cudalegacy/src/cuda/fgd.cu:                    ::abs(v.x - curVal.x),
modules/cudalegacy/src/cuda/fgd.cu:                    ::abs(v.y - curVal.y),
modules/cudalegacy/src/cuda/fgd.cu:                    ::abs(v.z - curVal.z)
modules/cudalegacy/src/cuda/fgd.cu:                //N2th elem in the table is replaced by a new features
modules/cudalegacy/src/cuda/fgd.cu:            //re-sort Ct table by Pv
modules/cudalegacy/src/cuda/fgd.cu:            // Update stat table:
modules/cudalegacy/src/cuda/NCVColorConversion.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/NCVColorConversion.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/NCVColorConversion.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/NCVColorConversion.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/NCVColorConversion.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/NCVBroxOpticalFlow.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/NCVBroxOpticalFlow.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/NCVBroxOpticalFlow.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/NCVBroxOpticalFlow.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/NCVBroxOpticalFlow.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/bm.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/bm.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/bm.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/bm.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/bm.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/bm.cu:                s += ::abs(tex2D(tex_prev, X1 + x, Y1 + y) - tex2D(tex_curr, X2 + x, Y2 + y));
modules/cudalegacy/src/cuda/gmg.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/gmg.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/gmg.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/gmg.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/gmg.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/cuda/NCVPixelOperations.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/cuda/NCVPixelOperations.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/cuda/NCVPixelOperations.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/cuda/NCVPixelOperations.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/cuda/NCVPixelOperations.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/interpolate_frames.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/interpolate_frames.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/interpolate_frames.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/interpolate_frames.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/interpolate_frames.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudalegacy/src/needle_map.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudalegacy/src/needle_map.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudalegacy/src/needle_map.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudalegacy/src/needle_map.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudalegacy/src/needle_map.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/CMakeLists.txt:  ocv_module_disable(cudafilters)
modules/cudafilters/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4324 /wd4512 -Wundef -Wmissing-declarations -Wshadow)
modules/cudafilters/test/test_filters.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/test/test_filters.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/test/test_filters.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/test/test_filters.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/test/test_filters.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/test/test_filters.cpp:// SeparableLinearFilter
modules/cudafilters/test/test_filters.cpp:PARAM_TEST_CASE(SeparableLinearFilter, cv::cuda::DeviceInfo, cv::Size, MatDepth, Channels, KSize, Anchor, BorderType, UseRoi)
modules/cudafilters/test/test_filters.cpp:CUDA_TEST_P(SeparableLinearFilter, Accuracy)
modules/cudafilters/test/test_filters.cpp:    cv::Ptr<cv::cuda::Filter> filter = cv::cuda::createSeparableLinearFilter(src.type(), -1, rowKernel, columnKernel, anchor, borderType);
modules/cudafilters/test/test_filters.cpp:INSTANTIATE_TEST_CASE_P(CUDA_Filters, SeparableLinearFilter, testing::Combine(
modules/cudafilters/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/include/opencv2/cudafilters.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/include/opencv2/cudafilters.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/include/opencv2/cudafilters.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/include/opencv2/cudafilters.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/include/opencv2/cudafilters.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/include/opencv2/cudafilters.hpp:/** @brief Creates a non-separable linear 2D filter.
modules/cudafilters/include/opencv2/cudafilters.hpp:// Separable Linear Filter
modules/cudafilters/include/opencv2/cudafilters.hpp:/** @brief Creates a separable linear filter.
modules/cudafilters/include/opencv2/cudafilters.hpp:CV_EXPORTS Ptr<Filter> createSeparableLinearFilter(int srcType, int dstType, InputArray rowKernel, InputArray columnKernel,
modules/cudafilters/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/perf/perf_filters.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/perf/perf_filters.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/perf/perf_filters.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/perf/perf_filters.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/perf/perf_filters.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/filtering.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/filtering.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/filtering.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/filtering.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/filtering.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/filtering.cpp:Ptr<Filter> cv::cuda::createSeparableLinearFilter(int, int, InputArray, InputArray, Point, int, int) { throw_no_cuda(); return Ptr<Filter>(); }
modules/cudafilters/src/filtering.cpp:// Separable Linear Filter
modules/cudafilters/src/filtering.cpp:    class SeparableLinearFilter : public Filter
modules/cudafilters/src/filtering.cpp:        SeparableLinearFilter(int srcType, int dstType,
modules/cudafilters/src/filtering.cpp:    SeparableLinearFilter::SeparableLinearFilter(int srcType, int dstType,
modules/cudafilters/src/filtering.cpp:    void SeparableLinearFilter::apply(InputArray _src, OutputArray _dst, Stream& _stream)
modules/cudafilters/src/filtering.cpp:Ptr<Filter> cv::cuda::createSeparableLinearFilter(int srcType, int dstType, InputArray rowKernel, InputArray columnKernel, Point anchor, int rowBorderMode, int columnBorderMode)
modules/cudafilters/src/filtering.cpp:    return makePtr<SeparableLinearFilter>(srcType, dstType, rowKernel, columnKernel, anchor, rowBorderMode, columnBorderMode);
modules/cudafilters/src/filtering.cpp:    return cuda::createSeparableLinearFilter(srcType, dstType, kx, ky, Point(-1, -1), rowBorderMode, columnBorderMode);
modules/cudafilters/src/filtering.cpp:    if (ksize.height == ksize.width && std::abs(sigma1 - sigma2) < DBL_EPSILON)
modules/cudafilters/src/filtering.cpp:    return createSeparableLinearFilter(srcType, dstType, kx, ky, Point(-1,-1), rowBorderMode, columnBorderMode);
modules/cudafilters/src/cuda/filter2d.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/filter2d.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/filter2d.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/filter2d.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/filter2d.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.16uc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16uc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16uc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.16uc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.16uc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.16sc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16sc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16sc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.16sc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.16sc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.32fc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32fc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32fc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.32fc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.32fc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.32fc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32fc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32fc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.32fc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.32fc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.8uc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.8uc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.8uc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.8uc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.8uc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.8uc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.8uc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.8uc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.8uc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.8uc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.16uc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16uc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16uc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.16uc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.16uc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.8uc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.8uc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.8uc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.8uc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.8uc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.16uc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16uc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16uc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.16uc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.16uc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.32fc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32fc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32fc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.32fc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.32fc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.32sc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32sc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32sc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.32sc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.32sc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.32fc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32fc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32fc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.32fc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.32fc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.8uc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.8uc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.8uc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.8uc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.8uc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.16uc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16uc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16uc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.16uc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.16uc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.32sc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32sc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32sc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.32sc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.32sc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.16sc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16sc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16sc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.16sc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.16sc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.8uc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.8uc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.8uc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.8uc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.8uc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.32fc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32fc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32fc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.32fc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.32fc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.16sc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16sc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16sc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.16sc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.16sc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.16sc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16sc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16sc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.16sc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.16sc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.16uc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16uc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.16uc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.16uc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.16uc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.16uc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16uc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16uc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.16uc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.16uc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.8uc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.8uc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.8uc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.8uc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.8uc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.32sc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32sc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32sc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.32sc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.32sc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.32sc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32sc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32sc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.32sc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.32sc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.32fc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32fc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32fc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.32fc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.32fc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.32sc3.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32sc3.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.32sc3.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.32sc3.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.32sc3.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.16sc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16sc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16sc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.16sc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.16sc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/column_filter.16sc1.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16sc1.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/column_filter.16sc1.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/column_filter.16sc1.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/column_filter.16sc1.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/cuda/row_filter.32sc4.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32sc4.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/cuda/row_filter.32sc4.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/cuda/row_filter.32sc4.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/cuda/row_filter.32sc4.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafilters/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafilters/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafilters/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafilters/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafilters/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/CMakeLists.txt:  ocv_module_disable(cudacodec)
modules/cudacodec/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4324 /wd4512 -Wundef -Wshadow)
modules/cudacodec/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/test/test_video.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/test/test_video.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/test/test_video.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/test/test_video.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/test/test_video.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/include/opencv2/cudacodec.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/include/opencv2/cudacodec.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/include/opencv2/cudacodec.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/include/opencv2/cudacodec.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/include/opencv2/cudacodec.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/include/opencv2/cudacodec.hpp:    int DisableCabac;    //!< NVVE_DISABLE_CABAC,
modules/cudacodec/include/opencv2/cudacodec.hpp:    int DisableSPSPPS;   //!< NVVE_DISABLE_SPS_PPS
modules/cudacodec/include/opencv2/cudacodec.hpp:/** @brief Struct providing information about video file format. :
modules/cudacodec/include/opencv2/cudacodec.hpp:    /** @brief Grabs, decodes and returns the next video frame.
modules/cudacodec/include/opencv2/cudacodec.hpp:    If no frames has been grabbed (there are no more frames in video file), the methods return false .
modules/cudacodec/include/opencv2/cudacodec.hpp:    /** @brief Returns information about video file format.
modules/cudacodec/include/opencv2/cudacodec.hpp:    /** @brief Returns information about video file format.
modules/cudacodec/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/perf/perf_video.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/perf/perf_video.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/perf/perf_video.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/perf/perf_video.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/perf/perf_video.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/thread.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/thread.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/thread.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/thread.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/thread.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/cuvid_video_source.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/cuvid_video_source.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/cuvid_video_source.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/cuvid_video_source.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/cuvid_video_source.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_source.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/video_source.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/video_source.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/video_source.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/video_source.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/ffmpeg_video_source.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/ffmpeg_video_source.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/ffmpeg_video_source.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/ffmpeg_video_source.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/ffmpeg_video_source.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_source.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/video_source.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/video_source.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/video_source.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/video_source.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/thread.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/thread.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/thread.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/thread.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/thread.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_parser.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/video_parser.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/video_parser.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/video_parser.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/video_parser.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_parser.cpp:    bool isFrameAvailable = thiz->frameQueue_->waitUntilFrameAvailable(picParams->CurrPicIdx);
modules/cudacodec/src/video_parser.cpp:    if (!isFrameAvailable)
modules/cudacodec/src/cuvid_video_source.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/cuvid_video_source.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/cuvid_video_source.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/cuvid_video_source.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/cuvid_video_source.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_writer.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/video_writer.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/video_writer.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/video_writer.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/video_writer.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_writer.cpp:                CV_Error(Error::GpuNotSupported, "No CUDA capability present");
modules/cudacodec/src/video_writer.cpp:        while (fabs(static_cast<double>(frame_rate) / frame_rate_base) - fps > 0.001)
modules/cudacodec/src/video_writer.cpp:        int DisableCabac = params.DisableCabac;
modules/cudacodec/src/video_writer.cpp:        err = NVSetParamValue(encoder_, NVVE_DISABLE_CABAC, &DisableCabac);
modules/cudacodec/src/video_writer.cpp:        int DisableSPSPPS = params.DisableSPSPPS;
modules/cudacodec/src/video_writer.cpp:        err = NVSetParamValue(encoder_, NVVE_DISABLE_SPS_PPS, &DisableSPSPPS);
modules/cudacodec/src/video_writer.cpp:        int DisableCabac;
modules/cudacodec/src/video_writer.cpp:        err = NVGetParamValue(encoder_, NVVE_DISABLE_CABAC, &DisableCabac);
modules/cudacodec/src/video_writer.cpp:        params.DisableCabac = DisableCabac;
modules/cudacodec/src/video_writer.cpp:        int DisableSPSPPS;
modules/cudacodec/src/video_writer.cpp:        err = NVGetParamValue(encoder_, NVVE_DISABLE_SPS_PPS, &DisableSPSPPS);
modules/cudacodec/src/video_writer.cpp:        params.DisableSPSPPS = DisableSPSPPS;
modules/cudacodec/src/video_writer.cpp:    DisableCabac = 0;
modules/cudacodec/src/video_writer.cpp:    DisableSPSPPS = 0;
modules/cudacodec/src/video_writer.cpp:    read(fs["DisableCabac"   ], DisableCabac, 0);
modules/cudacodec/src/video_writer.cpp:    read(fs["DisableSPSPPS"  ], DisableSPSPPS, 0);
modules/cudacodec/src/video_writer.cpp:    write(fs, "DisableCabac"   , DisableCabac);
modules/cudacodec/src/video_writer.cpp:    write(fs, "DisableSPSPPS"  , DisableSPSPPS);
modules/cudacodec/src/frame_queue.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/frame_queue.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/frame_queue.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/frame_queue.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/frame_queue.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/frame_queue.hpp:    // Spins until frame becomes available or decoding gets canceled.
modules/cudacodec/src/frame_queue.hpp:    // If the requested frame is available the method returns true.
modules/cudacodec/src/frame_queue.hpp:    // available, the method returns false.
modules/cudacodec/src/frame_queue.hpp:    bool waitUntilFrameAvailable(int pictureIndex);
modules/cudacodec/src/video_decoder.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/video_decoder.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/video_decoder.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/video_decoder.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/video_decoder.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_decoder.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/video_decoder.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/video_decoder.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/video_decoder.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/video_decoder.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/ffmpeg_video_source.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/ffmpeg_video_source.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/ffmpeg_video_source.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/ffmpeg_video_source.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/ffmpeg_video_source.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/cuda/rgb_to_yv12.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/cuda/rgb_to_yv12.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/cuda/rgb_to_yv12.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/cuda/rgb_to_yv12.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/cuda/rgb_to_yv12.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/cuda/nv12_to_rgb.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/cuda/nv12_to_rgb.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/cuda/nv12_to_rgb.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/cuda/nv12_to_rgb.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/cuda/nv12_to_rgb.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_reader.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/video_reader.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/video_reader.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/video_reader.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/video_reader.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_reader.cpp:            // comment this out if we inclue the line of code seen above
modules/cudacodec/src/frame_queue.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/frame_queue.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/frame_queue.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/frame_queue.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/frame_queue.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/frame_queue.cpp:bool cv::cudacodec::detail::FrameQueue::waitUntilFrameAvailable(int pictureIndex)
modules/cudacodec/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudacodec/src/video_parser.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudacodec/src/video_parser.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudacodec/src/video_parser.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudacodec/src/video_parser.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudacodec/src/video_parser.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/CMakeLists.txt:#   Some parts taken from version of Hartmut Seichter, HIT Lab NZ.
modules/videoio/CMakeLists.txt:# below are not available on WinRT 8.0.
modules/videoio/CMakeLists.txt:# Enabling it for WiRT 8.1+ only.
modules/videoio/CMakeLists.txt:        ${CMAKE_CURRENT_LIST_DIR}/src/cap_winrt/CaptureFrameGrabber.cpp
modules/videoio/CMakeLists.txt:        ${CMAKE_CURRENT_LIST_DIR}/src/cap_winrt/CaptureFrameGrabber.hpp
modules/videoio/CMakeLists.txt:       ${CMAKE_CURRENT_LIST_DIR}/src/cap_ios_abstract_camera.mm
modules/videoio/CMakeLists.txt:  #these variables are set by CHECK_MODULE macro
modules/videoio/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wno-deprecated-declarations)
modules/videoio/misc/java/test/VideoCaptureTest.java:        isTestCaseEnabled = false;
modules/videoio/misc/java/test/VideoCaptureTest.java:    public void testGrab() {
modules/videoio/misc/java/test/VideoCaptureTest.java:        isSucceed = capture.grab();
modules/videoio/test/test_ffmpeg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/test/test_ffmpeg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/test/test_ffmpeg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/test/test_ffmpeg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/test/test_ffmpeg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/test/test_ffmpeg.cpp:                    absdiff(actual, reference, diff);
modules/videoio/test/test_positioning.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/test/test_positioning.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/test/test_positioning.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/test/test_positioning.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/test/test_positioning.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/test/test_basic_props.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/test/test_basic_props.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/test/test_basic_props.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/test/test_basic_props.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/test/test_basic_props.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/test/test_video_pos.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/test/test_video_pos.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/test/test_video_pos.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/test/test_video_pos.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/test/test_video_pos.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/videoio/test/test_video_pos.cpp:        mat = Scalar(fabs(cos(i*0.08)*255), fabs(sin(i*0.05)*255), i);
modules/videoio/test/test_fourcc.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/test/test_fourcc.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/test/test_fourcc.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/test/test_fourcc.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/test/test_fourcc.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/test/test_fourcc.cpp:DEFINE_GUID(CLSID_SampleGrabber,0xc1f400a0,0x3f08,0x11d3,0x9f,0x0b,0x00,0x60,0x08,0x03,0x9e,0x37)
modules/videoio/test/test_fourcc.cpp:DEFINE_GUID(IID_ICaptureGraphBuilder2,0x93e5a4e0,0x2d50,0x11d2,0xab,0xfa,0x00,0xa0,0xc9,0xc6,0xe3,0x8d)
modules/videoio/test/test_fourcc.cpp:DEFINE_GUID(IID_ISampleGrabber,0x6b652fff,0x11fe,0x4fce,0x92,0xad,0x02,0x66,0xb5,0xd7,0xc7,0x8f)
modules/videoio/test/test_video_io.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/test/test_video_io.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/test/test_video_io.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/test/test_video_io.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/test/test_video_io.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/test/test_video_io.cpp:    string _name = dir + string("../cv/shared/baboon.png");
modules/videoio/test/test_video_io.cpp:            //absdiff(img, img1, diff);
modules/videoio/test/test_framecount.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/test/test_framecount.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/test/test_framecount.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/test/test_framecount.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/test/test_framecount.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/include/opencv2/videoio/videoio.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/include/opencv2/videoio/videoio.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/include/opencv2/videoio/videoio.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/include/opencv2/videoio/videoio.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/include/opencv2/videoio/videoio.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/include/opencv2/videoio/cap_winrt.hpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/videoio/include/opencv2/videoio/cap_winrt.hpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/videoio/include/opencv2/videoio/cap_winrt.hpp:    Starts (1) frame-grabbing loop and (2) message loop
modules/videoio/include/opencv2/videoio/cap_winrt.hpp:            if (!cam.grab()) continue;
modules/videoio/include/opencv2/videoio/cap_winrt.hpp:    Must be called from WinRT specific callback to handle image grabber state.
modules/videoio/include/opencv2/videoio/cap_winrt.hpp:    Code sample is available for winrt_startMessageLoop().
modules/videoio/include/opencv2/videoio/cap_winrt.hpp:    Code sample is available for winrt_startMessageLoop().
modules/videoio/include/opencv2/videoio/videoio_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/include/opencv2/videoio/videoio_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/include/opencv2/videoio/videoio_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/include/opencv2/videoio/videoio_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/include/opencv2/videoio/videoio_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/include/opencv2/videoio/videoio_c.h:/* grab a frame, return 1 on success, 0 on fail.
modules/videoio/include/opencv2/videoio/videoio_c.h:CVAPI(int) cvGrabFrame( CvCapture* capture );
modules/videoio/include/opencv2/videoio/videoio_c.h:/* get the frame grabbed with cvGrabFrame(..)
modules/videoio/include/opencv2/videoio/videoio_c.h:/* Just a combination of cvGrabFrame and cvRetrieveFrame
modules/videoio/include/opencv2/videoio/videoio_c.h:    // modes of the controlling registers (can be: auto, manual, auto single push, absolute Latter allowed with any other mode)
modules/videoio/include/opencv2/videoio/videoio_c.h:    // Properties of cameras available through OpenNI interfaces
modules/videoio/include/opencv2/videoio/videoio_c.h:    // Properties of cameras available through GStreamer interface
modules/videoio/include/opencv2/videoio/videoio_c.h:    CV_CAP_PROP_PVAPI_MULTICASTIP           = 300, // ip for anable multicast master mode. 0 for disable multicast
modules/videoio/include/opencv2/videoio/videoio_c.h:    // Properties of cameras available through XIMEA SDK interface
modules/videoio/include/opencv2/videoio/videoio_c.h:    CV_CAP_PROP_XI_LIMIT_BANDWIDTH                              = 459, // Set/get bandwidth(datarate)(in Megabits)
modules/videoio/include/opencv2/videoio/videoio_c.h:    CV_CAP_PROP_XI_OUTPUT_DATA_PACKING                          = 463, // Device output data packing (or grouping) enabled. Packing could be enabled if output_data_bit_depth > 8 and packing capability is available.
modules/videoio/include/opencv2/videoio/videoio_c.h:    CV_CAP_PROP_XI_APPLY_CMS                                    = 471, // Enable applying of CMS profiles to xiGetImage (see XI_PRM_INPUT_CMS_PROFILE, XI_PRM_OUTPUT_CMS_PROFILE).
modules/videoio/include/opencv2/videoio/videoio_c.h:    CV_CAP_PROP_XI_DEBOUNCE_EN                                  = 507, // Enable/Disable debounce to selected GPI
modules/videoio/include/opencv2/videoio/videoio_c.h:    CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH                          = 539, // Calculate and return available interface bandwidth(int Megabits)
modules/videoio/include/opencv2/videoio/videoio_c.h:    CV_CAP_PROP_XI_HDR                                          = 559, // Enable High Dynamic Range feature.
modules/videoio/include/opencv2/videoio/videoio_c.h:    CV_CAP_PROP_XI_FFS_ACCESS_KEY                               = 583, // Setting of key enables file operations on some cameras.
modules/videoio/include/opencv2/videoio/videoio_c.h:    // Properties of cameras available through AVFOUNDATION interface
modules/videoio/include/opencv2/videoio/videoio_c.h:    // Properties of cameras available through Smartek Giganetix Ethernet Vision interface
modules/videoio/include/opencv2/videoio/cap_ios.h: * 1. Redistributions of source code must retain the above copyright notice,
modules/videoio/include/opencv2/videoio/cap_ios.h: * 2. Redistributions in binary form must reproduce the above copyright notice,
modules/videoio/include/opencv2/videoio/cap_ios.h:    BOOL cameraAvailable;
modules/videoio/include/opencv2/videoio.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/include/opencv2/videoio.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/include/opencv2/videoio.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/include/opencv2/videoio.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/include/opencv2/videoio.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/include/opencv2/videoio.hpp:// modes of the controlling registers (can be: auto, manual, auto single push, absolute Latter allowed with any other mode)
modules/videoio/include/opencv2/videoio.hpp:// Properties of cameras available through OpenNI interfaces
modules/videoio/include/opencv2/videoio.hpp:enum { CAP_PROP_PVAPI_MULTICASTIP           = 300, // ip for anable multicast master mode. 0 for disable multicast
modules/videoio/include/opencv2/videoio.hpp:// Properties of cameras available through XIMEA SDK interface
modules/videoio/include/opencv2/videoio.hpp:// Properties of cameras available through AVFOUNDATION interface
modules/videoio/include/opencv2/videoio.hpp:// Properties of cameras available through Smartek Giganetix Ethernet Vision interface
modules/videoio/include/opencv2/videoio.hpp:    implementation if multiple are available: e.g. CAP_FFMPEG or CAP_IMAGES
modules/videoio/include/opencv2/videoio.hpp:    /** @brief Grabs the next frame from video file or capturing device.
modules/videoio/include/opencv2/videoio.hpp:    The methods/functions grab the next frame from video file or camera and return true (non-zero) in
modules/videoio/include/opencv2/videoio.hpp:    have hardware synchronization. That is, you call VideoCapture::grab() for each camera and after that
modules/videoio/include/opencv2/videoio.hpp:    correct way of retrieving data from it is to call VideoCapture::grab first and then call
modules/videoio/include/opencv2/videoio.hpp:    CV_WRAP virtual bool grab();
modules/videoio/include/opencv2/videoio.hpp:    /** @brief Decodes and returns the grabbed video frame.
modules/videoio/include/opencv2/videoio.hpp:    The methods/functions decode and return the just grabbed frame. If no frames has been grabbed
modules/videoio/include/opencv2/videoio.hpp:    /** @brief Grabs, decodes and returns the next video frame.
modules/videoio/include/opencv2/videoio.hpp:    The methods/functions combine VideoCapture::grab and VideoCapture::retrieve in one call. This is the
modules/videoio/include/opencv2/videoio.hpp:    grabbed frame. If no frames has been grabbed (camera has been disconnected, or there are no more
modules/videoio/include/opencv2/videoio.hpp:    implementation if multiple are available: e.g. CAP_FFMPEG or CAP_IMAGES
modules/videoio/include/opencv2/videoio.hpp:    so you may receive a warning message from OpenCV about fourcc code conversion.
modules/videoio/src/cap_ffmpeg_impl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_ffmpeg_impl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_ffmpeg_impl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_ffmpeg_impl.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_ffmpeg_impl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_ffmpeg_impl.hpp:#pragma warning( disable: 4244 4510 4512 4610 )
modules/videoio/src/cap_ffmpeg_impl.hpp:    bool grabFrame();
modules/videoio/src/cap_ffmpeg_impl.hpp:bool CvCapture_FFMPEG::grabFrame()
modules/videoio/src/cap_ffmpeg_impl.hpp:    // if we have not grabbed a single frame before first seek, let's read the first frame
modules/videoio/src/cap_ffmpeg_impl.hpp:    // and get some valuable information during the process
modules/videoio/src/cap_ffmpeg_impl.hpp:        grabFrame();
modules/videoio/src/cap_ffmpeg_impl.hpp:            grabFrame();
modules/videoio/src/cap_ffmpeg_impl.hpp:                    if(!grabFrame())
modules/videoio/src/cap_ffmpeg_impl.hpp:    // http://ffmpeg-users.933282.n4.nabble.com/warning-clipping-1-dct-coefficients-to-127-127-td934297.html
modules/videoio/src/cap_ffmpeg_impl.hpp:    while (fabs((double)frame_rate/frame_rate_base) - fps > 0.001){
modules/videoio/src/cap_ffmpeg_impl.hpp:     and qmin since they will be set to reasonable defaults by the libx264
modules/videoio/src/cap_ffmpeg_impl.hpp:    // the rightmost column/the bottom row. Probably, this should be handled more elegantly,
modules/videoio/src/cap_ffmpeg_impl.hpp:int cvGrabFrame_FFMPEG(CvCapture_FFMPEG* capture)
modules/videoio/src/cap_ffmpeg_impl.hpp:    return capture->grabFrame();
modules/videoio/src/cap_ffmpeg_impl.hpp:    // http://ffmpeg-users.933282.n4.nabble.com/warning-clipping-1-dct-coefficients-to-127-127-td934297.html
modules/videoio/src/cap_ffmpeg_impl.hpp:    while (fabs(static_cast<double>(frame_rate)/frame_rate_base) - fps > 0.001)
modules/videoio/src/cap_winrt_capture.hpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_capture.hpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_capture.hpp:#include <condition_variable>
modules/videoio/src/cap_winrt_capture.hpp:        virtual bool grabFrame();
modules/videoio/src/cap_dshow.hpp:    virtual bool grabFrame();
modules/videoio/src/cap_cmu.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_cmu.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_cmu.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_cmu.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_cmu.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_cmu.cpp:// This firewire capability added by Philip Gruebele (pgruebele@cox.net).
modules/videoio/src/cap_cmu.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_cmu.cpp:// This firewire capability added by Philip Gruebele (pgruebele@cox.net)
modules/videoio/src/cap_cmu.cpp:// convert frame rate to suitable enum
modules/videoio/src/cap_cmu.cpp:    // if first time, then allocate all available cameras
modules/videoio/src/cap_cmu.cpp:bool CvCaptureCAM_CMU::grabFrame()
modules/videoio/src/cap_winrt_video.hpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_video.hpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_video.hpp:#include "cap_winrt/CaptureFrameGrabber.hpp"
modules/videoio/src/cap_winrt_video.hpp:    bool initGrabber(int device, int w, int h);
modules/videoio/src/cap_winrt_video.hpp:    void closeGrabber();
modules/videoio/src/cap_winrt_video.hpp:    void _GrabFrameAsync(::Media::CaptureFrameGrabber^ frameGrabber);
modules/videoio/src/cap_winrt_video.hpp:    ::Media::CaptureFrameGrabber^ m_frameGrabber;
modules/videoio/src/cap_winrt_video.hpp:    //std::atomic<bool>       bGrabberInited;
modules/videoio/src/cap_winrt_video.hpp:    std::atomic<bool>       bGrabberInited;
modules/videoio/src/cap_winrt_video.hpp:    std::atomic<bool>       bGrabberInitInProgress;
modules/videoio/src/cap_winrt_capture.cpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_capture.cpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_capture.cpp:                Video::getInstance().closeGrabber();
modules/videoio/src/cap_winrt_capture.cpp:            // only start the grabber if the camera was opened in OpenCV
modules/videoio/src/cap_winrt_capture.cpp:                Video::getInstance().initGrabber(device, width, height);
modules/videoio/src/cap_winrt_capture.cpp:            //grabberStarted = false;
modules/videoio/src/cap_winrt_capture.cpp:            Video::getInstance().closeGrabber();
modules/videoio/src/cap_winrt_capture.cpp:    // grab a frame:
modules/videoio/src/cap_winrt_capture.cpp:    bool VideoCapture_WinRT::grabFrame()
modules/videoio/src/cap_winrt_capture.cpp:    // should be called on the image processing thread after grabFrame
modules/videoio/src/cap_dc1394.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_dc1394.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_dc1394.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_dc1394.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_dc1394.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_dc1394.cpp:    int buffer_is_writeable;  // indicates whether frame.imageData is allocated by OpenCV or DC1394
modules/videoio/src/cap_dc1394.cpp:static int icvGrabFrameCAM_DC1394( CvCaptureCAM_DC1394* capture );
modules/videoio/src/cap_dc1394.cpp:    pcap->buffer_is_writeable = 0;
modules/videoio/src/cap_dc1394.cpp:static int icvGrabFrameCAM_DC1394( CvCaptureCAM_DC1394* capture ){
modules/videoio/src/cap_dc1394.cpp:    // TODO: should this function wait until the next frame is available or return
modules/videoio/src/cap_dc1394.cpp:           capture->buffer_is_writeable == 0)
modules/videoio/src/cap_dc1394.cpp:            if(capture->frame.imageData && capture->buffer_is_writeable){
modules/videoio/src/cap_dc1394.cpp:            capture->buffer_is_writeable = 1;
modules/videoio/src/cap_dc1394.cpp:        if(capture->buffer_is_writeable){
modules/videoio/src/cap_dc1394.cpp:        capture->buffer_is_writeable = 0;
modules/videoio/src/cap_dc1394.cpp:// Toggle setting about whether or not RGB color conversion is to be performed
modules/videoio/src/cap_dc1394.cpp:        dc1394bool_t hasAutoCapability = DC1394_FALSE;
modules/videoio/src/cap_dc1394.cpp:        dc1394_has_auto_mode(capture->handle, capture->camera->node, feature_id, &hasAutoCapability);
modules/videoio/src/cap_dc1394.cpp:        if( hasAutoCapability ) {
modules/videoio/src/cap_dc1394.cpp:            // if the auto mode isn't enabled, enable it
modules/videoio/src/cap_dc1394.cpp:/* color conversion functions from Bart Nabbe. *//* corrected by Damien: bad coeficients in YUV2RGB */
modules/videoio/src/cap_dc1394.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_dc1394.cpp:bool CvCaptureCAM_DC1394_CPP::grabFrame()
modules/videoio/src/cap_dc1394.cpp:    return captureDC1394 ? icvGrabFrameCAM_DC1394( captureDC1394 ) != 0 : false;
modules/videoio/src/cap_dc1394.cpp:    // Simulate mutable (C++11-like) member variable
modules/videoio/src/cap_ffmpeg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_ffmpeg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_ffmpeg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_ffmpeg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_ffmpeg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_ffmpeg.cpp:static CvGrabFrame_Plugin icvGrabFrame_FFMPEG_p = 0;
modules/videoio/src/cap_ffmpeg.cpp:            icvGrabFrame_FFMPEG_p =
modules/videoio/src/cap_ffmpeg.cpp:                (CvGrabFrame_Plugin)GetProcAddress(icvFFOpenCV, "cvGrabFrame_FFMPEG");
modules/videoio/src/cap_ffmpeg.cpp:                icvGrabFrame_FFMPEG_p != 0 &&
modules/videoio/src/cap_ffmpeg.cpp:        icvGrabFrame_FFMPEG_p = (CvGrabFrame_Plugin)cvGrabFrame_FFMPEG;
modules/videoio/src/cap_ffmpeg.cpp:    virtual bool grabFrame()
modules/videoio/src/cap_ffmpeg.cpp:        return ffmpegCapture ? icvGrabFrame_FFMPEG_p(ffmpegCapture)!=0 : false;
modules/videoio/src/cap_msmf.hpp:#define MF_PROP_SAMPLEGRABBERCALLBACK L"samplegrabbercallback"
modules/videoio/src/cap_msmf.hpp:    0xdabd13ab, 0x26b7, 0x47c2, 0x97, 0xc1, 0x4b, 0x4, 0xc1, 0x87, 0xb8, 0x38);
modules/videoio/src/cap_msmf.hpp:    MAKE_ENUM_PAIR(MediaEventType, MESessionCapabilitiesChanged),
modules/videoio/src/cap_msmf.hpp:    MAKE_ENUM_PAIR(MediaEventType, MEEnablerProgress),
modules/videoio/src/cap_msmf.hpp:    MAKE_ENUM_PAIR(MediaEventType, MEEnablerCompleted),
modules/videoio/src/cap_msmf.hpp:#if (WINVER >= 0x0602) // Available since Win 8
modules/videoio/src/cap_msmf.hpp:#if (WINVER >= 0x0602) // Available since Win 8
modules/videoio/src/cap_msmf.hpp:#define _Object IInspectable*
modules/videoio/src/cap_msmf.hpp:#define _ObjectObj Microsoft::WRL::ComPtr<IInspectable>
modules/videoio/src/cap_msmf.hpp:#define _Map ABI::Windows::Foundation::Collections::IMap<HSTRING, IInspectable *>
modules/videoio/src/cap_msmf.hpp:        Microsoft::WRL::ComPtr<IInspectable> pInsp;\
modules/videoio/src/cap_msmf.hpp:#if defined(_MSC_VER) && _MSC_VER >= 1700  // '_Outptr_result_nullonfailure_' SAL is avaialable since VS 2012
modules/videoio/src/cap_msmf.hpp:        _ComPtr<IMFSampleGrabberSinkCallback> pSampleCallback;
modules/videoio/src/cap_msmf.hpp:        hr = m_pParent->GetUnknown(MF_MEDIASINK_SAMPLEGRABBERCALLBACK, IID_IMFSampleGrabberSinkCallback, (LPVOID*)pSampleCallback.GetAddressOf());
modules/videoio/src/cap_msmf.hpp:        _ComPtr<IMFSampleGrabberSinkCallback> pSampleCallback;
modules/videoio/src/cap_msmf.hpp:                hr = m_pParent->GetUnknown(MF_MEDIASINK_SAMPLEGRABBERCALLBACK, IID_IMFSampleGrabberSinkCallback, (LPVOID*)pSampleCallback.GetAddressOf());
modules/videoio/src/cap_msmf.hpp:#pragma warning(disable: 4127) // constant expression
modules/videoio/src/cap_msmf.hpp:/* Be sure to declare webcam device capability in manifest
modules/videoio/src/cap_msmf.hpp:    <Extension Category="windows.activatableClass.inProcessServer">
modules/videoio/src/cap_msmf.hpp:        <ActivatableClass ActivatableClassId="cv.MediaSink" ThreadingModel="both" />
modules/videoio/src/cap_msmf.hpp:    InspectableClass(RuntimeClass_CV_MediaSink, BaseTrust)
modules/videoio/src/cap_msmf.hpp:#if defined(_MSC_VER) && _MSC_VER >= 1700  // '_Outptr_result_nullonfailure_' SAL is avaialable since VS 2012
modules/videoio/src/cap_msmf.hpp:            Microsoft::WRL::ComPtr<IInspectable> spInsp;
modules/videoio/src/cap_msmf.hpp:            Microsoft::WRL::ComPtr<ABI::Windows::Foundation::Collections::IMap<HSTRING, IInspectable *>> spSetting;
modules/videoio/src/cap_msmf.hpp:            case ABI::Windows::Foundation::PropertyType_Inspectable:
modules/videoio/src/cap_msmf.hpp:                                                                       Microsoft::WRL::ComPtr<IInspectable> value;
modules/videoio/src/cap_msmf.hpp:        Microsoft::WRL::ComPtr<ABI::Windows::Foundation::Collections::IMap<GUID, IInspectable*>> spMap;
modules/videoio/src/cap_msmf.hpp:        Microsoft::WRL::ComPtr<ABI::Windows::Foundation::Collections::IIterable<ABI::Windows::Foundation::Collections::IKeyValuePair<GUID, IInspectable*>*>> spIterable;
modules/videoio/src/cap_msmf.hpp:        Microsoft::WRL::ComPtr<ABI::Windows::Foundation::Collections::IIterator<ABI::Windows::Foundation::Collections::IKeyValuePair<GUID, IInspectable*>*>> spIterator;
modules/videoio/src/cap_msmf.hpp:            hr = spMap.As(&spIterable);
modules/videoio/src/cap_msmf.hpp:            hr = spIterable->First(&spIterator);
modules/videoio/src/cap_msmf.hpp:            Microsoft::WRL::ComPtr<ABI::Windows::Foundation::Collections::IKeyValuePair<GUID, IInspectable*> > spKeyValuePair;
modules/videoio/src/cap_msmf.hpp:            Microsoft::WRL::ComPtr<IInspectable> spValue;
modules/videoio/src/cap_msmf.hpp:            Microsoft::WRL::ComPtr<IInspectable> spValue;
modules/videoio/src/cap_msmf.hpp:                    //if had an activation object for the sink, shut down would be managed and MF_STREAM_SINK_SUPPORTS_ROTATION appears to be setable to TRUE
modules/videoio/src/cap_msmf.hpp:        _ComPtr<IMFSampleGrabberSinkCallback> pSampleCallback;
modules/videoio/src/cap_msmf.hpp:            hr = GetUnknown(MF_MEDIASINK_SAMPLEGRABBERCALLBACK, IID_IMFSampleGrabberSinkCallback, (LPVOID*)pSampleCallback.GetAddressOf());
modules/videoio/src/cap_msmf.hpp:        _ComPtr<IMFSampleGrabberSinkCallback> pSampleCallback;
modules/videoio/src/cap_msmf.hpp:            hr = GetUnknown(MF_MEDIASINK_SAMPLEGRABBERCALLBACK, IID_IMFSampleGrabberSinkCallback, (LPVOID*)pSampleCallback.GetAddressOf());
modules/videoio/src/cap_msmf.hpp:        _ComPtr<IMFSampleGrabberSinkCallback> pSampleCallback;
modules/videoio/src/cap_msmf.hpp:            hr = GetUnknown(MF_MEDIASINK_SAMPLEGRABBERCALLBACK, IID_IMFSampleGrabberSinkCallback, (LPVOID*)pSampleCallback.GetAddressOf());
modules/videoio/src/cap_msmf.hpp:        _ComPtr<IMFSampleGrabberSinkCallback> pSampleCallback;
modules/videoio/src/cap_msmf.hpp:        hr = GetUnknown(MF_MEDIASINK_SAMPLEGRABBERCALLBACK, IID_IMFSampleGrabberSinkCallback, (LPVOID*)pSampleCallback.GetAddressOf());
modules/videoio/src/cap_msmf.hpp:        _ComPtr<IMFSampleGrabberSinkCallback> pSampleCallback;
modules/videoio/src/cap_msmf.hpp:        hr = GetUnknown(MF_MEDIASINK_SAMPLEGRABBERCALLBACK, IID_IMFSampleGrabberSinkCallback, (LPVOID*)pSampleCallback.GetAddressOf());
modules/videoio/src/cap_msmf.hpp:        _ComPtr<IMFSampleGrabberSinkCallback> pSampleCallback;
modules/videoio/src/cap_msmf.hpp:        hr = GetUnknown(MF_MEDIASINK_SAMPLEGRABBERCALLBACK, IID_IMFSampleGrabberSinkCallback, (LPVOID*)pSampleCallback.GetAddressOf());
modules/videoio/src/cap_msmf.hpp:ActivatableClass(MediaSink);
modules/videoio/src/cap_mjpeg_encoder.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_mjpeg_encoder.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_mjpeg_encoder.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_mjpeg_encoder.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_mjpeg_encoder.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_mjpeg_encoder.cpp:    static bool createEncodeHuffmanTable( const int* src, unsigned* table, int max_size )
modules/videoio/src/cap_mjpeg_encoder.cpp:        /* calc min and max values in the table */
modules/videoio/src/cap_mjpeg_encoder.cpp:        memset( table, 0, size*sizeof(table[0]));
modules/videoio/src/cap_mjpeg_encoder.cpp:        table[0] = min_val;
modules/videoio/src/cap_mjpeg_encoder.cpp:        table[1] = size - 2;
modules/videoio/src/cap_mjpeg_encoder.cpp:                table[val - min_val + 2] = (code << 8) | i;
modules/videoio/src/cap_mjpeg_encoder.cpp:    static int* createSourceHuffmanTable(const uchar* src, int* dst,
modules/videoio/src/cap_mjpeg_encoder.cpp:        int*  table = dst;
modules/videoio/src/cap_mjpeg_encoder.cpp:        return  table;
modules/videoio/src/cap_mjpeg_encoder.cpp:// Standard JPEG quantization tables
modules/videoio/src/cap_mjpeg_encoder.cpp:static const uchar jpegTableK1_T[] =
modules/videoio/src/cap_mjpeg_encoder.cpp:static const uchar jpegTableK2_T[] =
modules/videoio/src/cap_mjpeg_encoder.cpp:// Standard Huffman tables
modules/videoio/src/cap_mjpeg_encoder.cpp:static const uchar jpegTableK3[] =
modules/videoio/src/cap_mjpeg_encoder.cpp:static const uchar jpegTableK4[] =
modules/videoio/src/cap_mjpeg_encoder.cpp:static const uchar jpegTableK5[] =
modules/videoio/src/cap_mjpeg_encoder.cpp:static const uchar jpegTableK6[] =
modules/videoio/src/cap_mjpeg_encoder.cpp:reg = vabsq_s16(reg); \
modules/videoio/src/cap_mjpeg_encoder.cpp:        unsigned (&_huff_dc_tab)[2][16],
modules/videoio/src/cap_mjpeg_encoder.cpp:        unsigned (&_huff_ac_tab)[2][256],
modules/videoio/src/cap_mjpeg_encoder.cpp:        short (&_fdct_qtab)[2][64],
modules/videoio/src/cap_mjpeg_encoder.cpp:        uchar* _cat_table,
modules/videoio/src/cap_mjpeg_encoder.cpp:        huff_dc_tab(_huff_dc_tab),
modules/videoio/src/cap_mjpeg_encoder.cpp:        huff_ac_tab(_huff_ac_tab),
modules/videoio/src/cap_mjpeg_encoder.cpp:        fdct_qtab(_fdct_qtab),
modules/videoio/src/cap_mjpeg_encoder.cpp:        cat_table(_cat_table)
modules/videoio/src/cap_mjpeg_encoder.cpp:#define JPUT_HUFF(val, table) \
modules/videoio/src/cap_mjpeg_encoder.cpp:    code = table[(val) + 2]; \
modules/videoio/src/cap_mjpeg_encoder.cpp:                    aan_fdct8x8( src_ptr, buffer, src_step, fdct_qtab[is_chroma] );
modules/videoio/src/cap_mjpeg_encoder.cpp:                        const unsigned* htable = huff_ac_tab[is_chroma];
modules/videoio/src/cap_mjpeg_encoder.cpp:                        aan_fdct8x8( src_ptr, buffer, src_step, fdct_qtab[is_chroma] );
modules/videoio/src/cap_mjpeg_encoder.cpp:                            int cat = cat_table[val + CAT_TAB_SIZE];
modules/videoio/src/cap_mjpeg_encoder.cpp:                            JPUT_HUFF( cat, huff_dc_tab[is_chroma] );
modules/videoio/src/cap_mjpeg_encoder.cpp:                                    JPUT_HUFF( 0xF0, htable ); // encode 16 zeros
modules/videoio/src/cap_mjpeg_encoder.cpp:                                    int cat = cat_table[val + CAT_TAB_SIZE];
modules/videoio/src/cap_mjpeg_encoder.cpp:                                    JPUT_HUFF( cat + run*16, htable );
modules/videoio/src/cap_mjpeg_encoder.cpp:                            JPUT_HUFF( 0x00, htable ); // encode EOB
modules/videoio/src/cap_mjpeg_encoder.cpp:    const unsigned (&huff_dc_tab)[2][16];
modules/videoio/src/cap_mjpeg_encoder.cpp:    const unsigned (&huff_ac_tab)[2][256];
modules/videoio/src/cap_mjpeg_encoder.cpp:    const short (&fdct_qtab)[2][64];
modules/videoio/src/cap_mjpeg_encoder.cpp:    const uchar* cat_table;
modules/videoio/src/cap_mjpeg_encoder.cpp:    static bool init_cat_table = false;
modules/videoio/src/cap_mjpeg_encoder.cpp:    static uchar cat_table[CAT_TAB_SIZE*2+1];
modules/videoio/src/cap_mjpeg_encoder.cpp:    if( !init_cat_table )
modules/videoio/src/cap_mjpeg_encoder.cpp:            cat_table[i+CAT_TAB_SIZE] = ((a.i >> 23) & 255) - (126 & (i ? -1 : 0));
modules/videoio/src/cap_mjpeg_encoder.cpp:        init_cat_table = true;
modules/videoio/src/cap_mjpeg_encoder.cpp:    // encode the header and tables
modules/videoio/src/cap_mjpeg_encoder.cpp:    short fdct_qtab[2][64];
modules/videoio/src/cap_mjpeg_encoder.cpp:    unsigned huff_dc_tab[2][16];
modules/videoio/src/cap_mjpeg_encoder.cpp:    unsigned huff_ac_tab[2][256];
modules/videoio/src/cap_mjpeg_encoder.cpp:    // Encode quantization tables
modules/videoio/src/cap_mjpeg_encoder.cpp:        const uchar* qtable = i == 0 ? jpegTableK1_T : jpegTableK2_T;
modules/videoio/src/cap_mjpeg_encoder.cpp:        strm.jputShort( 2 + 65*1 ); // put single qtable
modules/videoio/src/cap_mjpeg_encoder.cpp:        strm.putByte( 0*16 + i );   // 8-bit table
modules/videoio/src/cap_mjpeg_encoder.cpp:            int qval = cvRound(qtable[idx]*inv_quality);
modules/videoio/src/cap_mjpeg_encoder.cpp:            fdct_qtab[i][idx] = (short)(cvRound((1 << (postshift + 11)))/
modules/videoio/src/cap_mjpeg_encoder.cpp:    // Encode huffman tables
modules/videoio/src/cap_mjpeg_encoder.cpp:        const uchar* htable = i == 0 ? jpegTableK3 : i == 1 ? jpegTableK5 :
modules/videoio/src/cap_mjpeg_encoder.cpp:        i == 2 ? jpegTableK4 : jpegTableK6;
modules/videoio/src/cap_mjpeg_encoder.cpp:        int is_ac_tab = i & 1;
modules/videoio/src/cap_mjpeg_encoder.cpp:        int tableSize = 16 + (is_ac_tab ? 162 : 12);
modules/videoio/src/cap_mjpeg_encoder.cpp:        strm.jputShort( 3 + tableSize ); // define one huffman table
modules/videoio/src/cap_mjpeg_encoder.cpp:        strm.putByte( is_ac_tab*16 + idx ); // put DC/AC flag and table index
modules/videoio/src/cap_mjpeg_encoder.cpp:        strm.putBytes( htable, tableSize ); // put table
modules/videoio/src/cap_mjpeg_encoder.cpp:        BitStream::createEncodeHuffmanTable( BitStream::createSourceHuffmanTable(
modules/videoio/src/cap_mjpeg_encoder.cpp:                                            htable, hbuffer, 16, 9 ), is_ac_tab ? huff_ac_tab[idx] :
modules/videoio/src/cap_mjpeg_encoder.cpp:                                            huff_dc_tab[idx], is_ac_tab ? 256 : 16 );
modules/videoio/src/cap_mjpeg_encoder.cpp:        strm.putByte( i > 0 ); // quantization table idx
modules/videoio/src/cap_mjpeg_encoder.cpp:        strm.putByte( (i>0)*16 + (i>0) );// selection of DC & AC tables
modules/videoio/src/cap_mjpeg_encoder.cpp:    MjpegEncoder parallel_encoder(height, width, step, data, input_channels, channels, colorspace, huff_dc_tab, huff_ac_tab, fdct_qtab, cat_table, buffers_list, nstripes);
modules/videoio/src/cap_v4l.cpp:same "ideas" where applicable, that is, where I could figure out what the previous author
modules/videoio/src/cap_v4l.cpp:If you are interested, I will make my version available to other OpenCV users.  The big
modules/videoio/src/cap_v4l.cpp:Second Patch:   August 28, 2004 Sfuncia Fabio fiblan@yahoo.it
modules/videoio/src/cap_v4l.cpp:    for -1 index (icvOpenCAM_V4L) i dont use /dev/video but real device available, because
modules/videoio/src/cap_v4l.cpp:    is a bad link. I search the first available device with indexList.
modules/videoio/src/cap_v4l.cpp: - cvGrabFrame should not wait for the end of the first frame, and should return quickly
modules/videoio/src/cap_v4l.cpp:   trigger the capture of the next frame (the user choses when to do it using GrabFrame)
modules/videoio/src/cap_v4l.cpp:   To get the old behavior, re-call cvRetrieveFrame just after cvGrabFrame.
modules/videoio/src/cap_v4l.cpp: - having global bufferIndex and FirstCapture variables makes the code non-reentrant
modules/videoio/src/cap_v4l.cpp:   resolutions available). Just don't try to set the size at 640x480 if the hardware supports
modules/videoio/src/cap_v4l.cpp:   scaling: open with the default (probably best) image size, and let the user scale it
modules/videoio/src/cap_v4l.cpp: - bug fix: if the image size changes, realloc the new image only when it is grabbed
modules/videoio/src/cap_v4l.cpp:Fourth Patch: Sept 7, 2005 Csaba Kertesz sign@freemail.hu
modules/videoio/src/cap_v4l.cpp:Fifth Patch: Sept 7, 2005 Csaba Kertesz sign@freemail.hu
modules/videoio/src/cap_v4l.cpp:Sixth Patch: Sept 10, 2005 Csaba Kertesz sign@freemail.hu
modules/videoio/src/cap_v4l.cpp:Seventh Patch: Sept 10, 2005 Csaba Kertesz sign@freemail.hu
modules/videoio/src/cap_v4l.cpp:Fix reliability problems with high-resolution UVC cameras on linux
modules/videoio/src/cap_v4l.cpp:Returns the millisecond timestamp of the last frame grabbed or 0 if no frames have been grabbed
modules/videoio/src/cap_v4l.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_v4l.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_v4l.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_v4l.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_v4l.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_v4l.cpp:// NetBSD compability layer with V4L2
modules/videoio/src/cap_v4l.cpp:// if enabled, then bad JPEG warnings become errors and cause NULL returned instead of image
modules/videoio/src/cap_v4l.cpp:   /* V4L2 variables */
modules/videoio/src/cap_v4l.cpp:   v4l2_capability cap;
modules/videoio/src/cap_v4l.cpp:   /* V4L2 control variables */
modules/videoio/src/cap_v4l.cpp:   virtual bool grabFrame();
modules/videoio/src/cap_v4l.cpp:static bool icvGrabFrameCAM_V4L( CvCaptureCAM_V4L* capture );
modules/videoio/src/cap_v4l.cpp:/* Simple test program: Find number of Video Sources available.
modules/videoio/src/cap_v4l.cpp:  // Test device for V4L2 compability
modules/videoio/src/cap_v4l.cpp:  // -1 then unable to open device
modules/videoio/src/cap_v4l.cpp:  capture->cap = v4l2_capability();
modules/videoio/src/cap_v4l.cpp:  /* Query information about current input */
modules/videoio/src/cap_v4l.cpp:   /* V4L2 control variables are zero (memset above) */
modules/videoio/src/cap_v4l.cpp:   if ((capture->cap.capabilities & V4L2_CAP_VIDEO_CAPTURE) == 0) {
modules/videoio/src/cap_v4l.cpp:      fprintf( stderr, "VIDEOIO ERROR: V4L2: device %s is unable to capture video memory.\n",deviceName);
modules/videoio/src/cap_v4l.cpp:         fprintf (stderr, "VIDEOIO ERROR: V4L2: Aren't able to set channel number\n");
modules/videoio/src/cap_v4l.cpp:   if (_index<0) { // Asking for the first device available
modules/videoio/src/cap_v4l.cpp:static bool icvGrabFrameCAM_V4L(CvCaptureCAM_V4L* capture) {
modules/videoio/src/cap_v4l.cpp:        /* enable the streaming */
modules/videoio/src/cap_v4l.cpp:            /* error enabling the stream */
modules/videoio/src/cap_v4l.cpp:        //  but could be fatal if bad jpeg is enabled
modules/videoio/src/cap_v4l.cpp:  int is_abs;
modules/videoio/src/cap_v4l.cpp:} code_table_t;
modules/videoio/src/cap_v4l.cpp:static code_table_t table[256];
modules/videoio/src/cap_v4l.cpp:    pre-calculates a locally stored table for efficient huffman-decoding.
modules/videoio/src/cap_v4l.cpp:  Each entry at index x in the table represents the codeword
modules/videoio/src/cap_v4l.cpp:  int is_abs, val, len;
modules/videoio/src/cap_v4l.cpp:    is_abs = 0;
modules/videoio/src/cap_v4l.cpp:      is_abs = 1;
modules/videoio/src/cap_v4l.cpp:    table[i].is_abs = is_abs;
modules/videoio/src/cap_v4l.cpp:    table[i].val = val;
modules/videoio/src/cap_v4l.cpp:    table[i].len = len;
modules/videoio/src/cap_v4l.cpp:      bitpos += table[code].len;
modules/videoio/src/cap_v4l.cpp:      val = table[code].val;
modules/videoio/src/cap_v4l.cpp:      if (!table[code].is_abs) {
modules/videoio/src/cap_v4l.cpp:              fprintf(stderr, "VIDEOIO ERROR: V4L: Unable to get camera FPS\n");
modules/videoio/src/cap_v4l.cpp:               perror ("Unable to stop the stream");
modules/videoio/src/cap_v4l.cpp:bool CvCaptureCAM_V4L::grabFrame()
modules/videoio/src/cap_v4l.cpp:    return icvGrabFrameCAM_V4L( this );
modules/videoio/src/cap_libv4l.cpp:same "ideas" where applicable, that is, where I could figure out what the previous author
modules/videoio/src/cap_libv4l.cpp:If you are interested, I will make my version available to other OpenCV users.  The big
modules/videoio/src/cap_libv4l.cpp:Second Patch:   August 28, 2004 Sfuncia Fabio fiblan@yahoo.it
modules/videoio/src/cap_libv4l.cpp:    for -1 index (icvOpenCAM_V4L) i dont use /dev/video but real device available, because
modules/videoio/src/cap_libv4l.cpp:    is a bad link. I search the first available device with indexList.
modules/videoio/src/cap_libv4l.cpp: - cvGrabFrame should not wait for the end of the first frame, and should return quickly
modules/videoio/src/cap_libv4l.cpp:   trigger the capture of the next frame (the user choses when to do it using GrabFrame)
modules/videoio/src/cap_libv4l.cpp:   To get the old behavior, re-call cvRetrieveFrame just after cvGrabFrame.
modules/videoio/src/cap_libv4l.cpp: - having global bufferIndex and FirstCapture variables makes the code non-reentrant
modules/videoio/src/cap_libv4l.cpp:   resolutions available). Just don't try to set the size at 640x480 if the hardware supports
modules/videoio/src/cap_libv4l.cpp:   scaling: open with the default (probably best) image size, and let the user scale it
modules/videoio/src/cap_libv4l.cpp: - bug fix: if the image size changes, realloc the new image only when it is grabbed
modules/videoio/src/cap_libv4l.cpp:Fourth Patch: Sept 7, 2005 Csaba Kertesz sign@freemail.hu
modules/videoio/src/cap_libv4l.cpp:Fifth Patch: Sept 7, 2005 Csaba Kertesz sign@freemail.hu
modules/videoio/src/cap_libv4l.cpp:Sixth Patch: Sept 10, 2005 Csaba Kertesz sign@freemail.hu
modules/videoio/src/cap_libv4l.cpp:Seventh Patch: Sept 10, 2005 Csaba Kertesz sign@freemail.hu
modules/videoio/src/cap_libv4l.cpp:Fix reliability problems with high-resolution UVC cameras on linux
modules/videoio/src/cap_libv4l.cpp:- CvCaptureCAM_V4L structure cleanup (no longer needs <PROPERTY>_{min,max,} variables)
modules/videoio/src/cap_libv4l.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_libv4l.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_libv4l.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_libv4l.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_libv4l.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_libv4l.cpp:// if enabled, copies data from the buffer. this uses a bit more memory,
modules/videoio/src/cap_libv4l.cpp://  but much more reliable for some UVC cameras
modules/videoio/src/cap_libv4l.cpp:    struct video_capability capability;
modules/videoio/src/cap_libv4l.cpp:   /* V4L2 variables */
modules/videoio/src/cap_libv4l.cpp:   struct v4l2_capability cap;
modules/videoio/src/cap_libv4l.cpp:   /* V4L2 control variables */
modules/videoio/src/cap_libv4l.cpp:static int icvGrabFrameCAM_V4L( CvCaptureCAM_V4L* capture );
modules/videoio/src/cap_libv4l.cpp:/* Simple test program: Find number of Video Sources available.
modules/videoio/src/cap_libv4l.cpp:  // if detect = -1 then unable to open device
modules/videoio/src/cap_libv4l.cpp:  // Test device for V4L compability
modules/videoio/src/cap_libv4l.cpp:    /* Query the newly opened device for its capabilities */
modules/videoio/src/cap_libv4l.cpp:    if (v4l1_ioctl(capture->deviceHandle, VIDIOCGCAP, &capture->capability) < 0)
modules/videoio/src/cap_libv4l.cpp:  // if detect = -1 then unable to open device
modules/videoio/src/cap_libv4l.cpp:  // Test device for V4L2 compability
modules/videoio/src/cap_libv4l.cpp:      CLEAR (capture->capability);
modules/videoio/src/cap_libv4l.cpp:      capture->capability.type = capture->cap.capabilities;
modules/videoio/src/cap_libv4l.cpp:      if (-1 != xioctl (capture->deviceHandle, VIDIOC_G_INPUT, &capture->capability.channels))
modules/videoio/src/cap_libv4l.cpp:   if ((capture->cap.capabilities & V4L2_CAP_VIDEO_CAPTURE) == 0) {
modules/videoio/src/cap_libv4l.cpp:      fprintf( stderr, "VIDEOIO ERROR: V4L2: device %s is unable to capture video memory.\n",deviceName);
modules/videoio/src/cap_libv4l.cpp:         fprintf (stderr, "VIDEOIO ERROR: V4L2: Aren't able to set channel number\n");
modules/videoio/src/cap_libv4l.cpp:      fprintf(stderr, "VIDEOIO ERROR: libv4l unable to ioctl S_FMT\n");
modules/videoio/src/cap_libv4l.cpp:      fprintf( stderr, "VIDEOIO ERROR: libv4l unable convert to requested pixfmt\n");
modules/videoio/src/cap_libv4l.cpp:              ": device %s: Unable to open for READ ONLY\n", deviceName);
modules/videoio/src/cap_libv4l.cpp:              ": device %s: Unable to query number of channels\n", deviceName);
modules/videoio/src/cap_libv4l.cpp:     if ((capture->capability.type & VID_TYPE_CAPTURE) == 0) {
modules/videoio/src/cap_libv4l.cpp:                "device %s is unable to capture video memory.\n",deviceName);
modules/videoio/src/cap_libv4l.cpp:     if(capture->capability.channels>0) {
modules/videoio/src/cap_libv4l.cpp:             //printf("\n%d, %s not NTSC capable.\n",selectedChannel.channel, selectedChannel.name);
modules/videoio/src/cap_libv4l.cpp:         fprintf( stderr, "VIDEOIO ERROR: V4L: Unable to determine size of incoming image\n");
modules/videoio/src/cap_libv4l.cpp:        fprintf( stderr, "VIDEOIO ERROR: libv4l unable to ioctl VIDIOCSPICT\n\n");
modules/videoio/src/cap_libv4l.cpp:        fprintf( stderr, "VIDEOIO ERROR: libv4l unable to ioctl VIDIOCGPICT\n\n");
modules/videoio/src/cap_libv4l.cpp:        fprintf( stderr, "VIDEOIO ERROR: libv4l unable convert to requested pixfmt\n\n");
modules/videoio/src/cap_libv4l.cpp:   if (index<0) { // Asking for the first device available
modules/videoio/src/cap_libv4l.cpp:      the standard set of cv calls promoting transparency.  "Vector Table" insertion. */
modules/videoio/src/cap_libv4l.cpp:static int icvGrabFrameCAM_V4L(CvCaptureCAM_V4L* capture) {
modules/videoio/src/cap_libv4l.cpp:        /* enable the streaming */
modules/videoio/src/cap_libv4l.cpp:            /* error enabling the stream */
modules/videoio/src/cap_libv4l.cpp:            fprintf( stderr, "VIDEOIO ERROR: V4L: Initial Capture Error: Unable to load initial memory buffers.\n");
modules/videoio/src/cap_libv4l.cpp:          fprintf (stderr, " ERROR: V4L: Unable to determine size of incoming image\n");
modules/videoio/src/cap_libv4l.cpp:            //would be maximally numerically stable to cast to convert as bits, but would also be counterintuitive to decode
modules/videoio/src/cap_libv4l.cpp:            fprintf(stderr, "VIDEOIO ERROR: V4L: Unable to get camera FPS\n");
modules/videoio/src/cap_libv4l.cpp:        // this is the captureable, not per say what you'll get..
modules/videoio/src/cap_libv4l.cpp:      //we need to make sure that the autofocus is switch off, if available.
modules/videoio/src/cap_libv4l.cpp:        //autofocus capability is supported, switch it off.
modules/videoio/src/cap_libv4l.cpp:    fprintf(stderr, "VIDEOIO ERROR: V4L2: Unable to get property %s(%u) - %s\n", name, capture->control.id, strerror(errno));
modules/videoio/src/cap_libv4l.cpp:     if (w>capture->capability.maxwidth) {
modules/videoio/src/cap_libv4l.cpp:       w=capture->capability.maxwidth;
modules/videoio/src/cap_libv4l.cpp:     if (h>capture->capability.maxheight) {
modules/videoio/src/cap_libv4l.cpp:       h=capture->capability.maxheight;
modules/videoio/src/cap_libv4l.cpp:      //we need to make sure that the autofocus is switch off, if available.
modules/videoio/src/cap_libv4l.cpp:        //autofocus capability is supported, switch it off.
modules/videoio/src/cap_libv4l.cpp:    fprintf(stderr, "VIDEOIO ERROR: V4L2: Unable to get property %s(%u) - %s\n", name, capture->control.id, strerror(errno));
modules/videoio/src/cap_libv4l.cpp:      fprintf(stderr, "VIDEOIO ERROR: V4L: Unable to set video informations\n");
modules/videoio/src/cap_libv4l.cpp:            fprintf(stderr, "VIDEOIO ERROR: V4L: Unable to set camera FPS\n");
modules/videoio/src/cap_libv4l.cpp:         perror ("Unable to stop the stream.");
modules/videoio/src/cap_libv4l.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_libv4l.cpp:bool CvCaptureCAM_V4L_CPP::grabFrame()
modules/videoio/src/cap_libv4l.cpp:    return captureV4L ? icvGrabFrameCAM_V4L( captureV4L ) != 0 : false;
modules/videoio/src/cap_winrt_bridge.hpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_bridge.hpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_bridge.hpp:    unsigned char *             backInputPtr;       // Video grabber writes this
modules/videoio/src/cap_winrt_bridge.hpp:    Windows::UI::Xaml::Media::Imaging::WriteableBitmap^ frontOutputBuffer;  // OpenCV write this
modules/videoio/src/cap_winrt_bridge.hpp:    Windows::UI::Xaml::Media::Imaging::WriteableBitmap^ backOutputBuffer;   // XAML reads this
modules/videoio/src/cap_winrt_bridge.hpp:    // nb. inputBufferMutex was not able to guarantee that OpenCV Mats were
modules/videoio/src/cap_images.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_images.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_images.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_images.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_images.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_images.cpp:        grabbedInOpen = false;
modules/videoio/src/cap_images.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_images.cpp:    bool grabbedInOpen;
modules/videoio/src/cap_images.cpp:bool CvCapture_Images::grabFrame()
modules/videoio/src/cap_images.cpp:    if (grabbedInOpen)
modules/videoio/src/cap_images.cpp:        grabbedInOpen = false;
modules/videoio/src/cap_images.cpp:    return grabbedInOpen ? NULL : frame;
modules/videoio/src/cap_images.cpp:            grabbedInOpen = false; // grabbed frame is not valid anymore
modules/videoio/src/cap_images.cpp:            grabbedInOpen = false; // grabbed frame is not valid anymore
modules/videoio/src/cap_images.cpp:    // grab frame to enable properties retrieval
modules/videoio/src/cap_images.cpp:    bool grabRes = grabFrame();
modules/videoio/src/cap_images.cpp:    grabbedInOpen = true;
modules/videoio/src/cap_images.cpp:    return grabRes;
modules/videoio/src/cap_intelperc.hpp:    bool grabFrame();
modules/videoio/src/cap_intelperc.hpp:    mutable PXCSmartPtr<PXCCapture::Device> m_device;
modules/videoio/src/cap_intelperc.hpp:    virtual bool grabFrame();
modules/videoio/src/cap_winrt/MediaStreamSink.hpp:// The above copyright notice and this permission notice shall be included in
modules/videoio/src/cap_winrt/CaptureFrameGrabber.hpp:// The above copyright notice and this permission notice shall be included in
modules/videoio/src/cap_winrt/CaptureFrameGrabber.hpp:ref class CaptureFrameGrabber sealed
modules/videoio/src/cap_winrt/CaptureFrameGrabber.hpp:    // IClosable
modules/videoio/src/cap_winrt/CaptureFrameGrabber.hpp:    virtual ~CaptureFrameGrabber();
modules/videoio/src/cap_winrt/CaptureFrameGrabber.hpp:    static concurrency::task<CaptureFrameGrabber^> CreateAsync(_In_ WMC::MediaCapture^ capture, _In_ WMMp::VideoEncodingProperties^ props)
modules/videoio/src/cap_winrt/CaptureFrameGrabber.hpp:    static concurrency::task<CaptureFrameGrabber^> CreateAsync(_In_ WMC::MediaCapture^ capture, _In_ WMMp::VideoEncodingProperties^ props, CaptureStreamType streamType);
modules/videoio/src/cap_winrt/CaptureFrameGrabber.hpp:    CaptureFrameGrabber(_In_ WMC::MediaCapture^ capture, _In_ WMMp::VideoEncodingProperties^ props, CaptureStreamType streamType);
modules/videoio/src/cap_winrt/MediaSink.hpp:// The above copyright notice and this permission notice shall be included in
modules/videoio/src/cap_winrt/MediaSink.hpp:    InspectableClass(L"MediaSink", BaseTrust)
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:// The above copyright notice and this permission notice shall be included in
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:#include "CaptureFrameGrabber.hpp"
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:task<Media::CaptureFrameGrabber^> Media::CaptureFrameGrabber::CreateAsync(_In_ MediaCapture^ capture, _In_ VideoEncodingProperties^ props, CaptureStreamType streamType)
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:    auto reader = ref new Media::CaptureFrameGrabber(capture, props, streamType);
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:Media::CaptureFrameGrabber::CaptureFrameGrabber(_In_ MediaCapture^ capture, _In_ VideoEncodingProperties^ props, CaptureStreamType streamType)
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:    auto videoSampleHandler = ref new MediaSampleHandler(this, &Media::CaptureFrameGrabber::ProcessSample);
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:Media::CaptureFrameGrabber::~CaptureFrameGrabber()
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:void Media::CaptureFrameGrabber::ShowCameraSettings()
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:task<void> Media::CaptureFrameGrabber::FinishAsync()
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:task<ComPtr<IMF2DBuffer2>> Media::CaptureFrameGrabber::GetFrameAsync()
modules/videoio/src/cap_winrt/CaptureFrameGrabber.cpp:void Media::CaptureFrameGrabber::ProcessSample(_In_ MediaSample^ sample)
modules/videoio/src/cap_winrt/MFIncludes.hpp:// The above copyright notice and this permission notice shall be included in
modules/videoio/src/cap_winrt/MFIncludes.hpp:    CHK(reinterpret_cast<IInspectable*>(in)->QueryInterface(IID_PPV_ARGS(&out)));
modules/videoio/src/cap_winrt/MFIncludes.hpp:// Wraps an IMFSample in a C++/CX class to be able to define a callback delegate
modules/videoio/src/cap_winrt/MediaStreamSink.cpp:// The above copyright notice and this permission notice shall be included in
modules/videoio/src/ffmpeg_codecs.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/ffmpeg_codecs.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/ffmpeg_codecs.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/ffmpeg_codecs.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/ffmpeg_codecs.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_mjpeg_decoder.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_mjpeg_decoder.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_mjpeg_decoder.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_mjpeg_decoder.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_mjpeg_decoder.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_mjpeg_decoder.cpp:    DWORD biClrUsed;             // 256 (color table size; for 8-bit only)
modules/videoio/src/cap_mjpeg_decoder.cpp:    DWORD biClrImportant;        // Specifies that the first x colors of the color table. Are important to the DIB.
modules/videoio/src/cap_mjpeg_decoder.cpp:            uint64_t absolute_pos = m_movi_start + idx1.dwChunkOffset;
modules/videoio/src/cap_mjpeg_decoder.cpp:            if(absolute_pos < m_movi_end)
modules/videoio/src/cap_mjpeg_decoder.cpp:                in_frame_list.push_back(std::make_pair(absolute_pos, idx1.dwChunkLength));
modules/videoio/src/cap_mjpeg_decoder.cpp:                //index not present or we were not able to find it
modules/videoio/src/cap_mjpeg_decoder.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_mjpeg_decoder.cpp:bool MotionJpegCapture::grabFrame()
modules/videoio/src/cap_avfoundation.mm: * 1. Redistributions of source code must retain the above copyright notice,
modules/videoio/src/cap_avfoundation.mm: * 2. Redistributions in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_avfoundation.mm:        virtual bool grabFrame();
modules/videoio/src/cap_avfoundation.mm:        bool grabFrame(double timeOut);
modules/videoio/src/cap_avfoundation.mm:        int disableAutoRestart;
modules/videoio/src/cap_avfoundation.mm:        virtual bool grabFrame();
modules/videoio/src/cap_avfoundation.mm:    disableAutoRestart = 0;
modules/videoio/src/cap_avfoundation.mm:bool CvCaptureCAM::grabFrame() {
modules/videoio/src/cap_avfoundation.mm:    return grabFrame(5);
modules/videoio/src/cap_avfoundation.mm:bool CvCaptureCAM::grabFrame(double timeOut) {
modules/videoio/src/cap_avfoundation.mm:    while (!grabFrame()) {
modules/videoio/src/cap_avfoundation.mm:        std::cout << "WARNING: Couldn't grab new frame from camera!!!" << std::endl;
modules/videoio/src/cap_avfoundation.mm:             cout << "Attempting to restart camera; set capture property DISABLE_AUTO_RESTART to disable." << endl;
modules/videoio/src/cap_avfoundation.mm:        grabFrame(60);
modules/videoio/src/cap_avfoundation.mm:    grabFrame(60);
modules/videoio/src/cap_avfoundation.mm:// All available settings are taken from iOS API
modules/videoio/src/cap_avfoundation.mm:            disableAutoRestart = value;
modules/videoio/src/cap_avfoundation.mm:    // mMovieReader is a member variable
modules/videoio/src/cap_avfoundation.mm:bool CvCaptureFile::grabFrame() {
modules/videoio/src/cap_avfoundation.mm:    grabFrame();
modules/videoio/src/cap_qtkit.mm:// * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_qtkit.mm:// * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_qtkit.mm:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_qtkit.mm:// In no event shall the contributor be liable for any direct,
modules/videoio/src/cap_qtkit.mm:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_qtkit.mm:    virtual bool grabFrame();
modules/videoio/src/cap_qtkit.mm:    bool grabFrame(double timeOut);
modules/videoio/src/cap_qtkit.mm:    int disableAutoRestart;
modules/videoio/src/cap_qtkit.mm:    virtual bool grabFrame();
modules/videoio/src/cap_qtkit.mm:    disableAutoRestart = 0;
modules/videoio/src/cap_qtkit.mm:bool CvCaptureCAM::grabFrame() {
modules/videoio/src/cap_qtkit.mm:    return grabFrame(5);
modules/videoio/src/cap_qtkit.mm:bool CvCaptureCAM::grabFrame(double timeOut) {
modules/videoio/src/cap_qtkit.mm:        grabFrame(60);
modules/videoio/src/cap_qtkit.mm:    grabFrame(60);
modules/videoio/src/cap_qtkit.mm:            disableAutoRestart = value;
modules/videoio/src/cap_qtkit.mm:bool CvCaptureFile::grabFrame() {
modules/videoio/src/cap_qtkit.mm:        mMovie = [[QTMovie alloc] initToWritableFile:path error:&error];
modules/videoio/src/cap_qtkit.mm:    [mMovie setAttribute:[NSNumber numberWithBool:YES] forKey:QTMovieEditableAttribute];
modules/videoio/src/cap_ios_photo_camera.mm: * 1. Redistributions of source code must retain the above copyright notice,
modules/videoio/src/cap_ios_photo_camera.mm: * 2. Redistributions in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_ios_photo_camera.mm:    if (cameraAvailable == NO) {
modules/videoio/src/cap_ios_photo_camera.mm:    cameraAvailable = NO;
modules/videoio/src/cap_ios_photo_camera.mm:                 cameraAvailable = YES;
modules/videoio/src/cap_openni.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_openni.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_openni.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_openni.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_openni.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_openni.cpp:class ApproximateSyncGrabber
modules/videoio/src/cap_openni.cpp:    ApproximateSyncGrabber( xn::Context &_context,
modules/videoio/src/cap_openni.cpp:    bool grab( xn::DepthMetaData& depthMetaData,
modules/videoio/src/cap_openni.cpp:        while( task->grab(depthMetaData, imageMetaData) == false )
modules/videoio/src/cap_openni.cpp:    ApproximateSyncGrabber(const ApproximateSyncGrabber&);
modules/videoio/src/cap_openni.cpp:    ApproximateSyncGrabber& operator=(const ApproximateSyncGrabber&);
modules/videoio/src/cap_openni.cpp:        ApproximateSynchronizerBase( ApproximateSyncGrabber& _approxSyncGrabber ) :
modules/videoio/src/cap_openni.cpp:            approxSyncGrabber(_approxSyncGrabber), isDepthFilled(false), isImageFilled(false)
modules/videoio/src/cap_openni.cpp:                XnStatus status = approxSyncGrabber.context.WaitAnyUpdateAll();
modules/videoio/src/cap_openni.cpp:                approxSyncGrabber.depthGenerator.GetMetaData(depth);
modules/videoio/src/cap_openni.cpp:                approxSyncGrabber.imageGenerator.GetMetaData(image);
modules/videoio/src/cap_openni.cpp:        virtual bool grab( xn::DepthMetaData& depthMetaData,
modules/videoio/src/cap_openni.cpp:                double timeDiff = 1e-3 * std::abs(static_cast<double>(depth.Timestamp()) - static_cast<double>(image.Timestamp()));
modules/videoio/src/cap_openni.cpp:                if( timeDiff <= approxSyncGrabber.maxTimeDuration )
modules/videoio/src/cap_openni.cpp:        ApproximateSyncGrabber& approxSyncGrabber;
modules/videoio/src/cap_openni.cpp:        ApproximateSynchronizer( ApproximateSyncGrabber& _approxSyncGrabber ) :
modules/videoio/src/cap_openni.cpp:            ApproximateSynchronizerBase(_approxSyncGrabber)
modules/videoio/src/cap_openni.cpp:            int maxBufferSize = approxSyncGrabber.getMaxBufferSize();
modules/videoio/src/cap_openni.cpp:        TBBApproximateSynchronizer( ApproximateSyncGrabber& _approxSyncGrabber ) :
modules/videoio/src/cap_openni.cpp:            ApproximateSynchronizerBase(_approxSyncGrabber)
modules/videoio/src/cap_openni.cpp:            int maxBufferSize = approxSyncGrabber.getMaxBufferSize();
modules/videoio/src/cap_openni.cpp:                if( approxSyncGrabber.getIsCircleBuffer() )
modules/videoio/src/cap_openni.cpp:                if( approxSyncGrabber.getIsCircleBuffer() )
modules/videoio/src/cap_openni.cpp:        TBBApproximateSynchronizerTask( ApproximateSyncGrabber& approxSyncGrabber ) :
modules/videoio/src/cap_openni.cpp:            synchronizer(approxSyncGrabber)
modules/videoio/src/cap_openni.cpp:        bool grab( xn::DepthMetaData& depthMetaData,
modules/videoio/src/cap_openni.cpp:            return synchronizer.grab( depthMetaData, imageMetaData );
modules/videoio/src/cap_openni.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_openni.cpp:    cv::Ptr<ApproximateSyncGrabber> approxSyncGrabber;
modules/videoio/src/cap_openni.cpp:        propValue = !approxSyncGrabber.empty() && approxSyncGrabber->isRun() ? 1. : 0.;
modules/videoio/src/cap_openni.cpp:            if( approxSyncGrabber.empty() )
modules/videoio/src/cap_openni.cpp:                approxSyncGrabber.reset(new ApproximateSyncGrabber( context, depthGenerator, imageGenerator, maxBufferSize, isCircleBuffer, maxTimeDuration ));
modules/videoio/src/cap_openni.cpp:                approxSyncGrabber->finish();
modules/videoio/src/cap_openni.cpp:                approxSyncGrabber->setMaxBufferSize(maxBufferSize);
modules/videoio/src/cap_openni.cpp:                approxSyncGrabber->setIsCircleBuffer(isCircleBuffer);
modules/videoio/src/cap_openni.cpp:                approxSyncGrabber->setMaxTimeDuration(maxTimeDuration);
modules/videoio/src/cap_openni.cpp:            approxSyncGrabber->start();
modules/videoio/src/cap_openni.cpp:        else if( !propValue && !approxSyncGrabber.empty() )
modules/videoio/src/cap_openni.cpp:            approxSyncGrabber->finish();
modules/videoio/src/cap_openni.cpp:        if( !approxSyncGrabber.empty() )
modules/videoio/src/cap_openni.cpp:            approxSyncGrabber->setMaxBufferSize(maxBufferSize);
modules/videoio/src/cap_openni.cpp:        if( !approxSyncGrabber.empty() )
modules/videoio/src/cap_openni.cpp:            approxSyncGrabber->setIsCircleBuffer(isCircleBuffer);
modules/videoio/src/cap_openni.cpp:        if( !approxSyncGrabber.empty() )
modules/videoio/src/cap_openni.cpp:            approxSyncGrabber->setMaxTimeDuration(maxTimeDuration);
modules/videoio/src/cap_openni.cpp:                // then the property isn't avaliable
modules/videoio/src/cap_openni.cpp:bool CvCapture_OpenNI::grabFrame()
modules/videoio/src/cap_openni.cpp:    bool isGrabbed = false;
modules/videoio/src/cap_openni.cpp:    if( !approxSyncGrabber.empty() && approxSyncGrabber->isRun() )
modules/videoio/src/cap_openni.cpp:        isGrabbed = approxSyncGrabber->grab( depthMetaData, imageMetaData );
modules/videoio/src/cap_openni.cpp:        isGrabbed = true;
modules/videoio/src/cap_openni.cpp:    return isGrabbed;
modules/videoio/src/cap_openni.cpp:        CV_Error( CV_StsUnsupportedFormat, "Unsupported format of grabbed image\n" );
modules/videoio/src/cap_qt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_qt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_qt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_qt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_qt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_qt.cpp:static       int         icvGrabFrame_QT_Movie     (CvCapture_QT_Movie * capture);
modules/videoio/src/cap_qt.cpp:    // okay, that's it - should we wait until the Movie is playable?
modules/videoio/src/cap_qt.cpp:                            fprintf (stderr, "Couldn't go on to GetMovieNextInterestingTime() in icvGrabFrame_QT.\n");
modules/videoio/src/cap_qt.cpp:                            fprintf (stderr, "Couldn't go back to GetMovieNextInterestingTime() in icvGrabFrame_QT.\n");
modules/videoio/src/cap_qt.cpp:                        fprintf (stderr, "Couldn't step to desired frame number in icvGrabFrame_QT.\n");
modules/videoio/src/cap_qt.cpp:static int icvGrabFrame_QT_Movie (CvCapture_QT_Movie * capture)
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (capture,          "icvGrabFrame_QT_Movie", "'capture' is a NULL-pointer");
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (capture->myMovie, "icvGrabFrame_QT_Movie", "invalid Movie handle");
modules/videoio/src/cap_qt.cpp:        fprintf (stderr, "Couldn't SetMovieTimeValue() in icvGrabFrame_QT_Movie.\n");
modules/videoio/src/cap_qt.cpp:        fprintf (stderr, "Couldn't GetMovieNextInterestingTime() in icvGrabFrame_QT_Movie.\n");
modules/videoio/src/cap_qt.cpp:    /// SequenceGrabber state structure for QuickTime
modules/videoio/src/cap_qt.cpp:        ComponentInstance  grabber;
modules/videoio/src/cap_qt.cpp:        SeqGrabComponent   grabber;
modules/videoio/src/cap_qt.cpp:static       int         icvGrabFrame_QT_Cam     (CvCapture_QT_Cam * capture);
modules/videoio/src/cap_qt.cpp: * Open a quicktime video grabber component. This could be an attached
modules/videoio/src/cap_qt.cpp:            capture->grabber = OpenComponent (component);
modules/videoio/src/cap_qt.cpp:            if (capture->grabber)
modules/videoio/src/cap_qt.cpp:                result = VDGetNumberOfInputs (capture->grabber, & capture->channel);
modules/videoio/src/cap_qt.cpp:                            result = VDGetInputName (capture->grabber, capture->channel, nameBuffer);
modules/videoio/src/cap_qt.cpp:                CloseComponent (capture->grabber);
modules/videoio/src/cap_qt.cpp:        fprintf(stderr, "Not enough inputs available - can't choose input %d\n", index);
modules/videoio/src/cap_qt.cpp:    result = VDSetInput (capture->grabber, capture->channel);
modules/videoio/src/cap_qt.cpp:    result = VDGetActiveSrcRect (capture->grabber, capture->channel, & myRect);
modules/videoio/src/cap_qt.cpp:    result = VDSetDigitizerRect (capture->grabber, & myRect);
modules/videoio/src/cap_qt.cpp:    result = VDSetPlayThruDestination (capture->grabber, capture->pixmap, & myRect, nil, nil);
modules/videoio/src/cap_qt.cpp:    result = VDGetPlayThruDestination (capture->grabber, & capture->pixmap, nil, nil, nil);
modules/videoio/src/cap_qt.cpp:    // notify digitizer component, that we well be starting grabbing soon
modules/videoio/src/cap_qt.cpp:    result = VDCaptureStateChanging (capture->grabber, vdFlagCaptureIsForRecord | vdFlagCaptureStarting | vdFlagCaptureLowLatency);
modules/videoio/src/cap_qt.cpp:    // notify digitizer component, that we well be stopping grabbing soon
modules/videoio/src/cap_qt.cpp:    result = VDCaptureStateChanging (capture->grabber, vdFlagCaptureStopping);
modules/videoio/src/cap_qt.cpp:    CloseComponent       (capture->grabber);
modules/videoio/src/cap_qt.cpp:static int icvGrabFrame_QT_Cam (CvCapture_QT_Cam * capture)
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (capture,          "icvGrabFrame_QT_Cam", "'capture' is a NULL-pointer");
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (capture->grabber, "icvGrabFrame_QT_Cam", "'grabber' is a NULL-pointer");
modules/videoio/src/cap_qt.cpp:    // grab one frame
modules/videoio/src/cap_qt.cpp:    result = VDGrabOneFrame (capture->grabber);
modules/videoio/src/cap_qt.cpp:        fprintf (stderr, "VDGrabOneFrame failed\n");
modules/videoio/src/cap_qt.cpp:#pragma mark Capturing using Sequence Grabber
modules/videoio/src/cap_qt.cpp:        //This fixed a bug when Quicktime is called twice to grab a frame (black band bug) - Yannick Verdie 2010
modules/videoio/src/cap_qt.cpp:    // open sequence grabber component
modules/videoio/src/cap_qt.cpp:    capture->grabber = OpenDefaultComponent (SeqGrabComponentType, 0);
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (capture->grabber, "icvOpenCamera_QT", "couldnt create image");
modules/videoio/src/cap_qt.cpp:    // initialize sequence grabber component
modules/videoio/src/cap_qt.cpp:    result = SGInitialize (capture->grabber);
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (result == noErr, "icvOpenCamera_QT", "couldnt initialize sequence grabber");
modules/videoio/src/cap_qt.cpp:    result = SGSetDataRef (capture->grabber, 0, 0, seqGrabDontMakeMovie);
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (result == noErr, "icvOpenCamera_QT", "couldnt set data reference of sequence grabber");
modules/videoio/src/cap_qt.cpp:    result = SGNewChannel (capture->grabber, VideoMediaType, & (capture->channel));
modules/videoio/src/cap_qt.cpp:    result = SGDisposeDeviceList (capture->grabber, device_list);
modules/videoio/src/cap_qt.cpp:    // after starting the frame grabber
modules/videoio/src/cap_qt.cpp:    result = SGSetGWorld (capture->grabber, capture->gworld, 0);
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (result == noErr, "icvOpenCamera_QT", "couldnt set GWorld for sequence grabber");
modules/videoio/src/cap_qt.cpp:    result = SGSetChannelUsage (capture->channel, seqGrabRecord);
modules/videoio/src/cap_qt.cpp:    result = SGStartRecord (capture->grabber);
modules/videoio/src/cap_qt.cpp:    // stop grabber so that we can reset the parameters to the right size
modules/videoio/src/cap_qt.cpp:    result = SGStop (capture->grabber);
modules/videoio/src/cap_qt.cpp:    result = SGSetGWorld( capture->grabber, tmpgworld, 0);
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (result == noErr, "icvOpenCamera_QT", "couldnt set GWorld for sequence grabber");
modules/videoio/src/cap_qt.cpp:    // tell the sequence grabber to invoke our data proc
modules/videoio/src/cap_qt.cpp:    result = SGSetDataProc (capture->grabber, NewSGDataUPP (icvDataProc_QT_Cam), (long) capture);
modules/videoio/src/cap_qt.cpp:    result = SGStartRecord (capture->grabber);
modules/videoio/src/cap_qt.cpp:    result = SGStop (capture->grabber);
modules/videoio/src/cap_qt.cpp:    // close sequence grabber component
modules/videoio/src/cap_qt.cpp:    result = CloseComponent (capture->grabber);
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (result == noErr, "icveClose_QT_Cam", "couldnt close sequence grabber component");
modules/videoio/src/cap_qt.cpp:static int icvGrabFrame_QT_Cam (CvCapture_QT_Cam * capture)
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (capture,          "icvGrabFrame_QT_Cam", "'capture' is a NULL-pointer");
modules/videoio/src/cap_qt.cpp:    OPENCV_ASSERT (capture->grabber, "icvGrabFrame_QT_Cam", "'grabber' is a NULL-pointer");
modules/videoio/src/cap_qt.cpp:    // grab one frame
modules/videoio/src/cap_qt.cpp:    result = SGIdle (capture->grabber);
modules/videoio/src/cap_qt.cpp:        fprintf (stderr, "SGIdle failed in icvGrabFrame_QT_Cam with error %d\n", (int) result);
modules/videoio/src/cap_qt.cpp:    // service active sequence grabbers (= redraw immediately)
modules/videoio/src/cap_qt.cpp:        myErr = SGIdle (capture->grabber);
modules/videoio/src/cap_qt.cpp:    // reset grabbing status
modules/videoio/src/cap_qt.cpp:            CV_ERROR( CV_StsInternal, "Unable to initialize QuickTime" );
modules/videoio/src/cap_qt.cpp:        CV_ERROR( CV_StsInternal, "Cannot enable temporal compression" );
modules/videoio/src/cap_qt.cpp:        CV_ERROR( CV_StsInternal, "Cannot enable frame reordering" );
modules/videoio/src/cap_qt.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_qt.cpp:bool CvCapture_QT_Movie_CPP::grabFrame()
modules/videoio/src/cap_qt.cpp:    return captureQT ? icvGrabFrame_QT_Movie( captureQT ) != 0 : false;
modules/videoio/src/cap_qt.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_qt.cpp:bool CvCapture_QT_Cam_CPP::grabFrame()
modules/videoio/src/cap_qt.cpp:    return captureQT ? icvGrabFrame_QT_Cam( captureQT ) != 0 : false;
modules/videoio/src/cap_ffmpeg_api.hpp:OPENCV_FFMPEG_API int cvGrabFrame_FFMPEG(struct CvCapture_FFMPEG* cap);
modules/videoio/src/cap_ffmpeg_api.hpp:OPENCV_FFMPEG_API int cvGrabFrame_FFMPEG_2(struct CvCapture_FFMPEG_2* cap);
modules/videoio/src/cap_ffmpeg_api.hpp:typedef int (*CvGrabFrame_Plugin)( void* capture_handle );
modules/videoio/src/wrl.h:#include <inspectable.h>
modules/videoio/src/wrl.h:__declspec(noreturn) void __stdcall __abi_WinRTraiseException(long);
modules/videoio/src/wrl.h:inline void __abi_ThrowIfFailed(long __hrArg)
modules/videoio/src/wrl.h:    __abi_WinRTraiseException(__hrArg);
modules/videoio/src/wrl.h:__interface __declspec(uuid("00000000-0000-0000-C000-000000000046")) __abi_IUnknown
modules/videoio/src/wrl.h:  virtual long __stdcall __abi_QueryInterface(Guid&, void**) = 0;
modules/videoio/src/wrl.h:  virtual unsigned long __stdcall __abi_AddRef() = 0;
modules/videoio/src/wrl.h:  virtual unsigned long __stdcall __abi_Release() = 0;
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseNotImplementedException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseInvalidCastException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseNullReferenceException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseOperationCanceledException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseFailureException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseAccessDeniedException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseOutOfMemoryException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseInvalidArgumentException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseOutOfBoundsException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseChangedStateException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseClassNotRegisteredException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseWrongThreadException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseDisconnectedException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseObjectDisposedException();
modules/videoio/src/wrl.h:__declspec(dllexport) __declspec(noreturn) void __stdcall __abi_WinRTraiseCOMException(long);
modules/videoio/src/wrl.h:__declspec(noreturn) inline void __stdcall __abi_WinRTraiseException(long __hrArg)
modules/videoio/src/wrl.h:    __abi_WinRTraiseNotImplementedException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseInvalidCastException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseNullReferenceException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseOperationCanceledException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseFailureException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseAccessDeniedException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseOutOfMemoryException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseInvalidArgumentException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseOutOfBoundsException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseChangedStateException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseClassNotRegisteredException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseWrongThreadException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseDisconnectedException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseObjectDisposedException();
modules/videoio/src/wrl.h:    __abi_WinRTraiseCOMException(__hrArg);
modules/videoio/src/wrl.h:struct __abi_CaptureBase
modules/videoio/src/wrl.h:  virtual __stdcall ~__abi_CaptureBase() {}
modules/videoio/src/wrl.h:      return reinterpret_cast<__abi_CaptureBase*>(HeapAlloc(GetProcessHeap(), 0, __sizeArg));
modules/videoio/src/wrl.h:    __abi_CaptureBase* __pThis = static_cast<__abi_CaptureBase*>(__ptrArg);
modules/videoio/src/wrl.h:  void Delete(__abi_CaptureBase* __pThisArg, void* __pSmallCaptureArg)
modules/videoio/src/wrl.h:    __pThisArg->~__abi_CaptureBase();
modules/videoio/src/wrl.h:struct __abi_CapturePtr
modules/videoio/src/wrl.h:  char* smallCapture[__abi_CaptureBase::__smallCaptureSize];
modules/videoio/src/wrl.h:  __abi_CaptureBase* ptr;
modules/videoio/src/wrl.h:  __abi_CapturePtr() : ptr(reinterpret_cast<__abi_CaptureBase*>(smallCapture)) {}
modules/videoio/src/wrl.h:  ~__abi_CapturePtr()
modules/videoio/src/wrl.h:struct __abi_FunctorCapture0 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture0(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture1 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture1(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture2 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture2(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture3 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture3(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture4 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture4(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture5 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture5(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture6 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture6(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture7 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture7(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture8 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture8(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture9 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture9(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:struct __abi_FunctorCapture10 : public __abi_CaptureBase
modules/videoio/src/wrl.h:  __abi_FunctorCapture10(__TFunctor __functor) : functor(__functor) {}
modules/videoio/src/wrl.h:  type == ABI::Windows::Foundation::PropertyType::PropertyType_InspectableArray || type == ABI::Windows::Foundation::PropertyType::PropertyType_DateTimeArray ||\
modules/videoio/src/wrl.h:    Microsoft::WRL::ComPtr<IInspectable> _PObj;
modules/videoio/src/wrl.h:  static HRESULT create(ABI::Windows::Foundation::IPropertyValueStatics* spPropVal, void* _ObjInCtx, IInspectable** ppInsp) {
modules/videoio/src/wrl.h:  static HRESULT create(ABI::Windows::Foundation::IPropertyValueStatics* spPropVal, Type* _ObjInCtx, IInspectable** ppInsp) {\
modules/videoio/src/wrl.h:    Microsoft::WRL::ComPtr<IInspectable> _PObj;
modules/videoio/src/wrl.h:  static HRESULT create(ABI::Windows::Foundation::IPropertyValueStatics* spPropVal, UINT32 __valueSize, Type** _ObjInCtx, IInspectable** ppInsp) {\
modules/videoio/src/wrl.h:MAKE_ARRAY_TYPE(IInspectable*, Inspectable)
modules/videoio/src/wrl.h:  std::is_same<_Type, IInspectable *>::value || \
modules/videoio/src/wrl.h:  std::is_base_of<IInspectable, typename DerefHelper<_Type>::DerefType>::value || \
modules/videoio/src/wrl.h:  std::is_same<_Type, IInspectable **>::value || \
modules/videoio/src/cap_ios_abstract_camera.mm: *  cap_ios_abstract_camera.mm
modules/videoio/src/cap_ios_abstract_camera.mm: * 1. Redistributions of source code must retain the above copyright notice,
modules/videoio/src/cap_ios_abstract_camera.mm: * 2. Redistributions in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_ios_abstract_camera.mm:        // check if camera available
modules/videoio/src/cap_ios_abstract_camera.mm:        cameraAvailable = [UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera];
modules/videoio/src/cap_ios_abstract_camera.mm:        NSLog(@"camera available: %@", (cameraAvailable == YES ? @"YES" : @"NO") );
modules/videoio/src/cap_ios_abstract_camera.mm:        // check if camera available
modules/videoio/src/cap_ios_abstract_camera.mm:        cameraAvailable = [UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera];
modules/videoio/src/cap_ios_abstract_camera.mm:        NSLog(@"camera available: %@", (cameraAvailable == YES ? @"YES" : @"NO") );
modules/videoio/src/cap_ios_abstract_camera.mm:    if (cameraAvailable) {
modules/videoio/src/cap_ios_abstract_camera.mm:                    NSLog(@"unable to lock device for autofocos configuration %@", [error localizedDescription]);
modules/videoio/src/cap_ios_abstract_camera.mm:    if (!cameraAvailable) {
modules/videoio/src/cap_ios_abstract_camera.mm:            NSLog(@"unable to lock device for locked focus configuration %@", [error localizedDescription]);
modules/videoio/src/cap_ios_abstract_camera.mm:            NSLog(@"unable to lock device for autofocus configuration %@", [error localizedDescription]);
modules/videoio/src/cap_ios_abstract_camera.mm:            NSLog(@"unable to lock device for locked exposure configuration %@", [error localizedDescription]);
modules/videoio/src/cap_ios_abstract_camera.mm:            NSLog(@"unable to lock device for autoexposure configuration %@", [error localizedDescription]);
modules/videoio/src/cap_ios_abstract_camera.mm:            NSLog(@"unable to lock device for locked white balance configuration %@", [error localizedDescription]);
modules/videoio/src/cap_ios_abstract_camera.mm:            NSLog(@"unable to lock device for auto white balance configuration %@", [error localizedDescription]);
modules/videoio/src/cap_intelperc.cpp:bool IntelPerCStreamBase::grabFrame()
modules/videoio/src/cap_intelperc.cpp:bool VideoCapture_IntelPerC::grabFrame()
modules/videoio/src/cap_intelperc.cpp:    bool isGrabbed = false;
modules/videoio/src/cap_intelperc.cpp:        isGrabbed = m_depthStream.grabFrame();
modules/videoio/src/cap_intelperc.cpp:        isGrabbed &= m_imageStream.grabFrame();
modules/videoio/src/cap_intelperc.cpp:    return isGrabbed;
modules/videoio/src/cap_msmf.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_msmf.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_msmf.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_msmf.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_msmf.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_msmf.cpp:#pragma warning(disable:4503)
modules/videoio/src/cap_msmf.cpp:#if (WINVER >= 0x0602) // Available since Win 8
modules/videoio/src/cap_msmf.cpp:// Structure for collecting info about types of video, which are supported by current video device
modules/videoio/src/cap_msmf.cpp:class ImageGrabberCallback : public IMFSampleGrabberSinkCallback
modules/videoio/src/cap_msmf.cpp:    void pauseGrabbing();
modules/videoio/src/cap_msmf.cpp:    void resumeGrabbing();
modules/videoio/src/cap_msmf.cpp:    // IMFSampleGrabberSinkCallback methods
modules/videoio/src/cap_msmf.cpp:    const HANDLE ig_hFrameGrabbed;
modules/videoio/src/cap_msmf.cpp:    ImageGrabberCallback(bool synchronous);
modules/videoio/src/cap_msmf.cpp:    ImageGrabberCallback& operator=(const ImageGrabberCallback&);   // Declared to fix compilation warning.
modules/videoio/src/cap_msmf.cpp:extern const __declspec(selectany) WCHAR RuntimeClass_CV_ImageGrabberWinRT[] = L"cv.ImageGrabberWinRT";
modules/videoio/src/cap_msmf.cpp:class ImageGrabberWinRT :
modules/videoio/src/cap_msmf.cpp:    IMFSampleGrabberSinkCallback>, public ImageGrabberCallback
modules/videoio/src/cap_msmf.cpp:    InspectableClass(RuntimeClass_CV_ImageGrabberWinRT, BaseTrust)
modules/videoio/src/cap_msmf.cpp:    ImageGrabberWinRT(bool synchronous);
modules/videoio/src/cap_msmf.cpp:    ~ImageGrabberWinRT(void);
modules/videoio/src/cap_msmf.cpp:    HRESULT initImageGrabber(MAKE_WRL_REF(_MediaCapture) pSource,
modules/videoio/src/cap_msmf.cpp:    HRESULT startGrabbing(MAKE_WRL_REF(_AsyncAction)* action);
modules/videoio/src/cap_msmf.cpp:    HRESULT stopGrabbing(MAKE_WRL_REF(_AsyncAction)* action);
modules/videoio/src/cap_msmf.cpp:    STDMETHODIMP OnClockStart(MFTIME hnsSystemTime, LONGLONG llClockStartOffset) { return ImageGrabberCallback::OnClockStart(hnsSystemTime, llClockStartOffset); }
modules/videoio/src/cap_msmf.cpp:    STDMETHODIMP OnClockStop(MFTIME hnsSystemTime) { return ImageGrabberCallback::OnClockStop(hnsSystemTime); }
modules/videoio/src/cap_msmf.cpp:    STDMETHODIMP OnClockPause(MFTIME hnsSystemTime) { return ImageGrabberCallback::OnClockPause(hnsSystemTime); }
modules/videoio/src/cap_msmf.cpp:    STDMETHODIMP OnClockRestart(MFTIME hnsSystemTime) { return ImageGrabberCallback::OnClockRestart(hnsSystemTime); }
modules/videoio/src/cap_msmf.cpp:    STDMETHODIMP OnClockSetRate(MFTIME hnsSystemTime, float flRate) { return ImageGrabberCallback::OnClockSetRate(hnsSystemTime, flRate); }
modules/videoio/src/cap_msmf.cpp:    // IMFSampleGrabberSinkCallback methods
modules/videoio/src/cap_msmf.cpp:    STDMETHODIMP OnSetPresentationClock(IMFPresentationClock* pClock) { return ImageGrabberCallback::OnSetPresentationClock(pClock); }
modules/videoio/src/cap_msmf.cpp:        DWORD dwSampleSize) { return ImageGrabberCallback::OnProcessSample(guidMajorMediaType, dwSampleFlags, llSampleTime, llSampleDuration, pSampleBuffer, dwSampleSize); }
modules/videoio/src/cap_msmf.cpp:    STDMETHODIMP OnShutdown() { return ImageGrabberCallback::OnShutdown(); }
modules/videoio/src/cap_msmf.cpp:    static HRESULT CreateInstance(ImageGrabberWinRT **ppIG, bool synchronous = false);
modules/videoio/src/cap_msmf.cpp:// Class for grabbing image from video stream
modules/videoio/src/cap_msmf.cpp:class ImageGrabber : public ImageGrabberCallback
modules/videoio/src/cap_msmf.cpp:    ~ImageGrabber(void);
modules/videoio/src/cap_msmf.cpp:    HRESULT initImageGrabber(IMFMediaSource *pSource);
modules/videoio/src/cap_msmf.cpp:    HRESULT startGrabbing(void);
modules/videoio/src/cap_msmf.cpp:    void stopGrabbing();
modules/videoio/src/cap_msmf.cpp:    static HRESULT CreateInstance(ImageGrabber **ppIG, unsigned int deviceID, bool synchronous = false);
modules/videoio/src/cap_msmf.cpp:    ImageGrabber(unsigned int deviceID, bool synchronous);
modules/videoio/src/cap_msmf.cpp:    ImageGrabber& operator=(const ImageGrabber&);   // Declared to fix comiplation error.
modules/videoio/src/cap_msmf.cpp:/// Class for controlling of thread of the grabbing raw data from video device
modules/videoio/src/cap_msmf.cpp:class ImageGrabberThread
modules/videoio/src/cap_msmf.cpp:    ~ImageGrabberThread(void);
modules/videoio/src/cap_msmf.cpp:    static HRESULT CreateInstance(ImageGrabberThread **ppIGT, IMFMediaSource *pSource, unsigned int deviceID, bool synchronious = false);
modules/videoio/src/cap_msmf.cpp:    ImageGrabber *getImageGrabber();
modules/videoio/src/cap_msmf.cpp:    ImageGrabberThread(IMFMediaSource *pSource, unsigned int deviceID, bool synchronious);
modules/videoio/src/cap_msmf.cpp:    ImageGrabber *igt_pImageGrabber;
modules/videoio/src/cap_msmf.cpp:// Structure for collecting info about one parametr of current video device
modules/videoio/src/cap_msmf.cpp:// Structure for collecting info about 17 parametrs of current video device
modules/videoio/src/cap_msmf.cpp:        Parametr ColorEnable;
modules/videoio/src/cap_msmf.cpp:    ImageGrabberThread *vd_pImGrTh;
modules/videoio/src/cap_msmf.cpp:    ImageGrabberWinRT *vd_pImGr;
modules/videoio/src/cap_msmf.cpp:/// The only visiable class for controlling of video devices in format singelton
modules/videoio/src/cap_msmf.cpp:    // Checking of existence of the suitable video devices
modules/videoio/src/cap_msmf.cpp:    bool isDevicesAcceable();
modules/videoio/src/cap_msmf.cpp:ImageGrabberCallback::ImageGrabberCallback(bool synchronous):
modules/videoio/src/cap_msmf.cpp:    ig_hFrameGrabbed(synchronous ? CreateEvent(NULL, FALSE, TRUE, NULL): 0),
modules/videoio/src/cap_msmf.cpp:ImageGrabber::ImageGrabber(unsigned int deviceID, bool synchronous):
modules/videoio/src/cap_msmf.cpp:    ImageGrabberCallback(synchronous),
modules/videoio/src/cap_msmf.cpp:ImageGrabber::~ImageGrabber(void)
modules/videoio/src/cap_msmf.cpp:        CloseHandle(ig_hFrameGrabbed);
modules/videoio/src/cap_msmf.cpp:    DebugPrintOut(L"IMAGEGRABBER VIDEODEVICE %i: Destroying instance of the ImageGrabber class\n", ig_DeviceID);
modules/videoio/src/cap_msmf.cpp:ImageGrabberWinRT::ImageGrabberWinRT(bool synchronous):
modules/videoio/src/cap_msmf.cpp:    ImageGrabberCallback(synchronous),
modules/videoio/src/cap_msmf.cpp:ImageGrabberWinRT::~ImageGrabberWinRT(void)
modules/videoio/src/cap_msmf.cpp:        CloseHandle(ig_hFrameGrabbed);
modules/videoio/src/cap_msmf.cpp:    DebugPrintOut(L"IMAGEGRABBER VIDEODEVICE: Destroying instance of the ImageGrabberWinRT class\n");
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabberWinRT::initImageGrabber(MAKE_WRL_REF(_MediaCapture) pSource,
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabberWinRT::stopGrabbing(MAKE_WRL_REF(_AsyncAction)* action)
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabberWinRT::startGrabbing(MAKE_WRL_REF(_AsyncAction)* action)
modules/videoio/src/cap_msmf.cpp:        //can start/stop multiple times with same MediaCapture object if using activatable class
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabberWinRT::CreateInstance(ImageGrabberWinRT **ppIG, bool synchronous)
modules/videoio/src/cap_msmf.cpp:    *ppIG = Microsoft::WRL::Make<ImageGrabberWinRT>(synchronous).Detach();
modules/videoio/src/cap_msmf.cpp:    DebugPrintOut(L"IMAGEGRABBER VIDEODEVICE: Creating instance of ImageGrabberWinRT\n");
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabber::initImageGrabber(IMFMediaSource *pSource)
modules/videoio/src/cap_msmf.cpp:    // Configure the media type that the Sample Grabber will receive.
modules/videoio/src/cap_msmf.cpp:    // Create the sample grabber sink.
modules/videoio/src/cap_msmf.cpp:    CHECK_HR(hr = MFCreateSampleGrabberSinkActivate(pType.Get(), this, pSinkActivate.GetAddressOf()));
modules/videoio/src/cap_msmf.cpp:void ImageGrabber::stopGrabbing()
modules/videoio/src/cap_msmf.cpp:    DebugPrintOut(L"IMAGEGRABBER VIDEODEVICE %i: Stopping of of grabbing of images\n", ig_DeviceID);
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabber::startGrabbing(void)
modules/videoio/src/cap_msmf.cpp:    DebugPrintOut(L"IMAGEGRABBER VIDEODEVICE %i: Start Grabbing of the images\n", ig_DeviceID);
modules/videoio/src/cap_msmf.cpp:#if (WINVER >= 0x0602) // Available since Win 8
modules/videoio/src/cap_msmf.cpp:    DebugPrintOut(L"IMAGEGRABBER VIDEODEVICE %i: Finish startGrabbing \n", ig_DeviceID);
modules/videoio/src/cap_msmf.cpp:void ImageGrabberCallback::pauseGrabbing()
modules/videoio/src/cap_msmf.cpp:void ImageGrabberCallback::resumeGrabbing()
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabber::CreateTopology(IMFMediaSource *pSource, IMFActivate *pSinkActivate, IMFTopology **ppTopo)
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabber::AddSourceNode(
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabber::AddOutputNode(
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabber::CreateInstance(ImageGrabber **ppIG, unsigned int deviceID, bool synchronious)
modules/videoio/src/cap_msmf.cpp:    *ppIG = new (std::nothrow) ImageGrabber(deviceID, synchronious);
modules/videoio/src/cap_msmf.cpp:    DebugPrintOut(L"IMAGEGRABBER VIDEODEVICE %i: Creating instance of ImageGrabber\n", deviceID);
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP ImageGrabber::QueryInterface(REFIID riid, void** ppv)
modules/videoio/src/cap_msmf.cpp:    if(riid == IID_IUnknown || riid == IID_IMFSampleGrabberSinkCallback)
modules/videoio/src/cap_msmf.cpp:        *ppv = static_cast<IMFSampleGrabberSinkCallback *>(this);
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP_(ULONG) ImageGrabber::AddRef()
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP_(ULONG) ImageGrabber::Release()
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP ImageGrabberCallback::OnClockStart(MFTIME hnsSystemTime, LONGLONG llClockStartOffset)
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP ImageGrabberCallback::OnClockStop(MFTIME hnsSystemTime)
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP ImageGrabberCallback::OnClockPause(MFTIME hnsSystemTime)
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP ImageGrabberCallback::OnClockRestart(MFTIME hnsSystemTime)
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP ImageGrabberCallback::OnClockSetRate(MFTIME hnsSystemTime, float flRate)
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP ImageGrabberCallback::OnSetPresentationClock(IMFPresentationClock* pClock)
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP ImageGrabberCallback::OnProcessSample(REFGUID guidMajorMediaType, DWORD dwSampleFlags,
modules/videoio/src/cap_msmf.cpp:    HANDLE tmp[] = {ig_hFinish, ig_hFrameGrabbed, NULL};
modules/videoio/src/cap_msmf.cpp:STDMETHODIMP ImageGrabberCallback::OnShutdown()
modules/videoio/src/cap_msmf.cpp:RawImage *ImageGrabberCallback::getRawImage()
modules/videoio/src/cap_msmf.cpp:    ImageGrabberThread *pIGT = (ImageGrabberThread *)lpParam;
modules/videoio/src/cap_msmf.cpp:HRESULT ImageGrabberThread::CreateInstance(ImageGrabberThread **ppIGT, IMFMediaSource *pSource, unsigned int deviceID, bool synchronious)
modules/videoio/src/cap_msmf.cpp:    *ppIGT = new (std::nothrow) ImageGrabberThread(pSource, deviceID, synchronious);
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"IMAGEGRABBERTHREAD VIDEODEVICE %i: Creating of the instance of ImageGrabberThread\n", deviceID);
modules/videoio/src/cap_msmf.cpp:ImageGrabberThread::ImageGrabberThread(IMFMediaSource *pSource, unsigned int deviceID, bool synchronious) :
modules/videoio/src/cap_msmf.cpp:    HRESULT hr = ImageGrabber::CreateInstance(&igt_pImageGrabber, deviceID, synchronious);
modules/videoio/src/cap_msmf.cpp:        hr = igt_pImageGrabber->initImageGrabber(pSource);
modules/videoio/src/cap_msmf.cpp:            DebugPrintOut(L"IMAGEGRABBERTHREAD VIDEODEVICE %i: There is a problem with initialization of the instance of the ImageGrabber class\n", deviceID);
modules/videoio/src/cap_msmf.cpp:            DebugPrintOut(L"IMAGEGRABBERTHREAD VIDEODEVICE %i: Initialization of instance of the ImageGrabber class\n", deviceID);
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"IMAGEGRABBERTHREAD VIDEODEVICE %i: There is a problem with creation of the instance of the ImageGrabber class\n", deviceID);
modules/videoio/src/cap_msmf.cpp:void ImageGrabberThread::setEmergencyStopEvent(void *userData, void(*func)(int, void *))
modules/videoio/src/cap_msmf.cpp:ImageGrabberThread::~ImageGrabberThread(void)
modules/videoio/src/cap_msmf.cpp:    DebugPrintOut(L"IMAGEGRABBERTHREAD VIDEODEVICE %i: Destroing ImageGrabberThread\n", igt_DeviceID);
modules/videoio/src/cap_msmf.cpp:    delete igt_pImageGrabber;
modules/videoio/src/cap_msmf.cpp:void ImageGrabberThread::stop()
modules/videoio/src/cap_msmf.cpp:    if(igt_pImageGrabber)
modules/videoio/src/cap_msmf.cpp:        igt_pImageGrabber->stopGrabbing();
modules/videoio/src/cap_msmf.cpp:void ImageGrabberThread::start()
modules/videoio/src/cap_msmf.cpp:void ImageGrabberThread::run()
modules/videoio/src/cap_msmf.cpp:    if(igt_pImageGrabber)
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"IMAGEGRABBERTHREAD VIDEODEVICE %i: Thread for grabbing images is started\n", igt_DeviceID);
modules/videoio/src/cap_msmf.cpp:        HRESULT hr = igt_pImageGrabber->startGrabbing();
modules/videoio/src/cap_msmf.cpp:            DebugPrintOut(L"IMAGEGRABBERTHREAD VIDEODEVICE %i: There is a problem with starting the process of grabbing\n", igt_DeviceID);
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"IMAGEGRABBERTHREAD VIDEODEVICE %i The thread is finished without execution of grabbing\n", igt_DeviceID);
modules/videoio/src/cap_msmf.cpp:ImageGrabber *ImageGrabberThread::getImageGrabber()
modules/videoio/src/cap_msmf.cpp:    return igt_pImageGrabber;
modules/videoio/src/cap_msmf.cpp:            vd_pImGr->stopGrabbing(&action);
modules/videoio/src/cap_msmf.cpp:    // For required frame size look for the suitable video format.
modules/videoio/src/cap_msmf.cpp:    // If not found, get the format for the largest available frame size.
modules/videoio/src/cap_msmf.cpp:    // Get first (default) item from the list if no suitable frame rate found.
modules/videoio/src/cap_msmf.cpp:    WRL_METHOD(pMedDevCont, GetAvailableMediaStreamProperties, pVector, hr, WRL_ENUM_GET(_MediaStreamType, MediaStreamType, VideoPreview))
modules/videoio/src/cap_msmf.cpp:            return vd_pImGrTh->getImageGrabber()->getRawImage();
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE %i: The instance of ImageGrabberThread class does not exist  \n", vd_CurrentNumber);
modules/videoio/src/cap_msmf.cpp:                if (FAILED(ImageGrabberWinRT::CreateInstance(&vd_pImGr))) return false;
modules/videoio/src/cap_msmf.cpp:                if (FAILED(vd_pImGr->initImageGrabber(DEREF_AGILE_WRL_OBJ(vd_pMedCap), MFVideoFormat_RGB24)) || FAILED(vd_pImGr->startGrabbing(&action))) {
modules/videoio/src/cap_msmf.cpp:            HRESULT hr = ImageGrabberThread::CreateInstance(&vd_pImGrTh, vd_pSource, vd_CurrentNumber);
modules/videoio/src/cap_msmf.cpp:                DebugPrintOut(L"VIDEODEVICE %i: The instance of ImageGrabberThread class cannot be created.\n", vd_CurrentNumber);
modules/videoio/src/cap_msmf.cpp:            return vd_pImGrTh->getImageGrabber()->getRawImage()->isNew();
modules/videoio/src/cap_msmf.cpp:    WRL_METHOD(pMedDevCont, GetAvailableMediaStreamProperties, pVector, hr, WRL_ENUM_GET(_MediaStreamType, MediaStreamType, VideoPreview))
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"INITIALIZATION: There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"UPDATING: There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:                DebugPrintOut(L"VideoDevice %i: There is not any suitable IMFMediaSource interface\n", deviceID);
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n", deviceID);
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"Device(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:bool videoInput::isDevicesAcceable()
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:                DebugPrintOut(L"ERROR: GetPixels() - Unable to grab frame for device %i\n", deviceID);
modules/videoio/src/cap_msmf.cpp:        DebugPrintOut(L"VIDEODEVICE(s): There is not any suitable video device\n");
modules/videoio/src/cap_msmf.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_msmf.cpp:bool CvCaptureCAM_MSMF::grabFrame()
modules/videoio/src/cap_msmf.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_msmf.cpp:    ImageGrabberThread* grabberThread;
modules/videoio/src/cap_msmf.cpp:    grabberThread(NULL),
modules/videoio/src/cap_msmf.cpp:            hr = ImageGrabberThread::CreateInstance(&grabberThread, videoFileSource, (unsigned int)-2, true);
modules/videoio/src/cap_msmf.cpp:        grabberThread->start();
modules/videoio/src/cap_msmf.cpp:    if (grabberThread)
modules/videoio/src/cap_msmf.cpp:        SetEvent(grabberThread->getImageGrabber()->ig_hFinish);
modules/videoio/src/cap_msmf.cpp:        grabberThread->stop();
modules/videoio/src/cap_msmf.cpp:        delete grabberThread;
modules/videoio/src/cap_msmf.cpp:bool CvCaptureFile_MSMF::grabFrame()
modules/videoio/src/cap_msmf.cpp:        SetEvent(grabberThread->getImageGrabber()->ig_hFrameGrabbed);
modules/videoio/src/cap_msmf.cpp:        HANDLE tmp[] = {grabberThread->getImageGrabber()->ig_hFrameReady, grabberThread->getImageGrabber()->ig_hFinish, 0};
modules/videoio/src/cap_msmf.cpp:    return isOpened && grabberThread->getImageGrabber()->getRawImage()->isNew() && (waitResult == WAIT_OBJECT_0);
modules/videoio/src/cap_msmf.cpp:    RawImage *RIOut = grabberThread->getImageGrabber()->getRawImage();
modules/videoio/src/cap_msmf.cpp:        case CV_FOURCC_MACRO('H', '2', '6', '3'):   // Available only for Win 8 target.
modules/videoio/src/cap_ximea.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_ximea.cpp:bool CvCaptureCAM_XIMEA::grabFrame()
modules/videoio/src/cap_ximea.cpp:        ximea_param = "available_bandwidth";
modules/videoio/src/cap_ximea.cpp:        ximea_param = "LUTEnable";
modules/videoio/src/cap_ximea.cpp:        ximea_param = "available_bandwidth";
modules/videoio/src/cap_ximea.cpp:        ximea_param = "LUTEnable";
modules/videoio/src/cap_ximea.cpp:    case XI_DEVICE_HAS_BEEN_RESETED : error_message = "Device has been reseted, abnormal initial state"; break;
modules/videoio/src/cap_ximea.cpp:    case XI_BANDWIDTH_NOT_SUPPORTED : error_message = "This camera does not support currently available bandwidth"; break;
modules/videoio/src/cap_gphoto2.cpp: * 1. Redistributions of source code must retain the above copyright notice,
modules/videoio/src/cap_gphoto2.cpp: * 2. Redistributions in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_gphoto2.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_gphoto2.cpp:    template<typename OsstreamPrintable>
modules/videoio/src/cap_gphoto2.cpp:            OsstreamPrintable & arg) const;
modules/videoio/src/cap_gphoto2.cpp:    CameraAbilitiesList * abilitiesList = NULL;
modules/videoio/src/cap_gphoto2.cpp:    GPPortInfoList * capablePorts = NULL;
modules/videoio/src/cap_gphoto2.cpp:    std::deque<CameraFile *> grabbedFrames;
modules/videoio/src/cap_gphoto2.cpp:    DigitalCameraCapture(const DigitalCameraCapture&); // Disable copying
modules/videoio/src/cap_gphoto2.cpp:    DigitalCameraCapture& operator=(DigitalCameraCapture const&); // Disable assigning
modules/videoio/src/cap_gphoto2.cpp:    mutable std::ostringstream msgsBuffer; // CV_CAP_PROP_GPHOTO2_FLUSH_MSGS
modules/videoio/src/cap_gphoto2.cpp:    mutable std::string lastFlush; // CV_CAP_PROP_GPHOTO2_FLUSH_MSGS
modules/videoio/src/cap_gphoto2.cpp: * \brief Line delimiter used while creating any readable output.
modules/videoio/src/cap_gphoto2.cpp: * Initialize gPhoto2 context, search for all available devices.
modules/videoio/src/cap_gphoto2.cpp:        // Load abilities
modules/videoio/src/cap_gphoto2.cpp:        CR(gp_abilities_list_new(&abilitiesList));
modules/videoio/src/cap_gphoto2.cpp:        CR(gp_abilities_list_load(abilitiesList, context));
modules/videoio/src/cap_gphoto2.cpp:        CR(gp_port_info_list_new(&capablePorts));
modules/videoio/src/cap_gphoto2.cpp:        CR(gp_port_info_list_load(capablePorts));
modules/videoio/src/cap_gphoto2.cpp:        CR(gp_abilities_list_free(abilitiesList));
modules/videoio/src/cap_gphoto2.cpp:        abilitiesList = NULL;
modules/videoio/src/cap_gphoto2.cpp:        CR(gp_port_info_list_free(capablePorts));
modules/videoio/src/cap_gphoto2.cpp:        capablePorts = NULL;
modules/videoio/src/cap_gphoto2.cpp:        // Set model abilities.
modules/videoio/src/cap_gphoto2.cpp:        CR(m = gp_abilities_list_lookup_model(abilitiesList, model));
modules/videoio/src/cap_gphoto2.cpp:        CR(gp_abilities_list_get_abilities(abilitiesList, m, &cameraAbilities));
modules/videoio/src/cap_gphoto2.cpp:        CR(gp_camera_set_abilities(camera, cameraAbilities));
modules/videoio/src/cap_gphoto2.cpp:        CR(p = gp_port_info_list_lookup_path(capablePorts, path));
modules/videoio/src/cap_gphoto2.cpp:        CR(gp_port_info_list_get_info(capablePorts, p, &portInfo));
modules/videoio/src/cap_gphoto2.cpp:        if (int frames = grabbedFrames.size() > 0)
modules/videoio/src/cap_gphoto2.cpp:                CameraFile * file = grabbedFrames.front();
modules/videoio/src/cap_gphoto2.cpp:                grabbedFrames.pop_front();
modules/videoio/src/cap_gphoto2.cpp: * @see DigitalCameraCapture for more information about returned double type.
modules/videoio/src/cap_gphoto2.cpp: * @see DigitalCameraCapture for more information about value, double typed, argument.
modules/videoio/src/cap_gphoto2.cpp: * Capture image, and store file in @field grabbedFrames.
modules/videoio/src/cap_gphoto2.cpp:bool DigitalCameraCapture::grabFrame()
modules/videoio/src/cap_gphoto2.cpp:        grabbedFrames.push_back(file);
modules/videoio/src/cap_gphoto2.cpp:        message(WARNING, "cannot grab new frame", e);
modules/videoio/src/cap_gphoto2.cpp:    if (grabbedFrames.size() > 0)
modules/videoio/src/cap_gphoto2.cpp:        CameraFile * file = grabbedFrames.front();
modules/videoio/src/cap_gphoto2.cpp:        grabbedFrames.pop_front();
modules/videoio/src/cap_gphoto2.cpp:            message(WARNING, "cannot read file grabbed from device", e);
modules/videoio/src/cap_gphoto2.cpp:    widgetInfoListStream << "id,label,name,info,readonly,type,value,"
modules/videoio/src/cap_gphoto2.cpp:    const char * label, *name, *info;
modules/videoio/src/cap_gphoto2.cpp:    CR(gp_widget_get_label(widget, &label));
modules/videoio/src/cap_gphoto2.cpp:    os << (id - noOfWidgets) << separator << label << separator << name
modules/videoio/src/cap_gphoto2.cpp:template<typename OsstreamPrintable>
modules/videoio/src/cap_gphoto2.cpp:        OsstreamPrintable & arg) const
modules/videoio/src/cap_giganetix.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_giganetix.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_giganetix.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_giganetix.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_giganetix.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_giganetix.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_giganetix.cpp:    void  grabImage ();
modules/videoio/src/cap_giganetix.cpp:CvCaptureCAM_Giganetix::grabImage ()
modules/videoio/src/cap_giganetix.cpp:  CV_FUNCNAME("CvCaptureCAM_Giganetix::grabImage");
modules/videoio/src/cap_giganetix.cpp:CvCaptureCAM_Giganetix::grabFrame()
modules/videoio/src/cap_giganetix.cpp:  if(b_ret) grabImage ();
modules/videoio/src/cap.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap.cpp:#pragma warning(disable: 4748)
modules/videoio/src/cap.cpp:    if(!capture->grabFrame())
modules/videoio/src/cap.cpp:CV_IMPL int cvGrabFrame( CvCapture* capture )
modules/videoio/src/cap.cpp:    return capture ? capture->grabFrame() : 0;
modules/videoio/src/cap.cpp:    // local variable to memorize the captured device
modules/videoio/src/cap.cpp:        // bail out to let the user know that it is not available
modules/videoio/src/cap.cpp:        // Re-enable again when gstreamer 1394 support will land in the backend code
modules/videoio/src/cap.cpp:        // bail out to let the user know that it is not available
modules/videoio/src/cap.cpp:bool VideoCapture::grab()
modules/videoio/src/cap.cpp:        return icap->grabFrame();
modules/videoio/src/cap.cpp:    return cvGrabFrame(cap) != 0;
modules/videoio/src/cap.cpp:    if(grab())
modules/videoio/src/cap.cpp:    if (grab())
modules/videoio/src/cap_dshow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_dshow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_dshow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_dshow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_dshow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_dshow.cpp:#pragma warning(disable: 4995)
modules/videoio/src/cap_dshow.cpp://Include Directshow stuff here so we don't worry about needing all the h files.
modules/videoio/src/cap_dshow.cpp:DEFINE_GUID(CLSID_SampleGrabber,0xc1f400a0,0x3f08,0x11d3,0x9f,0x0b,0x00,0x60,0x08,0x03,0x9e,0x37);
modules/videoio/src/cap_dshow.cpp:DEFINE_GUID(IID_ICaptureGraphBuilder2,0x93e5a4e0,0x2d50,0x11d2,0xab,0xfa,0x00,0xa0,0xc9,0xc6,0xe3,0x8d);
modules/videoio/src/cap_dshow.cpp:DEFINE_GUID(IID_ISampleGrabber,0x6b652fff,0x11fe,0x4fce,0x92,0xad,0x02,0x66,0xb5,0xd7,0xc7,0x8f);
modules/videoio/src/cap_dshow.cpp:interface ISampleGrabberCB : public IUnknown
modules/videoio/src/cap_dshow.cpp:interface ISampleGrabber : public IUnknown
modules/videoio/src/cap_dshow.cpp:        ISampleGrabberCB *pCallback,
modules/videoio/src/cap_dshow.cpp:    //Prints out a list of available devices and returns num of devices found
modules/videoio/src/cap_dshow.cpp:                                                       //call this with the appropriate format listed above
modules/videoio/src/cap_dshow.cpp:    //optionally setup a second (or third, fourth ...) device - same options as above
modules/videoio/src/cap_dshow.cpp:struct ISampleGrabber;
modules/videoio/src/cap_dshow.cpp:class SampleGrabberCallback;
modules/videoio/src/cap_dshow.cpp:        IBaseFilter *pGrabberF;
modules/videoio/src/cap_dshow.cpp:        ISampleGrabber * pGrabber;                // Grabs frame
modules/videoio/src/cap_dshow.cpp:        SampleGrabberCallback * sgCallback;
modules/videoio/src/cap_dshow.cpp:        //preference here. if it is available it will be used.
modules/videoio/src/cap_dshow.cpp:        //see #defines above for available formats - eg VI_NTSC_M or VI_PAL_B
modules/videoio/src/cap_dshow.cpp:        //as above but then sets it up with same settings
modules/videoio/src/cap_dshow.cpp:        //number of devices available
modules/videoio/src/cap_dshow.cpp:class SampleGrabberCallback : public ISampleGrabberCB{
modules/videoio/src/cap_dshow.cpp:    SampleGrabberCallback(){
modules/videoio/src/cap_dshow.cpp:    virtual ~SampleGrabberCallback(){
modules/videoio/src/cap_dshow.cpp:        *ppvObject = static_cast<ISampleGrabberCB*>(this);
modules/videoio/src/cap_dshow.cpp:     pGrabber           = NULL; // Grabs frame
modules/videoio/src/cap_dshow.cpp:     pGrabberF          = NULL; // Grabber Filter
modules/videoio/src/cap_dshow.cpp:     sgCallback           = new SampleGrabberCallback();
modules/videoio/src/cap_dshow.cpp:// Probably could be a lot cleaner! :)
modules/videoio/src/cap_dshow.cpp:    if( (sgCallback) && (pGrabber) )
modules/videoio/src/cap_dshow.cpp:        pGrabber->SetCallback(NULL, 1);
modules/videoio/src/cap_dshow.cpp:        DebugPrintOut("SETUP: freeing Grabber Callback\n");
modules/videoio/src/cap_dshow.cpp:    if( (pGrabberF) ){          DebugPrintOut("SETUP: freeing Grabber Filter\n");
modules/videoio/src/cap_dshow.cpp:                                (pGrabberF)->Release();
modules/videoio/src/cap_dshow.cpp:                                (pGrabberF) = 0;
modules/videoio/src/cap_dshow.cpp:    if( (pGrabber) ){           DebugPrintOut("SETUP: freeing Grabber\n");
modules/videoio/src/cap_dshow.cpp:                                (pGrabber)->Release();
modules/videoio/src/cap_dshow.cpp:                                (pGrabber) = 0;
modules/videoio/src/cap_dshow.cpp:    delete pGrabberF;
modules/videoio/src/cap_dshow.cpp:    delete pGrabber;
modules/videoio/src/cap_dshow.cpp:                hr = pVideoDec->get_AvailableTVFormats(&lValue);
modules/videoio/src/cap_dshow.cpp:// Our static function for finding num devices available etc
modules/videoio/src/cap_dshow.cpp:            HRESULT hr = VDList[id]->pGrabber->GetCurrentBuffer(&bufferSize, (long *)VDList[id]->pBuffer);
modules/videoio/src/cap_dshow.cpp:                DebugPrintOut("ERROR: GetPixels() - Unable to grab frame for device %i\n", id);
modules/videoio/src/cap_dshow.cpp:            DebugPrintOut("ERROR: Unable to reconnect to device\n");
modules/videoio/src/cap_dshow.cpp:    long CurrVal, Min, Max, SteppingDelta, Default, CapsFlags, AvailableCapsFlags = 0;
modules/videoio/src/cap_dshow.cpp:    pAMVideoProcAmp->GetRange(Property, &Min, &Max, &SteppingDelta, &Default, &AvailableCapsFlags);
modules/videoio/src/cap_dshow.cpp:    DebugPrintOut("Range for video setting %s: Min:%ld Max:%ld SteppingDelta:%ld Default:%ld Flags:%ld\n", propStr, Min, Max, SteppingDelta, Default, AvailableCapsFlags);
modules/videoio/src/cap_dshow.cpp:        // Perhaps add a check that lValue and Flags are within the range aquired from GetRange above
modules/videoio/src/cap_dshow.cpp:            long CurrVal, Min, Max, SteppingDelta, Default, CapsFlags, AvailableCapsFlags;
modules/videoio/src/cap_dshow.cpp:            pIAMCameraControl->GetRange(Property, &Min, &Max, &SteppingDelta, &Default, &AvailableCapsFlags);
modules/videoio/src/cap_dshow.cpp:            DebugPrintOut("Range for video setting %s: Min:%ld Max:%ld SteppingDelta:%ld Default:%ld Flags:%ld\n", propStr, Min, Max, SteppingDelta, Default, AvailableCapsFlags);
modules/videoio/src/cap_dshow.cpp:                // Perhaps add a check that lValue and Flags are within the range aquired from GetRange above
modules/videoio/src/cap_dshow.cpp:// (do we need to worry about multithreaded apps?)
modules/videoio/src/cap_dshow.cpp:// Same as above but to unitialize com, decreases counter and frees com
modules/videoio/src/cap_dshow.cpp:        DebugPrintOut("SETUP: device[%i] not found - you have %i devices available\n", deviceNumber, devicesFound);
modules/videoio/src/cap_dshow.cpp:    else if ( prop==VideoProcAmp_ColorEnable) sprintf(tmpStr, "ColorEnable");
modules/videoio/src/cap_dshow.cpp:            return VideoProcAmp_ColorEnable;
modules/videoio/src/cap_dshow.cpp:    hr = VD->streamConf->GetNumberOfCapabilities(&iCount, &iSize);
modules/videoio/src/cap_dshow.cpp:                //his is how many diff sizes are available for the format
modules/videoio/src/cap_dshow.cpp:                    else if( abs(widthIn-x) < abs(widthIn-tempW) ){
modules/videoio/src/cap_dshow.cpp:                    else if( abs(heightIn-y) < abs(heightIn-tempH) ){
modules/videoio/src/cap_dshow.cpp:                  //available. the closest size is determined by the sum difference
modules/videoio/src/cap_dshow.cpp:                  else if( abs(widthIn - tempW) + abs(heightIn - tempH)  < abs(widthIn - nearW) + abs(heightIn - nearH) )
modules/videoio/src/cap_dshow.cpp:    // Create the Sample Grabber.
modules/videoio/src/cap_dshow.cpp:    hr = CoCreateInstance(CLSID_SampleGrabber, NULL, CLSCTX_INPROC_SERVER,IID_IBaseFilter, (void**)&VD->pGrabberF);
modules/videoio/src/cap_dshow.cpp:        DebugPrintOut("Could not Create Sample Grabber - CoCreateInstance()\n");
modules/videoio/src/cap_dshow.cpp:    hr = VD->pGraph->AddFilter(VD->pGrabberF, L"Sample Grabber");
modules/videoio/src/cap_dshow.cpp:        DebugPrintOut("Could not add Sample Grabber - AddFilter()\n");
modules/videoio/src/cap_dshow.cpp:    hr = VD->pGrabberF->QueryInterface(IID_ISampleGrabber, (void**)&VD->pGrabber);
modules/videoio/src/cap_dshow.cpp:        DebugPrintOut("ERROR: Could not query SampleGrabber\n");
modules/videoio/src/cap_dshow.cpp:    hr = VD->pGrabber->SetOneShot(FALSE);
modules/videoio/src/cap_dshow.cpp:        hr = VD->pGrabber->SetBufferSamples(FALSE);
modules/videoio/src/cap_dshow.cpp:        hr = VD->pGrabber->SetBufferSamples(TRUE);
modules/videoio/src/cap_dshow.cpp:        //Tell the grabber to use our callback function - 0 is for SampleCB and 1 for BufferCB
modules/videoio/src/cap_dshow.cpp:        hr = VD->pGrabber->SetCallback(VD->sgCallback, 0);
modules/videoio/src/cap_dshow.cpp:    //Get video properties from the stream's mediatype and apply to the grabber (otherwise we don't get an RGB image)
modules/videoio/src/cap_dshow.cpp:    hr = VD->pGrabber->SetMediaType(&mt);
modules/videoio/src/cap_dshow.cpp:    hr = VD->pCaptureGraph->RenderStream(&PIN_CATEGORY_PREVIEW, &MEDIATYPE_Video, VD->pVideoInputFilter, VD->pGrabberF, VD->pDestFilter);
modules/videoio/src/cap_dshow.cpp:            hr = VD->pGrabber->GetCurrentBuffer(&bufferSize, (long *)VD->pBuffer);
modules/videoio/src/cap_dshow.cpp:    VD->pGrabberF->Release();
modules/videoio/src/cap_dshow.cpp:    VD->pGrabberF = NULL;
modules/videoio/src/cap_dshow.cpp:    // unknown parameter or value not available
modules/videoio/src/cap_dshow.cpp:bool VideoCapture_DShow::grabFrame()
modules/videoio/src/cap_gstreamer.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_gstreamer.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_gstreamer.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_gstreamer.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_gstreamer.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_gstreamer.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_gstreamer.cpp: * \brief CvCapture_GStreamer::grabFrame
modules/videoio/src/cap_gstreamer.cpp: * Grabs a sample from the pipeline, awaiting consumation by retreiveFrame.
modules/videoio/src/cap_gstreamer.cpp:bool CvCapture_GStreamer::grabFrame()
modules/videoio/src/cap_gstreamer.cpp: *  Retreive the previously grabbed buffer, and wrap it in an IPLImage structure
modules/videoio/src/cap_gstreamer.cpp:    // info.data ptr is valid until next grabFrame where the associated sample is unref'd
modules/videoio/src/cap_gstreamer.cpp:        //something weird went wrong here. abort. abort.
modules/videoio/src/cap_gstreamer.cpp:        //fprintf(stderr,"GStreamer: unable to map buffer");
modules/videoio/src/cap_gstreamer.cpp:        //fprintf(stderr, "GStreamer: unable to query pipeline state\n");
modules/videoio/src/cap_gstreamer.cpp:        CV_ERROR(CV_StsError, "GStreamer: unable to start pipeline\n");
modules/videoio/src/cap_gstreamer.cpp:        CV_ERROR(CV_StsError, "GStreamer: unable to stop pipeline\n");
modules/videoio/src/cap_gstreamer.cpp:        if (! gst_caps_is_writable(caps))
modules/videoio/src/cap_gstreamer.cpp:            caps = gst_caps_make_writable (caps);
modules/videoio/src/cap_gstreamer.cpp:    if (! gst_caps_is_writable(caps))
modules/videoio/src/cap_gstreamer.cpp:        caps = gst_caps_make_writable (caps);
modules/videoio/src/cap_gstreamer.cpp: *  When dealing with a file, CvCapture_GStreamer will not drop frames if the grabbing interval
modules/videoio/src/cap_gstreamer.cpp: *  The pipeline will only be started whenever the first frame is grabbed. Setting pipeline properties
modules/videoio/src/cap_gstreamer.cpp:        // The solution (probably only until gstreamer 1.2) is to make an element from uri when dealing with v4l2.
modules/videoio/src/cap_gstreamer.cpp:            CV_ERROR(CV_StsError, "GStreamer: unable to start pipeline\n");
modules/videoio/src/cap_gstreamer.cpp:            CV_WARN("GStreamer: unable to query duration of stream");
modules/videoio/src/cap_gstreamer.cpp: * are not available until a first frame was received
modules/videoio/src/cap_gstreamer.cpp:            CV_WARN("GStreamer: unable to query position of stream");
modules/videoio/src/cap_gstreamer.cpp:            CV_WARN("GStreamer: unable to query position of stream");
modules/videoio/src/cap_gstreamer.cpp:            CV_WARN("GStreamer: unable to query position of stream");
modules/videoio/src/cap_gstreamer.cpp:            CV_WARN("GStreamer: unable to seek");
modules/videoio/src/cap_gstreamer.cpp:            CV_WARN("GStreamer: unable to seek");
modules/videoio/src/cap_gstreamer.cpp:            CV_WARN("GStreamer: unable to seek");
modules/videoio/src/cap_gstreamer.cpp: * initialise all variables
modules/videoio/src/cap_gstreamer.cpp:            CV_WARN("Unable to stop gstreamer pipeline\n");
modules/videoio/src/cap_xine.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_xine.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_xine.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_xine.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_xine.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_xine.cpp:// required to enable some functions used here...
modules/videoio/src/cap_xine.cpp:    /// method call table
modules/videoio/src/cap_xine.cpp:    /// indicated if input is seekable
modules/videoio/src/cap_xine.cpp:    bool	seekable;
modules/videoio/src/cap_xine.cpp:    capture->seekable = ( tmp.frame_number != 0 );
modules/videoio/src/cap_xine.cpp:    if ( capture->seekable )
modules/videoio/src/cap_xine.cpp:        fprintf( stderr, "(DEBUG) icvCheckSeekAVI_XINE: Input is seekable, using XINE seek implementation.\n" );
modules/videoio/src/cap_xine.cpp:        fprintf( stderr, "(DEBUG) icvCheckSeekAVI_XINE: Input is NOT seekable, using fallback function.\n" );
modules/videoio/src/cap_xine.cpp:    capture->vo_port = xine_new_framegrab_video_port( capture->xine );
modules/videoio/src/cap_xine.cpp:        printf( "(ERROR)icvOpenAVI_XINE(): Unable to initialize video driver.\n" );
modules/videoio/src/cap_xine.cpp:        printf( "(ERROR)icvOpenAVI_XINE(): Unable to open source '%s'\n", filename );
modules/videoio/src/cap_xine.cpp:static int icvGrabFrameAVI_XINE( CvCaptureAVI_XINE* capture )
modules/videoio/src/cap_xine.cpp:    fprintf( stderr, "(DEBUG) icvGrabFrameAVI_XINE ... start\n" );
modules/videoio/src/cap_xine.cpp:                        "icvGrabFrameAVI_XINE( CvCaptureAVI_XINE * )", "illegal capture");
modules/videoio/src/cap_xine.cpp:                        "icvGrabFrameAVI_XINE( CvCaptureAVI_XINE * )", "illegal capture->vo_port");
modules/videoio/src/cap_xine.cpp:    fprintf( stderr, "(DEBUG) icvGrabFrameAVI_XINE ... end\n" );
modules/videoio/src/cap_xine.cpp:    /* no frame grabbed yet? so let's do it now! */
modules/videoio/src/cap_xine.cpp:        res = icvGrabFrameAVI_XINE( capture );
modules/videoio/src/cap_xine.cpp:            /// un-increment framenumber grabbing failed
modules/videoio/src/cap_xine.cpp:        /// reset stream, should also work with non-seekable input
modules/videoio/src/cap_xine.cpp:            /// un-increment last framenumber if grabbing failed
modules/videoio/src/cap_xine.cpp:    if ( capture->seekable )
modules/videoio/src/cap_xine.cpp:    if ( capture->seekable )
modules/videoio/src/cap_xine.cpp:    if ( capture->seekable )
modules/videoio/src/cap_xine.cpp:            if ( !capture->seekable )
modules/videoio/src/cap_xine.cpp:                fprintf( stderr, "	Stream is NOT seekable, so position info may NOT be valid !!\n" );
modules/videoio/src/cap_xine.cpp:            if ( !capture->seekable )
modules/videoio/src/cap_xine.cpp:                fprintf( stderr, "	Stream is NOT seekable, so ratio info may NOT be valid !!\n" );
modules/videoio/src/cap_xine.cpp:            if ( !capture->seekable )
modules/videoio/src/cap_xine.cpp:                fprintf( stderr, "	Stream is NOT seekable, so FPS info may NOT be valid !!\n" );
modules/videoio/src/cap_xine.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_xine.cpp:bool CvCaptureAVI_XINE_CPP::grabFrame()
modules/videoio/src/cap_xine.cpp:    return captureXINE ? icvGrabFrameAVI_XINE( captureXINE ) != 0 : false;
modules/videoio/src/cap_dc1394_v2.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_dc1394_v2.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_dc1394_v2.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_dc1394_v2.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_dc1394_v2.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_dc1394_v2.cpp:    // if the output is not YUV we don't care about this field.
modules/videoio/src/cap_dc1394_v2.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_dc1394_v2.cpp:        // if capable set operation mode to 1394b for iso speeds above 400
modules/videoio/src/cap_dc1394_v2.cpp:        if (isoSpeed > 400 && dcCam->bmode_capable == DC1394_TRUE)
modules/videoio/src/cap_dc1394_v2.cpp:        //if userMode is available: set it and update size
modules/videoio/src/cap_dc1394_v2.cpp:            double diff = fabs(fps1 - fps);
modules/videoio/src/cap_dc1394_v2.cpp:bool CvCaptureCAM_DC1394_v2_CPP::grabFrame()
modules/videoio/src/cap_dc1394_v2.cpp:    // Simulate mutable (C++11-like) member variable
modules/videoio/src/cap_dc1394_v2.cpp:            //&& feature_set.feature[dc1394properties[propId]-DC1394_FEATURE_MIN].on_off_capable)
modules/videoio/src/cap_dc1394_v2.cpp:        rectify = fabs(value) > FLT_EPSILON;
modules/videoio/src/cap_dc1394_v2.cpp:                     if (  (act_feature->on_off_capable)
modules/videoio/src/cap_dc1394_v2.cpp:                 //try to turn the feature ON, feature can be ON and at the same time it can be not capable to change state to OFF
modules/videoio/src/cap_dc1394_v2.cpp:                 if ( (act_feature->is_on == DC1394_OFF) && (act_feature->on_off_capable == DC1394_TRUE))
modules/videoio/src/cap_dc1394_v2.cpp:                 //turn off absolute mode - the actual value will be stored in the value field,
modules/videoio/src/cap_dc1394_v2.cpp:                 //otherwise it would be stored into CSR (control and status register) absolute value
modules/videoio/src/cap_dc1394_v2.cpp:                 if (act_feature->absolute_capable
modules/videoio/src/cap_dc1394_v2.cpp:                     && dc1394_feature_set_absolute_control(dcCam, act_feature->id, DC1394_OFF) !=DC1394_SUCCESS)
modules/videoio/src/cap_dc1394_v2.cpp:                     act_feature->abs_control=DC1394_OFF;
modules/videoio/src/cap_dc1394_v2.cpp:        if( fabs(mx->width*0.5 - intrinsic->data.fl[2]) > mx->width*0.1 ||
modules/videoio/src/cap_dc1394_v2.cpp:            fabs(my->height*0.5 - intrinsic->data.fl[5]) > my->height*0.1 )
modules/videoio/src/cap_dc1394_v2.cpp:            if( fabs(mx->width*0.5 - intrinsic->data.fl[2]) > mx->width*0.05 ||
modules/videoio/src/cap_dc1394_v2.cpp:                fabs(my->height*0.5 - intrinsic->data.fl[5]) > my->height*0.05 )
modules/videoio/src/cap_vfw.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_vfw.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_vfw.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_vfw.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_vfw.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_vfw.cpp:#pragma warning(disable: 4748)
modules/videoio/src/cap_vfw.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_vfw.cpp:bool CvCaptureAVI_VFW::grabFrame()
modules/videoio/src/cap_vfw.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_vfw.cpp:bool CvCaptureCAM_VFW::grabFrame()
modules/videoio/src/cap_vfw.cpp:        return capGrabFrameNoStop(capWnd) == TRUE;
modules/videoio/src/cap_vfw.cpp:// philipg.  Made this code capable of writing 8bpp gray scale bitmaps
modules/videoio/src/cap_pvapi.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_pvapi.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_pvapi.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_pvapi.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_pvapi.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_pvapi.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_pvapi.cpp:        // 8228 is the optimal size described by the API in order to enable jumbo frames
modules/videoio/src/cap_pvapi.cpp:bool CvCaptureCAM_PvAPI::grabFrame()
modules/videoio/src/cap_pvapi.cpp:        char mEnable[2];
modules/videoio/src/cap_pvapi.cpp:        PvAttrEnumGet(Camera.Handle,"MulticastEnable",mEnable,sizeof(mEnable),NULL);
modules/videoio/src/cap_pvapi.cpp:        if (strcmp(mEnable, "Off") == 0)
modules/videoio/src/cap_pvapi.cpp:            if ((PvAttrEnumSet(Camera.Handle,"MulticastEnable", "Off")==ePvErrSuccess))
modules/videoio/src/cap_pvapi.cpp:            if ((PvAttrEnumSet(Camera.Handle,"MulticastEnable", "On")==ePvErrSuccess) &&
modules/videoio/src/cap_ios_video_camera.mm: * 1. Redistributions of source code must retain the above copyright notice,
modules/videoio/src/cap_ios_video_camera.mm: * 2. Redistributions in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_ios_video_camera.mm:    [[self.videoDataOutput connectionWithMediaType:AVMediaTypeVideo] setEnabled:YES];
modules/videoio/src/cap_ios_video_camera.mm:        NSLog(@"[Camera] unable to set defaultFPS at %d FPS, max is %f FPS", self.defaultFPS, maxRate);
modules/videoio/src/cap_ios_video_camera.mm:        NSLog(@"[Camera] unable to set defaultFPS: %@", error);
modules/videoio/src/cap_ios_video_camera.mm:        NSLog(@"[Camera] Unable to create AVAssetWriter: %@", error);
modules/videoio/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/precomp.hpp:    #undef abs
modules/videoio/src/precomp.hpp:    virtual bool grabFrame() { return true; }
modules/videoio/src/precomp.hpp:        virtual bool grabFrame() = 0;
modules/videoio/src/cap_winrt_bridge.cpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_bridge.cpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_bridge.cpp:    frontOutputBuffer = ref new WriteableBitmap(width, height);
modules/videoio/src/cap_winrt_bridge.cpp:    backOutputBuffer = ref new WriteableBitmap(width, height);
modules/videoio/src/cap_winrt_bridge.cpp:        Video::getInstance().initGrabber(deviceIndex, width, height);
modules/videoio/src/cap_unicap.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_unicap.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_unicap.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_unicap.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_unicap.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_unicap.cpp:  virtual bool grabFrame();
modules/videoio/src/cap_unicap.cpp:bool CvCapture_Unicap::grabFrame() {
modules/videoio/src/cap_unicap.cpp:  CV_FUNCNAME("CvCapture_Unicap::grabFrame");
modules/videoio/src/cap_openni2.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videoio/src/cap_openni2.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videoio/src/cap_openni2.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videoio/src/cap_openni2.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videoio/src/cap_openni2.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videoio/src/cap_openni2.cpp:    virtual bool grabFrame();
modules/videoio/src/cap_openni2.cpp:    //cv::Ptr<ApproximateSyncGrabber> approxSyncGrabber;
modules/videoio/src/cap_openni2.cpp:    //device.setDepthColorSyncEnabled(true);
modules/videoio/src/cap_openni2.cpp:        propValue = const_cast<CvCapture_OpenNI2 *>(this)->device.getDepthColorSyncEnabled();
modules/videoio/src/cap_openni2.cpp:        bool isMirroring = color.getMirroringEnabled() && depth.getMirroringEnabled();
modules/videoio/src/cap_openni2.cpp:        isSet = color.setMirroringEnabled(mirror) == openni::STATUS_OK;
modules/videoio/src/cap_openni2.cpp:        isSet = depth.setMirroringEnabled(mirror) == openni::STATUS_OK;
modules/videoio/src/cap_openni2.cpp:        isSet = device.setDepthColorSyncEnabled(propValue > 0.0) == openni::STATUS_OK;
modules/videoio/src/cap_openni2.cpp:                // then the property isn't avaliable
modules/videoio/src/cap_openni2.cpp:bool CvCapture_OpenNI2::grabFrame()
modules/videoio/src/cap_openni2.cpp:    bool isGrabbed = false;
modules/videoio/src/cap_openni2.cpp:    isGrabbed = true;
modules/videoio/src/cap_openni2.cpp:    return isGrabbed;
modules/videoio/src/cap_openni2.cpp:        CV_Error( CV_StsUnsupportedFormat, "Unsupported format of grabbed image\n" );
modules/videoio/src/cap_winrt_video.cpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_video.cpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/videoio/src/cap_winrt_video.cpp:#include "cap_winrt/CaptureFrameGrabber.hpp"
modules/videoio/src/cap_winrt_video.cpp:    return bGrabberInited.load();
modules/videoio/src/cap_winrt_video.cpp:void Video::closeGrabber() {
modules/videoio/src/cap_winrt_video.cpp:    // assigning nullptr causes deref of grabber and thus closes the device
modules/videoio/src/cap_winrt_video.cpp:    m_frameGrabber = nullptr;
modules/videoio/src/cap_winrt_video.cpp:    bGrabberInited = false;
modules/videoio/src/cap_winrt_video.cpp:    bGrabberInitInProgress = false;
modules/videoio/src/cap_winrt_video.cpp:bool Video::initGrabber(int device, int w, int h) {
modules/videoio/src/cap_winrt_video.cpp:    if (bGrabberInited || bGrabberInitInProgress) return false;
modules/videoio/src/cap_winrt_video.cpp:    bGrabberInited = false;
modules/videoio/src/cap_winrt_video.cpp:    bGrabberInitInProgress = true;
modules/videoio/src/cap_winrt_video.cpp:            OutputDebugStringA("Video::initGrabber - no video device found\n");
modules/videoio/src/cap_winrt_video.cpp:            return ::Media::CaptureFrameGrabber::CreateAsync(m_capture.Get(), props);
modules/videoio/src/cap_winrt_video.cpp:        }).then([this](::Media::CaptureFrameGrabber^ frameGrabber)
modules/videoio/src/cap_winrt_video.cpp:            m_frameGrabber = frameGrabber;
modules/videoio/src/cap_winrt_video.cpp:            bGrabberInited = true;
modules/videoio/src/cap_winrt_video.cpp:            bGrabberInitInProgress = false;
modules/videoio/src/cap_winrt_video.cpp:            _GrabFrameAsync(frameGrabber);
modules/videoio/src/cap_winrt_video.cpp:void Video::_GrabFrameAsync(::Media::CaptureFrameGrabber^ frameGrabber) {
modules/videoio/src/cap_winrt_video.cpp:    create_task(frameGrabber->GetFrameAsync()).then([this, frameGrabber](const ComPtr<IMF2DBuffer2>& buffer)
modules/videoio/src/cap_winrt_video.cpp:        if (bGrabberInited)
modules/videoio/src/cap_winrt_video.cpp:            _GrabFrameAsync(frameGrabber);
modules/videoio/src/cap_winrt_video.cpp:        //   deviceInfo.bAvailable = true;
modules/video/test/test_optflowpyrlk.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/test_optflowpyrlk.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/test_optflowpyrlk.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/test_optflowpyrlk.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/test_optflowpyrlk.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/test_optflowpyrlk.cpp:            err = fabs(v2[i].x - v[i].x) + fabs(v2[i].y - v[i].y);
modules/video/test/ocl/test_optflow_farneback.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/ocl/test_optflow_farneback.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/ocl/test_optflow_farneback.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/ocl/test_optflow_farneback.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/ocl/test_optflow_farneback.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/ocl/test_optflowpyrlk.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/ocl/test_optflowpyrlk.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/ocl/test_optflowpyrlk.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/ocl/test_optflowpyrlk.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/ocl/test_optflowpyrlk.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/ocl/test_optflowpyrlk.cpp:            bool eq = std::abs(a.x - b.x) < 1 && std::abs(a.y - b.y) < 1;
modules/video/test/ocl/test_optflow_tvl1flow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/ocl/test_optflow_tvl1flow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/ocl/test_optflow_tvl1flow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/ocl/test_optflow_tvl1flow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/ocl/test_optflow_tvl1flow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/test_estimaterigid.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/test_estimaterigid.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/test_estimaterigid.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/test_estimaterigid.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/test_estimaterigid.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/test_estimaterigid.cpp:                if( fabs(dB) < 0.01*nB )
modules/video/test/test_tvl1optflow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/test_tvl1optflow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/test_tvl1optflow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/test_tvl1optflow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/test_tvl1optflow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/test_tvl1optflow.cpp:        return !cvIsNaN(u.x) && !cvIsNaN(u.y) && (fabs(u.x) < 1e9) && (fabs(u.y) < 1e9);
modules/video/test/test_ecc.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/test_ecc.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/test_ecc.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/test_ecc.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/test_ecc.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/test_ecc.cpp:            tr = tr & (!cvIsNaN(mapVal) && (fabs(mapVal) < 1e9));
modules/video/test/test_kalman.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/test_kalman.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/test_kalman.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/test_kalman.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/test_kalman.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/test_accum.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/test_accum.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/test_accum.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/test_accum.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/test_accum.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/test_camshift.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/test/test_camshift.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/test/test_camshift.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/test/test_camshift.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/test/test_camshift.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/test/test_camshift.cpp:    if( fabs(box.size.width - box0.size.width) > box0.size.width*0.2 ||
modules/video/test/test_camshift.cpp:        fabs(box.size.height - box0.size.height) > box0.size.height*0.3 )
modules/video/test/test_camshift.cpp:    if( fabs(box.center.x - box0.center.x) > m*0.1 ||
modules/video/test/test_camshift.cpp:        fabs(box.center.y - box0.center.y) > m*0.1 )
modules/video/test/test_camshift.cpp:    diff_angle = fabs(box0.angle - box.angle);
modules/video/test/test_camshift.cpp:    diff_angle = MIN( diff_angle, fabs(box0.angle - box.angle + 180));
modules/video/test/test_camshift.cpp:    if( fabs(diff_angle) > 30 && box0.size.height > box0.size.width*1.2 )
modules/video/test/test_camshift.cpp:    if( fabs(comp.area - area0) > area0*0.15 )
modules/video/test/test_camshift.cpp:    if( fabs(c.x - box0.center.x) > m*0.1 ||
modules/video/test/test_camshift.cpp:        fabs(c.y - box0.center.y) > m*0.1 )
modules/video/test/test_camshift.cpp:    if( fabs((double)(comp.area - area0)) > fabs((double)(area - area0)) + area0*0.05 )
modules/video/include/opencv2/video/background_segm.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/include/opencv2/video/background_segm.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/include/opencv2/video/background_segm.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/include/opencv2/video/background_segm.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/include/opencv2/video/background_segm.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/include/opencv2/video/background_segm.hpp:    If a foreground pixel keeps semi-constant value for about backgroundRatio\*history frames, it's
modules/video/include/opencv2/video/background_segm.hpp:    /** @brief Enables or disables shadow detection
modules/video/include/opencv2/video/background_segm.hpp:    /** @brief Enables or disables shadow detection
modules/video/include/opencv2/video/tracking_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/video/include/opencv2/video/tracking_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/include/opencv2/video/tracking_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/include/opencv2/video/tracking_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/include/opencv2/video/tracking_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/video/include/opencv2/video/tracking.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/include/opencv2/video/tracking.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/include/opencv2/video/tracking.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/include/opencv2/video/tracking.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/include/opencv2/video/tracking.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/include/opencv2/video/tracking.hpp:Default values are shown in the declaration above.
modules/video/include/opencv2/video/tracking.hpp:    to maintain both parts in correspondence. The method is stable for a large range of values
modules/video/include/opencv2/video/tracking.hpp:    I1(x+u0) ) are computed per scale. This is a parameter that assures the stability of the
modules/video/include/opencv2/video/tracking.hpp:Javier Sanchez, Enric Meinhardt-Llopis and Gabriele Facciolo. "TV-L1 Optical Flow Estimation".
modules/video/include/opencv2/video/video.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/include/opencv2/video/video.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/include/opencv2/video/video.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/include/opencv2/video/video.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/include/opencv2/video/video.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/include/opencv2/video.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/include/opencv2/video.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/include/opencv2/video.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/include/opencv2/video.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/include/opencv2/video.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/perf/perf_optflowpyrlk.cpp:    if (img1.empty()) FAIL() << "Unable to load source image " << filename1;
modules/video/perf/perf_optflowpyrlk.cpp:    if (img2.empty()) FAIL() << "Unable to load source image " << filename2;
modules/video/perf/perf_optflowpyrlk.cpp:    if (img1.empty()) FAIL() << "Unable to load source image " << filename1;
modules/video/perf/perf_optflowpyrlk.cpp:    if (img2.empty()) FAIL() << "Unable to load source image " << filename2;
modules/video/perf/opencl/perf_optflow_farneback.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/perf/opencl/perf_optflow_farneback.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/perf/opencl/perf_optflow_farneback.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/perf/opencl/perf_optflow_farneback.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/perf/opencl/perf_optflow_farneback.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/perf/opencl/perf_optflow_dualTVL1.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/perf/opencl/perf_optflow_dualTVL1.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/perf/opencl/perf_optflow_dualTVL1.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/perf/opencl/perf_optflow_dualTVL1.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/perf/opencl/perf_optflow_dualTVL1.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/perf/opencl/perf_optflow_pyrlk.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/perf/opencl/perf_optflow_pyrlk.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/perf/opencl/perf_optflow_pyrlk.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/perf/opencl/perf_optflow_pyrlk.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/perf/opencl/perf_optflow_pyrlk.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/tvl1flow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/tvl1flow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/tvl1flow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/tvl1flow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/tvl1flow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/tvl1flow.cpp:// * Redistributions of source code must retain the above copyright notice, this
modules/video/src/tvl1flow.cpp:// * Redistributions in binary form must reproduce the above copyright notice,
modules/video/src/tvl1flow.cpp:    bool estimateDualVariables(UMat &u1, UMat &u2,
modules/video/src/tvl1flow.cpp:bool cv_ocl_tvl1flow::estimateDualVariables(UMat &u1, UMat &u2,
modules/video/src/tvl1flow.cpp:    if (!kernel.create("estimateDualVariablesKernel", cv::ocl::video::optical_flow_tvl1_oclsrc, ""))
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> map1;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> map2;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> dx;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> dy;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> dx;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> dy;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> div;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> grad;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> rho_c;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> v1;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> v2;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> v3;
modules/video/src/tvl1flow.cpp:// estimateDualVariables
modules/video/src/tvl1flow.cpp:struct EstimateDualVariablesBody : ParallelLoopBody
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> p11;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> p12;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> p21;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> p22;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> p31;
modules/video/src/tvl1flow.cpp:    mutable Mat_<float> p32;
modules/video/src/tvl1flow.cpp:void EstimateDualVariablesBody::operator() (const Range& range) const
modules/video/src/tvl1flow.cpp:void estimateDualVariables(const Mat_<float>& u1x, const Mat_<float>& u1y,
modules/video/src/tvl1flow.cpp:    EstimateDualVariablesBody body;
modules/video/src/tvl1flow.cpp:                if (!estimateDualVariables(u1, u2, p11, p12, p21, p22, taut))
modules/video/src/tvl1flow.cpp:                // estimate the values of the variable (v1, v2) (thresholding operator TH)
modules/video/src/tvl1flow.cpp:                // compute the divergence of the dual variable (p1, p2, p3)
modules/video/src/tvl1flow.cpp:                // estimate the values of the dual variable (p1, p2, p3)
modules/video/src/tvl1flow.cpp:                estimateDualVariables(u1x, u1y, u2x, u2y, u3x, u3y, p11, p12, p21, p22, p31, p32, taut, use_gamma);
modules/video/src/bgfg_KNN.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/bgfg_KNN.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/bgfg_KNN.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/bgfg_KNN.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/bgfg_KNN.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/bgfg_KNN.cpp:    int Pbf = 0; // the total probability that this pixel is background
modules/video/src/bgfg_KNN.cpp:    int Pb = 0; //background model probability
modules/video/src/bgfg_KNN.cpp:    // now increase the probability for each pixel
modules/video/src/bgfg_KNN.cpp:    int Ps = 0; // the total probability that this pixel is background shadow
modules/video/src/ecc.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/ecc.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/ecc.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/ecc.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/ecc.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/ecc.cpp:    for (int i = 1; (i <= numberOfIterations) && (fabs(rho-last_rho)>= termination_eps); i++)
modules/video/src/bgfg_gaussmix2.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/bgfg_gaussmix2.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/bgfg_gaussmix2.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/bgfg_gaussmix2.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/bgfg_gaussmix2.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/bgfg_gaussmix2.cpp:    mutable bool opencl_ON;
modules/video/src/bgfg_gaussmix2.cpp:    mutable ocl::Kernel kernel_apply;
modules/video/src/bgfg_gaussmix2.cpp:    mutable ocl::Kernel kernel_getBg;
modules/video/src/bgfg_gaussmix2.cpp:    //I used here 10 as a reasonable value
modules/video/src/bgfg_gaussmix2.cpp:    //I used here 10 as a reasonable value
modules/video/src/compat_video.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/compat_video.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/compat_video.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/compat_video.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/compat_video.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/kalman.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/kalman.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/kalman.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/kalman.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/kalman.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/opencl/optical_flow_tvl1.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/opencl/optical_flow_tvl1.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/opencl/optical_flow_tvl1.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/opencl/optical_flow_tvl1.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/opencl/optical_flow_tvl1.cl:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/opencl/optical_flow_tvl1.cl:    float x = fabs(x_);
modules/video/src/opencl/optical_flow_tvl1.cl:__kernel void estimateDualVariablesKernel(__global const float* u1, int u1_col, int u1_row, int u1_step,
modules/video/src/opencl/optical_flow_tvl1.cl:        // estimate the values of the variable (v1, v2) (thresholding operator TH)
modules/video/src/opencl/optical_flow_tvl1.cl:        // compute the divergence of the dual variable (p1, p2)
modules/video/src/opencl/pyrlk.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/opencl/pyrlk.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/opencl/pyrlk.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/opencl/pyrlk.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/opencl/pyrlk.cl:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/opencl/pyrlk.cl:    *errval += fabs(diff);
modules/video/src/opencl/pyrlk.cl:        if (fabs(delta.x) < THRESHOLD && fabs(delta.y) < THRESHOLD)
modules/video/src/opencl/optical_flow_farneback.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/opencl/optical_flow_farneback.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/opencl/optical_flow_farneback.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/opencl/optical_flow_farneback.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/opencl/optical_flow_farneback.cl:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/opencl/optical_flow_farneback.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/video/src/opencl/optical_flow_farneback.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/video/src/opencl/optical_flow_farneback.cl:    return abs(y) % (last_row + 1);
modules/video/src/opencl/optical_flow_farneback.cl:    return abs(last_row - abs(last_row - y)) % (last_row + 1);
modules/video/src/opencl/optical_flow_farneback.cl:    return abs(x) % (last_col + 1);
modules/video/src/opencl/optical_flow_farneback.cl:    return abs(last_col - abs(last_col - x)) % (last_col + 1);
modules/video/src/lkpyramid.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/lkpyramid.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/lkpyramid.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/lkpyramid.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/lkpyramid.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/lkpyramid.cpp:            // this can probably be replaced with aligned stores if we aligned dst properly.
modules/video/src/lkpyramid.cpp:            if( j > 0 && std::abs(delta.x + prevDelta.x) < 0.01 &&
modules/video/src/lkpyramid.cpp:               std::abs(delta.y + prevDelta.y) < 0.01 )
modules/video/src/lkpyramid.cpp:                    errval += std::abs((float)diff);
modules/video/src/lkpyramid.cpp:            // allocate buffers with aligned pitch to be able to use cl_khr_image2d_from_buffer extention
modules/video/src/lkpyramid.cpp:                    // allocate buffers with aligned pitch to be able to use image on buffer extention
modules/video/src/lkpyramid.cpp:                    if( fabs(pA[idx[i]].x - pA[idx[j]].x) +
modules/video/src/lkpyramid.cpp:                        fabs(pA[idx[i]].y - pA[idx[j]].y) < FLT_EPSILON )
modules/video/src/lkpyramid.cpp:                    if( fabs(pB[idx[i]].x - pB[idx[j]].x) +
modules/video/src/lkpyramid.cpp:                        fabs(pB[idx[i]].y - pB[idx[j]].y) < FLT_EPSILON )
modules/video/src/lkpyramid.cpp:                    if( fabs(dax1*day2 - day1*dax2) < eps*std::sqrt(dax1*dax1+day1*day1)*std::sqrt(dax2*dax2+day2*day2) ||
modules/video/src/lkpyramid.cpp:                        fabs(dbx1*dby2 - dby1*dbx2) < eps*std::sqrt(dbx1*dbx1+dby1*dby1)*std::sqrt(dbx2*dbx2+dby2*dby2) )
modules/video/src/lkpyramid.cpp:            if( std::abs( m[0]*pA[i].x + m[1]*pA[i].y + m[2] - pB[i].x ) +
modules/video/src/lkpyramid.cpp:                std::abs( m[3]*pA[i].x + m[4]*pA[i].y + m[5] - pB[i].y ) < std::max(brect.width,brect.height)*0.05 )
modules/video/src/camshift.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/camshift.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/camshift.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/camshift.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/camshift.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/camshift.cpp:        if( fabs(m.m00) < DBL_EPSILON )
modules/video/src/camshift.cpp:    if( fabs(m00) < DBL_EPSILON )
modules/video/src/camshift.cpp:    int t0 = cvRound( fabs( length * cs ));
modules/video/src/camshift.cpp:    int t1 = cvRound( fabs( width * sn ));
modules/video/src/camshift.cpp:    t0 = cvRound( fabs( length * sn ));
modules/video/src/camshift.cpp:    t1 = cvRound( fabs( width * cs ));
modules/video/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/optflowgf.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/video/src/optflowgf.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/video/src/optflowgf.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/video/src/optflowgf.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/video/src/optflowgf.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/video/src/optflowgf.cpp:        CV_Assert(!fastPyramids || std::abs(pyrScale - 0.5) < 1e-6);
modules/features2d/doc/agast.txt:    *Redistributions of source code must retain the above copyright
modules/features2d/doc/agast.txt:    *Redistributions in binary form must reproduce the above copyright
modules/features2d/doc/agast.txt:#pragma warning( disable : 4127 )
modules/features2d/doc/agast.txt:            // check above
modules/features2d/doc/agast.txt:                // find the corner above the current one
modules/features2d/doc/agast.txt:                // no maximum above
modules/features2d/doc/agast.txt:                else // maximum above
modules/features2d/doc/run_agast_tables.bat:perl read_file_score32.pl 9059 9385 table_5_8_corner_struct
modules/features2d/doc/run_agast_tables.bat:move agast_new.txt agast_score_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_score32.pl 2215 3387 table_7_12d_corner_struct
modules/features2d/doc/run_agast_tables.bat:copy /A agast_score_table.txt + agast_new.txt agast_score_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_score32.pl 3428 9022 table_7_12s_corner_struct
modules/features2d/doc/run_agast_tables.bat:copy /A agast_score_table.txt + agast_new.txt agast_score_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_score32.pl 118 2174 table_9_16_corner_struct
modules/features2d/doc/run_agast_tables.bat:copy /A agast_score_table.txt + agast_new.txt agast_score_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_nondiff32.pl 103 430 table_5_8_struct1
modules/features2d/doc/run_agast_tables.bat:move agast_new.txt agast_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_nondiff32.pl 440 779 table_5_8_struct2
modules/features2d/doc/run_agast_tables.bat:copy /A agast_table.txt + agast_new.txt agast_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_nondiff32.pl 869 2042 table_7_12d_struct1
modules/features2d/doc/run_agast_tables.bat:copy /A agast_table.txt + agast_new.txt agast_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_nondiff32.pl 2052 3225 table_7_12d_struct2
modules/features2d/doc/run_agast_tables.bat:copy /A agast_table.txt + agast_new.txt agast_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_nondiff32.pl 3315 4344 table_7_12s_struct1
modules/features2d/doc/run_agast_tables.bat:copy /A agast_table.txt + agast_new.txt agast_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_nondiff32.pl 4354 5308 table_7_12s_struct2
modules/features2d/doc/run_agast_tables.bat:copy /A agast_table.txt + agast_new.txt agast_table.txt
modules/features2d/doc/run_agast_tables.bat:perl read_file_nondiff32.pl 5400 7454 table_9_16_struct
modules/features2d/doc/run_agast_tables.bat:copy /A agast_table.txt + agast_new.txt agast_table.txt
modules/features2d/doc/read_file_nondiff32.pl:my $tablename  = $ARGV[2];
modules/features2d/doc/read_file_nondiff32.pl:  printf $out "    static const unsigned long %s[] = {\n        ", $tablename;
modules/features2d/doc/read_file_score32.pl:my $tablename  = $ARGV[2];
modules/features2d/doc/read_file_score32.pl:  printf $out "    static const unsigned long %s[] = {\n        ", $tablename;
modules/features2d/doc/agast_score.txt:    *Redistributions of source code must retain the above copyright
modules/features2d/doc/agast_score.txt:    *Redistributions in binary form must reproduce the above copyright
modules/features2d/doc/agast_score.txt:#pragma warning( disable : 4127 )
modules/features2d/test/test_mser.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_mser.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_mser.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_mser.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_mser.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_detectors_regression.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_detectors_regression.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_detectors_regression.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_detectors_regression.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_detectors_regression.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_detectors_regression.cpp:            fabs(p1.size - p2.size) < maxSizeDif &&
modules/features2d/test/test_detectors_regression.cpp:            abs(p1.angle - p2.angle) < maxAngleDif &&
modules/features2d/test/test_detectors_regression.cpp:            abs(p1.response - p2.response) < maxResponseDif &&
modules/features2d/test/test_agast.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_agast.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_agast.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_agast.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_agast.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_descriptors_regression.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_descriptors_regression.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_descriptors_regression.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_descriptors_regression.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_descriptors_regression.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_orb.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_orb.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_orb.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_orb.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_orb.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/ocl/test_brute_force_matcher.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/ocl/test_brute_force_matcher.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/ocl/test_brute_force_matcher.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/ocl/test_brute_force_matcher.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/ocl/test_brute_force_matcher.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_matchers_algorithmic.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_matchers_algorithmic.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_matchers_algorithmic.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_matchers_algorithmic.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_matchers_algorithmic.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_matchers_algorithmic.cpp:                if( match.queryIdx != (int)i || match.trainIdx != (int)i || std::abs(match.distance) > FLT_EPSILON )
modules/features2d/test/test_nearestneighbors.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_nearestneighbors.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_nearestneighbors.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_nearestneighbors.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_nearestneighbors.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_rotation_and_scale_invariance.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_rotation_and_scale_invariance.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_rotation_and_scale_invariance.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_rotation_and_scale_invariance.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_rotation_and_scale_invariance.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_fast.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_fast.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_fast.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_fast.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_fast.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_keypoints.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_keypoints.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_keypoints.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_keypoints.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_keypoints.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/test/test_brisk.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/test/test_brisk.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/test/test_brisk.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/test/test_brisk.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/test/test_brisk.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/include/opencv2/features2d.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/include/opencv2/features2d.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/include/opencv2/features2d.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/include/opencv2/features2d.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/include/opencv2/features2d.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/include/opencv2/features2d.hpp:Matchers of keypoint descriptors in OpenCV have wrappers with a common interface that enables you to
modules/features2d/include/opencv2/features2d.hpp:/** Feature detectors in OpenCV have wrappers with a common interface that enables you to easily switch
modules/features2d/include/opencv2/features2d.hpp:/** Extractors of keypoint descriptors in OpenCV have wrappers with a common interface that enables you
modules/features2d/include/opencv2/features2d.hpp:described in @cite RRKB11 . The algorithm uses FAST in pyramids to detect stable keypoints, selects
modules/features2d/include/opencv2/features2d.hpp:    FAST_SCORE is alternative value of the parameter that produces slightly less stable keypoints,
modules/features2d/include/opencv2/features2d.hpp:/** @brief Maximally stable extremal region extractor
modules/features2d/include/opencv2/features2d.hpp:article](http://en.wikipedia.org/wiki/Maximally_stable_extremal_regions)).
modules/features2d/include/opencv2/features2d.hpp:than grey image method ( 3~4 times ); the chi_table.h file is taken directly from paper's source
modules/features2d/include/opencv2/features2d.hpp:The 32-bit binary tree tables were generated automatically from original code using perl script.
modules/features2d/include/opencv2/features2d.hpp:to turn on/off corresponding filtration. Available filtrations:
modules/features2d/include/opencv2/features2d.hpp:      CV_PROP_RW size_t minRepeatability;
modules/features2d/include/opencv2/features2d.hpp:@note AKAZE descriptor can only be used with KAZE or AKAZE keypoints .. [ABD12] KAZE Features. Pablo
modules/features2d/include/opencv2/features2d.hpp:    @param extended Set to enable extraction of extended (128-byte) descriptor.
modules/features2d/include/opencv2/features2d.hpp:    @param upright Set to enable use of upright descriptors (non rotation-invariant).
modules/features2d/include/opencv2/features2d.hpp:for Accelerated Features in Nonlinear Scale Spaces. Pablo F. Alcantarilla, Jesús Nuevo and Adrien
modules/features2d/include/opencv2/features2d.hpp:    for the details about query and train descriptors.
modules/features2d/include/opencv2/features2d.hpp:    preferable choices for SIFT and SURF descriptors, NORM_HAMMING should be used with ORB, BRISK and
modules/features2d/include/opencv2/features2d.hpp:DrawMatchesFlags. See details above in drawMatches .
modules/features2d/include/opencv2/features2d.hpp:                                         float& repeatability, int& correspCount,
modules/features2d/include/opencv2/features2d.hpp:/** @brief Abstract base class for training the *bag of visual words* vocabulary from a set of descriptors.
modules/features2d/include/opencv2/features2d.hpp:For details, see, for example, *Visual Categorization with Bags of Keypoints* by Gabriella Csurka,
modules/features2d/include/opencv2/features2d.hpp:    The training set is clustered using clustermethod to construct the vocabulary.
modules/features2d/include/opencv2/features2d.hpp:    The vocabulary consists of cluster centers. So, this method returns the vocabulary. In the first
modules/features2d/include/opencv2/features2d.hpp:/** @brief kmeans -based class to train visual vocabulary using the *bag of visual words* approach. :
modules/features2d/include/opencv2/features2d.hpp:    // Returns trained vocabulary (i.e. cluster centers).
modules/features2d/include/opencv2/features2d.hpp:2.  Find the nearest visual words from the vocabulary for each keypoint descriptor.
modules/features2d/include/opencv2/features2d.hpp:3.  Compute the bag-of-words image descriptor as is a normalized histogram of vocabulary words
modules/features2d/include/opencv2/features2d.hpp:vocabulary in the given image.
modules/features2d/include/opencv2/features2d.hpp:    @param dmatcher Descriptor matcher that is used to find the nearest word of the trained vocabulary
modules/features2d/include/opencv2/features2d.hpp:    /** @brief Sets a visual vocabulary.
modules/features2d/include/opencv2/features2d.hpp:    @param vocabulary Vocabulary (can be trained using the inheritor of BOWTrainer ). Each row of the
modules/features2d/include/opencv2/features2d.hpp:    vocabulary is a visual word (cluster center).
modules/features2d/include/opencv2/features2d.hpp:    CV_WRAP void setVocabulary( const Mat& vocabulary );
modules/features2d/include/opencv2/features2d.hpp:    /** @brief Returns the set vocabulary.
modules/features2d/include/opencv2/features2d.hpp:    CV_WRAP const Mat& getVocabulary() const;
modules/features2d/include/opencv2/features2d.hpp:    /** @brief Computes an image descriptor using the set visual vocabulary.
modules/features2d/include/opencv2/features2d.hpp:    pointIdxsOfClusters[i] are keypoint indices that belong to the i -th cluster (word of vocabulary)
modules/features2d/include/opencv2/features2d.hpp:    @param keypointDescriptors Computed descriptors to match with vocabulary.
modules/features2d/include/opencv2/features2d.hpp:    pointIdxsOfClusters[i] are keypoint indices that belong to the i -th cluster (word of vocabulary)
modules/features2d/include/opencv2/features2d.hpp:    /** @brief Returns an image descriptor size if the vocabulary is set. Otherwise, it returns 0.
modules/features2d/include/opencv2/features2d.hpp:    Mat vocabulary;
modules/features2d/include/opencv2/features2d/features2d.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/include/opencv2/features2d/features2d.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/include/opencv2/features2d/features2d.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/include/opencv2/features2d/features2d.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/include/opencv2/features2d/features2d.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/perf/perf_orb.cpp:        FAIL() << "Unable to load source image " << filename;
modules/features2d/perf/perf_orb.cpp:        FAIL() << "Unable to load source image " << filename;
modules/features2d/perf/perf_orb.cpp:        FAIL() << "Unable to load source image " << filename;
modules/features2d/perf/perf_agast.cpp:        FAIL() << "Unable to load source image " << filename;
modules/features2d/perf/perf_fast.cpp:        FAIL() << "Unable to load source image " << filename;
modules/features2d/perf/opencl/perf_orb.cpp:        FAIL() << "Unable to load source image " << filename;
modules/features2d/perf/opencl/perf_orb.cpp:        FAIL() << "Unable to load source image " << filename;
modules/features2d/perf/opencl/perf_orb.cpp:        FAIL() << "Unable to load source image " << filename;
modules/features2d/perf/opencl/perf_brute_force_matcher.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/perf/opencl/perf_brute_force_matcher.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/perf/opencl/perf_brute_force_matcher.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/perf/opencl/perf_brute_force_matcher.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/perf/opencl/perf_brute_force_matcher.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/perf/opencl/perf_fast.cpp:        FAIL() << "Unable to load source image " << filename;
modules/features2d/src/orb.cpp:*   * Redistributions of source code must retain the above copyright
modules/features2d/src/orb.cpp:*   * Redistributions in binary form must reproduce the above
modules/features2d/src/orb.cpp:/** Authors: Ethan Rublee, Vincent Rabaud, Gary Bradski */
modules/features2d/src/orb.cpp:    // Make sure we forget about what is too close to the boundary
modules/features2d/src/akaze.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/akaze.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/akaze.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/akaze.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/akaze.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/akaze.cpp:Pablo F. Alcantarilla, J. Nuevo and Adrien Bartoli.
modules/features2d/src/akaze.cpp:http://www.robesafe.com/personal/pablo.alcantarilla/papers/Alcantarilla13bmvc.pdf
modules/features2d/src/dynamic.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/dynamic.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/dynamic.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/dynamic.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/dynamic.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/kaze/AKAZEFeatures.h: * @author Pablo F. Alcantarilla, Jesus Nuevo
modules/features2d/src/kaze/AKAZEFeatures.cpp: * @author Pablo F. Alcantarilla, Jesus Nuevo
modules/features2d/src/kaze/AKAZEFeatures.cpp:          point.response = fabs(value);
modules/features2d/src/kaze/AKAZEFeatures.cpp:    if (fabs(dst(0)) <= 1.0f && fabs(dst(1)) <= 1.0f) {
modules/features2d/src/kaze/AKAZEFeatures.cpp:    // Delete the point since its not stable
modules/features2d/src/kaze/AKAZEFeatures.cpp:    /// Lookup table for 2d gaussian (sigma = 2.5) where (0,0) is top left and (6,6) is bottom right
modules/features2d/src/kaze/AKAZEFeatures.cpp:  // Variables for computing the dominant direction
modules/features2d/src/kaze/AKAZEFeatures.cpp:          mdx += fabs(rx);
modules/features2d/src/kaze/AKAZEFeatures.cpp:          mdy += fabs(ry);
modules/features2d/src/kaze/AKAZEFeatures.cpp:          mdx += fabs(rrx);
modules/features2d/src/kaze/AKAZEFeatures.cpp:          mdy += fabs(rry);
modules/features2d/src/kaze/KAZEConfig.h: * @author Pablo F. Alcantarilla
modules/features2d/src/kaze/AKAZEConfig.h: * @author Pablo F. Alcantarilla, Jesus Nuevo
modules/features2d/src/kaze/nldiffusion_functions.cpp:// Author: Pablo F. Alcantarilla
modules/features2d/src/kaze/nldiffusion_functions.cpp:// Email: pablofdezalc@gmail.com
modules/features2d/src/kaze/nldiffusion_functions.cpp:// KAZE Features Copyright 2012, Pablo F. Alcantarilla
modules/features2d/src/kaze/nldiffusion_functions.cpp: * @author Pablo F. Alcantarilla
modules/features2d/src/kaze/TEvolution.h: * @author Pablo F. Alcantarilla
modules/features2d/src/kaze/nldiffusion_functions.h: * @author Pablo F. Alcantarilla
modules/features2d/src/kaze/fed.cpp:// Authors: Pablo F. Alcantarilla (1), Jesus Nuevo (2)
modules/features2d/src/kaze/fed.cpp:// Email: pablofdezalc@gmail.com
modules/features2d/src/kaze/fed.cpp:// AKAZE Features Copyright 2013, Pablo F. Alcantarilla, Jesus Nuevo
modules/features2d/src/kaze/fed.cpp: * @author Pablo F. Alcantarilla, Jesus Nuevo
modules/features2d/src/kaze/fed.cpp: * Please look at the following papers for more information about FED:
modules/features2d/src/kaze/fed.cpp: * @param tau_max Stability limit for the explicit scheme
modules/features2d/src/kaze/fed.cpp: * @param tau_max Stability limit for the explicit scheme
modules/features2d/src/kaze/fed.cpp: * @param tau_max Stability limit for the explicit scheme
modules/features2d/src/kaze/KAZEFeatures.h: * @author Pablo F. Alcantarilla
modules/features2d/src/kaze/KAZEFeatures.cpp:// Author: Pablo F. Alcantarilla
modules/features2d/src/kaze/KAZEFeatures.cpp:// Email: pablofdezalc@gmail.com
modules/features2d/src/kaze/KAZEFeatures.cpp:// KAZE Features Copyright 2012, Pablo F. Alcantarilla
modules/features2d/src/kaze/KAZEFeatures.cpp: * @author Pablo F. Alcantarilla
modules/features2d/src/kaze/KAZEFeatures.cpp:                        point.response = fabs(value);
modules/features2d/src/kaze/KAZEFeatures.cpp:        if (fabs(*(dst.ptr<float>(0))) <= 1.0f && fabs(*(dst.ptr<float>(1))) <= 1.0f && fabs(*(dst.ptr<float>(2))) <= 1.0f) {
modules/features2d/src/kaze/KAZEFeatures.cpp:    // Variables for computing the dominant direction
modules/features2d/src/kaze/KAZEFeatures.cpp:                    mdx += fabs(rx);
modules/features2d/src/kaze/KAZEFeatures.cpp:                    mdy += fabs(ry);
modules/features2d/src/kaze/KAZEFeatures.cpp:                    mdx += fabs(rrx);
modules/features2d/src/kaze/KAZEFeatures.cpp:                    mdy += fabs(rry);
modules/features2d/src/kaze/KAZEFeatures.cpp:                        mdxp += fabs(rx);
modules/features2d/src/kaze/KAZEFeatures.cpp:                        mdxn += fabs(rx);
modules/features2d/src/kaze/KAZEFeatures.cpp:                        mdyp += fabs(ry);
modules/features2d/src/kaze/KAZEFeatures.cpp:                        mdyn += fabs(ry);
modules/features2d/src/kaze/KAZEFeatures.cpp:                        mdxp += fabs(rrx);
modules/features2d/src/kaze/KAZEFeatures.cpp:                        mdxn += fabs(rrx);
modules/features2d/src/kaze/KAZEFeatures.cpp:                        mdyp += fabs(rry);
modules/features2d/src/kaze/KAZEFeatures.cpp:                        mdyn += fabs(rry);
modules/features2d/src/fast.cpp:    *Redistributions of source code must retain the above copyright
modules/features2d/src/fast.cpp:    *Redistributions in binary form must reproduce the above copyright
modules/features2d/src/fast.cpp:# pragma warning( disable : 4127)
modules/features2d/src/fast.cpp:    uchar threshold_tab[512];
modules/features2d/src/fast.cpp:        threshold_tab[i+255] = (uchar)(i < -threshold ? 1 : i > threshold ? 2 : 0);
modules/features2d/src/fast.cpp:                const uchar* tab = &threshold_tab[0] - v + 255;
modules/features2d/src/fast.cpp:                int d = tab[ptr[pixel[0]]] | tab[ptr[pixel[8]]];
modules/features2d/src/fast.cpp:                d &= tab[ptr[pixel[2]]] | tab[ptr[pixel[10]]];
modules/features2d/src/fast.cpp:                d &= tab[ptr[pixel[4]]] | tab[ptr[pixel[12]]];
modules/features2d/src/fast.cpp:                d &= tab[ptr[pixel[6]]] | tab[ptr[pixel[14]]];
modules/features2d/src/fast.cpp:                d &= tab[ptr[pixel[1]]] | tab[ptr[pixel[9]]];
modules/features2d/src/fast.cpp:                d &= tab[ptr[pixel[3]]] | tab[ptr[pixel[11]]];
modules/features2d/src/fast.cpp:                d &= tab[ptr[pixel[5]]] | tab[ptr[pixel[13]]];
modules/features2d/src/fast.cpp:                d &= tab[ptr[pixel[7]]] | tab[ptr[pixel[15]]];
modules/features2d/src/feature2d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/feature2d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/feature2d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/feature2d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/feature2d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/keypoint.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/keypoint.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/keypoint.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/keypoint.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/keypoint.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/keypoint.cpp:        //use std::partition to grab all of the keypoints with the boundary response.
modules/features2d/src/fast_score.cpp:    *Redistributions of source code must retain the above copyright
modules/features2d/src/fast_score.cpp:    *Redistributions in binary form must reproduce the above copyright
modules/features2d/src/agast_score.hpp:    *Redistributions of source code must retain the above copyright
modules/features2d/src/agast_score.hpp:    *Redistributions in binary form must reproduce the above copyright
modules/features2d/src/agast_score.hpp:int agast_tree_search(const uint32_t table_struct32[], int pixel_[], const unsigned char* const ptr, int threshold);
modules/features2d/src/agast_score.cpp:    *Redistributions of source code must retain the above copyright
modules/features2d/src/agast_score.cpp:    *Redistributions in binary form must reproduce the above copyright
modules/features2d/src/agast_score.cpp:#pragma warning( disable : 4127 )
modules/features2d/src/agast_score.cpp:int agast_tree_search(const uint32_t table_struct32[], int pixel_[], const unsigned char* const ptr, int threshold)
modules/features2d/src/agast_score.cpp:    while ((table_struct32[index]>>16)!=0)
modules/features2d/src/agast_score.cpp:        offset=(int) pixel_[table_struct32[index]>>28];
modules/features2d/src/agast_score.cpp:        if ((table_struct32[index]&(1<<12))!=0)
modules/features2d/src/agast_score.cpp:            index =(table_struct32[index]>>16)&0xfff;
modules/features2d/src/agast_score.cpp:            index =table_struct32[index]&0xfff;
modules/features2d/src/agast_score.cpp:    return (int)(table_struct32[index]&0xff);
modules/features2d/src/agast_score.cpp:    uint32_t *table_struct;
modules/features2d/src/agast_score.cpp:    static const uint32_t table_5_8_corner_struct[] =
modules/features2d/src/agast_score.cpp:    static const uint32_t table_7_12d_corner_struct[] =
modules/features2d/src/agast_score.cpp:        0x81871186,0x20a200ae,0xa0a30186,0xb0a40186,0x90a500ab,0x10a600a8,0x318700a7,0x81870186,
modules/features2d/src/agast_score.cpp:    static const uint32_t table_7_12s_corner_struct[] =
modules/features2d/src/agast_score.cpp:        0x674810a9,0x60aa0748,0x30ab0748,0x40ac0748,0x87490748,0x10ae00b8,0x60af00b1,0x30b00748,
modules/features2d/src/agast_score.cpp:        0x11a111a5,0x674801a2,0x61a31748,0x31a41748,0x47491748,0x11a601ab,0x674801a7,0x61a81748,
modules/features2d/src/agast_score.cpp:        0xa2a10748,0xb7490748,0x92a312c4,0x72a402b4,0x174812a5,0x12a60748,0x62a702ab,0x32a80748,
modules/features2d/src/agast_score.cpp:        0x63a903af,0xb3aa1748,0x33ab13ad,0x474913ac,0xa7491748,0x83ae1748,0xa7491748,0x63b013b8,
modules/features2d/src/agast_score.cpp:        0x674804a1,0x64a21748,0x84a31748,0xa4a41748,0xb7491748,0x14a614b4,0x64a704ab,0xa4a81748,
modules/features2d/src/agast_score.cpp:        0x2599163b,0x759a05cc,0x959b05ab,0x1748059c,0x159d1748,0x659e05a2,0x359f1748,0x45a01748,
modules/features2d/src/agast_score.cpp:        0x16a906ae,0x674806aa,0x66ab1748,0x36ac1748,0x46ad1748,0x87491748,0x674806af,0x66b01748,
modules/features2d/src/agast_score.cpp:    static const uint32_t table_9_16_corner_struct[] =
modules/features2d/src/agast_score.cpp:        0x32ad10a9,0xc2ad12ac,0xc0ab12ac,0xd0ac12ac,0xe2ad12ac,0xc0ae12ac,0xd0af12ac,0xe0b012ac,
modules/features2d/src/agast_score.cpp:        0x11a911ac,0x32ad11aa,0xa1ab12ac,0xb2ad12ac,0x81ad12ac,0x91ae12ac,0xa1af12ac,0xb2ad12ac,
modules/features2d/src/agast_score.cpp:        0xc2a912ac,0xd2aa12ac,0xe2ab12ac,0xf2ad12ac,0x000000fe,0x000000ff};
modules/features2d/src/agast_score.cpp:        table_struct=(uint32_t *)(table_5_8_corner_struct);
modules/features2d/src/agast_score.cpp:        table_struct=(uint32_t *)(table_7_12d_corner_struct);
modules/features2d/src/agast_score.cpp:        table_struct=(uint32_t *)(table_7_12s_corner_struct);
modules/features2d/src/agast_score.cpp:        table_struct=(uint32_t *)(table_9_16_corner_struct);
modules/features2d/src/agast_score.cpp:        result = agast_tree_search(table_struct, (int *)pixel, ptr, b_test);
modules/features2d/src/blobdetector.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/blobdetector.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/blobdetector.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/blobdetector.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/blobdetector.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/blobdetector.cpp:    minRepeatability = 2;
modules/features2d/src/blobdetector.cpp:    minRepeatability = (size_t)(int)fn["minRepeatability"];
modules/features2d/src/blobdetector.cpp:    fs << "minRepeatability" << (int)minRepeatability;
modules/features2d/src/blobdetector.cpp:        if (centers[i].size() < params.minRepeatability)
modules/features2d/src/gftt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/gftt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/gftt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/gftt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/gftt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/bagofwords.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/bagofwords.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/bagofwords.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/bagofwords.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/bagofwords.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/bagofwords.cpp:    Mat labels, vocabulary;
modules/features2d/src/bagofwords.cpp:    kmeans( _descriptors, clusterCount, labels, termcrit, attempts, flags, vocabulary );
modules/features2d/src/bagofwords.cpp:    return vocabulary;
modules/features2d/src/bagofwords.cpp:void BOWImgDescriptorExtractor::setVocabulary( const Mat& _vocabulary )
modules/features2d/src/bagofwords.cpp:    vocabulary = _vocabulary;
modules/features2d/src/bagofwords.cpp:    dmatcher->add( std::vector<Mat>(1, vocabulary) );
modules/features2d/src/bagofwords.cpp:const Mat& BOWImgDescriptorExtractor::getVocabulary() const
modules/features2d/src/bagofwords.cpp:    return vocabulary;
modules/features2d/src/bagofwords.cpp:    return vocabulary.empty() ? 0 : vocabulary.rows;
modules/features2d/src/bagofwords.cpp:    CV_Assert( !vocabulary.empty() );
modules/features2d/src/bagofwords.cpp:    int clusterCount = descriptorSize(); // = vocabulary.rows
modules/features2d/src/bagofwords.cpp:    // Match keypoint descriptors to cluster center (to vocabulary)
modules/features2d/src/opencl/brute_force_match.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/opencl/brute_force_match.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/opencl/brute_force_match.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/opencl/brute_force_match.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/opencl/brute_force_match.cl:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/opencl/brute_force_match.cl:#pragma OPENCL EXTENSION cl_khr_global_int32_base_atomics:enable
modules/features2d/src/opencl/brute_force_match.cl:#           define DIST(x, y) {value_type d = fabs((x) - (y)); result += d.s0 + d.s1 + d.s2 + d.s3 + d.s4 + d.s5 + d.s6 + d.s7;}
modules/features2d/src/opencl/brute_force_match.cl:#           define DIST(x, y) {value_type d = fabs((x) - (y)); result += d.s0 + d.s1 + d.s2 + d.s3;}
modules/features2d/src/opencl/brute_force_match.cl:#           define DIST(x, y) result += fabs((x) - (y))
modules/features2d/src/opencl/brute_force_match.cl:#           define DIST(x, y) {value_type d = abs((x) - (y)); result += d.s0 + d.s1 + d.s2 + d.s3 + d.s4 + d.s5 + d.s6 + d.s7;}
modules/features2d/src/opencl/brute_force_match.cl:#           define DIST(x, y) {value_type d = abs((x) - (y)); result += d.s0 + d.s1 + d.s2 + d.s3;}
modules/features2d/src/opencl/brute_force_match.cl:#           define DIST(x, y) result += abs((x) - (y))
modules/features2d/src/opencl/orb.cl:    float ax = fabs(x), ay = fabs(y);
modules/features2d/src/mser.cpp: *     Redistributions of source code must retain the above
modules/features2d/src/mser.cpp: *     Redistributions in binary form must reproduce the above
modules/features2d/src/mser.cpp: * 2. the gray image algorithm is taken from: Linear Time Maximally Stable Extremal Regions;
modules/features2d/src/mser.cpp: * 3. the color image algorithm is taken from: Maximally Stable Colour Regions for Recognition and Match;
modules/features2d/src/mser.cpp: *    the chi_table.h file is taken directly from paper's source code which is distributed under GPL.
modules/features2d/src/mser.cpp:add support for color images into MSER_Impl::detectAndLabel.
modules/features2d/src/mser.cpp:static const float chitab3[]=
modules/features2d/src/mser.cpp:// the stable mscr should be:
modules/features2d/src/mser.cpp:static bool MSCRStableCheck( MSCRNode* x, const MSER_Impl::Params& params )
modules/features2d/src/mser.cpp:        double thres = emean*(chitab3[ti]*(1-reminder)+chitab3[ti+1]*reminder);
modules/features2d/src/mser.cpp:                // rank idea take from: N-tree Disjoint-Set Forests for Maximally Stable Extremal Regions
modules/features2d/src/mser.cpp:                        // skip the first one and check stablity
modules/features2d/src/mser.cpp:                        if ( i > lr->reinit+1 && MSCRStableCheck( lr, params ) )
modules/features2d/src/draw.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/draw.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/draw.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/draw.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/draw.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/draw.cpp:        // draw orientation of the keypoint, if it is applicable
modules/features2d/src/evaluation.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/evaluation.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/evaluation.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/evaluation.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/evaluation.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/evaluation.cpp:static void calculateRepeatability( const Mat& img1, const Mat& img2, const Mat& H1to2,
modules/features2d/src/evaluation.cpp:                                    float& repeatability, int& correspondencesCount,
modules/features2d/src/evaluation.cpp:    repeatability = -1.f;
modules/features2d/src/evaluation.cpp:        repeatability = minCount ? (float)correspondencesCount / minCount : -1;
modules/features2d/src/evaluation.cpp:                              float& repeatability, int& correspCount,
modules/features2d/src/evaluation.cpp:    calculateRepeatability( img1, img2, H1to2, *keypoints1, *keypoints2, repeatability, correspCount );
modules/features2d/src/evaluation.cpp:            float curDiff = std::fabs(l_precision - recallPrecisionCurve[i].x);
modules/features2d/src/fast_score.hpp:    *Redistributions of source code must retain the above copyright
modules/features2d/src/fast_score.hpp:    *Redistributions in binary form must reproduce the above copyright
modules/features2d/src/agast.cpp:    *Redistributions of source code must retain the above copyright
modules/features2d/src/agast.cpp:    *Redistributions in binary form must reproduce the above copyright
modules/features2d/src/agast.cpp:#pragma warning( disable : 4127 )
modules/features2d/src/agast.cpp:    uint32_t *table_struct1;
modules/features2d/src/agast.cpp:    uint32_t *table_struct2;
modules/features2d/src/agast.cpp:    static const uint32_t table_5_8_struct1[] =
modules/features2d/src/agast.cpp:    static const uint32_t table_5_8_struct2[] =
modules/features2d/src/agast.cpp:    static const uint32_t table_7_12d_struct1[] =
modules/features2d/src/agast.cpp:        0x81871186,0x20a200ae,0xa0a30186,0xb0a40186,0x90a500ab,0x10a600a8,0x318700a7,0x81870186,
modules/features2d/src/agast.cpp:    static const uint32_t table_7_12d_struct2[] =
modules/features2d/src/agast.cpp:        0x81891188,0x20a200ae,0xa0a30188,0xb0a40188,0x90a500ab,0x10a600a8,0x318900a7,0x81890188,
modules/features2d/src/agast.cpp:    static const uint32_t table_7_12s_struct1[] =
modules/features2d/src/agast.cpp:        0x40a910ab,0x315910aa,0xa1591156,0xa0ac1156,0xb1591156,0x10ae1156,0xb0af10b4,0x30b010b2,
modules/features2d/src/agast.cpp:    static const uint32_t table_7_12s_struct2[] =
modules/features2d/src/agast.cpp:        0x1140113f,0xa0aa10b2,0x90ab10b0,0x70ac10af,0x114010ad,0x60ae113f,0x8140113f,0x1140113f,
modules/features2d/src/agast.cpp:    static const uint32_t table_9_16_struct[] =
modules/features2d/src/agast.cpp:        0x32ad10a9,0xc2ad12ac,0xc0ab12ac,0xd0ac12ac,0xe2ad12ac,0xc0ae12ac,0xd0af12ac,0xe0b012ac,
modules/features2d/src/agast.cpp:        0x11a911ac,0x32ad11aa,0xa1ab12ac,0xb2ad12ac,0x81ad12ac,0x91ae12ac,0xa1af12ac,0xb2ad12ac,
modules/features2d/src/agast.cpp:        0xc2a912ac,0xd2aa12ac,0xe2ab12ac,0xf2ad12ac,0x000000fc,0x000000fd,0x000000fe,0x000000ff
modules/features2d/src/agast.cpp:        table_struct1=(uint32_t *)(table_5_8_struct1);
modules/features2d/src/agast.cpp:        table_struct2=(uint32_t *)(table_5_8_struct2);
modules/features2d/src/agast.cpp:        table_struct1=(uint32_t *)(table_7_12d_struct1);
modules/features2d/src/agast.cpp:        table_struct2=(uint32_t *)(table_7_12d_struct2);
modules/features2d/src/agast.cpp:        table_struct1=(uint32_t *)(table_7_12s_struct1);
modules/features2d/src/agast.cpp:        table_struct2=(uint32_t *)(table_7_12s_struct2);
modules/features2d/src/agast.cpp:        table_struct1=(uint32_t *)(table_9_16_struct);
modules/features2d/src/agast.cpp:        table_struct2=(uint32_t *)(table_9_16_struct);
modules/features2d/src/agast.cpp:                result = agast_tree_search(table_struct1, pixel, ptr, threshold);
modules/features2d/src/agast.cpp:                result = agast_tree_search(table_struct2, pixel, ptr, threshold);
modules/features2d/src/agast.cpp:            // check above
modules/features2d/src/agast.cpp:                // find the corner above the current one
modules/features2d/src/agast.cpp:                // no maximum above
modules/features2d/src/agast.cpp:                else // maximum above
modules/features2d/src/matchers.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/matchers.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/matchers.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/matchers.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/matchers.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/kaze.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/features2d/src/kaze.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/features2d/src/kaze.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/features2d/src/kaze.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/features2d/src/kaze.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/features2d/src/kaze.cpp:[1] KAZE Features. Pablo F. Alcantarilla, Adrien Bartoli and Andrew J. Davison.
modules/features2d/src/kaze.cpp:http://www.robesafe.com/personal/pablo.alcantarilla/papers/Alcantarilla12eccv.pdf
modules/features2d/src/brisk.cpp: *  Copyright (C) 2011  The Autonomous Systems Lab (ASL), ETH Zurich,
modules/features2d/src/brisk.cpp: *   * Redistributions of source code must retain the above copyright
modules/features2d/src/brisk.cpp: *   * Redistributions in binary form must reproduce the above
modules/features2d/src/brisk.cpp: BRISK - Binary Robust Invariant Scalable Keypoints
modules/features2d/src/brisk.cpp: Binary Robust Invariant Scalable Keypoints, in Proceedings of
modules/features2d/src/brisk.cpp:  // return the maximum of score patches above or below
modules/features2d/src/brisk.cpp:  // this is the standard pattern found to be suitable also
modules/features2d/src/brisk.cpp:  // temporary variables containing gray values at sample points:
modules/features2d/src/brisk.cpp:    const int x_above = sixths_x / 6;
modules/features2d/src/brisk.cpp:    const int y_above = sixths_y / 6;
modules/features2d/src/brisk.cpp:        & ((r_x_1 * r_y_1 * l.getAgastScore(x_above, y_above, 1) + r_x * r_y_1
modules/features2d/src/brisk.cpp:                                                                   * l.getAgastScore(x_above + 1, y_above, 1)
modules/features2d/src/brisk.cpp:            + r_x_1 * r_y * l.getAgastScore(x_above, y_above + 1, 1)
modules/features2d/src/brisk.cpp:            + r_x * r_y * l.getAgastScore(x_above + 1, y_above + 1, 1) + 18)
modules/features2d/src/brisk.cpp:    const int x_above = eighths_x / 8;
modules/features2d/src/brisk.cpp:    const int y_above = eighths_y / 8;
modules/features2d/src/brisk.cpp:        & ((r_x_1 * r_y_1 * l.getAgastScore(x_above, y_above, 1) + r_x * r_y_1
modules/features2d/src/brisk.cpp:                                                                   * l.getAgastScore(x_above + 1, y_above, 1)
modules/features2d/src/brisk.cpp:            + r_x_1 * r_y * l.getAgastScore(x_above, y_above + 1, 1)
modules/features2d/src/brisk.cpp:            + r_x * r_y * l.getAgastScore(x_above + 1, y_above + 1, 1) + 32)
modules/features2d/src/brisk.cpp:  // check and get above maximum:
modules/features2d/src/brisk.cpp:  float delta_x_above = 0, delta_y_above = 0;
modules/features2d/src/brisk.cpp:  float max_above = getScoreMaxAbove(layer, x_layer, y_layer, center, ismax, delta_x_above, delta_y_above);
modules/features2d/src/brisk.cpp:      scale = refine1D_2(max_below_float, std::max(float(center), max_layer), max_above, max);
modules/features2d/src/brisk.cpp:      scale = refine1D(max_below_float, std::max(float(center), max_layer), max_above, max);
modules/features2d/src/brisk.cpp:      x = (r0 * delta_x_layer + r1 * delta_x_above + float(x_layer)) * thisLayer.scale() + thisLayer.offset();
modules/features2d/src/brisk.cpp:      y = (r0 * delta_y_layer + r1 * delta_y_above + float(y_layer)) * thisLayer.scale() + thisLayer.offset();
modules/features2d/src/brisk.cpp:    scale = refine1D_1(max_below, std::max(float(center), max_layer), max_above, max);
modules/features2d/src/brisk.cpp:      x = (r0 * delta_x_layer + r1 * delta_x_above + float(x_layer)) * thisLayer.scale() + thisLayer.offset();
modules/features2d/src/brisk.cpp:      y = (r0 * delta_y_layer + r1 * delta_y_above + float(y_layer)) * thisLayer.scale() + thisLayer.offset();
modules/features2d/src/brisk.cpp:  // calculate the absolute scale:
modules/features2d/src/brisk.cpp:// return the maximum of score patches above or below
modules/features2d/src/brisk.cpp:  // the layer above
modules/features2d/src/brisk.cpp:  // calculate dx/dy in above coordinates
modules/features2d/src/brisk.cpp:  // calculate dx/dy in above coordinates
modules/stitching/CMakeLists.txt:  ocv_warnings_disable(CMAKE_CXX_FLAGS -Wundef -Wmissing-declarations -Wshadow)
modules/stitching/test/ocl/test_warpers.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/test/ocl/test_warpers.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/test/ocl/test_warpers.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/test/ocl/test_warpers.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/stitching/test/ocl/test_warpers.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/test/test_blenders.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/test/test_blenders.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/test/test_blenders.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/test/test_blenders.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/test/test_blenders.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/test/test_blenders.cpp:    Mat image1 = imread(string(cvtest::TS::ptr()->get_data_path()) + "cv/shared/baboon.png");
modules/stitching/test/test_blenders.cpp:    Mat expected = imread(string(cvtest::TS::ptr()->get_data_path()) + "stitching/baboon_lena.png");
modules/stitching/test/test_matchers.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/test/test_matchers.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/test/test_matchers.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/test/test_matchers.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/test/test_matchers.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching.hpp:the particular needs. All building blocks from the pipeline are available in the detail namespace,
modules/stitching/include/opencv2/stitching.hpp:be able to achieve higher stitching stability and quality of the final images at least being
modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp:    if ( fabs(sinu) < 1E-7 )
modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp:    if ( fabs(lamda) > 1E-7)
modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp:    if ( fabs(sinu) < 1E-7 )
modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp:    if ( fabs(lamda) > 1E-7)
modules/stitching/include/opencv2/stitching/detail/blenders.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/blenders.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/blenders.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/blenders.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/blenders.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/camera.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/camera.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/camera.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/camera.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/camera.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/motion_estimators.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/motion_estimators.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/motion_estimators.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/motion_estimators.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/motion_estimators.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/timelapsers.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/timelapsers.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/timelapsers.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/timelapsers.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/timelapsers.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/util.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/util.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/util.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/util.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/util.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/seam_finders.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/seam_finders.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/seam_finders.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/seam_finders.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/seam_finders.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/seam_finders.hpp:    void updateLabelsUsingSeam(
modules/stitching/include/opencv2/stitching/detail/seam_finders.hpp:    Mat_<int> labels_;
modules/stitching/include/opencv2/stitching/detail/matchers.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/matchers.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/matchers.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/matchers.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/matchers.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/matchers.hpp:/** @brief Structure containing information about matches between two images.
modules/stitching/include/opencv2/stitching/detail/exposure_compensate.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/exposure_compensate.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/exposure_compensate.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/exposure_compensate.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/exposure_compensate.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/util_inl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/util_inl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/util_inl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/util_inl.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/util_inl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/autocalib.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/autocalib.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/autocalib.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/autocalib.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/autocalib.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/detail/warpers.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/warpers.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/detail/warpers.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/detail/warpers.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/detail/warpers.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/include/opencv2/stitching/warpers.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/include/opencv2/stitching/warpers.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/include/opencv2/stitching/warpers.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/include/opencv2/stitching/warpers.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/include/opencv2/stitching/warpers.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/perf/opencl/perf_warpers.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/perf/opencl/perf_warpers.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/perf/opencl/perf_warpers.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/perf/opencl/perf_warpers.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/stitching/perf/opencl/perf_warpers.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/warpers.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/warpers.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/warpers.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/warpers.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/warpers.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/timelapsers.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/timelapsers.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/timelapsers.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/timelapsers.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/timelapsers.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/autocalib.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/autocalib.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/autocalib.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/autocalib.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/autocalib.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/autocalib.cpp:    if (v1 > 0 && v2 > 0) f1 = std::sqrt(std::abs(d1) > std::abs(d2) ? v1 : v2);
modules/stitching/src/autocalib.cpp:    if (v1 > 0 && v2 > 0) f0 = std::sqrt(std::abs(d1) > std::abs(d2) ? v1 : v2);
modules/stitching/src/camera.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/camera.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/camera.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/camera.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/camera.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/motion_estimators.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/motion_estimators.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/motion_estimators.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/motion_estimators.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/motion_estimators.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/motion_estimators.cpp:                << "[label=\"Nm=" << pairwise_matches[pos].matches.size()
modules/stitching/src/exposure_compensate.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/exposure_compensate.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/exposure_compensate.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/exposure_compensate.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/exposure_compensate.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/opencl/warpers.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/opencl/warpers.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/opencl/warpers.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/opencl/warpers.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/opencl/warpers.cl:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/util.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/util.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/util.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/util.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/util.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/blenders.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/blenders.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/blenders.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/blenders.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/blenders.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/blenders.cpp:    can_use_gpu_ = try_gpu && cuda::getCudaEnabledDeviceCount();
modules/stitching/src/blenders.cpp:    CV_Error(Error::StsNotImplemented, "CUDA optimization is unavailable");
modules/stitching/src/blenders.cpp:    CV_Error(Error::StsNotImplemented, "CUDA optimization is unavailable");
modules/stitching/src/warpers_cuda.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/warpers_cuda.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/warpers_cuda.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/warpers_cuda.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/warpers_cuda.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/seam_finders.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/seam_finders.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/seam_finders.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/seam_finders.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/seam_finders.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/seam_finders.cpp:    // label all connected components and get information about them
modules/stitching/src/seam_finders.cpp:    labels_.create(unionSize_);
modules/stitching/src/seam_finders.cpp:                labels_(y, x) = std::numeric_limits<int>::max();
modules/stitching/src/seam_finders.cpp:                labels_(y, x) = std::numeric_limits<int>::max()-1;
modules/stitching/src/seam_finders.cpp:                labels_(y, x) = std::numeric_limits<int>::max()-2;
modules/stitching/src/seam_finders.cpp:                labels_(y, x) = 0;
modules/stitching/src/seam_finders.cpp:            if (labels_(y, x) >= std::numeric_limits<int>::max()-2)
modules/stitching/src/seam_finders.cpp:                if (labels_(y, x) == std::numeric_limits<int>::max())
modules/stitching/src/seam_finders.cpp:                else if (labels_(y, x) == std::numeric_limits<int>::max()-1)
modules/stitching/src/seam_finders.cpp:                else if (labels_(y, x) == std::numeric_limits<int>::max()-2)
modules/stitching/src/seam_finders.cpp:                floodFill(labels_, Point(x, y), ++ncomps_);
modules/stitching/src/seam_finders.cpp:            if (labels_(y, x))
modules/stitching/src/seam_finders.cpp:                int l = labels_(y, x);
modules/stitching/src/seam_finders.cpp:                if ((x == 0 || labels_(y, x-1) != l) || (x == unionSize_.width-1 || labels_(y, x+1) != l) ||
modules/stitching/src/seam_finders.cpp:                    (y == 0 || labels_(y-1, x) != l) || (y == unionSize_.height-1 || labels_(y+1, x) != l))
modules/stitching/src/seam_finders.cpp:            if (x > 0 && labels_(y, x-1) && labels_(y, x-1) != l)
modules/stitching/src/seam_finders.cpp:                wedges[std::make_pair(ci, labels_(y, x-1)-1)]++;
modules/stitching/src/seam_finders.cpp:                wedges[std::make_pair(labels_(y, x-1)-1, ci)]++;
modules/stitching/src/seam_finders.cpp:            if (y > 0 && labels_(y-1, x) && labels_(y-1, x) != l)
modules/stitching/src/seam_finders.cpp:                wedges[std::make_pair(ci, labels_(y-1, x)-1)]++;
modules/stitching/src/seam_finders.cpp:                wedges[std::make_pair(labels_(y-1, x)-1, ci)]++;
modules/stitching/src/seam_finders.cpp:            if (x < unionSize_.width-1 && labels_(y, x+1) && labels_(y, x+1) != l)
modules/stitching/src/seam_finders.cpp:                wedges[std::make_pair(ci, labels_(y, x+1)-1)]++;
modules/stitching/src/seam_finders.cpp:                wedges[std::make_pair(labels_(y, x+1)-1, ci)]++;
modules/stitching/src/seam_finders.cpp:            if (y < unionSize_.height-1 && labels_(y+1, x) && labels_(y+1, x) != l)
modules/stitching/src/seam_finders.cpp:                wedges[std::make_pair(ci, labels_(y+1, x)-1)]++;
modules/stitching/src/seam_finders.cpp:                wedges[std::make_pair(labels_(y+1, x)-1, ci)]++;
modules/stitching/src/seam_finders.cpp:                        if (labels_(y, x) == l1)
modules/stitching/src/seam_finders.cpp:                            labels_(y, x) = l2;
modules/stitching/src/seam_finders.cpp:                        updateLabelsUsingSeam(c1, c2, seam, isHorizontalSeam);
modules/stitching/src/seam_finders.cpp:                // update information about the (i+1)-th component
modules/stitching/src/seam_finders.cpp:                        if (labels_(y, x) == l[i])
modules/stitching/src/seam_finders.cpp:                            if ((x == 0 || labels_(y, x-1) != l[i]) || (x == unionSize_.width-1 || labels_(y, x+1) != l[i]) ||
modules/stitching/src/seam_finders.cpp:                                (y == 0 || labels_(y-1, x) != l[i]) || (y == unionSize_.height-1 || labels_(y+1, x) != l[i]))
modules/stitching/src/seam_finders.cpp:             int l = labels_(y - dy2, x - dx2);
modules/stitching/src/seam_finders.cpp:             int l = labels_(y - dy1, x - dx1);
modules/stitching/src/seam_finders.cpp:            ((x > 0 && labels_(y, x-1) == l2) ||
modules/stitching/src/seam_finders.cpp:             (y > 0 && labels_(y-1, x) == l2) ||
modules/stitching/src/seam_finders.cpp:             (x < unionSize_.width-1 && labels_(y, x+1) == l2) ||
modules/stitching/src/seam_finders.cpp:             (y < unionSize_.height-1 && labels_(y+1, x) == l2)))
modules/stitching/src/seam_finders.cpp:    std::vector<int> labels;
modules/stitching/src/seam_finders.cpp:    cv::partition(specialPoints, labels, ClosePoints(10));
modules/stitching/src/seam_finders.cpp:    int nlabels = *std::max_element(labels.begin(), labels.end()) + 1;
modules/stitching/src/seam_finders.cpp:    if (nlabels < 2)
modules/stitching/src/seam_finders.cpp:    std::vector<Point> sum(nlabels);
modules/stitching/src/seam_finders.cpp:    std::vector<std::vector<Point> > points(nlabels);
modules/stitching/src/seam_finders.cpp:        sum[labels[i]] += specialPoints[i];
modules/stitching/src/seam_finders.cpp:        points[labels[i]].push_back(specialPoints[i]);
modules/stitching/src/seam_finders.cpp:    for (int i = 0; i < nlabels-1; ++i)
modules/stitching/src/seam_finders.cpp:        for (int j = i+1; j < nlabels; ++j)
modules/stitching/src/seam_finders.cpp:            if (labels_(y, x) == l && x > 0 && labels_(y, x-1) == l)
modules/stitching/src/seam_finders.cpp:                    float costGrad = std::abs(gradx1_(y + dy1, x + dx1)) + std::abs(gradx1_(y + dy1, x + dx1 - 1)) +
modules/stitching/src/seam_finders.cpp:                                     std::abs(gradx2_(y + dy2, x + dx2)) + std::abs(gradx2_(y + dy2, x + dx2 - 1)) + 1.f;
modules/stitching/src/seam_finders.cpp:            if (labels_(y, x) == l && y > 0 && labels_(y-1, x) == l)
modules/stitching/src/seam_finders.cpp:                    float costGrad = std::abs(grady1_(y + dy1, x + dx1)) + std::abs(grady1_(y + dy1 - 1, x + dx1)) +
modules/stitching/src/seam_finders.cpp:                                     std::abs(grady2_(y + dy2, x + dx2)) + std::abs(grady2_(y + dy2 - 1, x + dx2)) + 1.f;
modules/stitching/src/seam_finders.cpp:    isHorizontal = std::abs(dst.x - src.x) > std::abs(dst.y - src.y);
modules/stitching/src/seam_finders.cpp:    Mat_<uchar> reachable = Mat::zeros(roi.size(), CV_8U);
modules/stitching/src/seam_finders.cpp:    reachable(src) = 1;
modules/stitching/src/seam_finders.cpp:                if (labels_(y + roi.y, x + roi.x) == l)
modules/stitching/src/seam_finders.cpp:                    if (reachable(y, x-1))
modules/stitching/src/seam_finders.cpp:                    if (y > 0 && reachable(y-1, x-1))
modules/stitching/src/seam_finders.cpp:                    if (y < roi.height-1 && reachable(y+1, x-1))
modules/stitching/src/seam_finders.cpp:                    reachable(y, x) = 255;
modules/stitching/src/seam_finders.cpp:                if (labels_(y + roi.y, x + roi.x) == l)
modules/stitching/src/seam_finders.cpp:                    if (reachable(y-1, x))
modules/stitching/src/seam_finders.cpp:                    if (x > 0 && reachable(y-1, x-1))
modules/stitching/src/seam_finders.cpp:                    if (x < roi.width-1 && reachable(y-1, x+1))
modules/stitching/src/seam_finders.cpp:                    reachable(y, x) = 255;
modules/stitching/src/seam_finders.cpp:    if (!reachable(dst))
modules/stitching/src/seam_finders.cpp:void DpSeamFinder::updateLabelsUsingSeam(
modules/stitching/src/seam_finders.cpp:            if (!mask(y, x) && labels_(y + tls_[comp1].y, x + tls_[comp1].x) == l1)
modules/stitching/src/seam_finders.cpp:        if ((x > 0 && labels_(y, x-1) == l2) ||
modules/stitching/src/seam_finders.cpp:            (y > 0 && labels_(y-1, x) == l2) ||
modules/stitching/src/seam_finders.cpp:            (x < unionSize_.width-1 && labels_(y, x+1) == l2) ||
modules/stitching/src/seam_finders.cpp:            (y < unionSize_.height-1 && labels_(y+1, x) == l2))
modules/stitching/src/seam_finders.cpp:        if ((x > 0 && labels_(y, x-1) != l1 && labels_(y, x-1) != l2) ||
modules/stitching/src/seam_finders.cpp:            (y > 0 && labels_(y-1, x) != l1 && labels_(y-1, x) != l2) ||
modules/stitching/src/seam_finders.cpp:            (x < unionSize_.width-1 && labels_(y, x+1) != l1 && labels_(y, x+1) != l2) ||
modules/stitching/src/seam_finders.cpp:            (y < unionSize_.height-1 && labels_(y+1, x) != l1 && labels_(y+1, x) != l2))
modules/stitching/src/seam_finders.cpp:    // update labels
modules/stitching/src/seam_finders.cpp:                labels_(y + tls_[comp1].y, x + tls_[comp1].x) = l2;
modules/stitching/src/seam_finders.cpp:    cuda::GpuMat labels_d, buf_d;
modules/stitching/src/seam_finders.cpp:    cuda::graphcut(terminals_d, leftT_d, rightT_d, top_d, bottom_d, labels_d, buf_d);
modules/stitching/src/seam_finders.cpp:    Mat_<uchar> labels = (Mat)labels_d;
modules/stitching/src/seam_finders.cpp:            if (labels(y + gap, x + gap))
modules/stitching/src/cuda/build_warp_maps.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/cuda/build_warp_maps.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/cuda/build_warp_maps.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/cuda/build_warp_maps.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/cuda/build_warp_maps.cu:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/stitcher.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/stitcher.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/stitcher.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/stitcher.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/stitcher.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/stitcher.cpp:    if (try_use_gpu && cuda::getCudaEnabledDeviceCount() > 0)
modules/stitching/src/stitcher.cpp:                if (std::abs(compose_scale - 1) > 1e-1)
modules/stitching/src/stitcher.cpp:        if (std::abs(compose_scale - 1) > 1e-1)
modules/stitching/src/stitcher.cpp:    if (try_use_gpu && cuda::getCudaEnabledDeviceCount() > 0)
modules/stitching/src/matchers.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/matchers.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/matchers.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/matchers.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/matchers.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/stitching/src/matchers.cpp:    //TODO: NORM_L1 allows to avoid matcher crashes for ORB features, but is not absolutely correct for them.
modules/stitching/src/matchers.cpp:    if (try_use_gpu && getCudaEnabledDeviceCount() > 0)
modules/stitching/src/matchers.cpp:    if (matches_info.H.empty() || std::abs(determinant(matches_info.H)) < std::numeric_limits<double>::epsilon())
modules/stitching/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/stitching/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/stitching/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/stitching/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/stitching/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
Binary file modules/java/common_test/res/drawable/lena.png matches
Binary file modules/java/common_test/res/drawable/chessboard.jpg matches
modules/java/CMakeLists.txt:  ocv_module_disable(java)
modules/java/CMakeLists.txt:# copy_common_tests(<source-folder> <destination-folder> <variable-to-store-deps>)
modules/java/CMakeLists.txt:# copy_modules_tests(<modules-list> <destination-folder> <variable-to-store-deps>)
modules/java/CMakeLists.txt:    message(STATUS "[OpenCV for Android SDK]: A new OpenGL Camera Bridge (CameraGLSurfaceView, CameraGLRendererBase, CameraRenderer, Camera2Renderer) is disabled, because ANDROID_SDK_TARGET (${android_sdk_target_num}) < 21")
modules/java/generator/gen_java.py:    "CV_L?(BGRA?|RGBA?|GRAY|XYZ|YCrCb|Luv|Lab|HLS|YUV|HSV)\d*2L?(BGRA?|RGBA?|GRAY|XYZ|YCrCb|Luv|Lab|HLS|YUV|HSV).*",
modules/java/generator/gen_java.py:        input: full name and available namespaces
modules/java/generator/gen_java.py:            # public java wrapper method impl (calling native one above)
modules/java/generator/gen_java.py:    protected void finalize() throws Throwable {
modules/java/generator/gen_java.py:    hdr_parser_path = os.path.abspath(sys.argv[1])
modules/java/generator/src/cpp/common.h:#  pragma warning(disable:4800 4244)
modules/java/generator/src/java/android+Camera2Renderer.java:                     Math.abs(aspect - (float)w/h) < 0.2 ) {
modules/java/generator/src/java/android+JavaCameraView.java: * This class relays on the functionality available in base class and only implements
modules/java/generator/src/java/android+JavaCameraView.java:                    Log.e(TAG, "Camera is not available (in use or does not exist): " + e.getLocalizedMessage());
modules/java/generator/src/java/android+JavaCameraView.java:    private class CameraWorker implements Runnable {
modules/java/generator/src/java/android+Utils.java:        ByteArrayOutputStream os = new ByteArrayOutputStream(is.available());
modules/java/generator/src/java/android+BaseLoaderCallback.java:public abstract class BaseLoaderCallback implements LoaderCallbackInterface {
modules/java/generator/src/java/android+BaseLoaderCallback.java:                MarketErrorMessage.setCancelable(false); // This blocks the 'BACK' button
modules/java/generator/src/java/android+BaseLoaderCallback.java:                IncomatibilityMessage.setCancelable(false); // This blocks the 'BACK' button
modules/java/generator/src/java/android+BaseLoaderCallback.java:                InitFailedDialog.setCancelable(false); // This blocks the 'BACK' button
modules/java/generator/src/java/android+BaseLoaderCallback.java:                InstallMessage.setCancelable(false); // This blocks the 'BACK' button
modules/java/generator/src/java/android+BaseLoaderCallback.java:                WaitMessage.setCancelable(false); // This blocks the 'BACK' button
modules/java/generator/src/java/android+CameraRenderer.java:                Log.e(LOGTAG, "Camera is not available (in use or does not exist): " + e.getLocalizedMessage());
modules/java/generator/src/java/android+CameraRenderer.java:                     Math.abs(aspect - (float)w/h) < 0.2 ) {
modules/java/generator/src/java/android+CameraBridgeViewBase.java: * The main responsibility of it - is to control when camera can be enabled, process the frame,
modules/java/generator/src/java/android+CameraBridgeViewBase.java:public abstract class CameraBridgeViewBase extends SurfaceView implements SurfaceHolder.Callback {
modules/java/generator/src/java/android+CameraBridgeViewBase.java:    protected boolean mEnabled;
modules/java/generator/src/java/android+CameraBridgeViewBase.java:        TypedArray styledAttrs = getContext().obtainStyledAttributes(attrs, R.styleable.CameraBridgeViewBase);
modules/java/generator/src/java/android+CameraBridgeViewBase.java:        if (styledAttrs.getBoolean(R.styleable.CameraBridgeViewBase_show_fps, false))
modules/java/generator/src/java/android+CameraBridgeViewBase.java:            enableFpsMeter();
modules/java/generator/src/java/android+CameraBridgeViewBase.java:        mCameraIndex = styledAttrs.getInt(R.styleable.CameraBridgeViewBase_camera_id, -1);
modules/java/generator/src/java/android+CameraBridgeViewBase.java:     * This class interface is abstract representation of single frame from camera for onCameraFrame callback
modules/java/generator/src/java/android+CameraBridgeViewBase.java:     * This method is provided for clients, so they can enable the camera connection.
modules/java/generator/src/java/android+CameraBridgeViewBase.java:     * The actual onCameraViewStarted callback will be delivered only after both this method is called and surface is available
modules/java/generator/src/java/android+CameraBridgeViewBase.java:    public void enableView() {
modules/java/generator/src/java/android+CameraBridgeViewBase.java:            mEnabled = true;
modules/java/generator/src/java/android+CameraBridgeViewBase.java:     * This method is provided for clients, so they can disable camera connection and stop
modules/java/generator/src/java/android+CameraBridgeViewBase.java:    public void disableView() {
modules/java/generator/src/java/android+CameraBridgeViewBase.java:            mEnabled = false;
modules/java/generator/src/java/android+CameraBridgeViewBase.java:     * This method enables label with fps value on the screen
modules/java/generator/src/java/android+CameraBridgeViewBase.java:    public void enableFpsMeter() {
modules/java/generator/src/java/android+CameraBridgeViewBase.java:    public void disableFpsMeter() {
modules/java/generator/src/java/android+CameraBridgeViewBase.java:        if (mEnabled && mSurfaceExist && getVisibility() == VISIBLE) {
modules/java/generator/src/java/android+CameraBridgeViewBase.java:            ad.setCancelable(false); // This blocks the 'BACK' button
modules/java/generator/src/java/android+CameraBridgeViewBase.java:     * CONTRACT: as a result of this method variables mFrameWidth and mFrameHeight MUST be
modules/java/generator/src/java/android+CameraBridgeViewBase.java:    protected abstract boolean connectCamera(int width, int height);
modules/java/generator/src/java/android+CameraBridgeViewBase.java:    protected abstract void disconnectCamera();
modules/java/generator/src/java/android+CameraGLSurfaceView.java:        TypedArray styledAttrs = getContext().obtainStyledAttributes(attrs, R.styleable.CameraBridgeViewBase);
modules/java/generator/src/java/android+CameraGLSurfaceView.java:        int cameraIndex = styledAttrs.getInt(R.styleable.CameraBridgeViewBase_camera_id, -1);
modules/java/generator/src/java/android+CameraGLSurfaceView.java:    public void enableView() {
modules/java/generator/src/java/android+CameraGLSurfaceView.java:        mRenderer.enableView();
modules/java/generator/src/java/android+CameraGLSurfaceView.java:    public void disableView() {
modules/java/generator/src/java/android+CameraGLSurfaceView.java:        mRenderer.disableView();
modules/java/generator/src/java/android+CameraGLRendererBase.java:public abstract class CameraGLRendererBase implements GLSurfaceView.Renderer, SurfaceTexture.OnFrameAvailableListener {
modules/java/generator/src/java/android+CameraGLRendererBase.java:    protected boolean mEnabled = true;
modules/java/generator/src/java/android+CameraGLRendererBase.java:    protected abstract void openCamera(int id);
modules/java/generator/src/java/android+CameraGLRendererBase.java:    protected abstract void closeCamera();
modules/java/generator/src/java/android+CameraGLRendererBase.java:    protected abstract void setCameraPreviewSize(int width, int height); // updates mCameraWidth & mCameraHeight
modules/java/generator/src/java/android+CameraGLRendererBase.java:    public synchronized void onFrameAvailable(SurfaceTexture surfaceTexture) {
modules/java/generator/src/java/android+CameraGLRendererBase.java:        //Log.i(LOGTAG, "onFrameAvailable");
modules/java/generator/src/java/android+CameraGLRendererBase.java:        GLES20.glEnableVertexAttribArray(vPosOES);
modules/java/generator/src/java/android+CameraGLRendererBase.java:        GLES20.glEnableVertexAttribArray(vTCOES);
modules/java/generator/src/java/android+CameraGLRendererBase.java:        GLES20.glEnableVertexAttribArray(vPos2D);
modules/java/generator/src/java/android+CameraGLRendererBase.java:        GLES20.glEnableVertexAttribArray(vTC2D);
modules/java/generator/src/java/android+CameraGLRendererBase.java:        mSTexture.setOnFrameAvailableListener(this);
modules/java/generator/src/java/android+CameraGLRendererBase.java:    public synchronized void enableView() {
modules/java/generator/src/java/android+CameraGLRendererBase.java:        Log.d(LOGTAG, "enableView");
modules/java/generator/src/java/android+CameraGLRendererBase.java:        mEnabled = true;
modules/java/generator/src/java/android+CameraGLRendererBase.java:    public synchronized void disableView() {
modules/java/generator/src/java/android+CameraGLRendererBase.java:        Log.d(LOGTAG, "disableView");
modules/java/generator/src/java/android+CameraGLRendererBase.java:        mEnabled = false;
modules/java/generator/src/java/android+CameraGLRendererBase.java:        Log.d(LOGTAG, "mEnabled="+mEnabled+", mHaveSurface="+mHaveSurface);
modules/java/generator/src/java/android+CameraGLRendererBase.java:        boolean willStart = mEnabled && mHaveSurface && mView.getVisibility() == View.VISIBLE;
modules/java/generator/src/java/android+CameraGLRendererBase.java:        disableView();
modules/java/generator/src/java/android+CameraGLRendererBase.java:        enableView();
modules/java/generator/src/java/android+CameraGLRendererBase.java:        disableView();
modules/java/generator/src/java/android+CameraGLRendererBase.java:        enableView();
modules/java/android_lib/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
modules/java/android_lib/jni/Application.mk:APP_ABI := armeabi-v7a
modules/java/android_lib/res/values/attrs.xml:    <declare-styleable name = "CameraBridgeViewBase" >
modules/java/android_lib/res/values/attrs.xml:    </declare-styleable>
Binary file modules/java/pure_test/lib/junit-4.11.jar matches
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:    protected static boolean isTestCaseEnabled = true;
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        OpenCVTestRunner.LENA_PATH = pwd + "res/drawable/lena.png";
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        OpenCVTestRunner.CHESS_PATH = pwd + "res/drawable/chessboard.jpg";
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:    protected void runTest() throws Throwable {
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        if (isTestCaseEnabled) {
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:            OpenCVTestRunner.Log(TAG + " :: " + "Test case \"" + this.getClass().getName() + "\" disabled!");
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:            assertTrue(Math.abs(list1.get(i).doubleValue() - list2.get(i).doubleValue()) <= epsilon);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:            //assertTrue(Math.abs(ar1[i].doubleValue() - ar2[i].doubleValue()) <= epsilon);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:            //assertTrue(Math.abs(ar1[i].doubleValue() - ar2[i].doubleValue()) <= epsilon);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.size - actual.size) < eps);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.angle - actual.angle) < eps);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.response - actual.response) < eps);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.distance - actual.distance) < eps);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.val[0] - actual.val[0]) < eps);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.val[1] - actual.val[1]) < eps);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.val[2] - actual.val[2]) < eps);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.val[3] - actual.val[3]) < eps);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        Core.absdiff(expected, actual, diff);
modules/java/pure_test/src/org/opencv/test/OpenCVTestCase.java:        Core.absdiff(expected, actual, diff);
modules/java/android_test/AndroidManifest.xml:                     android:label="Tests for org.opencv"/>
modules/java/android_test/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
modules/java/android_test/CMakeLists.txt:set(__android_project_chain ${PROJECT_NAME} CACHE INTERNAL "auxiliary variable used for Android progects chaining" FORCE)
modules/java/android_test/src/org/opencv/test/OpenCVTestRunner.java:        LENA_PATH = Utils.exportResource(context, R.drawable.lena);
modules/java/android_test/src/org/opencv/test/OpenCVTestRunner.java:        CHESS_PATH = Utils.exportResource(context, R.drawable.chessboard);
modules/java/android_test/src/org/opencv/test/OpenCVTestRunner.java:         * The original idea about test order randomization is from
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:    protected static boolean isTestCaseEnabled = true;
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:    protected void runTest() throws Throwable {
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        if (isTestCaseEnabled) {
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:            Log.e(TAG, "Test case \"" + this.getClass().getName() + "\" disabled!");
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:            assertTrue(Math.abs(list1.get(i).doubleValue() - list2.get(i).doubleValue()) <= epsilon);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:            //assertTrue(Math.abs(ar1[i].doubleValue() - ar2[i].doubleValue()) <= epsilon);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:            //assertTrue(Math.abs(ar1[i].doubleValue() - ar2[i].doubleValue()) <= epsilon);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.size - actual.size) < eps);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.angle - actual.angle) < eps);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.response - actual.response) < eps);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.distance - actual.distance) < eps);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.val[0] - actual.val[0]) < eps);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.val[1] - actual.val[1]) < eps);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.val[2] - actual.val[2]) < eps);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        assertTrue(msg, Math.abs(expected.val[3] - actual.val[3]) < eps);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        Core.absdiff(expected, actual, diff);
modules/java/android_test/src/org/opencv/test/OpenCVTestCase.java:        Core.absdiff(expected, actual, diff);
modules/java/android_test/src/org/opencv/test/android/UtilsTest.java:        Core.absdiff(m1, mUnPre, diff);
modules/flann/test/test_lshtable_badarg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/flann/test/test_lshtable_badarg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/flann/test/test_lshtable_badarg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/flann/test/test_lshtable_badarg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/flann/test/test_lshtable_badarg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/flann/test/test_lshtable_badarg.cpp:class CV_LshTableBadArgTest : public cvtest::BadArgTest
modules/flann/test/test_lshtable_badarg.cpp:        int table_number, key_size, multi_probe_level;
modules/flann/test/test_lshtable_badarg.cpp:            flann::LshIndexParams indexParams(table_number, key_size, multi_probe_level);
modules/flann/test/test_lshtable_badarg.cpp:void CV_LshTableBadArgTest::run( int /* start_from */ )
modules/flann/test/test_lshtable_badarg.cpp:    caller.table_number = 12;
modules/flann/test/test_lshtable_badarg.cpp:TEST(Flann_LshTable, badarg) { CV_LshTableBadArgTest test; test.safe_run(); }
modules/flann/include/opencv2/flann/composite_index.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/composite_index.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/miniflann.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/flann/include/opencv2/flann/miniflann.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/flann/include/opencv2/flann/miniflann.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/flann/include/opencv2/flann/miniflann.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/flann/include/opencv2/flann/miniflann.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/flann/include/opencv2/flann/miniflann.hpp:    LshIndexParams(int table_number, int key_size, int multi_probe_level);
modules/flann/include/opencv2/flann/dynamic_bitset.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/dynamic_bitset.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/dynamic_bitset.h: * Author: Vincent Rabaud
modules/flann/include/opencv2/flann/dynamic_bitset.h:     * whole bitset ends up being 0: if that's the case, we don't care about setting
modules/flann/include/opencv2/flann/kmeans_index.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/kmeans_index.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h:        // Computing distance^2 will have the advantage of even higher probability further to pick new centers
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h:    void computeLabels(int* dsindices, int indices_length,  int* centers, int centers_length, int* labels, DistanceType& cost)
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h:            labels[i] = 0;
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h:                    labels[i] = j;
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h:        std::vector<int> labels(indices_length);
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h:        computeLabels(dsindices, indices_length, &centers[0], centers_length, &labels[0], cost);
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h:                if (labels[j]==i) {
modules/flann/include/opencv2/flann/hierarchical_clustering_index.h:                    std::swap(labels[j],labels[end]);
modules/flann/include/opencv2/flann/result_set.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/result_set.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/lsh_table.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/lsh_table.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/lsh_table.h: * Author: Vincent Rabaud
modules/flann/include/opencv2/flann/lsh_table.h:/** The id from which we can get a bucket back in an LSH table
modules/flann/include/opencv2/flann/lsh_table.h:/** A bucket in an LSH table
modules/flann/include/opencv2/flann/lsh_table.h:/** POD for stats about an LSH table
modules/flann/include/opencv2/flann/lsh_table.h:    out << "Lsh Table Stats:\n" << std::setw(w) << std::setiosflags(std::ios::right) << "N buckets : "
modules/flann/include/opencv2/flann/lsh_table.h:/** Lsh hash table. As its key is a sub-feature, and as usually
modules/flann/include/opencv2/flann/lsh_table.h:class LshTable
modules/flann/include/opencv2/flann/lsh_table.h:    LshTable()
modules/flann/include/opencv2/flann/lsh_table.h:    LshTable(unsigned int feature_size, unsigned int key_size)
modules/flann/include/opencv2/flann/lsh_table.h:    /** Add a feature to the table
modules/flann/include/opencv2/flann/lsh_table.h:            // That means we have to check for the hash table for the presence of a key
modules/flann/include/opencv2/flann/lsh_table.h:    /** Add a set of features to the table
modules/flann/include/opencv2/flann/lsh_table.h:        // Add the features to the table
modules/flann/include/opencv2/flann/lsh_table.h:        // Now that the table is full, optimize it for speed/space
modules/flann/include/opencv2/flann/lsh_table.h:            // That means we have to check for the hash table for the presence of a key
modules/flann/include/opencv2/flann/lsh_table.h:    /** Get statistics about the table
modules/flann/include/opencv2/flann/lsh_table.h:    /** Initialize some variables
modules/flann/include/opencv2/flann/lsh_table.h:    /** Optimize the table for speed/space
modules/flann/include/opencv2/flann/lsh_table.h:            // Empty the hash table
modules/flann/include/opencv2/flann/lsh_table.h:    /** The hash table of all the buckets in case we cannot use the speed version
modules/flann/include/opencv2/flann/lsh_table.h:     * That is just a speedup so that we don't look in the hash table (which can be mush slower that checking a bitset)
modules/flann/include/opencv2/flann/lsh_table.h:inline LshTable<unsigned char>::LshTable(unsigned int feature_size, unsigned int subsignature_size)
modules/flann/include/opencv2/flann/lsh_table.h:inline size_t LshTable<unsigned char>::getKey(const unsigned char* feature) const
modules/flann/include/opencv2/flann/lsh_table.h:    // no need to check if T is dividable by sizeof(size_t) like in the Hamming
modules/flann/include/opencv2/flann/lsh_table.h:inline LshStats LshTable<unsigned char>::getStats() const
modules/flann/include/opencv2/flann/linear_index.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/linear_index.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/defines.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/defines.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/random.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/random.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/logger.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/logger.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/all_indices.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/all_indices.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/all_indices.h:template<typename KDTreeCapability, typename VectorSpace, typename Distance>
modules/flann/include/opencv2/flann/allocator.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/allocator.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/allocator.h: * object or consolidating fragmented memory.  Second, the decision about
modules/flann/include/opencv2/flann/sampling.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/sampling.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/saving.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/saving.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/flann.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/flann/include/opencv2/flann/flann.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/flann/include/opencv2/flann/flann.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/flann/include/opencv2/flann/flann.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/flann/include/opencv2/flann/flann.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/flann/include/opencv2/flann/dist.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/dist.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/dist.h:inline T abs(T x) { return (x<0) ? -x : x; }
modules/flann/include/opencv2/flann/dist.h:inline int abs<int>(int x) { return ::abs(x); }
modules/flann/include/opencv2/flann/dist.h:inline float abs<float>(float x) { return fabsf(x); }
modules/flann/include/opencv2/flann/dist.h:inline double abs<double>(double x) { return fabs(x); }
modules/flann/include/opencv2/flann/dist.h: * This is the simpler, unrolled version. This is preferable for
modules/flann/include/opencv2/flann/dist.h:            diff0 = (ResultType)abs(a[0] - b[0]);
modules/flann/include/opencv2/flann/dist.h:            diff1 = (ResultType)abs(a[1] - b[1]);
modules/flann/include/opencv2/flann/dist.h:            diff2 = (ResultType)abs(a[2] - b[2]);
modules/flann/include/opencv2/flann/dist.h:            diff3 = (ResultType)abs(a[3] - b[3]);
modules/flann/include/opencv2/flann/dist.h:            diff0 = (ResultType)abs(*a++ - *b++);
modules/flann/include/opencv2/flann/dist.h:        return abs(a-b);
modules/flann/include/opencv2/flann/dist.h:            diff0 = (ResultType)abs(a[0] - b[0]);
modules/flann/include/opencv2/flann/dist.h:            diff1 = (ResultType)abs(a[1] - b[1]);
modules/flann/include/opencv2/flann/dist.h:            diff2 = (ResultType)abs(a[2] - b[2]);
modules/flann/include/opencv2/flann/dist.h:            diff3 = (ResultType)abs(a[3] - b[3]);
modules/flann/include/opencv2/flann/dist.h:            diff0 = (ResultType)abs(*a++ - *b++);
modules/flann/include/opencv2/flann/dist.h:        return pow(static_cast<ResultType>(abs(a-b)),order);
modules/flann/include/opencv2/flann/dist.h:            diff0 = abs(a[0] - b[0]);
modules/flann/include/opencv2/flann/dist.h:            diff1 = abs(a[1] - b[1]);
modules/flann/include/opencv2/flann/dist.h:            diff2 = abs(a[2] - b[2]);
modules/flann/include/opencv2/flann/dist.h:            diff3 = abs(a[3] - b[3]);
modules/flann/include/opencv2/flann/dist.h:            diff0 = abs(*a++ - *b++);
modules/flann/include/opencv2/flann/dist.h:        static const uchar popCountTable[] =
modules/flann/include/opencv2/flann/dist.h:            result += popCountTable[a[i] ^ b[i]];
modules/flann/include/opencv2/flann/dist.h:            //for portability just use unsigned long -- and use the __builtin_popcountll (see docs for __builtin_popcountll)
modules/flann/include/opencv2/flann/dist.h:                //in the case where size is not dividable by sizeof(size_t)
modules/flann/include/opencv2/flann/nn_index.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/nn_index.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/heap.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/heap.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/heap.h:     * Type T must be comparable.
modules/flann/include/opencv2/flann/ground_truth.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/ground_truth.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/index_testing.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/index_testing.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/index_testing.h:    if (fabs(p2-precision)>SEARCH_EPS) {
modules/flann/include/opencv2/flann/index_testing.h:        while (fabs(realPrecision-precision)>SEARCH_EPS) {
modules/flann/include/opencv2/flann/index_testing.h:        if (fabs(p2-precision)>SEARCH_EPS) {
modules/flann/include/opencv2/flann/index_testing.h:            while (fabs(realPrecision-precision)>SEARCH_EPS) {
modules/flann/include/opencv2/flann/object_factory.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/object_factory.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/config.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/config.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/lsh_index.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/lsh_index.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/lsh_index.h: * Author: Vincent Rabaud
modules/flann/include/opencv2/flann/lsh_index.h:#include "lsh_table.h"
modules/flann/include/opencv2/flann/lsh_index.h:    LshIndexParams(unsigned int table_number = 12, unsigned int key_size = 20, unsigned int multi_probe_level = 2)
modules/flann/include/opencv2/flann/lsh_index.h:        // The number of hash tables to use
modules/flann/include/opencv2/flann/lsh_index.h:        (*this)["table_number"] = table_number;
modules/flann/include/opencv2/flann/lsh_index.h:        // The length of the key in the hash tables
modules/flann/include/opencv2/flann/lsh_index.h:        table_number_ = (unsigned int)get_param<int>(index_params_,"table_number",12);
modules/flann/include/opencv2/flann/lsh_index.h:        tables_.resize(table_number_);
modules/flann/include/opencv2/flann/lsh_index.h:        for (unsigned int i = 0; i < table_number_; ++i) {
modules/flann/include/opencv2/flann/lsh_index.h:            lsh::LshTable<ElementType>& table = tables_[i];
modules/flann/include/opencv2/flann/lsh_index.h:            table = lsh::LshTable<ElementType>(feature_size_, key_size_);
modules/flann/include/opencv2/flann/lsh_index.h:            // Add the features to the table
modules/flann/include/opencv2/flann/lsh_index.h:            table.add(dataset_);
modules/flann/include/opencv2/flann/lsh_index.h:        save_value(stream,table_number_);
modules/flann/include/opencv2/flann/lsh_index.h:        load_value(stream, table_number_);
modules/flann/include/opencv2/flann/lsh_index.h:        index_params_["table_number"] = table_number_;
modules/flann/include/opencv2/flann/lsh_index.h:            typename std::vector<lsh::LshTable<ElementType> >::const_iterator table = tables_.begin();
modules/flann/include/opencv2/flann/lsh_index.h:            typename std::vector<lsh::LshTable<ElementType> >::const_iterator table_end = tables_.end();
modules/flann/include/opencv2/flann/lsh_index.h:            for (; table != table_end; ++table) {
modules/flann/include/opencv2/flann/lsh_index.h:                size_t key = table->getKey(vec);
modules/flann/include/opencv2/flann/lsh_index.h:                    const lsh::Bucket* bucket = table->getBucketFromKey(sub_key);
modules/flann/include/opencv2/flann/lsh_index.h:            typename std::vector<lsh::LshTable<ElementType> >::const_iterator table = tables_.begin();
modules/flann/include/opencv2/flann/lsh_index.h:            typename std::vector<lsh::LshTable<ElementType> >::const_iterator table_end = tables_.end();
modules/flann/include/opencv2/flann/lsh_index.h:            for (; table != table_end; ++table) {
modules/flann/include/opencv2/flann/lsh_index.h:                size_t key = table->getKey(vec);
modules/flann/include/opencv2/flann/lsh_index.h:                    const lsh::Bucket* bucket = table->getBucketFromKey(sub_key);
modules/flann/include/opencv2/flann/lsh_index.h:     * This is a slower version than the above as it uses the ResultSet
modules/flann/include/opencv2/flann/lsh_index.h:        typename std::vector<lsh::LshTable<ElementType> >::const_iterator table = tables_.begin();
modules/flann/include/opencv2/flann/lsh_index.h:        typename std::vector<lsh::LshTable<ElementType> >::const_iterator table_end = tables_.end();
modules/flann/include/opencv2/flann/lsh_index.h:        for (; table != table_end; ++table) {
modules/flann/include/opencv2/flann/lsh_index.h:            size_t key = table->getKey(vec);
modules/flann/include/opencv2/flann/lsh_index.h:                const lsh::Bucket* bucket = table->getBucketFromKey((lsh::BucketKey)sub_key);
modules/flann/include/opencv2/flann/lsh_index.h:    /** The different hash tables */
modules/flann/include/opencv2/flann/lsh_index.h:    std::vector<lsh::LshTable<ElementType> > tables_;
modules/flann/include/opencv2/flann/lsh_index.h:    /** The data the LSH tables where built from */
modules/flann/include/opencv2/flann/lsh_index.h:    /** table number */
modules/flann/include/opencv2/flann/lsh_index.h:    unsigned int table_number_;
modules/flann/include/opencv2/flann/autotuned_index.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/autotuned_index.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/kdtree_index.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/kdtree_index.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/kdtree_index.h:        // Create a permutable array of indices to the input vectors.
modules/flann/include/opencv2/flann/kdtree_index.h:     * because the tree traversal is abandoned after a given number of descends in
modules/flann/include/opencv2/flann/any.h: * (C) Copyright Pablo Aguilar 2005
modules/flann/include/opencv2/flann/hdf5.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/hdf5.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/hdf5.h:    H5Sselect_hyperslab(space_id, H5S_SELECT_SET, offset, NULL, count, NULL);
modules/flann/include/opencv2/flann/simplex_downhill.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/simplex_downhill.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/flann_base.hpp: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/flann_base.hpp: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/timer.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/timer.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/matrix.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/matrix.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/general.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/general.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/kdtree_single_index.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/kdtree_single_index.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann/kdtree_single_index.h:        // Create a permutable array of indices to the input vectors.
modules/flann/include/opencv2/flann/params.h: * 1. Redistributions of source code must retain the above copyright
modules/flann/include/opencv2/flann/params.h: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/include/opencv2/flann.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/flann/include/opencv2/flann.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/flann/include/opencv2/flann.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/flann/include/opencv2/flann.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/flann/include/opencv2/flann.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/flann/include/opencv2/flann.hpp:neighbor search in large datasets and for high dimensional features. More information about FLANN
modules/flann/include/opencv2/flann.hpp:                unsigned int table_number,
modules/flann/src/miniflann.cpp:LshIndexParams::LshIndexParams(int table_number, int key_size, int multi_probe_level)
modules/flann/src/miniflann.cpp:    // The number of hash tables to use
modules/flann/src/miniflann.cpp:    p["table_number"] = table_number;
modules/flann/src/miniflann.cpp:    // The length of the key in the hash tables
modules/flann/src/flann.cpp: * 1. Redistributions of source code must retain the above copyright
modules/flann/src/flann.cpp: * 2. Redistributions in binary form must reproduce the above copyright
modules/flann/src/flann.cpp:    /** Global variable indicating the distance metric to be used.
modules/imgcodecs/CMakeLists.txt:#   Some parts taken from version of Hartmut Seichter, HIT Lab NZ.
modules/imgcodecs/CMakeLists.txt:  #these variables are set by CHECK_MODULE macro
modules/imgcodecs/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wno-deprecated-declarations)
modules/imgcodecs/test/test_drawing.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/test/test_drawing.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/test/test_drawing.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/test/test_drawing.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/test/test_drawing.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/test/test_drawing.cpp:    string text2 = "abcdefghijklmnopqrstuvwxyz1234567890";
modules/imgcodecs/test/test_drawing.cpp:    string text2 = "abcdefghijklmnopqrstuvwxyz1234567890";
modules/imgcodecs/test/test_drawing.cpp:        lines.push_back("abcdefghijklmnopqrstuvwxyz1234567890");
modules/imgcodecs/test/test_grfmt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/test/test_grfmt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/test/test_grfmt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/test/test_grfmt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/test/test_grfmt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/test/test_grfmt.cpp:    absdiff(gray_by_codec, gray_by_cvt, diff);
modules/imgcodecs/test/test_grfmt.cpp:// Test disabled as it uses a lot of memory.
modules/imgcodecs/test/test_grfmt.cpp:            // What about 32, 64 bit?
modules/imgcodecs/test/test_grfmt.cpp:    minMaxLoc(abs(img_rle - img_no_rle), &min, &max);
modules/imgcodecs/test/test_grfmt.cpp:        minMaxLoc(abs(img_rle - written_img), &min, &max);
modules/imgcodecs/include/opencv2/imgcodecs.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/include/opencv2/imgcodecs.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/include/opencv2/imgcodecs.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/include/opencv2/imgcodecs.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/include/opencv2/imgcodecs.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/include/opencv2/imgcodecs.hpp:       IMWRITE_JPEG_PROGRESSIVE    = 2,  //!< Enable JPEG features, 0 or 1, default is False.
modules/imgcodecs/include/opencv2/imgcodecs.hpp:       IMWRITE_JPEG_OPTIMIZE       = 3,  //!< Enable JPEG features, 0 or 1, default is False.
modules/imgcodecs/include/opencv2/imgcodecs.hpp:       IMWRITE_WEBP_QUALITY        = 64  //!< For WEBP, it can be a quality from 1 to 100 (the higher is the better). By default (without any parameter) and for quality above 100 the lossless compression is used.
modules/imgcodecs/include/opencv2/imgcodecs.hpp:-   Portable Network Graphics - \*.png (see the *Notes* section)
modules/imgcodecs/include/opencv2/imgcodecs.hpp:-   Portable image format - \*.pbm, \*.pgm, \*.ppm \*.pxm, \*.pnm (always supported)
modules/imgcodecs/include/opencv2/imgcodecs/ios.h://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/include/opencv2/imgcodecs/ios.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/include/opencv2/imgcodecs/ios.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/include/opencv2/imgcodecs/ios.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/include/opencv2/imgcodecs/ios.h:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/include/opencv2/imgcodecs/imgcodecs_c.h:  iscolor can be a combination of above flags where CV_LOAD_IMAGE_UNCHANGED
modules/imgcodecs/src/grfmt_exr.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_exr.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_exr.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_exr.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_exr.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_exr.cpp:#  pragma warning( disable: 4100 4244 4267 )
modules/imgcodecs/src/grfmt_exr.cpp:    if( !m_file ) // probably paranoid
modules/imgcodecs/src/grfmt_gdal.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_gdal.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_gdal.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_gdal.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_gdal.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_gdal.hpp: * Write a color table pixel to the image
modules/imgcodecs/src/grfmt_gdal.hpp:void write_ctable_pixel( const double& pixelValue,
modules/imgcodecs/src/grfmt_gdal.hpp:                         const GDALColorTable* gdalColorTable,
modules/imgcodecs/src/grfmt_gdal.hpp:         * The reason is that GDAL tends to overlap with other image formats and it is probably
modules/imgcodecs/src/grfmt_gdal.hpp:        /// Check if we are reading from a color table
modules/imgcodecs/src/grfmt_gdal.hpp:        bool hasColorTable;
modules/imgcodecs/src/grfmt_jpeg2000.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_jpeg2000.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_jpeg2000.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_jpeg2000.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_jpeg2000.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_jpeg2000.cpp:                fprintf(stderr, "JPEG 2000 LOADER ERROR: unable to create colorspace\n");
modules/imgcodecs/src/utils.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/utils.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/utils.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/utils.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/utils.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_webp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_webp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_webp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_webp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_webp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_hdr.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_hdr.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_hdr.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_hdr.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_hdr.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_base.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_base.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_base.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_base.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_base.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/loadsave.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/loadsave.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/loadsave.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/loadsave.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/loadsave.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/loadsave.cpp:    // established the required input image size
modules/imgcodecs/src/loadsave.cpp:    // grab the decoded type
modules/imgcodecs/src/loadsave.cpp:        // grab the decoded type
modules/imgcodecs/src/loadsave.cpp: *  This function merely calls the actual implementation above and returns itself.
modules/imgcodecs/src/loadsave.cpp:*  This function merely calls the actual implementation above and returns itself.
modules/imgcodecs/src/grfmt_hdr.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_hdr.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_hdr.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_hdr.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_hdr.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_png.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_png.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_png.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_png.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_png.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_png.cpp:    // interaction between '_setjmp' and C++ object destruction is non-portable
modules/imgcodecs/src/grfmt_png.cpp:    #pragma warning( disable: 4611 )
modules/imgcodecs/src/grfmt_png.cpp:    m_description = "Portable Network Graphics files (*.png)";
modules/imgcodecs/src/grfmt_sunras.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_sunras.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_sunras.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_sunras.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_sunras.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/bitstrm.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/bitstrm.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/bitstrm.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/bitstrm.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/bitstrm.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_bmp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_bmp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_bmp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_bmp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_bmp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/jpeg_exif.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/jpeg_exif.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/jpeg_exif.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/jpeg_exif.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/jpeg_exif.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_gdal.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_gdal.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_gdal.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_gdal.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_gdal.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_gdal.cpp:void write_ctable_pixel( const double& pixelValue,
modules/imgcodecs/src/grfmt_gdal.cpp:                         GDALColorTable const* gdalColorTable,
modules/imgcodecs/src/grfmt_gdal.cpp:    if( gdalColorTable == NULL ){
modules/imgcodecs/src/grfmt_gdal.cpp:    if( gdalColorTable->GetPaletteInterpretation() == GPI_Gray ){
modules/imgcodecs/src/grfmt_gdal.cpp:    else if( gdalColorTable->GetPaletteInterpretation() == GPI_RGB ){
modules/imgcodecs/src/grfmt_gdal.cpp:        short r = gdalColorTable->GetColorEntry( (int)pixelValue )->c1;
modules/imgcodecs/src/grfmt_gdal.cpp:        short g = gdalColorTable->GetColorEntry( (int)pixelValue )->c2;
modules/imgcodecs/src/grfmt_gdal.cpp:        short b = gdalColorTable->GetColorEntry( (int)pixelValue )->c3;
modules/imgcodecs/src/grfmt_gdal.cpp:        short a = gdalColorTable->GetColorEntry( (int)pixelValue )->c4;
modules/imgcodecs/src/grfmt_gdal.cpp:    GDALColorTable* gdalColorTable = NULL;
modules/imgcodecs/src/grfmt_gdal.cpp:    if( m_dataset->GetRasterBand(1)->GetColorTable() != NULL ){
modules/imgcodecs/src/grfmt_gdal.cpp:        gdalColorTable = m_dataset->GetRasterBand(1)->GetColorTable();
modules/imgcodecs/src/grfmt_gdal.cpp:        // grab the raster size
modules/imgcodecs/src/grfmt_gdal.cpp:                //   given boost, I would use enable_if to speed up.  Avoid for now.
modules/imgcodecs/src/grfmt_gdal.cpp:                if( hasColorTable == false ){
modules/imgcodecs/src/grfmt_gdal.cpp:                    write_ctable_pixel( scanline[x], gdalType, gdalColorTable, img, y, x, c );
modules/imgcodecs/src/grfmt_gdal.cpp:        hasColorTable = true;
modules/imgcodecs/src/grfmt_gdal.cpp:        // if the color tables does not exist, then we failed
modules/imgcodecs/src/grfmt_gdal.cpp:        if( m_dataset->GetRasterBand(1)->GetColorTable() == NULL ){
modules/imgcodecs/src/grfmt_gdal.cpp:            tempType = gdalPaletteInterpretation2OpenCV( m_dataset->GetRasterBand(1)->GetColorTable()->GetPaletteInterpretation(),
modules/imgcodecs/src/grfmt_gdal.cpp:        // remember that we don't have a color table
modules/imgcodecs/src/grfmt_gdal.cpp:        hasColorTable = false;
modules/imgcodecs/src/bitstrm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/bitstrm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/bitstrm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/bitstrm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/bitstrm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_bmp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_bmp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_bmp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_bmp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_bmp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_bmp.cpp:    m_height = std::abs(m_height);
modules/imgcodecs/src/grfmt_bmp.cpp:                    else if( code > 2 ) // absolute mode
modules/imgcodecs/src/grfmt_bmp.cpp:                    else if( code > 2 ) // absolute mode
modules/imgcodecs/src/utils.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/utils.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/utils.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/utils.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/utils.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_base.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_base.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_base.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_base.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_base.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_png.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_png.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_png.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_png.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_png.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_exr.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_exr.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_exr.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_exr.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_exr.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/rgbe.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/rgbe.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/rgbe.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/rgbe.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/rgbe.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_pxm.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_pxm.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_pxm.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_pxm.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_pxm.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_tiff.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_tiff.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_tiff.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_tiff.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_tiff.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_pxm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_pxm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_pxm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_pxm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_pxm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_pxm.cpp:    m_description = "Portable image format (*.pbm;*.pgm;*.ppm;*.pxm;*.pnm)";
modules/imgcodecs/src/grfmts.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmts.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmts.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmts.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmts.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/rgbe.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/rgbe.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/rgbe.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/rgbe.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/rgbe.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/rgbe.cpp:/* note: you can remove the "inline"s if your compiler complains about it */
modules/imgcodecs/src/rgbe.cpp:/* Run length encoding adds considerable complexity but does */
modules/imgcodecs/src/rgbe.cpp:      return rgbe_error(rgbe_memory_error,"unable to allocate buffer space");
modules/imgcodecs/src/grfmt_tiff.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_tiff.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_tiff.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_tiff.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_tiff.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_tiff.cpp:    // write an image data first (the most reasonable way
modules/imgcodecs/src/ios_conversions.mm://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/ios_conversions.mm://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/ios_conversions.mm:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/ios_conversions.mm:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/ios_conversions.mm:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_jpeg.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_jpeg.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_jpeg.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_jpeg.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_jpeg.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/jpeg_exif.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/jpeg_exif.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/jpeg_exif.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/jpeg_exif.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/jpeg_exif.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_sunras.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_sunras.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_sunras.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_sunras.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_sunras.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/precomp.hpp:    #undef abs
modules/imgcodecs/src/grfmt_jpeg2000.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_jpeg2000.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_jpeg2000.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_jpeg2000.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_jpeg2000.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_webp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_webp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_webp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_webp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_webp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_jpeg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/imgcodecs/src/grfmt_jpeg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/imgcodecs/src/grfmt_jpeg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/imgcodecs/src/grfmt_jpeg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/imgcodecs/src/grfmt_jpeg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/imgcodecs/src/grfmt_jpeg.cpp://interaction between '_setjmp' and C++ object destruction is non-portable
modules/imgcodecs/src/grfmt_jpeg.cpp:#pragma warning(disable: 4611)
modules/imgcodecs/src/grfmt_jpeg.cpp:# pragma warning(disable:4324) //structure was padded due to __declspec(align())
modules/imgcodecs/src/grfmt_jpeg.cpp: * Parse the DHT table.
modules/imgcodecs/src/grfmt_jpeg.cpp:              JHUFF_TBL *ac_tables[], JHUFF_TBL *dc_tables[])
modules/imgcodecs/src/grfmt_jpeg.cpp:           hufftbl = &ac_tables[index];
modules/imgcodecs/src/grfmt_jpeg.cpp:           hufftbl = &dc_tables[index];
modules/imgcodecs/src/grfmt_jpeg.cpp:           *hufftbl = jpeg_alloc_huff_table ((j_common_ptr)info);
modules/imgcodecs/src/grfmt_jpeg.cpp:                huffman table */
modules/imgcodecs/src/grfmt_jpeg.cpp:                /* disable subsampling - ref. Libjpeg.txt */
modules/imgcodecs/src/grfmt_jpeg.cpp:            jpeg_default_qtables( &cinfo, TRUE );
Binary file modules/highgui/doc/pics/qtgui.png matches
modules/highgui/CMakeLists.txt:#   Some parts taken from version of Hartmut Seichter, HIT Lab NZ.
modules/highgui/CMakeLists.txt:    # below are not available on WinRT 8.0.
modules/highgui/CMakeLists.txt:    # Enabling it for WiRT 8.1+ only.
modules/highgui/CMakeLists.txt:  # libraries below are neither available nor required
modules/highgui/CMakeLists.txt:  #these variables are set by CHECK_MODULE macro
modules/highgui/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wno-deprecated-declarations)
modules/highgui/test/test_gui.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/test/test_gui.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/test/test_gui.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/test/test_gui.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/test/test_gui.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/include/opencv2/highgui.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/include/opencv2/highgui.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/include/opencv2/highgui.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/include/opencv2/highgui.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/include/opencv2/highgui.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/include/opencv2/highgui.hpp: -   **WINDOW_NORMAL or WINDOW_AUTOSIZE:** WINDOW_NORMAL enables you to resize the
modules/highgui/include/opencv2/highgui.hpp:infinitely until any keypress (it is suitable for image display). **waitKey(25)** will display a frame
modules/highgui/include/opencv2/highgui.hpp:The function setWindowProperty enables changing properties of a window.
modules/highgui/include/opencv2/highgui.hpp:@param prop_id Window property to retrieve. The following operation flags are available: (cv::WindowPropertyFlags)
modules/highgui/include/opencv2/highgui.hpp:respectively. For cv::EVENT_MOUSEHWHEEL, where available, positive and negative values mean right and
modules/highgui/include/opencv2/highgui.hpp:and range, assigns a variable value to be a position synchronized with the trackbar and specifies
modules/highgui/include/opencv2/highgui.hpp:Clicking the label of each trackbar enables editing the trackbar values manually.
modules/highgui/include/opencv2/highgui.hpp:@param value Optional pointer to an integer variable whose value reflects the position of the
modules/highgui/include/opencv2/highgui.hpp:slider. Upon creation, the slider position is defined by this variable.
modules/highgui/include/opencv2/highgui.hpp:events without using global variables.
modules/highgui/include/opencv2/highgui.hpp:/** @brief QtFont available only for Qt. See cv::fontQt
modules/highgui/include/opencv2/highgui.hpp:@param weight Font weight. Available operation flags are : cv::QtFontWeights You can also specify a positive integer for better control.
modules/highgui/include/opencv2/highgui.hpp:@param style Font style. Available operation flags are : cv::QtFontStyles
modules/highgui/include/opencv2/highgui.hpp:@param type Optional type of the button. Available types are: (cv::QtButtonTypes)
modules/highgui/include/opencv2/highgui/highgui_winrt.hpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/highgui/include/opencv2/highgui/highgui_winrt.hpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/highgui/include/opencv2/highgui/highgui.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/include/opencv2/highgui/highgui.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/include/opencv2/highgui/highgui.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/include/opencv2/highgui/highgui.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/include/opencv2/highgui/highgui.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/include/opencv2/highgui/highgui_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/include/opencv2/highgui/highgui_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/include/opencv2/highgui/highgui_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/include/opencv2/highgui/highgui_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/include/opencv2/highgui/highgui_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/src/window_QT.h://  * Redistribution's of source code must retain the above copyright notice,
modules/highgui/src/window_QT.h://  * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/src/window_QT.h://warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/src/window_QT.h://In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/src/window_QT.h://and on any theory of liability, whether in contract, strict liability,
modules/highgui/src/window_QT.h:#include <QLabel>
modules/highgui/src/window_QT.h:    void enablePropertiesButtonEachWindow();
modules/highgui/src/window_QT.h:    void setLabel();
modules/highgui/src/window_QT.h:    QPointer<QLabel> label;
modules/highgui/src/window_QT.h:    void setLabel(int myvalue);
modules/highgui/src/window_QT.h:    QString createLabel();
modules/highgui/src/window_QT.h:    QPointer<QPushButton > label;
modules/highgui/src/window_QT.h:    void enablePropertiesButton();
modules/highgui/src/window_QT.h:    QPointer<QLabel> myStatusBar_msg;
modules/highgui/src/window_QT.h:    QSize getAvailableSize();
modules/highgui/src/window_QT.h:static const int tableMouseButtons[][3]={
modules/highgui/src/window_QT.h:    QPointF positionGrabbing;
modules/highgui/src/window_w32.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/src/window_w32.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/src/window_w32.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/src/window_w32.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/src/window_w32.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/src/window_w32.cpp:    bmih->biHeight = origin ? abs(height) : -abs(height);
modules/highgui/src/window_w32.cpp:            CV_ERROR( CV_OpenGlApiCallError, "Can't Find A Suitable PixelFormat" );
modules/highgui/src/window_w32.cpp:        size->cx = abs(bmp.bmWidth);
modules/highgui/src/window_w32.cpp:        size->cy = abs(bmp.bmHeight);
modules/highgui/src/window_w32.cpp:          if (abs(pos->x - mi.rcMonitor.left) <= SNAP_DISTANCE)
modules/highgui/src/window_w32.cpp:             if (abs(pos->x + pos->cx - mi.rcMonitor.right) <= SNAP_DISTANCE)
modules/highgui/src/window_w32.cpp:          if (abs(pos->y - mi.rcMonitor.top) <= SNAP_DISTANCE)
modules/highgui/src/window_w32.cpp:             if (abs(pos->y + pos->cy - mi.rcMonitor.bottom) <= SNAP_DISTANCE)
modules/highgui/src/window_w32.cpp:            // We'll use a do-while(0){} scope as a single-run breakable scope
modules/highgui/src/window_w32.cpp:                RGBQUAD table[256];
modules/highgui/src/window_w32.cpp:                        table[i].rgbBlue = (unsigned char)i;
modules/highgui/src/window_w32.cpp:                        table[i].rgbGreen = (unsigned char)i;
modules/highgui/src/window_w32.cpp:                        table[i].rgbRed = (unsigned char)i;
modules/highgui/src/window_w32.cpp:                    if (!::SetDIBColorTable(window->dc, 0, 255, table))
modules/highgui/src/window_w32.cpp:            RGBQUAD table[256];
modules/highgui/src/window_w32.cpp:                    table[i].rgbBlue = (unsigned char)i;
modules/highgui/src/window_w32.cpp:                    table[i].rgbGreen = (unsigned char)i;
modules/highgui/src/window_w32.cpp:                    table[i].rgbRed = (unsigned char)i;
modules/highgui/src/window_w32.cpp:                SetDIBColorTable(window->dc, 0, 255, table);
modules/highgui/src/window_w32.cpp:                      "Portable Network Graphics files (*.png)\0*.png\0"
modules/highgui/src/window_w32.cpp:                      "Portable image format (*.pbm;*.pgm;*.ppm;*.pxm;*.pnm)\0*.pbm;*.pgm;*.ppm;*.pxm;*.pnm\0"
modules/highgui/src/window_w32.cpp:        if( (delay > 0 && abs((int)(GetTickCount() - time0)) >= delay) || hg_windows == 0 )
modules/highgui/src/window_cocoa.mm://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/src/window_cocoa.mm://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/src/window_cocoa.mm:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/src/window_cocoa.mm:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/src/window_cocoa.mm:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/src/window_cocoa.mm:static NSMutableDictionary *windows = nil;
modules/highgui/src/window_cocoa.mm:    NSMutableDictionary *sliders;
modules/highgui/src/window_cocoa.mm:@property(retain) NSMutableDictionary *sliders;
modules/highgui/src/window_cocoa.mm:    windows = [[NSMutableDictionary alloc] init];
modules/highgui/src/window_cocoa.mm:    NSUInteger showResize = (flags == CV_WINDOW_AUTOSIZE) ? 0: NSResizableWindowMask ;
modules/highgui/src/window_cocoa.mm:    NSUInteger styleMask = NSTitledWindowMask|NSMiniaturizableWindowMask|showResize;
modules/highgui/src/window_cocoa.mm:                                         styleMask:NSTitledWindowMask|NSMiniaturizableWindowMask|showResize
modules/highgui/src/window_cocoa.mm:        sliders = [[NSMutableDictionary alloc] init];
modules/highgui/src/window_cocoa.mm:    [name setEditable:NO];
modules/highgui/src/window_cocoa.mm:    [name setSelectable:NO];
modules/highgui/src/window_cocoa.mm:    [slider setAutoresizingMask:NSViewWidthSizable];
modules/highgui/src/window_cocoa.mm:    [self setAutoresizingMask:NSViewWidthSizable];
modules/highgui/src/files_Qt/stylesheet_trackbar.qss:QSlider::sub-page:horizontal:disabled {
modules/highgui/src/files_Qt/stylesheet_trackbar.qss:QSlider::add-page:horizontal:disabled {
modules/highgui/src/files_Qt/stylesheet_trackbar.qss:QSlider::handle:horizontal:disabled {
Binary file modules/highgui/src/files_Qt/Milky/64/98.png matches
Binary file modules/highgui/src/files_Qt/Milky/64/52.png matches
Binary file modules/highgui/src/files_Qt/Milky/64/110.png matches
Binary file modules/highgui/src/files_Qt/Milky/64/31.png matches
Binary file modules/highgui/src/files_Qt/Milky/64/22.png matches
Binary file modules/highgui/src/files_Qt/Milky/64/2.png matches
Binary file modules/highgui/src/files_Qt/Milky/64/126.png matches
Binary file modules/highgui/src/files_Qt/Milky/64/16.png matches
Binary file modules/highgui/src/files_Qt/Milky/64/74.png matches
Binary file modules/highgui/src/files_Qt/Milky/64/97.png matches
Binary file modules/highgui/src/files_Qt/Milky/48/127.png matches
Binary file modules/highgui/src/files_Qt/Milky/48/125.png matches
Binary file modules/highgui/src/files_Qt/Milky/48/84.png matches
modules/highgui/src/files_Qt/Milky/README.txt:   1. The icons may not be resold, sublicensed, rented, transferred or otherwise made available for use or detached from a product, software application or web page;
modules/highgui/src/files_Qt/Milky/README.txt:   2. The icons may not be placed on any electronic bulletin board or downloadable format;
modules/highgui/src/files_Qt/Milky/README.txt:All icon files are provided "as is". You agree not to hold IconEden.com liable for any damages that may occur due to use, or inability to use, icons or image data from IconEden.com.
modules/highgui/src/window_carbon.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/src/window_carbon.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/src/window_carbon.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/src/window_carbon.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/src/window_carbon.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/src/window_carbon.cpp:    ControlRef label;
modules/highgui/src/window_carbon.cpp:    int labelSize;//Yannick Verdie
modules/highgui/src/window_carbon.cpp:        // create an empty CFMutableString
modules/highgui/src/window_carbon.cpp:        CFMutableStringRef cfstring = CFStringCreateMutable(alloc_default,maxLength);
modules/highgui/src/window_carbon.cpp:        SetControlData(trackbar->label, kControlEntireControl,kControlStaticTextCFStringTag, sizeof(cfstring), &cfstring);
modules/highgui/src/window_carbon.cpp:        trackbar->labelSize = qdSize.h;
modules/highgui/src/window_carbon.cpp:        //fprintf(stdout,"create trackabar bounds (%d %d %d %d)\n",stboundsRect.top,stboundsRect.left,stboundsRect.bottom,stboundsRect.right);
modules/highgui/src/window_carbon.cpp:        trackbar->label = stoutControl;
modules/highgui/src/window_carbon.cpp:    // to be able to display a window, we need to be a 'faceful' application
modules/highgui/src/window_QT.cpp://  * Redistribution's of source code must retain the above copyright notice,
modules/highgui/src/window_QT.cpp://  * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/src/window_QT.cpp://warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/src/window_QT.cpp://In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/src/window_QT.cpp://and on any theory of liability, whether in contract, strict liability,
modules/highgui/src/window_QT.cpp:    //This is not a very clean way to do the stuff. Indeed, QAction automatically generate toolTil (QLabel)
modules/highgui/src/window_QT.cpp:    //that can be grabbed here and crash the code at 'w->param_name==name'.
modules/highgui/src/window_QT.cpp:        qDebug() << "opengl support available";
modules/highgui/src/window_QT.cpp:    return 1; //Dummy value - probably should return the result of the invocation.
modules/highgui/src/window_QT.cpp:void GuiReceiver::enablePropertiesButtonEachWindow()
modules/highgui/src/window_QT.cpp:    //For each window, enable window property button
modules/highgui/src/window_QT.cpp:                w->enablePropertiesButton();
modules/highgui/src/window_QT.cpp:        enablePropertiesButtonEachWindow();
modules/highgui/src/window_QT.cpp:    label = new QPushButton;
modules/highgui/src/window_QT.cpp:    label->setFlat(true);
modules/highgui/src/window_QT.cpp:    setLabel(slider->value());
modules/highgui/src/window_QT.cpp:    QObject::connect(label, SIGNAL(clicked()), this, SLOT(createDialog()));
modules/highgui/src/window_QT.cpp:    //label->setStyleSheet("QPushButton:disabled {color: black}");
modules/highgui/src/window_QT.cpp:    addWidget(label, Qt::AlignLeft);//name + value
modules/highgui/src/window_QT.cpp:    setLabel(myvalue);
modules/highgui/src/window_QT.cpp:void CvTrackbar::setLabel(int myvalue)
modules/highgui/src/window_QT.cpp:    label->setText(str);
modules/highgui/src/window_QT.cpp:void CvButtonbar::setLabel()
modules/highgui/src/window_QT.cpp:    label->setText(nameNormalized);
modules/highgui/src/window_QT.cpp:void CvWindow::enablePropertiesButton()
modules/highgui/src/window_QT.cpp:        vect_QActions[9]->setDisabled(false);
modules/highgui/src/window_QT.cpp:        //if first one, enable control panel
modules/highgui/src/window_QT.cpp:            guiMainThread->enablePropertiesButtonEachWindow();
modules/highgui/src/window_QT.cpp:        //if first one, enable control panel
modules/highgui/src/window_QT.cpp:            guiMainThread->enablePropertiesButtonEachWindow();
modules/highgui/src/window_QT.cpp:    vect_QActions[5] = new QAction(QIcon(":/imgRegion-icon"), tr("Zoom x%1 (see label) (CTRL+X)").arg(threshold_zoom_img_region), this);
modules/highgui/src/window_QT.cpp:        vect_QActions[9]->setDisabled(true);
modules/highgui/src/window_QT.cpp:    myToolBar->setFloatable(false); //is not a window
modules/highgui/src/window_QT.cpp:    myStatusBar->setSizeGripEnabled(false);
modules/highgui/src/window_QT.cpp:    myStatusBar_msg = new QLabel;
modules/highgui/src/window_QT.cpp:    positionGrabbing = QPointF(0, 0);
modules/highgui/src/window_QT.cpp:        if (fabs(ratioX - ratioY) * 100 > ratioX) //avoid infinity loop / epsilon = 1% of ratioX
modules/highgui/src/window_QT.cpp:        positionGrabbing = evnt->pos();
modules/highgui/src/window_QT.cpp:        QPointF dxy = (pt - positionGrabbing)/param_matrixWorld.m11();
modules/highgui/src/window_QT.cpp:        positionGrabbing = evnt->pos();
modules/highgui/src/window_QT.cpp:    //Now disable matrixWorld for overlay display
modules/highgui/src/window_QT.cpp:    myPainter.setWorldMatrixEnabled(false);
modules/highgui/src/window_QT.cpp:        cv_event = tableMouseButtons[category][0];
modules/highgui/src/window_QT.cpp:        cv_event = tableMouseButtons[category][1];
modules/highgui/src/window_QT.cpp:        cv_event = tableMouseButtons[category][2];
modules/highgui/src/window_QT.cpp:        cv_event = tableMouseButtons[category][0];
modules/highgui/src/window_QT.cpp:        cv_event = tableMouseButtons[category][1];
modules/highgui/src/window_QT.cpp:        cv_event = tableMouseButtons[category][2];
modules/highgui/src/window_winrt_bridge.cpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/highgui/src/window_winrt_bridge.cpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/highgui/src/window_winrt_bridge.cpp:    // Create the WriteableBitmap
modules/highgui/src/window_winrt_bridge.cpp:    WriteableBitmap^ bitmap = ref new WriteableBitmap(src->cols, src->rows);
modules/highgui/src/window_winrt_bridge.cpp:    ComPtr<IInspectable> pBuffer((IInspectable*)buffer);
modules/highgui/src/window_winrt.cpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/highgui/src/window_winrt.cpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/highgui/src/window_winrt.cpp:/********************************** Disabled or not supported API **********************************************/
modules/highgui/src/window_winrt_bridge.hpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
modules/highgui/src/window_winrt_bridge.hpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
modules/highgui/src/window_winrt_bridge.hpp:    // TODO: prototype, not available via API
modules/highgui/src/window_gtk.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/src/window_gtk.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/src/window_gtk.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/src/window_gtk.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/src/window_gtk.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/src/window_gtk.cpp:    // protects the 'last key pressed' variable
modules/highgui/src/window_gtk.cpp:        // Set OpenGL-capability to the widget
modules/highgui/src/window_gtk.cpp:        if (!gtk_widget_set_gl_capability(window->widget, glconfig, NULL, TRUE, GDK_GL_RGBA_TYPE))
modules/highgui/src/window_gtk.cpp:        GdkGLDrawable* gldrawable = gtk_widget_get_gl_drawable(window->widget);
modules/highgui/src/window_gtk.cpp:        if (!gdk_gl_drawable_gl_begin (gldrawable, glcontext))
modules/highgui/src/window_gtk.cpp:        if (gdk_gl_drawable_is_double_buffered (gldrawable))
modules/highgui/src/window_gtk.cpp:            gdk_gl_drawable_swap_buffers(gldrawable);
modules/highgui/src/window_gtk.cpp:        gdk_gl_drawable_gl_end(gldrawable);
modules/highgui/src/window_gtk.cpp:      // center image in available region
modules/highgui/src/window_gtk.cpp:      // center image in available region
modules/highgui/src/window_gtk.cpp:    gtk_window_set_resizable( GTK_WINDOW(window->frame), (flags & CV_WINDOW_AUTOSIZE) == 0 );
modules/highgui/src/window_gtk.cpp:    GdkGLDrawable* gldrawable;
modules/highgui/src/window_gtk.cpp:    gldrawable = gtk_widget_get_gl_drawable(window->widget);
modules/highgui/src/window_gtk.cpp:    if (!gdk_gl_drawable_make_current(gldrawable, glcontext))
modules/highgui/src/window_gtk.cpp://     gdk_drawable_get_size( GDK_DRAWABLE(toplevel->window),
modules/highgui/src/window_gtk.cpp:    gtk_window_set_resizable( GTK_WINDOW(window->frame), 1 );
modules/highgui/src/window_gtk.cpp:    // disable initial resize since presumably user wants to keep
modules/highgui/src/window_gtk.cpp:        GtkWidget* hscale_label = gtk_label_new( trackbar_name );
modules/highgui/src/window_gtk.cpp:        gtk_box_pack_start( GTK_BOX(hscale_box), hscale_label, FALSE, FALSE, 5 );
modules/highgui/src/window_gtk.cpp:        gtk_widget_show( hscale_label );
modules/highgui/src/window_gtk.cpp:        icvMakeGtkFilter("Portable Network Graphics files (*.png)",               "*.png\0",                             filter_images),
modules/highgui/src/window_gtk.cpp:        icvMakeGtkFilter("Portable image format (*.pbm;*.pgm;*.ppm;*.pxm;*.pnm)", "*.pbm\0*.pgm\0*.ppm\0*.pxm\0*.pnm\0", filter_images),
modules/highgui/src/window_gtk.cpp:#define GDK_Tab GDK_KEY_Tab
modules/highgui/src/window_gtk.cpp:    case GDK_Tab:
modules/highgui/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/src/precomp.hpp:    #undef abs
modules/highgui/src/window.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/highgui/src/window.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/highgui/src/window.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/highgui/src/window.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/highgui/src/window.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/highgui/src/window.cpp:// version with a more capable one without a need to recompile dependent
Binary file modules/calib3d/doc/pics/stereo_undistort.jpg matches
modules/calib3d/test/test_posit.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_posit.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_posit.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_posit.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_posit.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_posit.cpp:    /* Some variables */
modules/calib3d/test/test_affine3.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_affine3.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_affine3.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_affine3.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_affine3.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_affine3.cpp:    cv::absdiff(expected, result.matrix, diff);
modules/calib3d/test/test_fisheye.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_fisheye.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_fisheye.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_fisheye.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_fisheye.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_fisheye.cpp:    X = cv::abs(X) * 10;
modules/calib3d/test/test_fisheye.cpp:    om = cv::abs(om);
modules/calib3d/test/test_fisheye.cpp:    theT = cv::abs(theT); theT.at<double>(2) = 4; theT *= 10;
modules/calib3d/test/test_fisheye.cpp:    f = cv::abs(f) * 1000;
modules/calib3d/test/test_fisheye.cpp:    c = cv::abs(c) * 1000;
modules/calib3d/test/test_fisheye.cpp:    CV_Assert(fabs(rms - 0.263782587133546) < 1e-10);
modules/calib3d/test/test_chesscorners_badarg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_chesscorners_badarg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_chesscorners_badarg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_chesscorners_badarg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_chesscorners_badarg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_cornerssubpix.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_cornerssubpix.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_cornerssubpix.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_cornerssubpix.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_cornerssubpix.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_cameracalibration_badarg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_cameracalibration_badarg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_cameracalibration_badarg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_cameracalibration_badarg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_cameracalibration_badarg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_stereomatching.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_stereomatching.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_stereomatching.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_stereomatching.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_stereomatching.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_stereomatching.cpp:    absdiff( computedDisp, groundTruthDisp, badPxlsMap );
modules/calib3d/test/test_stereomatching.cpp:    absdiff( trueLeftDisp, Scalar(params.dispUnknVal), leftUnknMask );
modules/calib3d/test/test_stereomatching.cpp:        absdiff( trueRightDisp, Scalar(params.dispUnknVal), rightUnknMask );
modules/calib3d/test/test_undistort_badarg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_undistort_badarg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_undistort_badarg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_undistort_badarg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_undistort_badarg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_reproject_image_to_3d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_reproject_image_to_3d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_reproject_image_to_3d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_reproject_image_to_3d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_reproject_image_to_3d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_cameracalibration_artificial.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_cameracalibration_artificial.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_cameracalibration_artificial.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_cameracalibration_artificial.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_cameracalibration_artificial.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_cameracalibration_artificial.cpp:        return fabs(a - a0) > eps * (fabs(a0) + delta);
modules/calib3d/test/test_cameracalibration_artificial.cpp:        ts->printf( cvtest::TS::LOG, "%d) AbsError = [%.5f %.5f %.5f %.5f %.5f]\n", r, fabs(k1-k1_e), fabs(k2-k2_e), fabs(p1-p1_e), fabs(p2-p2_e), fabs(k3-k3_e));
modules/calib3d/test/test_chesscorners.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_chesscorners.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_chesscorners.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_chesscorners.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_chesscorners.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_chesscorners.cpp:            double dx = fabs( v[j].x - u_data[j1].x );
modules/calib3d/test/test_chesscorners.cpp:            double dy = fabs( v[j].y - u_data[j1].y );
modules/calib3d/test/test_chessboardgenerator.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_chessboardgenerator.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_chessboardgenerator.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_chessboardgenerator.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_chessboardgenerator.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_cameracalibration.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_cameracalibration.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_cameracalibration.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_cameracalibration.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_cameracalibration.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_cameracalibration.cpp:                dx = fabs(dx);
modules/calib3d/test/test_cameracalibration.cpp:                dy = fabs(dy);
modules/calib3d/test/test_cameracalibration.cpp:    if( fabs(fovx - goodFovx) > FLT_EPSILON )
modules/calib3d/test/test_cameracalibration.cpp:    if( fabs(fovy - goodFovy) > FLT_EPSILON )
modules/calib3d/test/test_cameracalibration.cpp:    if( fabs(focalLength - goodFocalLength) > FLT_EPSILON )
modules/calib3d/test/test_cameracalibration.cpp:    if( fabs(aspectRatio - goodAspectRatio) > FLT_EPSILON )
modules/calib3d/test/test_cameracalibration.cpp:    CV_Assert( fabs(eps) > std::numeric_limits<double>::epsilon() );
modules/calib3d/test/test_cameracalibration.cpp:        if( fabs(it->x - validImgPoint.x) > imgPointErr ||
modules/calib3d/test/test_cameracalibration.cpp:            fabs(it->y - validImgPoint.y) > imgPointErr )
modules/calib3d/test/test_cameracalibration.cpp:            abs(determinant(F)) > 0.01)
modules/calib3d/test/test_cameracalibration.cpp:        double tx = fabs(P2.at<double>(0, 3) / P2.at<double>(0, 0));
modules/calib3d/test/test_cameracalibration.cpp:        if (fabs(tx - cvtest::norm(T, NORM_L2)) > 1e-5)
modules/calib3d/test/test_cameracalibration.cpp:        bool verticalStereo = abs(P2.at<double>(0,3)) < abs(P2.at<double>(1,3));
modules/calib3d/test/test_cameracalibration.cpp:                double diff_c = verticalStereo ? abs(temp[0][j].x - temp[1][j].x) : abs(temp[0][j].y - temp[1][j].y);
modules/calib3d/test/test_cameracalibration.cpp:                double diff_uc = verticalStereo ? abs(d.x) : abs(d.y);
modules/calib3d/test/test_decompose_projection.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_decompose_projection.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_decompose_projection.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_decompose_projection.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_decompose_projection.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_fundam.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_fundam.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_fundam.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_fundam.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_fundam.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_fundam.cpp:            fabs( cvDet(&matR) - 1 ) > 1e-3 )
modules/calib3d/test/test_fundam.cpp:        double t0 = fabs(f0[0]*x2*x1 + f0[1]*x2*y1 + f0[2]*x2 +
modules/calib3d/test/test_fundam.cpp:        double t = fabs(f[0]*x2*x1 + f[1]*x2*y1 + f[2]*x2 +
modules/calib3d/test/test_fundam.cpp:        double t0 = fabs(f0[0]*x2*x1 + f0[1]*x2*y1 + f0[2]*x2 +
modules/calib3d/test/test_fundam.cpp:        double t = fabs(f[0]*x2*x1 + f[1]*x2*y1 + f[2]*x2 +
modules/calib3d/test/test_chessboardgenerator.hpp:    mutable double cov;
modules/calib3d/test/test_chessboardgenerator.hpp:    mutable std::vector<Point3f> corners3d;
modules/calib3d/test/test_chesscorners_timing.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_chesscorners_timing.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_chesscorners_timing.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_chesscorners_timing.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_chesscorners_timing.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_homography.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_homography.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_homography.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_homography.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_homography.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/opencl/test_stereobm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/opencl/test_stereobm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/opencl/test_stereobm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/opencl/test_stereobm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/opencl/test_stereobm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_undistort.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_undistort.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_undistort.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_undistort.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_undistort.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_homography_decomp.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_homography_decomp.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_homography_decomp.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_homography_decomp.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_homography_decomp.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_affine3d_estimator.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_affine3d_estimator.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_affine3d_estimator.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_affine3d_estimator.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_affine3d_estimator.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_solvepnp_ransac.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_solvepnp_ransac.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_solvepnp_ransac.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_solvepnp_ransac.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_solvepnp_ransac.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_cameracalibration_tilt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_cameracalibration_tilt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_cameracalibration_tilt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_cameracalibration_tilt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_cameracalibration_tilt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_cameracalibration_tilt.cpp:    a uniformly distributed random variable in [-max max]
modules/calib3d/test/test_cameracalibration_tilt.cpp:    \param max limits for the random variables
modules/calib3d/test/test_cameracalibration_tilt.cpp:        std::abs(m_fovNormal[0].dot(m_fovCenter[0] - m_fovCenter[1])),
modules/calib3d/test/test_cameracalibration_tilt.cpp:        std::abs(m_fovNormal[0].dot(m_fovCenter[0] - m_fovCenter[2])));
modules/calib3d/test/test_cameracalibration_tilt.cpp:                    << "  rel. diff = " << abs(numericJacobian.at<double>(row,i) - jacobian.at<double>(row,i))/abs(numericJacobian.at<double>(row,i))
modules/calib3d/test/test_cameracalibration_tilt.cpp:        cv::Mat check = abs(jacobian(cv::Range::all(), cv::Range(0,6)) - numericJacobian(cv::Range::all(), cv::Range(0,6)))/
modules/calib3d/test/test_cameracalibration_tilt.cpp:            (1 + abs(jacobian(cv::Range::all(), cv::Range(0,6))));
modules/calib3d/test/test_cameracalibration_tilt.cpp:        // absolute difference for distortion and camera matrix
modules/calib3d/test/test_modelest.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_modelest.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_modelest.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_modelest.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_modelest.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/test/test_modelest.cpp:                        if (fabs(tangentVector_1.cross(tangentVector_2)) < eps)
modules/calib3d/test/test_compose_rt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/test/test_compose_rt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/test/test_compose_rt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/test/test_compose_rt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/test/test_compose_rt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/include/opencv2/calib3d/calib3d.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/include/opencv2/calib3d/calib3d.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/include/opencv2/calib3d/calib3d.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/include/opencv2/calib3d/calib3d.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/include/opencv2/calib3d/calib3d.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/include/opencv2/calib3d/calib3d_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/include/opencv2/calib3d/calib3d_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/include/opencv2/calib3d/calib3d_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/include/opencv2/calib3d/calib3d_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/include/opencv2/calib3d/calib3d_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/include/opencv2/calib3d/calib3d_c.h:    int speckleRange; // acceptable range of variation in window
modules/calib3d/include/opencv2/calib3d.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/include/opencv2/calib3d.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/include/opencv2/calib3d.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/include/opencv2/calib3d.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/include/opencv2/calib3d.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/include/opencv2/calib3d.hpp:point \f$(X, Y, Z)\f$ to a coordinate system, fixed with respect to the camera. The transformation above
modules/calib3d/include/opencv2/calib3d.hpp:So, the above model is extended as:
modules/calib3d/include/opencv2/calib3d.hpp:camera has been calibrated on images of 320 x 240 resolution, absolutely the same distortion
modules/calib3d/include/opencv2/calib3d.hpp:The functions below use the above model to do the following:
modules/calib3d/include/opencv2/calib3d.hpp:sequence of rotations about the three principle axes that results in the same orientation of an
modules/calib3d/include/opencv2/calib3d.hpp:object, eg. see @cite Slabaugh . Returned tree rotation matrices and corresponding three Euler angules
modules/calib3d/include/opencv2/calib3d.hpp:be used in OpenGL. Note, there is always more than one sequence of rotations about the three
modules/calib3d/include/opencv2/calib3d.hpp:principle axes that results in the same orientation of an object, eg. see @cite Slabaugh . Returned
modules/calib3d/include/opencv2/calib3d.hpp:@param confidence The probability that the algorithm produces a useful result.
modules/calib3d/include/opencv2/calib3d.hpp:-   **CV_CALIB_RATIONAL_MODEL** Coefficients k4, k5, and k6 are enabled. To provide the
modules/calib3d/include/opencv2/calib3d.hpp:-   **CALIB_THIN_PRISM_MODEL** Coefficients s1, s2, s3 and s4 are enabled. To provide the
modules/calib3d/include/opencv2/calib3d.hpp:-   **CALIB_TILTED_MODEL** Coefficients tauX and tauY are enabled. To provide the
modules/calib3d/include/opencv2/calib3d.hpp:by using an object with a known geometry and easily detectable feature points. Such an object is
modules/calib3d/include/opencv2/calib3d.hpp:-   Compute the initial intrinsic parameters (the option only available for planar calibration
modules/calib3d/include/opencv2/calib3d.hpp:    then you have probably used patternSize=cvSize(rows,cols) instead of using
modules/calib3d/include/opencv2/calib3d.hpp:-   **CV_CALIB_RATIONAL_MODEL** Enable coefficients k4, k5, and k6. To provide the backward
modules/calib3d/include/opencv2/calib3d.hpp:-   **CALIB_THIN_PRISM_MODEL** Coefficients s1, s2, s3 and s4 are enabled. To provide the
modules/calib3d/include/opencv2/calib3d.hpp:-   **CALIB_TILTED_MODEL** Coefficients tauX and tauY are enabled. To provide the
modules/calib3d/include/opencv2/calib3d.hpp:reasonable assumption.
modules/calib3d/include/opencv2/calib3d.hpp:points in all the available views from both cameras. The function returns the final value of the
modules/calib3d/include/opencv2/calib3d.hpp:@param alpha Free scaling parameter. If it is -1 or absent, the function performs the default
modules/calib3d/include/opencv2/calib3d.hpp:    mainly in vertical direction (and probably a bit in the horizontal direction too). The epipolar
modules/calib3d/include/opencv2/calib3d.hpp:image pixels if there is valuable information in the corners alpha=1 , or get something in between.
modules/calib3d/include/opencv2/calib3d.hpp:@param param2 Parameter used for the RANSAC or LMedS methods only. It specifies a desirable level
modules/calib3d/include/opencv2/calib3d.hpp:of confidence (probability) that the estimated matrix is correct.
modules/calib3d/include/opencv2/calib3d.hpp:The function calculates the fundamental matrix using one of four methods listed above and returns
modules/calib3d/include/opencv2/calib3d.hpp:@param prob Parameter used for the RANSAC or LMedS methods only. It specifies a desirable level of
modules/calib3d/include/opencv2/calib3d.hpp:confidence (probability) that the estimated matrix is correct.
modules/calib3d/include/opencv2/calib3d.hpp:@param prob Parameter used for the RANSAC or LMedS methods only. It specifies a desirable level of
modules/calib3d/include/opencv2/calib3d.hpp:confidence (probability) that the estimated matrix is correct.
modules/calib3d/include/opencv2/calib3d.hpp:This function differs from the one above that it computes camera matrix from focal length and
modules/calib3d/include/opencv2/calib3d.hpp:This function differs from the one above that it computes camera matrix from focal length and
modules/calib3d/include/opencv2/calib3d.hpp:invalidated if point correspondences are available by applying positive depth constraint (all points
modules/calib3d/include/opencv2/calib3d.hpp:    pixels. The algorithm requires P2 \> P1 . See stereo_match.cpp sample where some reasonably good
modules/calib3d/include/opencv2/calib3d.hpp:    disparity check. Set it to a non-positive value to disable the check.
modules/calib3d/include/opencv2/calib3d.hpp:    and invalidate. Set it to 0 to disable speckle filtering. Otherwise, set it somewhere in the
modules/calib3d/include/opencv2/calib3d.hpp:    set StereoSGBM::numDisparities at minimum. The second constructor enables you to set each parameter
modules/calib3d/perf/perf_pnp.cpp:                testing::Values(5, 3*9, 7*13), //TODO: find why results on 4 points are too unstable
modules/calib3d/perf/perf_stereosgbm.cpp: *  *Redistributions of source code must retain the above copyright notice,
modules/calib3d/perf/perf_stereosgbm.cpp: *  * Redistributions in binary form must reproduce the above copyright notice,
modules/calib3d/perf/perf_stereosgbm.cpp: *  warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/perf/perf_stereosgbm.cpp: *  In no event shall copyright holders or contributors be liable for any direct,
modules/calib3d/perf/perf_stereosgbm.cpp: *  and on any theory of liability, whether in contract, strict liability,
modules/calib3d/perf/opencl/perf_stereobm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/perf/opencl/perf_stereobm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/perf/opencl/perf_stereobm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/perf/opencl/perf_stereobm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/perf/opencl/perf_stereobm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/perf/perf_cicrlesGrid.cpp:        FAIL() << "Unable to load source image " << filename;
modules/calib3d/src/circlesgrid.hpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/circlesgrid.hpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/circlesgrid.hpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/circlesgrid.hpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/circlesgrid.hpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/circlesgrid.hpp:  void findCandidateHoles(std::vector<size_t> &above, std::vector<size_t> &below, bool addRow, cv::Point2f basisVec,
modules/calib3d/src/circlesgrid.hpp:                          std::vector<size_t> &aboveSeeds, std::vector<size_t> &belowSeeds);
modules/calib3d/src/circlesgrid.hpp:  static void insertWinner(float aboveConfidence, float belowConfidence, float minConfidence, bool addRow,
modules/calib3d/src/circlesgrid.hpp:                           const std::vector<size_t> &above, const std::vector<size_t> &below, std::vector<std::vector<
modules/calib3d/src/epnp.cpp:  double abt[3 * 3], abt_d[3], abt_u[3 * 3], abt_v[3 * 3];
modules/calib3d/src/epnp.cpp:  CvMat ABt   = cvMat(3, 3, CV_64F, abt);
modules/calib3d/src/epnp.cpp:  CvMat ABt_D = cvMat(3, 1, CV_64F, abt_d);
modules/calib3d/src/epnp.cpp:  CvMat ABt_U = cvMat(3, 3, CV_64F, abt_u);
modules/calib3d/src/epnp.cpp:  CvMat ABt_V = cvMat(3, 3, CV_64F, abt_v);
modules/calib3d/src/epnp.cpp:      abt[3 * j    ] += (pc[j] - pc0[j]) * (pw[0] - pw0[0]);
modules/calib3d/src/epnp.cpp:      abt[3 * j + 1] += (pc[j] - pc0[j]) * (pw[1] - pw0[1]);
modules/calib3d/src/epnp.cpp:      abt[3 * j + 2] += (pc[j] - pc0[j]) * (pw[2] - pw0[2]);
modules/calib3d/src/epnp.cpp:      R[i][j] = dot(abt_u + 3 * i, abt_v + 3 * j);
modules/calib3d/src/epnp.cpp:    double * ppAik1 = ppAkk, eta = fabs(*ppAik1);
modules/calib3d/src/epnp.cpp:      double elt = fabs(*ppAik1);
modules/calib3d/src/quadsubpix.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/quadsubpix.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/quadsubpix.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/quadsubpix.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/quadsubpix.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/five-point.cpp:        * Redistributions of source code must retain the above copyright
modules/calib3d/src/five-point.cpp:        * Redistributions in binary form must reproduce the above copyright
modules/calib3d/src/five-point.cpp:            if (fabs(roots[i].im) > 1e-10) continue;
modules/calib3d/src/five-point.cpp:            if (fabs(xy1.at<double>(2)) < 1e-10) continue;
modules/calib3d/src/fisheye.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/fisheye.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/fisheye.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/fisheye.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/fisheye.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/fisheye.cpp:        ww *= acos(fabs(t[0])/cv::norm(t))/nw;
modules/calib3d/src/fisheye.cpp:            double abs_max  = 0;
modules/calib3d/src/fisheye.cpp:                if (fabs(ekk.at<double>(i)) > abs_max)
modules/calib3d/src/fisheye.cpp:                    abs_max = fabs(ekk.at<double>(i));
modules/calib3d/src/fisheye.cpp:            CV_Assert(abs_max < threshold); // bad stereo pair
modules/calib3d/src/fisheye.cpp:    double scxx = mean(abs(ax))[0];
modules/calib3d/src/fisheye.cpp:    double scyy = mean(abs(ay))[0];
modules/calib3d/src/fisheye.cpp:void cv::internal::JRodriguesMatlab(const Mat& src, Mat& dst)
modules/calib3d/src/fisheye.cpp:    JRodriguesMatlab(dR1dom1, dR1dom1);
modules/calib3d/src/fisheye.cpp:    JRodriguesMatlab(dR2dom2, dR2dom2);
modules/calib3d/src/fisheye.cpp:    JRodriguesMatlab(dom3dR3, dom3dR3);
modules/calib3d/src/upnp.cpp:// * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/upnp.cpp:// * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/upnp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/upnp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/upnp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/upnp.cpp:  double abt[3 * 3], abt_d[3], abt_u[3 * 3], abt_v[3 * 3];
modules/calib3d/src/upnp.cpp:  Mat ABt   = Mat(3, 3, CV_64F, abt);
modules/calib3d/src/upnp.cpp:  Mat ABt_D = Mat(3, 1, CV_64F, abt_d);
modules/calib3d/src/upnp.cpp:  Mat ABt_U = Mat(3, 3, CV_64F, abt_u);
modules/calib3d/src/upnp.cpp:  Mat ABt_V = Mat(3, 3, CV_64F, abt_v);
modules/calib3d/src/upnp.cpp:      abt[3 * j    ] += (pc[j] - pc0[j]) * (pw[0] - pw0[0]);
modules/calib3d/src/upnp.cpp:      abt[3 * j + 1] += (pc[j] - pc0[j]) * (pw[1] - pw0[1]);
modules/calib3d/src/upnp.cpp:      abt[3 * j + 2] += (pc[j] - pc0[j]) * (pw[2] - pw0[2]);
modules/calib3d/src/upnp.cpp:      R[i][j] = dot(abt_u + 3 * i, abt_v + 3 * j);
modules/calib3d/src/upnp.cpp:  betas[0] = sqrt( abs( x.at<double>(0) ) );
modules/calib3d/src/upnp.cpp:  efs[0] = sqrt( abs( x.at<double>(1) ) ) / betas[0];
modules/calib3d/src/upnp.cpp:    independent_term[0] = log( abs( betas[ combination[i][0]-1 ] ) );
modules/calib3d/src/upnp.cpp:    independent_term[1] = log( abs( betas[ combination[i][1]-1 ] ) );
modules/calib3d/src/upnp.cpp:    independent_term[2] = log( abs( betas[ combination[i][2]-1 ] ) );
modules/calib3d/src/upnp.cpp:    solutions[i][2] = abs( S.at<double>(2) );
modules/calib3d/src/upnp.cpp:    double * ppAik1 = ppAkk, eta = fabs(*ppAik1);
modules/calib3d/src/upnp.cpp:      double elt = fabs(*ppAik1);
modules/calib3d/src/solvepnp.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/solvepnp.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/solvepnp.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/solvepnp.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/solvepnp.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/stereosgbm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/stereosgbm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/stereosgbm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/stereosgbm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/stereosgbm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/stereosgbm.cpp:                            PixType* buffer, const PixType* tab,
modules/calib3d/src/stereosgbm.cpp:                            int tabOfs, int )
modules/calib3d/src/stereosgbm.cpp:    tab += tabOfs;
modules/calib3d/src/stereosgbm.cpp:        prow2[width*c] = prow2[width*c + width-1] = tab[0];
modules/calib3d/src/stereosgbm.cpp:            prow1[x] = tab[(row1[x+1] - row1[x-1])*2 + row1[x+n1+1] - row1[x+n1-1] + row1[x+s1+1] - row1[x+s1-1]];
modules/calib3d/src/stereosgbm.cpp:            prow2[width-1-x] = tab[(row2[x+1] - row2[x-1])*2 + row2[x+n2+1] - row2[x+n2-1] + row2[x+s2+1] - row2[x+s2-1]];
modules/calib3d/src/stereosgbm.cpp:            prow1[x] = tab[(row1[x*3+3] - row1[x*3-3])*2 + row1[x*3+n1+3] - row1[x*3+n1-3] + row1[x*3+s1+3] - row1[x*3+s1-3]];
modules/calib3d/src/stereosgbm.cpp:            prow1[x+width] = tab[(row1[x*3+4] - row1[x*3-2])*2 + row1[x*3+n1+4] - row1[x*3+n1-2] + row1[x*3+s1+4] - row1[x*3+s1-2]];
modules/calib3d/src/stereosgbm.cpp:            prow1[x+width*2] = tab[(row1[x*3+5] - row1[x*3-1])*2 + row1[x*3+n1+5] - row1[x*3+n1-1] + row1[x*3+s1+5] - row1[x*3+s1-1]];
modules/calib3d/src/stereosgbm.cpp:            prow2[width-1-x] = tab[(row2[x*3+3] - row2[x*3-3])*2 + row2[x*3+n2+3] - row2[x*3+n2-3] + row2[x*3+s2+3] - row2[x*3+s2-3]];
modules/calib3d/src/stereosgbm.cpp:            prow2[width-1-x+width] = tab[(row2[x*3+4] - row2[x*3-2])*2 + row2[x*3+n2+4] - row2[x*3+n2-2] + row2[x*3+s2+4] - row2[x*3+s2-2]];
modules/calib3d/src/stereosgbm.cpp:            prow2[width-1-x+width*2] = tab[(row2[x*3+5] - row2[x*3-1])*2 + row2[x*3+n2+5] - row2[x*3+n2-1] + row2[x*3+s2+5] - row2[x*3+s2-1]];
modules/calib3d/src/stereosgbm.cpp:                    cost[x*D + d] = (CostType)(cost[x*D + d] + (CostType)std::abs(u - v));
modules/calib3d/src/stereosgbm.cpp:    static const uchar LSBTab[] =
modules/calib3d/src/stereosgbm.cpp:    PixType clipTab[TAB_SIZE];
modules/calib3d/src/stereosgbm.cpp:        clipTab[k] = (PixType)(std::min(std::max(k - TAB_OFS, -ftzero), ftzero) + ftzero);
modules/calib3d/src/stereosgbm.cpp:                        calcPixelCostBT( img1, img2, k, minD, maxD, pixDiff, tempBuf, clipTab, TAB_OFS, ftzero );
modules/calib3d/src/stereosgbm.cpp:                            bestDisp = bestDispBuf[LSBTab[idx]];
modules/calib3d/src/stereosgbm.cpp:                        if( Sp[d]*(100 - uniquenessRatio) < minS*100 && std::abs(bestDisp - d) > 1 )
modules/calib3d/src/stereosgbm.cpp:                        //   fit parabola into (x1=d-1, y1=Sp[d-1]), (x2=d, y2=Sp[d]), (x3=d+1, y3=Sp[d+1])
modules/calib3d/src/stereosgbm.cpp:                        //   then find minimum of the parabola.
modules/calib3d/src/stereosgbm.cpp:                    if( 0 <= _x && _x < width && disp2ptr[_x] >= minD && std::abs(disp2ptr[_x] - _d) > disp12MaxDiff &&
modules/calib3d/src/stereosgbm.cpp:                       0 <= x_ && x_ < width && disp2ptr[x_] >= minD && std::abs(disp2ptr[x_] - d_) > disp12MaxDiff )
modules/calib3d/src/stereosgbm.cpp:    PixType* clipTab;
modules/calib3d/src/stereosgbm.cpp:    SGBM3WayMainLoop(Mat *_buffers, const Mat& _img1, const Mat& _img2, Mat* _dst_disp, const StereoSGBMParams& params, PixType* _clipTab, int _nstripes, int _stripe_overlap);
modules/calib3d/src/stereosgbm.cpp:SGBM3WayMainLoop::SGBM3WayMainLoop(Mat *_buffers, const Mat& _img1, const Mat& _img2, Mat* _dst_disp, const StereoSGBMParams& params, PixType* _clipTab, int _nstripes, int _stripe_overlap):
modules/calib3d/src/stereosgbm.cpp:buffers(_buffers), img1(&_img1), img2(&_img2), dst_disp(_dst_disp), clipTab(_clipTab)
modules/calib3d/src/stereosgbm.cpp:            calcPixelCostBT( *img1, *img2, k, minD, maxD, pixDiff, tmpBuf, clipTab, TAB_OFS, ftzero );
modules/calib3d/src/stereosgbm.cpp:                    if( horPassCostVolume[x+d]*(100 - uniquenessRatio) < min_cost*100 && std::abs(d - best_d) > 1 )
modules/calib3d/src/stereosgbm.cpp:                //   fit parabola into (x1=d-1, y1=Sp[d-1]), (x2=d, y2=Sp[d]), (x3=d+1, y3=Sp[d+1])
modules/calib3d/src/stereosgbm.cpp:                //   then find minimum of the parabola.
modules/calib3d/src/stereosgbm.cpp:            if( 0 <= _x && _x < width && disp2Buf[_x] >= minD && std::abs(disp2Buf[_x] - _d) > disp12MaxDiff &&
modules/calib3d/src/stereosgbm.cpp:                0 <= x_ && x_ < width && disp2Buf[x_] >= minD && std::abs(disp2Buf[x_] - d_) > disp12MaxDiff )
modules/calib3d/src/stereosgbm.cpp:    // precompute a lookup table for the raw matching cost computation:
modules/calib3d/src/stereosgbm.cpp:    PixType* clipTab = new PixType[TAB_SIZE];
modules/calib3d/src/stereosgbm.cpp:        clipTab[k] = (PixType)(std::min(std::max(k - TAB_OFS, -ftzero), ftzero) + ftzero);
modules/calib3d/src/stereosgbm.cpp:    parallel_for_(Range(0,nstripes),SGBM3WayMainLoop(buffers,img1,img2,dst_disp,params,clipTab,nstripes,stripe_overlap));
modules/calib3d/src/stereosgbm.cpp:    delete[] clipTab;
modules/calib3d/src/stereosgbm.cpp:    int* labels = (int*)buf;
modules/calib3d/src/stereosgbm.cpp:    buf += npixels*sizeof(labels[0]);
modules/calib3d/src/stereosgbm.cpp:    int curlabel = 0;
modules/calib3d/src/stereosgbm.cpp:    // clear out label assignments
modules/calib3d/src/stereosgbm.cpp:    memset(labels, 0, npixels*sizeof(labels[0]));
modules/calib3d/src/stereosgbm.cpp:        int* ls = labels + width*i;
modules/calib3d/src/stereosgbm.cpp:                if( ls[j] )     // has a label, check for bad label
modules/calib3d/src/stereosgbm.cpp:                // no label, assign and propagate
modules/calib3d/src/stereosgbm.cpp:                    curlabel++; // next label
modules/calib3d/src/stereosgbm.cpp:                    ls[j] = curlabel;
modules/calib3d/src/stereosgbm.cpp:                        int* lpp = labels + width*p.y + p.x;
modules/calib3d/src/stereosgbm.cpp:                        if( p.y < height-1 && !lpp[+width] && dpp[+dstep] != newVal && std::abs(dp - dpp[+dstep]) <= maxDiff )
modules/calib3d/src/stereosgbm.cpp:                            lpp[+width] = curlabel;
modules/calib3d/src/stereosgbm.cpp:                        if( p.y > 0 && !lpp[-width] && dpp[-dstep] != newVal && std::abs(dp - dpp[-dstep]) <= maxDiff )
modules/calib3d/src/stereosgbm.cpp:                            lpp[-width] = curlabel;
modules/calib3d/src/stereosgbm.cpp:                        if( p.x < width-1 && !lpp[+1] && dpp[+1] != newVal && std::abs(dp - dpp[+1]) <= maxDiff )
modules/calib3d/src/stereosgbm.cpp:                            lpp[+1] = curlabel;
modules/calib3d/src/stereosgbm.cpp:                        if( p.x > 0 && !lpp[-1] && dpp[-1] != newVal && std::abs(dp - dpp[-1]) <= maxDiff )
modules/calib3d/src/stereosgbm.cpp:                            lpp[-1] = curlabel;
modules/calib3d/src/stereosgbm.cpp:                    // assign label type
modules/calib3d/src/stereosgbm.cpp:                        rtype[ls[j]] = 1;   // small region label
modules/calib3d/src/stereosgbm.cpp:                        rtype[ls[j]] = 0;   // large region label
modules/calib3d/src/stereosgbm.cpp:            if( (0 <= x0 && x0 < cols && disp2buf[x0] > INVALID_DISP_SCALED && std::abs(disp2buf[x0] - d) > disp12MaxDiff) &&
modules/calib3d/src/stereosgbm.cpp:                (0 <= x1 && x1 < cols && disp2buf[x1] > INVALID_DISP_SCALED && std::abs(disp2buf[x1] - d) > disp12MaxDiff) )
modules/calib3d/src/compat_ptsetreg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/compat_ptsetreg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/compat_ptsetreg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/compat_ptsetreg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/compat_ptsetreg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/polynom_solver.cpp:  double AD = pow(fabs(R) + sqrt(D), 1.0 / 3.0) * (R > 0 ? 1 : (R < 0 ? -1 : 0));
modules/calib3d/src/circlesgrid.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/circlesgrid.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/circlesgrid.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/circlesgrid.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/circlesgrid.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/circlesgrid.cpp:      float val = fabs(tangentVectors[i].dot(tangentVectors[j]));
modules/calib3d/src/circlesgrid.cpp:  if(abs(maxLoc.x - maxLoc.y) == diffBetweenFalseLines)
modules/calib3d/src/circlesgrid.cpp:void CirclesGridFinder::findCandidateHoles(std::vector<size_t> &above, std::vector<size_t> &below, bool addRow, Point2f basisVec,
modules/calib3d/src/circlesgrid.cpp:                                           std::vector<size_t> &aboveSeeds, std::vector<size_t> &belowSeeds)
modules/calib3d/src/circlesgrid.cpp:  above.clear();
modules/calib3d/src/circlesgrid.cpp:  aboveSeeds.clear();
modules/calib3d/src/circlesgrid.cpp:  findCandidateLine(above, 0, addRow, -basisVec, aboveSeeds);
modules/calib3d/src/circlesgrid.cpp:  CV_Assert( below.size() == above.size() );
modules/calib3d/src/circlesgrid.cpp:  CV_Assert( belowSeeds.size() == aboveSeeds.size() );
modules/calib3d/src/circlesgrid.cpp:void CirclesGridFinder::insertWinner(float aboveConfidence, float belowConfidence, float minConfidence, bool addRow,
modules/calib3d/src/circlesgrid.cpp:                                     const std::vector<size_t> &above, const std::vector<size_t> &below,
modules/calib3d/src/circlesgrid.cpp:  if (aboveConfidence < minConfidence && belowConfidence < minConfidence)
modules/calib3d/src/circlesgrid.cpp:    if (aboveConfidence >= belowConfidence)
modules/calib3d/src/circlesgrid.cpp:      if (!areCentersNew(above, holes))
modules/calib3d/src/circlesgrid.cpp:      holes.insert(holes.begin(), above);
modules/calib3d/src/circlesgrid.cpp:    if (aboveConfidence >= belowConfidence)
modules/calib3d/src/circlesgrid.cpp:      if (!areCentersNew(above, holes))
modules/calib3d/src/circlesgrid.cpp:        holes[i].insert(holes[i].begin(), above[i]);
modules/calib3d/src/circlesgrid.cpp:  std::vector<size_t> above, below, aboveSeeds, belowSeeds;
modules/calib3d/src/circlesgrid.cpp:  findCandidateHoles(above, below, addRow, basisVec, aboveSeeds, belowSeeds);
modules/calib3d/src/circlesgrid.cpp:  float aboveConfidence = computeGraphConfidence(basisGraphs, addRow, above, aboveSeeds);
modules/calib3d/src/circlesgrid.cpp:  insertWinner(aboveConfidence, belowConfidence, parameters.minGraphConfidence, addRow, above, below, holes);
modules/calib3d/src/circlesgrid.cpp:  Mat bestLabels;
modules/calib3d/src/circlesgrid.cpp:  kmeans(Mat(samples).reshape(1, 0), clustersCount, bestLabels, termCriteria, parameters.kmeansAttempts,
modules/calib3d/src/circlesgrid.cpp:    int maxIdx = (fabs(centers.at<float> (i, 0)) < fabs(centers.at<float> (i, 1)));
modules/calib3d/src/circlesgrid.cpp:    int label = bestLabels.at<int> (k, 0);
modules/calib3d/src/circlesgrid.cpp:    if (label == basisIndices[0])
modules/calib3d/src/circlesgrid.cpp:    if (label == basisIndices[1])
modules/calib3d/src/stereobm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/stereobm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/stereobm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/stereobm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/stereobm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/stereobm.cpp:    uchar tab[TABSZ];
modules/calib3d/src/stereobm.cpp:        tab[x] = (uchar)(x - OFS < -ftzero ? 0 : x - OFS > ftzero ? ftzero*2 : x - OFS + ftzero);
modules/calib3d/src/stereobm.cpp:        dptr[0] = tab[val + OFS];
modules/calib3d/src/stereobm.cpp:            dptr[x] = tab[val + OFS];
modules/calib3d/src/stereobm.cpp:        dptr[x] = tab[val + OFS];
modules/calib3d/src/stereobm.cpp:    uchar tab[TABSZ];
modules/calib3d/src/stereobm.cpp:        tab[x] = (uchar)(x - OFS < -ftzero ? 0 : x - OFS > ftzero ? ftzero*2 : x - OFS + ftzero);
modules/calib3d/src/stereobm.cpp:    uchar val0 = tab[0 + OFS];
modules/calib3d/src/stereobm.cpp:            int v0 = tab[d0 + d1*2 + d2 + OFS];
modules/calib3d/src/stereobm.cpp:            int v1 = tab[d1 + d2*2 + d3 + OFS];
modules/calib3d/src/stereobm.cpp:    uchar tab[TABSZ];
modules/calib3d/src/stereobm.cpp:        tab[x] = (uchar)std::abs(x - ftzero);
modules/calib3d/src/stereobm.cpp:            htext[y] += tab[lval];
modules/calib3d/src/stereobm.cpp:            htext[y] += tab[lval] - tab[lptr_sub[0]];
modules/calib3d/src/stereobm.cpp:                d = p + n - 2*sad[mind] + std::abs(p - n);
modules/calib3d/src/stereobm.cpp:    uchar tab[TABSZ];
modules/calib3d/src/stereobm.cpp:        tab[x] = (uchar)std::abs(x - ftzero);
modules/calib3d/src/stereobm.cpp:                int16x8_t diff = vabdq_s16 (lv, rv);
modules/calib3d/src/stereobm.cpp:                int diff = std::abs(lval - rptr[d]);
modules/calib3d/src/stereobm.cpp:            htext[y] += tab[lval];
modules/calib3d/src/stereobm.cpp:                int16x8_t diff = vabdq_s16 (lv, rv);
modules/calib3d/src/stereobm.cpp:                int diff = std::abs(lval - rptr[d]);
modules/calib3d/src/stereobm.cpp:            htext[y] += tab[lval] - tab[lptr_sub[0]];
modules/calib3d/src/stereobm.cpp:                d = p + n - 2*sad[mind] + std::abs(p - n);
modules/calib3d/src/stereobm.cpp:        double N0 = 8000000 / (useShorts ? 1 : 4);  // approx tbb's min number instructions reasonable for one thread
modules/calib3d/src/rho.cpp:   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/rho.cpp:   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/rho.cpp: warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/rho.cpp: In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/rho.cpp: and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/rho.cpp:     * Ensure that the estimator context's internal table for the non-randomness
modules/calib3d/src/rho.cpp:     * criterion is at least of the given size, and uses the given beta. The table
modules/calib3d/src/rho.cpp:     * A value of N of 0 requests deallocation of the table.
modules/calib3d/src/rho.cpp:     * @param [in] N     If 0, deallocate internal table. If > 0, ensure that the
modules/calib3d/src/rho.cpp:     *                   internal table is of at least this size, reallocating if
modules/calib3d/src/rho.cpp:     * @param [in] beta  The beta-factor to use within the table.
modules/calib3d/src/rho.cpp:     * CoRR, abs/1402.6246, 2014.
modules/calib3d/src/rho.cpp:        std::vector<unsigned> tbl; /* Non-Randomness: Table */
modules/calib3d/src/rho.cpp:    inline int    isNREnabled(void);
modules/calib3d/src/rho.cpp:    inline int    isRefineEnabled(void);
modules/calib3d/src/rho.cpp:    inline int    isFinalRefineEnabled(void);
modules/calib3d/src/rho.cpp:     * For now, only the generic C implementation is available. In the future,
modules/calib3d/src/rho.cpp: * External access to non-randomness table resize.
modules/calib3d/src/rho.cpp: * Private copy constructor for RHO_HEST_REFC. Disabled.
modules/calib3d/src/rho.cpp: * - Optionally, the non-randomness criterion table
modules/calib3d/src/rho.cpp: * Ensure that the estimator context's internal table for non-randomness
modules/calib3d/src/rho.cpp: * criterion is at least of the given size, and uses the given beta. The table
modules/calib3d/src/rho.cpp: * A value of N of 0 requests deallocation of the table.
modules/calib3d/src/rho.cpp: * @param [in] N     If 0, deallocate internal table. If > 0, ensure that the
modules/calib3d/src/rho.cpp: *                   internal table is of at least this size, reallocating if
modules/calib3d/src/rho.cpp: * @param [in] beta  The beta-factor to use within the table.
modules/calib3d/src/rho.cpp:    if(isFinalRefineEnabled() && canRefine()){
modules/calib3d/src/rho.cpp:    if(isNREnabled() && (arg.beta <= 0 || arg.beta >= 1)){
modules/calib3d/src/rho.cpp:     *     substruct and the sanity-checked N and beta arguments from above.
modules/calib3d/src/rho.cpp:    if(isNREnabled() && !ensureCapacity(arg.N, arg.beta)){
modules/calib3d/src/rho.cpp:     * number of fields if something in the above junk failed.
modules/calib3d/src/rho.cpp: * Deallocates per-run allocatable resources. Currently this consists only of
modules/calib3d/src/rho.cpp:        if(isRefineEnabled() && canRefine()){
modules/calib3d/src/rho.cpp:        if(isNREnabled()){
modules/calib3d/src/rho.cpp: * Check whether non-randomness criterion is enabled.
modules/calib3d/src/rho.cpp: * @return Zero if non-randomness criterion disabled; non-zero if not.
modules/calib3d/src/rho.cpp:inline int    RHO_HEST_REFC::isNREnabled(void){
modules/calib3d/src/rho.cpp: * Check whether best-model-so-far refinement is enabled.
modules/calib3d/src/rho.cpp: * @return Zero if best-model-so-far refinement disabled; non-zero if not.
modules/calib3d/src/rho.cpp:inline int    RHO_HEST_REFC::isRefineEnabled(void){
modules/calib3d/src/rho.cpp: * Check whether final-model refinement is enabled.
modules/calib3d/src/rho.cpp: * @return Zero if final-model refinement disabled; non-zero if not.
modules/calib3d/src/rho.cpp:inline int    RHO_HEST_REFC::isFinalRefineEnabled(void){
modules/calib3d/src/rho.cpp:     * If the matches' source points have common x and y coordinates, abort.
modules/calib3d/src/rho.cpp:    /* If the matches do not satisfy the strong geometric constraint, abort. */
modules/calib3d/src/rho.cpp:            double relChange = fabs(eval.delta - newDelta)/ eval.delta;
modules/calib3d/src/rho.cpp: * Epsilon:  Denotes the probability that a randomly chosen data point is
modules/calib3d/src/rho.cpp: * Delta:    Denotes the probability that a randomly chosen data point is
modules/calib3d/src/rho.cpp:     * Randomized RANSAC with Sequential Probability Ratio Test, ICCV 2005
modules/calib3d/src/rho.cpp:     * Randomized RANSAC with Sequential Probability Ratio Test, ICCV 2005
modules/calib3d/src/rho.cpp:     * Randomized RANSAC with Sequential Probability Ratio Test, ICCV 2005
modules/calib3d/src/rho.cpp: * acceptable best model, by checking whether it meets the minimum
modules/calib3d/src/rho.cpp: * Compute NR table entries [start, N) for given beta.
modules/calib3d/src/rho.cpp:    double atLeastOneOutlierProbability = 1.-pow(inlierRate, (double)sampleSize);
modules/calib3d/src/rho.cpp:    if(atLeastOneOutlierProbability>=1.){
modules/calib3d/src/rho.cpp:    }else if(atLeastOneOutlierProbability<=0.){
modules/calib3d/src/rho.cpp:         * Since 1-confidence (the probability of the model being based on at
modules/calib3d/src/rho.cpp:         * (1-inlierRate**sampleSize)**numIterations (the probability of picking
modules/calib3d/src/rho.cpp:        retVal = (unsigned)ceil(log(1.-confidence)/log(atLeastOneOutlierProbability));
modules/calib3d/src/rho.cpp: * NB This is separate from whether it is *enabled*.
modules/calib3d/src/rho.cpp:         * The system above is solved by Cholesky decomposition of a
modules/calib3d/src/rho.cpp:         * gain was positive. If the gain is above LM_GAIN_HI, damp less
modules/calib3d/src/rho.cpp:                break;/* FIXME: Most naive termination criterion imaginable. */
modules/calib3d/src/rho.cpp:        float iW      = fabs(W) > FLT_EPSILON ? 1.0f/W : 0;
modules/calib3d/src/rho.cpp:    return fabs(dL) < FLT_EPSILON ? dS : dS / dL;
modules/calib3d/src/rho.h:   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/rho.h:   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/rho.h: warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/rho.h: In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/rho.h: and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/rho.h: * Ensure that the estimator context's internal table for non-randomness
modules/calib3d/src/rho.h: * criterion is at least of the given size, and uses the given beta. The table
modules/calib3d/src/rho.h: * A value of N of 0 requests deallocation of the table.
modules/calib3d/src/rho.h: * @param [in] N     If 0, deallocate internal table. If > 0, ensure that the
modules/calib3d/src/rho.h: *                   internal table is of at least this size, reallocating if
modules/calib3d/src/rho.h: * @param [in] beta  The beta-factor to use within the table.
modules/calib3d/src/rho.h: *     - The confidence threshold. This corresponds to the probability of
modules/calib3d/src/rho.h: *     - The minimum number of inliers acceptable. Only a solution with at
modules/calib3d/src/rho.h: *           Ignored if non-randomness criterion disabled, otherwise must be
modules/calib3d/src/rho.h: *     - Optional flags to control the estimation. Available flags are:
modules/calib3d/src/rho.h: *               Enable non-randomness criterion. If set, the beta parameter
modules/calib3d/src/rho.h: *               Enable refinement of each new best model, as they are found.
modules/calib3d/src/rho.h: *               Enable one final refinement of the best model found before
modules/calib3d/src/rho.h: * The PROSAC estimator outputs a final estimate of H provided it was able to
modules/calib3d/src/rho.h: * The function returns the number of inliers if it was able to find a
modules/calib3d/src/dls.cpp:    // rotx: rotation about y-axis
modules/calib3d/src/dls.cpp:    // roty: rotation about y-axis
modules/calib3d/src/dls.cpp:    // rotz: rotation about y-axis
modules/calib3d/src/levmarq.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/levmarq.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/levmarq.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/levmarq.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/levmarq.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/levmarq.cpp:   This is translation to C++ of the Matlab's LMSolve package by Miroslav Balda.
modules/calib3d/src/levmarq.cpp:       * Redistributions of source code must retain the above copyright
modules/calib3d/src/levmarq.cpp:       * Redistributions in binary form must reproduce the above copyright
modules/calib3d/src/levmarq.cpp:            double R = (S - Sd)/(fabs(dS) > DBL_EPSILON ? dS : 1);
modules/calib3d/src/levmarq.cpp:                double nu = (Sd - S)/(fabs(t) > DBL_EPSILON ? t : 1) + 2;
modules/calib3d/src/levmarq.cpp:                        maxval = std::max(maxval, std::abs(Ap.at<double>(i,i)));
modules/calib3d/src/calibration.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/calibration.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/calibration.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/calibration.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/calibration.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/calibration.cpp:    This is stright-forward port v3 of Matlab calibration engine by Jean-Yves Bouguet
modules/calib3d/src/calibration.cpp:                if( fabs(rx) < fabs(ry) && fabs(rx) < fabs(rz) && (R[5] > 0) != (ry*rz > 0) )
modules/calib3d/src/calibration.cpp:    a[0] = std::sqrt(fabs(1./f[0]));
modules/calib3d/src/calibration.cpp:    a[4] = std::sqrt(fabs(1./f[1]));
modules/calib3d/src/calibration.cpp:        if( fabs(A(0, 1)) > 1e-5 )
modules/calib3d/src/calibration.cpp:        if( fabs(A(1, 0)) > 1e-5 || fabs(A(2, 0)) > 1e-5 ||
modules/calib3d/src/calibration.cpp:            fabs(A(2, 1)) > 1e-5 || fabs(A(2,2)-1) > 1e-5 )
modules/calib3d/src/calibration.cpp:        if( fabs(mean[2]) > 1e-5 || fabs(sdv[2]) > 1e-5 )
modules/calib3d/src/calibration.cpp:            cvConvertScale( &F, matF, fabs(f[8]) > 0 ? 1./f[8] : 1 );
modules/calib3d/src/calibration.cpp:    int idx = fabs(_t[0]) > fabs(_t[1]) ? 0 : 1;
modules/calib3d/src/calibration.cpp:        cvConvertScale(&ww, &ww, acos(fabs(c)/nt)/nw);
modules/calib3d/src/calibration.cpp:            if( fabs(m1[i].x*lines2[i].x +
modules/calib3d/src/calibration.cpp:                fabs(m2[i].x*lines1[i].x +
modules/calib3d/src/calibration.cpp:    double invf = fabs(e2[2]) < 1e-6*fabs(e2[0]) ? 0 : -e2[2]/e2[0];
modules/calib3d/src/calibration.cpp:            if( fabs(d-minDisparity) <= FLT_EPSILON )
modules/calib3d/src/calibration.cpp:    assert(fabs(matR[2][1]) < FLT_EPSILON);
modules/calib3d/src/calibration.cpp:    assert(fabs(matM[2][0]) < FLT_EPSILON);
modules/calib3d/src/calibration.cpp:    assert(fabs(matR[1][0]) < FLT_EPSILON);
modules/calib3d/src/calibration.cpp:    int idx = fabs(t12(0,0)) > fabs(t12(1,0)) ? 0 : 1;
modules/calib3d/src/calibration.cpp:    ww *= acos(fabs(c)/nt)/nw;
modules/calib3d/src/fisheye.hpp:void JRodriguesMatlab(const Mat& src, Mat& dst);
modules/calib3d/src/ptsetreg.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/ptsetreg.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/ptsetreg.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/ptsetreg.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/ptsetreg.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/opencl/stereobm.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/opencl/stereobm.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/opencl/stereobm.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/opencl/stereobm.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/opencl/stereobm.cl:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/opencl/stereobm.cl:            d_aprox = yp + yn - 2 * c + abs(yp - yn);
modules/calib3d/src/opencl/stereobm.cl:            costdiff += abs( left[0] - right[0] );
modules/calib3d/src/opencl/stereobm.cl:            costdiff += abs(left[i] - right[i]);
modules/calib3d/src/opencl/stereobm.cl:    uchar corrner1 = abs(left[0] - right[0]),
modules/calib3d/src/opencl/stereobm.cl:          corrner2 = abs(left[WSZ] - right[WSZ]),
modules/calib3d/src/opencl/stereobm.cl:          corrner3 = abs(left[idx2] - right[idx2]),
modules/calib3d/src/opencl/stereobm.cl:          corrner4 = abs(left[idx2 + WSZ] - right[idx2 + WSZ]);
modules/calib3d/src/opencl/stereobm.cl:                    costdiff += abs( left[0] - right[0] );
modules/calib3d/src/opencl/stereobm.cl:                    costdiff += abs( left[j] - right[j]);
modules/calib3d/src/compat_stereo.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/compat_stereo.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/compat_stereo.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/compat_stereo.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/compat_stereo.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/posit.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/posit.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/posit.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/posit.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/posit.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/posit.cpp:    /* init variables */
modules/calib3d/src/posit.cpp:                diff = MAX( diff, (float) fabs( imgVectors[i] - old ));
modules/calib3d/src/posit.cpp:                diff = MAX( diff, (float) fabs( imgVectors[N + i] - old ));
modules/calib3d/src/calibinit.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/calibinit.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/calibinit.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/calibinit.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/calibinit.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/calibinit.cpp:    Reliability additions and modifications made by Philip Gruebele.
modules/calib3d/src/calibinit.cpp:/** This structure stores information about the chessboard corner.*/
modules/calib3d/src/calibinit.cpp:/** This structure stores information about the chessboard quadrange.*/
modules/calib3d/src/calibinit.cpp:// of cvFindChessboardCornes that produces absolutely unordered sets of corners.
modules/calib3d/src/calibinit.cpp:            if( fabs(dx0) + fabs(dy0) < FLT_EPSILON )
modules/calib3d/src/calibinit.cpp:// if we found too many connect quads, remove those which probably do not belong.
modules/calib3d/src/calibinit.cpp:            double hull_area = fabs(cvContourArea(hull, CV_WHOLE_SEQ));
modules/calib3d/src/calibinit.cpp:    // Scan the array for a first unlabeled quad
modules/calib3d/src/calibinit.cpp:                double area = fabs(cvContourArea(dst_contour, CV_WHOLE_SEQ));
modules/calib3d/src/p3p.cpp:    double ab = a * b, a_2 = 2*a;
modules/calib3d/src/p3p.cpp:    double A = -2 * b + b2 + a2 + 1 + ab*(2 - r2) - a_2;
modules/calib3d/src/p3p.cpp:    double B = q*(-2*(ab + a2 + 1 - b) + r2*ab + a_4) + pr*(b - b2 + ab);
modules/calib3d/src/p3p.cpp:    double C = q2 + b2*(r2 + p2 - 2) - b*(p2 + pqr) - ab*(r2 + pqr) + (a2 - a_2)*(2 + q2) + 2;
modules/calib3d/src/p3p.cpp:    double D = pr*(ab-b2+b) + q*((p2-2)*b + 2 * (ab - a2) + a_4 - 2);
modules/calib3d/src/p3p.cpp:    double E = 1 + 2*(b - a - ab) + b2 - b*p2 + a2;
modules/calib3d/src/p3p.cpp:            (((r3*(a2 + ab*(2 - r2) - a_2 + b2 - 2*b + 1)) * x +
modules/calib3d/src/p3p.cpp:            (r3q*(2*(b-a2) + a_4 + ab*(r2 - 2) - 2) + pr2*(1 + a2 + 2*(ab-a-b) + r2*(b - b2) + b2))) * x2 +
modules/calib3d/src/p3p.cpp:            (r3*(q2*(1-2*a+a2) + r2*(b2-ab) - a_4 + 2*(a2 - b2) + 2) + r*p2*(b2 + 2*(ab - b - a) + 1 + a2) + pr2*q*(a_4 + 2*(b - ab - a2) - 2 - r2*b)) * x +
modules/calib3d/src/p3p.cpp:            2*r3q*(a_2 - b - a2 + ab - 1) + pr2*(q2 - a_4 + 2*(a2 - b2) + r2*b + q2*(a2 - a_2) + 2) +
modules/calib3d/src/p3p.cpp:            p2*(p*(2*(ab - a - b) + a2 + b2 + 1) + 2*q*r*(b + a_2 - a2 - ab - 1)));
modules/calib3d/src/p3p.cpp:        double sum = fabs(A[1]) + fabs(A[2]) + fabs(A[3]) + fabs(A[6]) + fabs(A[7]) + fabs(A[11]);
modules/calib3d/src/p3p.cpp:                double eps_machine = 100.0 * fabs(Aij);
modules/calib3d/src/p3p.cpp:                if ( iter > 3 && fabs(D[i]) + eps_machine == fabs(D[i]) && fabs(D[j]) + eps_machine == fabs(D[j]) )
modules/calib3d/src/p3p.cpp:                else if (fabs(Aij) > tresh) {
modules/calib3d/src/p3p.cpp:                    if (fabs(hh) + eps_machine == fabs(hh))
modules/calib3d/src/p3p.cpp:                        t = 1.0 / (fabs(theta) + sqrt(1.0 + theta * theta));
modules/calib3d/src/upnp.h:// * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/upnp.h:// * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/upnp.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/upnp.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/upnp.h:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/checkchessboard.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/checkchessboard.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/checkchessboard.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/checkchessboard.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/checkchessboard.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/dls.h:        if (std::abs(yr) > std::abs(yi)) {
modules/calib3d/src/dls.h:                norm = norm + std::abs(H[i][j]);
modules/calib3d/src/dls.h:                s = std::abs(H[l - 1][l - 1]) + std::abs(H[l][l]);
modules/calib3d/src/dls.h:                if (std::abs(H[l][l - 1]) < eps * s) {
modules/calib3d/src/dls.h:                z = std::sqrt(std::abs(q));
modules/calib3d/src/dls.h:                    s = std::abs(x) + std::abs(z);
modules/calib3d/src/dls.h:                    s = std::abs(H[n1][n1 - 1]) + std::abs(H[n1 - 1][n1 - 2]);
modules/calib3d/src/dls.h:                    s = std::abs(p) + std::abs(q) + std::abs(r);
modules/calib3d/src/dls.h:                    if (std::abs(H[m][m - 1]) * (std::abs(q) + std::abs(r)) < eps * (std::abs(p)
modules/calib3d/src/dls.h:                                                                                     * (std::abs(H[m - 1][m - 1]) + std::abs(z) + std::abs(
modules/calib3d/src/dls.h:                        x = std::abs(p) + std::abs(q) + std::abs(r);
modules/calib3d/src/dls.h:                            if (std::abs(x) > std::abs(z)) {
modules/calib3d/src/dls.h:                        t = std::abs(H[i][n1]);
modules/calib3d/src/dls.h:                if (std::abs(H[n1][n1 - 1]) > std::abs(H[n1 - 1][n1])) {
modules/calib3d/src/dls.h:                                vr = eps * norm * (std::abs(w) + std::abs(q) + std::abs(x)
modules/calib3d/src/dls.h:                                                   + std::abs(y) + std::abs(z));
modules/calib3d/src/dls.h:                            if (std::abs(x) > (std::abs(z) + std::abs(q))) {
modules/calib3d/src/dls.h:                        t = std::max(std::abs(H[i][n1 - 1]), std::abs(H[i][n1]));
modules/calib3d/src/dls.h:                scale = scale + std::abs(H[i][m - 1]);
modules/calib3d/src/homography_decomp.cpp: //   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/homography_decomp.cpp: //   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/homography_decomp.cpp: // warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/homography_decomp.cpp: // In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/homography_decomp.cpp: // and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/homography_decomp.cpp:    return (fabs(determinant(R) - 1.0) < epsilon);
modules/calib3d/src/homography_decomp.cpp:    double nS00 = abs(S(0, 0));
modules/calib3d/src/homography_decomp.cpp:    double nS11 = abs(S(1, 1));
modules/calib3d/src/homography_decomp.cpp:    double nS22 = abs(S(2, 2));
modules/calib3d/src/triangulate.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/triangulate.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/triangulate.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/triangulate.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/triangulate.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/triangulate.cpp:                deltaX = (float)fabs(x-xr);
modules/calib3d/src/triangulate.cpp:                deltaY = (float)fabs(y-yr);
modules/calib3d/src/fundam.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/calib3d/src/fundam.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/calib3d/src/fundam.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/calib3d/src/fundam.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/calib3d/src/fundam.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/calib3d/src/fundam.cpp:            if( fabs(dx2*dy1 - dy2*dx1) <= FLT_EPSILON*(fabs(dx1) + fabs(dy1) + fabs(dx2) + fabs(dy2)))
modules/calib3d/src/fundam.cpp:        // Pablo Marquez-Neila, Javier Lopez-Alberca, Jose M. Buenaposada, Luis Baumela
modules/calib3d/src/fundam.cpp:            sm.x += fabs(m[i].x - cm.x);
modules/calib3d/src/fundam.cpp:            sm.y += fabs(m[i].y - cm.y);
modules/calib3d/src/fundam.cpp:            sM.x += fabs(M[i].x - cM.x);
modules/calib3d/src/fundam.cpp:            sM.y += fabs(M[i].y - cM.y);
modules/calib3d/src/fundam.cpp:        if( fabs(sm.x) < DBL_EPSILON || fabs(sm.y) < DBL_EPSILON ||
modules/calib3d/src/fundam.cpp:            fabs(sM.x) < DBL_EPSILON || fabs(sM.y) < DBL_EPSILON )
modules/calib3d/src/fundam.cpp:            ww = fabs(ww) > DBL_EPSILON ? 1./ww : 0;
modules/calib3d/src/fundam.cpp:     * internal, optimized Levenberg-Marquardt method) are enabled. However,
modules/calib3d/src/fundam.cpp:    // A*(f11 f12 ... f33)' = 0 is singular (7 equations for 9 variables), so
modules/calib3d/src/fundam.cpp:        if( fabs(s) > DBL_EPSILON )
modules/calib3d/src/fundam.cpp:        if( fabs(W[i]) < DBL_EPSILON )
modules/calib3d/src/fundam.cpp:    if( fabs(F0(2,2)) > FLT_EPSILON )
modules/cudaobjdetect/CMakeLists.txt:  ocv_module_disable(cudaobjdetect)
modules/cudaobjdetect/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4324 /wd4512 -Wundef -Wmissing-declarations -Wshadow)
modules/cudaobjdetect/test/test_objdetect.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/test/test_objdetect.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/test/test_objdetect.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/test/test_objdetect.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/test/test_objdetect.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/test/test_objdetect.cpp:// desabled while resize does not fixed
modules/cudaobjdetect/test/test_objdetect.cpp:    // Convert train images into feature vectors (train table)
modules/cudaobjdetect/test/test_objdetect.cpp:    // Check size of the result train table
modules/cudaobjdetect/test/test_objdetect.cpp://------------------------variable GPU HOG Tests------------------------//
modules/cudaobjdetect/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/include/opencv2/cudaobjdetect.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/include/opencv2/cudaobjdetect.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/include/opencv2/cudaobjdetect.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/include/opencv2/cudaobjdetect.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/include/opencv2/cudaobjdetect.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/perf/perf_objdetect.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/perf/perf_objdetect.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/perf/perf_objdetect.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/perf/perf_objdetect.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/perf/perf_objdetect.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/src/hog.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/src/hog.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/src/hog.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/src/hog.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/src/hog.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/src/hog.cpp:                            float threshold, int cell_size_x, int ncells_block_x, unsigned char* labels);
modules/cudaobjdetect/src/hog.cpp:            GpuMat labels = pool.getBuffer(1, wins_per_img.area(), CV_8UC1);
modules/cudaobjdetect/src/hog.cpp:                                labels.ptr());
modules/cudaobjdetect/src/hog.cpp:            Mat labels_host;
modules/cudaobjdetect/src/hog.cpp:            labels.download(labels_host);
modules/cudaobjdetect/src/hog.cpp:            unsigned char* vec = labels_host.ptr();
modules/cudaobjdetect/src/hog.cpp:            GpuMat labels = pool.getBuffer(1, wins_per_img.area(), CV_32FC1);
modules/cudaobjdetect/src/hog.cpp:                                          labels.ptr<float>());
modules/cudaobjdetect/src/hog.cpp:            Mat labels_host;
modules/cudaobjdetect/src/hog.cpp:            labels.download(labels_host);
modules/cudaobjdetect/src/hog.cpp:            float* vec = labels_host.ptr<float>();
modules/cudaobjdetect/src/cascadeclassifier.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/src/cascadeclassifier.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/src/cascadeclassifier.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/src/cascadeclassifier.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/src/cascadeclassifier.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/src/cascadeclassifier.cpp:        // Load the classifier from file (assuming its size is about 1 mb) using a simple allocator
modules/cudaobjdetect/src/cascadeclassifier.cpp:                // create sutable matrix headers
modules/cudaobjdetect/src/cuda/hog.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/src/cuda/hog.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/src/cuda/hog.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/src/cuda/hog.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/src/cuda/hog.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/src/cuda/hog.cu:                    float interp_weight = ((float)cell_size - ::fabs(dist_y + 0.5f)) *
modules/cudaobjdetect/src/cuda/hog.cu:                                          ((float)cell_size - ::fabs(dist_x + 0.5f)) / (float)threads_block;
modules/cudaobjdetect/src/cuda/hog.cu:        //declaration of variables and invoke the kernel with the calculated number of blocks
modules/cudaobjdetect/src/cuda/hog.cu:                                                          float free_coef, float threshold, unsigned char* labels)
modules/cudaobjdetect/src/cuda/hog.cu:                labels[blockIdx.y * img_win_width + blockIdx.x * blockDim.z + win_x] = (product + free_coef >= threshold);
modules/cudaobjdetect/src/cuda/hog.cu:                            float* coefs, float free_coef, float threshold, int cell_size_x, int ncells_block_x, unsigned char* labels)
modules/cudaobjdetect/src/cuda/hog.cu:                block_hists, coefs, free_coef, threshold, labels);
modules/cudaobjdetect/src/cuda/lbp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/src/cuda/lbp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/src/cuda/lbp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/src/cuda/lbp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/src/cuda/lbp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/src/cuda/lbp.hpp:            return ::abs(r1.x - r2.x) <= delta && ::abs(r1.y - r2.y) <= delta
modules/cudaobjdetect/src/cuda/lbp.hpp:                && ::abs(r1.x + r1.z - r2.x - r2.z) <= delta && ::abs(r1.y + r1.w - r2.y - r2.w) <= delta;
modules/cudaobjdetect/src/cuda/lbp.hpp:    __device__ __forceinline__ void partition(int4* vec, unsigned int n, int* labels, Pr predicate)
modules/cudaobjdetect/src/cuda/lbp.hpp:        labels[tid] = tid;
modules/cudaobjdetect/src/cuda/lbp.hpp:                int p = labels[tid];
modules/cudaobjdetect/src/cuda/lbp.hpp:                int q = labels[id];
modules/cudaobjdetect/src/cuda/lbp.hpp:                    Emulation::smem::atomicMin(labels + id, p);
modules/cudaobjdetect/src/cuda/lbp.hpp:                    Emulation::smem::atomicMin(labels + tid, q);
modules/cudaobjdetect/src/cuda/lbp.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/src/cuda/lbp.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/src/cuda/lbp.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/src/cuda/lbp.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/src/cuda/lbp.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaobjdetect/src/cuda/lbp.cu:            int* labels = sbuff;
modules/cudaobjdetect/src/cuda/lbp.cu:            partition(candidates, n, labels, predicate);
modules/cudaobjdetect/src/cuda/lbp.cu:            int cls = labels[tid];
modules/cudaobjdetect/src/cuda/lbp.cu:            labels[tid] = 0;
modules/cudaobjdetect/src/cuda/lbp.cu:            Emulation::smem::atomicInc((unsigned int*)labels + cls, n);
modules/cudaobjdetect/src/cuda/lbp.cu:            int active = labels[tid];
modules/cudaobjdetect/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaobjdetect/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaobjdetect/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaobjdetect/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaobjdetect/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/CMakeLists.txt:  ocv_module_disable(cudabgsegm)
modules/cudabgsegm/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4324 /wd4512 -Wundef -Wmissing-declarations -Wshadow)
modules/cudabgsegm/CMakeLists.txt:ocv_define_module(cudabgsegm opencv_video)
modules/cudabgsegm/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/test/test_bgsegm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/test/test_bgsegm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/test/test_bgsegm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/test/test_bgsegm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/test/test_bgsegm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/test/test_precomp.hpp:#include "opencv2/cudabgsegm.hpp"
modules/cudabgsegm/include/opencv2/cudabgsegm.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/include/opencv2/cudabgsegm.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/include/opencv2/cudabgsegm.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/include/opencv2/cudabgsegm.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/include/opencv2/cudabgsegm.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/include/opencv2/cudabgsegm.hpp:#  error cudabgsegm.hpp header must be compiled as C++
modules/cudabgsegm/include/opencv2/cudabgsegm.hpp:    @defgroup cudabgsegm Background Segmentation
modules/cudabgsegm/include/opencv2/cudabgsegm.hpp://! @addtogroup cudabgsegm
modules/cudabgsegm/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/perf/perf_main.cpp:CV_PERF_TEST_CUDA_MAIN(cudabgsegm)
modules/cudabgsegm/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/perf/perf_precomp.hpp:#include "opencv2/cudabgsegm.hpp"
modules/cudabgsegm/perf/perf_bgsegm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/perf/perf_bgsegm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/perf/perf_bgsegm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/perf/perf_bgsegm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/perf/perf_bgsegm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/src/mog.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/src/mog.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/src/mog.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/src/mog.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/src/mog.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/src/mog2.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/src/mog2.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/src/mog2.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/src/mog2.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/src/mog2.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/src/cuda/mog2.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/src/cuda/mog2.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/src/cuda/mog2.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/src/cuda/mog2.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/src/cuda/mog2.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/src/cuda/mog.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/src/cuda/mog.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/src/cuda/mog.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/src/cuda/mog.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/src/cuda/mog.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudabgsegm/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudabgsegm/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudabgsegm/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudabgsegm/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudabgsegm/src/precomp.hpp:#include "opencv2/cudabgsegm.hpp"
modules/world/include/opencv2/world.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/world/include/opencv2/world.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/world/include/opencv2/world.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/world/include/opencv2/world.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/world/include/opencv2/world.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/world/src/world_init.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/world/src/world_init.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/world/src/world_init.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/world/src/world_init.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/world/src/world_init.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/world/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/world/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/world/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/world/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/world/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/CMakeLists.txt:  ocv_module_disable(cudaarithm)
modules/cudaarithm/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4324 /wd4512 -Wundef -Wmissing-declarations -Wshadow)
modules/cudaarithm/test/test_core.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_core.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_core.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_core.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_core.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_core.cpp:    cv::Ptr<cv::cuda::LookUpTable> lutAlg = cv::cuda::createLookUpTable(lut);
modules/cudaarithm/test/test_core.cpp:    cv::Ptr<cv::cuda::LookUpTable> lutAlg = cv::cuda::createLookUpTable(lut);
modules/cudaarithm/test/test_opengl.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_opengl.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_opengl.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_opengl.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_opengl.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_gpumat.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_gpumat.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_gpumat.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_gpumat.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_gpumat.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_stream.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_stream.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_stream.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_stream.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_stream.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_arithm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_arithm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_arithm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_arithm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_arithm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_arithm.cpp:        C.create(std::abs(A.rows - B.rows) + 1, std::abs(A.cols - B.cols) + 1, A.type());
modules/cudaarithm/test/test_reductions.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_reductions.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_reductions.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_reductions.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_reductions.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_reductions.cpp:    cv::Scalar absSumImpl(const cv::Mat& src)
modules/cudaarithm/test/test_reductions.cpp:                    sum[c] += std::abs(src.at<T>(y, x * cn + c));
modules/cudaarithm/test/test_reductions.cpp:    cv::Scalar absSumGold(const cv::Mat& src)
modules/cudaarithm/test/test_reductions.cpp:            absSumImpl<uchar>,
modules/cudaarithm/test/test_reductions.cpp:            absSumImpl<schar>,
modules/cudaarithm/test/test_reductions.cpp:            absSumImpl<ushort>,
modules/cudaarithm/test/test_reductions.cpp:            absSumImpl<short>,
modules/cudaarithm/test/test_reductions.cpp:            absSumImpl<int>,
modules/cudaarithm/test/test_reductions.cpp:            absSumImpl<float>,
modules/cudaarithm/test/test_reductions.cpp:            absSumImpl<double>
modules/cudaarithm/test/test_reductions.cpp:    cv::Scalar val = cv::cuda::absSum(loadMat(src, useRoi));
modules/cudaarithm/test/test_reductions.cpp:    cv::Scalar val_gold = absSumGold(src);
modules/cudaarithm/test/test_reductions.cpp:    cv::Scalar val_gold = absSumGold(src);
modules/cudaarithm/test/test_buffer_pool.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_buffer_pool.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_buffer_pool.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_buffer_pool.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_buffer_pool.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_element_operations.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/test/test_element_operations.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/test/test_element_operations.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/test/test_element_operations.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/test/test_element_operations.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[0] - actual[0]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[0] - actual[0]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[0] - actual[0]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[0] - actual[0]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            ASSERT_LE(std::abs(gold[1] - actual[1]), 1.0);
modules/cudaarithm/test/test_element_operations.cpp:            cv::cuda::absdiff(loadMat(src1), loadMat(src2), dst);
modules/cudaarithm/test/test_element_operations.cpp:        cv::cuda::absdiff(loadMat(src1, useRoi), loadMat(src2, useRoi), dst);
modules/cudaarithm/test/test_element_operations.cpp:        cv::absdiff(src1, src2, dst_gold);
modules/cudaarithm/test/test_element_operations.cpp:            cv::cuda::absdiff(loadMat(src), val, dst);
modules/cudaarithm/test/test_element_operations.cpp:        cv::cuda::absdiff(loadMat(src, useRoi), val, dst);
modules/cudaarithm/test/test_element_operations.cpp:        cv::absdiff(src, val, dst_gold);
modules/cudaarithm/test/test_element_operations.cpp:            cv::cuda::absdiff(val, loadMat(src), dst);
modules/cudaarithm/test/test_element_operations.cpp:        cv::cuda::absdiff(val, loadMat(src, useRoi), dst);
modules/cudaarithm/test/test_element_operations.cpp:        cv::absdiff(val, src, dst_gold);
modules/cudaarithm/test/test_element_operations.cpp:    cv::cuda::abs(loadMat(src, useRoi), dst);
modules/cudaarithm/test/test_element_operations.cpp:    cv::Mat dst_gold = cv::abs(src);
modules/cudaarithm/include/opencv2/cudaarithm.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/include/opencv2/cudaarithm.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/include/opencv2/cudaarithm.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/include/opencv2/cudaarithm.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/include/opencv2/cudaarithm.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/include/opencv2/cudaarithm.hpp:/** @brief Computes per-element absolute difference of two matrices (or of a matrix and scalar).
modules/cudaarithm/include/opencv2/cudaarithm.hpp:@sa absdiff
modules/cudaarithm/include/opencv2/cudaarithm.hpp:CV_EXPORTS void absdiff(InputArray src1, InputArray src2, OutputArray dst, Stream& stream = Stream::Null());
modules/cudaarithm/include/opencv2/cudaarithm.hpp:/** @brief Computes an absolute value of each matrix element.
modules/cudaarithm/include/opencv2/cudaarithm.hpp:@sa abs
modules/cudaarithm/include/opencv2/cudaarithm.hpp:CV_EXPORTS void abs(InputArray src, OutputArray dst, Stream& stream = Stream::Null());
modules/cudaarithm/include/opencv2/cudaarithm.hpp:/** @brief Computes a natural logarithm of absolute value of each matrix element.
modules/cudaarithm/include/opencv2/cudaarithm.hpp:/** @brief Base class for transform using lookup table.
modules/cudaarithm/include/opencv2/cudaarithm.hpp:class CV_EXPORTS LookUpTable : public Algorithm
modules/cudaarithm/include/opencv2/cudaarithm.hpp:    /** @brief Transforms the source matrix into the destination matrix using the given look-up table:
modules/cudaarithm/include/opencv2/cudaarithm.hpp:/** @brief Creates implementation for cuda::LookUpTable .
modules/cudaarithm/include/opencv2/cudaarithm.hpp:@param lut Look-up table of 256 elements. It is a continuous CV_8U matrix.
modules/cudaarithm/include/opencv2/cudaarithm.hpp:CV_EXPORTS Ptr<LookUpTable> createLookUpTable(InputArray lut);
modules/cudaarithm/include/opencv2/cudaarithm.hpp:/** @brief Returns the sum of absolute values for matrix elements.
modules/cudaarithm/include/opencv2/cudaarithm.hpp:CV_EXPORTS Scalar absSum(InputArray src, InputArray mask = noArray());
modules/cudaarithm/include/opencv2/cudaarithm.hpp:The function does not work with CV_64F images on GPUs with the compute capability \< 1.3.
modules/cudaarithm/include/opencv2/cudaarithm.hpp:The function does not work with CV_64F images on GPU with the compute capability \< 1.3.
modules/cudaarithm/include/opencv2/cudaarithm.hpp:The function does not work with CV_64F images on GPUs with the compute capability \< 1.3.
modules/cudaarithm/perf/perf_element_operations.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/perf/perf_element_operations.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/perf/perf_element_operations.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/perf/perf_element_operations.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/perf/perf_element_operations.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/perf/perf_element_operations.cpp:        TEST_CYCLE() cv::cuda::absdiff(d_src1, d_src2, dst);
modules/cudaarithm/perf/perf_element_operations.cpp:        TEST_CYCLE() cv::absdiff(src1, src2, dst);
modules/cudaarithm/perf/perf_element_operations.cpp:        TEST_CYCLE() cv::cuda::absdiff(d_src, s, dst);
modules/cudaarithm/perf/perf_element_operations.cpp:        TEST_CYCLE() cv::absdiff(src, s, dst);
modules/cudaarithm/perf/perf_element_operations.cpp:        TEST_CYCLE() cv::cuda::abs(d_src, dst);
modules/cudaarithm/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/perf/perf_core.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/perf/perf_core.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/perf/perf_core.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/perf/perf_core.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/perf/perf_core.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/perf/perf_core.cpp:        cv::Ptr<cv::cuda::LookUpTable> lutAlg = cv::cuda::createLookUpTable(lut);
modules/cudaarithm/perf/perf_core.cpp:        cv::Ptr<cv::cuda::LookUpTable> lutAlg = cv::cuda::createLookUpTable(lut);
modules/cudaarithm/perf/perf_reductions.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/perf/perf_reductions.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/perf/perf_reductions.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/perf/perf_reductions.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/perf/perf_reductions.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/perf/perf_reductions.cpp:        TEST_CYCLE() gpu_dst = cv::cuda::absSum(d_src);
modules/cudaarithm/perf/perf_arithm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/perf/perf_arithm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/perf/perf_arithm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/perf/perf_arithm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/perf/perf_arithm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/core.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/core.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/core.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/core.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/core.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/core.cpp:Ptr<LookUpTable> cv::cuda::createLookUpTable(InputArray) { throw_no_cuda(); return Ptr<LookUpTable>(); }
modules/cudaarithm/src/reductions.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/reductions.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/reductions.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/reductions.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/reductions.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/reductions.cpp:Scalar cv::cuda::absSum(InputArray, InputArray) { throw_no_cuda(); return Scalar(); }
modules/cudaarithm/src/cuda/div_mat.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/div_mat.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/div_mat.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/div_mat.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/div_mat.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/threshold.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/threshold.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/threshold.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/threshold.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/threshold.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/lut.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/lut.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/lut.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/lut.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/lut.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/lut.cu:    texture<uchar, cudaTextureType1D, cudaReadModeElementType> texLutTable;
modules/cudaarithm/src/cuda/lut.cu:    class LookUpTableImpl : public LookUpTable
modules/cudaarithm/src/cuda/lut.cu:        LookUpTableImpl(InputArray lut);
modules/cudaarithm/src/cuda/lut.cu:        ~LookUpTableImpl();
modules/cudaarithm/src/cuda/lut.cu:        cudaTextureObject_t texLutTableObj;
modules/cudaarithm/src/cuda/lut.cu:    LookUpTableImpl::LookUpTableImpl(InputArray _lut)
modules/cudaarithm/src/cuda/lut.cu:            CV_CUDEV_SAFE_CALL( cudaCreateTextureObject(&texLutTableObj, &texRes, &texDescr, 0) );
modules/cudaarithm/src/cuda/lut.cu:            CV_CUDEV_SAFE_CALL( cudaBindTexture(0, &texLutTable, d_lut.data, &desc) );
modules/cudaarithm/src/cuda/lut.cu:    LookUpTableImpl::~LookUpTableImpl()
modules/cudaarithm/src/cuda/lut.cu:            cudaDestroyTextureObject(texLutTableObj);
modules/cudaarithm/src/cuda/lut.cu:            cudaUnbindTexture(texLutTable);
modules/cudaarithm/src/cuda/lut.cu:    struct LutTablePtrC1
modules/cudaarithm/src/cuda/lut.cu:        cudaTextureObject_t texLutTableObj;
modules/cudaarithm/src/cuda/lut.cu:            return tex1Dfetch(texLutTable, x);
modules/cudaarithm/src/cuda/lut.cu:            return tex1Dfetch<uchar>(texLutTableObj, x);
modules/cudaarithm/src/cuda/lut.cu:    struct LutTablePtrC3
modules/cudaarithm/src/cuda/lut.cu:        cudaTextureObject_t texLutTableObj;
modules/cudaarithm/src/cuda/lut.cu:            return make_uchar3(tex1Dfetch(texLutTable, x.x * 3), tex1Dfetch(texLutTable, x.y * 3 + 1), tex1Dfetch(texLutTable, x.z * 3 + 2));
modules/cudaarithm/src/cuda/lut.cu:            return make_uchar3(tex1Dfetch<uchar>(texLutTableObj, x.x * 3), tex1Dfetch<uchar>(texLutTableObj, x.y * 3 + 1), tex1Dfetch<uchar>(texLutTableObj, x.z * 3 + 2));
modules/cudaarithm/src/cuda/lut.cu:    void LookUpTableImpl::transform(InputArray _src, OutputArray _dst, Stream& stream)
modules/cudaarithm/src/cuda/lut.cu:            LutTablePtrC1 tbl;
modules/cudaarithm/src/cuda/lut.cu:            tbl.texLutTableObj = texLutTableObj;
modules/cudaarithm/src/cuda/lut.cu:            LutTablePtrC3 tbl;
modules/cudaarithm/src/cuda/lut.cu:            tbl.texLutTableObj = texLutTableObj;
modules/cudaarithm/src/cuda/lut.cu:Ptr<LookUpTable> cv::cuda::createLookUpTable(InputArray lut)
modules/cudaarithm/src/cuda/lut.cu:    return makePtr<LookUpTableImpl>(lut);
modules/cudaarithm/src/cuda/copy_make_border.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/copy_make_border.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/copy_make_border.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/copy_make_border.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/copy_make_border.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/bitwise_mat.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/bitwise_mat.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/bitwise_mat.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/bitwise_mat.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/bitwise_mat.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/cmp_scalar.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/cmp_scalar.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/cmp_scalar.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/cmp_scalar.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/cmp_scalar.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/transpose.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/transpose.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/transpose.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/transpose.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/transpose.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/mul_mat.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/mul_mat.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/mul_mat.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/mul_mat.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/mul_mat.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/sub_scalar.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/sub_scalar.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/sub_scalar.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/sub_scalar.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/sub_scalar.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/add_weighted.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/add_weighted.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/add_weighted.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/add_weighted.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/add_weighted.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/add_scalar.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/add_scalar.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/add_scalar.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/add_scalar.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/add_scalar.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/bitwise_scalar.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/bitwise_scalar.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/bitwise_scalar.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/bitwise_scalar.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/bitwise_scalar.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/reduce.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/reduce.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/reduce.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/reduce.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/reduce.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/polar_cart.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/polar_cart.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/polar_cart.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/polar_cart.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/polar_cart.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/div_scalar.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/div_scalar.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/div_scalar.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/div_scalar.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/div_scalar.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/mul_spectrums.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/mul_spectrums.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/mul_spectrums.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/mul_spectrums.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/mul_spectrums.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/absdiff_mat.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/absdiff_mat.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/absdiff_mat.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/absdiff_mat.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/absdiff_mat.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/absdiff_mat.cu:void absDiffMat(const GpuMat& src1, const GpuMat& src2, GpuMat& dst, const GpuMat&, double, Stream& stream, int);
modules/cudaarithm/src/cuda/absdiff_mat.cu:    __device__ __forceinline__ int _abs(int a)
modules/cudaarithm/src/cuda/absdiff_mat.cu:        return ::abs(a);
modules/cudaarithm/src/cuda/absdiff_mat.cu:    __device__ __forceinline__ float _abs(float a)
modules/cudaarithm/src/cuda/absdiff_mat.cu:        return ::fabsf(a);
modules/cudaarithm/src/cuda/absdiff_mat.cu:    __device__ __forceinline__ double _abs(double a)
modules/cudaarithm/src/cuda/absdiff_mat.cu:        return ::fabs(a);
modules/cudaarithm/src/cuda/absdiff_mat.cu:            return saturate_cast<T>(_abs(a - b));
modules/cudaarithm/src/cuda/absdiff_mat.cu:    void absDiffMat_v1(const GpuMat& src1, const GpuMat& src2, GpuMat& dst, Stream& stream)
modules/cudaarithm/src/cuda/absdiff_mat.cu:            return vabsdiff2(a, b);
modules/cudaarithm/src/cuda/absdiff_mat.cu:    void absDiffMat_v2(const GpuMat& src1, const GpuMat& src2, GpuMat& dst, Stream& stream)
modules/cudaarithm/src/cuda/absdiff_mat.cu:            return vabsdiff4(a, b);
modules/cudaarithm/src/cuda/absdiff_mat.cu:    void absDiffMat_v4(const GpuMat& src1, const GpuMat& src2, GpuMat& dst, Stream& stream)
modules/cudaarithm/src/cuda/absdiff_mat.cu:void absDiffMat(const GpuMat& src1, const GpuMat& src2, GpuMat& dst, const GpuMat&, double, Stream& stream, int)
modules/cudaarithm/src/cuda/absdiff_mat.cu:        absDiffMat_v1<uchar>,
modules/cudaarithm/src/cuda/absdiff_mat.cu:        absDiffMat_v1<schar>,
modules/cudaarithm/src/cuda/absdiff_mat.cu:        absDiffMat_v1<ushort>,
modules/cudaarithm/src/cuda/absdiff_mat.cu:        absDiffMat_v1<short>,
modules/cudaarithm/src/cuda/absdiff_mat.cu:        absDiffMat_v1<int>,
modules/cudaarithm/src/cuda/absdiff_mat.cu:        absDiffMat_v1<float>,
modules/cudaarithm/src/cuda/absdiff_mat.cu:        absDiffMat_v1<double>
modules/cudaarithm/src/cuda/absdiff_mat.cu:                absDiffMat_v4(src1_, src2_, dst_, stream);
modules/cudaarithm/src/cuda/absdiff_mat.cu:                absDiffMat_v2(src1_, src2_, dst_, stream);
modules/cudaarithm/src/cuda/cmp_mat.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/cmp_mat.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/cmp_mat.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/cmp_mat.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/cmp_mat.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/minmax_mat.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/minmax_mat.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/minmax_mat.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/minmax_mat.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/minmax_mat.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/integral.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/integral.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/integral.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/integral.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/integral.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/add_mat.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/add_mat.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/add_mat.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/add_mat.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/add_mat.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/absdiff_scalar.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/absdiff_scalar.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/absdiff_scalar.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/absdiff_scalar.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/absdiff_scalar.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/absdiff_scalar.cu:void absDiffScalar(const GpuMat& src, cv::Scalar val, bool, GpuMat& dst, const GpuMat&, double, Stream& stream, int);
modules/cudaarithm/src/cuda/absdiff_scalar.cu:            abs_func<S> f;
modules/cudaarithm/src/cuda/absdiff_scalar.cu:    void absDiffScalarImpl(const GpuMat& src, double value, GpuMat& dst, Stream& stream)
modules/cudaarithm/src/cuda/absdiff_scalar.cu:void absDiffScalar(const GpuMat& src, cv::Scalar val, bool, GpuMat& dst, const GpuMat&, double, Stream& stream, int)
modules/cudaarithm/src/cuda/absdiff_scalar.cu:        absDiffScalarImpl<uchar, float>,
modules/cudaarithm/src/cuda/absdiff_scalar.cu:        absDiffScalarImpl<schar, float>,
modules/cudaarithm/src/cuda/absdiff_scalar.cu:        absDiffScalarImpl<ushort, float>,
modules/cudaarithm/src/cuda/absdiff_scalar.cu:        absDiffScalarImpl<short, float>,
modules/cudaarithm/src/cuda/absdiff_scalar.cu:        absDiffScalarImpl<int, float>,
modules/cudaarithm/src/cuda/absdiff_scalar.cu:        absDiffScalarImpl<float, float>,
modules/cudaarithm/src/cuda/absdiff_scalar.cu:        absDiffScalarImpl<double, double>
modules/cudaarithm/src/cuda/minmax.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/minmax.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/minmax.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/minmax.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/minmax.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/minmax.cu:            gridFindMaxVal(abs_(src), dst, stream);
modules/cudaarithm/src/cuda/minmax.cu:            gridFindMaxVal(abs_(src), dst, globPtr<uchar>(mask), stream);
modules/cudaarithm/src/cuda/countnonzero.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/countnonzero.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/countnonzero.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/countnonzero.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/countnonzero.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/split_merge.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/split_merge.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/split_merge.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/split_merge.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/split_merge.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/sum.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/sum.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/sum.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/sum.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/sum.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/sum.cu:            gridCalcSum(abs_(cvt_<res_type>(src)), dst, stream);
modules/cudaarithm/src/cuda/sum.cu:            gridCalcSum(abs_(cvt_<res_type>(src)), dst, globPtr<uchar>(mask), stream);
modules/cudaarithm/src/cuda/sum.cu:cv::Scalar cv::cuda::absSum(InputArray _src, InputArray _mask)
modules/cudaarithm/src/cuda/norm.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/norm.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/norm.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/norm.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/norm.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/norm.cu:        gridFindMaxVal(abs_(cvt_<int>(src1) - cvt_<int>(src2)), dst, stream);
modules/cudaarithm/src/cuda/norm.cu:        gridCalcSum(abs_(cvt_<int>(src1) - cvt_<int>(src2)), dst, stream);
modules/cudaarithm/src/cuda/normalize.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/normalize.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/normalize.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/normalize.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/normalize.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/normalize.cu:            gridCalcSum(abs_(cvt_<I>(src)), normVal, stream);
modules/cudaarithm/src/cuda/normalize.cu:            gridCalcSum(abs_(cvt_<I>(src)), normVal, globPtr<uchar>(mask), stream);
modules/cudaarithm/src/cuda/normalize.cu:            gridFindMaxVal(abs_(cvt_<I>(src)), normVal, stream);
modules/cudaarithm/src/cuda/normalize.cu:            gridFindMaxVal(abs_(cvt_<I>(src)), normVal, globPtr<uchar>(mask), stream);
modules/cudaarithm/src/cuda/minmaxloc.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/minmaxloc.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/minmaxloc.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/minmaxloc.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/minmaxloc.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/mul_scalar.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/mul_scalar.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/mul_scalar.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/mul_scalar.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/mul_scalar.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/math.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/math.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/math.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/math.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/math.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/cuda/math.cu:/// abs
modules/cudaarithm/src/cuda/math.cu:    void absMat(const GpuMat& src, const GpuMat& dst, Stream& stream)
modules/cudaarithm/src/cuda/math.cu:        gridTransformUnary_< TransformPolicy<T> >(globPtr<T>(src), globPtr<T>(dst), abs_func<T>(), stream);
modules/cudaarithm/src/cuda/math.cu:void cv::cuda::abs(InputArray _src, OutputArray _dst, Stream& stream)
modules/cudaarithm/src/cuda/math.cu:        absMat<uchar>,
modules/cudaarithm/src/cuda/math.cu:        absMat<schar>,
modules/cudaarithm/src/cuda/math.cu:        absMat<ushort>,
modules/cudaarithm/src/cuda/math.cu:        absMat<short>,
modules/cudaarithm/src/cuda/math.cu:        absMat<int>,
modules/cudaarithm/src/cuda/math.cu:        absMat<float>,
modules/cudaarithm/src/cuda/math.cu:        absMat<double>
modules/cudaarithm/src/cuda/math.cu:            return __powf(::fabs(e), power);
modules/cudaarithm/src/cuda/math.cu:            return ::pow(::fabs(e), power);
modules/cudaarithm/src/cuda/sub_mat.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/cuda/sub_mat.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/cuda/sub_mat.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/cuda/sub_mat.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/cuda/sub_mat.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/element_operations.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/element_operations.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/element_operations.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/element_operations.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/element_operations.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaarithm/src/element_operations.cpp:void cv::cuda::absdiff(InputArray, InputArray, OutputArray, Stream&) { throw_no_cuda(); }
modules/cudaarithm/src/element_operations.cpp:void cv::cuda::abs(InputArray, OutputArray, Stream&) { throw_no_cuda(); }
modules/cudaarithm/src/element_operations.cpp:// absdiff
modules/cudaarithm/src/element_operations.cpp:void absDiffMat(const GpuMat& src1, const GpuMat& src2, GpuMat& dst, const GpuMat&, double, Stream& stream, int);
modules/cudaarithm/src/element_operations.cpp:void absDiffScalar(const GpuMat& src, cv::Scalar val, bool, GpuMat& dst, const GpuMat&, double, Stream& stream, int);
modules/cudaarithm/src/element_operations.cpp:void cv::cuda::absdiff(InputArray src1, InputArray src2, OutputArray dst, Stream& stream)
modules/cudaarithm/src/element_operations.cpp:    arithm_op(src1, src2, dst, noArray(), 1.0, -1, stream, absDiffMat, absDiffScalar);
modules/cudaarithm/src/arithm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaarithm/src/arithm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaarithm/src/arithm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaarithm/src/arithm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaarithm/src/arithm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/CMakeLists.txt:  ocv_module_disable(cudev)
modules/cudev/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4189 /wd4505 -Wundef -Wmissing-declarations -Wunused-function -Wunused-variable -Wenum-compare -Wshadow)
modules/cudev/test/test_pyramids.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_pyramids.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_pyramids.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_pyramids.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_pyramids.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_bitwize_op.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_bitwize_op.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_bitwize_op.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_bitwize_op.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_bitwize_op.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_reduction.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_reduction.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_reduction.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_reduction.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_reduction.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_reduction.cu:    GpuMat_<float> dst = sum_(abs_(d_src1 - d_src2));
modules/cudev/test/test_reduction.cu:    GpuMat_<float> dst = maxVal_(abs_(d_src1 - d_src2));
modules/cudev/test/test_cvt.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_cvt.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_cvt.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_cvt.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_cvt.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/transpose.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/transpose.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/transpose.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/transpose.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/transpose.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_arithm_func.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_arithm_func.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_arithm_func.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_arithm_func.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_arithm_func.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_cmp_op.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_cmp_op.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_cmp_op.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_cmp_op.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_cmp_op.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_split_merge.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_split_merge.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_split_merge.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_split_merge.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_split_merge.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_integral.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_integral.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_integral.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_integral.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_integral.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_color_cvt.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_color_cvt.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_color_cvt.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_color_cvt.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_color_cvt.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_color_cvt.cu:// RGB <-> Lab
modules/cudev/test/test_color_cvt.cu:CVT_COLOR_TEST(RGB, Lab, 3, 3)
modules/cudev/test/test_color_cvt.cu:CVT_COLOR_TEST(BGR, Lab, 3, 3)
modules/cudev/test/test_color_cvt.cu:CVT_COLOR_TEST(Lab, RGB, 3, 3)
modules/cudev/test/test_color_cvt.cu:CVT_COLOR_TEST(Lab, BGR, 3, 3)
modules/cudev/test/test_color_cvt.cu:CVT_COLOR_TEST(LRGB, Lab, 3, 3)
modules/cudev/test/test_color_cvt.cu:CVT_COLOR_TEST(LBGR, Lab, 3, 3)
modules/cudev/test/test_color_cvt.cu:CVT_COLOR_TEST(Lab, LRGB, 3, 3)
modules/cudev/test/test_color_cvt.cu:CVT_COLOR_TEST(Lab, LBGR, 3, 3)
modules/cudev/test/test_deriv.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_deriv.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_deriv.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_deriv.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_deriv.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_warp.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_warp.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_warp.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_warp.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_warp.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_arithm_op.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_arithm_op.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_arithm_op.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_arithm_op.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_arithm_op.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_arithm_op.cu:        GpuMat_<T> dst1 = absdiff_(d_src1, d_src2);
modules/cudev/test/test_arithm_op.cu:        GpuMat_<T> dst2 = abs_(d_src1 - d_src2);
modules/cudev/test/test_lut.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_lut.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_lut.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_lut.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_lut.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/vec_traits.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/vec_traits.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/vec_traits.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/vec_traits.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/vec_traits.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/saturate_cast.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/saturate_cast.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/saturate_cast.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/saturate_cast.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/saturate_cast.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/atomic.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/atomic.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/atomic.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/atomic.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/atomic.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/vec_math.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/vec_math.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:    __device__ __forceinline__ schar abs_(schar val)
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:        return (schar) ::abs((int) val);
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:    __device__ __forceinline__ short abs_(short val)
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:        return (short) ::abs((int) val);
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, /*::abs*/, uchar, uchar)
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, vec_math_detail::abs_, char, char)
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, /*::abs*/, ushort, ushort)
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, vec_math_detail::abs_, short, short)
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, ::abs, int, int)
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, /*::abs*/, uint, uint)
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, ::fabsf, float, float)
modules/cudev/include/opencv2/cudev/util/vec_math.hpp:CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC(abs, ::fabs, double, double)
modules/cudev/include/opencv2/cudev/util/type_traits.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/type_traits.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/type_traits.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/type_traits.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/type_traits.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/type_traits.hpp:// EnableIf
modules/cudev/include/opencv2/cudev/util/type_traits.hpp:template <bool, typename T = void> struct EnableIf {};
modules/cudev/include/opencv2/cudev/util/type_traits.hpp:template <typename T> struct EnableIf<true, T> { typedef T type; };
modules/cudev/include/opencv2/cudev/util/type_traits.hpp:// DisableIf
modules/cudev/include/opencv2/cudev/util/type_traits.hpp:template <bool, typename T = void> struct DisableIf {};
modules/cudev/include/opencv2/cudev/util/type_traits.hpp:template <typename T> struct DisableIf<false, T> { typedef T type; };
modules/cudev/include/opencv2/cudev/util/detail/type_traits.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/detail/type_traits.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/detail/type_traits.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/detail/type_traits.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/detail/type_traits.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/detail/tuple.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/detail/tuple.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/detail/tuple.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/detail/tuple.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/detail/tuple.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp: *   Redistributions of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp: *   Redistributions in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:  to make the code portable across all GPUs supported by CUDA. The following
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:  vabsdiff2(a,b)  per-halfword unsigned absolute difference: |a - b|
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:  vabsdiff4(a,b)  per-byte unsigned absolute difference: |a - b|
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:__device__ __forceinline__ uint vabsdiff2(uint a, uint b)
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:    asm("vabsdiff2.u32.u32.u32.sat %0, %1, %2, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:    asm("vabsdiff.u32.u32.u32.sat %0.h0, %1.h0, %2.h0, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:    asm("vabsdiff.u32.u32.u32.sat %0.h1, %1.h1, %2.h1, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:__device__ __forceinline__ uint vabsdiff4(uint a, uint b)
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:    asm("vabsdiff4.u32.u32.u32.sat %0, %1, %2, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:    asm("vabsdiff.u32.u32.u32.sat %0.b0, %1.b0, %2.b0, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:    asm("vabsdiff.u32.u32.u32.sat %0.b1, %1.b1, %2.b1, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:    asm("vabsdiff.u32.u32.u32.sat %0.b2, %1.b2, %2.b2, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/cudev/include/opencv2/cudev/util/simd_functions.hpp:    asm("vabsdiff.u32.u32.u32.sat %0.b3, %1.b3, %2.b3, %3;" : "=r"(r) : "r"(a), "r"(b), "r"(r));
modules/cudev/include/opencv2/cudev/util/limits.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/limits.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/limits.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/limits.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/limits.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/util/tuple.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/util/tuple.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/util/tuple.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/util/tuple.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/util/tuple.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/warp/scan.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/scan.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/scan.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/warp/scan.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/warp/scan.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/warp/shuffle.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/shuffle.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/shuffle.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/warp/shuffle.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/warp/shuffle.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/warp/warp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/warp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/warp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/warp/warp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/warp/warp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/warp/detail/reduce_key_val.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/detail/reduce_key_val.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/detail/reduce_key_val.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/warp/detail/reduce_key_val.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/warp/detail/reduce_key_val.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/warp/detail/reduce.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/detail/reduce.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/detail/reduce.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/warp/detail/reduce.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/warp/detail/reduce.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/warp/reduce.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/reduce.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/warp/reduce.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/warp/reduce.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/warp/reduce.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/block/scan.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/block/scan.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/block/scan.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/block/scan.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/block/scan.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/block/scan.hpp:            // grab top warp elements
modules/cudev/include/opencv2/cudev/block/dynamic_smem.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/block/dynamic_smem.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/block/dynamic_smem.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/block/dynamic_smem.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/block/dynamic_smem.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/block/detail/reduce_key_val.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/block/detail/reduce_key_val.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/block/detail/reduce_key_val.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/block/detail/reduce_key_val.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/block/detail/reduce_key_val.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/block/detail/reduce.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/block/detail/reduce.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/block/detail/reduce.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/block/detail/reduce.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/block/detail/reduce.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/block/vec_distance.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/block/vec_distance.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/block/vec_distance.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/block/vec_distance.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/block/vec_distance.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/block/vec_distance.hpp:        mySum += ::fabsf(val1 - val2);
modules/cudev/include/opencv2/cudev/block/block.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/block/block.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/block/block.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/block/block.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/block/block.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/block/reduce.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/block/reduce.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/block/reduce.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/block/reduce.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/block/reduce.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/common.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/common.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/common.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/common.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/common.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/functional/functional.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/functional/functional.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/functional/functional.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/functional/functional.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/functional/functional.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/functional/functional.hpp:// abs_func
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <typename T> struct abs_func : unary_function<T, T>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:        return abs(x);
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <> struct abs_func<uchar> : unary_function<uchar, uchar>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <> struct abs_func<schar> : unary_function<schar, schar>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:        return ::abs((int) x);
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <> struct abs_func<ushort> : unary_function<ushort, ushort>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <> struct abs_func<short> : unary_function<short, short>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:        return ::abs((int) x);
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <> struct abs_func<uint> : unary_function<uint, uint>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <> struct abs_func<int> : unary_function<int, int>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:        return ::abs(x);
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <> struct abs_func<float> : unary_function<float, float>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:        return ::fabsf(x);
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <> struct abs_func<double> : unary_function<double, double>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:        return ::fabs(x);
modules/cudev/include/opencv2/cudev/functional/functional.hpp:// absdiff_func
modules/cudev/include/opencv2/cudev/functional/functional.hpp:template <typename T> struct absdiff_func : binary_function<T, T, T>
modules/cudev/include/opencv2/cudev/functional/functional.hpp:        abs_func<T> f;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    __constant__ int c_HsvDivTable   [256] = {0, 1044480, 522240, 348160, 261120, 208896, 174080, 149211, 130560, 116053, 104448, 94953, 87040, 80345, 74606, 69632, 65280, 61440, 58027, 54973, 52224, 49737, 47476, 45412, 43520, 41779, 40172, 38684, 37303, 36017, 34816, 33693, 32640, 31651, 30720, 29842, 29013, 28229, 27486, 26782, 26112, 25475, 24869, 24290, 23738, 23211, 22706, 22223, 21760, 21316, 20890, 20480, 20086, 19707, 19342, 18991, 18651, 18324, 18008, 17703, 17408, 17123, 16846, 16579, 16320, 16069, 15825, 15589, 15360, 15137, 14921, 14711, 14507, 14308, 14115, 13926, 13743, 13565, 13391, 13221, 13056, 12895, 12738, 12584, 12434, 12288, 12145, 12006, 11869, 11736, 11605, 11478, 11353, 11231, 11111, 10995, 10880, 10768, 10658, 10550, 10445, 10341, 10240, 10141, 10043, 9947, 9854, 9761, 9671, 9582, 9495, 9410, 9326, 9243, 9162, 9082, 9004, 8927, 8852, 8777, 8704, 8632, 8561, 8492, 8423, 8356, 8290, 8224, 8160, 8097, 8034, 7973, 7913, 7853, 7795, 7737, 7680, 7624, 7569, 7514, 7461, 7408, 7355, 7304, 7253, 7203, 7154, 7105, 7057, 7010, 6963, 6917, 6872, 6827, 6782, 6739, 6695, 6653, 6611, 6569, 6528, 6487, 6447, 6408, 6369, 6330, 6292, 6254, 6217, 6180, 6144, 6108, 6073, 6037, 6003, 5968, 5935, 5901, 5868, 5835, 5803, 5771, 5739, 5708, 5677, 5646, 5615, 5585, 5556, 5526, 5497, 5468, 5440, 5412, 5384, 5356, 5329, 5302, 5275, 5249, 5222, 5196, 5171, 5145, 5120, 5095, 5070, 5046, 5022, 4998, 4974, 4950, 4927, 4904, 4881, 4858, 4836, 4813, 4791, 4769, 4748, 4726, 4705, 4684, 4663, 4642, 4622, 4601, 4581, 4561, 4541, 4522, 4502, 4483, 4464, 4445, 4426, 4407, 4389, 4370, 4352, 4334, 4316, 4298, 4281, 4263, 4246, 4229, 4212, 4195, 4178, 4161, 4145, 4128, 4112, 4096};
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    __constant__ int c_HsvDivTable180[256] = {0, 122880, 61440, 40960, 30720, 24576, 20480, 17554, 15360, 13653, 12288, 11171, 10240, 9452, 8777, 8192, 7680, 7228, 6827, 6467, 6144, 5851, 5585, 5343, 5120, 4915, 4726, 4551, 4389, 4237, 4096, 3964, 3840, 3724, 3614, 3511, 3413, 3321, 3234, 3151, 3072, 2997, 2926, 2858, 2793, 2731, 2671, 2614, 2560, 2508, 2458, 2409, 2363, 2318, 2276, 2234, 2194, 2156, 2119, 2083, 2048, 2014, 1982, 1950, 1920, 1890, 1862, 1834, 1807, 1781, 1755, 1731, 1707, 1683, 1661, 1638, 1617, 1596, 1575, 1555, 1536, 1517, 1499, 1480, 1463, 1446, 1429, 1412, 1396, 1381, 1365, 1350, 1336, 1321, 1307, 1293, 1280, 1267, 1254, 1241, 1229, 1217, 1205, 1193, 1182, 1170, 1159, 1148, 1138, 1127, 1117, 1107, 1097, 1087, 1078, 1069, 1059, 1050, 1041, 1033, 1024, 1016, 1007, 999, 991, 983, 975, 968, 960, 953, 945, 938, 931, 924, 917, 910, 904, 897, 890, 884, 878, 871, 865, 859, 853, 847, 842, 836, 830, 825, 819, 814, 808, 803, 798, 793, 788, 783, 778, 773, 768, 763, 759, 754, 749, 745, 740, 736, 731, 727, 723, 719, 714, 710, 706, 702, 698, 694, 690, 686, 683, 679, 675, 671, 668, 664, 661, 657, 654, 650, 647, 643, 640, 637, 633, 630, 627, 624, 621, 617, 614, 611, 608, 605, 602, 599, 597, 594, 591, 588, 585, 582, 580, 577, 574, 572, 569, 566, 564, 561, 559, 556, 554, 551, 549, 546, 544, 541, 539, 537, 534, 532, 530, 527, 525, 523, 521, 518, 516, 514, 512, 510, 508, 506, 504, 502, 500, 497, 495, 493, 492, 490, 488, 486, 484, 482};
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    __constant__ int c_HsvDivTable256[256] = {0, 174763, 87381, 58254, 43691, 34953, 29127, 24966, 21845, 19418, 17476, 15888, 14564, 13443, 12483, 11651, 10923, 10280, 9709, 9198, 8738, 8322, 7944, 7598, 7282, 6991, 6722, 6473, 6242, 6026, 5825, 5638, 5461, 5296, 5140, 4993, 4855, 4723, 4599, 4481, 4369, 4263, 4161, 4064, 3972, 3884, 3799, 3718, 3641, 3567, 3495, 3427, 3361, 3297, 3236, 3178, 3121, 3066, 3013, 2962, 2913, 2865, 2819, 2774, 2731, 2689, 2648, 2608, 2570, 2533, 2497, 2461, 2427, 2394, 2362, 2330, 2300, 2270, 2241, 2212, 2185, 2158, 2131, 2106, 2081, 2056, 2032, 2009, 1986, 1964, 1942, 1920, 1900, 1879, 1859, 1840, 1820, 1802, 1783, 1765, 1748, 1730, 1713, 1697, 1680, 1664, 1649, 1633, 1618, 1603, 1589, 1574, 1560, 1547, 1533, 1520, 1507, 1494, 1481, 1469, 1456, 1444, 1432, 1421, 1409, 1398, 1387, 1376, 1365, 1355, 1344, 1334, 1324, 1314, 1304, 1295, 1285, 1276, 1266, 1257, 1248, 1239, 1231, 1222, 1214, 1205, 1197, 1189, 1181, 1173, 1165, 1157, 1150, 1142, 1135, 1128, 1120, 1113, 1106, 1099, 1092, 1085, 1079, 1072, 1066, 1059, 1053, 1046, 1040, 1034, 1028, 1022, 1016, 1010, 1004, 999, 993, 987, 982, 976, 971, 966, 960, 955, 950, 945, 940, 935, 930, 925, 920, 915, 910, 906, 901, 896, 892, 887, 883, 878, 874, 869, 865, 861, 857, 853, 848, 844, 840, 836, 832, 828, 824, 820, 817, 813, 809, 805, 802, 798, 794, 791, 787, 784, 780, 777, 773, 770, 767, 763, 760, 757, 753, 750, 747, 744, 741, 737, 734, 731, 728, 725, 722, 719, 716, 713, 710, 708, 705, 702, 699, 696, 694, 691, 688, 685};
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            const int* hdiv_table = hr == 180 ? c_HsvDivTable180 : c_HsvDivTable256;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            s = (diff * c_HsvDivTable[v] + (1 << (hsv_shift-1))) >> hsv_shift;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            h = (h * hdiv_table[diff] + (1 << (hsv_shift-1))) >> hsv_shift;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            s = diff / (float)(::fabs(v) + numeric_limits<float>::epsilon());
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                float tab[4];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                tab[0] = v;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                tab[1] = v * (1.f - s);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                tab[2] = v * (1.f - s * h);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                tab[3] = v * (1.f - s * (1.f - h));
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                b = tab[c_HsvSectorData[sector][0]];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                g = tab[c_HsvSectorData[sector][1]];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                r = tab[c_HsvSectorData[sector][2]];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                float tab[4];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                tab[0] = p2;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                tab[1] = p1;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                tab[2] = p1 + (p2 - p1) * (1 - h);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                tab[3] = p1 + (p2 - p1) * h;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                b = tab[c_HlsSectorData[sector][0]];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                g = tab[c_HlsSectorData[sector][1]];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                r = tab[c_HlsSectorData[sector][2]];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    // RGB to Lab
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:        lab_shift = xyz_shift,
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:        lab_shift2 = (lab_shift + gamma_shift),
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    __constant__ ushort c_sRGBGammaTab_b[] = {0,1,1,2,2,3,4,4,5,6,6,7,8,8,9,10,11,11,12,13,14,15,16,17,19,20,21,22,24,25,26,28,29,31,33,34,36,38,40,41,43,45,47,49,51,54,56,58,60,63,65,68,70,73,75,78,81,83,86,89,92,95,98,101,105,108,111,115,118,121,125,129,132,136,140,144,147,151,155,160,164,168,172,176,181,185,190,194,199,204,209,213,218,223,228,233,239,244,249,255,260,265,271,277,282,288,294,300,306,312,318,324,331,337,343,350,356,363,370,376,383,390,397,404,411,418,426,433,440,448,455,463,471,478,486,494,502,510,518,527,535,543,552,560,569,578,586,595,604,613,622,631,641,650,659,669,678,688,698,707,717,727,737,747,757,768,778,788,799,809,820,831,842,852,863,875,886,897,908,920,931,943,954,966,978,990,1002,1014,1026,1038,1050,1063,1075,1088,1101,1113,1126,1139,1152,1165,1178,1192,1205,1218,1232,1245,1259,1273,1287,1301,1315,1329,1343,1357,1372,1386,1401,1415,1430,1445,1460,1475,1490,1505,1521,1536,1551,1567,1583,1598,1614,1630,1646,1662,1678,1695,1711,1728,1744,1761,1778,1794,1811,1828,1846,1863,1880,1897,1915,1933,1950,1968,1986,2004,2022,2040};
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    __constant__ float c_sRGBGammaTab[] = {0,7.55853e-05,0.,-7.51331e-13,7.55853e-05,7.55853e-05,-2.25399e-12,3.75665e-12,0.000151171,7.55853e-05,9.01597e-12,-6.99932e-12,0.000226756,7.55853e-05,-1.1982e-11,2.41277e-12,0.000302341,7.55853e-05,-4.74369e-12,1.19001e-11,0.000377927,7.55853e-05,3.09568e-11,-2.09095e-11,0.000453512,7.55853e-05,-3.17718e-11,1.35303e-11,0.000529097,7.55853e-05,8.81905e-12,-4.10782e-12,0.000604683,7.55853e-05,-3.50439e-12,2.90097e-12,0.000680268,7.55853e-05,5.19852e-12,-7.49607e-12,0.000755853,7.55853e-05,-1.72897e-11,2.70833e-11,0.000831439,7.55854e-05,6.39602e-11,-4.26295e-11,0.000907024,7.55854e-05,-6.39282e-11,2.70193e-11,0.000982609,7.55853e-05,1.71298e-11,-7.24017e-12,0.00105819,7.55853e-05,-4.59077e-12,1.94137e-12,0.00113378,7.55853e-05,1.23333e-12,-5.25291e-13,0.00120937,7.55853e-05,-3.42545e-13,1.59799e-13,0.00128495,7.55853e-05,1.36852e-13,-1.13904e-13,0.00136054,7.55853e-05,-2.04861e-13,2.95818e-13,0.00143612,7.55853e-05,6.82594e-13,-1.06937e-12,0.00151171,7.55853e-05,-2.52551e-12,3.98166e-12,0.00158729,7.55853e-05,9.41946e-12,-1.48573e-11,0.00166288,7.55853e-05,-3.51523e-11,5.54474e-11,0.00173846,7.55854e-05,1.3119e-10,-9.0517e-11,0.00181405,7.55854e-05,-1.40361e-10,7.37899e-11,0.00188963,7.55853e-05,8.10085e-11,-8.82272e-11,0.00196522,7.55852e-05,-1.83673e-10,1.62704e-10,0.0020408,7.55853e-05,3.04438e-10,-2.13341e-10,0.00211639,7.55853e-05,-3.35586e-10,2.25e-10,0.00219197,7.55853e-05,3.39414e-10,-2.20997e-10,0.00226756,7.55853e-05,-3.23576e-10,1.93326e-10,0.00234315,7.55853e-05,2.564e-10,-8.66446e-11,0.00241873,7.55855e-05,-3.53328e-12,-7.9578e-11,0.00249432,7.55853e-05,-2.42267e-10,1.72126e-10,0.0025699,7.55853e-05,2.74111e-10,-1.43265e-10,0.00264549,7.55854e-05,-1.55683e-10,-6.47292e-11,0.00272107,7.55849e-05,-3.4987e-10,8.67842e-10,0.00279666,7.55868e-05,2.25366e-09,-3.8723e-09,0.00287224,7.55797e-05,-9.36325e-09,1.5087e-08,0.00294783,7.56063e-05,3.58978e-08,-5.69415e-08,0.00302341,7.55072e-05,-1.34927e-07,2.13144e-07,0.003099,7.58768e-05,5.04507e-07,1.38713e-07,0.00317552,7.7302e-05,9.20646e-07,-1.55186e-07,0.00325359,7.86777e-05,4.55087e-07,4.26813e-08,0.00333276,7.97159e-05,5.83131e-07,-1.06495e-08,0.00341305,8.08502e-05,5.51182e-07,3.87467e-09,0.00349446,8.19642e-05,5.62806e-07,-1.92586e-10,0.00357698,8.30892e-05,5.62228e-07,1.0866e-09,0.00366063,8.4217e-05,5.65488e-07,5.02818e-10,0.00374542,8.53494e-05,5.66997e-07,8.60211e-10,0.00383133,8.6486e-05,5.69577e-07,7.13044e-10,0.00391839,8.76273e-05,5.71716e-07,4.78527e-10,0.00400659,8.87722e-05,5.73152e-07,1.09818e-09,0.00409594,8.99218e-05,5.76447e-07,2.50964e-10,0.00418644,9.10754e-05,5.772e-07,1.15762e-09,0.00427809,9.22333e-05,5.80672e-07,2.40865e-10,0.0043709,9.33954e-05,5.81395e-07,1.13854e-09,0.00446488,9.45616e-05,5.84811e-07,3.27267e-10,0.00456003,9.57322e-05,5.85792e-07,8.1197e-10,0.00465635,9.69062e-05,5.88228e-07,6.15823e-10,0.00475384,9.80845e-05,5.90076e-07,9.15747e-10,0.00485252,9.92674e-05,5.92823e-07,3.778e-10,0.00495238,0.000100454,5.93956e-07,8.32623e-10,0.00505343,0.000101645,5.96454e-07,4.82695e-10,0.00515567,0.000102839,5.97902e-07,9.61904e-10,0.00525911,0.000104038,6.00788e-07,3.26281e-10,0.00536375,0.00010524,6.01767e-07,9.926e-10,0.00546959,0.000106447,6.04745e-07,3.59933e-10,0.00557664,0.000107657,6.05824e-07,8.2728e-10,0.0056849,0.000108871,6.08306e-07,5.21898e-10,0.00579438,0.00011009,6.09872e-07,8.10492e-10,0.00590508,0.000111312,6.12303e-07,4.27046e-10,0.00601701,0.000112538,6.13585e-07,7.40878e-10,0.00613016,0.000113767,6.15807e-07,8.00469e-10,0.00624454,0.000115001,6.18209e-07,2.48178e-10,0.00636016,0.000116238,6.18953e-07,1.00073e-09,0.00647702,0.000117479,6.21955e-07,4.05654e-10,0.00659512,0.000118724,6.23172e-07,6.36192e-10,0.00671447,0.000119973,6.25081e-07,7.74927e-10,0.00683507,0.000121225,6.27406e-07,4.54975e-10,0.00695692,0.000122481,6.28771e-07,6.64841e-10,0.00708003,0.000123741,6.30765e-07,6.10972e-10,0.00720441,0.000125004,6.32598e-07,6.16543e-10,0.00733004,0.000126271,6.34448e-07,6.48204e-10,0.00745695,0.000127542,6.36392e-07,5.15835e-10,0.00758513,0.000128816,6.3794e-07,5.48103e-10,0.00771458,0.000130094,6.39584e-07,1.01706e-09,0.00784532,0.000131376,6.42635e-07,4.0283e-11,0.00797734,0.000132661,6.42756e-07,6.84471e-10,0.00811064,0.000133949,6.4481e-07,9.47144e-10,0.00824524,0.000135241,6.47651e-07,1.83472e-10,0.00838112,0.000136537,6.48201e-07,1.11296e-09,0.00851831,0.000137837,6.5154e-07,2.13163e-11,0.0086568,0.00013914,6.51604e-07,6.64462e-10,0.00879659,0.000140445,6.53598e-07,1.04613e-09,0.00893769,0.000141756,6.56736e-07,-1.92377e-10,0.0090801,0.000143069,6.56159e-07,1.58601e-09,0.00922383,0.000144386,6.60917e-07,-5.63754e-10,0.00936888,0.000145706,6.59226e-07,1.60033e-09,0.00951524,0.000147029,6.64027e-07,-2.49543e-10,0.00966294,0.000148356,6.63278e-07,1.26043e-09,0.00981196,0.000149687,6.67059e-07,-1.35572e-10,0.00996231,0.00015102,6.66653e-07,1.14458e-09,0.010114,0.000152357,6.70086e-07,2.13864e-10,0.010267,0.000153698,6.70728e-07,7.93856e-10,0.0104214,0.000155042,6.73109e-07,3.36077e-10,0.0105771,0.000156389,6.74118e-07,6.55765e-10,0.0107342,0.000157739,6.76085e-07,7.66211e-10,0.0108926,0.000159094,6.78384e-07,4.66116e-12,0.0110524,0.000160451,6.78398e-07,1.07775e-09,0.0112135,0.000161811,6.81631e-07,3.41023e-10,0.011376,0.000163175,6.82654e-07,3.5205e-10,0.0115398,0.000164541,6.8371e-07,1.04473e-09,0.0117051,0.000165912,6.86844e-07,1.25757e-10,0.0118717,0.000167286,6.87222e-07,3.14818e-10,0.0120396,0.000168661,6.88166e-07,1.40886e-09,0.012209,0.000170042,6.92393e-07,-3.62244e-10,0.0123797,0.000171425,6.91306e-07,9.71397e-10,0.0125518,0.000172811,6.9422e-07,2.02003e-10,0.0127253,0.0001742,6.94826e-07,1.01448e-09,0.0129002,0.000175593,6.97869e-07,3.96653e-10,0.0130765,0.00017699,6.99059e-07,1.92927e-10,0.0132542,0.000178388,6.99638e-07,6.94305e-10,0.0134333,0.00017979,7.01721e-07,7.55108e-10,0.0136138,0.000181195,7.03986e-07,1.05918e-11,0.0137957,0.000182603,7.04018e-07,1.06513e-09,0.013979,0.000184015,7.07214e-07,3.85512e-10,0.0141637,0.00018543,7.0837e-07,1.86769e-10,0.0143499,0.000186848,7.0893e-07,7.30116e-10,0.0145374,0.000188268,7.11121e-07,6.17983e-10,0.0147264,0.000189692,7.12975e-07,5.23282e-10,0.0149168,0.000191119,7.14545e-07,8.28398e-11,0.0151087,0.000192549,7.14793e-07,1.0081e-09,0.0153019,0.000193981,7.17817e-07,5.41244e-10,0.0154966,0.000195418,7.19441e-07,-3.7907e-10,0.0156928,0.000196856,7.18304e-07,1.90641e-09,0.0158903,0.000198298,7.24023e-07,-7.27387e-10,0.0160893,0.000199744,7.21841e-07,1.00317e-09,0.0162898,0.000201191,7.24851e-07,4.39949e-10,0.0164917,0.000202642,7.2617e-07,9.6234e-10,0.0166951,0.000204097,7.29057e-07,-5.64019e-10,0.0168999,0.000205554,7.27365e-07,1.29374e-09,0.0171062,0.000207012,7.31247e-07,9.77025e-10,0.017314,0.000208478,7.34178e-07,-1.47651e-09,0.0175232,0.000209942,7.29748e-07,3.06636e-09,0.0177338,0.00021141,7.38947e-07,-1.47573e-09,0.017946,0.000212884,7.3452e-07,9.7386e-10,0.0181596,0.000214356,7.37442e-07,1.30562e-09,0.0183747,0.000215835,7.41358e-07,-6.08376e-10,0.0185913,0.000217315,7.39533e-07,1.12785e-09,0.0188093,0.000218798,7.42917e-07,-1.77711e-10,0.0190289,0.000220283,7.42384e-07,1.44562e-09,0.0192499,0.000221772,7.46721e-07,-1.68825e-11,0.0194724,0.000223266,7.4667e-07,4.84533e-10,0.0196964,0.000224761,7.48124e-07,-5.85298e-11,0.0199219,0.000226257,7.47948e-07,1.61217e-09,0.0201489,0.000227757,7.52785e-07,-8.02136e-10,0.0203775,0.00022926,7.50378e-07,1.59637e-09,0.0206075,0.000230766,7.55167e-07,4.47168e-12,0.020839,0.000232276,7.55181e-07,2.48387e-10,0.021072,0.000233787,7.55926e-07,8.6474e-10,0.0213066,0.000235302,7.5852e-07,1.78299e-11,0.0215426,0.000236819,7.58573e-07,9.26567e-10,0.0217802,0.000238339,7.61353e-07,1.34529e-12,0.0220193,0.000239862,7.61357e-07,9.30659e-10,0.0222599,0.000241387,7.64149e-07,1.34529e-12,0.0225021,0.000242915,7.64153e-07,9.26567e-10,0.0227458,0.000244447,7.66933e-07,1.76215e-11,0.022991,0.00024598,7.66986e-07,8.65536e-10,0.0232377,0.000247517,7.69582e-07,2.45677e-10,0.023486,0.000249057,7.70319e-07,1.44193e-11,0.0237358,0.000250598,7.70363e-07,1.55918e-09,0.0239872,0.000252143,7.7504e-07,-6.63173e-10,0.0242401,0.000253691,7.73051e-07,1.09357e-09,0.0244946,0.000255241,7.76331e-07,1.41919e-11,0.0247506,0.000256793,7.76374e-07,7.12248e-10,0.0250082,0.000258348,7.78511e-07,8.62049e-10,0.0252673,0.000259908,7.81097e-07,-4.35061e-10,0.025528,0.000261469,7.79792e-07,8.7825e-10,0.0257902,0.000263031,7.82426e-07,6.47181e-10,0.0260541,0.000264598,7.84368e-07,2.58448e-10,0.0263194,0.000266167,7.85143e-07,1.81558e-10,0.0265864,0.000267738,7.85688e-07,8.78041e-10,0.0268549,0.000269312,7.88322e-07,3.15102e-11,0.027125,0.000270889,7.88417e-07,8.58525e-10,0.0273967,0.000272468,7.90992e-07,2.59812e-10,0.02767,0.000274051,7.91772e-07,-3.5224e-11,0.0279448,0.000275634,7.91666e-07,1.74377e-09,0.0282212,0.000277223,7.96897e-07,-1.35196e-09,0.0284992,0.000278813,7.92841e-07,1.80141e-09,0.0287788,0.000280404,7.98246e-07,-2.65629e-10,0.0290601,0.000281999,7.97449e-07,1.12374e-09,0.0293428,0.000283598,8.0082e-07,-5.04106e-10,0.0296272,0.000285198,7.99308e-07,8.92764e-10,0.0299132,0.000286799,8.01986e-07,6.58379e-10,0.0302008,0.000288405,8.03961e-07,1.98971e-10,0.0304901,0.000290014,8.04558e-07,4.08382e-10,0.0307809,0.000291624,8.05783e-07,3.01839e-11,0.0310733,0.000293236,8.05874e-07,1.33343e-09,0.0313673,0.000294851,8.09874e-07,2.2419e-10,0.031663,0.000296472,8.10547e-07,-3.67606e-10,0.0319603,0.000298092,8.09444e-07,1.24624e-09,0.0322592,0.000299714,8.13182e-07,-8.92025e-10,0.0325597,0.000301338,8.10506e-07,2.32183e-09,0.0328619,0.000302966,8.17472e-07,-9.44719e-10,0.0331657,0.000304598,8.14638e-07,1.45703e-09,0.0334711,0.000306232,8.19009e-07,-1.15805e-09,0.0337781,0.000307866,8.15535e-07,3.17507e-09,0.0340868,0.000309507,8.2506e-07,-4.09161e-09,0.0343971,0.000311145,8.12785e-07,5.74079e-09,0.0347091,0.000312788,8.30007e-07,-3.97034e-09,0.0350227,0.000314436,8.18096e-07,2.68985e-09,0.035338,0.00031608,8.26166e-07,6.61676e-10,0.0356549,0.000317734,8.28151e-07,-1.61123e-09,0.0359734,0.000319386,8.23317e-07,2.05786e-09,0.0362936,0.000321038,8.29491e-07,8.30388e-10,0.0366155,0.0003227,8.31982e-07,-1.65424e-09,0.036939,0.000324359,8.27019e-07,2.06129e-09,0.0372642,0.000326019,8.33203e-07,8.59719e-10,0.0375911,0.000327688,8.35782e-07,-1.77488e-09,0.0379196,0.000329354,8.30458e-07,2.51464e-09,0.0382498,0.000331023,8.38002e-07,-8.33135e-10,0.0385817,0.000332696,8.35502e-07,8.17825e-10,0.0389152,0.00033437,8.37956e-07,1.28718e-09,0.0392504,0.00033605,8.41817e-07,-2.2413e-09,0.0395873,0.000337727,8.35093e-07,3.95265e-09,0.0399258,0.000339409,8.46951e-07,-2.39332e-09,0.0402661,0.000341095,8.39771e-07,1.89533e-09,0.040608,0.000342781,8.45457e-07,-1.46271e-09,0.0409517,0.000344467,8.41069e-07,3.95554e-09,0.041297,0.000346161,8.52936e-07,-3.18369e-09,0.041644,0.000347857,8.43385e-07,1.32873e-09,0.0419927,0.000349548,8.47371e-07,1.59402e-09,0.0423431,0.000351248,8.52153e-07,-2.54336e-10,0.0426952,0.000352951,8.5139e-07,-5.76676e-10,0.043049,0.000354652,8.4966e-07,2.56114e-09,0.0434045,0.000356359,8.57343e-07,-2.21744e-09,0.0437617,0.000358067,8.50691e-07,2.58344e-09,0.0441206,0.000359776,8.58441e-07,-6.65826e-10,0.0444813,0.000361491,8.56444e-07,7.99218e-11,0.0448436,0.000363204,8.56684e-07,3.46063e-10,0.0452077,0.000364919,8.57722e-07,2.26116e-09,0.0455734,0.000366641,8.64505e-07,-1.94005e-09,0.045941,0.000368364,8.58685e-07,1.77384e-09,0.0463102,0.000370087,8.64007e-07,-1.43005e-09,0.0466811,0.000371811,8.59717e-07,3.94634e-09,0.0470538,0.000373542,8.71556e-07,-3.17946e-09,0.0474282,0.000375276,8.62017e-07,1.32104e-09,0.0478043,0.000377003,8.6598e-07,1.62045e-09,0.0481822,0.00037874,8.70842e-07,-3.52297e-10,0.0485618,0.000380481,8.69785e-07,-2.11211e-10,0.0489432,0.00038222,8.69151e-07,1.19716e-09,0.0493263,0.000383962,8.72743e-07,-8.52026e-10,0.0497111,0.000385705,8.70187e-07,2.21092e-09,0.0500977,0.000387452,8.76819e-07,-5.41339e-10,0.050486,0.000389204,8.75195e-07,-4.5361e-11,0.0508761,0.000390954,8.75059e-07,7.22669e-10,0.0512679,0.000392706,8.77227e-07,8.79936e-10,0.0516615,0.000394463,8.79867e-07,-5.17048e-10,0.0520568,0.000396222,8.78316e-07,1.18833e-09,0.0524539,0.000397982,8.81881e-07,-5.11022e-10,0.0528528,0.000399744,8.80348e-07,8.55683e-10,0.0532534,0.000401507,8.82915e-07,8.13562e-10,0.0536558,0.000403276,8.85356e-07,-3.84603e-10,0.05406,0.000405045,8.84202e-07,7.24962e-10,0.0544659,0.000406816,8.86377e-07,1.20986e-09,0.0548736,0.000408592,8.90006e-07,-1.83896e-09,0.0552831,0.000410367,8.84489e-07,2.42071e-09,0.0556944,0.000412143,8.91751e-07,-3.93413e-10,0.0561074,0.000413925,8.90571e-07,-8.46967e-10,0.0565222,0.000415704,8.8803e-07,3.78122e-09,0.0569388,0.000417491,8.99374e-07,-3.1021e-09,0.0573572,0.000419281,8.90068e-07,1.17658e-09,0.0577774,0.000421064,8.93597e-07,2.12117e-09,0.0581993,0.000422858,8.99961e-07,-2.21068e-09,0.0586231,0.000424651,8.93329e-07,2.9961e-09,0.0590486,0.000426447,9.02317e-07,-2.32311e-09,0.059476,0.000428244,8.95348e-07,2.57122e-09,0.0599051,0.000430043,9.03062e-07,-5.11098e-10,0.0603361,0.000431847,9.01528e-07,-5.27166e-10,0.0607688,0.000433649,8.99947e-07,2.61984e-09,0.0612034,0.000435457,9.07806e-07,-2.50141e-09,0.0616397,0.000437265,9.00302e-07,3.66045e-09,0.0620779,0.000439076,9.11283e-07,-4.68977e-09,0.0625179,0.000440885,8.97214e-07,7.64783e-09,0.0629597,0.000442702,9.20158e-07,-7.27499e-09,0.0634033,0.000444521,8.98333e-07,6.55113e-09,0.0638487,0.000446337,9.17986e-07,-4.02844e-09,0.0642959,0.000448161,9.05901e-07,2.11196e-09,0.064745,0.000449979,9.12236e-07,3.03125e-09,0.0651959,0.000451813,9.2133e-07,-6.78648e-09,0.0656486,0.000453635,9.00971e-07,9.21375e-09,0.0661032,0.000455464,9.28612e-07,-7.71684e-09,0.0665596,0.000457299,9.05462e-07,6.7522e-09,0.0670178,0.00045913,9.25718e-07,-4.3907e-09,0.0674778,0.000460968,9.12546e-07,3.36e-09,0.0679397,0.000462803,9.22626e-07,-1.59876e-09,0.0684034,0.000464644,9.1783e-07,3.0351e-09,0.068869,0.000466488,9.26935e-07,-3.09101e-09,0.0693364,0.000468333,9.17662e-07,1.8785e-09,0.0698057,0.000470174,9.23298e-07,3.02733e-09,0.0702768,0.00047203,9.3238e-07,-6.53722e-09,0.0707497,0.000473875,9.12768e-07,8.22054e-09,0.0712245,0.000475725,9.37429e-07,-3.99325e-09,0.0717012,0.000477588,9.2545e-07,3.01839e-10,0.0721797,0.00047944,9.26355e-07,2.78597e-09,0.0726601,0.000481301,9.34713e-07,-3.99507e-09,0.0731423,0.000483158,9.22728e-07,5.7435e-09,0.0736264,0.000485021,9.39958e-07,-4.07776e-09,0.0741123,0.000486888,9.27725e-07,3.11695e-09,0.0746002,0.000488753,9.37076e-07,-9.39394e-10,0.0750898,0.000490625,9.34258e-07,6.4055e-10,0.0755814,0.000492495,9.3618e-07,-1.62265e-09,0.0760748,0.000494363,9.31312e-07,5.84995e-09,0.0765701,0.000496243,9.48861e-07,-6.87601e-09,0.0770673,0.00049812,9.28233e-07,6.75296e-09,0.0775664,0.000499997,9.48492e-07,-5.23467e-09,0.0780673,0.000501878,9.32788e-07,6.73523e-09,0.0785701,0.000503764,9.52994e-07,-6.80514e-09,0.0790748,0.000505649,9.32578e-07,5.5842e-09,0.0795814,0.000507531,9.49331e-07,-6.30583e-10,0.0800899,0.000509428,9.47439e-07,-3.0618e-09,0.0806003,0.000511314,9.38254e-07,5.4273e-09,0.0811125,0.000513206,9.54536e-07,-3.74627e-09,0.0816267,0.000515104,9.43297e-07,2.10713e-09,0.0821427,0.000516997,9.49618e-07,2.76839e-09,0.0826607,0.000518905,9.57924e-07,-5.73006e-09,0.0831805,0.000520803,9.40733e-07,5.25072e-09,0.0837023,0.0005227,9.56486e-07,-3.71718e-10,0.084226,0.000524612,9.5537e-07,-3.76404e-09,0.0847515,0.000526512,9.44078e-07,7.97735e-09,0.085279,0.000528424,9.6801e-07,-5.79367e-09,0.0858084,0.000530343,9.50629e-07,2.96268e-10,0.0863397,0.000532245,9.51518e-07,4.6086e-09,0.0868729,0.000534162,9.65344e-07,-3.82947e-09,0.087408,0.000536081,9.53856e-07,3.25861e-09,0.087945,0.000537998,9.63631e-07,-1.7543e-09,0.088484,0.00053992,9.58368e-07,3.75849e-09,0.0890249,0.000541848,9.69644e-07,-5.82891e-09,0.0895677,0.00054377,9.52157e-07,4.65593e-09,0.0901124,0.000545688,9.66125e-07,2.10643e-09,0.0906591,0.000547627,9.72444e-07,-5.63099e-09,0.0912077,0.000549555,9.55551e-07,5.51627e-09,0.0917582,0.000551483,9.721e-07,-1.53292e-09,0.0923106,0.000553422,9.67501e-07,6.15311e-10,0.092865,0.000555359,9.69347e-07,-9.28291e-10,0.0934213,0.000557295,9.66562e-07,3.09774e-09,0.0939796,0.000559237,9.75856e-07,-4.01186e-09,0.0945398,0.000561177,9.6382e-07,5.49892e-09,0.095102,0.000563121,9.80317e-07,-3.08258e-09,0.0956661,0.000565073,9.71069e-07,-6.19176e-10,0.0962321,0.000567013,9.69212e-07,5.55932e-09,0.0968001,0.000568968,9.8589e-07,-6.71704e-09,0.09737,0.00057092,9.65738e-07,6.40762e-09,0.0979419,0.00057287,9.84961e-07,-4.0122e-09,0.0985158,0.000574828,9.72925e-07,2.19059e-09,0.0990916,0.000576781,9.79496e-07,2.70048e-09,0.0996693,0.000578748,9.87598e-07,-5.54193e-09,0.100249,0.000580706,9.70972e-07,4.56597e-09,0.100831,0.000582662,9.8467e-07,2.17923e-09,0.101414,0.000584638,9.91208e-07,-5.83232e-09,0.102,0.000586603,9.73711e-07,6.24884e-09,0.102588,0.000588569,9.92457e-07,-4.26178e-09,0.103177,0.000590541,9.79672e-07,3.34781e-09,0.103769,0.00059251,9.89715e-07,-1.67904e-09,0.104362,0.000594485,9.84678e-07,3.36839e-09,0.104958,0.000596464,9.94783e-07,-4.34397e-09,0.105555,0.000598441,9.81751e-07,6.55696e-09,0.106155,0.000600424,1.00142e-06,-6.98272e-09,0.106756,0.000602406,9.80474e-07,6.4728e-09,0.107359,0.000604386,9.99893e-07,-4.00742e-09,0.107965,0.000606374,9.8787e-07,2.10654e-09,0.108572,0.000608356,9.9419e-07,3.0318e-09,0.109181,0.000610353,1.00329e-06,-6.7832e-09,0.109793,0.00061234,9.82936e-07,9.1998e-09,0.110406,0.000614333,1.01054e-06,-7.6642e-09,0.111021,0.000616331,9.87543e-07,6.55579e-09,0.111639,0.000618326,1.00721e-06,-3.65791e-09,0.112258,0.000620329,9.96236e-07,6.25467e-10,0.112879,0.000622324,9.98113e-07,1.15593e-09,0.113503,0.000624323,1.00158e-06,2.20158e-09,0.114128,0.000626333,1.00819e-06,-2.51191e-09,0.114755,0.000628342,1.00065e-06,3.95517e-10,0.115385,0.000630345,1.00184e-06,9.29807e-10,0.116016,0.000632351,1.00463e-06,3.33599e-09,0.116649,0.00063437,1.01463e-06,-6.82329e-09,0.117285,0.000636379,9.94163e-07,9.05595e-09,0.117922,0.000638395,1.02133e-06,-7.04862e-09,0.118562,0.000640416,1.00019e-06,4.23737e-09,0.119203,0.000642429,1.0129e-06,-2.45033e-09,0.119847,0.000644448,1.00555e-06,5.56395e-09,0.120492,0.000646475,1.02224e-06,-4.9043e-09,0.121139,0.000648505,1.00753e-06,-8.47952e-10,0.121789,0.000650518,1.00498e-06,8.29622e-09,0.122441,0.000652553,1.02987e-06,-9.98538e-09,0.123094,0.000654582,9.99914e-07,9.2936e-09,0.12375,0.00065661,1.02779e-06,-4.83707e-09,0.124407,0.000658651,1.01328e-06,2.60411e-09,0.125067,0.000660685,1.0211e-06,-5.57945e-09,0.125729,0.000662711,1.00436e-06,1.22631e-08,0.126392,0.000664756,1.04115e-06,-1.36704e-08,0.127058,0.000666798,1.00014e-06,1.26161e-08,0.127726,0.000668836,1.03798e-06,-6.99155e-09,0.128396,0.000670891,1.01701e-06,4.48836e-10,0.129068,0.000672926,1.01836e-06,5.19606e-09,0.129742,0.000674978,1.03394e-06,-6.3319e-09,0.130418,0.000677027,1.01495e-06,5.2305e-09,0.131096,0.000679073,1.03064e-06,3.11123e-10,0.131776,0.000681135,1.03157e-06,-6.47511e-09,0.132458,0.000683179,1.01215e-06,1.06882e-08,0.133142,0.000685235,1.04421e-06,-6.47519e-09,0.133829,0.000687304,1.02479e-06,3.11237e-10,0.134517,0.000689355,1.02572e-06,5.23035e-09,0.135207,0.000691422,1.04141e-06,-6.3316e-09,0.1359,0.000693486,1.02242e-06,5.19484e-09,0.136594,0.000695546,1.038e-06,4.53497e-10,0.137291,0.000697623,1.03936e-06,-7.00891e-09,0.137989,0.000699681,1.01834e-06,1.2681e-08,0.13869,0.000701756,1.05638e-06,-1.39128e-08,0.139393,0.000703827,1.01464e-06,1.31679e-08,0.140098,0.000705896,1.05414e-06,-8.95659e-09,0.140805,0.000707977,1.02727e-06,7.75742e-09,0.141514,0.000710055,1.05055e-06,-7.17182e-09,0.142225,0.000712135,1.02903e-06,6.02862e-09,0.142938,0.000714211,1.04712e-06,-2.04163e-09,0.143653,0.000716299,1.04099e-06,2.13792e-09,0.144371,0.000718387,1.04741e-06,-6.51009e-09,0.14509,0.000720462,1.02787e-06,9.00123e-09,0.145812,0.000722545,1.05488e-06,3.07523e-10,0.146535,0.000724656,1.0558e-06,-1.02312e-08,0.147261,0.000726737,1.02511e-06,1.0815e-08,0.147989,0.000728819,1.05755e-06,-3.22681e-09,0.148719,0.000730925,1.04787e-06,2.09244e-09,0.14945,0.000733027,1.05415e-06,-5.143e-09,0.150185,0.00073512,1.03872e-06,3.57844e-09,0.150921,0.000737208,1.04946e-06,5.73027e-09,0.151659,0.000739324,1.06665e-06,-1.15983e-08,0.152399,0.000741423,1.03185e-06,1.08605e-08,0.153142,0.000743519,1.06443e-06,-2.04106e-09,0.153886,0.000745642,1.05831e-06,-2.69642e-09,0.154633,0.00074775,1.05022e-06,-2.07425e-09,0.155382,0.000749844,1.044e-06,1.09934e-08,0.156133,0.000751965,1.07698e-06,-1.20972e-08,0.156886,0.000754083,1.04069e-06,7.59288e-09,0.157641,0.000756187,1.06347e-06,-3.37305e-09,0.158398,0.000758304,1.05335e-06,5.89921e-09,0.159158,0.000760428,1.07104e-06,-5.32248e-09,0.159919,0.000762554,1.05508e-06,4.8927e-10,0.160683,0.000764666,1.05654e-06,3.36547e-09,0.161448,0.000766789,1.06664e-06,9.50081e-10,0.162216,0.000768925,1.06949e-06,-7.16568e-09,0.162986,0.000771043,1.04799e-06,1.28114e-08,0.163758,0.000773177,1.08643e-06,-1.42774e-08,0.164533,0.000775307,1.0436e-06,1.44956e-08,0.165309,0.000777438,1.08708e-06,-1.39025e-08,0.166087,0.00077957,1.04538e-06,1.13118e-08,0.166868,0.000781695,1.07931e-06,-1.54224e-09,0.167651,0.000783849,1.07468e-06,-5.14312e-09,0.168436,0.000785983,1.05925e-06,7.21381e-09,0.169223,0.000788123,1.0809e-06,-8.81096e-09,0.170012,0.000790259,1.05446e-06,1.31289e-08,0.170803,0.000792407,1.09385e-06,-1.39022e-08,0.171597,0.000794553,1.05214e-06,1.26775e-08,0.172392,0.000796695,1.09018e-06,-7.00557e-09,0.17319,0.000798855,1.06916e-06,4.43796e-10,0.17399,0.000800994,1.07049e-06,5.23031e-09,0.174792,0.000803151,1.08618e-06,-6.46397e-09,0.175596,0.000805304,1.06679e-06,5.72444e-09,0.176403,0.000807455,1.08396e-06,-1.53254e-09,0.177211,0.000809618,1.07937e-06,4.05673e-10,0.178022,0.000811778,1.08058e-06,-9.01916e-11,0.178835,0.000813939,1.08031e-06,-4.49821e-11,0.17965,0.000816099,1.08018e-06,2.70234e-10,0.180467,0.00081826,1.08099e-06,-1.03603e-09,0.181286,0.000820419,1.07788e-06,3.87392e-09,0.182108,0.000822587,1.0895e-06,4.41522e-10,0.182932,0.000824767,1.09083e-06,-5.63997e-09,0.183758,0.000826932,1.07391e-06,7.21707e-09,0.184586,0.000829101,1.09556e-06,-8.32718e-09,0.185416,0.000831267,1.07058e-06,1.11907e-08,0.186248,0.000833442,1.10415e-06,-6.63336e-09,0.187083,0.00083563,1.08425e-06,4.41484e-10,0.187919,0.0008378,1.08557e-06,4.86754e-09,0.188758,0.000839986,1.10017e-06,-5.01041e-09,0.189599,0.000842171,1.08514e-06,2.72811e-10,0.190443,0.000844342,1.08596e-06,3.91916e-09,0.191288,0.000846526,1.09772e-06,-1.04819e-09,0.192136,0.000848718,1.09457e-06,2.73531e-10,0.192985,0.000850908,1.0954e-06,-4.58916e-11,0.193837,0.000853099,1.09526e-06,-9.01158e-11,0.194692,0.000855289,1.09499e-06,4.06506e-10,0.195548,0.00085748,1.09621e-06,-1.53595e-09,0.196407,0.000859668,1.0916e-06,5.73717e-09,0.197267,0.000861869,1.10881e-06,-6.51164e-09,0.19813,0.000864067,1.08928e-06,5.40831e-09,0.198995,0.000866261,1.1055e-06,-2.20401e-10,0.199863,0.000868472,1.10484e-06,-4.52652e-09,0.200732,0.000870668,1.09126e-06,3.42508e-09,0.201604,0.000872861,1.10153e-06,5.72762e-09,0.202478,0.000875081,1.11872e-06,-1.14344e-08,0.203354,0.000877284,1.08441e-06,1.02076e-08,0.204233,0.000879484,1.11504e-06,4.06355e-10,0.205113,0.000881715,1.11626e-06,-1.18329e-08,0.205996,0.000883912,1.08076e-06,1.71227e-08,0.206881,0.000886125,1.13213e-06,-1.19546e-08,0.207768,0.000888353,1.09626e-06,8.93465e-10,0.208658,0.000890548,1.09894e-06,8.38062e-09,0.209549,0.000892771,1.12408e-06,-4.61353e-09,0.210443,0.000895006,1.11024e-06,-4.82756e-09,0.211339,0.000897212,1.09576e-06,9.02245e-09,0.212238,0.00089943,1.12283e-06,-1.45997e-09,0.213138,0.000901672,1.11845e-06,-3.18255e-09,0.214041,0.000903899,1.1089e-06,-7.11073e-10,0.214946,0.000906115,1.10677e-06,6.02692e-09,0.215853,0.000908346,1.12485e-06,-8.49548e-09,0.216763,0.00091057,1.09936e-06,1.30537e-08,0.217675,0.000912808,1.13852e-06,-1.3917e-08,0.218588,0.000915044,1.09677e-06,1.28121e-08,0.219505,0.000917276,1.13521e-06,-7.5288e-09,0.220423,0.000919523,1.11262e-06,2.40205e-09,0.221344,0.000921756,1.11983e-06,-2.07941e-09,0.222267,0.000923989,1.11359e-06,5.91551e-09,0.223192,0.000926234,1.13134e-06,-6.68149e-09,0.224119,0.000928477,1.11129e-06,5.90929e-09,0.225049,0.000930717,1.12902e-06,-2.05436e-09,0.22598,0.000932969,1.12286e-06,2.30807e-09,0.226915,0.000935222,1.12978e-06,-7.17796e-09,0.227851,0.00093746,1.10825e-06,1.15028e-08,0.228789,0.000939711,1.14276e-06,-9.03083e-09,0.22973,0.000941969,1.11566e-06,9.71932e-09,0.230673,0.00094423,1.14482e-06,-1.49452e-08,0.231619,0.000946474,1.09998e-06,2.02591e-08,0.232566,0.000948735,1.16076e-06,-2.13879e-08,0.233516,0.000950993,1.0966e-06,2.05888e-08,0.234468,0.000953247,1.15837e-06,-1.62642e-08,0.235423,0.000955515,1.10957e-06,1.46658e-08,0.236379,0.000957779,1.15357e-06,-1.25966e-08,0.237338,0.000960048,1.11578e-06,5.91793e-09,0.238299,0.000962297,1.13353e-06,3.82602e-09,0.239263,0.000964576,1.14501e-06,-6.3208e-09,0.240229,0.000966847,1.12605e-06,6.55613e-09,0.241197,0.000969119,1.14572e-06,-5.00268e-09,0.242167,0.000971395,1.13071e-06,-1.44659e-09,0.243139,0.000973652,1.12637e-06,1.07891e-08,0.244114,0.000975937,1.15874e-06,-1.19073e-08,0.245091,0.000978219,1.12302e-06,7.03782e-09,0.246071,0.000980486,1.14413e-06,-1.34276e-09,0.247052,0.00098277,1.1401e-06,-1.66669e-09,0.248036,0.000985046,1.1351e-06,8.00935e-09,0.249022,0.00098734,1.15913e-06,-1.54694e-08,0.250011,0.000989612,1.11272e-06,2.4066e-08,0.251002,0.000991909,1.18492e-06,-2.11901e-08,0.251995,0.000994215,1.12135e-06,1.08973e-09,0.25299,0.000996461,1.12462e-06,1.68311e-08,0.253988,0.000998761,1.17511e-06,-8.8094e-09,0.254987,0.00100109,1.14868e-06,-1.13958e-08,0.25599,0.00100335,1.1145e-06,2.45902e-08,0.256994,0.00100565,1.18827e-06,-2.73603e-08,0.258001,0.00100795,1.10618e-06,2.52464e-08,0.25901,0.00101023,1.18192e-06,-1.40207e-08,0.260021,0.00101256,1.13986e-06,1.03387e-09,0.261035,0.00101484,1.14296e-06,9.8853e-09,0.262051,0.00101715,1.17262e-06,-1.07726e-08,0.263069,0.00101947,1.1403e-06,3.40272e-09,0.26409,0.00102176,1.15051e-06,-2.83827e-09,0.265113,0.00102405,1.142e-06,7.95039e-09,0.266138,0.00102636,1.16585e-06,8.39047e-10,0.267166,0.00102869,1.16836e-06,-1.13066e-08,0.268196,0.00103099,1.13444e-06,1.4585e-08,0.269228,0.00103331,1.1782e-06,-1.72314e-08,0.270262,0.00103561,1.1265e-06,2.45382e-08,0.271299,0.00103794,1.20012e-06,-2.13166e-08,0.272338,0.00104028,1.13617e-06,1.12364e-09,0.273379,0.00104255,1.13954e-06,1.68221e-08,0.274423,0.00104488,1.19001e-06,-8.80736e-09,0.275469,0.00104723,1.16358e-06,-1.13948e-08,0.276518,0.00104953,1.1294e-06,2.45839e-08,0.277568,0.00105186,1.20315e-06,-2.73361e-08,0.278621,0.00105418,1.12114e-06,2.51559e-08,0.279677,0.0010565,1.19661e-06,-1.36832e-08,0.280734,0.00105885,1.15556e-06,-2.25706e-10,0.281794,0.00106116,1.15488e-06,1.45862e-08,0.282857,0.00106352,1.19864e-06,-2.83167e-08,0.283921,0.00106583,1.11369e-06,3.90759e-08,0.284988,0.00106817,1.23092e-06,-3.85801e-08,0.286058,0.00107052,1.11518e-06,2.58375e-08,0.287129,0.00107283,1.19269e-06,-5.16498e-09,0.288203,0.0010752,1.1772e-06,-5.17768e-09,0.28928,0.00107754,1.16167e-06,-3.92671e-09,0.290358,0.00107985,1.14988e-06,2.08846e-08,0.29144,0.00108221,1.21254e-06,-2.00072e-08,0.292523,0.00108458,1.15252e-06,-4.60659e-10,0.293609,0.00108688,1.15114e-06,2.18499e-08,0.294697,0.00108925,1.21669e-06,-2.73343e-08,0.295787,0.0010916,1.13468e-06,2.78826e-08,0.29688,0.00109395,1.21833e-06,-2.45915e-08,0.297975,0.00109632,1.14456e-06,1.08787e-08,0.299073,0.00109864,1.17719e-06,1.08788e-08,0.300172,0.00110102,1.20983e-06,-2.45915e-08,0.301275,0.00110337,1.13605e-06,2.78828e-08,0.302379,0.00110573,1.2197e-06,-2.73348e-08,0.303486,0.00110808,1.1377e-06,2.18518e-08,0.304595,0.00111042,1.20325e-06,-4.67556e-10,0.305707,0.00111283,1.20185e-06,-1.99816e-08,0.306821,0.00111517,1.14191e-06,2.07891e-08,0.307937,0.00111752,1.20427e-06,-3.57026e-09,0.309056,0.00111992,1.19356e-06,-6.50797e-09,0.310177,0.00112228,1.17404e-06,-2.00165e-10,0.3113,0.00112463,1.17344e-06,7.30874e-09,0.312426,0.001127,1.19536e-06,7.67424e-10,0.313554,0.00112939,1.19767e-06,-1.03784e-08,0.314685,0.00113176,1.16653e-06,1.09437e-08,0.315818,0.00113412,1.19936e-06,-3.59406e-09,0.316953,0.00113651,1.18858e-06,3.43251e-09,0.318091,0.0011389,1.19888e-06,-1.0136e-08,0.319231,0.00114127,1.16847e-06,7.30915e-09,0.320374,0.00114363,1.1904e-06,1.07018e-08,0.321518,0.00114604,1.2225e-06,-2.03137e-08,0.322666,0.00114842,1.16156e-06,1.09484e-08,0.323815,0.00115078,1.19441e-06,6.32224e-09,0.324967,0.00115319,1.21337e-06,-6.43509e-09,0.326122,0.00115559,1.19407e-06,-1.03842e-08,0.327278,0.00115795,1.16291e-06,1.81697e-08,0.328438,0.00116033,1.21742e-06,-2.6901e-09,0.329599,0.00116276,1.20935e-06,-7.40939e-09,0.330763,0.00116515,1.18713e-06,2.52533e-09,0.331929,0.00116754,1.1947e-06,-2.69191e-09,0.333098,0.00116992,1.18663e-06,8.24218e-09,0.334269,0.00117232,1.21135e-06,-4.74377e-10,0.335443,0.00117474,1.20993e-06,-6.34471e-09,0.336619,0.00117714,1.1909e-06,-3.94922e-09,0.337797,0.00117951,1.17905e-06,2.21417e-08,0.338978,0.00118193,1.24547e-06,-2.50128e-08,0.340161,0.00118435,1.17043e-06,1.8305e-08,0.341346,0.00118674,1.22535e-06,-1.84048e-08,0.342534,0.00118914,1.17013e-06,2.55121e-08,0.343725,0.00119156,1.24667e-06,-2.40389e-08,0.344917,0.00119398,1.17455e-06,1.10389e-08,0.346113,0.00119636,1.20767e-06,9.68574e-09,0.34731,0.0011988,1.23673e-06,-1.99797e-08,0.34851,0.00120122,1.17679e-06,1.06284e-08,0.349713,0.0012036,1.20867e-06,7.26868e-09,0.350917,0.00120604,1.23048e-06,-9.90072e-09,0.352125,0.00120847,1.20078e-06,2.53177e-09,0.353334,0.00121088,1.20837e-06,-2.26199e-10,0.354546,0.0012133,1.20769e-06,-1.62705e-09,0.355761,0.00121571,1.20281e-06,6.73435e-09,0.356978,0.00121813,1.22302e-06,4.49207e-09,0.358197,0.00122059,1.23649e-06,-2.47027e-08,0.359419,0.00122299,1.16238e-06,3.47142e-08,0.360643,0.00122542,1.26653e-06,-2.47472e-08,0.36187,0.00122788,1.19229e-06,4.66965e-09,0.363099,0.00123028,1.20629e-06,6.06872e-09,0.36433,0.00123271,1.2245e-06,8.57729e-10,0.365564,0.00123516,1.22707e-06,-9.49952e-09,0.366801,0.00123759,1.19858e-06,7.33792e-09,0.36804,0.00124001,1.22059e-06,9.95025e-09,0.369281,0.00124248,1.25044e-06,-1.73366e-08,0.370525,0.00124493,1.19843e-06,-2.08464e-10,0.371771,0.00124732,1.1978e-06,1.81704e-08,0.373019,0.00124977,1.25232e-06,-1.28683e-08,0.37427,0.00125224,1.21371e-06,3.50042e-09,0.375524,0.00125468,1.22421e-06,-1.1335e-09,0.37678,0.00125712,1.22081e-06,1.03345e-09,0.378038,0.00125957,1.22391e-06,-3.00023e-09,0.379299,0.00126201,1.21491e-06,1.09676e-08,0.380562,0.00126447,1.24781e-06,-1.10676e-08,0.381828,0.00126693,1.21461e-06,3.50042e-09,0.383096,0.00126937,1.22511e-06,-2.93403e-09,0.384366,0.00127181,1.21631e-06,8.23574e-09,0.385639,0.00127427,1.24102e-06,-2.06607e-10,0.386915,0.00127675,1.2404e-06,-7.40935e-09,0.388193,0.00127921,1.21817e-06,4.1761e-11,0.389473,0.00128165,1.21829e-06,7.24223e-09,0.390756,0.0012841,1.24002e-06,7.91564e-10,0.392042,0.00128659,1.2424e-06,-1.04086e-08,0.393329,0.00128904,1.21117e-06,1.10405e-08,0.39462,0.0012915,1.24429e-06,-3.951e-09,0.395912,0.00129397,1.23244e-06,4.7634e-09,0.397208,0.00129645,1.24673e-06,-1.51025e-08,0.398505,0.0012989,1.20142e-06,2.58443e-08,0.399805,0.00130138,1.27895e-06,-2.86702e-08,0.401108,0.00130385,1.19294e-06,2.92318e-08,0.402413,0.00130632,1.28064e-06,-2.86524e-08,0.403721,0.0013088,1.19468e-06,2.57731e-08,0.405031,0.00131127,1.272e-06,-1.48355e-08,0.406343,0.00131377,1.2275e-06,3.76652e-09,0.407658,0.00131623,1.23879e-06,-2.30784e-10,0.408976,0.00131871,1.2381e-06,-2.84331e-09,0.410296,0.00132118,1.22957e-06,1.16041e-08,0.411618,0.00132367,1.26438e-06,-1.37708e-08,0.412943,0.00132616,1.22307e-06,1.36768e-08,0.41427,0.00132865,1.2641e-06,-1.1134e-08,0.4156,0.00133114,1.2307e-06,1.05714e-09,0.416933,0.00133361,1.23387e-06,6.90538e-09,0.418267,0.00133609,1.25459e-06,1.12372e-09,0.419605,0.00133861,1.25796e-06,-1.14002e-08,0.420945,0.00134109,1.22376e-06,1.46747e-08,0.422287,0.00134358,1.26778e-06,-1.7496e-08,0.423632,0.00134606,1.21529e-06,2.5507e-08,0.424979,0.00134857,1.29182e-06,-2.49272e-08,0.426329,0.00135108,1.21703e-06,1.45972e-08,0.427681,0.00135356,1.26083e-06,-3.65935e-09,0.429036,0.00135607,1.24985e-06,4.00178e-11,0.430393,0.00135857,1.24997e-06,3.49917e-09,0.431753,0.00136108,1.26047e-06,-1.40366e-08,0.433116,0.00136356,1.21836e-06,2.28448e-08,0.43448,0.00136606,1.28689e-06,-1.77378e-08,0.435848,0.00136858,1.23368e-06,1.83043e-08,0.437218,0.0013711,1.28859e-06,-2.56769e-08,0.43859,0.0013736,1.21156e-06,2.47987e-08,0.439965,0.0013761,1.28595e-06,-1.39133e-08,0.441342,0.00137863,1.24421e-06,1.05202e-09,0.442722,0.00138112,1.24737e-06,9.70507e-09,0.444104,0.00138365,1.27649e-06,-1.00698e-08,0.445489,0.00138617,1.24628e-06,7.72123e-10,0.446877,0.00138867,1.24859e-06,6.98132e-09,0.448267,0.00139118,1.26954e-06,1.10477e-09,0.449659,0.00139373,1.27285e-06,-1.14003e-08,0.451054,0.00139624,1.23865e-06,1.4694e-08,0.452452,0.00139876,1.28273e-06,-1.75734e-08,0.453852,0.00140127,1.23001e-06,2.5797e-08,0.455254,0.00140381,1.3074e-06,-2.60097e-08,0.456659,0.00140635,1.22937e-06,1.86371e-08,0.458067,0.00140886,1.28529e-06,-1.8736e-08,0.459477,0.00141137,1.22908e-06,2.65048e-08,0.46089,0.00141391,1.30859e-06,-2.76784e-08,0.462305,0.00141645,1.22556e-06,2.46043e-08,0.463722,0.00141897,1.29937e-06,-1.11341e-08,0.465143,0.00142154,1.26597e-06,-9.87033e-09,0.466565,0.00142404,1.23636e-06,2.08131e-08,0.467991,0.00142657,1.2988e-06,-1.37773e-08,0.469419,0.00142913,1.25746e-06,4.49378e-09,0.470849,0.00143166,1.27094e-06,-4.19781e-09,0.472282,0.00143419,1.25835e-06,1.22975e-08,0.473717,0.00143674,1.29524e-06,-1.51902e-08,0.475155,0.00143929,1.24967e-06,1.86608e-08,0.476596,0.00144184,1.30566e-06,-2.96506e-08,0.478039,0.00144436,1.2167e-06,4.03368e-08,0.479485,0.00144692,1.33771e-06,-4.22896e-08,0.480933,0.00144947,1.21085e-06,3.94148e-08,0.482384,0.00145201,1.32909e-06,-2.59626e-08,0.483837,0.00145459,1.2512e-06,4.83124e-09,0.485293,0.0014571,1.2657e-06,6.63757e-09,0.486751,0.00145966,1.28561e-06,-1.57911e-09,0.488212,0.00146222,1.28087e-06,-3.21468e-10,0.489676,0.00146478,1.27991e-06,2.86517e-09,0.491142,0.00146735,1.2885e-06,-1.11392e-08,0.49261,0.00146989,1.25508e-06,1.18893e-08,0.494081,0.00147244,1.29075e-06,-6.61574e-09,0.495555,0.001475,1.27091e-06,1.45736e-08,0.497031,0.00147759,1.31463e-06,-2.18759e-08,0.49851,0.00148015,1.249e-06,1.33252e-08,0.499992,0.00148269,1.28897e-06,-1.62277e-09,0.501476,0.00148526,1.28411e-06,-6.83421e-09,0.502962,0.00148781,1.2636e-06,2.89596e-08,0.504451,0.00149042,1.35048e-06,-4.93997e-08,0.505943,0.00149298,1.20228e-06,4.94299e-08,0.507437,0.00149553,1.35057e-06,-2.91107e-08,0.508934,0.00149814,1.26324e-06,7.40848e-09,0.510434,0.00150069,1.28547e-06,-5.23187e-10,0.511936,0.00150326,1.2839e-06,-5.31585e-09,0.51344,0.00150581,1.26795e-06,2.17866e-08,0.514947,0.00150841,1.33331e-06,-2.22257e-08,0.516457,0.00151101,1.26663e-06,7.51178e-09,0.517969,0.00151357,1.28917e-06,-7.82128e-09,0.519484,0.00151613,1.2657e-06,2.37733e-08,0.521002,0.00151873,1.33702e-06,-2.76674e-08,0.522522,0.00152132,1.25402e-06,2.72917e-08,0.524044,0.00152391,1.3359e-06,-2.18949e-08,0.525569,0.00152652,1.27021e-06,6.83372e-10,0.527097,0.00152906,1.27226e-06,1.91613e-08,0.528628,0.00153166,1.32974e-06,-1.77241e-08,0.53016,0.00153427,1.27657e-06,-7.86963e-09,0.531696,0.0015368,1.25296e-06,4.92027e-08,0.533234,0.00153945,1.40057e-06,-6.9732e-08,0.534775,0.00154204,1.19138e-06,5.09114e-08,0.536318,0.00154458,1.34411e-06,-1.4704e-08,0.537864,0.00154722,1.3e-06,7.9048e-09,0.539413,0.00154984,1.32371e-06,-1.69152e-08,0.540964,0.00155244,1.27297e-06,1.51355e-10,0.542517,0.00155499,1.27342e-06,1.63099e-08,0.544074,0.00155758,1.32235e-06,-5.78647e-09,0.545633,0.00156021,1.30499e-06,6.83599e-09,0.547194,0.00156284,1.3255e-06,-2.15575e-08,0.548758,0.00156543,1.26083e-06,1.97892e-08,0.550325,0.00156801,1.32019e-06,2.00525e-09,0.551894,0.00157065,1.32621e-06,-2.78103e-08,0.553466,0.00157322,1.24278e-06,4.96314e-08,0.555041,0.00157586,1.39167e-06,-5.1506e-08,0.556618,0.00157849,1.23716e-06,3.71835e-08,0.558198,0.00158107,1.34871e-06,-3.76233e-08,0.55978,0.00158366,1.23584e-06,5.37052e-08,0.561365,0.00158629,1.39695e-06,-5.79884e-08,0.562953,0.00158891,1.22299e-06,5.90392e-08,0.564543,0.00159153,1.4001e-06,-5.89592e-08,0.566136,0.00159416,1.22323e-06,5.7588e-08,0.567731,0.00159678,1.39599e-06,-5.21835e-08,0.569329,0.00159941,1.23944e-06,3.19369e-08,0.57093,0.00160199,1.33525e-06,-1.59594e-08,0.572533,0.00160461,1.28737e-06,3.19006e-08,0.574139,0.00160728,1.38307e-06,-5.20383e-08,0.575748,0.00160989,1.22696e-06,5.70431e-08,0.577359,0.00161251,1.39809e-06,-5.69247e-08,0.578973,0.00161514,1.22731e-06,5.14463e-08,0.580589,0.00161775,1.38165e-06,-2.9651e-08,0.582208,0.00162042,1.2927e-06,7.55339e-09,0.58383,0.00162303,1.31536e-06,-5.62636e-10,0.585455,0.00162566,1.31367e-06,-5.30281e-09,0.587081,0.00162827,1.29776e-06,2.17738e-08,0.588711,0.00163093,1.36309e-06,-2.21875e-08,0.590343,0.00163359,1.29652e-06,7.37164e-09,0.591978,0.00163621,1.31864e-06,-7.29907e-09,0.593616,0.00163882,1.29674e-06,2.18247e-08,0.595256,0.00164148,1.36221e-06,-2.03952e-08,0.596899,0.00164414,1.30103e-06,1.51241e-10,0.598544,0.00164675,1.30148e-06,1.97902e-08,0.600192,0.00164941,1.36085e-06,-1.97074e-08,0.601843,0.00165207,1.30173e-06,-5.65175e-10,0.603496,0.00165467,1.30004e-06,2.1968e-08,0.605152,0.00165734,1.36594e-06,-2.77024e-08,0.606811,0.00165999,1.28283e-06,2.92369e-08,0.608472,0.00166264,1.37054e-06,-2.96407e-08,0.610136,0.00166529,1.28162e-06,2.97215e-08,0.611803,0.00166795,1.37079e-06,-2.96408e-08,0.613472,0.0016706,1.28186e-06,2.92371e-08,0.615144,0.00167325,1.36957e-06,-2.77031e-08,0.616819,0.00167591,1.28647e-06,2.19708e-08,0.618496,0.00167855,1.35238e-06,-5.75407e-10,0.620176,0.00168125,1.35065e-06,-1.9669e-08,0.621858,0.00168389,1.29164e-06,1.96468e-08,0.623544,0.00168653,1.35058e-06,6.86403e-10,0.625232,0.00168924,1.35264e-06,-2.23924e-08,0.626922,0.00169187,1.28547e-06,2.92788e-08,0.628615,0.00169453,1.3733e-06,-3.51181e-08,0.630311,0.00169717,1.26795e-06,5.15889e-08,0.63201,0.00169987,1.42272e-06,-5.2028e-08,0.633711,0.00170255,1.26663e-06,3.73139e-08,0.635415,0.0017052,1.37857e-06,-3.76227e-08,0.637121,0.00170784,1.2657e-06,5.35722e-08,0.63883,0.00171054,1.42642e-06,-5.74567e-08,0.640542,0.00171322,1.25405e-06,5.70456e-08,0.642257,0.0017159,1.42519e-06,-5.15163e-08,0.643974,0.00171859,1.27064e-06,2.98103e-08,0.645694,0.00172122,1.36007e-06,-8.12016e-09,0.647417,0.00172392,1.33571e-06,2.67039e-09,0.649142,0.0017266,1.34372e-06,-2.56152e-09,0.65087,0.00172928,1.33604e-06,7.57571e-09,0.6526,0.00173197,1.35876e-06,-2.77413e-08,0.654334,0.00173461,1.27554e-06,4.3785e-08,0.65607,0.00173729,1.40689e-06,-2.81896e-08,0.657808,0.00174002,1.32233e-06,9.36893e-09,0.65955,0.00174269,1.35043e-06,-9.28617e-09,0.661294,0.00174536,1.32257e-06,2.77757e-08,0.66304,0.00174809,1.4059e-06,-4.2212e-08,0.66479,0.00175078,1.27926e-06,2.1863e-08,0.666542,0.0017534,1.34485e-06,1.43648e-08,0.668297,0.00175613,1.38795e-06,-1.97177e-08,0.670054,0.00175885,1.3288e-06,4.90115e-09,0.671814,0.00176152,1.3435e-06,1.13232e-10,0.673577,0.00176421,1.34384e-06,-5.3542e-09,0.675343,0.00176688,1.32778e-06,2.13035e-08,0.677111,0.0017696,1.39169e-06,-2.02553e-08,0.678882,0.00177232,1.33092e-06,1.13005e-10,0.680656,0.00177499,1.33126e-06,1.98031e-08,0.682432,0.00177771,1.39067e-06,-1.97211e-08,0.684211,0.00178043,1.33151e-06,-5.2349e-10,0.685993,0.00178309,1.32994e-06,2.18151e-08,0.687777,0.00178582,1.39538e-06,-2.71325e-08,0.689564,0.00178853,1.31398e-06,2.71101e-08,0.691354,0.00179124,1.39531e-06,-2.17035e-08,0.693147,0.00179396,1.3302e-06,9.92865e-11,0.694942,0.00179662,1.3305e-06,2.13063e-08,0.69674,0.00179935,1.39442e-06,-2.57198e-08,0.698541,0.00180206,1.31726e-06,2.19682e-08,0.700344,0.00180476,1.38317e-06,-2.54852e-09,0.70215,0.00180752,1.37552e-06,-1.17741e-08,0.703959,0.00181023,1.3402e-06,-9.95999e-09,0.705771,0.00181288,1.31032e-06,5.16141e-08,0.707585,0.00181566,1.46516e-06,-7.72869e-08,0.709402,0.00181836,1.2333e-06,7.87197e-08,0.711222,0.00182106,1.46946e-06,-5.87781e-08,0.713044,0.00182382,1.29312e-06,3.71834e-08,0.714869,0.00182652,1.40467e-06,-3.03511e-08,0.716697,0.00182924,1.31362e-06,2.46161e-08,0.718528,0.00183194,1.38747e-06,-8.5087e-09,0.720361,0.00183469,1.36194e-06,9.41892e-09,0.722197,0.00183744,1.3902e-06,-2.91671e-08,0.724036,0.00184014,1.3027e-06,4.76448e-08,0.725878,0.00184288,1.44563e-06,-4.22028e-08,0.727722,0.00184565,1.31902e-06,1.95682e-09,0.729569,0.00184829,1.3249e-06,3.43754e-08,0.731419,0.00185104,1.42802e-06,-2.0249e-08,0.733271,0.00185384,1.36727e-06,-1.29838e-08,0.735126,0.00185654,1.32832e-06,1.25794e-08,0.736984,0.00185923,1.36606e-06,2.22711e-08,0.738845,0.00186203,1.43287e-06,-4.20594e-08,0.740708,0.00186477,1.3067e-06,2.67571e-08,0.742574,0.00186746,1.38697e-06,-5.36424e-09,0.744443,0.00187022,1.37087e-06,-5.30023e-09,0.746315,0.00187295,1.35497e-06,2.65653e-08,0.748189,0.00187574,1.43467e-06,-4.13564e-08,0.750066,0.00187848,1.3106e-06,1.9651e-08,0.751946,0.00188116,1.36955e-06,2.23572e-08,0.753828,0.00188397,1.43663e-06,-4.9475e-08,0.755714,0.00188669,1.2882e-06,5.63335e-08,0.757602,0.00188944,1.4572e-06,-5.66499e-08,0.759493,0.00189218,1.28725e-06,5.10567e-08,0.761386,0.00189491,1.44042e-06,-2.83677e-08,0.763283,0.00189771,1.35532e-06,2.80962e-09,0.765182,0.00190042,1.36375e-06,1.71293e-08,0.767083,0.0019032,1.41513e-06,-1.17221e-08,0.768988,0.001906,1.37997e-06,-2.98453e-08,0.770895,0.00190867,1.29043e-06,7.14987e-08,0.772805,0.00191146,1.50493e-06,-7.73354e-08,0.774718,0.00191424,1.27292e-06,5.90292e-08,0.776634,0.00191697,1.45001e-06,-3.9572e-08,0.778552,0.00191975,1.33129e-06,3.9654e-08,0.780473,0.00192253,1.45026e-06,-5.94395e-08,0.782397,0.00192525,1.27194e-06,7.88945e-08,0.784324,0.00192803,1.50862e-06,-7.73249e-08,0.786253,0.00193082,1.27665e-06,5.15913e-08,0.788185,0.00193352,1.43142e-06,-9.83099e-09,0.79012,0.00193636,1.40193e-06,-1.22672e-08,0.792058,0.00193912,1.36513e-06,-7.05275e-10,0.793999,0.00194185,1.36301e-06,1.50883e-08,0.795942,0.00194462,1.40828e-06,-4.33147e-11,0.797888,0.00194744,1.40815e-06,-1.49151e-08,0.799837,0.00195021,1.3634e-06,9.93244e-11,0.801788,0.00195294,1.3637e-06,1.45179e-08,0.803743,0.00195571,1.40725e-06,1.43363e-09,0.8057,0.00195853,1.41155e-06,-2.02525e-08,0.80766,0.00196129,1.35079e-06,1.99718e-08,0.809622,0.00196405,1.41071e-06,-3.01649e-11,0.811588,0.00196687,1.41062e-06,-1.9851e-08,0.813556,0.00196964,1.35107e-06,1.98296e-08,0.815527,0.0019724,1.41056e-06,1.37485e-10,0.817501,0.00197522,1.41097e-06,-2.03796e-08,0.819477,0.00197798,1.34983e-06,2.17763e-08,0.821457,0.00198074,1.41516e-06,-7.12085e-09,0.823439,0.00198355,1.3938e-06,6.70707e-09,0.825424,0.00198636,1.41392e-06,-1.97074e-08,0.827412,0.00198913,1.35479e-06,1.25179e-08,0.829402,0.00199188,1.39235e-06,2.92405e-08,0.831396,0.00199475,1.48007e-06,-6.98755e-08,0.833392,0.0019975,1.27044e-06,7.14477e-08,0.835391,0.00200026,1.48479e-06,-3.71014e-08,0.837392,0.00200311,1.37348e-06,1.73533e-08,0.839397,0.00200591,1.42554e-06,-3.23118e-08,0.841404,0.00200867,1.32861e-06,5.2289e-08,0.843414,0.00201148,1.48547e-06,-5.76348e-08,0.845427,0.00201428,1.31257e-06,5.9041e-08,0.847443,0.00201708,1.48969e-06,-5.93197e-08,0.849461,0.00201988,1.31173e-06,5.90289e-08,0.851482,0.00202268,1.48882e-06,-5.75864e-08,0.853507,0.00202549,1.31606e-06,5.21075e-08,0.855533,0.00202828,1.47238e-06,-3.16344e-08,0.857563,0.00203113,1.37748e-06,1.48257e-08,0.859596,0.00203393,1.42196e-06,-2.76684e-08,0.861631,0.00203669,1.33895e-06,3.62433e-08,0.863669,0.00203947,1.44768e-06,1.90463e-09,0.86571,0.00204237,1.45339e-06,-4.38617e-08,0.867754,0.00204515,1.32181e-06,5.43328e-08,0.8698,0.00204796,1.48481e-06,-5.42603e-08,0.87185,0.00205076,1.32203e-06,4.34989e-08,0.873902,0.00205354,1.45252e-06,-5.26029e-10,0.875957,0.00205644,1.45095e-06,-4.13949e-08,0.878015,0.00205922,1.32676e-06,4.68962e-08,0.880075,0.00206201,1.46745e-06,-2.69807e-08,0.882139,0.00206487,1.38651e-06,1.42181e-09,0.884205,0.00206764,1.39077e-06,2.12935e-08,0.886274,0.00207049,1.45465e-06,-2.69912e-08,0.888346,0.00207332,1.37368e-06,2.70664e-08,0.890421,0.00207615,1.45488e-06,-2.16698e-08,0.892498,0.00207899,1.38987e-06,8.14756e-12,0.894579,0.00208177,1.38989e-06,2.16371e-08,0.896662,0.00208462,1.45481e-06,-2.6952e-08,0.898748,0.00208744,1.37395e-06,2.65663e-08,0.900837,0.00209027,1.45365e-06,-1.97084e-08,0.902928,0.00209312,1.39452e-06,-7.33731e-09,0.905023,0.00209589,1.37251e-06,4.90578e-08,0.90712,0.00209878,1.51968e-06,-6.96845e-08,0.90922,0.00210161,1.31063e-06,5.08664e-08,0.911323,0.00210438,1.46323e-06,-1.45717e-08,0.913429,0.00210727,1.41952e-06,7.42038e-09,0.915538,0.00211013,1.44178e-06,-1.51097e-08,0.917649,0.00211297,1.39645e-06,-6.58618e-09,0.919764,0.00211574,1.37669e-06,4.14545e-08,0.921881,0.00211862,1.50105e-06,-4.00222e-08,0.924001,0.0021215,1.38099e-06,-5.7518e-10,0.926124,0.00212426,1.37926e-06,4.23229e-08,0.92825,0.00212714,1.50623e-06,-4.9507e-08,0.930378,0.00213001,1.35771e-06,3.64958e-08,0.93251,0.00213283,1.4672e-06,-3.68713e-08,0.934644,0.00213566,1.35658e-06,5.13848e-08,0.936781,0.00213852,1.51074e-06,-4.94585e-08,0.938921,0.0021414,1.36236e-06,2.72399e-08,0.941064,0.0021442,1.44408e-06,1.0372e-10,0.943209,0.00214709,1.44439e-06,-2.76547e-08,0.945358,0.0021499,1.36143e-06,5.09106e-08,0.947509,0.00215277,1.51416e-06,-5.67784e-08,0.949663,0.00215563,1.34382e-06,5.69935e-08,0.95182,0.00215849,1.5148e-06,-5.19861e-08,0.95398,0.00216136,1.35885e-06,3.17417e-08,0.956143,0.00216418,1.45407e-06,-1.53758e-08,0.958309,0.00216704,1.40794e-06,2.97615e-08,0.960477,0.00216994,1.49723e-06,-4.40657e-08,0.962649,0.00217281,1.36503e-06,2.72919e-08,0.964823,0.00217562,1.44691e-06,-5.49729e-09,0.967,0.0021785,1.43041e-06,-5.30273e-09,0.96918,0.00218134,1.41451e-06,2.67084e-08,0.971363,0.00218425,1.49463e-06,-4.19265e-08,0.973548,0.00218711,1.36885e-06,2.17881e-08,0.975737,0.00218992,1.43422e-06,1.43789e-08,0.977928,0.00219283,1.47735e-06,-1.96989e-08,0.980122,0.00219572,1.41826e-06,4.81221e-09,0.98232,0.00219857,1.43269e-06,4.50048e-10,0.98452,0.00220144,1.43404e-06,-6.61237e-09,0.986722,0.00220429,1.41421e-06,2.59993e-08,0.988928,0.0022072,1.4922e-06,-3.77803e-08,0.991137,0.00221007,1.37886e-06,5.9127e-09,0.993348,0.00221284,1.3966e-06,1.33339e-07,0.995563,0.00221604,1.79662e-06,-5.98872e-07,0.99778,0.00222015,0.,0.};
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    __device__ static int LabCbrt_b(int i)
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:        return (1 << lab_shift2) * (x < 0.008856f ? x * 7.787f + 0.13793103448275862f : ::cbrtf(x));
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    __device__ static float splineInterpolate(float x, const float* tab, int n)
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:        tab += ix * 4;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:        return ((tab[3] * x + tab[2]) * x + tab[1]) * x + tab[0];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    template <typename T, int scn, int dcn, bool srgb, int blueIdx> struct RGB2Lab;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    template <int scn, int dcn, bool srgb, int blueIdx> struct RGB2Lab<uchar, scn, dcn, srgb, blueIdx>
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            const int Lshift = -((16 * 255 * (1 << lab_shift2) + 50) / 100);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                B = c_sRGBGammaTab_b[B];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                G = c_sRGBGammaTab_b[G];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                R = c_sRGBGammaTab_b[R];
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            int fX = LabCbrt_b(CV_CUDEV_DESCALE(B * 778 + G * 1541 + R * 1777, lab_shift));
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            int fY = LabCbrt_b(CV_CUDEV_DESCALE(B * 296 + G * 2929 + R * 871, lab_shift));
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            int fZ = LabCbrt_b(CV_CUDEV_DESCALE(B * 3575 + G * 448 + R * 73, lab_shift));
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            int L = CV_CUDEV_DESCALE(Lscale * fY + Lshift, lab_shift2);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            int a = CV_CUDEV_DESCALE(500 * (fX - fY) + 128 * (1 << lab_shift2), lab_shift2);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            int b = CV_CUDEV_DESCALE(200 * (fY - fZ) + 128 * (1 << lab_shift2), lab_shift2);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    template <int scn, int dcn, bool srgb, int blueIdx> struct RGB2Lab<float, scn, dcn, srgb, blueIdx>
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                B = splineInterpolate(B * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                G = splineInterpolate(G * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                R = splineInterpolate(R * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    // Lab to RGB
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    __constant__ float c_sRGBInvGammaTab[] = {0,0.0126255,0.,-8.33961e-06,0.0126172,0.0126005,-2.50188e-05,4.1698e-05,0.0252344,0.0126756,0.000100075,-0.000158451,0.0378516,0.0124004,-0.000375277,-0.000207393,0.0496693,0.0110276,-0.000997456,0.00016837,0.0598678,0.00953783,-0.000492346,2.07235e-05,0.068934,0.00861531,-0.000430176,3.62876e-05,0.0771554,0.00786382,-0.000321313,1.87625e-05,0.0847167,0.00727748,-0.000265025,1.53594e-05,0.0917445,0.00679351,-0.000218947,1.10545e-05,0.0983301,0.00638877,-0.000185784,8.66984e-06,0.104542,0.00604322,-0.000159774,6.82996e-06,0.110432,0.00574416,-0.000139284,5.51008e-06,0.116042,0.00548212,-0.000122754,4.52322e-06,0.121406,0.00525018,-0.000109184,3.75557e-06,0.126551,0.00504308,-9.79177e-05,3.17134e-06,0.131499,0.00485676,-8.84037e-05,2.68469e-06,0.13627,0.004688,-8.03496e-05,2.31725e-06,0.14088,0.00453426,-7.33978e-05,2.00868e-06,0.145343,0.00439349,-6.73718e-05,1.74775e-06,0.149671,0.00426399,-6.21286e-05,1.53547e-06,0.153875,0.00414434,-5.75222e-05,1.364e-06,0.157963,0.00403338,-5.34301e-05,1.20416e-06,0.161944,0.00393014,-4.98177e-05,1.09114e-06,0.165825,0.00383377,-4.65443e-05,9.57987e-07,0.169613,0.00374356,-4.36703e-05,8.88359e-07,0.173314,0.00365888,-4.10052e-05,7.7849e-07,0.176933,0.00357921,-3.86697e-05,7.36254e-07,0.180474,0.00350408,-3.6461e-05,6.42534e-07,0.183942,0.00343308,-3.45334e-05,6.12614e-07,0.187342,0.00336586,-3.26955e-05,5.42894e-07,0.190675,0.00330209,-3.10669e-05,5.08967e-07,0.193947,0.00324149,-2.954e-05,4.75977e-07,0.197159,0.00318383,-2.8112e-05,4.18343e-07,0.200315,0.00312887,-2.6857e-05,4.13651e-07,0.203418,0.00307639,-2.5616e-05,3.70847e-07,0.206469,0.00302627,-2.45035e-05,3.3813e-07,0.209471,0.00297828,-2.34891e-05,3.32999e-07,0.212426,0.0029323,-2.24901e-05,2.96826e-07,0.215336,0.00288821,-2.15996e-05,2.82736e-07,0.218203,0.00284586,-2.07514e-05,2.70961e-07,0.221029,0.00280517,-1.99385e-05,2.42744e-07,0.223814,0.00276602,-1.92103e-05,2.33277e-07,0.226561,0.0027283,-1.85105e-05,2.2486e-07,0.229271,0.00269195,-1.78359e-05,2.08383e-07,0.231945,0.00265691,-1.72108e-05,1.93305e-07,0.234585,0.00262307,-1.66308e-05,1.80687e-07,0.237192,0.00259035,-1.60888e-05,1.86632e-07,0.239766,0.00255873,-1.55289e-05,1.60569e-07,0.24231,0.00252815,-1.50472e-05,1.54566e-07,0.244823,0.00249852,-1.45835e-05,1.59939e-07,0.247307,0.00246983,-1.41037e-05,1.29549e-07,0.249763,0.00244202,-1.3715e-05,1.41429e-07,0.252191,0.00241501,-1.32907e-05,1.39198e-07,0.254593,0.00238885,-1.28731e-05,1.06444e-07,0.256969,0.00236342,-1.25538e-05,1.2048e-07,0.25932,0.00233867,-1.21924e-05,1.26892e-07,0.261647,0.00231467,-1.18117e-05,8.72084e-08,0.26395,0.00229131,-1.15501e-05,1.20323e-07,0.26623,0.00226857,-1.11891e-05,8.71514e-08,0.268487,0.00224645,-1.09276e-05,9.73165e-08,0.270723,0.00222489,-1.06357e-05,8.98259e-08,0.272937,0.00220389,-1.03662e-05,7.98218e-08,0.275131,0.00218339,-1.01267e-05,9.75254e-08,0.277304,0.00216343,-9.83416e-06,6.65195e-08,0.279458,0.00214396,-9.63461e-06,8.34313e-08,0.281592,0.00212494,-9.38431e-06,7.65919e-08,0.283708,0.00210641,-9.15454e-06,5.7236e-08,0.285805,0.00208827,-8.98283e-06,8.18939e-08,0.287885,0.00207055,-8.73715e-06,6.2224e-08,0.289946,0.00205326,-8.55047e-06,5.66388e-08,0.291991,0.00203633,-8.38056e-06,6.88491e-08,0.294019,0.00201978,-8.17401e-06,5.53955e-08,0.296031,0.00200359,-8.00782e-06,6.71971e-08,0.298027,0.00198778,-7.80623e-06,3.34439e-08,0.300007,0.00197227,-7.7059e-06,6.7248e-08,0.301971,0.00195706,-7.50416e-06,5.51915e-08,0.303921,0.00194221,-7.33858e-06,3.98124e-08,0.305856,0.00192766,-7.21915e-06,5.37795e-08,0.307776,0.00191338,-7.05781e-06,4.30919e-08,0.309683,0.00189939,-6.92853e-06,4.20744e-08,0.311575,0.00188566,-6.80231e-06,5.68321e-08,0.313454,0.00187223,-6.63181e-06,2.86195e-08,0.31532,0.00185905,-6.54595e-06,3.73075e-08,0.317172,0.00184607,-6.43403e-06,6.05684e-08,0.319012,0.00183338,-6.25233e-06,1.84426e-08,0.320839,0.00182094,-6.197e-06,4.44757e-08,0.322654,0.00180867,-6.06357e-06,4.20729e-08,0.324456,0.00179667,-5.93735e-06,2.56511e-08,0.326247,0.00178488,-5.8604e-06,3.41368e-08,0.328026,0.00177326,-5.75799e-06,4.64177e-08,0.329794,0.00176188,-5.61874e-06,1.86107e-08,0.33155,0.0017507,-5.5629e-06,2.81511e-08,0.333295,0.00173966,-5.47845e-06,4.75987e-08,0.335029,0.00172884,-5.33565e-06,1.98726e-08,0.336753,0.00171823,-5.27604e-06,2.19226e-08,0.338466,0.00170775,-5.21027e-06,4.14483e-08,0.340169,0.00169745,-5.08592e-06,2.09017e-08,0.341861,0.00168734,-5.02322e-06,2.39561e-08,0.343543,0.00167737,-4.95135e-06,3.22852e-08,0.345216,0.00166756,-4.85449e-06,2.57173e-08,0.346878,0.00165793,-4.77734e-06,1.38569e-08,0.348532,0.00164841,-4.73577e-06,3.80634e-08,0.350175,0.00163906,-4.62158e-06,1.27043e-08,0.35181,0.00162985,-4.58347e-06,3.03279e-08,0.353435,0.00162078,-4.49249e-06,1.49961e-08,0.355051,0.00161184,-4.4475e-06,2.88977e-08,0.356659,0.00160303,-4.3608e-06,1.84241e-08,0.358257,0.00159436,-4.30553e-06,1.6616e-08,0.359848,0.0015858,-4.25568e-06,3.43218e-08,0.361429,0.00157739,-4.15272e-06,-4.89172e-09,0.363002,0.00156907,-4.16739e-06,4.48498e-08,0.364567,0.00156087,-4.03284e-06,4.30676e-09,0.366124,0.00155282,-4.01992e-06,2.73303e-08,0.367673,0.00154486,-3.93793e-06,5.58036e-09,0.369214,0.001537,-3.92119e-06,3.97554e-08,0.370747,0.00152928,-3.80193e-06,-1.55904e-08,0.372272,0.00152163,-3.8487e-06,5.24081e-08,0.37379,0.00151409,-3.69147e-06,-1.52272e-08,0.375301,0.00150666,-3.73715e-06,3.83028e-08,0.376804,0.0014993,-3.62225e-06,1.10278e-08,0.378299,0.00149209,-3.58916e-06,6.99326e-09,0.379788,0.00148493,-3.56818e-06,2.06038e-08,0.381269,0.00147786,-3.50637e-06,2.98009e-08,0.382744,0.00147093,-3.41697e-06,-2.05978e-08,0.384211,0.00146404,-3.47876e-06,5.25899e-08,0.385672,0.00145724,-3.32099e-06,-1.09471e-08,0.387126,0.00145056,-3.35383e-06,2.10009e-08,0.388573,0.00144392,-3.29083e-06,1.63501e-08,0.390014,0.00143739,-3.24178e-06,3.00641e-09,0.391448,0.00143091,-3.23276e-06,3.12282e-08,0.392875,0.00142454,-3.13908e-06,-8.70932e-09,0.394297,0.00141824,-3.16521e-06,3.34114e-08,0.395712,0.00141201,-3.06497e-06,-5.72754e-09,0.397121,0.00140586,-3.08215e-06,1.9301e-08,0.398524,0.00139975,-3.02425e-06,1.7931e-08,0.39992,0.00139376,-2.97046e-06,-1.61822e-09,0.401311,0.00138781,-2.97531e-06,1.83442e-08,0.402696,0.00138192,-2.92028e-06,1.76485e-08,0.404075,0.00137613,-2.86733e-06,4.68617e-10,0.405448,0.00137039,-2.86593e-06,1.02794e-08,0.406816,0.00136469,-2.83509e-06,1.80179e-08,0.408178,0.00135908,-2.78104e-06,7.05594e-09,0.409534,0.00135354,-2.75987e-06,1.33633e-08,0.410885,0.00134806,-2.71978e-06,-9.04568e-10,0.41223,0.00134261,-2.72249e-06,2.0057e-08,0.41357,0.00133723,-2.66232e-06,1.00841e-08,0.414905,0.00133194,-2.63207e-06,-7.88835e-10,0.416234,0.00132667,-2.63444e-06,2.28734e-08,0.417558,0.00132147,-2.56582e-06,-1.29785e-09,0.418877,0.00131633,-2.56971e-06,1.21205e-08,0.420191,0.00131123,-2.53335e-06,1.24202e-08,0.421499,0.0013062,-2.49609e-06,-2.19681e-09,0.422803,0.0013012,-2.50268e-06,2.61696e-08,0.424102,0.00129628,-2.42417e-06,-1.30747e-08,0.425396,0.00129139,-2.46339e-06,2.6129e-08,0.426685,0.00128654,-2.38501e-06,-2.03454e-09,0.427969,0.00128176,-2.39111e-06,1.18115e-08,0.429248,0.00127702,-2.35567e-06,1.43932e-08,0.430523,0.00127235,-2.31249e-06,-9.77965e-09,0.431793,0.00126769,-2.34183e-06,2.47253e-08,0.433058,0.00126308,-2.26766e-06,2.85278e-10,0.434319,0.00125855,-2.2668e-06,3.93614e-09,0.435575,0.00125403,-2.25499e-06,1.37722e-08,0.436827,0.00124956,-2.21368e-06,5.79803e-10,0.438074,0.00124513,-2.21194e-06,1.37112e-08,0.439317,0.00124075,-2.1708e-06,4.17973e-09,0.440556,0.00123642,-2.15826e-06,-6.27703e-10,0.44179,0.0012321,-2.16015e-06,2.81332e-08,0.44302,0.00122787,-2.07575e-06,-2.24985e-08,0.444246,0.00122365,-2.14324e-06,3.20586e-08,0.445467,0.00121946,-2.04707e-06,-1.6329e-08,0.446685,0.00121532,-2.09605e-06,3.32573e-08,0.447898,0.00121122,-1.99628e-06,-2.72927e-08,0.449107,0.00120715,-2.07816e-06,4.6111e-08,0.450312,0.00120313,-1.93983e-06,-3.79416e-08,0.451514,0.00119914,-2.05365e-06,4.60507e-08,0.452711,0.00119517,-1.9155e-06,-2.7052e-08,0.453904,0.00119126,-1.99666e-06,3.23551e-08,0.455093,0.00118736,-1.89959e-06,-1.29613e-08,0.456279,0.00118352,-1.93848e-06,1.94905e-08,0.45746,0.0011797,-1.88e-06,-5.39588e-09,0.458638,0.00117593,-1.89619e-06,2.09282e-09,0.459812,0.00117214,-1.88991e-06,2.68267e-08,0.460982,0.00116844,-1.80943e-06,-1.99925e-08,0.462149,0.00116476,-1.86941e-06,2.3341e-08,0.463312,0.00116109,-1.79939e-06,-1.37674e-08,0.464471,0.00115745,-1.84069e-06,3.17287e-08,0.465627,0.00115387,-1.7455e-06,-2.37407e-08,0.466779,0.00115031,-1.81673e-06,3.34315e-08,0.467927,0.00114677,-1.71643e-06,-2.05786e-08,0.469073,0.00114328,-1.77817e-06,1.90802e-08,0.470214,0.00113978,-1.72093e-06,3.86247e-09,0.471352,0.00113635,-1.70934e-06,-4.72759e-09,0.472487,0.00113292,-1.72352e-06,1.50478e-08,0.473618,0.00112951,-1.67838e-06,4.14108e-09,0.474746,0.00112617,-1.66595e-06,-1.80986e-09,0.47587,0.00112283,-1.67138e-06,3.09816e-09,0.476991,0.0011195,-1.66209e-06,1.92198e-08,0.478109,0.00111623,-1.60443e-06,-2.03726e-08,0.479224,0.00111296,-1.66555e-06,3.2468e-08,0.480335,0.00110973,-1.56814e-06,-2.00922e-08,0.481443,0.00110653,-1.62842e-06,1.80983e-08,0.482548,0.00110333,-1.57413e-06,7.30362e-09,0.48365,0.0011002,-1.55221e-06,-1.75107e-08,0.484749,0.00109705,-1.60475e-06,3.29373e-08,0.485844,0.00109393,-1.50594e-06,-2.48315e-08,0.486937,0.00109085,-1.58043e-06,3.65865e-08,0.488026,0.0010878,-1.47067e-06,-3.21078e-08,0.489112,0.00108476,-1.56699e-06,3.22397e-08,0.490195,0.00108172,-1.47027e-06,-7.44391e-09,0.491276,0.00107876,-1.49261e-06,-2.46428e-09,0.492353,0.00107577,-1.5e-06,1.73011e-08,0.493427,0.00107282,-1.4481e-06,-7.13552e-09,0.494499,0.0010699,-1.4695e-06,1.1241e-08,0.495567,0.001067,-1.43578e-06,-8.02637e-09,0.496633,0.0010641,-1.45986e-06,2.08645e-08,0.497695,0.00106124,-1.39726e-06,-1.58271e-08,0.498755,0.0010584,-1.44475e-06,1.26415e-08,0.499812,0.00105555,-1.40682e-06,2.48655e-08,0.500866,0.00105281,-1.33222e-06,-5.24988e-08,0.501918,0.00104999,-1.48972e-06,6.59206e-08,0.502966,0.00104721,-1.29196e-06,-3.237e-08,0.504012,0.00104453,-1.38907e-06,3.95479e-09,0.505055,0.00104176,-1.3772e-06,1.65509e-08,0.506096,0.00103905,-1.32755e-06,-1.05539e-08,0.507133,0.00103637,-1.35921e-06,2.56648e-08,0.508168,0.00103373,-1.28222e-06,-3.25007e-08,0.509201,0.00103106,-1.37972e-06,4.47336e-08,0.51023,0.00102844,-1.24552e-06,-2.72245e-08,0.511258,0.00102587,-1.32719e-06,4.55952e-09,0.512282,0.00102323,-1.31352e-06,8.98645e-09,0.513304,0.00102063,-1.28656e-06,1.90992e-08,0.514323,0.00101811,-1.22926e-06,-2.57786e-08,0.51534,0.00101557,-1.30659e-06,2.44104e-08,0.516355,0.00101303,-1.23336e-06,-1.22581e-08,0.517366,0.00101053,-1.27014e-06,2.4622e-08,0.518376,0.00100806,-1.19627e-06,-2.66253e-08,0.519383,0.00100559,-1.27615e-06,2.22744e-08,0.520387,0.00100311,-1.20932e-06,-2.8679e-09,0.521389,0.00100068,-1.21793e-06,-1.08029e-08,0.522388,0.000998211,-1.25034e-06,4.60795e-08,0.523385,0.000995849,-1.1121e-06,-5.4306e-08,0.52438,0.000993462,-1.27502e-06,5.19354e-08,0.525372,0.000991067,-1.11921e-06,-3.42262e-08,0.526362,0.000988726,-1.22189e-06,2.53646e-08,0.52735,0.000986359,-1.14579e-06,-7.62782e-09,0.528335,0.000984044,-1.16868e-06,5.14668e-09,0.529318,0.000981722,-1.15324e-06,-1.29589e-08,0.530298,0.000979377,-1.19211e-06,4.66888e-08,0.531276,0.000977133,-1.05205e-06,-5.45868e-08,0.532252,0.000974865,-1.21581e-06,5.24495e-08,0.533226,0.000972591,-1.05846e-06,-3.60019e-08,0.534198,0.000970366,-1.16647e-06,3.19537e-08,0.535167,0.000968129,-1.07061e-06,-3.2208e-08,0.536134,0.000965891,-1.16723e-06,3.72738e-08,0.537099,0.000963668,-1.05541e-06,2.32205e-09,0.538061,0.000961564,-1.04844e-06,-4.65618e-08,0.539022,0.000959328,-1.18813e-06,6.47159e-08,0.53998,0.000957146,-9.93979e-07,-3.3488e-08,0.540936,0.000955057,-1.09444e-06,9.63166e-09,0.54189,0.000952897,-1.06555e-06,-5.03871e-09,0.542842,0.000950751,-1.08066e-06,1.05232e-08,0.543792,0.000948621,-1.04909e-06,2.25503e-08,0.544739,0.000946591,-9.81444e-07,-4.11195e-08,0.545685,0.000944504,-1.1048e-06,2.27182e-08,0.546628,0.000942363,-1.03665e-06,9.85146e-09,0.54757,0.000940319,-1.00709e-06,-2.51938e-09,0.548509,0.000938297,-1.01465e-06,2.25858e-10,0.549446,0.000936269,-1.01397e-06,1.61598e-09,0.550381,0.000934246,-1.00913e-06,-6.68983e-09,0.551315,0.000932207,-1.0292e-06,2.51434e-08,0.552246,0.000930224,-9.53765e-07,-3.42793e-08,0.553175,0.000928214,-1.0566e-06,5.23688e-08,0.554102,0.000926258,-8.99497e-07,-5.59865e-08,0.555028,0.000924291,-1.06746e-06,5.23679e-08,0.555951,0.000922313,-9.10352e-07,-3.42763e-08,0.556872,0.00092039,-1.01318e-06,2.51326e-08,0.557792,0.000918439,-9.37783e-07,-6.64954e-09,0.558709,0.000916543,-9.57732e-07,1.46554e-09,0.559625,0.000914632,-9.53335e-07,7.87281e-10,0.560538,0.000912728,-9.50973e-07,-4.61466e-09,0.56145,0.000910812,-9.64817e-07,1.76713e-08,0.56236,0.000908935,-9.11804e-07,-6.46564e-09,0.563268,0.000907092,-9.312e-07,8.19121e-09,0.564174,0.000905255,-9.06627e-07,-2.62992e-08,0.565078,0.000903362,-9.85524e-07,3.74007e-08,0.565981,0.000901504,-8.73322e-07,-4.0942e-09,0.566882,0.000899745,-8.85605e-07,-2.1024e-08,0.56778,0.00089791,-9.48677e-07,2.85854e-08,0.568677,0.000896099,-8.62921e-07,-3.3713e-08,0.569573,0.000894272,-9.64059e-07,4.6662e-08,0.570466,0.000892484,-8.24073e-07,-3.37258e-08,0.571358,0.000890734,-9.25251e-07,2.86365e-08,0.572247,0.00088897,-8.39341e-07,-2.12155e-08,0.573135,0.000887227,-9.02988e-07,-3.37913e-09,0.574022,0.000885411,-9.13125e-07,3.47319e-08,0.574906,0.000883689,-8.08929e-07,-1.63394e-08,0.575789,0.000882022,-8.57947e-07,-2.8979e-08,0.57667,0.00088022,-9.44885e-07,7.26509e-08,0.57755,0.000878548,-7.26932e-07,-8.28106e-08,0.578427,0.000876845,-9.75364e-07,7.97774e-08,0.579303,0.000875134,-7.36032e-07,-5.74849e-08,0.580178,0.00087349,-9.08486e-07,3.09529e-08,0.58105,0.000871765,-8.15628e-07,-6.72206e-09,0.581921,0.000870114,-8.35794e-07,-4.06451e-09,0.582791,0.00086843,-8.47987e-07,2.29799e-08,0.583658,0.000866803,-7.79048e-07,-2.82503e-08,0.584524,0.00086516,-8.63799e-07,3.04167e-08,0.585388,0.000863524,-7.72548e-07,-3.38119e-08,0.586251,0.000861877,-8.73984e-07,4.52264e-08,0.587112,0.000860265,-7.38305e-07,-2.78842e-08,0.587972,0.000858705,-8.21958e-07,6.70567e-09,0.58883,0.000857081,-8.01841e-07,1.06161e-09,0.589686,0.000855481,-7.98656e-07,-1.09521e-08,0.590541,0.00085385,-8.31512e-07,4.27468e-08,0.591394,0.000852316,-7.03272e-07,-4.08257e-08,0.592245,0.000850787,-8.25749e-07,1.34677e-09,0.593095,0.000849139,-8.21709e-07,3.54387e-08,0.593944,0.000847602,-7.15393e-07,-2.38924e-08,0.59479,0.0008461,-7.8707e-07,5.26143e-10,0.595636,0.000844527,-7.85491e-07,2.17879e-08,0.596479,0.000843021,-7.20127e-07,-2.80733e-08,0.597322,0.000841497,-8.04347e-07,3.09005e-08,0.598162,0.000839981,-7.11646e-07,-3.5924e-08,0.599002,0.00083845,-8.19418e-07,5.3191e-08,0.599839,0.000836971,-6.59845e-07,-5.76307e-08,0.600676,0.000835478,-8.32737e-07,5.81227e-08,0.60151,0.000833987,-6.58369e-07,-5.56507e-08,0.602344,0.000832503,-8.25321e-07,4.52706e-08,0.603175,0.000830988,-6.89509e-07,-6.22236e-09,0.604006,0.000829591,-7.08176e-07,-2.03811e-08,0.604834,0.000828113,-7.6932e-07,2.8142e-08,0.605662,0.000826659,-6.84894e-07,-3.25822e-08,0.606488,0.000825191,-7.8264e-07,4.25823e-08,0.607312,0.000823754,-6.54893e-07,-1.85376e-08,0.608135,0.000822389,-7.10506e-07,-2.80365e-08,0.608957,0.000820883,-7.94616e-07,7.1079e-08,0.609777,0.000819507,-5.81379e-07,-7.74655e-08,0.610596,0.000818112,-8.13775e-07,5.9969e-08,0.611413,0.000816665,-6.33868e-07,-4.32013e-08,0.612229,0.000815267,-7.63472e-07,5.32313e-08,0.613044,0.0008139,-6.03778e-07,-5.05148e-08,0.613857,0.000812541,-7.55323e-07,2.96187e-08,0.614669,0.000811119,-6.66466e-07,-8.35545e-09,0.615479,0.000809761,-6.91533e-07,3.80301e-09,0.616288,0.00080839,-6.80124e-07,-6.85666e-09,0.617096,0.000807009,-7.00694e-07,2.36237e-08,0.617903,0.000805678,-6.29822e-07,-2.80336e-08,0.618708,0.000804334,-7.13923e-07,2.8906e-08,0.619511,0.000802993,-6.27205e-07,-2.79859e-08,0.620314,0.000801655,-7.11163e-07,2.34329e-08,0.621114,0.000800303,-6.40864e-07,-6.14108e-09,0.621914,0.000799003,-6.59287e-07,1.13151e-09,0.622712,0.000797688,-6.55893e-07,1.61507e-09,0.62351,0.000796381,-6.51048e-07,-7.59186e-09,0.624305,0.000795056,-6.73823e-07,2.87524e-08,0.6251,0.000793794,-5.87566e-07,-4.7813e-08,0.625893,0.000792476,-7.31005e-07,4.32901e-08,0.626685,0.000791144,-6.01135e-07,-6.13814e-09,0.627475,0.000789923,-6.19549e-07,-1.87376e-08,0.628264,0.000788628,-6.75762e-07,2.14837e-08,0.629052,0.000787341,-6.11311e-07,-7.59265e-09,0.629839,0.000786095,-6.34089e-07,8.88692e-09,0.630625,0.000784854,-6.07428e-07,-2.7955e-08,0.631409,0.000783555,-6.91293e-07,4.33285e-08,0.632192,0.000782302,-5.61307e-07,-2.61497e-08,0.632973,0.000781101,-6.39757e-07,1.6658e-09,0.633754,0.000779827,-6.34759e-07,1.94866e-08,0.634533,0.000778616,-5.76299e-07,-2.00076e-08,0.635311,0.000777403,-6.36322e-07,9.39091e-10,0.636088,0.000776133,-6.33505e-07,1.62512e-08,0.636863,0.000774915,-5.84751e-07,-6.33937e-09,0.637638,0.000773726,-6.03769e-07,9.10609e-09,0.638411,0.000772546,-5.76451e-07,-3.00849e-08,0.639183,0.000771303,-6.66706e-07,5.1629e-08,0.639953,0.000770125,-5.11819e-07,-5.7222e-08,0.640723,0.000768929,-6.83485e-07,5.80497e-08,0.641491,0.000767736,-5.09336e-07,-5.57674e-08,0.642259,0.000766551,-6.76638e-07,4.58105e-08,0.643024,0.000765335,-5.39206e-07,-8.26541e-09,0.643789,0.000764231,-5.64002e-07,-1.27488e-08,0.644553,0.000763065,-6.02249e-07,-3.44168e-10,0.645315,0.00076186,-6.03281e-07,1.41254e-08,0.646077,0.000760695,-5.60905e-07,3.44727e-09,0.646837,0.000759584,-5.50563e-07,-2.79144e-08,0.647596,0.000758399,-6.34307e-07,4.86057e-08,0.648354,0.000757276,-4.88489e-07,-4.72989e-08,0.64911,0.000756158,-6.30386e-07,2.13807e-08,0.649866,0.000754961,-5.66244e-07,2.13808e-08,0.65062,0.000753893,-5.02102e-07,-4.7299e-08,0.651374,0.000752746,-6.43999e-07,4.86059e-08,0.652126,0.000751604,-4.98181e-07,-2.79154e-08,0.652877,0.000750524,-5.81927e-07,3.45089e-09,0.653627,0.000749371,-5.71575e-07,1.41119e-08,0.654376,0.00074827,-5.29239e-07,-2.93748e-10,0.655123,0.00074721,-5.3012e-07,-1.29368e-08,0.65587,0.000746111,-5.68931e-07,-7.56355e-09,0.656616,0.000744951,-5.91621e-07,4.3191e-08,0.65736,0.000743897,-4.62048e-07,-4.59911e-08,0.658103,0.000742835,-6.00022e-07,2.15642e-08,0.658846,0.0007417,-5.35329e-07,1.93389e-08,0.659587,0.000740687,-4.77312e-07,-3.93152e-08,0.660327,0.000739615,-5.95258e-07,1.87126e-08,0.661066,0.00073848,-5.3912e-07,2.40695e-08,0.661804,0.000737474,-4.66912e-07,-5.53859e-08,0.662541,0.000736374,-6.33069e-07,7.82648e-08,0.663277,0.000735343,-3.98275e-07,-7.88593e-08,0.664012,0.00073431,-6.34853e-07,5.83585e-08,0.664745,0.000733215,-4.59777e-07,-3.53656e-08,0.665478,0.000732189,-5.65874e-07,2.34994e-08,0.66621,0.000731128,-4.95376e-07,9.72743e-10,0.66694,0.00073014,-4.92458e-07,-2.73903e-08,0.66767,0.000729073,-5.74629e-07,4.89839e-08,0.668398,0.000728071,-4.27677e-07,-4.93359e-08,0.669126,0.000727068,-5.75685e-07,2.91504e-08,0.669853,0.000726004,-4.88234e-07,-7.66109e-09,0.670578,0.000725004,-5.11217e-07,1.49392e-09,0.671303,0.000723986,-5.06735e-07,1.68533e-09,0.672026,0.000722978,-5.01679e-07,-8.23525e-09,0.672749,0.00072195,-5.26385e-07,3.12556e-08,0.67347,0.000720991,-4.32618e-07,-5.71825e-08,0.674191,0.000719954,-6.04166e-07,7.8265e-08,0.67491,0.00071898,-3.69371e-07,-7.70634e-08,0.675628,0.00071801,-6.00561e-07,5.11747e-08,0.676346,0.000716963,-4.47037e-07,-8.42615e-09,0.677062,0.000716044,-4.72315e-07,-1.747e-08,0.677778,0.000715046,-5.24725e-07,1.87015e-08,0.678493,0.000714053,-4.68621e-07,2.26856e-09,0.679206,0.000713123,-4.61815e-07,-2.77758e-08,0.679919,0.000712116,-5.45142e-07,4.92298e-08,0.68063,0.000711173,-3.97453e-07,-4.99339e-08,0.681341,0.000710228,-5.47255e-07,3.12967e-08,0.682051,0.000709228,-4.53365e-07,-1.56481e-08,0.68276,0.000708274,-5.00309e-07,3.12958e-08,0.683467,0.000707367,-4.06422e-07,-4.99303e-08,0.684174,0.000706405,-5.56213e-07,4.9216e-08,0.68488,0.00070544,-4.08565e-07,-2.77245e-08,0.685585,0.00070454,-4.91738e-07,2.07748e-09,0.686289,0.000703562,-4.85506e-07,1.94146e-08,0.686992,0.00070265,-4.27262e-07,-2.01314e-08,0.687695,0.000701735,-4.87656e-07,1.50616e-09,0.688396,0.000700764,-4.83137e-07,1.41067e-08,0.689096,0.00069984,-4.40817e-07,1.67168e-09,0.689795,0.000698963,-4.35802e-07,-2.07934e-08,0.690494,0.000698029,-4.98182e-07,2.18972e-08,0.691192,0.000697099,-4.32491e-07,-7.19092e-09,0.691888,0.000696212,-4.54064e-07,6.86642e-09,0.692584,0.000695325,-4.33464e-07,-2.02747e-08,0.693279,0.000694397,-4.94288e-07,1.46279e-08,0.693973,0.000693452,-4.50405e-07,2.13678e-08,0.694666,0.000692616,-3.86301e-07,-4.04945e-08,0.695358,0.000691721,-5.07785e-07,2.14009e-08,0.696049,0.00069077,-4.43582e-07,1.44955e-08,0.69674,0.000689926,-4.00096e-07,-1.97783e-08,0.697429,0.000689067,-4.5943e-07,5.01296e-09,0.698118,0.000688163,-4.44392e-07,-2.73521e-10,0.698805,0.000687273,-4.45212e-07,-3.91893e-09,0.699492,0.000686371,-4.56969e-07,1.59493e-08,0.700178,0.000685505,-4.09121e-07,-2.73351e-10,0.700863,0.000684686,-4.09941e-07,-1.4856e-08,0.701548,0.000683822,-4.54509e-07,9.25979e-11,0.702231,0.000682913,-4.54231e-07,1.44855e-08,0.702913,0.000682048,-4.10775e-07,1.56992e-09,0.703595,0.000681231,-4.06065e-07,-2.07652e-08,0.704276,0.000680357,-4.68361e-07,2.18864e-08,0.704956,0.000679486,-4.02701e-07,-7.17595e-09,0.705635,0.000678659,-4.24229e-07,6.81748e-09,0.706313,0.000677831,-4.03777e-07,-2.0094e-08,0.70699,0.000676963,-4.64059e-07,1.39538e-08,0.707667,0.000676077,-4.22197e-07,2.38835e-08,0.708343,0.000675304,-3.50547e-07,-4.98831e-08,0.709018,0.000674453,-5.00196e-07,5.64395e-08,0.709692,0.000673622,-3.30878e-07,-5.66657e-08,0.710365,0.00067279,-5.00875e-07,5.1014e-08,0.711037,0.000671942,-3.47833e-07,-2.81809e-08,0.711709,0.000671161,-4.32376e-07,2.10513e-09,0.712379,0.000670303,-4.2606e-07,1.97604e-08,0.713049,0.00066951,-3.66779e-07,-2.15422e-08,0.713718,0.000668712,-4.31406e-07,6.8038e-09,0.714387,0.000667869,-4.10994e-07,-5.67295e-09,0.715054,0.00066703,-4.28013e-07,1.5888e-08,0.715721,0.000666222,-3.80349e-07,1.72576e-09,0.716387,0.000665467,-3.75172e-07,-2.27911e-08,0.717052,0.000664648,-4.43545e-07,2.9834e-08,0.717716,0.00066385,-3.54043e-07,-3.69401e-08,0.718379,0.000663031,-4.64864e-07,5.83219e-08,0.719042,0.000662277,-2.89898e-07,-7.71382e-08,0.719704,0.000661465,-5.21313e-07,7.14171e-08,0.720365,0.000660637,-3.07061e-07,-2.97161e-08,0.721025,0.000659934,-3.96209e-07,-1.21575e-08,0.721685,0.000659105,-4.32682e-07,1.87412e-08,0.722343,0.000658296,-3.76458e-07,-3.2029e-09,0.723001,0.000657533,-3.86067e-07,-5.9296e-09,0.723659,0.000656743,-4.03856e-07,2.69213e-08,0.724315,0.000656016,-3.23092e-07,-4.21511e-08,0.724971,0.000655244,-4.49545e-07,2.24737e-08,0.725625,0.000654412,-3.82124e-07,1.18611e-08,0.726279,0.000653683,-3.46541e-07,-1.03132e-08,0.726933,0.000652959,-3.7748e-07,-3.02128e-08,0.727585,0.000652114,-4.68119e-07,7.15597e-08,0.728237,0.000651392,-2.5344e-07,-7.72119e-08,0.728888,0.000650654,-4.85075e-07,5.8474e-08,0.729538,0.000649859,-3.09654e-07,-3.74746e-08,0.730188,0.000649127,-4.22077e-07,3.18197e-08,0.730837,0.000648379,-3.26618e-07,-3.01997e-08,0.731485,0.000647635,-4.17217e-07,2.93747e-08,0.732132,0.000646888,-3.29093e-07,-2.76943e-08,0.732778,0.000646147,-4.12176e-07,2.17979e-08,0.733424,0.000645388,-3.46783e-07,1.07292e-10,0.734069,0.000644695,-3.46461e-07,-2.22271e-08,0.734713,0.000643935,-4.13142e-07,2.91963e-08,0.735357,0.000643197,-3.25553e-07,-3.49536e-08,0.736,0.000642441,-4.30414e-07,5.10133e-08,0.736642,0.000641733,-2.77374e-07,-4.98904e-08,0.737283,0.000641028,-4.27045e-07,2.93392e-08,0.737924,0.000640262,-3.39028e-07,-7.86156e-09,0.738564,0.000639561,-3.62612e-07,2.10703e-09,0.739203,0.000638842,-3.56291e-07,-5.6653e-10,0.739842,0.000638128,-3.57991e-07,1.59086e-10,0.740479,0.000637412,-3.57513e-07,-6.98321e-11,0.741116,0.000636697,-3.57723e-07,1.20214e-10,0.741753,0.000635982,-3.57362e-07,-4.10987e-10,0.742388,0.000635266,-3.58595e-07,1.5237e-09,0.743023,0.000634553,-3.54024e-07,-5.68376e-09,0.743657,0.000633828,-3.71075e-07,2.12113e-08,0.744291,0.00063315,-3.07441e-07,-1.95569e-08,0.744924,0.000632476,-3.66112e-07,-2.58816e-09,0.745556,0.000631736,-3.73877e-07,2.99096e-08,0.746187,0.000631078,-2.84148e-07,-5.74454e-08,0.746818,0.000630337,-4.56484e-07,8.06629e-08,0.747448,0.000629666,-2.14496e-07,-8.63922e-08,0.748077,0.000628978,-4.73672e-07,8.60918e-08,0.748706,0.000628289,-2.15397e-07,-7.91613e-08,0.749334,0.000627621,-4.5288e-07,5.17393e-08,0.749961,0.00062687,-2.97663e-07,-8.58662e-09,0.750588,0.000626249,-3.23422e-07,-1.73928e-08,0.751214,0.00062555,-3.75601e-07,1.85532e-08,0.751839,0.000624855,-3.19941e-07,2.78479e-09,0.752463,0.000624223,-3.11587e-07,-2.96923e-08,0.753087,0.000623511,-4.00664e-07,5.63799e-08,0.75371,0.000622879,-2.31524e-07,-7.66179e-08,0.754333,0.000622186,-4.61378e-07,7.12778e-08,0.754955,0.000621477,-2.47545e-07,-2.96794e-08,0.755576,0.000620893,-3.36583e-07,-1.21648e-08,0.756196,0.000620183,-3.73077e-07,1.87339e-08,0.756816,0.000619493,-3.16875e-07,-3.16622e-09,0.757435,0.00061885,-3.26374e-07,-6.0691e-09,0.758054,0.000618179,-3.44581e-07,2.74426e-08,0.758672,0.000617572,-2.62254e-07,-4.40968e-08,0.759289,0.000616915,-3.94544e-07,2.97352e-08,0.759906,0.000616215,-3.05338e-07,-1.52393e-08,0.760522,0.000615559,-3.51056e-07,3.12221e-08,0.761137,0.000614951,-2.5739e-07,-5.00443e-08,0.761751,0.000614286,-4.07523e-07,4.9746e-08,0.762365,0.00061362,-2.58285e-07,-2.97303e-08,0.762979,0.000613014,-3.47476e-07,9.57079e-09,0.763591,0.000612348,-3.18764e-07,-8.55287e-09,0.764203,0.000611685,-3.44422e-07,2.46407e-08,0.764815,0.00061107,-2.705e-07,-3.04053e-08,0.765426,0.000610437,-3.61716e-07,3.73759e-08,0.766036,0.000609826,-2.49589e-07,-5.94935e-08,0.766645,0.000609149,-4.28069e-07,8.13889e-08,0.767254,0.000608537,-1.83902e-07,-8.72483e-08,0.767862,0.000607907,-4.45647e-07,8.87901e-08,0.76847,0.000607282,-1.79277e-07,-8.90983e-08,0.769077,0.000606656,-4.46572e-07,8.87892e-08,0.769683,0.000606029,-1.80204e-07,-8.72446e-08,0.770289,0.000605407,-4.41938e-07,8.13752e-08,0.770894,0.000604768,-1.97812e-07,-5.94423e-08,0.771498,0.000604194,-3.76139e-07,3.71848e-08,0.772102,0.000603553,-2.64585e-07,-2.96922e-08,0.772705,0.000602935,-3.53661e-07,2.19793e-08,0.773308,0.000602293,-2.87723e-07,1.37955e-09,0.77391,0.000601722,-2.83585e-07,-2.74976e-08,0.774512,0.000601072,-3.66077e-07,4.9006e-08,0.775112,0.000600487,-2.19059e-07,-4.93171e-08,0.775712,0.000599901,-3.67011e-07,2.90531e-08,0.776312,0.000599254,-2.79851e-07,-7.29081e-09,0.776911,0.000598673,-3.01724e-07,1.10077e-10,0.777509,0.00059807,-3.01393e-07,6.85053e-09,0.778107,0.000597487,-2.80842e-07,-2.75123e-08,0.778704,0.000596843,-3.63379e-07,4.35939e-08,0.779301,0.000596247,-2.32597e-07,-2.7654e-08,0.779897,0.000595699,-3.15559e-07,7.41741e-09,0.780492,0.00059509,-2.93307e-07,-2.01562e-09,0.781087,0.000594497,-2.99354e-07,6.45059e-10,0.781681,0.000593901,-2.97418e-07,-5.64635e-10,0.782275,0.000593304,-2.99112e-07,1.61347e-09,0.782868,0.000592711,-2.94272e-07,-5.88926e-09,0.78346,0.000592105,-3.1194e-07,2.19436e-08,0.784052,0.000591546,-2.46109e-07,-2.22805e-08,0.784643,0.000590987,-3.1295e-07,7.57368e-09,0.785234,0.000590384,-2.90229e-07,-8.01428e-09,0.785824,0.00058978,-3.14272e-07,2.44834e-08,0.786414,0.000589225,-2.40822e-07,-3.03148e-08,0.787003,0.000588652,-3.31766e-07,3.7171e-08,0.787591,0.0005881,-2.20253e-07,-5.87646e-08,0.788179,0.000587483,-3.96547e-07,7.86782e-08,0.788766,0.000586926,-1.60512e-07,-7.71342e-08,0.789353,0.000586374,-3.91915e-07,5.10444e-08,0.789939,0.000585743,-2.38782e-07,-7.83422e-09,0.790524,0.000585242,-2.62284e-07,-1.97076e-08,0.791109,0.000584658,-3.21407e-07,2.70598e-08,0.791693,0.000584097,-2.40228e-07,-2.89269e-08,0.792277,0.000583529,-3.27008e-07,2.90431e-08,0.792861,0.000582963,-2.39879e-07,-2.76409e-08,0.793443,0.0005824,-3.22802e-07,2.1916e-08,0.794025,0.00058182,-2.57054e-07,-4.18368e-10,0.794607,0.000581305,-2.58309e-07,-2.02425e-08,0.795188,0.000580727,-3.19036e-07,2.17838e-08,0.795768,0.000580155,-2.53685e-07,-7.28814e-09,0.796348,0.000579625,-2.75549e-07,7.36871e-09,0.796928,0.000579096,-2.53443e-07,-2.21867e-08,0.797506,0.000578523,-3.20003e-07,2.17736e-08,0.798085,0.000577948,-2.54683e-07,-5.30296e-09,0.798662,0.000577423,-2.70592e-07,-5.61698e-10,0.799239,0.00057688,-2.72277e-07,7.54977e-09,0.799816,0.000576358,-2.49627e-07,-2.96374e-08,0.800392,0.00057577,-3.38539e-07,5.1395e-08,0.800968,0.000575247,-1.84354e-07,-5.67335e-08,0.801543,0.000574708,-3.54555e-07,5.63297e-08,0.802117,0.000574168,-1.85566e-07,-4.93759e-08,0.802691,0.000573649,-3.33693e-07,2.19646e-08,0.803264,0.000573047,-2.678e-07,2.1122e-08,0.803837,0.000572575,-2.04433e-07,-4.68482e-08,0.804409,0.000572026,-3.44978e-07,4.70613e-08,0.804981,0.000571477,-2.03794e-07,-2.21877e-08,0.805552,0.000571003,-2.70357e-07,-1.79153e-08,0.806123,0.000570408,-3.24103e-07,3.42443e-08,0.806693,0.000569863,-2.2137e-07,1.47556e-10,0.807263,0.000569421,-2.20928e-07,-3.48345e-08,0.807832,0.000568874,-3.25431e-07,1.99812e-08,0.808401,0.000568283,-2.65487e-07,1.45143e-08,0.808969,0.000567796,-2.21945e-07,-1.84338e-08,0.809536,0.000567297,-2.77246e-07,-3.83608e-10,0.810103,0.000566741,-2.78397e-07,1.99683e-08,0.81067,0.000566244,-2.18492e-07,-1.98848e-08,0.811236,0.000565747,-2.78146e-07,-3.38976e-11,0.811801,0.000565191,-2.78248e-07,2.00204e-08,0.812366,0.000564695,-2.18187e-07,-2.04429e-08,0.812931,0.000564197,-2.79516e-07,2.1467e-09,0.813495,0.000563644,-2.73076e-07,1.18561e-08,0.814058,0.000563134,-2.37507e-07,1.00334e-08,0.814621,0.000562689,-2.07407e-07,-5.19898e-08,0.815183,0.000562118,-3.63376e-07,7.87163e-08,0.815745,0.000561627,-1.27227e-07,-8.40616e-08,0.816306,0.000561121,-3.79412e-07,7.87163e-08,0.816867,0.000560598,-1.43263e-07,-5.19898e-08,0.817428,0.000560156,-2.99233e-07,1.00335e-08,0.817988,0.000559587,-2.69132e-07,1.18559e-08,0.818547,0.000559085,-2.33564e-07,2.14764e-09,0.819106,0.000558624,-2.27122e-07,-2.04464e-08,0.819664,0.000558108,-2.88461e-07,2.00334e-08,0.820222,0.000557591,-2.28361e-07,-8.24277e-11,0.820779,0.000557135,-2.28608e-07,-1.97037e-08,0.821336,0.000556618,-2.87719e-07,1.92925e-08,0.821893,0.000556101,-2.29841e-07,2.13831e-09,0.822448,0.000555647,-2.23427e-07,-2.78458e-08,0.823004,0.000555117,-3.06964e-07,4.96402e-08,0.823559,0.000554652,-1.58043e-07,-5.15058e-08,0.824113,0.000554181,-3.12561e-07,3.71737e-08,0.824667,0.000553668,-2.0104e-07,-3.75844e-08,0.82522,0.000553153,-3.13793e-07,5.35592e-08,0.825773,0.000552686,-1.53115e-07,-5.74431e-08,0.826326,0.000552207,-3.25444e-07,5.7004e-08,0.826878,0.000551728,-1.54433e-07,-5.13635e-08,0.827429,0.000551265,-3.08523e-07,2.92406e-08,0.82798,0.000550735,-2.20801e-07,-5.99424e-09,0.828531,0.000550276,-2.38784e-07,-5.26363e-09,0.829081,0.000549782,-2.54575e-07,2.70488e-08,0.82963,0.000549354,-1.73429e-07,-4.33268e-08,0.83018,0.000548878,-3.03409e-07,2.7049e-08,0.830728,0.000548352,-2.22262e-07,-5.26461e-09,0.831276,0.000547892,-2.38056e-07,-5.99057e-09,0.831824,0.000547397,-2.56027e-07,2.92269e-08,0.832371,0.000546973,-1.68347e-07,-5.13125e-08,0.832918,0.000546482,-3.22284e-07,5.68139e-08,0.833464,0.000546008,-1.51843e-07,-5.67336e-08,0.83401,0.000545534,-3.22043e-07,5.09113e-08,0.834555,0.000545043,-1.6931e-07,-2.77022e-08,0.8351,0.000544621,-2.52416e-07,2.92924e-10,0.835644,0.000544117,-2.51537e-07,2.65305e-08,0.836188,0.000543694,-1.71946e-07,-4.68105e-08,0.836732,0.00054321,-3.12377e-07,4.15021e-08,0.837275,0.000542709,-1.87871e-07,1.13355e-11,0.837817,0.000542334,-1.87837e-07,-4.15474e-08,0.838359,0.000541833,-3.12479e-07,4.69691e-08,0.838901,0.000541349,-1.71572e-07,-2.71196e-08,0.839442,0.000540925,-2.52931e-07,1.90462e-09,0.839983,0.000540425,-2.47217e-07,1.95011e-08,0.840523,0.000539989,-1.88713e-07,-2.03045e-08,0.841063,0.00053955,-2.49627e-07,2.11216e-09,0.841602,0.000539057,-2.4329e-07,1.18558e-08,0.842141,0.000538606,-2.07723e-07,1.00691e-08,0.842679,0.000538221,-1.77516e-07,-5.21324e-08,0.843217,0.00053771,-3.33913e-07,7.92513e-08,0.843755,0.00053728,-9.6159e-08,-8.60587e-08,0.844292,0.000536829,-3.54335e-07,8.61696e-08,0.844828,0.000536379,-9.58263e-08,-7.98057e-08,0.845364,0.000535948,-3.35243e-07,5.42394e-08,0.8459,0.00053544,-1.72525e-07,-1.79426e-08,0.846435,0.000535041,-2.26353e-07,1.75308e-08,0.84697,0.000534641,-1.73761e-07,-5.21806e-08,0.847505,0.000534137,-3.30302e-07,7.19824e-08,0.848038,0.000533692,-1.14355e-07,-5.69349e-08,0.848572,0.000533293,-2.8516e-07,3.65479e-08,0.849105,0.000532832,-1.75516e-07,-2.96519e-08,0.849638,0.000532392,-2.64472e-07,2.2455e-08,0.85017,0.000531931,-1.97107e-07,-5.63451e-10,0.850702,0.000531535,-1.98797e-07,-2.02011e-08,0.851233,0.000531077,-2.59401e-07,2.17634e-08,0.851764,0.000530623,-1.94111e-07,-7.24794e-09,0.852294,0.000530213,-2.15854e-07,7.22832e-09,0.852824,0.000529803,-1.94169e-07,-2.16653e-08,0.853354,0.00052935,-2.59165e-07,1.98283e-08,0.853883,0.000528891,-1.9968e-07,1.95678e-09,0.854412,0.000528497,-1.9381e-07,-2.76554e-08,0.85494,0.000528027,-2.76776e-07,4.90603e-08,0.855468,0.00052762,-1.29596e-07,-4.93764e-08,0.855995,0.000527213,-2.77725e-07,2.92361e-08,0.856522,0.000526745,-1.90016e-07,-7.96341e-09,0.857049,0.000526341,-2.13907e-07,2.61752e-09,0.857575,0.000525922,-2.06054e-07,-2.50665e-09,0.8581,0.000525502,-2.13574e-07,7.40906e-09,0.858626,0.000525097,-1.91347e-07,-2.71296e-08,0.859151,0.000524633,-2.72736e-07,4.15048e-08,0.859675,0.000524212,-1.48221e-07,-1.96802e-08,0.860199,0.000523856,-2.07262e-07,-2.23886e-08,0.860723,0.000523375,-2.74428e-07,4.96299e-08,0.861246,0.000522975,-1.25538e-07,-5.69216e-08,0.861769,0.000522553,-2.96303e-07,5.88473e-08,0.862291,0.000522137,-1.19761e-07,-5.92584e-08,0.862813,0.00052172,-2.97536e-07,5.8977e-08,0.863334,0.000521301,-1.20605e-07,-5.74403e-08,0.863855,0.000520888,-2.92926e-07,5.15751e-08,0.864376,0.000520457,-1.38201e-07,-2.96506e-08,0.864896,0.000520091,-2.27153e-07,7.42277e-09,0.865416,0.000519659,-2.04885e-07,-4.05057e-11,0.865936,0.00051925,-2.05006e-07,-7.26074e-09,0.866455,0.000518818,-2.26788e-07,2.90835e-08,0.866973,0.000518451,-1.39538e-07,-4.94686e-08,0.867492,0.000518024,-2.87944e-07,4.95814e-08,0.868009,0.000517597,-1.39199e-07,-2.96479e-08,0.868527,0.000517229,-2.28143e-07,9.40539e-09,0.869044,0.000516801,-1.99927e-07,-7.9737e-09,0.86956,0.000516378,-2.23848e-07,2.24894e-08,0.870077,0.000515997,-1.5638e-07,-2.23793e-08,0.870592,0.000515617,-2.23517e-07,7.42302e-09,0.871108,0.000515193,-2.01248e-07,-7.31283e-09,0.871623,0.000514768,-2.23187e-07,2.18283e-08,0.872137,0.000514387,-1.57702e-07,-2.03959e-08,0.872652,0.000514011,-2.1889e-07,1.50711e-10,0.873165,0.000513573,-2.18437e-07,1.97931e-08,0.873679,0.000513196,-1.59058e-07,-1.97183e-08,0.874192,0.000512819,-2.18213e-07,-5.24324e-10,0.874704,0.000512381,-2.19786e-07,2.18156e-08,0.875217,0.000512007,-1.54339e-07,-2.71336e-08,0.875728,0.000511616,-2.3574e-07,2.71141e-08,0.87624,0.000511226,-1.54398e-07,-2.17182e-08,0.876751,0.000510852,-2.19552e-07,1.54131e-10,0.877262,0.000510414,-2.1909e-07,2.11017e-08,0.877772,0.000510039,-1.55785e-07,-2.49562e-08,0.878282,0.000509652,-2.30654e-07,1.91183e-08,0.878791,0.000509248,-1.73299e-07,8.08751e-09,0.8793,0.000508926,-1.49036e-07,-5.14684e-08,0.879809,0.000508474,-3.03441e-07,7.85766e-08,0.880317,0.000508103,-6.77112e-08,-8.40242e-08,0.880825,0.000507715,-3.19784e-07,7.87063e-08,0.881333,0.000507312,-8.36649e-08,-5.19871e-08,0.88184,0.000506988,-2.39626e-07,1.00327e-08,0.882346,0.000506539,-2.09528e-07,1.18562e-08,0.882853,0.000506156,-1.73959e-07,2.14703e-09,0.883359,0.000505814,-1.67518e-07,-2.04444e-08,0.883864,0.000505418,-2.28851e-07,2.00258e-08,0.88437,0.00050502,-1.68774e-07,-5.42855e-11,0.884874,0.000504682,-1.68937e-07,-1.98087e-08,0.885379,0.000504285,-2.28363e-07,1.96842e-08,0.885883,0.000503887,-1.6931e-07,6.76342e-10,0.886387,0.000503551,-1.67281e-07,-2.23896e-08,0.88689,0.000503149,-2.3445e-07,2.92774e-08,0.887393,0.000502768,-1.46618e-07,-3.51152e-08,0.887896,0.00050237,-2.51963e-07,5.15787e-08,0.888398,0.00050202,-9.72271e-08,-5.19903e-08,0.8889,0.00050167,-2.53198e-07,3.71732e-08,0.889401,0.000501275,-1.41678e-07,-3.70978e-08,0.889902,0.00050088,-2.52972e-07,5.16132e-08,0.890403,0.000500529,-9.81321e-08,-5.01459e-08,0.890903,0.000500183,-2.4857e-07,2.9761e-08,0.891403,0.000499775,-1.59287e-07,-9.29351e-09,0.891903,0.000499428,-1.87167e-07,7.41301e-09,0.892402,0.000499076,-1.64928e-07,-2.03585e-08,0.892901,0.000498685,-2.26004e-07,1.44165e-08,0.893399,0.000498276,-1.82754e-07,2.22974e-08,0.893898,0.000497978,-1.15862e-07,-4.40013e-08,0.894395,0.000497614,-2.47866e-07,3.44985e-08,0.894893,0.000497222,-1.44371e-07,-3.43882e-08,0.89539,0.00049683,-2.47535e-07,4.34497e-08,0.895886,0.000496465,-1.17186e-07,-2.02012e-08,0.896383,0.00049617,-1.7779e-07,-2.22497e-08,0.896879,0.000495748,-2.44539e-07,4.95952e-08,0.897374,0.000495408,-9.57532e-08,-5.69217e-08,0.89787,0.000495045,-2.66518e-07,5.88823e-08,0.898364,0.000494689,-8.98713e-08,-5.93983e-08,0.898859,0.000494331,-2.68066e-07,5.95017e-08,0.899353,0.000493973,-8.95613e-08,-5.9399e-08,0.899847,0.000493616,-2.67758e-07,5.8885e-08,0.90034,0.000493257,-9.11033e-08,-5.69317e-08,0.900833,0.000492904,-2.61898e-07,4.96326e-08,0.901326,0.000492529,-1.13001e-07,-2.23893e-08,0.901819,0.000492236,-1.80169e-07,-1.968e-08,0.902311,0.000491817,-2.39209e-07,4.15047e-08,0.902802,0.000491463,-1.14694e-07,-2.71296e-08,0.903293,0.000491152,-1.96083e-07,7.409e-09,0.903784,0.000490782,-1.73856e-07,-2.50645e-09,0.904275,0.000490427,-1.81376e-07,2.61679e-09,0.904765,0.000490072,-1.73525e-07,-7.96072e-09,0.905255,0.000489701,-1.97407e-07,2.92261e-08,0.905745,0.000489394,-1.09729e-07,-4.93389e-08,0.906234,0.000489027,-2.57746e-07,4.89204e-08,0.906723,0.000488658,-1.10985e-07,-2.71333e-08,0.907211,0.000488354,-1.92385e-07,8.30861e-12,0.907699,0.00048797,-1.9236e-07,2.71001e-08,0.908187,0.000487666,-1.1106e-07,-4.88041e-08,0.908675,0.000487298,-2.57472e-07,4.89069e-08,0.909162,0.000486929,-1.10751e-07,-2.76143e-08,0.909649,0.000486625,-1.93594e-07,1.9457e-09,0.910135,0.000486244,-1.87757e-07,1.98315e-08,0.910621,0.000485928,-1.28262e-07,-2.16671e-08,0.911107,0.000485606,-1.93264e-07,7.23216e-09,0.911592,0.000485241,-1.71567e-07,-7.26152e-09,0.912077,0.000484877,-1.93352e-07,2.18139e-08,0.912562,0.000484555,-1.2791e-07,-2.03895e-08,0.913047,0.000484238,-1.89078e-07,1.39494e-10,0.913531,0.000483861,-1.8866e-07,1.98315e-08,0.914014,0.000483543,-1.29165e-07,-1.98609e-08,0.914498,0.000483225,-1.88748e-07,7.39912e-12,0.914981,0.000482847,-1.88726e-07,1.98313e-08,0.915463,0.000482529,-1.29232e-07,-1.9728e-08,0.915946,0.000482212,-1.88416e-07,-5.24035e-10,0.916428,0.000481833,-1.89988e-07,2.18241e-08,0.916909,0.000481519,-1.24516e-07,-2.71679e-08,0.917391,0.000481188,-2.06019e-07,2.72427e-08,0.917872,0.000480858,-1.24291e-07,-2.21985e-08,0.918353,0.000480543,-1.90886e-07,1.94644e-09,0.918833,0.000480167,-1.85047e-07,1.44127e-08,0.919313,0.00047984,-1.41809e-07,7.39438e-12,0.919793,0.000479556,-1.41787e-07,-1.44423e-08,0.920272,0.000479229,-1.85114e-07,-1.84291e-09,0.920751,0.000478854,-1.90642e-07,2.18139e-08,0.92123,0.000478538,-1.25201e-07,-2.58081e-08,0.921708,0.00047821,-2.02625e-07,2.18139e-08,0.922186,0.00047787,-1.37183e-07,-1.84291e-09,0.922664,0.00047759,-1.42712e-07,-1.44423e-08,0.923141,0.000477262,-1.86039e-07,7.34701e-12,0.923618,0.00047689,-1.86017e-07,1.44129e-08,0.924095,0.000476561,-1.42778e-07,1.94572e-09,0.924572,0.000476281,-1.36941e-07,-2.21958e-08,0.925048,0.000475941,-2.03528e-07,2.72327e-08,0.925523,0.000475615,-1.2183e-07,-2.71304e-08,0.925999,0.00047529,-2.03221e-07,2.16843e-08,0.926474,0.000474949,-1.38168e-07,-2.16005e-12,0.926949,0.000474672,-1.38175e-07,-2.16756e-08,0.927423,0.000474331,-2.03202e-07,2.71001e-08,0.927897,0.000474006,-1.21902e-07,-2.71201e-08,0.928371,0.000473681,-2.03262e-07,2.17757e-08,0.928845,0.00047334,-1.37935e-07,-3.78028e-10,0.929318,0.000473063,-1.39069e-07,-2.02636e-08,0.929791,0.000472724,-1.9986e-07,2.18276e-08,0.930263,0.000472389,-1.34377e-07,-7.44231e-09,0.930736,0.000472098,-1.56704e-07,7.94165e-09,0.931208,0.000471809,-1.32879e-07,-2.43243e-08,0.931679,0.00047147,-2.05851e-07,2.97508e-08,0.932151,0.000471148,-1.16599e-07,-3.50742e-08,0.932622,0.000470809,-2.21822e-07,5.09414e-08,0.933092,0.000470518,-6.89976e-08,-4.94821e-08,0.933563,0.000470232,-2.17444e-07,2.77775e-08,0.934033,0.00046988,-1.34111e-07,-2.02351e-09,0.934502,0.000469606,-1.40182e-07,-1.96835e-08,0.934972,0.000469267,-1.99232e-07,2.11529e-08,0.935441,0.000468932,-1.35774e-07,-5.32332e-09,0.93591,0.000468644,-1.51743e-07,1.40413e-10,0.936378,0.000468341,-1.51322e-07,4.76166e-09,0.936846,0.000468053,-1.37037e-07,-1.9187e-08,0.937314,0.000467721,-1.94598e-07,1.23819e-08,0.937782,0.000467369,-1.57453e-07,2.92642e-08,0.938249,0.000467142,-6.96601e-08,-6.98342e-08,0.938716,0.000466793,-2.79163e-07,7.12586e-08,0.939183,0.000466449,-6.53869e-08,-3.63863e-08,0.939649,0.000466209,-1.74546e-07,1.46818e-08,0.940115,0.000465904,-1.305e-07,-2.2341e-08,0.940581,0.000465576,-1.97523e-07,1.50774e-08,0.941046,0.000465226,-1.52291e-07,2.16359e-08,0.941511,0.000464986,-8.73832e-08,-4.20162e-08,0.941976,0.000464685,-2.13432e-07,2.72198e-08,0.942441,0.00046434,-1.31773e-07,-7.2581e-09,0.942905,0.000464055,-1.53547e-07,1.81263e-09,0.943369,0.000463753,-1.48109e-07,7.58386e-12,0.943832,0.000463457,-1.48086e-07,-1.84298e-09,0.944296,0.000463155,-1.53615e-07,7.36433e-09,0.944759,0.00046287,-1.31522e-07,-2.76143e-08,0.945221,0.000462524,-2.14365e-07,4.34883e-08,0.945684,0.000462226,-8.39003e-08,-2.71297e-08,0.946146,0.000461977,-1.65289e-07,5.42595e-09,0.946608,0.000461662,-1.49012e-07,5.42593e-09,0.947069,0.000461381,-1.32734e-07,-2.71297e-08,0.94753,0.000461034,-2.14123e-07,4.34881e-08,0.947991,0.000460736,-8.36585e-08,-2.76134e-08,0.948452,0.000460486,-1.66499e-07,7.36083e-09,0.948912,0.000460175,-1.44416e-07,-1.82993e-09,0.949372,0.000459881,-1.49906e-07,-4.11073e-11,0.949832,0.000459581,-1.50029e-07,1.99434e-09,0.950291,0.000459287,-1.44046e-07,-7.93627e-09,0.950751,0.000458975,-1.67855e-07,2.97507e-08,0.951209,0.000458728,-7.86029e-08,-5.1462e-08,0.951668,0.000458417,-2.32989e-07,5.6888e-08,0.952126,0.000458121,-6.2325e-08,-5.68806e-08,0.952584,0.000457826,-2.32967e-07,5.14251e-08,0.953042,0.000457514,-7.86914e-08,-2.96107e-08,0.953499,0.000457268,-1.67523e-07,7.41296e-09,0.953956,0.000456955,-1.45285e-07,-4.11262e-11,0.954413,0.000456665,-1.45408e-07,-7.24847e-09,0.95487,0.000456352,-1.67153e-07,2.9035e-08,0.955326,0.000456105,-8.00484e-08,-4.92869e-08,0.955782,0.000455797,-2.27909e-07,4.89032e-08,0.956238,0.000455488,-8.11994e-08,-2.71166e-08,0.956693,0.000455244,-1.62549e-07,-4.13678e-11,0.957148,0.000454919,-1.62673e-07,2.72821e-08,0.957603,0.000454675,-8.0827e-08,-4.94824e-08,0.958057,0.000454365,-2.29274e-07,5.14382e-08,0.958512,0.000454061,-7.49597e-08,-3.7061e-08,0.958965,0.0004538,-1.86143e-07,3.72013e-08,0.959419,0.000453539,-7.45389e-08,-5.21396e-08,0.959873,0.000453234,-2.30958e-07,5.21476e-08,0.960326,0.000452928,-7.45146e-08,-3.72416e-08,0.960778,0.000452667,-1.8624e-07,3.72143e-08,0.961231,0.000452407,-7.45967e-08,-5.20109e-08,0.961683,0.000452101,-2.30629e-07,5.16199e-08,0.962135,0.000451795,-7.57696e-08,-3.52595e-08,0.962587,0.000451538,-1.81548e-07,2.98133e-08,0.963038,0.000451264,-9.2108e-08,-2.43892e-08,0.963489,0.000451007,-1.65276e-07,8.13892e-09,0.96394,0.000450701,-1.40859e-07,-8.16647e-09,0.964391,0.000450394,-1.65358e-07,2.45269e-08,0.964841,0.000450137,-9.17775e-08,-3.03367e-08,0.965291,0.000449863,-1.82787e-07,3.7215e-08,0.965741,0.000449609,-7.11424e-08,-5.89188e-08,0.96619,0.00044929,-2.47899e-07,7.92509e-08,0.966639,0.000449032,-1.01462e-08,-7.92707e-08,0.967088,0.000448773,-2.47958e-07,5.90181e-08,0.967537,0.000448455,-7.0904e-08,-3.75925e-08,0.967985,0.0004482,-1.83681e-07,3.17471e-08,0.968433,0.000447928,-8.84401e-08,-2.97913e-08,0.968881,0.000447662,-1.77814e-07,2.78133e-08,0.969329,0.000447389,-9.4374e-08,-2.18572e-08,0.969776,0.000447135,-1.59946e-07,1.10134e-11,0.970223,0.000446815,-1.59913e-07,2.18132e-08,0.97067,0.000446561,-9.44732e-08,-2.76591e-08,0.971116,0.000446289,-1.7745e-07,2.92185e-08,0.971562,0.000446022,-8.97948e-08,-2.96104e-08,0.972008,0.000445753,-1.78626e-07,2.96185e-08,0.972454,0.000445485,-8.97706e-08,-2.92588e-08,0.972899,0.000445218,-1.77547e-07,2.78123e-08,0.973344,0.000444946,-9.41103e-08,-2.23856e-08,0.973789,0.000444691,-1.61267e-07,2.12559e-09,0.974233,0.000444374,-1.5489e-07,1.38833e-08,0.974678,0.000444106,-1.13241e-07,1.94591e-09,0.975122,0.000443886,-1.07403e-07,-2.16669e-08,0.975565,0.000443606,-1.72404e-07,2.5117e-08,0.976009,0.000443336,-9.70526e-08,-1.91963e-08,0.976452,0.000443085,-1.54642e-07,-7.93627e-09,0.976895,0.000442752,-1.7845e-07,5.09414e-08,0.977338,0.000442548,-2.56262e-08,-7.66201e-08,0.97778,0.000442266,-2.55486e-07,7.67249e-08,0.978222,0.000441986,-2.53118e-08,-5.14655e-08,0.978664,0.000441781,-1.79708e-07,9.92773e-09,0.979106,0.000441451,-1.49925e-07,1.17546e-08,0.979547,0.000441186,-1.14661e-07,2.65868e-09,0.979988,0.000440965,-1.06685e-07,-2.23893e-08,0.980429,0.000440684,-1.73853e-07,2.72939e-08,0.980869,0.000440419,-9.19716e-08,-2.71816e-08,0.98131,0.000440153,-1.73516e-07,2.18278e-08,0.98175,0.000439872,-1.08033e-07,-5.24833e-10,0.982189,0.000439654,-1.09607e-07,-1.97284e-08,0.982629,0.000439376,-1.68793e-07,1.98339e-08,0.983068,0.000439097,-1.09291e-07,-2.62901e-12,0.983507,0.000438879,-1.09299e-07,-1.98234e-08,0.983946,0.000438601,-1.68769e-07,1.96916e-08,0.984384,0.000438322,-1.09694e-07,6.6157e-10,0.984823,0.000438105,-1.0771e-07,-2.23379e-08,0.985261,0.000437823,-1.74723e-07,2.90855e-08,0.985698,0.00043756,-8.74669e-08,-3.43992e-08,0.986136,0.000437282,-1.90665e-07,4.89068e-08,0.986573,0.000437048,-4.39442e-08,-4.20188e-08,0.98701,0.000436834,-1.7e-07,-4.11073e-11,0.987446,0.000436494,-1.70124e-07,4.21832e-08,0.987883,0.00043628,-4.35742e-08,-4.94824e-08,0.988319,0.000436044,-1.92021e-07,3.6537e-08,0.988755,0.00043577,-8.24102e-08,-3.70611e-08,0.989191,0.000435494,-1.93593e-07,5.21026e-08,0.989626,0.000435263,-3.72855e-08,-5.21402e-08,0.990061,0.000435032,-1.93706e-07,3.7249e-08,0.990496,0.000434756,-8.19592e-08,-3.72512e-08,0.990931,0.000434481,-1.93713e-07,5.21511e-08,0.991365,0.00043425,-3.72595e-08,-5.21439e-08,0.991799,0.000434019,-1.93691e-07,3.72152e-08,0.992233,0.000433743,-8.20456e-08,-3.71123e-08,0.992667,0.000433468,-1.93382e-07,5.16292e-08,0.9931,0.000433236,-3.84947e-08,-5.01953e-08,0.993533,0.000433008,-1.89081e-07,2.99427e-08,0.993966,0.00043272,-9.92525e-08,-9.9708e-09,0.994399,0.000432491,-1.29165e-07,9.94051e-09,0.994831,0.000432263,-9.93434e-08,-2.97912e-08,0.995263,0.000431975,-1.88717e-07,4.96198e-08,0.995695,0.000431746,-3.98578e-08,-4.94785e-08,0.996127,0.000431518,-1.88293e-07,2.9085e-08,0.996558,0.000431229,-1.01038e-07,-7.25675e-09,0.996989,0.000431005,-1.22809e-07,-5.79945e-11,0.99742,0.000430759,-1.22983e-07,7.48873e-09,0.997851,0.000430536,-1.00516e-07,-2.98969e-08,0.998281,0.000430245,-1.90207e-07,5.24942e-08,0.998711,0.000430022,-3.27246e-08,-6.08706e-08,0.999141,0.000429774,-2.15336e-07,7.17788e-08,0.999571,0.000429392,0.,0.};
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    template <typename T, int scn, int dcn, bool srgb, int blueIdx> struct Lab2RGB;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    template <int scn, int dcn, bool srgb, int blueIdx> struct Lab2RGB<float, scn, dcn, srgb, blueIdx>
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                B = splineInterpolate(B * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                G = splineInterpolate(G * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                R = splineInterpolate(R * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    template <int scn, int dcn, bool srgb, int blueIdx> struct Lab2RGB<uchar, scn, dcn, srgb, blueIdx>
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            Lab2RGB<float, 3, 3, srgb, blueIdx> cvtf;
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:    __constant__ float c_LabCbrtTab[] = {0.137931,0.0114066,0.,1.18859e-07,0.149338,0.011407,3.56578e-07,-5.79396e-07,0.160745,0.0114059,-1.38161e-06,2.16892e-06,0.172151,0.0114097,5.12516e-06,-8.0814e-06,0.183558,0.0113957,-1.9119e-05,3.01567e-05,0.194965,0.0114479,7.13509e-05,-0.000112545,0.206371,0.011253,-0.000266285,-0.000106493,0.217252,0.0104009,-0.000585765,7.32149e-05,0.22714,0.00944906,-0.00036612,1.21917e-05,0.236235,0.0087534,-0.000329545,2.01753e-05,0.244679,0.00815483,-0.000269019,1.24435e-05,0.252577,0.00765412,-0.000231689,1.05618e-05,0.26001,0.00722243,-0.000200003,8.26662e-06,0.267041,0.00684723,-0.000175203,6.76746e-06,0.27372,0.00651712,-0.000154901,5.61192e-06,0.280088,0.00622416,-0.000138065,4.67009e-06,0.286179,0.00596204,-0.000124055,3.99012e-06,0.292021,0.0057259,-0.000112085,3.36032e-06,0.297638,0.00551181,-0.000102004,2.95338e-06,0.30305,0.00531666,-9.31435e-05,2.52875e-06,0.308277,0.00513796,-8.55572e-05,2.22022e-06,0.313331,0.00497351,-7.88966e-05,1.97163e-06,0.318228,0.00482163,-7.29817e-05,1.7248e-06,0.322978,0.00468084,-6.78073e-05,1.55998e-06,0.327593,0.0045499,-6.31274e-05,1.36343e-06,0.332081,0.00442774,-5.90371e-05,1.27136e-06,0.336451,0.00431348,-5.5223e-05,1.09111e-06,0.34071,0.00420631,-5.19496e-05,1.0399e-06,0.344866,0.00410553,-4.88299e-05,9.18347e-07,0.348923,0.00401062,-4.60749e-05,8.29942e-07,0.352889,0.00392096,-4.35851e-05,7.98478e-07,0.356767,0.00383619,-4.11896e-05,6.84917e-07,0.360562,0.00375586,-3.91349e-05,6.63976e-07,0.36428,0.00367959,-3.7143e-05,5.93086e-07,0.367923,0.00360708,-3.53637e-05,5.6976e-07,0.371495,0.00353806,-3.36544e-05,4.95533e-07,0.375,0.00347224,-3.21678e-05,4.87951e-07,0.378441,0.00340937,-3.0704e-05,4.4349e-07,0.38182,0.00334929,-2.93735e-05,4.20297e-07,0.38514,0.0032918,-2.81126e-05,3.7872e-07,0.388404,0.00323671,-2.69764e-05,3.596e-07,0.391614,0.00318384,-2.58976e-05,3.5845e-07,0.394772,0.00313312,-2.48223e-05,2.92765e-07,0.397881,0.00308435,-2.3944e-05,3.18232e-07,0.400942,0.00303742,-2.29893e-05,2.82046e-07,0.403957,0.00299229,-2.21432e-05,2.52315e-07,0.406927,0.00294876,-2.13862e-05,2.58416e-07,0.409855,0.00290676,-2.0611e-05,2.33939e-07,0.412741,0.00286624,-1.99092e-05,2.36342e-07,0.415587,0.00282713,-1.92001e-05,1.916e-07,0.418396,0.00278931,-1.86253e-05,2.1915e-07,0.421167,0.00275271,-1.79679e-05,1.83498e-07,0.423901,0.00271733,-1.74174e-05,1.79343e-07,0.426602,0.00268303,-1.68794e-05,1.72013e-07,0.429268,0.00264979,-1.63633e-05,1.75686e-07,0.431901,0.00261759,-1.58363e-05,1.3852e-07,0.434503,0.00258633,-1.54207e-05,1.64304e-07,0.437074,0.00255598,-1.49278e-05,1.28136e-07,0.439616,0.00252651,-1.45434e-05,1.57618e-07,0.442128,0.0024979,-1.40705e-05,1.0566e-07,0.444612,0.00247007,-1.37535e-05,1.34998e-07,0.447068,0.00244297,-1.33485e-05,1.29207e-07,0.449498,0.00241666,-1.29609e-05,9.32347e-08,0.451902,0.00239102,-1.26812e-05,1.23703e-07,0.45428,0.00236603,-1.23101e-05,9.74072e-08,0.456634,0.0023417,-1.20179e-05,1.12518e-07,0.458964,0.002318,-1.16803e-05,7.83681e-08,0.46127,0.00229488,-1.14452e-05,1.10452e-07,0.463554,0.00227232,-1.11139e-05,7.58719e-08,0.465815,0.00225032,-1.08863e-05,9.2699e-08,0.468055,0.00222882,-1.06082e-05,8.97738e-08,0.470273,0.00220788,-1.03388e-05,5.4845e-08,0.47247,0.00218736,-1.01743e-05,1.0808e-07,0.474648,0.00216734,-9.85007e-06,4.9277e-08,0.476805,0.00214779,-9.70224e-06,8.22408e-08,0.478943,0.00212863,-9.45551e-06,6.87942e-08,0.481063,0.00210993,-9.24913e-06,5.98144e-08,0.483163,0.00209161,-9.06969e-06,7.93789e-08,0.485246,0.00207371,-8.83155e-06,3.99032e-08,0.487311,0.00205616,-8.71184e-06,8.88325e-08,0.489358,0.002039,-8.44534e-06,2.20004e-08,0.491389,0.00202218,-8.37934e-06,9.13872e-08,0.493403,0.0020057,-8.10518e-06,2.96829e-08,0.495401,0.00198957,-8.01613e-06,5.81028e-08,0.497382,0.00197372,-7.84183e-06,6.5731e-08,0.499348,0.00195823,-7.64463e-06,3.66019e-08,0.501299,0.00194305,-7.53483e-06,2.62811e-08,0.503234,0.00192806,-7.45598e-06,9.66907e-08,0.505155,0.00191344,-7.16591e-06,4.18928e-09,0.507061,0.00189912,-7.15334e-06,6.53665e-08,0.508953,0.00188501,-6.95724e-06,3.23686e-08,0.510831,0.00187119,-6.86014e-06,4.35774e-08,0.512696,0.0018576,-6.72941e-06,3.17406e-08,0.514547,0.00184424,-6.63418e-06,6.78785e-08,0.516384,0.00183117,-6.43055e-06,-5.23126e-09,0.518209,0.0018183,-6.44624e-06,7.22562e-08,0.520021,0.00180562,-6.22947e-06,1.42292e-08,0.52182,0.0017932,-6.18679e-06,4.9641e-08,0.523607,0.00178098,-6.03786e-06,2.56259e-08,0.525382,0.00176898,-5.96099e-06,2.66696e-08,0.527145,0.00175714,-5.88098e-06,4.65094e-08,0.528897,0.00174552,-5.74145e-06,2.57114e-08,0.530637,0.00173411,-5.66431e-06,2.94588e-08,0.532365,0.00172287,-5.57594e-06,3.52667e-08,0.534082,0.00171182,-5.47014e-06,8.28868e-09,0.535789,0.00170091,-5.44527e-06,5.07871e-08,0.537484,0.00169017,-5.29291e-06,2.69817e-08,0.539169,0.00167967,-5.21197e-06,2.01009e-08,0.540844,0.0016693,-5.15166e-06,1.18237e-08,0.542508,0.00165903,-5.11619e-06,5.18135e-08,0.544162,0.00164896,-4.96075e-06,1.9341e-08,0.545806,0.00163909,-4.90273e-06,-9.96867e-09,0.54744,0.00162926,-4.93263e-06,8.01382e-08,0.549064,0.00161963,-4.69222e-06,-1.25601e-08,0.550679,0.00161021,-4.7299e-06,2.97067e-08,0.552285,0.00160084,-4.64078e-06,1.29426e-08,0.553881,0.0015916,-4.60195e-06,3.77327e-08,0.555468,0.00158251,-4.48875e-06,1.49412e-08,0.557046,0.00157357,-4.44393e-06,2.17118e-08,0.558615,0.00156475,-4.3788e-06,1.74206e-08,0.560176,0.00155605,-4.32653e-06,2.78152e-08,0.561727,0.00154748,-4.24309e-06,-9.47239e-09,0.563271,0.00153896,-4.27151e-06,6.9679e-08,0.564805,0.00153063,-4.06247e-06,-3.08246e-08,0.566332,0.00152241,-4.15494e-06,5.36188e-08,0.56785,0.00151426,-3.99409e-06,-4.83594e-09,0.56936,0.00150626,-4.00859e-06,2.53293e-08,0.570863,0.00149832,-3.93261e-06,2.27286e-08,0.572357,0.00149052,-3.86442e-06,2.96541e-09,0.573844,0.0014828,-3.85552e-06,2.50147e-08,0.575323,0.00147516,-3.78048e-06,1.61842e-08,0.576794,0.00146765,-3.73193e-06,2.94582e-08,0.578258,0.00146028,-3.64355e-06,-1.48076e-08,0.579715,0.00145295,-3.68798e-06,2.97724e-08,0.581164,0.00144566,-3.59866e-06,1.49272e-08,0.582606,0.00143851,-3.55388e-06,2.97285e-08,0.584041,0.00143149,-3.46469e-06,-1.46323e-08,0.585469,0.00142451,-3.50859e-06,2.88004e-08,0.58689,0.00141758,-3.42219e-06,1.864e-08,0.588304,0.00141079,-3.36627e-06,1.58482e-08,0.589712,0.00140411,-3.31872e-06,-2.24279e-08,0.591112,0.00139741,-3.38601e-06,7.38639e-08,0.592507,0.00139085,-3.16441e-06,-3.46088e-08,0.593894,0.00138442,-3.26824e-06,4.96675e-09,0.595275,0.0013779,-3.25334e-06,7.4346e-08,0.59665,0.00137162,-3.0303e-06,-6.39319e-08,0.598019,0.00136536,-3.2221e-06,6.21725e-08,0.599381,0.00135911,-3.03558e-06,-5.94423e-09,0.600737,0.00135302,-3.05341e-06,2.12091e-08,0.602087,0.00134697,-2.98979e-06,-1.92876e-08,0.603431,0.00134094,-3.04765e-06,5.5941e-08,0.604769,0.00133501,-2.87983e-06,-2.56622e-08,0.606101,0.00132917,-2.95681e-06,4.67078e-08,0.607427,0.0013234,-2.81669e-06,-4.19592e-08,0.608748,0.00131764,-2.94257e-06,6.15243e-08,0.610062,0.00131194,-2.75799e-06,-2.53244e-08,0.611372,0.00130635,-2.83397e-06,3.97739e-08,0.612675,0.0013008,-2.71465e-06,-1.45618e-08,0.613973,0.00129533,-2.75833e-06,1.84733e-08,0.615266,0.00128986,-2.70291e-06,2.73606e-10,0.616553,0.00128446,-2.70209e-06,4.00367e-08,0.617835,0.00127918,-2.58198e-06,-4.12113e-08,0.619111,0.00127389,-2.70561e-06,6.52039e-08,0.620383,0.00126867,-2.51e-06,-4.07901e-08,0.621649,0.00126353,-2.63237e-06,3.83516e-08,0.62291,0.00125838,-2.51732e-06,6.59315e-09,0.624166,0.00125337,-2.49754e-06,-5.11939e-09,0.625416,0.00124836,-2.5129e-06,1.38846e-08,0.626662,0.00124337,-2.47124e-06,9.18514e-09,0.627903,0.00123846,-2.44369e-06,8.97952e-09,0.629139,0.0012336,-2.41675e-06,1.45012e-08,0.63037,0.00122881,-2.37325e-06,-7.37949e-09,0.631597,0.00122404,-2.39538e-06,1.50169e-08,0.632818,0.00121929,-2.35033e-06,6.91648e-09,0.634035,0.00121461,-2.32958e-06,1.69219e-08,0.635248,0.00121,-2.27882e-06,-1.49997e-08,0.636455,0.0012054,-2.32382e-06,4.30769e-08,0.637659,0.00120088,-2.19459e-06,-3.80986e-08,0.638857,0.00119638,-2.30888e-06,4.97134e-08,0.640051,0.00119191,-2.15974e-06,-4.15463e-08,0.641241,0.00118747,-2.28438e-06,5.68667e-08,0.642426,0.00118307,-2.11378e-06,-7.10641e-09,0.643607,0.00117882,-2.1351e-06,-2.8441e-08,0.644784,0.00117446,-2.22042e-06,6.12658e-08,0.645956,0.00117021,-2.03663e-06,-3.78083e-08,0.647124,0.00116602,-2.15005e-06,3.03627e-08,0.648288,0.00116181,-2.05896e-06,-2.40379e-08,0.649448,0.00115762,-2.13108e-06,6.57887e-08,0.650603,0.00115356,-1.93371e-06,-6.03028e-08,0.651755,0.00114951,-2.11462e-06,5.62134e-08,0.652902,0.00114545,-1.94598e-06,-4.53417e-08,0.654046,0.00114142,-2.082e-06,6.55489e-08,0.655185,0.00113745,-1.88536e-06,-3.80396e-08,0.656321,0.00113357,-1.99948e-06,2.70049e-08,0.657452,0.00112965,-1.91846e-06,-1.03755e-08,0.65858,0.00112578,-1.94959e-06,1.44973e-08,0.659704,0.00112192,-1.9061e-06,1.1991e-08,0.660824,0.00111815,-1.87012e-06,-2.85634e-09,0.66194,0.0011144,-1.87869e-06,-5.65782e-10,0.663053,0.00111064,-1.88039e-06,5.11947e-09,0.664162,0.0011069,-1.86503e-06,3.96924e-08,0.665267,0.00110328,-1.74595e-06,-4.46795e-08,0.666368,0.00109966,-1.87999e-06,1.98161e-08,0.667466,0.00109596,-1.82054e-06,2.502e-08,0.66856,0.00109239,-1.74548e-06,-6.86593e-10,0.669651,0.0010889,-1.74754e-06,-2.22739e-08,0.670738,0.00108534,-1.81437e-06,3.01776e-08,0.671821,0.0010818,-1.72383e-06,2.07732e-08,0.672902,0.00107841,-1.66151e-06,-5.36658e-08,0.673978,0.00107493,-1.82251e-06,7.46802e-08,0.675051,0.00107151,-1.59847e-06,-6.62411e-08,0.676121,0.00106811,-1.79719e-06,7.10748e-08,0.677188,0.00106473,-1.58397e-06,-3.92441e-08,0.678251,0.00106145,-1.7017e-06,2.62973e-08,0.679311,0.00105812,-1.62281e-06,-6.34035e-09,0.680367,0.00105486,-1.64183e-06,-9.36249e-10,0.68142,0.00105157,-1.64464e-06,1.00854e-08,0.68247,0.00104831,-1.61438e-06,2.01995e-08,0.683517,0.00104514,-1.55378e-06,-3.1279e-08,0.68456,0.00104194,-1.64762e-06,4.53114e-08,0.685601,0.00103878,-1.51169e-06,-3.07573e-08,0.686638,0.00103567,-1.60396e-06,1.81133e-08,0.687672,0.00103251,-1.54962e-06,1.79085e-08,0.688703,0.00102947,-1.49589e-06,-3.01428e-08,0.689731,0.00102639,-1.58632e-06,4.30583e-08,0.690756,0.00102334,-1.45715e-06,-2.28814e-08,0.691778,0.00102036,-1.52579e-06,-1.11373e-08,0.692797,0.00101727,-1.5592e-06,6.74305e-08,0.693812,0.00101436,-1.35691e-06,-7.97709e-08,0.694825,0.0010114,-1.59622e-06,7.28391e-08,0.695835,0.00100843,-1.37771e-06,-3.27715e-08,0.696842,0.00100558,-1.47602e-06,-1.35807e-09,0.697846,0.00100262,-1.48009e-06,3.82037e-08,0.698847,0.000999775,-1.36548e-06,-3.22474e-08,0.699846,0.000996948,-1.46223e-06,3.11809e-08,0.700841,0.000994117,-1.36868e-06,-3.28714e-08,0.701834,0.000991281,-1.4673e-06,4.07001e-08,0.702824,0.000988468,-1.3452e-06,-1.07197e-08,0.703811,0.000985746,-1.37736e-06,2.17866e-09,0.704795,0.000982998,-1.37082e-06,2.00521e-09,0.705777,0.000980262,-1.3648e-06,-1.01996e-08,0.706756,0.000977502,-1.3954e-06,3.87931e-08,0.707732,0.000974827,-1.27902e-06,-2.57632e-08,0.708706,0.000972192,-1.35631e-06,4.65513e-09,0.709676,0.000969493,-1.34235e-06,7.14257e-09,0.710645,0.00096683,-1.32092e-06,2.63791e-08,0.71161,0.000964267,-1.24178e-06,-5.30543e-08,0.712573,0.000961625,-1.40095e-06,6.66289e-08,0.713533,0.000959023,-1.20106e-06,-3.46474e-08,0.714491,0.000956517,-1.305e-06,1.23559e-08,0.715446,0.000953944,-1.26793e-06,-1.47763e-08,0.716399,0.000951364,-1.31226e-06,4.67494e-08,0.717349,0.000948879,-1.17201e-06,-5.3012e-08,0.718297,0.000946376,-1.33105e-06,4.60894e-08,0.719242,0.000943852,-1.19278e-06,-1.21366e-08,0.720185,0.00094143,-1.22919e-06,2.45673e-09,0.721125,0.000938979,-1.22182e-06,2.30966e-09,0.722063,0.000936543,-1.21489e-06,-1.16954e-08,0.722998,0.000934078,-1.24998e-06,4.44718e-08,0.723931,0.000931711,-1.11656e-06,-4.69823e-08,0.724861,0.000929337,-1.25751e-06,2.4248e-08,0.725789,0.000926895,-1.18477e-06,9.5949e-09,0.726715,0.000924554,-1.15598e-06,-3.02286e-09,0.727638,0.000922233,-1.16505e-06,2.49649e-09,0.72856,0.00091991,-1.15756e-06,-6.96321e-09,0.729478,0.000917575,-1.17845e-06,2.53564e-08,0.730395,0.000915294,-1.10238e-06,-3.48578e-08,0.731309,0.000912984,-1.20695e-06,5.44704e-08,0.732221,0.000910734,-1.04354e-06,-6.38144e-08,0.73313,0.000908455,-1.23499e-06,8.15781e-08,0.734038,0.00090623,-9.90253e-07,-8.3684e-08,0.734943,0.000903999,-1.2413e-06,7.43441e-08,0.735846,0.000901739,-1.01827e-06,-3.48787e-08,0.736746,0.000899598,-1.12291e-06,5.56596e-09,0.737645,0.000897369,-1.10621e-06,1.26148e-08,0.738541,0.000895194,-1.06837e-06,3.57935e-09,0.739435,0.000893068,-1.05763e-06,-2.69322e-08,0.740327,0.000890872,-1.13842e-06,4.45448e-08,0.741217,0.000888729,-1.00479e-06,-3.20376e-08,0.742105,0.000886623,-1.1009e-06,2.40011e-08,0.74299,0.000884493,-1.0289e-06,-4.36209e-09,0.743874,0.000882422,-1.04199e-06,-6.55268e-09,0.744755,0.000880319,-1.06164e-06,3.05728e-08,0.745634,0.000878287,-9.69926e-07,-5.61338e-08,0.746512,0.000876179,-1.13833e-06,7.4753e-08,0.747387,0.000874127,-9.14068e-07,-6.40644e-08,0.74826,0.000872106,-1.10626e-06,6.22955e-08,0.749131,0.000870081,-9.19375e-07,-6.59083e-08,0.75,0.000868044,-1.1171e-06,8.21284e-08,0.750867,0.000866056,-8.70714e-07,-8.37915e-08,0.751732,0.000864064,-1.12209e-06,7.42237e-08,0.752595,0.000862042,-8.99418e-07,-3.42894e-08,0.753456,0.00086014,-1.00229e-06,3.32955e-09,0.754315,0.000858146,-9.92297e-07,2.09712e-08,0.755173,0.000856224,-9.29384e-07,-2.76096e-08,0.756028,0.000854282,-1.01221e-06,2.98627e-08,0.756881,0.000852348,-9.22625e-07,-3.22365e-08,0.757733,0.000850406,-1.01933e-06,3.94786e-08,0.758582,0.000848485,-9.00898e-07,-6.46833e-09,0.75943,0.000846664,-9.20303e-07,-1.36052e-08,0.760275,0.000844783,-9.61119e-07,1.28447e-09,0.761119,0.000842864,-9.57266e-07,8.4674e-09,0.761961,0.000840975,-9.31864e-07,2.44506e-08,0.762801,0.000839185,-8.58512e-07,-4.6665e-08,0.763639,0.000837328,-9.98507e-07,4.30001e-08,0.764476,0.00083546,-8.69507e-07,-6.12609e-09,0.76531,0.000833703,-8.87885e-07,-1.84959e-08,0.766143,0.000831871,-9.43372e-07,2.05052e-08,0.766974,0.000830046,-8.81857e-07,-3.92026e-09,0.767803,0.000828271,-8.93618e-07,-4.82426e-09,0.768631,0.000826469,-9.0809e-07,2.32172e-08,0.769456,0.000824722,-8.38439e-07,-2.84401e-08,0.77028,0.00082296,-9.23759e-07,3.09386e-08,0.771102,0.000821205,-8.30943e-07,-3.57099e-08,0.771922,0.000819436,-9.38073e-07,5.22963e-08,0.772741,0.000817717,-7.81184e-07,-5.42658e-08,0.773558,0.000815992,-9.43981e-07,4.55579e-08,0.774373,0.000814241,-8.07308e-07,-8.75656e-09,0.775186,0.0008126,-8.33578e-07,-1.05315e-08,0.775998,0.000810901,-8.65172e-07,-8.72188e-09,0.776808,0.000809145,-8.91338e-07,4.54191e-08,0.777616,0.000807498,-7.5508e-07,-5.37454e-08,0.778423,0.000805827,-9.16317e-07,5.03532e-08,0.779228,0.000804145,-7.65257e-07,-2.84584e-08,0.780031,0.000802529,-8.50632e-07,3.87579e-09,0.780833,0.00080084,-8.39005e-07,1.29552e-08,0.781633,0.0007992,-8.00139e-07,3.90804e-09,0.782432,0.000797612,-7.88415e-07,-2.85874e-08,0.783228,0.000795949,-8.74177e-07,5.0837e-08,0.784023,0.000794353,-7.21666e-07,-5.55513e-08,0.784817,0.000792743,-8.8832e-07,5.21587e-08,0.785609,0.000791123,-7.31844e-07,-3.38744e-08,0.786399,0.000789558,-8.33467e-07,2.37342e-08,0.787188,0.000787962,-7.62264e-07,-1.45775e-09,0.787975,0.000786433,-7.66638e-07,-1.79034e-08,0.788761,0.000784846,-8.20348e-07,1.34665e-08,0.789545,0.000783246,-7.79948e-07,2.3642e-08,0.790327,0.000781757,-7.09022e-07,-4.84297e-08,0.791108,0.000780194,-8.54311e-07,5.08674e-08,0.791888,0.000778638,-7.01709e-07,-3.58303e-08,0.792666,0.000777127,-8.092e-07,3.28493e-08,0.793442,0.000775607,-7.10652e-07,-3.59624e-08,0.794217,0.000774078,-8.1854e-07,5.13959e-08,0.79499,0.000772595,-6.64352e-07,-5.04121e-08,0.795762,0.000771115,-8.15588e-07,3.10431e-08,0.796532,0.000769577,-7.22459e-07,-1.41557e-08,0.797301,0.00076809,-7.64926e-07,2.55795e-08,0.798069,0.000766636,-6.88187e-07,-2.85578e-08,0.798835,0.000765174,-7.73861e-07,2.90472e-08,0.799599,0.000763714,-6.86719e-07,-2.80262e-08,0.800362,0.000762256,-7.70798e-07,2.34531e-08,0.801123,0.000760785,-7.00438e-07,-6.18144e-09,0.801884,0.000759366,-7.18983e-07,1.27263e-09,0.802642,0.000757931,-7.15165e-07,1.09101e-09,0.803399,0.000756504,-7.11892e-07,-5.63675e-09,0.804155,0.000755064,-7.28802e-07,2.14559e-08,0.80491,0.00075367,-6.64434e-07,-2.05821e-08,0.805663,0.00075228,-7.26181e-07,1.26812e-09,0.806414,0.000750831,-7.22377e-07,1.55097e-08,0.807164,0.000749433,-6.75848e-07,-3.70216e-09,0.807913,0.00074807,-6.86954e-07,-7.0105e-10,0.80866,0.000746694,-6.89057e-07,6.5063e-09,0.809406,0.000745336,-6.69538e-07,-2.53242e-08,0.810151,0.000743921,-7.45511e-07,3.51858e-08,0.810894,0.000742535,-6.39953e-07,3.79034e-09,0.811636,0.000741267,-6.28582e-07,-5.03471e-08,0.812377,0.000739858,-7.79624e-07,7.83886e-08,0.813116,0.000738534,-5.44458e-07,-8.43935e-08,0.813854,0.000737192,-7.97638e-07,8.03714e-08,0.81459,0.000735838,-5.56524e-07,-5.82784e-08,0.815325,0.00073455,-7.31359e-07,3.35329e-08,0.816059,0.000733188,-6.3076e-07,-1.62486e-08,0.816792,0.000731878,-6.79506e-07,3.14614e-08,0.817523,0.000730613,-5.85122e-07,-4.99925e-08,0.818253,0.000729293,-7.35099e-07,4.92994e-08,0.818982,0.000727971,-5.87201e-07,-2.79959e-08,0.819709,0.000726712,-6.71189e-07,3.07959e-09,0.820435,0.000725379,-6.6195e-07,1.56777e-08,0.82116,0.000724102,-6.14917e-07,-6.18564e-09,0.821883,0.000722854,-6.33474e-07,9.06488e-09,0.822606,0.000721614,-6.06279e-07,-3.00739e-08,0.823327,0.000720311,-6.96501e-07,5.16262e-08,0.824046,0.000719073,-5.41623e-07,-5.72214e-08,0.824765,0.000717818,-7.13287e-07,5.80503e-08,0.825482,0.000716566,-5.39136e-07,-5.57703e-08,0.826198,0.00071532,-7.06447e-07,4.58215e-08,0.826912,0.000714045,-5.68983e-07,-8.30636e-09,0.827626,0.000712882,-5.93902e-07,-1.25961e-08,0.828338,0.000711656,-6.3169e-07,-9.13985e-10,0.829049,0.00071039,-6.34432e-07,1.62519e-08,0.829759,0.00070917,-5.85676e-07,-4.48904e-09,0.830468,0.000707985,-5.99143e-07,1.70418e-09,0.831175,0.000706792,-5.9403e-07,-2.32768e-09,0.831881,0.000705597,-6.01014e-07,7.60648e-09,0.832586,0.000704418,-5.78194e-07,-2.80982e-08,0.83329,0.000703177,-6.62489e-07,4.51817e-08,0.833993,0.000701988,-5.26944e-07,-3.34192e-08,0.834694,0.000700834,-6.27201e-07,2.88904e-08,0.835394,0.000699666,-5.4053e-07,-2.25378e-08,0.836093,0.000698517,-6.08143e-07,1.65589e-09,0.836791,0.000697306,-6.03176e-07,1.59142e-08,0.837488,0.000696147,-5.55433e-07,-5.70801e-09,0.838184,0.000695019,-5.72557e-07,6.91792e-09,0.838878,0.000693895,-5.51803e-07,-2.19637e-08,0.839571,0.000692725,-6.17694e-07,2.13321e-08,0.840263,0.000691554,-5.53698e-07,-3.75996e-09,0.840954,0.000690435,-5.64978e-07,-6.29219e-09,0.841644,0.000689287,-5.83855e-07,2.89287e-08,0.842333,0.000688206,-4.97068e-07,-4.98181e-08,0.843021,0.000687062,-6.46523e-07,5.11344e-08,0.843707,0.000685922,-4.9312e-07,-3.55102e-08,0.844393,0.00068483,-5.9965e-07,3.13019e-08,0.845077,0.000683724,-5.05745e-07,-3.00925e-08,0.84576,0.000682622,-5.96022e-07,2.94636e-08,0.846442,0.000681519,-5.07631e-07,-2.81572e-08,0.847123,0.000680419,-5.92103e-07,2.35606e-08,0.847803,0.000679306,-5.21421e-07,-6.48045e-09,0.848482,0.000678243,-5.40863e-07,2.36124e-09,0.849159,0.000677169,-5.33779e-07,-2.96461e-09,0.849836,0.000676092,-5.42673e-07,9.49728e-09,0.850512,0.000675035,-5.14181e-07,-3.50245e-08,0.851186,0.000673902,-6.19254e-07,7.09959e-08,0.851859,0.000672876,-4.06267e-07,-7.01453e-08,0.852532,0.000671853,-6.16703e-07,3.07714e-08,0.853203,0.000670712,-5.24388e-07,6.66423e-09,0.853873,0.000669684,-5.04396e-07,2.17629e-09,0.854542,0.000668681,-4.97867e-07,-1.53693e-08,0.855211,0.000667639,-5.43975e-07,-3.03752e-10,0.855878,0.000666551,-5.44886e-07,1.65844e-08,0.856544,0.000665511,-4.95133e-07,-6.42907e-09,0.857209,0.000664501,-5.1442e-07,9.13195e-09,0.857873,0.0006635,-4.87024e-07,-3.00987e-08,0.858536,0.000662435,-5.7732e-07,5.16584e-08,0.859198,0.000661436,-4.22345e-07,-5.73255e-08,0.859859,0.000660419,-5.94322e-07,5.84343e-08,0.860518,0.000659406,-4.19019e-07,-5.72022e-08,0.861177,0.000658396,-5.90626e-07,5.11653e-08,0.861835,0.000657368,-4.3713e-07,-2.82495e-08,0.862492,0.000656409,-5.21878e-07,2.22788e-09,0.863148,0.000655372,-5.15195e-07,1.9338e-08,0.863803,0.0006544,-4.5718e-07,-1.99754e-08,0.864457,0.000653425,-5.17107e-07,9.59024e-10,0.86511,0.000652394,-5.1423e-07,1.61393e-08,0.865762,0.000651414,-4.65812e-07,-5.91149e-09,0.866413,0.000650465,-4.83546e-07,7.50665e-09,0.867063,0.00064952,-4.61026e-07,-2.4115e-08,0.867712,0.000648526,-5.33371e-07,2.93486e-08,0.86836,0.000647547,-4.45325e-07,-3.36748e-08,0.869007,0.000646555,-5.4635e-07,4.57461e-08,0.869653,0.0006456,-4.09112e-07,-3.01002e-08,0.870298,0.000644691,-4.99412e-07,1.50501e-08,0.870942,0.000643738,-4.54262e-07,-3.01002e-08,0.871585,0.000642739,-5.44563e-07,4.57461e-08,0.872228,0.000641787,-4.07324e-07,-3.36748e-08,0.872869,0.000640871,-5.08349e-07,2.93486e-08,0.873509,0.000639943,-4.20303e-07,-2.4115e-08,0.874149,0.00063903,-4.92648e-07,7.50655e-09,0.874787,0.000638067,-4.70128e-07,-5.91126e-09,0.875425,0.000637109,-4.87862e-07,1.61385e-08,0.876062,0.000636182,-4.39447e-07,9.61961e-10,0.876697,0.000635306,-4.36561e-07,-1.99863e-08,0.877332,0.000634373,-4.9652e-07,1.93785e-08,0.877966,0.000633438,-4.38384e-07,2.07697e-09,0.878599,0.000632567,-4.32153e-07,-2.76864e-08,0.879231,0.00063162,-5.15212e-07,4.90641e-08,0.879862,0.000630737,-3.6802e-07,-4.93606e-08,0.880493,0.000629852,-5.16102e-07,2.9169e-08,0.881122,0.000628908,-4.28595e-07,-7.71083e-09,0.881751,0.000628027,-4.51727e-07,1.6744e-09,0.882378,0.000627129,-4.46704e-07,1.01317e-09,0.883005,0.000626239,-4.43665e-07,-5.72703e-09,0.883631,0.000625334,-4.60846e-07,2.1895e-08,0.884255,0.000624478,-3.95161e-07,-2.22481e-08,0.88488,0.000623621,-4.61905e-07,7.4928e-09,0.885503,0.00062272,-4.39427e-07,-7.72306e-09,0.886125,0.000621818,-4.62596e-07,2.33995e-08,0.886746,0.000620963,-3.92398e-07,-2.62704e-08,0.887367,0.000620099,-4.71209e-07,2.20775e-08,0.887987,0.000619223,-4.04976e-07,-2.43496e-09,0.888605,0.000618406,-4.12281e-07,-1.23377e-08,0.889223,0.000617544,-4.49294e-07,-7.81876e-09,0.88984,0.000616622,-4.72751e-07,4.36128e-08,0.890457,0.000615807,-3.41912e-07,-4.7423e-08,0.891072,0.000614981,-4.84181e-07,2.68698e-08,0.891687,0.000614093,-4.03572e-07,-4.51384e-10,0.8923,0.000613285,-4.04926e-07,-2.50643e-08,0.892913,0.0006124,-4.80119e-07,4.11038e-08,0.893525,0.000611563,-3.56808e-07,-2.01414e-08,0.894136,0.000610789,-4.17232e-07,-2.01426e-08,0.894747,0.000609894,-4.7766e-07,4.11073e-08,0.895356,0.000609062,-3.54338e-07,-2.50773e-08,0.895965,0.000608278,-4.2957e-07,-4.02954e-10,0.896573,0.000607418,-4.30779e-07,2.66891e-08,0.89718,0.000606636,-3.50711e-07,-4.67489e-08,0.897786,0.000605795,-4.90958e-07,4.10972e-08,0.898391,0.000604936,-3.67666e-07,1.56948e-09,0.898996,0.000604205,-3.62958e-07,-4.73751e-08,0.8996,0.000603337,-5.05083e-07,6.87214e-08,0.900202,0.000602533,-2.98919e-07,-4.86966e-08,0.900805,0.000601789,-4.45009e-07,6.85589e-09,0.901406,0.00060092,-4.24441e-07,2.1273e-08,0.902007,0.000600135,-3.60622e-07,-3.23434e-08,0.902606,0.000599317,-4.57652e-07,4.84959e-08,0.903205,0.000598547,-3.12164e-07,-4.24309e-08,0.903803,0.000597795,-4.39457e-07,2.01844e-09,0.904401,0.000596922,-4.33402e-07,3.43571e-08,0.904997,0.000596159,-3.30331e-07,-2.02374e-08,0.905593,0.000595437,-3.91043e-07,-1.30123e-08,0.906188,0.000594616,-4.3008e-07,1.26819e-08,0.906782,0.000593794,-3.92034e-07,2.18894e-08,0.907376,0.000593076,-3.26366e-07,-4.06349e-08,0.907968,0.000592301,-4.4827e-07,2.1441e-08,0.90856,0.000591469,-3.83947e-07,1.44754e-08,0.909151,0.000590744,-3.40521e-07,-1.97379e-08,0.909742,0.000590004,-3.99735e-07,4.87161e-09,0.910331,0.000589219,-3.8512e-07,2.51532e-10,0.91092,0.00058845,-3.84366e-07,-5.87776e-09,0.911508,0.000587663,-4.01999e-07,2.32595e-08,0.912096,0.000586929,-3.3222e-07,-2.75554e-08,0.912682,0.000586182,-4.14887e-07,2.73573e-08,0.913268,0.000585434,-3.32815e-07,-2.22692e-08,0.913853,0.000584702,-3.99622e-07,2.11486e-09,0.914437,0.000583909,-3.93278e-07,1.38098e-08,0.915021,0.000583164,-3.51848e-07,2.25042e-09,0.915604,0.000582467,-3.45097e-07,-2.28115e-08,0.916186,0.000581708,-4.13531e-07,2.93911e-08,0.916767,0.000580969,-3.25358e-07,-3.51481e-08,0.917348,0.000580213,-4.30803e-07,5.15967e-08,0.917928,0.000579506,-2.76012e-07,-5.20296e-08,0.918507,0.000578798,-4.32101e-07,3.73124e-08,0.919085,0.000578046,-3.20164e-07,-3.76154e-08,0.919663,0.000577293,-4.3301e-07,5.35447e-08,0.92024,0.000576587,-2.72376e-07,-5.7354e-08,0.920816,0.000575871,-4.44438e-07,5.66621e-08,0.921391,0.000575152,-2.74452e-07,-5.00851e-08,0.921966,0.000574453,-4.24707e-07,2.4469e-08,0.92254,0.000573677,-3.513e-07,1.18138e-08,0.923114,0.000573009,-3.15859e-07,-1.21195e-08,0.923686,0.000572341,-3.52217e-07,-2.29403e-08,0.924258,0.000571568,-4.21038e-07,4.4276e-08,0.924829,0.000570859,-2.8821e-07,-3.49546e-08,0.9254,0.000570178,-3.93074e-07,3.59377e-08,0.92597,0.000569499,-2.85261e-07,-4.91915e-08,0.926539,0.000568781,-4.32835e-07,4.16189e-08,0.927107,0.00056804,-3.07979e-07,1.92523e-09,0.927675,0.00056743,-3.02203e-07,-4.93198e-08,0.928242,0.000566678,-4.50162e-07,7.61447e-08,0.928809,0.000566006,-2.21728e-07,-7.6445e-08,0.929374,0.000565333,-4.51063e-07,5.08216e-08,0.929939,0.000564583,-2.98599e-07,-7.63212e-09,0.930503,0.000563963,-3.21495e-07,-2.02931e-08,0.931067,0.000563259,-3.82374e-07,2.92001e-08,0.93163,0.000562582,-2.94774e-07,-3.69025e-08,0.932192,0.000561882,-4.05482e-07,5.88053e-08,0.932754,0.000561247,-2.29066e-07,-7.91094e-08,0.933315,0.000560552,-4.66394e-07,7.88184e-08,0.933875,0.000559856,-2.29939e-07,-5.73501e-08,0.934434,0.000559224,-4.01989e-07,3.13727e-08,0.934993,0.000558514,-3.07871e-07,-8.53611e-09,0.935551,0.000557873,-3.33479e-07,2.77175e-09,0.936109,0.000557214,-3.25164e-07,-2.55091e-09,0.936666,0.000556556,-3.32817e-07,7.43188e-09,0.937222,0.000555913,-3.10521e-07,-2.71766e-08,0.937778,0.00055521,-3.92051e-07,4.167e-08,0.938333,0.000554551,-2.67041e-07,-2.02941e-08,0.938887,0.000553956,-3.27923e-07,-2.00984e-08,0.93944,0.00055324,-3.88218e-07,4.10828e-08,0.939993,0.000552587,-2.6497e-07,-2.50237e-08,0.940546,0.000551982,-3.40041e-07,-5.92583e-10,0.941097,0.0005513,-3.41819e-07,2.7394e-08,0.941648,0.000550698,-2.59637e-07,-4.93788e-08,0.942199,0.000550031,-4.07773e-07,5.09119e-08,0.942748,0.000549368,-2.55038e-07,-3.50595e-08,0.943297,0.000548753,-3.60216e-07,2.97214e-08,0.943846,0.000548122,-2.71052e-07,-2.42215e-08,0.944394,0.000547507,-3.43716e-07,7.55985e-09,0.944941,0.000546842,-3.21037e-07,-6.01796e-09,0.945487,0.000546182,-3.3909e-07,1.65119e-08,0.946033,0.000545553,-2.89555e-07,-4.2498e-10,0.946578,0.000544973,-2.9083e-07,-1.4812e-08,0.947123,0.000544347,-3.35266e-07,6.83068e-11,0.947667,0.000543676,-3.35061e-07,1.45388e-08,0.94821,0.00054305,-2.91444e-07,1.38123e-09,0.948753,0.000542471,-2.87301e-07,-2.00637e-08,0.949295,0.000541836,-3.47492e-07,1.92688e-08,0.949837,0.000541199,-2.89685e-07,2.59298e-09,0.950378,0.000540628,-2.81906e-07,-2.96407e-08,0.950918,0.000539975,-3.70829e-07,5.63652e-08,0.951458,0.000539402,-2.01733e-07,-7.66107e-08,0.951997,0.000538769,-4.31565e-07,7.12638e-08,0.952535,0.00053812,-2.17774e-07,-2.96305e-08,0.953073,0.000537595,-3.06665e-07,-1.23464e-08,0.95361,0.000536945,-3.43704e-07,1.94114e-08,0.954147,0.000536316,-2.8547e-07,-5.69451e-09,0.954683,0.000535728,-3.02554e-07,3.36666e-09,0.955219,0.000535133,-2.92454e-07,-7.77208e-09,0.955753,0.000534525,-3.1577e-07,2.77216e-08,0.956288,0.000533976,-2.32605e-07,-4.35097e-08,0.956821,0.00053338,-3.63134e-07,2.7108e-08,0.957354,0.000532735,-2.8181e-07,-5.31772e-09,0.957887,0.000532156,-2.97764e-07,-5.83718e-09,0.958419,0.000531543,-3.15275e-07,2.86664e-08,0.95895,0.000530998,-2.29276e-07,-4.9224e-08,0.959481,0.000530392,-3.76948e-07,4.90201e-08,0.960011,0.000529785,-2.29887e-07,-2.76471e-08,0.96054,0.000529243,-3.12829e-07,1.96385e-09,0.961069,0.000528623,-3.06937e-07,1.97917e-08,0.961598,0.000528068,-2.47562e-07,-2.15261e-08,0.962125,0.000527508,-3.1214e-07,6.70795e-09,0.962653,0.000526904,-2.92016e-07,-5.30573e-09,0.963179,0.000526304,-3.07934e-07,1.4515e-08,0.963705,0.000525732,-2.64389e-07,6.85048e-09,0.964231,0.000525224,-2.43837e-07,-4.19169e-08,0.964756,0.00052461,-3.69588e-07,4.1608e-08,0.96528,0.000523996,-2.44764e-07,-5.30598e-09,0.965804,0.000523491,-2.60682e-07,-2.03841e-08,0.966327,0.000522908,-3.21834e-07,2.72378e-08,0.966849,0.000522346,-2.40121e-07,-2.89625e-08,0.967371,0.000521779,-3.27008e-07,2.90075e-08,0.967893,0.000521212,-2.39986e-07,-2.74629e-08,0.968414,0.00052065,-3.22374e-07,2.12396e-08,0.968934,0.000520069,-2.58656e-07,2.10922e-09,0.969454,0.000519558,-2.52328e-07,-2.96765e-08,0.969973,0.000518964,-3.41357e-07,5.6992e-08,0.970492,0.000518452,-1.70382e-07,-7.90821e-08,0.97101,0.000517874,-4.07628e-07,8.05224e-08,0.971528,0.000517301,-1.66061e-07,-6.41937e-08,0.972045,0.000516776,-3.58642e-07,5.70429e-08,0.972561,0.00051623,-1.87513e-07,-4.47686e-08,0.973077,0.00051572,-3.21819e-07,2.82237e-09,0.973593,0.000515085,-3.13352e-07,3.34792e-08,0.974108,0.000514559,-2.12914e-07,-1.75298e-08,0.974622,0.000514081,-2.65503e-07,-2.29648e-08,0.975136,0.000513481,-3.34398e-07,4.97843e-08,0.975649,0.000512961,-1.85045e-07,-5.6963e-08,0.976162,0.00051242,-3.55934e-07,5.88585e-08,0.976674,0.000511885,-1.79359e-07,-5.92616e-08,0.977185,0.000511348,-3.57143e-07,5.89785e-08,0.977696,0.000510811,-1.80208e-07,-5.74433e-08,0.978207,0.000510278,-3.52538e-07,5.15854e-08,0.978717,0.000509728,-1.97781e-07,-2.9689e-08,0.979226,0.000509243,-2.86848e-07,7.56591e-09,0.979735,0.000508692,-2.64151e-07,-5.74649e-10,0.980244,0.000508162,-2.65875e-07,-5.26732e-09,0.980752,0.000507615,-2.81677e-07,2.16439e-08,0.981259,0.000507116,-2.16745e-07,-2.17037e-08,0.981766,0.000506618,-2.81856e-07,5.56636e-09,0.982272,0.000506071,-2.65157e-07,-5.61689e-10,0.982778,0.000505539,-2.66842e-07,-3.31963e-09,0.983283,0.000504995,-2.76801e-07,1.38402e-08,0.983788,0.000504483,-2.3528e-07,7.56339e-09,0.984292,0.000504035,-2.1259e-07,-4.40938e-08,0.984796,0.000503478,-3.44871e-07,4.96026e-08,0.985299,0.000502937,-1.96064e-07,-3.51071e-08,0.985802,0.000502439,-3.01385e-07,3.12212e-08,0.986304,0.00050193,-2.07721e-07,-3.0173e-08,0.986806,0.000501424,-2.9824e-07,2.9866e-08,0.987307,0.000500917,-2.08642e-07,-2.96865e-08,0.987808,0.000500411,-2.97702e-07,2.92753e-08,0.988308,0.000499903,-2.09876e-07,-2.78101e-08,0.988807,0.0004994,-2.93306e-07,2.23604e-08,0.989307,0.000498881,-2.26225e-07,-2.02681e-09,0.989805,0.000498422,-2.32305e-07,-1.42531e-08,0.990303,0.000497915,-2.75065e-07,-5.65232e-10,0.990801,0.000497363,-2.76761e-07,1.65141e-08,0.991298,0.000496859,-2.27218e-07,-5.88639e-09,0.991795,0.000496387,-2.44878e-07,7.0315e-09,0.992291,0.000495918,-2.23783e-07,-2.22396e-08,0.992787,0.000495404,-2.90502e-07,2.23224e-08,0.993282,0.00049489,-2.23535e-07,-7.44543e-09,0.993776,0.000494421,-2.45871e-07,7.45924e-09,0.994271,0.000493951,-2.23493e-07,-2.23915e-08,0.994764,0.000493437,-2.90668e-07,2.25021e-08,0.995257,0.000492923,-2.23161e-07,-8.01218e-09,0.99575,0.000492453,-2.47198e-07,9.54669e-09,0.996242,0.000491987,-2.18558e-07,-3.01746e-08,0.996734,0.000491459,-3.09082e-07,5.1547e-08,0.997225,0.000490996,-1.54441e-07,-5.68039e-08,0.997716,0.000490517,-3.24853e-07,5.64594e-08,0.998206,0.000490036,-1.55474e-07,-4.98245e-08,0.998696,0.000489576,-3.04948e-07,2.36292e-08,0.999186,0.000489037,-2.3406e-07,1.49121e-08,0.999674,0.000488613,-1.89324e-07,-2.3673e-08,1.00016,0.000488164,-2.60343e-07,2.01754e-08,1.00065,0.000487704,-1.99816e-07,-5.70288e-08,1.00114,0.000487133,-3.70903e-07,8.87303e-08,1.00162,0.000486657,-1.04712e-07,-5.94737e-08,1.00211,0.000486269,-2.83133e-07,2.99553e-08,1.0026,0.000485793,-1.93267e-07,-6.03474e-08,1.00308,0.000485225,-3.74309e-07,9.2225e-08,1.00357,0.000484754,-9.76345e-08,-7.0134e-08,1.00405,0.000484348,-3.08036e-07,6.91016e-08,1.00454,0.000483939,-1.00731e-07,-8.70633e-08,1.00502,0.000483476,-3.61921e-07,4.07328e-08,1.0055,0.000482875,-2.39723e-07,4.33413e-08,1.00599,0.000482525,-1.09699e-07,-9.48886e-08,1.00647,0.000482021,-3.94365e-07,9.77947e-08,1.00695,0.000481526,-1.00981e-07,-5.78713e-08,1.00743,0.00048115,-2.74595e-07,1.44814e-08,1.00791,0.000480645,-2.31151e-07,-5.42665e-11,1.00839,0.000480182,-2.31314e-07,-1.42643e-08,1.00887,0.000479677,-2.74106e-07,5.71115e-08,1.00935,0.0004793,-1.02772e-07,-9.49724e-08,1.00983,0.000478809,-3.87689e-07,8.43596e-08,1.01031,0.000478287,-1.3461e-07,-4.04755e-09,1.01079,0.000478006,-1.46753e-07,-6.81694e-08,1.01127,0.000477508,-3.51261e-07,3.83067e-08,1.01174,0.00047692,-2.36341e-07,3.41521e-08,1.01222,0.00047655,-1.33885e-07,-5.57058e-08,1.0127,0.000476115,-3.01002e-07,6.94616e-08,1.01317,0.000475721,-9.26174e-08,-1.02931e-07,1.01365,0.000475227,-4.01412e-07,1.03846e-07,1.01412,0.000474736,-8.98751e-08,-7.40321e-08,1.0146,0.000474334,-3.11971e-07,7.30735e-08,1.01507,0.00047393,-9.27508e-08,-9.90527e-08,1.01554,0.000473447,-3.89909e-07,8.47188e-08,1.01602,0.000472921,-1.35753e-07,-1.40381e-09,1.01649,0.000472645,-1.39964e-07,-7.91035e-08,1.01696,0.000472128,-3.77275e-07,7.93993e-08,1.01744,0.000471612,-1.39077e-07,-7.52607e-11,1.01791,0.000471334,-1.39302e-07,-7.90983e-08,1.01838,0.000470818,-3.76597e-07,7.80499e-08,1.01885,0.000470299,-1.42448e-07,5.31733e-09,1.01932,0.00047003,-1.26496e-07,-9.93193e-08,1.01979,0.000469479,-4.24453e-07,1.53541e-07,1.02026,0.00046909,3.617e-08,-1.57217e-07,1.02073,0.000468691,-4.35482e-07,1.177e-07,1.02119,0.000468173,-8.23808e-08,-7.51659e-08,1.02166,0.000467783,-3.07878e-07,6.37538e-08,1.02213,0.000467358,-1.16617e-07,-6.064e-08,1.0226,0.000466943,-2.98537e-07,5.9597e-08,1.02306,0.000466525,-1.19746e-07,-5.85386e-08,1.02353,0.00046611,-2.95362e-07,5.53482e-08,1.024,0.000465685,-1.29317e-07,-4.36449e-08,1.02446,0.000465296,-2.60252e-07,2.20268e-11,1.02493,0.000464775,-2.60186e-07,4.35568e-08,1.02539,0.000464386,-1.29516e-07,-5.50398e-08,1.02586,0.000463961,-2.94635e-07,5.73932e-08,1.02632,0.000463544,-1.22456e-07,-5.53236e-08,1.02678,0.000463133,-2.88426e-07,4.46921e-08,1.02725,0.000462691,-1.5435e-07,-4.23534e-09,1.02771,0.000462369,-1.67056e-07,-2.77507e-08,1.02817,0.000461952,-2.50308e-07,-3.97101e-09,1.02863,0.000461439,-2.62221e-07,4.36348e-08,1.02909,0.000461046,-1.31317e-07,-5.13589e-08,1.02955,0.000460629,-2.85394e-07,4.25913e-08,1.03001,0.000460186,-1.5762e-07,2.0285e-10,1.03047,0.000459871,-1.57011e-07,-4.34027e-08,1.03093,0.000459427,-2.87219e-07,5.41987e-08,1.03139,0.000459015,-1.24623e-07,-5.4183e-08,1.03185,0.000458604,-2.87172e-07,4.33239e-08,1.03231,0.000458159,-1.572e-07,9.65817e-11,1.03277,0.000457845,-1.56911e-07,-4.37103e-08,1.03323,0.0004574,-2.88041e-07,5.55351e-08,1.03368,0.000456991,-1.21436e-07,-5.9221e-08,1.03414,0.00045657,-2.99099e-07,6.21394e-08,1.0346,0.000456158,-1.1268e-07,-7.01275e-08,1.03505,0.000455723,-3.23063e-07,9.91614e-08,1.03551,0.000455374,-2.55788e-08,-8.80996e-08,1.03596,0.000455058,-2.89878e-07,1.48184e-08,1.03642,0.000454523,-2.45422e-07,2.88258e-08,1.03687,0.000454119,-1.58945e-07,-1.09125e-08,1.03733,0.000453768,-1.91682e-07,1.48241e-08,1.03778,0.000453429,-1.4721e-07,-4.83838e-08,1.03823,0.00045299,-2.92361e-07,5.95019e-08,1.03869,0.000452584,-1.13856e-07,-7.04146e-08,1.03914,0.000452145,-3.25099e-07,1.02947e-07,1.03959,0.000451803,-1.62583e-08,-1.02955e-07,1.04004,0.000451462,-3.25123e-07,7.04544e-08,1.04049,0.000451023,-1.1376e-07,-5.96534e-08,1.04094,0.000450616,-2.9272e-07,4.89499e-08,1.04139,0.000450178,-1.45871e-07,-1.69369e-08,1.04184,0.000449835,-1.96681e-07,1.87977e-08,1.04229,0.000449498,-1.40288e-07,-5.82539e-08,1.04274,0.000449043,-3.1505e-07,9.50087e-08,1.04319,0.000448698,-3.00238e-08,-8.33623e-08,1.04364,0.000448388,-2.80111e-07,2.20363e-11,1.04409,0.000447828,-2.80045e-07,8.32742e-08,1.04454,0.000447517,-3.02221e-08,-9.47002e-08,1.04498,0.000447173,-3.14323e-07,5.7108e-08,1.04543,0.000446716,-1.42999e-07,-1.45225e-08,1.04588,0.000446386,-1.86566e-07,9.82022e-10,1.04632,0.000446016,-1.8362e-07,1.05944e-08,1.04677,0.00044568,-1.51837e-07,-4.33597e-08,1.04721,0.000445247,-2.81916e-07,4.36352e-08,1.04766,0.000444814,-1.51011e-07,-1.19717e-08,1.0481,0.000444476,-1.86926e-07,4.25158e-09,1.04855,0.000444115,-1.74171e-07,-5.03461e-09,1.04899,0.000443751,-1.89275e-07,1.58868e-08,1.04944,0.00044342,-1.41614e-07,-5.85127e-08,1.04988,0.000442961,-3.17152e-07,9.89548e-08,1.05032,0.000442624,-2.0288e-08,-9.88878e-08,1.05076,0.000442287,-3.16951e-07,5.81779e-08,1.05121,0.000441827,-1.42418e-07,-1.46144e-08,1.05165,0.000441499,-1.86261e-07,2.79892e-10,1.05209,0.000441127,-1.85421e-07,1.34949e-08,1.05253,0.000440797,-1.44937e-07,-5.42594e-08,1.05297,0.000440344,-3.07715e-07,8.43335e-08,1.05341,0.000439982,-5.47146e-08,-4.46558e-08,1.05385,0.000439738,-1.88682e-07,-2.49193e-08,1.05429,0.000439286,-2.6344e-07,2.5124e-08,1.05473,0.000438835,-1.88068e-07,4.36328e-08,1.05517,0.000438589,-5.71699e-08,-8.04459e-08,1.05561,0.000438234,-2.98508e-07,3.97324e-08,1.05605,0.000437756,-1.79311e-07,4.07258e-08,1.05648,0.000437519,-5.71332e-08,-8.34263e-08,1.05692,0.000437155,-3.07412e-07,5.45608e-08,1.05736,0.000436704,-1.4373e-07,-1.56078e-08,1.05779,0.000436369,-1.90553e-07,7.87043e-09,1.05823,0.000436012,-1.66942e-07,-1.58739e-08,1.05867,0.00043563,-2.14563e-07,5.56251e-08,1.0591,0.000435368,-4.76881e-08,-8.74172e-08,1.05954,0.000435011,-3.0994e-07,5.56251e-08,1.05997,0.000434558,-1.43064e-07,-1.58739e-08,1.06041,0.000434224,-1.90686e-07,7.87042e-09,1.06084,0.000433866,-1.67075e-07,-1.56078e-08,1.06127,0.000433485,-2.13898e-07,5.45609e-08,1.06171,0.000433221,-5.02157e-08,-8.34263e-08,1.06214,0.00043287,-3.00495e-07,4.07258e-08,1.06257,0.000432391,-1.78317e-07,3.97325e-08,1.063,0.000432154,-5.91198e-08,-8.04464e-08,1.06344,0.000431794,-3.00459e-07,4.36347e-08,1.06387,0.000431324,-1.69555e-07,2.5117e-08,1.0643,0.000431061,-9.42041e-08,-2.48934e-08,1.06473,0.000430798,-1.68884e-07,-4.47527e-08,1.06516,0.000430326,-3.03142e-07,8.46951e-08,1.06559,0.000429973,-4.90573e-08,-5.56089e-08,1.06602,0.000429708,-2.15884e-07,1.85314e-08,1.06645,0.000429332,-1.6029e-07,-1.85166e-08,1.06688,0.000428956,-2.1584e-07,5.5535e-08,1.06731,0.000428691,-4.92347e-08,-8.44142e-08,1.06774,0.000428339,-3.02477e-07,4.37032e-08,1.06816,0.000427865,-1.71368e-07,2.88107e-08,1.06859,0.000427609,-8.49356e-08,-3.97367e-08,1.06902,0.00042732,-2.04146e-07,1.09267e-08,1.06945,0.000426945,-1.71365e-07,-3.97023e-09,1.06987,0.00042659,-1.83276e-07,4.9542e-09,1.0703,0.000426238,-1.68414e-07,-1.58466e-08,1.07073,0.000425854,-2.15953e-07,5.84321e-08,1.07115,0.000425597,-4.0657e-08,-9.86725e-08,1.07158,0.00042522,-3.36674e-07,9.78392e-08,1.072,0.00042484,-4.31568e-08,-5.42658e-08,1.07243,0.000424591,-2.05954e-07,1.45377e-11,1.07285,0.000424179,-2.0591e-07,5.42076e-08,1.07328,0.00042393,-4.32877e-08,-9.76357e-08,1.0737,0.00042355,-3.36195e-07,9.79165e-08,1.07412,0.000423172,-4.24451e-08,-5.56118e-08,1.07455,0.00042292,-2.09281e-07,5.32143e-09,1.07497,0.000422518,-1.93316e-07,3.43261e-08,1.07539,0.000422234,-9.0338e-08,-2.34165e-08,1.07581,0.000421983,-1.60588e-07,-5.98692e-08,1.07623,0.000421482,-3.40195e-07,1.43684e-07,1.07666,0.000421233,9.08574e-08,-1.5724e-07,1.07708,0.000420943,-3.80862e-07,1.27647e-07,1.0775,0.000420564,2.0791e-09,-1.1493e-07,1.07792,0.000420223,-3.4271e-07,9.36534e-08,1.07834,0.000419819,-6.17499e-08,-2.12653e-08,1.07876,0.000419632,-1.25546e-07,-8.59219e-09,1.07918,0.000419355,-1.51322e-07,-6.35752e-08,1.0796,0.000418861,-3.42048e-07,1.43684e-07,1.08002,0.000418608,8.90034e-08,-1.53532e-07,1.08043,0.000418326,-3.71593e-07,1.12817e-07,1.08085,0.000417921,-3.31414e-08,-5.93184e-08,1.08127,0.000417677,-2.11097e-07,5.24697e-09,1.08169,0.00041727,-1.95356e-07,3.83305e-08,1.0821,0.000416995,-8.03642e-08,-3.93597e-08,1.08252,0.000416716,-1.98443e-07,-1.0094e-10,1.08294,0.000416319,-1.98746e-07,3.97635e-08,1.08335,0.00041604,-7.94557e-08,-3.97437e-08,1.08377,0.000415762,-1.98687e-07,1.94215e-12,1.08419,0.000415365,-1.98681e-07,3.97359e-08,1.0846,0.000415087,-7.94732e-08,-3.97362e-08,1.08502,0.000414809,-1.98682e-07,-4.31063e-13,1.08543,0.000414411,-1.98683e-07,3.97379e-08,1.08584,0.000414133,-7.94694e-08,-3.97418e-08,1.08626,0.000413855,-1.98695e-07,2.00563e-11,1.08667,0.000413458,-1.98635e-07,3.96616e-08,1.08709,0.000413179,-7.965e-08,-3.9457e-08,1.0875,0.000412902,-1.98021e-07,-1.04281e-09,1.08791,0.000412502,-2.01149e-07,4.36282e-08,1.08832,0.000412231,-7.02648e-08,-5.42608e-08,1.08874,0.000411928,-2.33047e-07,5.42057e-08,1.08915,0.000411624,-7.04301e-08,-4.33527e-08,1.08956,0.000411353,-2.00488e-07,-4.07378e-12,1.08997,0.000410952,-2.005e-07,4.3369e-08,1.09038,0.000410681,-7.03934e-08,-5.42627e-08,1.09079,0.000410378,-2.33182e-07,5.44726e-08,1.0912,0.000410075,-6.97637e-08,-4.44186e-08,1.09161,0.000409802,-2.03019e-07,3.99235e-09,1.09202,0.000409408,-1.91042e-07,2.84491e-08,1.09243,0.000409111,-1.05695e-07,1.42043e-09,1.09284,0.000408904,-1.01434e-07,-3.41308e-08,1.09325,0.000408599,-2.03826e-07,1.58937e-08,1.09366,0.000408239,-1.56145e-07,-2.94438e-08,1.09406,0.000407838,-2.44476e-07,1.01881e-07,1.09447,0.000407655,6.11676e-08,-1.39663e-07,1.09488,0.000407358,-3.57822e-07,9.91432e-08,1.09529,0.00040694,-6.03921e-08,-1.84912e-08,1.09569,0.000406764,-1.15866e-07,-2.51785e-08,1.0961,0.000406457,-1.91401e-07,-4.03115e-12,1.09651,0.000406074,-1.91413e-07,2.51947e-08,1.09691,0.000405767,-1.15829e-07,1.84346e-08,1.09732,0.00040559,-6.05254e-08,-9.89332e-08,1.09772,0.000405172,-3.57325e-07,1.3888e-07,1.09813,0.000404874,5.93136e-08,-9.8957e-08,1.09853,0.000404696,-2.37557e-07,1.853e-08,1.09894,0.000404277,-1.81968e-07,2.48372e-08,1.09934,0.000403987,-1.07456e-07,1.33047e-09,1.09975,0.000403776,-1.03465e-07,-3.01591e-08,1.10015,0.000403479,-1.93942e-07,9.66054e-11,1.10055,0.000403091,-1.93652e-07,2.97727e-08,1.10096,0.000402793,-1.04334e-07,2.19273e-11,1.10136,0.000402585,-1.04268e-07,-2.98604e-08,1.10176,0.000402287,-1.93849e-07,2.10325e-10,1.10216,0.0004019,-1.93218e-07,2.90191e-08,1.10256,0.0004016,-1.06161e-07,2.92264e-09,1.10297,0.000401397,-9.73931e-08,-4.07096e-08,1.10337,0.00040108,-2.19522e-07,4.07067e-08,1.10377,0.000400763,-9.7402e-08,-2.90783e-09,1.10417,0.000400559,-1.06126e-07,-2.90754e-08,1.10457,0.00040026,-1.93352e-07,9.00021e-14,1.10497,0.000399873,-1.93351e-07,2.9075e-08,1.10537,0.000399574,-1.06126e-07,2.90902e-09,1.10577,0.00039937,-9.73992e-08,-4.07111e-08,1.10617,0.000399053,-2.19533e-07,4.07262e-08,1.10657,0.000398736,-9.73541e-08,-2.98424e-09,1.10697,0.000398533,-1.06307e-07,-2.87892e-08,1.10736,0.000398234,-1.92674e-07,-1.06824e-09,1.10776,0.000397845,-1.95879e-07,3.30622e-08,1.10816,0.000397552,-9.66926e-08,-1.19712e-08,1.10856,0.000397323,-1.32606e-07,1.48225e-08,1.10895,0.000397102,-8.81387e-08,-4.73187e-08,1.10935,0.000396784,-2.30095e-07,5.52429e-08,1.10975,0.00039649,-6.4366e-08,-5.44437e-08,1.11014,0.000396198,-2.27697e-07,4.33226e-08,1.11054,0.000395872,-9.77293e-08,3.62656e-10,1.11094,0.000395678,-9.66414e-08,-4.47732e-08,1.11133,0.00039535,-2.30961e-07,5.95208e-08,1.11173,0.000395067,-5.23985e-08,-7.41008e-08,1.11212,0.00039474,-2.74701e-07,1.17673e-07,1.11252,0.000394543,7.83181e-08,-1.58172e-07,1.11291,0.000394225,-3.96199e-07,1.57389e-07,1.1133,0.000393905,7.59679e-08,-1.13756e-07,1.1137,0.000393716,-2.653e-07,5.92165e-08,1.11409,0.000393363,-8.76507e-08,-3.90074e-09,1.11449,0.000393176,-9.93529e-08,-4.36136e-08,1.11488,0.000392846,-2.30194e-07,5.91457e-08,1.11527,0.000392563,-5.27564e-08,-7.376e-08,1.11566,0.000392237,-2.74037e-07,1.16685e-07,1.11606,0.000392039,7.60189e-08,-1.54562e-07,1.11645,0.000391727,-3.87667e-07,1.43935e-07,1.11684,0.000391384,4.4137e-08,-6.35487e-08,1.11723,0.000391281,-1.46509e-07,-8.94896e-09,1.11762,0.000390961,-1.73356e-07,-1.98647e-08,1.11801,0.000390555,-2.3295e-07,8.8408e-08,1.1184,0.000390354,3.22736e-08,-9.53486e-08,1.11879,0.000390133,-2.53772e-07,5.45677e-08,1.11918,0.000389789,-9.0069e-08,-3.71296e-09,1.11957,0.000389598,-1.01208e-07,-3.97159e-08,1.11996,0.000389276,-2.20355e-07,4.33671e-08,1.12035,0.000388966,-9.02542e-08,-1.45431e-08,1.12074,0.000388741,-1.33883e-07,1.48052e-08,1.12113,0.000388518,-8.94678e-08,-4.46778e-08,1.12152,0.000388205,-2.23501e-07,4.46966e-08,1.12191,0.000387892,-8.94114e-08,-1.48992e-08,1.12229,0.000387669,-1.34109e-07,1.49003e-08,1.12268,0.000387445,-8.94082e-08,-4.47019e-08,1.12307,0.000387132,-2.23514e-07,4.4698e-08,1.12345,0.000386819,-8.942e-08,-1.48806e-08,1.12384,0.000386596,-1.34062e-07,1.48245e-08,1.12423,0.000386372,-8.95885e-08,-4.44172e-08,1.12461,0.00038606,-2.2284e-07,4.36351e-08,1.125,0.000385745,-9.19348e-08,-1.09139e-08,1.12539,0.000385528,-1.24677e-07,2.05584e-11,1.12577,0.000385279,-1.24615e-07,1.08317e-08,1.12616,0.000385062,-9.21198e-08,-4.33473e-08,1.12654,0.000384748,-2.22162e-07,4.33481e-08,1.12693,0.000384434,-9.21174e-08,-1.08356e-08,1.12731,0.000384217,-1.24624e-07,-5.50907e-12,1.12769,0.000383968,-1.24641e-07,1.08577e-08,1.12808,0.000383751,-9.20679e-08,-4.34252e-08,1.12846,0.000383437,-2.22343e-07,4.36337e-08,1.12884,0.000383123,-9.14422e-08,-1.19005e-08,1.12923,0.000382904,-1.27144e-07,3.96813e-09,1.12961,0.000382662,-1.15239e-07,-3.97207e-09,1.12999,0.000382419,-1.27155e-07,1.19201e-08,1.13038,0.000382201,-9.1395e-08,-4.37085e-08,1.13076,0.000381887,-2.2252e-07,4.37046e-08,1.13114,0.000381573,-9.14068e-08,-1.19005e-08,1.13152,0.000381355,-1.27108e-07,3.89734e-09,1.1319,0.000381112,-1.15416e-07,-3.68887e-09,1.13228,0.00038087,-1.26483e-07,1.08582e-08,1.13266,0.00038065,-9.39083e-08,-3.97438e-08,1.13304,0.000380343,-2.1314e-07,2.89076e-08,1.13342,0.000380003,-1.26417e-07,4.33225e-08,1.1338,0.00037988,3.55072e-09,-8.29883e-08,1.13418,0.000379638,-2.45414e-07,5.0212e-08,1.13456,0.000379298,-9.47781e-08,1.34964e-09,1.13494,0.000379113,-9.07292e-08,-5.56105e-08,1.13532,0.000378764,-2.57561e-07,1.01883e-07,1.1357,0.000378555,4.80889e-08,-1.13504e-07,1.13608,0.000378311,-2.92423e-07,1.13713e-07,1.13646,0.000378067,4.87176e-08,-1.02931e-07,1.13683,0.000377856,-2.60076e-07,5.95923e-08,1.13721,0.000377514,-8.12988e-08,-1.62288e-08,1.13759,0.000377303,-1.29985e-07,5.32278e-09,1.13797,0.000377059,-1.14017e-07,-5.06237e-09,1.13834,0.000376816,-1.29204e-07,1.49267e-08,1.13872,0.000376602,-8.44237e-08,-5.46444e-08,1.1391,0.000376269,-2.48357e-07,8.44417e-08,1.13947,0.000376026,4.96815e-09,-4.47039e-08,1.13985,0.000375902,-1.29143e-07,-2.48355e-08,1.14023,0.000375569,-2.0365e-07,2.48368e-08,1.1406,0.000375236,-1.2914e-07,4.46977e-08,1.14098,0.000375112,4.95341e-09,-8.44184e-08,1.14135,0.000374869,-2.48302e-07,5.45572e-08,1.14173,0.000374536,-8.463e-08,-1.46013e-08,1.1421,0.000374323,-1.28434e-07,3.8478e-09,1.14247,0.000374077,-1.1689e-07,-7.89941e-10,1.14285,0.000373841,-1.1926e-07,-6.88042e-10,1.14322,0.0003736,-1.21324e-07,3.54213e-09,1.1436,0.000373368,-1.10698e-07,-1.34805e-08,1.14397,0.000373107,-1.51139e-07,5.03798e-08,1.14434,0.000372767,0.,0.};
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                B = splineInterpolate(B * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                G = splineInterpolate(G * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                R = splineInterpolate(R * GAMMA_TAB_SIZE, c_sRGBGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:            float L = splineInterpolate(Y * (LAB_CBRT_TAB_SIZE / 1.5f), c_LabCbrtTab, LAB_CBRT_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                B = splineInterpolate(B * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                G = splineInterpolate(G * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/detail/color_cvt.hpp:                R = splineInterpolate(R * GAMMA_TAB_SIZE, c_sRGBInvGammaTab, GAMMA_TAB_SIZE);
modules/cudev/include/opencv2/cudev/functional/tuple_adapter.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/functional/tuple_adapter.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/functional/tuple_adapter.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/functional/tuple_adapter.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/functional/tuple_adapter.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:// RGB to Lab
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:#define CV_CUDEV_RGB2Lab_INST(name, scn, dcn, sRGB, blueIdx) \
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:    template <typename SrcDepth> struct name ## _func : cv::cudev::color_cvt_detail::RGB2Lab<SrcDepth, scn, dcn, sRGB, blueIdx> \
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(RGB_to_Lab, 3, 3, true, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(RGBA_to_Lab, 4, 3, true, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(RGB_to_Lab4, 3, 4, true, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(RGBA_to_Lab4, 4, 4, true, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(BGR_to_Lab, 3, 3, true, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(BGRA_to_Lab, 4, 3, true, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(BGR_to_Lab4, 3, 4, true, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(BGRA_to_Lab4, 4, 4, true, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(LRGB_to_Lab, 3, 3, false, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(LRGBA_to_Lab, 4, 3, false, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(LRGB_to_Lab4, 3, 4, false, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(LRGBA_to_Lab4, 4, 4, false, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(LBGR_to_Lab, 3, 3, false, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(LBGRA_to_Lab, 4, 3, false, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(LBGR_to_Lab4, 3, 4, false, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_RGB2Lab_INST(LBGRA_to_Lab4, 4, 4, false, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:#undef CV_CUDEV_RGB2Lab_INST
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:// Lab to RGB
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:#define CV_CUDEV_Lab2RGB_INST(name, scn, dcn, sRGB, blueIdx) \
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:    template <typename SrcDepth> struct name ## _func : cv::cudev::color_cvt_detail::Lab2RGB<SrcDepth, scn, dcn, sRGB, blueIdx> \
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab_to_RGB, 3, 3, true, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab4_to_RGB, 4, 3, true, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab_to_RGBA, 3, 4, true, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab4_to_RGBA, 4, 4, true, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab_to_BGR, 3, 3, true, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab4_to_BGR, 4, 3, true, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab_to_BGRA, 3, 4, true, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab4_to_BGRA, 4, 4, true, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab_to_LRGB, 3, 3, false, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab4_to_LRGB, 4, 3, false, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab_to_LRGBA, 3, 4, false, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab4_to_LRGBA, 4, 4, false, 2)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab_to_LBGR, 3, 3, false, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab4_to_LBGR, 4, 3, false, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab_to_LBGRA, 3, 4, false, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:CV_CUDEV_Lab2RGB_INST(Lab4_to_LBGRA, 4, 4, false, 0)
modules/cudev/include/opencv2/cudev/functional/color_cvt.hpp:#undef CV_CUDEV_Lab2RGB_INST
modules/cudev/include/opencv2/cudev/grid/split_merge.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/split_merge.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/split_merge.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/split_merge.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/split_merge.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/integral.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/integral.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/integral.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/integral.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/integral.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/reduce_to_vec.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/reduce_to_vec.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/reduce_to_vec.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/reduce_to_vec.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/reduce_to_vec.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/pyr_down.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/pyr_down.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/pyr_down.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/pyr_down.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/pyr_down.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/split_merge.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/split_merge.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/split_merge.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/split_merge.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/split_merge.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp:             In the current code, each register above is actually representing
modules/cudev/include/opencv2/cudev/grid/detail/integral.hpp:        // continuning from the above example,
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_column.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_column.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_column.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_column.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_column.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/transform.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/transform.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/transform.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/transform.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/transform.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/copy.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/copy.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/copy.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/copy.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/copy.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_row.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_row.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_row.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_row.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/reduce_to_row.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/minmaxloc.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/minmaxloc.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/minmaxloc.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/minmaxloc.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/minmaxloc.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/pyr_up.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/pyr_up.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/pyr_up.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/pyr_up.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/pyr_up.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/pyr_up.hpp:            srcx = ::abs(srcx);
modules/cudev/include/opencv2/cudev/grid/detail/pyr_up.hpp:            srcy = ::abs(srcy);
modules/cudev/include/opencv2/cudev/grid/detail/reduce.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/reduce.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/reduce.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/reduce.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/reduce.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/histogram.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/histogram.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/histogram.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/histogram.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/histogram.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/detail/transpose.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/transpose.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/detail/transpose.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/detail/transpose.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/detail/transpose.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/pyramids.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/pyramids.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/pyramids.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/pyramids.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/pyramids.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/transform.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/transform.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/transform.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/transform.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/transform.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/copy.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/copy.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/copy.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/copy.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/copy.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/reduce.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/reduce.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/reduce.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/reduce.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/reduce.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/histogram.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/histogram.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/histogram.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/histogram.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/histogram.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/grid/transpose.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/transpose.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/grid/transpose.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/grid/transpose.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/grid/transpose.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/mask.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/mask.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/mask.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/mask.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/mask.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:template <class SrcPtr, class TablePtr> struct LutPtr
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:    typedef typename PtrTraits<TablePtr>::value_type value_type;
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:    TablePtr tbl;
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:    __device__ __forceinline__ typename PtrTraits<TablePtr>::value_type operator ()(typename PtrTraits<SrcPtr>::index_type y, typename PtrTraits<SrcPtr>::index_type x) const
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:        typedef typename PtrTraits<TablePtr>::index_type tbl_index_type;
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:template <class SrcPtr, class TablePtr> struct LutPtrSz : LutPtr<SrcPtr, TablePtr>
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:template <class SrcPtr, class TablePtr>
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:__host__ LutPtrSz<typename PtrTraits<SrcPtr>::ptr_type, typename PtrTraits<TablePtr>::ptr_type> lutPtr(const SrcPtr& src, const TablePtr& tbl)
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:    LutPtrSz<typename PtrTraits<SrcPtr>::ptr_type, typename PtrTraits<TablePtr>::ptr_type> ptr;
modules/cudev/include/opencv2/cudev/ptr2d/lut.hpp:template <class SrcPtr, class TablePtr> struct PtrTraits< LutPtrSz<SrcPtr, TablePtr> > : PtrTraitsBase<LutPtrSz<SrcPtr, TablePtr>, LutPtr<SrcPtr, TablePtr> >
modules/cudev/include/opencv2/cudev/ptr2d/warping.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/warping.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/warping.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/warping.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/warping.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/deriv.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/deriv.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/deriv.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/deriv.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/deriv.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/extrapolation.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/extrapolation.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/extrapolation.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/extrapolation.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/extrapolation.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/extrapolation.hpp:        return ::abs(i) % len;
modules/cudev/include/opencv2/cudev/ptr2d/extrapolation.hpp:        return ::abs(last_ind - ::abs(last_ind - i)) % len;
modules/cudev/include/opencv2/cudev/ptr2d/extrapolation.hpp:        return (::abs(i) - (i < 0)) % len;
modules/cudev/include/opencv2/cudev/ptr2d/extrapolation.hpp:        return (last_ind - ::abs(last_ind - i) + (i > last_ind));
modules/cudev/include/opencv2/cudev/ptr2d/gpumat.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/gpumat.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/gpumat.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/gpumat.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/gpumat.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/remap.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/remap.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/remap.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/remap.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/remap.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/glob.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/glob.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/glob.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/glob.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/glob.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/resize.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/resize.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/resize.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/resize.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/resize.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/detail/gpumat.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/detail/gpumat.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/detail/gpumat.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/detail/gpumat.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/detail/gpumat.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/transform.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/transform.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/transform.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/transform.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/transform.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/zip.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/zip.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/zip.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/zip.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/zip.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/constant.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/constant.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/constant.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/constant.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/constant.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/texture.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/texture.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/texture.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/texture.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/texture.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/traits.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/traits.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/traits.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/traits.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/traits.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/interpolation.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/interpolation.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/ptr2d/interpolation.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/ptr2d/interpolation.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/ptr2d/interpolation.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/ptr2d/interpolation.hpp:        float x = ::fabsf(x_);
modules/cudev/include/opencv2/cudev/expr/expr.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/expr.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/expr.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/expr.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/expr.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/expr/binary_func.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/binary_func.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/binary_func.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/binary_func.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/binary_func.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/expr/binary_func.hpp:CV_CUDEV_EXPR_BINARY_FUNC(absdiff)
modules/cudev/include/opencv2/cudev/expr/per_element_func.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/per_element_func.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/per_element_func.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/per_element_func.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/per_element_func.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/expr/per_element_func.hpp:template <class SrcPtr, class TablePtr>
modules/cudev/include/opencv2/cudev/expr/per_element_func.hpp:__host__ Expr<LutPtrSz<typename PtrTraits<SrcPtr>::ptr_type, typename PtrTraits<TablePtr>::ptr_type> >
modules/cudev/include/opencv2/cudev/expr/per_element_func.hpp:lut_(const SrcPtr& src, const TablePtr& tbl)
modules/cudev/include/opencv2/cudev/expr/warping.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/warping.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/warping.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/warping.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/warping.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/expr/deriv.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/deriv.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/deriv.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/deriv.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/deriv.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/expr/reduction.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/reduction.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/reduction.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/reduction.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/reduction.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/expr/unary_op.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/unary_op.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/unary_op.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/unary_op.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/unary_op.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/expr/unary_func.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/unary_func.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/unary_func.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/unary_func.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/unary_func.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/expr/unary_func.hpp:CV_CUDEV_EXPR_UNARY_FUNC(abs)
modules/cudev/include/opencv2/cudev/expr/color.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/color.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/color.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/color.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/color.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(RGB_to_Lab)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(RGBA_to_Lab)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(RGB_to_Lab4)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(RGBA_to_Lab4)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(BGR_to_Lab)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(BGRA_to_Lab)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(BGR_to_Lab4)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(BGRA_to_Lab4)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(LRGB_to_Lab)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(LRGBA_to_Lab)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(LRGB_to_Lab4)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(LRGBA_to_Lab4)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(LBGR_to_Lab)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(LBGRA_to_Lab)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(LBGR_to_Lab4)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(LBGRA_to_Lab4)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab_to_RGB)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab4_to_RGB)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab_to_RGBA)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab4_to_RGBA)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab_to_BGR)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab4_to_BGR)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab_to_BGRA)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab4_to_BGRA)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab_to_LRGB)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab4_to_LRGB)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab_to_LRGBA)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab4_to_LRGBA)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab_to_LBGR)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab4_to_LBGR)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab_to_LBGRA)
modules/cudev/include/opencv2/cudev/expr/color.hpp:CV_CUDEV_EXPR_CVTCOLOR_INST(Lab4_to_LBGRA)
modules/cudev/include/opencv2/cudev/expr/binary_op.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/binary_op.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudev/include/opencv2/cudev/expr/binary_op.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudev/include/opencv2/cudev/expr/binary_op.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudev/include/opencv2/cudev/expr/binary_op.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/doc/ml_intro.markdown:    classification problem; in this case the responses are often called "labels"). Some algorithms,
modules/ml/doc/ml_intro.markdown:    most noticeably Neural networks, can handle not only scalar, but also multi-dimensional or
modules/ml/doc/ml_intro.markdown:not entirely available, so there is need to make abstraction for this concept. In OpenCV ml there is
modules/ml/doc/ml_intro.markdown:class label; multiple leaves may have the same label. For regression, a constant is also assigned to
modules/ml/doc/ml_intro.markdown:child node as the next observed node) or to the right based on the value of a certain variable whose
modules/ml/doc/ml_intro.markdown:index is stored in the observed node. The following variables are possible:
modules/ml/doc/ml_intro.markdown:-   __Ordered variables.__ The variable value is compared with a threshold that is also stored in
modules/ml/doc/ml_intro.markdown:-   __Categorical variables.__ A discrete variable value is tested to see whether it belongs to a
modules/ml/doc/ml_intro.markdown:    certain subset of values (also stored in the node) from a limited set of values the variable
modules/ml/doc/ml_intro.markdown:So, in each node, a pair of entities (variable_index , `decision_rule (threshold/subset)` ) is used.
modules/ml/doc/ml_intro.markdown:This pair is called a _split_ (split on the variable variable_index ). Once a leaf node is reached,
modules/ml/doc/ml_intro.markdown:node may also be split to one or more other variables with nearly the same results.
modules/ml/doc/ml_intro.markdown:-   The best found split does not give any noticeable improvement compared to a random choice.
modules/ml/doc/ml_intro.markdown:Variable Importance {#ml_intro_trees_var}
modules/ml/doc/ml_intro.markdown:ability to compute the importance (relative decisive power) of each variable. For example, in a spam
modules/ml/doc/ml_intro.markdown:filter that uses a set of words occurred in the message as a feature vector, the variable importance
modules/ml/doc/ml_intro.markdown:size reasonable.
modules/ml/doc/ml_intro.markdown:Importance of each variable is computed over all the splits on this variable in the tree, primary
modules/ml/doc/ml_intro.markdown:and surrogate ones. Thus, to compute variable importance correctly, the surrogate splits must be
modules/ml/doc/ml_intro.markdown:enabled in the training parameters, even if there is no missing data.
modules/ml/doc/ml_intro.markdown:Different variants of boosting are known as Discrete Adaboost, Real AdaBoost, LogitBoost, and Gentle
modules/ml/doc/ml_intro.markdown:classifies it with every tree in the forest, and outputs the class label that received the majority
modules/ml/doc/ml_intro.markdown:with replacement. That is, some vectors will occur more than once and some will be absent. At each
modules/ml/doc/ml_intro.markdown:node of each trained tree, not all the variables are used to find the best split, but a random
modules/ml/doc/ml_intro.markdown:nodes and all the trees. It is a training parameter set to \f$\sqrt{number\_of\_variables}\f$ by
modules/ml/doc/ml_intro.markdown:about N/3 . The classification error is estimated by using this oob-data as follows:
modules/ml/doc/ml_intro.markdown:The Expectation Maximization(EM) algorithm estimates the parameters of the multivariate probability
modules/ml/doc/ml_intro.markdown:(Expectation step or E-step), you find a probability \f$p_{i,k}\f$ (denoted \f$\alpha_{i,k}\f$ in
modules/ml/doc/ml_intro.markdown:the formula below) of sample i to belong to mixture k using the currently available mixture
modules/ml/doc/ml_intro.markdown:the computed probabilities:
modules/ml/doc/ml_intro.markdown:the corresponding output vectors, and iteratively adjusts the weights to enable the network to give
modules/ml/doc/ml_intro.markdown:networks are trained much longer than the smaller ones, so it is reasonable to pre-process the data,
modules/ml/doc/ml_intro.markdown:Another MLP feature is an inability to handle categorical data as is. However, there is a
modules/ml/doc/ml_intro.markdown:layer but speeds up the training algorithm convergence and at the same time enables "fuzzy" values
modules/ml/doc/ml_intro.markdown:of such variables, that is, a tuple of probabilities instead of a fixed value.
modules/ml/doc/ml_intro.markdown:ML implements logistic regression, which is a probabilistic classification technique. Logistic
modules/ml/doc/ml_intro.markdown:-   In order to compensate for overfitting regularization is performed, which can be enabled with
Binary file modules/ml/doc/pics/SVM_Comparison.png matches
modules/ml/test/test_mltests2.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/test/test_mltests2.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/test/test_mltests2.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/test/test_mltests2.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/test/test_mltests2.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/test/test_mltests2.cpp:        CV_DbgAssert( fabs(responses.at<float>(sidx) - r) < FLT_EPSILON );
modules/ml/test/test_mltests2.cpp:float ann_calc_error( Ptr<StatModel> ann, Ptr<TrainData> _data, map<int, int>& cls_map, int type, vector<float> *resp_labels )
modules/ml/test/test_mltests2.cpp:        if( resp_labels )
modules/ml/test/test_mltests2.cpp:            resp_labels->resize( sample_count );
modules/ml/test/test_mltests2.cpp:            pred_resp = &((*resp_labels)[0]);
modules/ml/test/test_mltests2.cpp:        CV_DbgAssert( fabs(responses.at<float>(si) - r) < FLT_EPSILON );
modules/ml/test/test_mltests2.cpp:                      CV_BIG_INT(0x0513cb37abcd1234),
modules/ml/test/test_gbttest.cpp:                      CV_BIG_INT(0x0513cb37abcd1234),
modules/ml/test/test_gbttest.cpp:    if ( abs( current_error - mean[test_num]) > 6*sigma[test_num] )
modules/ml/test/test_gbttest.cpp:                    "abs(%f/*curEr*/ - %f/*mean*/ > %f/*6*sigma*/",
modules/ml/test/test_gbttest.cpp:        if( fabs(*it1 - *it2) > FLT_EPSILON )
modules/ml/test/test_save_load.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/test/test_save_load.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/test/test_save_load.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/test/test_save_load.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/test/test_save_load.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/test/test_save_load.cpp:            if( fabs(*it1 - *it2) > FLT_EPSILON )
modules/ml/test/test_save_load.cpp:TEST(ML_DTree, legacy_load) { CV_LegacyTest test(CV_DTREE, "_abalone.xml;_mushroom.xml"); test.safe_run(); }
modules/ml/test/test_svmtrainauto.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/test/test_svmtrainauto.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/test/test_svmtrainauto.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/test/test_svmtrainauto.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/test/test_svmtrainauto.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/test/test_svmtrainauto.cpp:    if ( fabs( result0 - 0 ) > 0.001 || fabs( result1 - 1 ) > 0.001 )
modules/ml/test/test_svmtrainauto.cpp:    int labels[4] = {1, -1, -1, -1};
modules/ml/test/test_svmtrainauto.cpp:    Mat labelsMat(4, 1, CV_32SC1, labels);
modules/ml/test/test_svmtrainauto.cpp:    svm->train(trainingDataMat, cv::ml::ROW_SAMPLE, labelsMat);
modules/ml/test/test_svmtrainauto.cpp:    svm->train(trainingDataMat, cv::ml::ROW_SAMPLE, labelsMat);
modules/ml/test/test_svmtrainauto.cpp:    CV_Assert(sv.rows == 0);    // inapplicable for non-linear SVMs
modules/ml/test/test_mltests.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/test/test_mltests.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/test/test_mltests.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/test/test_mltests.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/test/test_mltests.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/test/test_mltests.cpp:                                testCaseIdx, curErr, mean, abs( curErr - mean), coeff, coeff*sigma );
modules/ml/test/test_mltests.cpp:        if ( abs( curErr - mean) > coeff*sigma )
modules/ml/test/test_mltests.cpp:            ts->printf( cvtest::TS::LOG, "abs(%f - %f) > %f - OUT OF RANGE!\n", curErr, mean, coeff*sigma, coeff );
modules/ml/test/test_mltests.cpp:        ts->printf( cvtest::TS::LOG, "validation info is not suitable" );
modules/ml/test/test_emknearestkmeans.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/test/test_emknearestkmeans.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/test/test_emknearestkmeans.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/test/test_emknearestkmeans.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/test/test_emknearestkmeans.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/test/test_emknearestkmeans.cpp:void generateData( Mat& data, Mat& labels, const vector<int>& sizes, const Mat& _means, const vector<Mat>& covs, int dataType, int labelType )
modules/ml/test/test_emknearestkmeans.cpp:    labels.create( data.rows, 1, labelType );
modules/ml/test/test_emknearestkmeans.cpp:            if( labelType == CV_32FC1 )
modules/ml/test/test_emknearestkmeans.cpp:                labels.at<float>(p, 0) = (float)l;
modules/ml/test/test_emknearestkmeans.cpp:            else if( labelType == CV_32SC1 )
modules/ml/test/test_emknearestkmeans.cpp:                labels.at<int>(p, 0) = l;
modules/ml/test/test_emknearestkmeans.cpp:bool getLabelsMap( const Mat& labels, const vector<int>& sizes, vector<int>& labelsMap, bool checkClusterUniq=true )
modules/ml/test/test_emknearestkmeans.cpp:    assert( !labels.empty() );
modules/ml/test/test_emknearestkmeans.cpp:    assert( labels.total() == total && (labels.cols == 1 || labels.rows == 1));
modules/ml/test/test_emknearestkmeans.cpp:    assert( labels.type() == CV_32SC1 || labels.type() == CV_32FC1 );
modules/ml/test/test_emknearestkmeans.cpp:    bool isFlt = labels.type() == CV_32FC1;
modules/ml/test/test_emknearestkmeans.cpp:    labelsMap.resize(nclusters);
modules/ml/test/test_emknearestkmeans.cpp:            int lbl = isFlt ? (int)labels.at<float>(i) : labels.at<int>(i);
modules/ml/test/test_emknearestkmeans.cpp:        labelsMap[clusterIndex] = cls;
modules/ml/test/test_emknearestkmeans.cpp:bool calcErr( const Mat& labels, const Mat& origLabels, const vector<int>& sizes, float& err, bool labelsEquivalent = true, bool checkClusterUniq=true )
modules/ml/test/test_emknearestkmeans.cpp:    CV_Assert( !labels.empty() && !origLabels.empty() );
modules/ml/test/test_emknearestkmeans.cpp:    CV_Assert( labels.rows == 1 || labels.cols == 1 );
modules/ml/test/test_emknearestkmeans.cpp:    CV_Assert( origLabels.rows == 1 || origLabels.cols == 1 );
modules/ml/test/test_emknearestkmeans.cpp:    CV_Assert( labels.total() == origLabels.total() );
modules/ml/test/test_emknearestkmeans.cpp:    CV_Assert( labels.type() == CV_32SC1 || labels.type() == CV_32FC1 );
modules/ml/test/test_emknearestkmeans.cpp:    CV_Assert( origLabels.type() == labels.type() );
modules/ml/test/test_emknearestkmeans.cpp:    vector<int> labelsMap;
modules/ml/test/test_emknearestkmeans.cpp:    bool isFlt = labels.type() == CV_32FC1;
modules/ml/test/test_emknearestkmeans.cpp:    if( !labelsEquivalent )
modules/ml/test/test_emknearestkmeans.cpp:        if( !getLabelsMap( labels, sizes, labelsMap, checkClusterUniq ) )
modules/ml/test/test_emknearestkmeans.cpp:        for( int i = 0; i < labels.rows; i++ )
modules/ml/test/test_emknearestkmeans.cpp:                err += labels.at<float>(i) != labelsMap[(int)origLabels.at<float>(i)] ? 1.f : 0.f;
modules/ml/test/test_emknearestkmeans.cpp:                err += labels.at<int>(i) != labelsMap[origLabels.at<int>(i)] ? 1.f : 0.f;
modules/ml/test/test_emknearestkmeans.cpp:        for( int i = 0; i < labels.rows; i++ )
modules/ml/test/test_emknearestkmeans.cpp:                err += labels.at<float>(i) != origLabels.at<float>(i) ? 1.f : 0.f;
modules/ml/test/test_emknearestkmeans.cpp:                err += labels.at<int>(i) != origLabels.at<int>(i) ? 1.f : 0.f;
modules/ml/test/test_emknearestkmeans.cpp:    err /= (float)labels.rows;
modules/ml/test/test_emknearestkmeans.cpp:    Mat data( pointsCount, 2, CV_32FC1 ), labels;
modules/ml/test/test_emknearestkmeans.cpp:    generateData( data, labels, sizes, means, covs, CV_32FC1, CV_32SC1 );
modules/ml/test/test_emknearestkmeans.cpp:    Mat bestLabels;
modules/ml/test/test_emknearestkmeans.cpp:    kmeans( data, 3, bestLabels, TermCriteria( TermCriteria::COUNT, iters, 0.0), 0, KMEANS_PP_CENTERS, noArray() );
modules/ml/test/test_emknearestkmeans.cpp:    if( !calcErr( bestLabels, labels, sizes, err , false ) )
modules/ml/test/test_emknearestkmeans.cpp:        ts->printf( cvtest::TS::LOG, "Bad output labels if flag==KMEANS_PP_CENTERS.\n" );
modules/ml/test/test_emknearestkmeans.cpp:    kmeans( data, 3, bestLabels, TermCriteria( TermCriteria::COUNT, iters, 0.0), 0, KMEANS_RANDOM_CENTERS, noArray() );
modules/ml/test/test_emknearestkmeans.cpp:    if( !calcErr( bestLabels, labels, sizes, err, false ) )
modules/ml/test/test_emknearestkmeans.cpp:        ts->printf( cvtest::TS::LOG, "Bad output labels if flag==KMEANS_RANDOM_CENTERS.\n" );
modules/ml/test/test_emknearestkmeans.cpp:    labels.copyTo( bestLabels );
modules/ml/test/test_emknearestkmeans.cpp:        bestLabels.at<int>( rng.next() % pointsCount, 0 ) = rng.next() % 3;
modules/ml/test/test_emknearestkmeans.cpp:    kmeans( data, 3, bestLabels, TermCriteria( TermCriteria::COUNT, iters, 0.0), 0, KMEANS_USE_INITIAL_LABELS, noArray() );
modules/ml/test/test_emknearestkmeans.cpp:    if( !calcErr( bestLabels, labels, sizes, err, false ) )
modules/ml/test/test_emknearestkmeans.cpp:        ts->printf( cvtest::TS::LOG, "Bad output labels if flag==KMEANS_USE_INITIAL_LABELS.\n" );
modules/ml/test/test_emknearestkmeans.cpp:    Mat trainData( pointsCount, 2, CV_32FC1 ), trainLabels;
modules/ml/test/test_emknearestkmeans.cpp:    generateData( trainData, trainLabels, sizes, means, covs, CV_32FC1, CV_32FC1 );
modules/ml/test/test_emknearestkmeans.cpp:    Mat testData( pointsCount, 2, CV_32FC1 ), testLabels, bestLabels;
modules/ml/test/test_emknearestkmeans.cpp:    generateData( testData, testLabels, sizes, means, covs, CV_32FC1, CV_32FC1 );
modules/ml/test/test_emknearestkmeans.cpp:    knearest->train(trainData, ml::ROW_SAMPLE, trainLabels);
modules/ml/test/test_emknearestkmeans.cpp:    knearest->findNearest(testData, 4, bestLabels);
modules/ml/test/test_emknearestkmeans.cpp:    if( !calcErr( bestLabels, testLabels, sizes, err, true ) )
modules/ml/test/test_emknearestkmeans.cpp:        ts->printf( cvtest::TS::LOG, "Bad output labels.\n" );
modules/ml/test/test_emknearestkmeans.cpp:    knearestKdt->train(trainData, ml::ROW_SAMPLE, trainLabels);
modules/ml/test/test_emknearestkmeans.cpp:    knearestKdt->findNearest(testData, 4, bestLabels);
modules/ml/test/test_emknearestkmeans.cpp:    if( !calcErr( bestLabels, testLabels, sizes, err, true ) )
modules/ml/test/test_emknearestkmeans.cpp:        ts->printf( cvtest::TS::LOG, "Bad output labels.\n" );
modules/ml/test/test_emknearestkmeans.cpp:                  const cv::Mat& trainData, const cv::Mat& trainLabels,
modules/ml/test/test_emknearestkmeans.cpp:                  const cv::Mat& testData, const cv::Mat& testLabels,
modules/ml/test/test_emknearestkmeans.cpp:                        const cv::Mat& trainData, const cv::Mat& trainLabels,
modules/ml/test/test_emknearestkmeans.cpp:                        const cv::Mat& testData, const cv::Mat& testLabels,
modules/ml/test/test_emknearestkmeans.cpp:    cv::Mat labels;
modules/ml/test/test_emknearestkmeans.cpp:        em->trainEM( trainData, noArray(), labels, noArray() );
modules/ml/test/test_emknearestkmeans.cpp:                    *params.weights, noArray(), labels, noArray() );
modules/ml/test/test_emknearestkmeans.cpp:                    noArray(), labels, noArray() );
modules/ml/test/test_emknearestkmeans.cpp:    if( !calcErr( labels, trainLabels, sizes, err , false, false ) )
modules/ml/test/test_emknearestkmeans.cpp:        ts->printf( cvtest::TS::LOG, "Case index %i : Bad output labels.\n", caseIndex );
modules/ml/test/test_emknearestkmeans.cpp:    labels.create( testData.rows, 1, CV_32SC1 );
modules/ml/test/test_emknearestkmeans.cpp:        labels.at<int>(i) = static_cast<int>(em->predict2( sample, probs )[1]);
modules/ml/test/test_emknearestkmeans.cpp:    if( !calcErr( labels, testLabels, sizes, err, false, false ) )
modules/ml/test/test_emknearestkmeans.cpp:        ts->printf( cvtest::TS::LOG, "Case index %i : Bad output labels.\n", caseIndex );
modules/ml/test/test_emknearestkmeans.cpp:    Mat trainData( pointsCount, 2, CV_64FC1 ), trainLabels;
modules/ml/test/test_emknearestkmeans.cpp:    generateData( trainData, trainLabels, sizes, means, covs, CV_64FC1, CV_32SC1 );
modules/ml/test/test_emknearestkmeans.cpp:    Mat testData( pointsCount, 2, CV_64FC1 ), testLabels;
modules/ml/test/test_emknearestkmeans.cpp:    generateData( testData, testLabels, sizes, means, covs, CV_64FC1, CV_32SC1 );
modules/ml/test/test_emknearestkmeans.cpp:        int currCode = runCase(caseIndex++, params, trainData, trainLabels, testData, testLabels, sizes);
modules/ml/test/test_emknearestkmeans.cpp:        int currCode = runCase(caseIndex++, params, trainData, trainLabels, testData, testLabels, sizes);
modules/ml/test/test_emknearestkmeans.cpp:        int currCode = runCase(caseIndex++, params, trainData, trainLabels, testData, testLabels, sizes);
modules/ml/test/test_emknearestkmeans.cpp:        int currCode = runCase(caseIndex++, params, trainData, trainLabels, testData, testLabels, sizes);
modules/ml/test/test_emknearestkmeans.cpp:        int currCode = runCase(caseIndex++, params, trainData, trainLabels, testData, testLabels, sizes);
modules/ml/test/test_emknearestkmeans.cpp:        int currCode = runCase(caseIndex++, params, trainData, trainLabels, testData, testLabels, sizes);
modules/ml/test/test_emknearestkmeans.cpp:        int currCode = runCase(caseIndex++, params, trainData, trainLabels, testData, testLabels, sizes);
modules/ml/test/test_emknearestkmeans.cpp:        int currCode = runCase(caseIndex++, params, trainData, trainLabels, testData, testLabels, sizes);
modules/ml/test/test_emknearestkmeans.cpp:        int currCode = runCase(caseIndex++, params, trainData, trainLabels, testData, testLabels, sizes);
modules/ml/test/test_emknearestkmeans.cpp:        Mat labels;
modules/ml/test/test_emknearestkmeans.cpp:        em->trainEM(samples, noArray(), labels, noArray());
modules/ml/test/test_emknearestkmeans.cpp:            errCaseCount = std::abs(em->predict2(samples.row(i), noArray())[1] - firstResult.at<int>(i)) < FLT_EPSILON ? 0 : 1;
modules/ml/test/test_lr.cpp://   * Redistributions of source code must retain the above copyright notice,
modules/ml/test/test_lr.cpp://   * Redistributions in binary form must reproduce the above copyright notice,
modules/ml/test/test_lr.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/test/test_lr.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/test/test_lr.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/test/test_lr.cpp:static bool calculateError( const Mat& _p_labels, const Mat& _o_labels, float& error)
modules/ml/test/test_lr.cpp:    Mat _p_labels_temp;
modules/ml/test/test_lr.cpp:    Mat _o_labels_temp;
modules/ml/test/test_lr.cpp:    _p_labels.convertTo(_p_labels_temp, CV_32S);
modules/ml/test/test_lr.cpp:    _o_labels.convertTo(_o_labels_temp, CV_32S);
modules/ml/test/test_lr.cpp:    CV_Assert(_p_labels_temp.total() == _o_labels_temp.total());
modules/ml/test/test_lr.cpp:    CV_Assert(_p_labels_temp.rows == _o_labels_temp.rows);
modules/ml/test/test_lr.cpp:    accuracy = (float)countNonZero(_p_labels_temp == _o_labels_temp)/_p_labels_temp.rows;
modules/ml/test/test_lr.cpp:        ts->printf(cvtest::TS::LOG, "Bad prediction labels\n" );
modules/ml/include/opencv2/ml.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/include/opencv2/ml.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/include/opencv2/ml.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/include/opencv2/ml.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/include/opencv2/ml.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/include/opencv2/ml.hpp:  algorithms have different sets of features (like an ability to handle missing measurements or
modules/ml/include/opencv2/ml.hpp:  categorical input variables), there is a little common ground between the classes. This common
modules/ml/include/opencv2/ml.hpp:/** @brief Variable types */
modules/ml/include/opencv2/ml.hpp:enum VariableTypes
modules/ml/include/opencv2/ml.hpp:    VAR_ORDERED      =0, //!< ordered variables
modules/ml/include/opencv2/ml.hpp:    VAR_CATEGORICAL  =1  //!< categorical variables
modules/ml/include/opencv2/ml.hpp:        the active variables.
modules/ml/include/opencv2/ml.hpp:    classes>-1`. The actual label value can be retrieved then from the class label vector, see
modules/ml/include/opencv2/ml.hpp:    TrainData::getClassLabels.
modules/ml/include/opencv2/ml.hpp:    /** @brief Returns the vector of class labels
modules/ml/include/opencv2/ml.hpp:    The function returns vector of unique labels occurred in the responses.
modules/ml/include/opencv2/ml.hpp:    CV_WRAP virtual Mat getClassLabels() const = 0;
modules/ml/include/opencv2/ml.hpp:    @param responseStartIdx Index of the first output variable. If -1, the function considers the
modules/ml/include/opencv2/ml.hpp:        last variable as the response
modules/ml/include/opencv2/ml.hpp:    @param responseEndIdx Index of the last output variable + 1. If -1, then there is single
modules/ml/include/opencv2/ml.hpp:        response variable at responseStartIdx.
modules/ml/include/opencv2/ml.hpp:    @param varTypeSpec The optional text string that specifies the variables' types. It has the
modules/ml/include/opencv2/ml.hpp:        format `ord[n1-n2,n3,n4-n5,...]cat[n6,n7-n8,...]`. That is, variables from `n1 to n2`
modules/ml/include/opencv2/ml.hpp:        should cover all the variables. If varTypeSpec is not specified, then algorithm uses the
modules/ml/include/opencv2/ml.hpp:        - all input variables are considered ordered by default. If some column contains has non-
modules/ml/include/opencv2/ml.hpp:          variable is considered categorical.
modules/ml/include/opencv2/ml.hpp:        - if there are several output variables, they are all considered as ordered. Error is
modules/ml/include/opencv2/ml.hpp:        - if there is a single output variable, then if its values are non-numerical or are all
modules/ml/include/opencv2/ml.hpp:        variable ordered or categorical.
modules/ml/include/opencv2/ml.hpp:    @note If the dataset only contains input variables and no responses, use responseStartIdx = -2
modules/ml/include/opencv2/ml.hpp:        and responseEndIdx = 0. The output variables vector will just contain zeros.
modules/ml/include/opencv2/ml.hpp:    @param varIdx vector specifying which variables to use for training. It can be an integer vector
modules/ml/include/opencv2/ml.hpp:        (CV_32S) containing 0-based variable indices or byte vector (CV_8U) containing a mask of
modules/ml/include/opencv2/ml.hpp:        active variables.
modules/ml/include/opencv2/ml.hpp:    @param varType optional vector of type CV_8U and size `<number_of_variables_in_samples> +
modules/ml/include/opencv2/ml.hpp:        <number_of_variables_in_responses>`, containing types of each input and output variable. See
modules/ml/include/opencv2/ml.hpp:        ml::VariableTypes.
modules/ml/include/opencv2/ml.hpp:        RAW_OUTPUT=1, //!< makes the method return the raw results (the sum), not the class label
modules/ml/include/opencv2/ml.hpp:    /** @brief Returns the number of variables in training samples */
modules/ml/include/opencv2/ml.hpp:        different dataset to evaluate already trained classifier, you will probably want not to set
modules/ml/include/opencv2/ml.hpp:    The method estimates the most probable classes for input vectors. Input vectors (one or more)
modules/ml/include/opencv2/ml.hpp:    The vector outputProbs contains the output probabilities corresponding to each element of
modules/ml/include/opencv2/ml.hpp:        parameters in each matrix is about \f$d^2/2\f$. It is not recommended to use this option, unless
modules/ml/include/opencv2/ml.hpp:    /** @brief Returns a likelihood logarithm value and an index of the most probable mixture component
modules/ml/include/opencv2/ml.hpp:    @param probs Optional output matrix that contains posterior probabilities of each component
modules/ml/include/opencv2/ml.hpp:    the sample. First element is an index of the most probable mixture component for the given
modules/ml/include/opencv2/ml.hpp:    responses (class labels or function values) as input. Instead, it computes the *Maximum
modules/ml/include/opencv2/ml.hpp:    covs[k], \f$\pi_k\f$ in weights , and optionally computes the output "class label" for each
modules/ml/include/opencv2/ml.hpp:    sample: \f$\texttt{labels}_i=\texttt{arg max}_k(p_{i,k}), i=1..N\f$ (indices of the most
modules/ml/include/opencv2/ml.hpp:    probable mixture component for each sample).
modules/ml/include/opencv2/ml.hpp:    @param labels The optional output "class label" for each sample:
modules/ml/include/opencv2/ml.hpp:        \f$\texttt{labels}_i=\texttt{arg max}_k(p_{i,k}), i=1..N\f$ (indices of the most probable
modules/ml/include/opencv2/ml.hpp:    @param probs The optional output matrix that contains posterior probabilities of each Gaussian
modules/ml/include/opencv2/ml.hpp:                         OutputArray labels=noArray(),
modules/ml/include/opencv2/ml.hpp:    @param labels The optional output "class label" for each sample:
modules/ml/include/opencv2/ml.hpp:        \f$\texttt{labels}_i=\texttt{arg max}_k(p_{i,k}), i=1..N\f$ (indices of the most probable
modules/ml/include/opencv2/ml.hpp:    @param probs The optional output matrix that contains posterior probabilities of each Gaussian
modules/ml/include/opencv2/ml.hpp:                        OutputArray labels=noArray(),
modules/ml/include/opencv2/ml.hpp:    This variation starts with Maximization step. You need to provide initial probabilities
modules/ml/include/opencv2/ml.hpp:    @param labels The optional output "class label" for each sample:
modules/ml/include/opencv2/ml.hpp:        \f$\texttt{labels}_i=\texttt{arg max}_k(p_{i,k}), i=1..N\f$ (indices of the most probable
modules/ml/include/opencv2/ml.hpp:    @param probs The optional output matrix that contains posterior probabilities of each Gaussian
modules/ml/include/opencv2/ml.hpp:                        OutputArray labels=noArray(),
modules/ml/include/opencv2/ml.hpp:the class is capable of storing multiple decision trees and using them for prediction (by summing
modules/ml/include/opencv2/ml.hpp:use this capability to implement decision tree ensembles.
modules/ml/include/opencv2/ml.hpp:    /** Cluster possible values of a categorical variable into K\<=maxCategories clusters to
modules/ml/include/opencv2/ml.hpp:    If a discrete variable, on which the training procedure tries to make a split, takes more than
modules/ml/include/opencv2/ml.hpp:    2-class classification problems for categorical variables with N \> max_categories possible
modules/ml/include/opencv2/ml.hpp:    These splits allow to work with missing data and compute variable importance correctly.
modules/ml/include/opencv2/ml.hpp:    If all absolute differences between an estimated value in a node and values of train samples
modules/ml/include/opencv2/ml.hpp:    /** @brief The array of a priori class probabilities, sorted by the class label value.
modules/ml/include/opencv2/ml.hpp:    specified, where the anomaly probability is artificially increased (up to 0.5 or even
modules/ml/include/opencv2/ml.hpp:    You can also think about this parameter as weights of prediction categories which determine
modules/ml/include/opencv2/ml.hpp:        double value; //!< Value at the node: a class label in case of classification or estimated
modules/ml/include/opencv2/ml.hpp:        int varIdx; //!< Index of variable on which the split is created.
modules/ml/include/opencv2/ml.hpp:        float c; /**< The threshold value in case of split on an ordered variable.
modules/ml/include/opencv2/ml.hpp:        int subsetOfs; /**< Offset of the bitset used by the split on a categorical variable.
modules/ml/include/opencv2/ml.hpp:    /** If true then variable importance will be calculated and then it can be retrieved by RTrees::getVarImportance.
modules/ml/include/opencv2/ml.hpp:    /** Returns the variable importance array.
modules/ml/include/opencv2/ml.hpp:    The method returns the variable importance vector, computed at the training stage when
modules/ml/include/opencv2/ml.hpp:    Gentle AdaBoost and Real AdaBoost are often the preferable choices. */
modules/ml/include/opencv2/ml.hpp:Additional flags for StatModel::train are available: ANN_MLP::TrainFlags.
modules/ml/include/opencv2/ml.hpp:    /** Available training methods */
modules/ml/include/opencv2/ml.hpp:    The recommended value is about 0.1. Default value is 0.1.*/
modules/ml/include/opencv2/ml.hpp:    vary from 0 (the feature is disabled) to 1 and beyond. The value 0.1 or so is good enough.
modules/ml/include/opencv2/ml.hpp:        REG_DISABLE = -1, //!< Regularization disabled
modules/ml/include/opencv2/ml.hpp:        contains variables (features) of one object being classified. Should have data type CV_32F.
modules/ml/include/opencv2/ml.hpp:    @param results Predicted labels as a column matrix of type CV_32S.
modules/ml/include/opencv2/ml/ml.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/include/opencv2/ml/ml.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/include/opencv2/ml/ml.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/include/opencv2/ml/ml.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/include/opencv2/ml/ml.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/nbayes.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/nbayes.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/nbayes.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/nbayes.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/nbayes.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/nbayes.cpp:        Mat __cls_labels = trainData->getClassLabels();
modules/ml/src/nbayes.cpp:        int nclasses = (int)__cls_labels.total();
modules/ml/src/nbayes.cpp:            cls_labels = __cls_labels;
modules/ml/src/nbayes.cpp:                cls_labels.size() != __cls_labels.size() ||
modules/ml/src/nbayes.cpp:                norm(cls_labels, __cls_labels, NORM_INF) != 0 )
modules/ml/src/nbayes.cpp:                "The new training data is inconsistent with the original training data; varIdx and the class labels should be the same" );
modules/ml/src/nbayes.cpp:                       const Mat& _samples, const Mat& _vidx, const Mat& _cls_labels,
modules/ml/src/nbayes.cpp:            cls_labels = &_cls_labels;
modules/ml/src/nbayes.cpp:        const Mat* cls_labels;
modules/ml/src/nbayes.cpp:            int nclasses = (int)cls_labels->total();
modules/ml/src/nbayes.cpp:            double probability = 0;
modules/ml/src/nbayes.cpp:                    probability = exp( -0.5 * cur );
modules/ml/src/nbayes.cpp:                            results_prob->ptr<float>()[k*rpstep + i] = (float)probability;
modules/ml/src/nbayes.cpp:                            results_prob->ptr<double>()[k*rpstep + i] = probability;
modules/ml/src/nbayes.cpp:                int ival = rawOutput ? cls : cls_labels->at<int>(cls);
modules/ml/src/nbayes.cpp:        int nsamples = samples.rows, nclasses = (int)cls_labels.total();
modules/ml/src/nbayes.cpp:                                       var_idx, cls_labels, results, resultsProb, rawOutput));
modules/ml/src/nbayes.cpp:        int nclasses = (int)cls_labels.total(), i;
modules/ml/src/nbayes.cpp:        fs << "cls_labels" << cls_labels;
modules/ml/src/nbayes.cpp:        fn["cls_labels"] >> cls_labels;
modules/ml/src/nbayes.cpp:        int nclasses = (int)cls_labels.total(), i;
modules/ml/src/nbayes.cpp:        if( cls_labels.empty() || nclasses < 1 )
modules/ml/src/nbayes.cpp:            CV_Error( CV_StsParseError, "No or invalid \"cls_labels\" in NBayes classifier" );
modules/ml/src/nbayes.cpp:        cls_labels.release();
modules/ml/src/nbayes.cpp:    Mat var_idx, cls_labels, c;
modules/ml/src/em.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/em.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/em.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/em.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/em.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/em.cpp:        trainLabels.release();
modules/ml/src/em.cpp:        Mat samples = data->getTrainSamples(), labels;
modules/ml/src/em.cpp:        return trainEM(samples, labels, noArray(), noArray());
modules/ml/src/em.cpp:               OutputArray labels,
modules/ml/src/em.cpp:        return doTrain(START_AUTO_STEP, logLikelihoods, labels, probs);
modules/ml/src/em.cpp:                OutputArray labels,
modules/ml/src/em.cpp:        return doTrain(START_E_STEP, logLikelihoods, labels, probs);
modules/ml/src/em.cpp:                OutputArray labels,
modules/ml/src/em.cpp:        return doTrain(START_M_STEP, logLikelihoods, labels, probs);
modules/ml/src/em.cpp:            Vec2d res = computeProbabilities(samples.row(i), needprobs ? &probsrow : 0, ptype);
modules/ml/src/em.cpp:        return computeProbabilities(sample, !probs.empty() ? &probs : 0, ptype);
modules/ml/src/em.cpp:    static void preprocessProbability(Mat& probs)
modules/ml/src/em.cpp:        const double uniformProbability = (double)(1./probs.cols);
modules/ml/src/em.cpp:                sampleProbs.setTo(uniformProbability);
modules/ml/src/em.cpp:            preprocessProbability(trainProbs);
modules/ml/src/em.cpp:            preprocessProbability(weights);
modules/ml/src/em.cpp:        Mat labels;
modules/ml/src/em.cpp:        kmeans(trainSamplesFlt, nclusters, labels,
modules/ml/src/em.cpp:                if(labels.at<int>(sampleIndex) == clusterIndex)
modules/ml/src/em.cpp:    bool doTrain(int startStep, OutputArray logLikelihoods, OutputArray labels, OutputArray probs)
modules/ml/src/em.cpp:                 trainLogLikelihoodDelta < epsilon * std::fabs(trainLogLikelihood)))
modules/ml/src/em.cpp:        if(labels.needed())
modules/ml/src/em.cpp:            trainLabels.copyTo(labels);
modules/ml/src/em.cpp:        trainLabels.release();
modules/ml/src/em.cpp:    Vec2d computeProbabilities(const Mat& sample, Mat* probs, int ptype) const
modules/ml/src/em.cpp:        int i, label = 0;
modules/ml/src/em.cpp:            if(L.at<double>(clusterIndex) > L.at<double>(label))
modules/ml/src/em.cpp:                label = clusterIndex;
modules/ml/src/em.cpp:        double maxLVal = L.at<double>(label);
modules/ml/src/em.cpp:        res[1] = label;
modules/ml/src/em.cpp:        trainLabels.create(trainSamples.rows, 1, CV_32SC1);
modules/ml/src/em.cpp:            Vec2d res = computeProbabilities(trainSamples.row(sampleIndex), &sampleProbs, CV_64F);
modules/ml/src/em.cpp:            trainLabels.at<int>(sampleIndex) = static_cast<int>(res[1]);
modules/ml/src/em.cpp:    Mat trainLabels;
modules/ml/src/kdtree.hpp:    CV_WRAP KDTree(InputArray points, InputArray _labels,
modules/ml/src/kdtree.hpp:    CV_WRAP void build(InputArray points, InputArray labels,
modules/ml/src/kdtree.hpp:                            OutputArray labels = noArray()) const;
modules/ml/src/kdtree.hpp:                                OutputArray labels = noArray()) const;
modules/ml/src/kdtree.hpp:                           OutputArray labels = noArray()) const;
modules/ml/src/kdtree.hpp:    const float* getPoint(int ptidx, int* label = 0) const;
modules/ml/src/kdtree.hpp:    CV_PROP std::vector<int> labels; //!< the parallel array of labels.
modules/ml/src/svm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/svm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/svm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/svm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/svm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/svm.cpp:    1. Redistributions of source code must retain the above copyright
modules/ml/src/svm.cpp:    2. Redistributions in binary form must reproduce the above copyright
modules/ml/src/svm.cpp:            Qfloat e = std::exp(-std::abs(t));
modules/ml/src/svm.cpp:                if( fabs(G[i]) > 1e200 )
modules/ml/src/svm.cpp:                    if( fabs(G[i]) > 1e+300 )
modules/ml/src/svm.cpp:                    if( fabs(alpha[i]) > 1e16 )
modules/ml/src/svm.cpp:                    double delta = (-G[i]-G[j])/MAX(fabs(denom),FLT_EPSILON);
modules/ml/src/svm.cpp:                    double delta = (G[i]-G[j])/MAX(fabs(denom),FLT_EPSILON);
modules/ml/src/svm.cpp:                sv_count += fabs(_alpha[i]) > 0;
modules/ml/src/svm.cpp:                if( std::abs(_alpha[i]) > 0 )
modules/ml/src/svm.cpp:            int class_count = (int)class_labels.total();
modules/ml/src/svm.cpp:            vector<int> svidx, sidx, sidx_all, sv_tab(sample_count, 0);
modules/ml/src/svm.cpp:                        if( std::abs(_alpha[k]) > 0 )
modules/ml/src/svm.cpp:                            sv_tab[sidx_all[idx]] = 1;
modules/ml/src/svm.cpp:            // allocate support vectors and initialize sv_tab
modules/ml/src/svm.cpp:                if( sv_tab[i] )
modules/ml/src/svm.cpp:                    sv_tab[i] = ++k;
modules/ml/src/svm.cpp:                if( !sv_tab[i] )
modules/ml/src/svm.cpp:                memcpy(sv.ptr(sv_tab[i]-1), _samples.ptr(i), samplesize);
modules/ml/src/svm.cpp:                CV_Assert( sv_tab[df_index[i]] > 0 );
modules/ml/src/svm.cpp:                df_index[i] = sv_tab[df_index[i]] - 1;
modules/ml/src/svm.cpp:            class_labels = data->getClassLabels();
modules/ml/src/svm.cpp:        Mat class_labels0;
modules/ml/src/svm.cpp:        int class_count = (int)class_labels.total();
modules/ml/src/svm.cpp:            class_labels = data->getClassLabels();
modules/ml/src/svm.cpp:            class_count = (int)class_labels.total();
modules/ml/src/svm.cpp:            vector<int> temp_class_labels;
modules/ml/src/svm.cpp:            setRangeVector(temp_class_labels, class_count);
modules/ml/src/svm.cpp:            // temporarily replace class labels with 0, 1, ..., NCLASSES-1
modules/ml/src/svm.cpp:            class_labels0 = class_labels;
modules/ml/src/svm.cpp:            class_labels = Mat(temp_class_labels).clone();
modules/ml/src/svm.cpp:        class_labels = class_labels0;
modules/ml/src/svm.cpp:            int class_count = !svm->class_labels.empty() ? (int)svm->class_labels.total() : svmType == ONE_CLASS ? 1 : 0;
modules/ml/src/svm.cpp:                        (float)sum : (float)(svm->class_labels.at<int>(k));
modules/ml/src/svm.cpp:                         "the SVM structure is probably corrupted" );
modules/ml/src/svm.cpp:        int class_count = !class_labels.empty() ? (int)class_labels.total() :
modules/ml/src/svm.cpp:            if( !class_labels.empty() )
modules/ml/src/svm.cpp:                fs << "class_labels" << class_labels;
modules/ml/src/svm.cpp:        FileNode m = fn["class_labels"];
modules/ml/src/svm.cpp:            m >> class_labels;
modules/ml/src/svm.cpp:        if( class_count > 1 && (class_labels.empty() || (int)class_labels.total() != class_count))
modules/ml/src/svm.cpp:            CV_Error( CV_StsParseError, "Array of class labels is missing or invalid" );
modules/ml/src/svm.cpp:    Mat class_labels;
modules/ml/src/testset.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/testset.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/testset.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/testset.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/testset.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/testset.cpp:    // assign class labels
modules/ml/src/kdtree.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/kdtree.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/kdtree.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/kdtree.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/kdtree.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/kdtree.cpp:KDTree::KDTree(InputArray _points, InputArray _labels, bool _copyData)
modules/ml/src/kdtree.cpp:    build(_points, _labels, _copyData);
modules/ml/src/kdtree.cpp:    CV_Assert(std::abs(more - less) <= 1);
modules/ml/src/kdtree.cpp:void KDTree::build(InputArray __points, InputArray __labels, bool _copyData)
modules/ml/src/kdtree.cpp:    Mat _points = __points.getMat(), _labels = __labels.getMat();
modules/ml/src/kdtree.cpp:    labels.resize(n);
modules/ml/src/kdtree.cpp:    const int* _labels_data = 0;
modules/ml/src/kdtree.cpp:    if( !_labels.empty() )
modules/ml/src/kdtree.cpp:        int nlabels = _labels.checkVector(1, CV_32S, true);
modules/ml/src/kdtree.cpp:        CV_Assert(nlabels == n);
modules/ml/src/kdtree.cpp:        _labels_data = _labels.ptr<int>();
modules/ml/src/kdtree.cpp:            labels[idx] = _labels_data ? _labels_data[idx0] : idx0;
modules/ml/src/kdtree.cpp:                        OutputArray _dist, OutputArray _labels) const
modules/ml/src/kdtree.cpp:                        d += std::abs(vec[j] - row[j]);
modules/ml/src/kdtree.cpp:                d = std::abs(d) + alt_d;
modules/ml/src/kdtree.cpp:    if( _neighbors.needed() || _labels.needed() )
modules/ml/src/kdtree.cpp:        getPoints(Mat(K, 1, CV_32S, idx), _neighbors, _labels);
modules/ml/src/kdtree.cpp:                            OutputArray _labels ) const
modules/ml/src/kdtree.cpp:    getPoints( idx, _neighbors, _labels );
modules/ml/src/kdtree.cpp:void KDTree::getPoints(InputArray _idx, OutputArray _pts, OutputArray _labels) const
modules/ml/src/kdtree.cpp:    Mat idxmat = _idx.getMat(), pts, labelsmat;
modules/ml/src/kdtree.cpp:    int* dstlabels = 0;
modules/ml/src/kdtree.cpp:        _labels.release();
modules/ml/src/kdtree.cpp:    if(_labels.needed())
modules/ml/src/kdtree.cpp:        _labels.create(nidx, 1, CV_32S, -1, true);
modules/ml/src/kdtree.cpp:        labelsmat = _labels.getMat();
modules/ml/src/kdtree.cpp:        CV_Assert( labelsmat.isContinuous() );
modules/ml/src/kdtree.cpp:        dstlabels = labelsmat.ptr<int>();
modules/ml/src/kdtree.cpp:    const int* srclabels = !labels.empty() ? &labels[0] : 0;
modules/ml/src/kdtree.cpp:        if( dstlabels )
modules/ml/src/kdtree.cpp:            dstlabels[i] = srclabels ? srclabels[k] : k;
modules/ml/src/kdtree.cpp:const float* KDTree::getPoint(int ptidx, int* label) const
modules/ml/src/kdtree.cpp:    if(label)
modules/ml/src/kdtree.cpp:        *label = labels[ptidx];
modules/ml/src/gbt.cpp:    class_labels = 0;
modules/ml/src/gbt.cpp:    cvReleaseMat( &class_labels );
modules/ml/src/gbt.cpp:    class_labels = 0;
modules/ml/src/gbt.cpp:      m - count of variables
modules/ml/src/gbt.cpp:        class_labels = cvCreateMat(1, class_count, CV_32S);
modules/ml/src/gbt.cpp:        class_labels->data.i[0] = int(orig_response->data.fl[0]);
modules/ml/src/gbt.cpp:            while ((k<j) && (int(orig_response->data.fl[i]) - class_labels->data.i[k]))
modules/ml/src/gbt.cpp:                class_labels->data.i[k] = int(orig_response->data.fl[i]);
modules/ml/src/gbt.cpp:                residuals[i] = fabs(resp_data[idx] - current_data[idx]);
modules/ml/src/gbt.cpp:                grad_data[idx] = (fabs(r) > delta) ? delta*Sign(r) : r;
modules/ml/src/gbt.cpp:                int orig_label = int(resp_data[idx]);
modules/ml/src/gbt.cpp:                grad_data[idx] = (float)(!(k-class_labels->data.i[orig_label]+1)) -
modules/ml/src/gbt.cpp:                int ensemble_label = 0;
modules/ml/src/gbt.cpp:                while (class_labels->data.i[ensemble_label] - orig_label)
modules/ml/src/gbt.cpp:                    ensemble_label++;
modules/ml/src/gbt.cpp:                grad_data[idx] = (float)(!(k-ensemble_label)) -
modules/ml/src/gbt.cpp:                gamma += (delta < fabs(dif)) ? Sign(dif)*delta : dif;
modules/ml/src/gbt.cpp:                tmp2 += fabs(tmp)*(1-fabs(tmp));
modules/ml/src/gbt.cpp:    int class_label = 0;
modules/ml/src/gbt.cpp:            class_label = i;
modules/ml/src/gbt.cpp:    int orig_class_label = -1;
modules/ml/src/gbt.cpp:    for (int i=0; i<get_len(class_labels); ++i)
modules/ml/src/gbt.cpp:        if (class_labels->data.i[i] == class_label+1)
modules/ml/src/gbt.cpp:            orig_class_label = i;
modules/ml/src/gbt.cpp:    int orig_class_label = class_labels->data.i[class_label];
modules/ml/src/gbt.cpp:    return float(orig_class_label);
modules/ml/src/gbt.cpp:        int class_label = 0;
modules/ml/src/gbt.cpp:                class_label = i;
modules/ml/src/gbt.cpp:        int orig_class_label = class_labels->data.i[class_label];
modules/ml/src/gbt.cpp:        return float(orig_class_label);
modules/ml/src/gbt.cpp:    if (class_labels) cvWrite( fs, "class_labels", class_labels);
modules/ml/src/gbt.cpp:        class_labels = (CvMat*)cvReadByName( fs, fnode, "class_labels" );
modules/ml/src/gbt.cpp:        if( class_labels && !CV_IS_MAT(class_labels))
modules/ml/src/gbt.cpp:            CV_ERROR( CV_StsParseError, "class_labels must stored as a matrix");
modules/ml/src/gbt.cpp:            int d = fabs((double)pred_resp[i] - response->data.fl[si*r_step]) <= FLT_EPSILON ? 0 : 1;
modules/ml/src/gbt.cpp:    class_labels = 0;
modules/ml/src/tree.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/tree.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/tree.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/tree.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/tree.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/tree.cpp:    classLabels.clear();
modules/ml/src/tree.cpp:        data->getClassLabels().copyTo(classLabels);
modules/ml/src/tree.cpp:        int nclasses = (int)classLabels.size();
modules/ml/src/tree.cpp:    int m = (int)classLabels.size();
modules/ml/src/tree.cpp:        //  * node value is the label of the class that has the largest weight in the node.
modules/ml/src/tree.cpp:        //  * j-th cross-validation fold value and risk are calculated as above,
modules/ml/src/tree.cpp:        //    but using the samples with cv_labels(*)!=j.
modules/ml/src/tree.cpp:        //    misclassified samples with cv_labels(*)==j.
modules/ml/src/tree.cpp:                j = w->cv_labels[si]; k = w->cat_responses[si];
modules/ml/src/tree.cpp:        node->value = classLabels[max_k];
modules/ml/src/tree.cpp:        //  * j-th cross-validation fold value and risk are calculated as above,
modules/ml/src/tree.cpp:        //    but using the samples with cv_labels(*)!=j.
modules/ml/src/tree.cpp:        //    using samples with cv_labels(*)==j as the test subset:
modules/ml/src/tree.cpp:        //    error_j = sum_(i,cv_labels(i)==j)((Y_i - <node_value_j>)^2),
modules/ml/src/tree.cpp:        //    over the samples with cv_labels(*)==j.
modules/ml/src/tree.cpp:                j = w->cv_labels[si];
modules/ml/src/tree.cpp:    int m = (int)classLabels.size();
modules/ml/src/tree.cpp:void DTreesImpl::clusterCategories( const double* vectors, int n, int m, double* csums, int k, int* labels )
modules/ml/src/tree.cpp:    // assign labels randomly
modules/ml/src/tree.cpp:        labels[i] = i < k ? i : r.uniform(0, k);
modules/ml/src/tree.cpp:        std::swap( labels[i1], labels[i2] );
modules/ml/src/tree.cpp:            double* s = csums + labels[i]*m;
modules/ml/src/tree.cpp:            if( min_idx != labels[i] )
modules/ml/src/tree.cpp:            labels[i] = min_idx;
modules/ml/src/tree.cpp:    int m = (int)classLabels.size();
modules/ml/src/tree.cpp:    int* labels = (int*)(buf + base_size);
modules/ml/src/tree.cpp:    w->data->getNormCatValues(vi, _sidx, labels);
modules/ml/src/tree.cpp:    int* cluster_labels = 0;
modules/ml/src/tree.cpp:    // c_{jk} - number of samples that have vi-th input variable = j and response = k.
modules/ml/src/tree.cpp:        j = labels[i];
modules/ml/src/tree.cpp:            cluster_labels = (int*)(cjk + m*mi);
modules/ml/src/tree.cpp:            clusterCategories( _cjk, _mi, m, cjk, mi, cluster_labels );
modules/ml/src/tree.cpp:                idx = cluster_labels ? cluster_labels[i] : i;
modules/ml/src/tree.cpp:    int* cat_labels = (int*)(sum_ptr + mi);
modules/ml/src/tree.cpp:    w->data->getNormCatValues(vi, _sidx, cat_labels);
modules/ml/src/tree.cpp:        int idx = cat_labels[i];
modules/ml/src/tree.cpp:        sum[i] = fabs(counts[i]) > DBL_EPSILON ? sum[i]/counts[i] : 0;
modules/ml/src/tree.cpp:    if( mi <= 0 ) // split on an ordered variable
modules/ml/src/tree.cpp:        int* cat_labels = (int*)(float*)buf;
modules/ml/src/tree.cpp:        w->data->getNormCatValues(vi, _sidx, cat_labels);
modules/ml/src/tree.cpp:            unsigned u = cat_labels[i];
modules/ml/src/tree.cpp:    vector<double> ab;
modules/ml/src/tree.cpp:        ab.push_back(min_alpha);
modules/ml/src/tree.cpp:        ab[0] = 0.;
modules/ml/src/tree.cpp:            ab[ti] = std::sqrt(ab[ti]*ab[ti+1]);
modules/ml/src/tree.cpp:        ab[tree_count-1] = DBL_MAX*0.5;
modules/ml/src/tree.cpp:                    if( ab[tk] > min_alpha )
modules/ml/src/tree.cpp:    int i, ncats = (int)catOfs.size(), nclasses = (int)classLabels.size();
modules/ml/src/tree.cpp:        predictType = !_isClassifier || (classLabels.size() == 2 && (flags & RAW_OUTPUT) != 0) ?
modules/ml/src/tree.cpp:                                     "one of input categorical variable is not an integer" );
modules/ml/src/tree.cpp:        sum = (flags & RAW_OUTPUT) ? (float)best_idx : classLabels[best_idx];
modules/ml/src/tree.cpp:    if( !classLabels.empty() )
modules/ml/src/tree.cpp:        fs << "class_labels" << classLabels;
modules/ml/src/tree.cpp:        classLabels.clear();
modules/ml/src/tree.cpp:        // other elements in "catMap" are "classLabels"
modules/ml/src/tree.cpp:            classLabels.insert(classLabels.end(), catMap.begin() + curShift, catMap.end());
modules/ml/src/tree.cpp:        fn["class_labels"] >> classLabels;
modules/ml/src/tree.cpp:        // instead we inverse the variable set in the split
modules/ml/src/ann_mlp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/ann_mlp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/ann_mlp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/ann_mlp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/ann_mlp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/ann_mlp.cpp:            if( fabs(_f_param1) < FLT_EPSILON )
modules/ml/src/ann_mlp.cpp:            if( fabs(_f_param2) < FLT_EPSILON )
modules/ml/src/ann_mlp.cpp:            if( fabs(_f_param1) < FLT_EPSILON )
modules/ml/src/ann_mlp.cpp:            if( fabs(_f_param2) < FLT_EPSILON )
modules/ml/src/ann_mlp.cpp:                    s += fabs(val);
modules/ml/src/ann_mlp.cpp:                    s = 1./(s - fabs(val));
modules/ml/src/ann_mlp.cpp:                    df[j] = -fabs(xf[j]);
modules/ml/src/ann_mlp.cpp:                if( fabs(prev_E - E) < epsilon )
modules/ml/src/ann_mlp.cpp:                // grab and preprocess input data
modules/ml/src/ann_mlp.cpp:            if( fabs(prev_E - E) < epsilon )
modules/ml/src/boost.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/boost.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/boost.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/boost.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/boost.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/boost.cpp:                CV_Assert( std::abs(w->ord_responses[si]) == 1 );
modules/ml/src/boost.cpp:                ival = classLabels[ival];
modules/ml/src/boost.cpp:        (bparams.boostType == Boost::DISCRETE ? "DiscreteAdaboost" :
modules/ml/src/boost.cpp:        bparams.boostType == Boost::REAL ? "RealAdaboost" :
modules/ml/src/boost.cpp:        bparams.boostType == Boost::GENTLE ? "GentleAdaboost" : "Unknown");
modules/ml/src/boost.cpp:        bparams.boostType = (bts == "DiscreteAdaboost" ? Boost::DISCRETE :
modules/ml/src/boost.cpp:                             bts == "RealAdaboost" ? Boost::REAL :
modules/ml/src/boost.cpp:                             bts == "GentleAdaboost" ? Boost::GENTLE : -1);
modules/ml/src/lr.cpp://   * Redistributions of source code must retain the above copyright notice,
modules/ml/src/lr.cpp://   * Redistributions in binary form must reproduce the above copyright notice,
modules/ml/src/lr.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/lr.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/lr.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/lr.cpp:    double compute_cost(const Mat& _data, const Mat& _labels, const Mat& _init_theta);
modules/ml/src/lr.cpp:    void compute_gradient(const Mat& _data, const Mat& _labels, const Mat &_theta, const double _lambda, Mat & _gradient );
modules/ml/src/lr.cpp:    Mat batch_gradient_descent(const Mat& _data, const Mat& _labels, const Mat& _init_theta);
modules/ml/src/lr.cpp:    Mat mini_batch_gradient_descent(const Mat& _data, const Mat& _labels, const Mat& _init_theta);
modules/ml/src/lr.cpp:    bool set_label_map(const Mat& _labels_i);
modules/ml/src/lr.cpp:    Mat remap_labels(const Mat& _labels_i, const map<int, int>& lmap) const;
modules/ml/src/lr.cpp:    Mat labels_o;
modules/ml/src/lr.cpp:    Mat labels_n;
modules/ml/src/lr.cpp:    Mat _labels_i = trainData->getResponses();
modules/ml/src/lr.cpp:    CV_Assert( !_labels_i.empty() && !_data_i.empty());
modules/ml/src/lr.cpp:    if(_labels_i.cols != 1)
modules/ml/src/lr.cpp:        CV_Error( CV_StsBadArg, "_labels_i should be a column matrix" );
modules/ml/src/lr.cpp:    if((_data_i.type() != CV_32FC1) || (_labels_i.type() != CV_32FC1))
modules/ml/src/lr.cpp:        CV_Error( CV_StsBadArg, "data and labels must be a floating point matrix" );
modules/ml/src/lr.cpp:    Mat labels;
modules/ml/src/lr.cpp:    set_label_map(_labels_i);
modules/ml/src/lr.cpp:    if(_labels_i.rows != _data_i.rows)
modules/ml/src/lr.cpp:        CV_Error( CV_StsBadArg, "number of rows in data and labels should be the equal" );
modules/ml/src/lr.cpp:    Mat labels_l = remap_labels(_labels_i, this->forward_mapper);
modules/ml/src/lr.cpp:    Mat new_local_labels;
modules/ml/src/lr.cpp:        labels_l.convertTo(labels, CV_32F);
modules/ml/src/lr.cpp:            new_theta = batch_gradient_descent(data_t, labels, init_theta);
modules/ml/src/lr.cpp:            new_theta = mini_batch_gradient_descent(data_t, labels, init_theta);
modules/ml/src/lr.cpp:            new_local_labels = (labels_l == it->second)/255;
modules/ml/src/lr.cpp:            new_local_labels.convertTo(labels, CV_32F);
modules/ml/src/lr.cpp:                new_theta = batch_gradient_descent(data_t, labels, init_theta);
modules/ml/src/lr.cpp:                new_theta = mini_batch_gradient_descent(data_t, labels, init_theta);
modules/ml/src/lr.cpp:    Mat thetas, data, pred_labs;
modules/ml/src/lr.cpp:    Mat labels;
modules/ml/src/lr.cpp:    Mat labels_c;
modules/ml/src/lr.cpp:        temp_pred.convertTo(labels_c, CV_32S);
modules/ml/src/lr.cpp:            labels.push_back(max_loc.x);
modules/ml/src/lr.cpp:        labels.convertTo(labels_c, CV_32S);
modules/ml/src/lr.cpp:    pred_labs = remap_labels(labels_c, this->reverse_mapper);
modules/ml/src/lr.cpp:    // convert pred_labs to integer type
modules/ml/src/lr.cpp:    pred_labs.convertTo(pred_labs, CV_32S);
modules/ml/src/lr.cpp:    // return either the labels or the raw output
modules/ml/src/lr.cpp:            pred_labs.copyTo(results);
modules/ml/src/lr.cpp:    return ( pred_labs.empty() ? 0.f : (float) pred_labs.at< int >( 0 ) );
modules/ml/src/lr.cpp:double LogisticRegressionImpl::compute_cost(const Mat& _data, const Mat& _labels, const Mat& _init_theta)
modules/ml/src/lr.cpp:    multiply(d_a, _labels, d_a);
modules/ml/src/lr.cpp:    multiply(d_b, 1-_labels, d_b);
modules/ml/src/lr.cpp:void LogisticRegressionImpl::compute_gradient(const Mat& _data, const Mat& _labels, const Mat &_theta, const double _lambda, Mat & _gradient )
modules/ml/src/lr.cpp:    Mat pcal_a, pcal_b, pcal_ab;
modules/ml/src/lr.cpp:    pcal_a = calc_sigmoid(z) - _labels;
modules/ml/src/lr.cpp:    multiply(pcal_a, pcal_b, pcal_ab, 1);
modules/ml/src/lr.cpp:    _gradient.row(0) = ((float)1/m) * sum(pcal_ab)[0];
modules/ml/src/lr.cpp:        multiply(pcal_a, pcal_b, pcal_ab, 1);
modules/ml/src/lr.cpp:        _gradient.row(ii) = (1.0/m)*sum(pcal_ab)[0] + (_lambda/m) * _theta.row(ii);
modules/ml/src/lr.cpp:Mat LogisticRegressionImpl::batch_gradient_descent(const Mat& _data, const Mat& _labels, const Mat& _init_theta)
modules/ml/src/lr.cpp:        compute_cost(_data, _labels, theta_p);
modules/ml/src/lr.cpp:        compute_gradient( _data, _labels, theta_p, llambda, gradient );
modules/ml/src/lr.cpp:Mat LogisticRegressionImpl::mini_batch_gradient_descent(const Mat& _data, const Mat& _labels, const Mat& _init_theta)
modules/ml/src/lr.cpp:    Mat labels_l;
modules/ml/src/lr.cpp:            labels_l = _labels(Range(j,j+size_b),Range::all());
modules/ml/src/lr.cpp:            labels_l = _labels(Range(j, _labels.rows),Range::all());
modules/ml/src/lr.cpp:        compute_cost(data_d, labels_l, theta_p);
modules/ml/src/lr.cpp:        compute_gradient(data_d, labels_l, theta_p, lambda_l, gradient);
modules/ml/src/lr.cpp:        // if parsed through all data variables
modules/ml/src/lr.cpp:bool LogisticRegressionImpl::set_label_map(const Mat &_labels_i)
modules/ml/src/lr.cpp:    // this function creates two maps to map user defined labels to program friendly labels two ways.
modules/ml/src/lr.cpp:    Mat labels;
modules/ml/src/lr.cpp:    this->labels_o = Mat(0,1, CV_8U);
modules/ml/src/lr.cpp:    this->labels_n = Mat(0,1, CV_8U);
modules/ml/src/lr.cpp:    _labels_i.convertTo(labels, CV_32S);
modules/ml/src/lr.cpp:    for(int i = 0;i<labels.rows;i++)
modules/ml/src/lr.cpp:        this->forward_mapper[labels.at<int>(i)] += 1;
modules/ml/src/lr.cpp:        this->labels_o.push_back(it->first);
modules/ml/src/lr.cpp:        this->labels_n.push_back(ii);
modules/ml/src/lr.cpp:Mat LogisticRegressionImpl::remap_labels(const Mat& _labels_i, const map<int, int>& lmap) const
modules/ml/src/lr.cpp:    Mat labels;
modules/ml/src/lr.cpp:    _labels_i.convertTo(labels, CV_32S);
modules/ml/src/lr.cpp:    Mat new_labels = Mat::zeros(labels.rows, labels.cols, labels.type());
modules/ml/src/lr.cpp:    for(int i =0;i<labels.rows;i++)
modules/ml/src/lr.cpp:        new_labels.at<int>(i,0) = lmap.find(labels.at<int>(i,0))->second;
modules/ml/src/lr.cpp:    return new_labels;
modules/ml/src/lr.cpp:    this->labels_o.release();
modules/ml/src/lr.cpp:    this->labels_n.release();
modules/ml/src/lr.cpp:    fs<<"n_labels"<<this->labels_n;
modules/ml/src/lr.cpp:    fs<<"o_labels"<<this->labels_o;
modules/ml/src/lr.cpp:    fn["o_labels"] >> this->labels_o;
modules/ml/src/lr.cpp:    fn["n_labels"] >> this->labels_n;
modules/ml/src/lr.cpp:    for(int ii =0;ii<labels_o.rows;ii++)
modules/ml/src/lr.cpp:        this->forward_mapper[labels_o.at<int>(ii,0)] = labels_n.at<int>(ii,0);
modules/ml/src/lr.cpp:        this->reverse_mapper[labels_n.at<int>(ii,0)] = labels_o.at<int>(ii,0);
modules/ml/src/inner_functions.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/inner_functions.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/inner_functions.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/inner_functions.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/inner_functions.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/inner_functions.cpp:            err += fabs(val - val0) > FLT_EPSILON;
modules/ml/src/knearest.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/knearest.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/knearest.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/knearest.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/knearest.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/rtrees.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/rtrees.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/rtrees.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/rtrees.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/rtrees.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/rtrees.cpp:        int nclasses = (int)classLabels.size();
modules/ml/src/rtrees.cpp:                double val = std::abs(w->ord_responses[w->sidx[i]]);
modules/ml/src/rtrees.cpp:                // nor update the variable importance vector; so we proceed to the next tree
modules/ml/src/data.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/data.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/data.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/data.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/data.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/data.cpp:        return classLabels.empty() ? VAR_ORDERED : VAR_CATEGORICAL;
modules/ml/src/data.cpp:    Mat getClassLabels() const { return classLabels; }
modules/ml/src/data.cpp:        classLabels.release();
modules/ml/src/data.cpp:        vector<int> labels, counters, sortbuf, tempCatMap;
modules/ml/src/data.cpp:        // we iterate through all the variables. For each categorical variable we build a map
modules/ml/src/data.cpp:        // in order to convert input values of the variable into normalized values (0..catcount_vi-1)
modules/ml/src/data.cpp:        // often many categorical variables are similar, so we compress the map - try to re-use
modules/ml/src/data.cpp:        // maps for different variables if they are identical
modules/ml/src/data.cpp:                preprocessCategorical(values_i, 0, labels, 0, sortbuf);
modules/ml/src/data.cpp:                int j, m = (int)labels.size();
modules/ml/src/data.cpp:                int a = labels.front(), b = labels.back();
modules/ml/src/data.cpp:                const int* currmap = &labels[0];
modules/ml/src/data.cpp:                std::copy(labels.begin(), labels.end(), std::back_inserter(tempCatMap));
modules/ml/src/data.cpp:            preprocessCategorical(responses, &normCatResponses, labels, &counters, sortbuf);
modules/ml/src/data.cpp:            Mat(labels).copyTo(classLabels);
modules/ml/src/data.cpp:    void preprocessCategorical(const Mat& data, Mat* normdata, vector<int>& labels,
modules/ml/src/data.cpp:        int clslabel = -1;
modules/ml/src/data.cpp:        labels.resize(clscount);
modules/ml/src/data.cpp:                clslabel++;
modules/ml/src/data.cpp:                labels[clslabel] = l;
modules/ml/src/data.cpp:                if( clslabel > 0 && counters )
modules/ml/src/data.cpp:                    counters->at(clslabel-1) = k;
modules/ml/src/data.cpp:                odata[idx[i]*ostep] = clslabel;
modules/ml/src/data.cpp:            counters->at(clslabel) = i - previdx;
modules/ml/src/data.cpp:          "\"ord[n1,n2-n3,n4-n5,...]cat[m1-m2,m3,m4-m5,...]\", where n's and m's are 0-based variable indices";
modules/ml/src/data.cpp:            CV_Error( CV_StsBadArg, "type of some variables is not specified" );
modules/ml/src/data.cpp:        CV_Assert( m > 0 ); // if m==0, vi is an ordered variable
modules/ml/src/data.cpp:    Mat normCatResponses, classLabels, classCounters;
modules/ml/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/ml/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/ml/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/ml/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/ml/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/ml/src/precomp.hpp:            vector<int> cv_labels;
modules/ml/src/precomp.hpp:        virtual void clusterCategories( const double* vectors, int n, int m, double* csums, int k, int* labels );
modules/ml/src/precomp.hpp:        vector<int> classLabels;
modules/photo/CMakeLists.txt:  ocv_warnings_disable(CMAKE_CXX_FLAGS -Wundef -Wmissing-declarations)
modules/photo/test/test_cloning.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/test/test_cloning.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/test/test_cloning.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/test/test_cloning.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/test/test_cloning.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/test/test_denoising.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/test/test_denoising.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/test/test_denoising.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/test/test_denoising.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/test/test_denoising.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/test/test_denoising.cpp:    string expected_path = folder + "lena_noised_denoised_lab12_tw=7_sw=21_h=10_h2=10.png";
modules/photo/test/test_denoising.cpp:    string expected_path = folder + "lena_noised_denoised_multi_lab12_tw=7_sw=21_h=10_h2=15.png";
modules/photo/test/test_npr.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/test/test_npr.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/test/test_npr.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/test/test_npr.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/test/test_npr.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/test/test_hdr.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/test/test_hdr.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/test/test_hdr.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/test/test_hdr.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/test/test_hdr.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/test/test_hdr.cpp:    minMaxLoc(abs(img0 - img1), NULL, &max);
modules/photo/test/test_hdr.cpp:    Mat diff = abs(response - expected);
modules/photo/test/test_denoising.cuda.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/test/test_denoising.cuda.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/test/test_denoising.cuda.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/test/test_denoising.cuda.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/test/test_denoising.cuda.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/test/test_denoise_tvl1.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/test/test_denoise_tvl1.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/test/test_denoise_tvl1.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/test/test_denoise_tvl1.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/photo/test/test_denoise_tvl1.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/test/test_denoise_tvl1.cpp:    bool ok = std::abs(image.at<uchar>(x,y) - val) < 10;
modules/photo/test/test_decolor.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/test/test_decolor.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/test/test_decolor.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/test/test_decolor.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/test/test_decolor.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/test/test_inpaint.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/test/test_inpaint.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/test/test_inpaint.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/test/test_inpaint.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/test/test_inpaint.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/test/test_inpaint.cpp:    absdiff( orig, res1, diff1 );
modules/photo/test/test_inpaint.cpp:    absdiff( orig, res2, diff2 );
modules/photo/test/test_inpaint.cpp:    absdiff( exp1, res1, diff1 );
modules/photo/test/test_inpaint.cpp:    absdiff( exp2, res2, diff2 );
modules/photo/include/opencv2/photo/cuda.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/include/opencv2/photo/cuda.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/include/opencv2/photo/cuda.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/include/opencv2/photo/cuda.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/include/opencv2/photo/cuda.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/include/opencv2/photo/cuda.hpp:FastNonLocalMeansDenoising::labMethod.
modules/photo/include/opencv2/photo/photo_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/include/opencv2/photo/photo_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/include/opencv2/photo/photo_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/include/opencv2/photo/photo_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/include/opencv2/photo/photo_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/photo/include/opencv2/photo/photo.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/include/opencv2/photo/photo.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/include/opencv2/photo/photo.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/include/opencv2/photo/photo.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/include/opencv2/photo/photo.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/include/opencv2/photo.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/include/opencv2/photo.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/include/opencv2/photo.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/include/opencv2/photo.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/include/opencv2/photo.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/include/opencv2/photo.hpp:function may be used to remove dust and scratches from a scanned photo, or to remove undesirable
modules/photo/include/opencv2/photo.hpp:\f[\left\|\left\|\nabla x\right\|\right\| + \lambda\sum_i\left\|\left\|x-f_i\right\|\right\|\f]
modules/photo/include/opencv2/photo.hpp:@param lambda Corresponds to \f$\lambda\f$ in the formulas above. As it is enlarged, the smooth
modules/photo/include/opencv2/photo.hpp:(blurred) images are treated more favorably than detailed (but maybe more noised) ones. Roughly
modules/photo/include/opencv2/photo.hpp:equal to 2.2f is suitable for most displays.
modules/photo/include/opencv2/photo.hpp:consuming and often leaves an undesirable halo. Seamless cloning, even averaged with the
modules/photo/include/opencv2/photo.hpp:photorealism. Edge-aware filters are ideal for stylization, as they can abstract regions of low
modules/photo/perf/perf_cuda.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/perf/perf_cuda.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/perf/perf_cuda.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/perf/perf_cuda.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/perf/perf_cuda.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/arrays.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/arrays.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/arrays.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/arrays.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/arrays.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/hdr_common.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/hdr_common.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/hdr_common.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/hdr_common.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/hdr_common.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/tonemap.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/tonemap.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/tonemap.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/tonemap.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/tonemap.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/tonemap.cpp:        pow(abs(src), power, dst);
modules/photo/src/fast_nlmeans_multi_denoising_invoker.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/fast_nlmeans_multi_denoising_invoker.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/fast_nlmeans_multi_denoising_invoker.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/fast_nlmeans_multi_denoising_invoker.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/fast_nlmeans_multi_denoising_invoker.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/fast_nlmeans_multi_denoising_invoker.hpp:                    // copy class member to local variable for optimization
modules/photo/src/merge.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/merge.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/merge.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/merge.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/merge.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/merge.cpp:            contrast = abs(contrast);
modules/photo/src/calibrate.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/calibrate.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/calibrate.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/calibrate.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/calibrate.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/calibrate.cpp:            float diff = static_cast<float>(sum(sum(abs(new_response - response)))[0] / channels);
modules/photo/src/contrast_preserve.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/contrast_preserve.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/contrast_preserve.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/contrast_preserve.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/contrast_preserve.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/contrast_preserve.hpp:    Mat lab = Mat(img.size(),CV_32FC3);
modules/photo/src/contrast_preserve.hpp:    cvtColor(img,lab,COLOR_BGR2Lab);
modules/photo/src/contrast_preserve.hpp:    vector <Mat> lab_channel;
modules/photo/src/contrast_preserve.hpp:    split(lab,lab_channel);
modules/photo/src/contrast_preserve.hpp:    gradvector(lab_channel[0],ImL);
modules/photo/src/contrast_preserve.hpp:    gradvector(lab_channel[1],Ima);
modules/photo/src/contrast_preserve.hpp:    gradvector(lab_channel[2],Imb);
modules/photo/src/contrast_preserve.hpp:        sum += abs(alf[i]);
modules/photo/src/seamless_cloning.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/seamless_cloning.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/seamless_cloning.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/seamless_cloning.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/seamless_cloning.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/seamless_cloning.hpp:            void initVariables(const cv::Mat &destination, const cv::Mat &binaryMask);
modules/photo/src/hdr_common.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/hdr_common.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/hdr_common.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/hdr_common.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/hdr_common.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/align.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/align.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/align.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/align.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/align.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/align.cpp:        int width = src.cols - abs(shift.x);
modules/photo/src/align.cpp:        int height = src.rows - abs(shift.y);
modules/photo/src/align.cpp:        compare(abs(img - median), exclude_range, eb, CMP_GT);
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:            return std::abs((int)(a-b));
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:            return std::abs((int)(a[0]-b[0])) + std::abs((int)(a[1]-b[1]));
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:                std::abs((int)(a[0]-b[0])) +
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:                std::abs((int)(a[1]-b[1])) +
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:                std::abs((int)(a[2]-b[2]));
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:                std::abs((int)(a[0]-b[0])) +
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:                std::abs((int)(a[1]-b[1])) +
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:                std::abs((int)(a[2]-b[2])) +
modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp:                std::abs((int)(a[3]-b[3]));
modules/photo/src/seamless_cloning_impl.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/seamless_cloning_impl.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/seamless_cloning_impl.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/seamless_cloning_impl.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/seamless_cloning_impl.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/seamless_cloning_impl.cpp:            //most notable, saturate_cast rounds before truncating, here it's the opposite.
modules/photo/src/seamless_cloning_impl.cpp:void Cloning::initVariables(const Mat &destination, const Mat &binaryMask)
modules/photo/src/seamless_cloning_impl.cpp:    initVariables(destination,binaryMask);
modules/photo/src/seamless_cloning_impl.cpp:                    if(abs(patchXLinePtr[j] - patchYLinePtr[j]) >
modules/photo/src/seamless_cloning_impl.cpp:                       abs(destinationXLinePtr[j] - destinationYLinePtr[j]))
modules/photo/src/denoising.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/denoising.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/denoising.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/denoising.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/denoising.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/denoising.cpp:    Mat src_lab;
modules/photo/src/denoising.cpp:    cvtColor(src, src_lab, COLOR_LBGR2Lab);
modules/photo/src/denoising.cpp:    Mat ab(src_size, CV_MAKE_TYPE(depth, 2));
modules/photo/src/denoising.cpp:    Mat l_ab[] = { l, ab };
modules/photo/src/denoising.cpp:    mixChannels(&src_lab, 1, l_ab, 2, from_to, 3);
modules/photo/src/denoising.cpp:    fastNlMeansDenoising(ab, ab, hForColorComponents, templateWindowSize, searchWindowSize);
modules/photo/src/denoising.cpp:    Mat l_ab_denoised[] = { l, ab };
modules/photo/src/denoising.cpp:    Mat dst_lab(src_size, CV_MAKE_TYPE(depth, 3));
modules/photo/src/denoising.cpp:    mixChannels(l_ab_denoised, 2, &dst_lab, 1, from_to, 3);
modules/photo/src/denoising.cpp:    cvtColor(dst_lab, dst, COLOR_Lab2LBGR, cn);
modules/photo/src/denoising.cpp:    std::vector<Mat> src_lab(src_imgs_size);
modules/photo/src/denoising.cpp:    std::vector<Mat> ab(src_imgs_size);
modules/photo/src/denoising.cpp:        src_lab[i] = Mat::zeros(srcImgs[0].size(), type);
modules/photo/src/denoising.cpp:        ab[i] = Mat::zeros(srcImgs[0].size(), CV_MAKE_TYPE(depth, 2));
modules/photo/src/denoising.cpp:        cvtColor(srcImgs[i], src_lab[i], COLOR_LBGR2Lab);
modules/photo/src/denoising.cpp:        Mat l_ab[] = { l[i], ab[i] };
modules/photo/src/denoising.cpp:        mixChannels(&src_lab[i], 1, l_ab, 2, from_to, 3);
modules/photo/src/denoising.cpp:    Mat dst_ab;
modules/photo/src/denoising.cpp:        ab, dst_ab, imgToDenoiseIndex, temporalWindowSize,
modules/photo/src/denoising.cpp:    Mat l_ab_denoised[] = { dst_l, dst_ab };
modules/photo/src/denoising.cpp:    Mat dst_lab(srcImgs[0].size(), srcImgs[0].type());
modules/photo/src/denoising.cpp:    mixChannels(l_ab_denoised, 2, &dst_lab, 1, from_to, 3);
modules/photo/src/denoising.cpp:    cvtColor(dst_lab, dst, COLOR_Lab2LBGR);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    UMat src_lab;
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    cvtColor(src, src_lab, COLOR_LBGR2Lab);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    UMat ab(src.size(), CV_8UC2);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    std::vector<UMat> l_ab(2), l_ab_denoised(2);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    l_ab[0] = l;
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    l_ab[1] = ab;
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    l_ab_denoised[0].create(src.size(), CV_8U);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    l_ab_denoised[1].create(src.size(), CV_8UC2);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    mixChannels(std::vector<UMat>(1, src_lab), l_ab, from_to, 3);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    fastNlMeansDenoising(l_ab[0], l_ab_denoised[0], h, templateWindowSize, searchWindowSize);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    fastNlMeansDenoising(l_ab[1], l_ab_denoised[1], hForColorComponents, templateWindowSize, searchWindowSize);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    UMat dst_lab(src.size(), CV_8UC3);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    mixChannels(l_ab_denoised, std::vector<UMat>(1, dst_lab), from_to, 3);
modules/photo/src/fast_nlmeans_denoising_opencl.hpp:    cvtColor(dst_lab, dst, COLOR_Lab2LBGR, src.channels());
modules/photo/src/denoising.cuda.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/denoising.cuda.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/denoising.cuda.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/denoising.cuda.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/denoising.cuda.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/denoising.cuda.cpp:        void fnlm_split_channels(const PtrStepSz<uchar3>& lab, PtrStepb l, PtrStep<uchar2> ab, cudaStream_t stream);
modules/photo/src/denoising.cuda.cpp:        void fnlm_merge_channels(const PtrStepb& l, const PtrStep<uchar2>& ab, PtrStepSz<uchar3> lab, cudaStream_t stream);
modules/photo/src/denoising.cuda.cpp:    GpuMat lab = pool.getBuffer(src.size(), src.type());
modules/photo/src/denoising.cuda.cpp:    cv::cuda::cvtColor(src, lab, cv::COLOR_BGR2Lab, 0, stream);
modules/photo/src/denoising.cuda.cpp:    GpuMat ab = pool.getBuffer(src.size(), CV_8UC2);
modules/photo/src/denoising.cuda.cpp:    device::imgproc::fnlm_split_channels(lab, l, ab, StreamAccessor::getStream(stream));
modules/photo/src/denoising.cuda.cpp:    fastNlMeansDenoising(ab, ab, h_color, search_window, block_window, stream);
modules/photo/src/denoising.cuda.cpp:    device::imgproc::fnlm_merge_channels(l, ab, lab, StreamAccessor::getStream(stream));
modules/photo/src/denoising.cuda.cpp:    cv::cuda::cvtColor(lab, _dst, cv::COLOR_Lab2BGR, 0, stream);
modules/photo/src/inpaint.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/inpaint.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/inpaint.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/inpaint.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/inpaint.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/inpaint.cpp:            if( fabs(a11-a22) >= 1.0 )
modules/photo/src/inpaint.cpp:                              lev = (float)(1./(1+fabs(CV_MAT_ELEM(*t,float,k,l)-CV_MAT_ELEM(*t,float,i,j))));
modules/photo/src/inpaint.cpp:                              if (fabs(dir)<=0.01) dir=0.000001f;
modules/photo/src/inpaint.cpp:                              w = (float)fabs(dst*lev*dir);
modules/photo/src/inpaint.cpp:                              lev = (float)(1./(1+fabs(CV_MAT_ELEM(*t,float,k,l)-CV_MAT_ELEM(*t,float,i,j))));
modules/photo/src/inpaint.cpp:                              if (fabs(dir)<=0.01) dir=0.000001f;
modules/photo/src/inpaint.cpp:                              w = (float)fabs(dst*lev*dir);
modules/photo/src/inpaint.cpp:                                    gradI.x=(float)(abs(CV_MAT_3COLOR_ELEM(*out,uchar,kp+1,lm,color)-CV_MAT_3COLOR_ELEM(*out,uchar,kp,lm,color))+
modules/photo/src/inpaint.cpp:                                                    abs(CV_MAT_3COLOR_ELEM(*out,uchar,kp,lm,color)-CV_MAT_3COLOR_ELEM(*out,uchar,km-1,lm,color)));
modules/photo/src/inpaint.cpp:                                    gradI.x=(float)(abs(CV_MAT_3COLOR_ELEM(*out,uchar,kp+1,lm,color)-CV_MAT_3COLOR_ELEM(*out,uchar,kp,lm,color)))*2.0f;
modules/photo/src/inpaint.cpp:                                    gradI.x=(float)(abs(CV_MAT_3COLOR_ELEM(*out,uchar,kp,lm,color)-CV_MAT_3COLOR_ELEM(*out,uchar,km-1,lm,color)))*2.0f;
modules/photo/src/inpaint.cpp:                                    gradI.y=(float)(abs(CV_MAT_3COLOR_ELEM(*out,uchar,km,lp+1,color)-CV_MAT_3COLOR_ELEM(*out,uchar,km,lm,color))+
modules/photo/src/inpaint.cpp:                                                    abs(CV_MAT_3COLOR_ELEM(*out,uchar,km,lm,color)-CV_MAT_3COLOR_ELEM(*out,uchar,km,lm-1,color)));
modules/photo/src/inpaint.cpp:                                    gradI.y=(float)(abs(CV_MAT_3COLOR_ELEM(*out,uchar,km,lp+1,color)-CV_MAT_3COLOR_ELEM(*out,uchar,km,lm,color)))*2.0f;
modules/photo/src/inpaint.cpp:                                    gradI.y=(float)(abs(CV_MAT_3COLOR_ELEM(*out,uchar,km,lm,color)-CV_MAT_3COLOR_ELEM(*out,uchar,km,lm-1,color)))*2.0f;
modules/photo/src/inpaint.cpp:                              if (fabs(dir)<=0.01) {
modules/photo/src/inpaint.cpp:                                 dir = (float)fabs(VectorScalMult(r,gradI)/sqrt(VectorLength(r)*VectorLength(gradI)));
modules/photo/src/inpaint.cpp:                                    gradI.x=(float)(abs(CV_MAT_ELEM(*out,uchar,kp+1,lm)-CV_MAT_ELEM(*out,uchar,kp,lm))+
modules/photo/src/inpaint.cpp:                                                    abs(CV_MAT_ELEM(*out,uchar,kp,lm)-CV_MAT_ELEM(*out,uchar,km-1,lm)));
modules/photo/src/inpaint.cpp:                                    gradI.x=(float)(abs(CV_MAT_ELEM(*out,uchar,kp+1,lm)-CV_MAT_ELEM(*out,uchar,kp,lm)))*2.0f;
modules/photo/src/inpaint.cpp:                                    gradI.x=(float)(abs(CV_MAT_ELEM(*out,uchar,kp,lm)-CV_MAT_ELEM(*out,uchar,km-1,lm)))*2.0f;
modules/photo/src/inpaint.cpp:                                    gradI.y=(float)(abs(CV_MAT_ELEM(*out,uchar,km,lp+1)-CV_MAT_ELEM(*out,uchar,km,lm))+
modules/photo/src/inpaint.cpp:                                                    abs(CV_MAT_ELEM(*out,uchar,km,lm)-CV_MAT_ELEM(*out,uchar,km,lm-1)));
modules/photo/src/inpaint.cpp:                                    gradI.y=(float)(abs(CV_MAT_ELEM(*out,uchar,km,lp+1)-CV_MAT_ELEM(*out,uchar,km,lm)))*2.0f;
modules/photo/src/inpaint.cpp:                                    gradI.y=(float)(abs(CV_MAT_ELEM(*out,uchar,km,lm)-CV_MAT_ELEM(*out,uchar,km,lm-1)))*2.0f;
modules/photo/src/inpaint.cpp:                              if (fabs(dir)<=0.01) {
modules/photo/src/inpaint.cpp:                                 dir = (float)fabs(VectorScalMult(r,gradI)/sqrt(VectorLength(r)*VectorLength(gradI)));
modules/photo/src/opencl/nlmeans.cl:#pragma OPENCL_EXTENSION cl_amd_printf:enable
modules/photo/src/opencl/nlmeans.cl:#pragma OPENCL EXTENSION cl_amd_fp64:enable
modules/photo/src/opencl/nlmeans.cl:#pragma OPENCL EXTENSION cl_khr_fp64:enable
modules/photo/src/opencl/nlmeans.cl:    int_t retval = convert_int_t(abs_diff(a, b));
modules/photo/src/cuda/nlm.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/cuda/nlm.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/cuda/nlm.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/cuda/nlm.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/cuda/nlm.cu:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/cuda/nlm.cu:            mutable PtrStepi buffer;
modules/photo/src/cuda/nlm.cu:        __global__ void fnlm_split_kernel(const PtrStepSz<uchar3> lab, PtrStepb l, PtrStep<uchar2> ab)
modules/photo/src/cuda/nlm.cu:            if (x < lab.cols && y < lab.rows)
modules/photo/src/cuda/nlm.cu:                uchar3 p = lab(y, x);
modules/photo/src/cuda/nlm.cu:                ab(y,x) = make_uchar2(p.y, p.z);
modules/photo/src/cuda/nlm.cu:        void fnlm_split_channels(const PtrStepSz<uchar3>& lab, PtrStepb l, PtrStep<uchar2> ab, cudaStream_t stream)
modules/photo/src/cuda/nlm.cu:            dim3 g(divUp(lab.cols, b.x), divUp(lab.rows, b.y));
modules/photo/src/cuda/nlm.cu:            fnlm_split_kernel<<<g, b>>>(lab, l, ab);
modules/photo/src/cuda/nlm.cu:        __global__ void fnlm_merge_kernel(const PtrStepb l, const PtrStep<uchar2> ab, PtrStepSz<uchar3> lab)
modules/photo/src/cuda/nlm.cu:            if (x < lab.cols && y < lab.rows)
modules/photo/src/cuda/nlm.cu:                uchar2 p = ab(y, x);
modules/photo/src/cuda/nlm.cu:                lab(y, x) = make_uchar3(l(y, x), p.x, p.y);
modules/photo/src/cuda/nlm.cu:        void fnlm_merge_channels(const PtrStepb& l, const PtrStep<uchar2>& ab, PtrStepSz<uchar3> lab, cudaStream_t stream)
modules/photo/src/cuda/nlm.cu:            dim3 g(divUp(lab.cols, b.x), divUp(lab.rows, b.y));
modules/photo/src/cuda/nlm.cu:            fnlm_merge_kernel<<<g, b>>>(l, ab, lab);
modules/photo/src/fast_nlmeans_denoising_invoker.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/fast_nlmeans_denoising_invoker.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/fast_nlmeans_denoising_invoker.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/fast_nlmeans_denoising_invoker.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/fast_nlmeans_denoising_invoker.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/fast_nlmeans_denoising_invoker.hpp:                    // copy class member to local variable for optimization
modules/photo/src/npr.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/npr.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/npr.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/npr.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/npr.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/npr.cpp:    Mat lab = Mat(img.size(),CV_32FC3);
modules/photo/src/npr.cpp:    vector <Mat> lab_channel;
modules/photo/src/npr.cpp:    cvtColor(img,lab,COLOR_BGR2Lab);
modules/photo/src/npr.cpp:    split(lab,lab_channel);
modules/photo/src/npr.cpp:    lab_channel[0].convertTo(L,CV_32FC1,1.0/255.0);
modules/photo/src/npr.cpp:    L.convertTo(lab_channel[0],CV_32FC1,255);
modules/photo/src/npr.cpp:    merge(lab_channel,lab);
modules/photo/src/npr.cpp:    cvtColor(lab,result,COLOR_Lab2BGR);
modules/photo/src/npr.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/npr.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/npr.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/npr.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/npr.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/npr.hpp:    // Compute the box filter using a summed area table.
modules/photo/src/npr.hpp:                    distx.at<float>(i,k) + abs(derivx.at<float>(i,j*channel+c));
modules/photo/src/npr.hpp:                    disty.at<float>(k,j) + abs(derivy.at<float>(i,j*channel+c));
modules/photo/src/seamless_cloning.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/seamless_cloning.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/seamless_cloning.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/seamless_cloning.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/seamless_cloning.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/contrast_preserve.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/contrast_preserve.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/contrast_preserve.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/contrast_preserve.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/photo/src/contrast_preserve.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/contrast_preserve.cpp:    Mat lab = Mat(img.size(),CV_8UC3);
modules/photo/src/contrast_preserve.cpp:    cvtColor(I,lab,COLOR_BGR2Lab);
modules/photo/src/contrast_preserve.cpp:    vector <Mat> lab_channel;
modules/photo/src/contrast_preserve.cpp:    split(lab,lab_channel);
modules/photo/src/contrast_preserve.cpp:    dst.copyTo(lab_channel[0]);
modules/photo/src/contrast_preserve.cpp:    merge(lab_channel,lab);
modules/photo/src/contrast_preserve.cpp:    cvtColor(lab,color_boost,COLOR_Lab2BGR);
modules/photo/src/denoise_tvl1.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/photo/src/denoise_tvl1.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/photo/src/denoise_tvl1.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/photo/src/denoise_tvl1.cpp:// In no event shall the OpenCV Foundation or contributors be liable for any direct,
modules/photo/src/denoise_tvl1.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/photo/src/denoise_tvl1.cpp:            // P_ = P + sigma*nabla(X)
modules/photo/src/denoise_tvl1.cpp:                m = 1.0/std::max(std::abs(dy), 1.0);
modules/photo/src/denoise_tvl1.cpp:                // X1 = X + tau*(-nablaT(P))
modules/photo/src/denoise_tvl1.cpp:                        // X1 = X + tau*(-nablaT(P))
modules/videostab/CMakeLists.txt:set(the_description "Video stabilization")
modules/videostab/CMakeLists.txt:  ocv_warnings_disable(CMAKE_CXX_FLAGS -Wundef -Wmissing-declarations -Wshadow -Wunused-parameter)
modules/videostab/CMakeLists.txt:ocv_define_module(videostab opencv_imgproc opencv_features2d opencv_video opencv_photo opencv_calib3d
modules/videostab/include/opencv2/videostab.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab.hpp:  @defgroup videostab Video Stabilization
modules/videostab/include/opencv2/videostab.hpp:The video stabilization module contains a set of functions and classes that can be used to solve the
modules/videostab/include/opencv2/videostab.hpp:problem of video stabilization. There are a few methods implemented, most of them are descibed in
modules/videostab/include/opencv2/videostab.hpp: 1. "Full-Frame Video Stabilization with Motion Inpainting"
modules/videostab/include/opencv2/videostab.hpp: 2. "Auto-Directed Video Stabilization with Robust L1 Optimal Camera Paths"
modules/videostab/include/opencv2/videostab.hpp:         @defgroup videostab_motion Global Motion Estimation
modules/videostab/include/opencv2/videostab.hpp:The video stabilization module contains a set of functions and classes for global motion estimation
modules/videostab/include/opencv2/videostab.hpp:Both the functions and the classes are available.
modules/videostab/include/opencv2/videostab.hpp:         @defgroup videostab_marching Fast Marching Method
modules/videostab/include/opencv2/videostab.hpp:The Fast Marching Method @cite Telea04 is used in of the video stabilization routines to do motion and
modules/videostab/include/opencv2/videostab.hpp:#include "opencv2/videostab/stabilizer.hpp"
modules/videostab/include/opencv2/videostab.hpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/include/opencv2/videostab/global_motion.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/global_motion.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/global_motion.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/global_motion.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/global_motion.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/global_motion.hpp:#include "opencv2/videostab/optical_flow.hpp"
modules/videostab/include/opencv2/videostab/global_motion.hpp:#include "opencv2/videostab/motion_core.hpp"
modules/videostab/include/opencv2/videostab/global_motion.hpp:#include "opencv2/videostab/outlier_rejection.hpp"
modules/videostab/include/opencv2/videostab/global_motion.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/global_motion.hpp://! @addtogroup videostab_motion
modules/videostab/include/opencv2/videostab/global_motion.hpp:@param model Motion model. See cv::videostab::MotionModel.
modules/videostab/include/opencv2/videostab/global_motion.hpp:@param params RANSAC method parameters. See videostab::RansacParams.
modules/videostab/include/opencv2/videostab/global_motion.hpp:    @param val Motion model. See cv::videostab::MotionModel.
modules/videostab/include/opencv2/videostab/global_motion.hpp:    @return Motion model. See cv::videostab::MotionModel.
modules/videostab/include/opencv2/videostab/global_motion.hpp:@note To be able to use this method you must build OpenCV with CLP library support. :
modules/videostab/include/opencv2/videostab/global_motion.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/optical_flow.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/optical_flow.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/optical_flow.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/optical_flow.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/optical_flow.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/optical_flow.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/optical_flow.hpp://! @addtogroup videostab
modules/videostab/include/opencv2/videostab/optical_flow.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/inpainting.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/inpainting.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/inpainting.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/inpainting.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/inpainting.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/inpainting.hpp:#include "opencv2/videostab/optical_flow.hpp"
modules/videostab/include/opencv2/videostab/inpainting.hpp:#include "opencv2/videostab/fast_marching.hpp"
modules/videostab/include/opencv2/videostab/inpainting.hpp:#include "opencv2/videostab/global_motion.hpp"
modules/videostab/include/opencv2/videostab/inpainting.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/inpainting.hpp://! @addtogroup videostab
modules/videostab/include/opencv2/videostab/inpainting.hpp:          stabilizedFrames_(0), stabilizationMotions_(0) {}
modules/videostab/include/opencv2/videostab/inpainting.hpp:    // data from stabilizer
modules/videostab/include/opencv2/videostab/inpainting.hpp:    virtual void setStabilizedFrames(const std::vector<Mat> &val) { stabilizedFrames_ = &val; }
modules/videostab/include/opencv2/videostab/inpainting.hpp:    virtual const std::vector<Mat>& stabilizedFrames() const { return *stabilizedFrames_; }
modules/videostab/include/opencv2/videostab/inpainting.hpp:    virtual void setStabilizationMotions(const std::vector<Mat> &val) { stabilizationMotions_ = &val; }
modules/videostab/include/opencv2/videostab/inpainting.hpp:    virtual const std::vector<Mat>& stabilizationMotions() const { return *stabilizationMotions_; }
modules/videostab/include/opencv2/videostab/inpainting.hpp:    const std::vector<Mat> *stabilizedFrames_;
modules/videostab/include/opencv2/videostab/inpainting.hpp:    const std::vector<Mat> *stabilizationMotions_;
modules/videostab/include/opencv2/videostab/inpainting.hpp:    virtual void setStabilizedFrames(const std::vector<Mat> &val);
modules/videostab/include/opencv2/videostab/inpainting.hpp:    virtual void setStabilizationMotions(const std::vector<Mat> &val);
modules/videostab/include/opencv2/videostab/inpainting.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/deblurring.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/deblurring.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/deblurring.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/deblurring.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/deblurring.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/deblurring.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/deblurring.hpp://! @addtogroup videostab
modules/videostab/include/opencv2/videostab/deblurring.hpp:    // data from stabilizer
modules/videostab/include/opencv2/videostab/deblurring.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/motion_core.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/motion_core.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/motion_core.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/motion_core.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/motion_core.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/motion_core.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/motion_core.hpp://! @addtogroup videostab_motion
modules/videostab/include/opencv2/videostab/motion_core.hpp:    float prob; //!< probability of success
modules/videostab/include/opencv2/videostab/motion_core.hpp:    @param prob Required success probability.
modules/videostab/include/opencv2/videostab/motion_core.hpp:    @param model Motion model. See cv::videostab::MotionModel.
modules/videostab/include/opencv2/videostab/motion_core.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:#include "opencv2/videostab/global_motion.hpp"
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:#include "opencv2/videostab/log.hpp"
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp://! @addtogroup videostab
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:    // data from stabilizer
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:    virtual void setStabilizationMotions(const std::vector<Mat> &val) { stabilizationMotions_ = &val; }
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:    virtual const std::vector<Mat>& stabilizationMotions() const { return *stabilizationMotions_; }
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:    const std::vector<Mat> *stabilizationMotions_;
modules/videostab/include/opencv2/videostab/wobble_suppression.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:#include "opencv2/videostab/global_motion.hpp"
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp://! @addtogroup videostab_motion
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:class CV_EXPORTS IMotionStabilizer
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    virtual ~IMotionStabilizer() {}
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    virtual void stabilize(
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:            Mat *stabilizationMotions) = 0;
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:class CV_EXPORTS MotionStabilizationPipeline : public IMotionStabilizer
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    void pushBack(Ptr<IMotionStabilizer> stabilizer) { stabilizers_.push_back(stabilizer); }
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    bool empty() const { return stabilizers_.empty(); }
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    virtual void stabilize(
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:            Mat *stabilizationMotions);
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    std::vector<Ptr<IMotionStabilizer> > stabilizers_;
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:class CV_EXPORTS MotionFilterBase : public IMotionStabilizer
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    virtual Mat stabilize(
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    virtual void stabilize(
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:            Mat *stabilizationMotions);
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    virtual Mat stabilize(
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:class CV_EXPORTS LpMotionStabilizer : public IMotionStabilizer
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    LpMotionStabilizer(MotionModel model = MM_SIMILARITY);
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:    virtual void stabilize(
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:            Mat *stabilizationMotions);
modules/videostab/include/opencv2/videostab/motion_stabilizing.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/outlier_rejection.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/outlier_rejection.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/outlier_rejection.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/outlier_rejection.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/outlier_rejection.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/outlier_rejection.hpp:#include "opencv2/videostab/motion_core.hpp"
modules/videostab/include/opencv2/videostab/outlier_rejection.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/outlier_rejection.hpp://! @addtogroup videostab
modules/videostab/include/opencv2/videostab/outlier_rejection.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/ring_buffer.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/ring_buffer.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/ring_buffer.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/ring_buffer.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/ring_buffer.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/ring_buffer.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/ring_buffer.hpp://! @addtogroup videostab
modules/videostab/include/opencv2/videostab/ring_buffer.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp:#include "opencv2/videostab/fast_marching.hpp"
modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/fast_marching.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/fast_marching.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/fast_marching.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/fast_marching.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/fast_marching.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/fast_marching.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/fast_marching.hpp://! @addtogroup videostab_marching
modules/videostab/include/opencv2/videostab/fast_marching.hpp:    that the pixel value is known, other values aren't acceptable.
modules/videostab/include/opencv2/videostab/fast_marching.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/frame_source.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/frame_source.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/frame_source.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/frame_source.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/frame_source.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/frame_source.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/frame_source.hpp://! @addtogroup videostab
modules/videostab/include/opencv2/videostab/frame_source.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/stabilizer.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/stabilizer.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/stabilizer.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/stabilizer.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/stabilizer.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/stabilizer.hpp:#include "opencv2/videostab/global_motion.hpp"
modules/videostab/include/opencv2/videostab/stabilizer.hpp:#include "opencv2/videostab/motion_stabilizing.hpp"
modules/videostab/include/opencv2/videostab/stabilizer.hpp:#include "opencv2/videostab/frame_source.hpp"
modules/videostab/include/opencv2/videostab/stabilizer.hpp:#include "opencv2/videostab/log.hpp"
modules/videostab/include/opencv2/videostab/stabilizer.hpp:#include "opencv2/videostab/inpainting.hpp"
modules/videostab/include/opencv2/videostab/stabilizer.hpp:#include "opencv2/videostab/deblurring.hpp"
modules/videostab/include/opencv2/videostab/stabilizer.hpp:#include "opencv2/videostab/wobble_suppression.hpp"
modules/videostab/include/opencv2/videostab/stabilizer.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/stabilizer.hpp://! @addtogroup videostab
modules/videostab/include/opencv2/videostab/stabilizer.hpp:class CV_EXPORTS StabilizerBase
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    virtual ~StabilizerBase() {}
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    StabilizerBase();
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    Mat nextStabilizedFrame();
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    virtual Mat estimateStabilizationMotion() = 0;
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    void stabilizeFrame();
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    int curStabilizedPos_;
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    std::vector<Mat> stabilizedFrames_;
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    std::vector<Mat> stabilizedMasks_;
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    std::vector<Mat> stabilizationMotions_;
modules/videostab/include/opencv2/videostab/stabilizer.hpp:class CV_EXPORTS OnePassStabilizer : public StabilizerBase, public IFrameSource
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    OnePassStabilizer();
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    virtual Mat nextFrame() { return nextStabilizedFrame(); }
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    virtual Mat estimateStabilizationMotion();
modules/videostab/include/opencv2/videostab/stabilizer.hpp:class CV_EXPORTS TwoPassStabilizer : public StabilizerBase, public IFrameSource
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    TwoPassStabilizer();
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    void setMotionStabilizer(Ptr<IMotionStabilizer> val) { motionStabilizer_ = val; }
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    Ptr<IMotionStabilizer> motionStabilizer() const { return motionStabilizer_; }
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    virtual Mat estimateStabilizationMotion();
modules/videostab/include/opencv2/videostab/stabilizer.hpp:    Ptr<IMotionStabilizer> motionStabilizer_;
modules/videostab/include/opencv2/videostab/stabilizer.hpp:} // namespace videostab
modules/videostab/include/opencv2/videostab/log.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/include/opencv2/videostab/log.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/include/opencv2/videostab/log.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/include/opencv2/videostab/log.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/include/opencv2/videostab/log.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/include/opencv2/videostab/log.hpp:namespace videostab
modules/videostab/include/opencv2/videostab/log.hpp://! @addtogroup videostab
modules/videostab/include/opencv2/videostab/log.hpp:} // namespace videostab
modules/videostab/src/motion_stabilizing.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/motion_stabilizing.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/motion_stabilizing.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/motion_stabilizing.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/motion_stabilizing.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/motion_stabilizing.cpp:#include "opencv2/videostab/motion_stabilizing.hpp"
modules/videostab/src/motion_stabilizing.cpp:#include "opencv2/videostab/global_motion.hpp"
modules/videostab/src/motion_stabilizing.cpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/src/motion_stabilizing.cpp:namespace videostab
modules/videostab/src/motion_stabilizing.cpp:void MotionStabilizationPipeline::stabilize(
modules/videostab/src/motion_stabilizing.cpp:        int size, const std::vector<Mat> &motions, std::pair<int,int> range, Mat *stabilizationMotions)
modules/videostab/src/motion_stabilizing.cpp:    std::vector<Mat> stabilizationMotions_(size);
modules/videostab/src/motion_stabilizing.cpp:        stabilizationMotions[i] = Mat::eye(3, 3, CV_32F);
modules/videostab/src/motion_stabilizing.cpp:    for (size_t i = 0; i < stabilizers_.size(); ++i)
modules/videostab/src/motion_stabilizing.cpp:        stabilizers_[i]->stabilize(size, updatedMotions, range, &stabilizationMotions_[0]);
modules/videostab/src/motion_stabilizing.cpp:            stabilizationMotions[k] = stabilizationMotions_[k] * stabilizationMotions[k];
modules/videostab/src/motion_stabilizing.cpp:            Mat S0 = stabilizationMotions[j];
modules/videostab/src/motion_stabilizing.cpp:            Mat S1 = stabilizationMotions[j+1];
modules/videostab/src/motion_stabilizing.cpp:void MotionFilterBase::stabilize(
modules/videostab/src/motion_stabilizing.cpp:        int size, const std::vector<Mat> &motions, std::pair<int,int> range, Mat *stabilizationMotions)
modules/videostab/src/motion_stabilizing.cpp:        stabilizationMotions[i] = stabilize(i, motions, range);
modules/videostab/src/motion_stabilizing.cpp:Mat GaussianMotionFilter::stabilize(int idx, const std::vector<Mat> &motions, std::pair<int,int> range)
modules/videostab/src/motion_stabilizing.cpp:LpMotionStabilizer::LpMotionStabilizer(MotionModel model)
modules/videostab/src/motion_stabilizing.cpp:void LpMotionStabilizer::stabilize(int, const std::vector<Mat>&, std::pair<int,int>, Mat*)
modules/videostab/src/motion_stabilizing.cpp:void LpMotionStabilizer::stabilize(
modules/videostab/src/motion_stabilizing.cpp:        int size, const std::vector<Mat> &motions, std::pair<int,int> /*range*/, Mat *stabilizationMotions)
modules/videostab/src/motion_stabilizing.cpp:    Mat *S = stabilizationMotions;
modules/videostab/src/motion_stabilizing.cpp:    // for each slack variable e[t] (error bound)
modules/videostab/src/motion_stabilizing.cpp:} // namespace videostab
modules/videostab/src/outlier_rejection.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/outlier_rejection.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/outlier_rejection.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/outlier_rejection.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/outlier_rejection.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/outlier_rejection.cpp:#include "opencv2/videostab/outlier_rejection.hpp"
modules/videostab/src/outlier_rejection.cpp:namespace videostab
modules/videostab/src/outlier_rejection.cpp:} // namespace videostab
modules/videostab/src/frame_source.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/frame_source.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/frame_source.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/frame_source.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/frame_source.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/frame_source.cpp:#include "opencv2/videostab/frame_source.hpp"
modules/videostab/src/frame_source.cpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/src/frame_source.cpp:namespace videostab
modules/videostab/src/frame_source.cpp:} // namespace videostab
modules/videostab/src/stabilizer.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/stabilizer.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/stabilizer.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/stabilizer.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/stabilizer.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/stabilizer.cpp:#include "opencv2/videostab/stabilizer.hpp"
modules/videostab/src/stabilizer.cpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/src/stabilizer.cpp:namespace videostab
modules/videostab/src/stabilizer.cpp:StabilizerBase::StabilizerBase()
modules/videostab/src/stabilizer.cpp:void StabilizerBase::reset()
modules/videostab/src/stabilizer.cpp:    curStabilizedPos_ = -1;
modules/videostab/src/stabilizer.cpp:    stabilizedFrames_.clear();
modules/videostab/src/stabilizer.cpp:    stabilizedMasks_.clear();
modules/videostab/src/stabilizer.cpp:    stabilizationMotions_.clear();
modules/videostab/src/stabilizer.cpp:Mat StabilizerBase::nextStabilizedFrame()
modules/videostab/src/stabilizer.cpp:    if (curStabilizedPos_ == curPos_ && curStabilizedPos_ != -1)
modules/videostab/src/stabilizer.cpp:    while (processed && curStabilizedPos_ == -1);
modules/videostab/src/stabilizer.cpp:    if (curStabilizedPos_ == -1)
modules/videostab/src/stabilizer.cpp:    return postProcessFrame(at(curStabilizedPos_, stabilizedFrames_));
modules/videostab/src/stabilizer.cpp:bool StabilizerBase::doOneIteration()
modules/videostab/src/stabilizer.cpp:                curStabilizedPos_ = curPos_ - radius_;
modules/videostab/src/stabilizer.cpp:                stabilizeFrame();
modules/videostab/src/stabilizer.cpp:    if (curStabilizedPos_ < curPos_)
modules/videostab/src/stabilizer.cpp:        curStabilizedPos_++;
modules/videostab/src/stabilizer.cpp:        at(curStabilizedPos_ + radius_, frames_) = at(curPos_, frames_);
modules/videostab/src/stabilizer.cpp:        at(curStabilizedPos_ + radius_ - 1, motions_) = Mat::eye(3, 3, CV_32F);
modules/videostab/src/stabilizer.cpp:        stabilizeFrame();
modules/videostab/src/stabilizer.cpp:void StabilizerBase::setUp(const Mat &firstFrame)
modules/videostab/src/stabilizer.cpp:        inpainter_->setStabilizedFrames(stabilizedFrames_);
modules/videostab/src/stabilizer.cpp:        inpainter_->setStabilizationMotions(stabilizationMotions_);
modules/videostab/src/stabilizer.cpp:void StabilizerBase::stabilizeFrame()
modules/videostab/src/stabilizer.cpp:    Mat stabilizationMotion = estimateStabilizationMotion();
modules/videostab/src/stabilizer.cpp:        stabilizationMotion = ensureInclusionConstraint(stabilizationMotion, frameSize_, trimRatio_);
modules/videostab/src/stabilizer.cpp:    at(curStabilizedPos_, stabilizationMotions_) = stabilizationMotion;
modules/videostab/src/stabilizer.cpp:        at(curStabilizedPos_, frames_).copyTo(preProcessedFrame_);
modules/videostab/src/stabilizer.cpp:        deblurer_->deblur(curStabilizedPos_, preProcessedFrame_);
modules/videostab/src/stabilizer.cpp:        preProcessedFrame_ = at(curStabilizedPos_, frames_);
modules/videostab/src/stabilizer.cpp:    // apply stabilization transformation
modules/videostab/src/stabilizer.cpp:                preProcessedFrame_, at(curStabilizedPos_, stabilizedFrames_),
modules/videostab/src/stabilizer.cpp:                stabilizationMotion(Rect(0,0,3,2)), frameSize_, INTER_LINEAR, borderMode_);
modules/videostab/src/stabilizer.cpp:                preProcessedFrame_, at(curStabilizedPos_, stabilizedFrames_),
modules/videostab/src/stabilizer.cpp:                stabilizationMotion, frameSize_, INTER_LINEAR, borderMode_);
modules/videostab/src/stabilizer.cpp:                    frameMask_, at(curStabilizedPos_, stabilizedMasks_),
modules/videostab/src/stabilizer.cpp:                    stabilizationMotion(Rect(0,0,3,2)), frameSize_, INTER_NEAREST);
modules/videostab/src/stabilizer.cpp:                    frameMask_, at(curStabilizedPos_, stabilizedMasks_),
modules/videostab/src/stabilizer.cpp:                    stabilizationMotion, frameSize_, INTER_NEAREST);
modules/videostab/src/stabilizer.cpp:        erode(at(curStabilizedPos_, stabilizedMasks_), at(curStabilizedPos_, stabilizedMasks_),
modules/videostab/src/stabilizer.cpp:        at(curStabilizedPos_, stabilizedMasks_).copyTo(inpaintingMask_);
modules/videostab/src/stabilizer.cpp:            curStabilizedPos_, at(curStabilizedPos_, stabilizedFrames_), inpaintingMask_);
modules/videostab/src/stabilizer.cpp:Mat StabilizerBase::postProcessFrame(const Mat &frame)
modules/videostab/src/stabilizer.cpp:void StabilizerBase::logProcessingTime()
modules/videostab/src/stabilizer.cpp:OnePassStabilizer::OnePassStabilizer()
modules/videostab/src/stabilizer.cpp:void OnePassStabilizer::reset()
modules/videostab/src/stabilizer.cpp:    StabilizerBase::reset();
modules/videostab/src/stabilizer.cpp:void OnePassStabilizer::setUp(const Mat &firstFrame)
modules/videostab/src/stabilizer.cpp:    stabilizedFrames_.resize(cacheSize);
modules/videostab/src/stabilizer.cpp:    stabilizedMasks_.resize(cacheSize);
modules/videostab/src/stabilizer.cpp:    stabilizationMotions_.resize(cacheSize);
modules/videostab/src/stabilizer.cpp:    StabilizerBase::setUp(firstFrame);
modules/videostab/src/stabilizer.cpp:Mat OnePassStabilizer::estimateMotion()
modules/videostab/src/stabilizer.cpp:Mat OnePassStabilizer::estimateStabilizationMotion()
modules/videostab/src/stabilizer.cpp:    return motionFilter_->stabilize(curStabilizedPos_, motions_, std::make_pair(0, curPos_));
modules/videostab/src/stabilizer.cpp:Mat OnePassStabilizer::postProcessFrame(const Mat &frame)
modules/videostab/src/stabilizer.cpp:    return StabilizerBase::postProcessFrame(frame);
modules/videostab/src/stabilizer.cpp:TwoPassStabilizer::TwoPassStabilizer()
modules/videostab/src/stabilizer.cpp:    setMotionStabilizer(makePtr<GaussianMotionFilter>());
modules/videostab/src/stabilizer.cpp:void TwoPassStabilizer::reset()
modules/videostab/src/stabilizer.cpp:    StabilizerBase::reset();
modules/videostab/src/stabilizer.cpp:Mat TwoPassStabilizer::nextFrame()
modules/videostab/src/stabilizer.cpp:    return StabilizerBase::nextStabilizedFrame();
modules/videostab/src/stabilizer.cpp:        int frameCount, const std::vector<Mat> &motions, const std::vector<Mat> &stabilizationMotions)
modules/videostab/src/stabilizer.cpp:    std::ofstream fs("log_stab.csv");
modules/videostab/src/stabilizer.cpp:        Mat_<float> M = stabilizationMotions[i] * getMotion(0, i, motions);
modules/videostab/src/stabilizer.cpp:void TwoPassStabilizer::runPrePassIfNecessary()
modules/videostab/src/stabilizer.cpp:        // stabilize
modules/videostab/src/stabilizer.cpp:        stabilizationMotions_.resize(frameCount_);
modules/videostab/src/stabilizer.cpp:        motionStabilizer_->stabilize(
modules/videostab/src/stabilizer.cpp:            frameCount_, motions_, std::make_pair(0, frameCount_ - 1), &stabilizationMotions_[0]);
modules/videostab/src/stabilizer.cpp:        log_->print("motion stabilization time: %.3f sec\n",
modules/videostab/src/stabilizer.cpp:                Mat S = stabilizationMotions_[i];
modules/videostab/src/stabilizer.cpp:        saveMotions(frameCount_, motions_, stabilizationMotions_);
modules/videostab/src/stabilizer.cpp:void TwoPassStabilizer::setUp(const Mat &firstFrame)
modules/videostab/src/stabilizer.cpp:    stabilizedFrames_.resize(cacheSize);
modules/videostab/src/stabilizer.cpp:    stabilizedMasks_.resize(cacheSize);
modules/videostab/src/stabilizer.cpp:        wobbleSuppressor_->setStabilizationMotions(stabilizationMotions_);
modules/videostab/src/stabilizer.cpp:    StabilizerBase::setUp(firstFrame);
modules/videostab/src/stabilizer.cpp:Mat TwoPassStabilizer::estimateMotion()
modules/videostab/src/stabilizer.cpp:Mat TwoPassStabilizer::estimateStabilizationMotion()
modules/videostab/src/stabilizer.cpp:    return stabilizationMotions_[curStabilizedPos_].clone();
modules/videostab/src/stabilizer.cpp:Mat TwoPassStabilizer::postProcessFrame(const Mat &frame)
modules/videostab/src/stabilizer.cpp:    wobbleSuppressor_->suppress(curStabilizedPos_, frame, suppressedFrame_);
modules/videostab/src/stabilizer.cpp:    return StabilizerBase::postProcessFrame(suppressedFrame_);
modules/videostab/src/stabilizer.cpp:} // namespace videostab
modules/videostab/src/log.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/log.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/log.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/log.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/log.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/log.cpp:#include "opencv2/videostab/log.hpp"
modules/videostab/src/log.cpp:namespace videostab
modules/videostab/src/log.cpp:} // namespace videostab
modules/videostab/src/global_motion.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/global_motion.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/global_motion.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/global_motion.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/global_motion.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/global_motion.cpp:#include "opencv2/videostab/global_motion.hpp"
modules/videostab/src/global_motion.cpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/src/global_motion.cpp:#include "opencv2/videostab/outlier_rejection.hpp"
modules/videostab/src/global_motion.cpp:namespace videostab
modules/videostab/src/global_motion.cpp:    CV_Assert(cuda::getCudaEnabledDeviceCount() > 0);
modules/videostab/src/global_motion.cpp:} // namespace videostab
modules/videostab/src/deblurring.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/deblurring.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/deblurring.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/deblurring.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/deblurring.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/deblurring.cpp:#include "opencv2/videostab/deblurring.hpp"
modules/videostab/src/deblurring.cpp:#include "opencv2/videostab/global_motion.hpp"
modules/videostab/src/deblurring.cpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/src/deblurring.cpp:namespace videostab
modules/videostab/src/deblurring.cpp:                                (sensitivity_ + std::abs(intensity(p1) - intensity(p)));
modules/videostab/src/deblurring.cpp:} // namespace videostab
modules/videostab/src/fast_marching.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/fast_marching.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/fast_marching.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/fast_marching.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/fast_marching.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/fast_marching.cpp:#include "opencv2/videostab/fast_marching.hpp"
modules/videostab/src/fast_marching.cpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/src/fast_marching.cpp:namespace videostab
modules/videostab/src/fast_marching.cpp:} // namespace videostab
modules/videostab/src/optical_flow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/optical_flow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/optical_flow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/optical_flow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/optical_flow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/optical_flow.cpp:#include "opencv2/videostab/optical_flow.hpp"
modules/videostab/src/optical_flow.cpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/src/optical_flow.cpp:namespace videostab
modules/videostab/src/optical_flow.cpp:    CV_Assert(cuda::getCudaEnabledDeviceCount() > 0);
modules/videostab/src/optical_flow.cpp:    CV_Assert(cuda::getCudaEnabledDeviceCount() > 0);
modules/videostab/src/optical_flow.cpp:} // namespace videostab
modules/videostab/src/wobble_suppression.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/wobble_suppression.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/wobble_suppression.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/wobble_suppression.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/wobble_suppression.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/wobble_suppression.cpp:#include "opencv2/videostab/wobble_suppression.hpp"
modules/videostab/src/wobble_suppression.cpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/src/wobble_suppression.cpp:namespace videostab
modules/videostab/src/wobble_suppression.cpp:WobbleSuppressorBase::WobbleSuppressorBase() : motions_(0), stabilizationMotions_(0)
modules/videostab/src/wobble_suppression.cpp:    CV_Assert(motions_ && stabilizationMotions_);
modules/videostab/src/wobble_suppression.cpp:    Mat S1 = (*stabilizationMotions_)[idx];
modules/videostab/src/wobble_suppression.cpp:    CV_Assert(motions_ && stabilizationMotions_);
modules/videostab/src/wobble_suppression.cpp:    Mat S1 = (*stabilizationMotions_)[idx];
modules/videostab/src/wobble_suppression.cpp:} // namespace videostab
modules/videostab/src/clp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/clp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/clp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/clp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/clp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/inpainting.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/inpainting.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/inpainting.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/inpainting.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/inpainting.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/inpainting.cpp:#include "opencv2/videostab/inpainting.hpp"
modules/videostab/src/inpainting.cpp:#include "opencv2/videostab/global_motion.hpp"
modules/videostab/src/inpainting.cpp:#include "opencv2/videostab/fast_marching.hpp"
modules/videostab/src/inpainting.cpp:#include "opencv2/videostab/ring_buffer.hpp"
modules/videostab/src/inpainting.cpp:namespace videostab
modules/videostab/src/inpainting.cpp:void InpaintingPipeline::setStabilizedFrames(const std::vector<Mat> &val)
modules/videostab/src/inpainting.cpp:        inpainters_[i]->setStabilizedFrames(val);
modules/videostab/src/inpainting.cpp:    InpainterBase::setStabilizedFrames(val);
modules/videostab/src/inpainting.cpp:void InpaintingPipeline::setStabilizationMotions(const std::vector<Mat> &val)
modules/videostab/src/inpainting.cpp:        inpainters_[i]->setStabilizationMotions(val);
modules/videostab/src/inpainting.cpp:    InpainterBase::setStabilizationMotions(val);
modules/videostab/src/inpainting.cpp:    Mat invS = at(idx, *stabilizationMotions_).inv();
modules/videostab/src/inpainting.cpp:                    err += std::abs(intensity(frame1.at<Point3_<uchar> >(y1,x1)) -
modules/videostab/src/inpainting.cpp:        Mat motion0to1 = getMotion(idx, idx + i, *motions_) * at(idx, *stabilizationMotions_).inv();
modules/videostab/src/inpainting.cpp:} // namespace videostab
modules/videostab/src/cuda/global_motion.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/cuda/global_motion.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/cuda/global_motion.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/cuda/global_motion.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/cuda/global_motion.cu:// and on any theory of liability, whether in contract, strict liability,
modules/videostab/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/videostab/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/videostab/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/videostab/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/videostab/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/CMakeLists.txt:  ocv_module_disable(cudawarping)
modules/cudawarping/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4324 /wd4512 -Wundef -Wmissing-declarations -Wshadow)
modules/cudawarping/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/test/test_remap.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/test/test_remap.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/test/test_remap.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/test/test_remap.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/test/test_remap.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/test/test_warp_perspective.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/test/test_warp_perspective.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/test/test_warp_perspective.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/test/test_warp_perspective.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/test/test_warp_perspective.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/test/test_warp_affine.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/test/test_warp_affine.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/test/test_warp_affine.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/test/test_warp_affine.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/test/test_warp_affine.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/test/test_resize.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/test/test_resize.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/test/test_resize.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/test/test_resize.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/test/test_resize.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/test/interpolation.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/test/interpolation.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/test/interpolation.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/test/interpolation.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/test/interpolation.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/test/interpolation.hpp:        float x = fabsf(x_);
modules/cudawarping/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/test/test_pyramids.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/test/test_pyramids.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/test/test_pyramids.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/test/test_pyramids.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/test/test_pyramids.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/include/opencv2/cudawarping.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/include/opencv2/cudawarping.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/include/opencv2/cudawarping.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/include/opencv2/cudawarping.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/include/opencv2/cudawarping.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/perf/perf_warping.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/perf/perf_warping.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/perf/perf_warping.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/perf/perf_warping.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/perf/perf_warping.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/warp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/warp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/warp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/warp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/warp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/warp.cpp:    static const bool useNppTab[6][4][3] =
modules/cudawarping/src/warp.cpp:    bool useNpp = borderMode == BORDER_CONSTANT && ofs.x == 0 && ofs.y == 0 && useNppTab[src.depth()][src.channels() - 1][interpolation];
modules/cudawarping/src/warp.cpp:    static const bool useNppTab[6][4][3] =
modules/cudawarping/src/warp.cpp:    bool useNpp = borderMode == BORDER_CONSTANT && ofs.x == 0 && ofs.y == 0 && useNppTab[src.depth()][src.channels() - 1][interpolation];
modules/cudawarping/src/resize.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/resize.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/resize.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/resize.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/resize.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/pyramids.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/pyramids.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/pyramids.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/pyramids.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/pyramids.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/cuda/remap.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/cuda/remap.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/cuda/remap.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/cuda/remap.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/cuda/remap.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/cuda/pyr_up.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/cuda/pyr_up.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/cuda/pyr_up.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/cuda/pyr_up.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/cuda/pyr_up.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/cuda/pyr_up.cu:                srcx = ::abs(srcx);
modules/cudawarping/src/cuda/pyr_up.cu:                srcy = ::abs(srcy);
modules/cudawarping/src/cuda/pyr_down.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/cuda/pyr_down.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/cuda/pyr_down.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/cuda/pyr_down.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/cuda/pyr_down.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/cuda/warp.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/cuda/warp.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/cuda/warp.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/cuda/warp.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/cuda/warp.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/cuda/resize.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/cuda/resize.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/cuda/resize.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/cuda/resize.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/cuda/resize.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/cuda/resize.cu:            if (std::abs(fx - iscale_x) < FLT_MIN && std::abs(fy - iscale_y) < FLT_MIN)
modules/cudawarping/src/remap.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/remap.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/remap.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/remap.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/remap.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudawarping/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudawarping/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudawarping/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudawarping/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudawarping/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/CMakeLists.txt:  ocv_module_disable(superres)
modules/superres/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 -Wundef -Wshadow)
modules/superres/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/test/test_superres.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/test/test_superres.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/test/test_superres.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/test/test_superres.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/test/test_superres.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/include/opencv2/superres.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/include/opencv2/superres.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/include/opencv2/superres.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/include/opencv2/superres.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/include/opencv2/superres.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/include/opencv2/superres.hpp:            /** @see setLabmda */
modules/superres/include/opencv2/superres.hpp:            virtual double getLabmda() const = 0;
modules/superres/include/opencv2/superres.hpp:            /** @copybrief getLabmda @see getLabmda */
modules/superres/include/opencv2/superres.hpp:            virtual void setLabmda(double val) = 0;
modules/superres/include/opencv2/superres/optical_flow.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/include/opencv2/superres/optical_flow.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/include/opencv2/superres/optical_flow.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/include/opencv2/superres/optical_flow.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/include/opencv2/superres/optical_flow.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/perf/perf_superres.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/perf/perf_superres.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/perf/perf_superres.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/perf/perf_superres.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/perf/perf_superres.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/btv_l1_cuda.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/btv_l1_cuda.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/btv_l1_cuda.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/btv_l1_cuda.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/btv_l1_cuda.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/btv_l1_cuda.cpp:    CV_Error(Error::StsNotImplemented, "The called functionality is disabled for current build or platform");
modules/superres/src/btv_l1_cuda.cpp:                btvWeights[ind] = pow(alpha_f, std::abs(m) + std::abs(l));
modules/superres/src/btv_l1_cuda.cpp:        CV_IMPL_PROPERTY(double, Labmda, lambda_)
modules/superres/src/input_array_utility.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/input_array_utility.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/input_array_utility.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/input_array_utility.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/input_array_utility.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/frame_source.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/frame_source.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/frame_source.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/frame_source.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/frame_source.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/frame_source.cpp:    CV_Error(cv::Error::StsNotImplemented, "The called functionality is disabled for current build or platform");
modules/superres/src/frame_source.cpp:    CV_Error(cv::Error::StsNotImplemented, "The called functionality is disabled for current build or platform");
modules/superres/src/frame_source.cpp:    CV_Error(cv::Error::StsNotImplemented, "The called functionality is disabled for current build or platform");
modules/superres/src/super_resolution.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/super_resolution.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/super_resolution.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/super_resolution.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/super_resolution.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/optical_flow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/optical_flow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/optical_flow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/optical_flow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/optical_flow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/optical_flow.cpp:    CV_Error(cv::Error::StsNotImplemented, "The called functionality is disabled for current build or platform");
modules/superres/src/optical_flow.cpp:    CV_Error(cv::Error::StsNotImplemented, "The called functionality is disabled for current build or platform");
modules/superres/src/optical_flow.cpp:    CV_Error(cv::Error::StsNotImplemented, "The called functionality is disabled for current build or platform");
modules/superres/src/optical_flow.cpp:    CV_Error(cv::Error::StsNotImplemented, "The called functionality is disabled for current build or platform");
modules/superres/src/opencl/superres_btvl1.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/opencl/superres_btvl1.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/opencl/superres_btvl1.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/opencl/superres_btvl1.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/opencl/superres_btvl1.cl:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/ring_buffer.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/ring_buffer.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/ring_buffer.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/ring_buffer.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/ring_buffer.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/btv_l1.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/btv_l1.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/btv_l1.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/btv_l1.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/btv_l1.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/btv_l1.cpp:                btvWeights[ind] = pow(alpha_f, std::abs(m) + std::abs(l));
modules/superres/src/btv_l1.cpp:        mutable Mat dst;
modules/superres/src/btv_l1.cpp:        CV_IMPL_PROPERTY(double, Labmda, lambda_)
modules/superres/src/cuda/btv_l1_gpu.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/cuda/btv_l1_gpu.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/cuda/btv_l1_gpu.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/cuda/btv_l1_gpu.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/cuda/btv_l1_gpu.cu:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/input_array_utility.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/input_array_utility.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/input_array_utility.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/input_array_utility.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/input_array_utility.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/superres/src/input_array_utility.cpp:                CV_Error(cv::Error::StsNotImplemented, "The called functionality is disabled for current build or platform");
modules/superres/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/superres/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/superres/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/superres/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/superres/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/test/test_cascadeandhog.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/test/test_cascadeandhog.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/test/test_cascadeandhog.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/test/test_cascadeandhog.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/test/test_cascadeandhog.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/test/test_cascadeandhog.cpp:                if( map[minIdx] != 0 || (minDist > dist) || (abs(cr->width - vr.width) > wDiff) ||
modules/objdetect/test/test_cascadeandhog.cpp:                                                        (abs(cr->height - vr.height) > hDiff) )
modules/objdetect/test/test_cascadeandhog.cpp:    mutable bool failed;
modules/objdetect/test/test_cascadeandhog.cpp:    // Initialize 2 lookup tables, pixData & blockData.
modules/objdetect/test/opencl/test_hogdetector.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/test/opencl/test_hogdetector.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/test/opencl/test_hogdetector.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/test/opencl/test_hogdetector.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/test/opencl/test_hogdetector.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/include/opencv2/objdetect/objdetect_c.h://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/include/opencv2/objdetect/objdetect_c.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/include/opencv2/objdetect/objdetect_c.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/include/opencv2/objdetect/objdetect_c.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/include/opencv2/objdetect/objdetect_c.h:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/include/opencv2/objdetect/objdetect.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/include/opencv2/objdetect/objdetect.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/include/opencv2/objdetect/objdetect.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/include/opencv2/objdetect/objdetect.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/include/opencv2/objdetect/objdetect.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/include/opencv2/objdetect/detection_based_tracker.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/include/opencv2/objdetect/detection_based_tracker.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/include/opencv2/objdetect/detection_based_tracker.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/include/opencv2/objdetect/detection_based_tracker.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/include/opencv2/objdetect/detection_based_tracker.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/include/opencv2/objdetect.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/include/opencv2/objdetect.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/include/opencv2/objdetect.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/include/opencv2/objdetect.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/include/opencv2/objdetect.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/include/opencv2/objdetect.hpp:classifier is designed so that it can be easily "resized" in order to be able to find the objects of
modules/objdetect/include/opencv2/objdetect.hpp:Adaboost, Real Adaboost, Gentle Adaboost and Logitboost are supported. The basic classifiers are
modules/objdetect/include/opencv2/objdetect.hpp:using a Boosted Cascade of Simple Features. IEEE CVPR, 2001. The paper is available online at
modules/objdetect/include/opencv2/objdetect.hpp:        return std::abs(r1.x - r2.x) <= delta &&
modules/objdetect/include/opencv2/objdetect.hpp:            std::abs(r1.y - r2.y) <= delta &&
modules/objdetect/include/opencv2/objdetect.hpp:            std::abs(r1.x + r1.width - r2.x - r2.width) <= delta &&
modules/objdetect/include/opencv2/objdetect.hpp:            std::abs(r1.y + r1.height - r2.y - r2.height) <= delta;
modules/objdetect/perf/opencl/perf_hogdetect.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/perf/opencl/perf_hogdetect.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/perf/opencl/perf_hogdetect.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/perf/opencl/perf_hogdetect.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/perf/opencl/perf_hogdetect.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/src/detection_based_tracker.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/src/detection_based_tracker.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/src/detection_based_tracker.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/src/detection_based_tracker.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/src/detection_based_tracker.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/src/detection_based_tracker.cpp:#include <condition_variable>
modules/objdetect/src/detection_based_tracker.cpp:        std::condition_variable objectDetectorRun;
modules/objdetect/src/detection_based_tracker.cpp:        std::condition_variable objectDetectorThreadStartStop;
modules/objdetect/src/haar.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/src/haar.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/src/haar.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/src/haar.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/src/haar.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/src/haar.cpp:#    pragma warning( disable : 4752 )
modules/objdetect/src/haar.cpp:                if( fabs(feature->rect[2].weight) < DBL_EPSILON ||
modules/objdetect/src/cascadedetect_convert.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/src/cascadedetect_convert.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/src/cascadedetect_convert.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/src/cascadedetect_convert.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/src/cascadedetect_convert.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/src/cascadedetect_convert.cpp:            if( j >= 2 && fabs(f.rect[j].weight) < FLT_EPSILON )
modules/objdetect/src/cascadedetect.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/src/cascadedetect.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/src/cascadedetect.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/src/cascadedetect.cpp:// In no event shall the copyright holders or contributors be liable for any direct,
modules/objdetect/src/cascadedetect.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/src/cascadedetect.cpp:    std::vector<int> labels;
modules/objdetect/src/cascadedetect.cpp:    int nclasses = partition(rectList, labels, SimilarRects(eps));
modules/objdetect/src/cascadedetect.cpp:    int i, j, nlabels = (int)labels.size();
modules/objdetect/src/cascadedetect.cpp:    for( i = 0; i < nlabels; i++ )
modules/objdetect/src/cascadedetect.cpp:        int cls = labels[i];
modules/objdetect/src/cascadedetect.cpp:        for( i = 0; i < nlabels; i++ )
modules/objdetect/src/cascadedetect.cpp:            int cls = labels[i];
modules/objdetect/src/cascadedetect.cpp:        if( !recalcOptFeatures && fabs(s.scale - _scales[i]) > FLT_EPSILON*100*_scales[i] )
modules/objdetect/src/cascadedetect.cpp:                        if( -result >= 0 ) // TODO: Add variable to define a specific last accepted Stage - ABI_COMPATIBILITY problem with new/changed virtual functions - PR #5362
modules/objdetect/src/opencl/cascadedetect.cl:                            if( fabs(weight.z) > 0 )
modules/objdetect/src/opencl/objdetect_hog.cl://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/src/opencl/objdetect_hog.cl://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/src/opencl/objdetect_hog.cl:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/src/opencl/objdetect_hog.cl:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/src/opencl/objdetect_hog.cl:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/src/opencl/objdetect_hog.cl:// Use pre-computed gaussian and interp_weight lookup tables
modules/objdetect/src/opencl/objdetect_hog.cl:    float free_coef, float threshold, __global uchar* labels)
modules/objdetect/src/opencl/objdetect_hog.cl:        labels[gidY * img_win_width + gidX] = (product + free_coef >= threshold);
modules/objdetect/src/opencl/objdetect_hog.cl:    float free_coef, float threshold, __global uchar* labels)
modules/objdetect/src/opencl/objdetect_hog.cl:        labels[gidY * img_win_width + gidX] = (product + free_coef >= threshold);
modules/objdetect/src/opencl/objdetect_hog.cl:    float free_coef, float threshold, __global uchar* labels)
modules/objdetect/src/opencl/objdetect_hog.cl:        labels[gidY * img_win_width + gidX] = (product + free_coef >= threshold);
modules/objdetect/src/hog.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/src/hog.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/src/hog.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/src/hog.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/src/hog.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/src/hog.cpp:    // Initialize 2 lookup tables, pixData & blockData.
modules/objdetect/src/hog.cpp:    UMat labels(1, wins_per_img.area(), CV_8U);
modules/objdetect/src/hog.cpp:            gaussian_lut.at<float>(idx++) = (8.f - fabs(j + 0.5f)) * (8.f - fabs(i + 0.5f)) / 64.f;
modules/objdetect/src/hog.cpp:                               float free_coef, float threshold, UMat& labels, Size descr_size, int block_hist_size)
modules/objdetect/src/hog.cpp:    idx = k.set(idx, ocl::KernelArg::PtrWriteOnly(labels));
modules/objdetect/src/hog.cpp:    UMat labels(1, wins_per_img.area(), CV_8U);
modules/objdetect/src/hog.cpp:            gaussian_lut.at<float>(idx++) = (8.f - fabs(j + 0.5f)) * (8.f - fabs(i + 0.5f)) / 64.f;
modules/objdetect/src/hog.cpp:        free_coef, (float)hit_threshold, labels, descr_size, (int)block_hist_size))
modules/objdetect/src/hog.cpp:    Mat labels_host = labels.getMat(ACCESS_READ);
modules/objdetect/src/hog.cpp:    unsigned char *vec = labels_host.ptr();
modules/objdetect/src/hog.cpp:    std::vector<int> labels;
modules/objdetect/src/hog.cpp:    int nclasses = partition(rectList, labels, SimilarRects(eps));
modules/objdetect/src/hog.cpp:    int i, j, nlabels = (int)labels.size();
modules/objdetect/src/hog.cpp:    for( i = 0; i < nlabels; i++ )
modules/objdetect/src/hog.cpp:        int cls = labels[i];
modules/objdetect/src/main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/src/main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/src/main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/src/main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/src/main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/objdetect/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/objdetect/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/objdetect/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/objdetect/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/objdetect/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/CMakeLists.txt:  ocv_module_disable(cudaimgproc)
modules/cudaimgproc/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4100 /wd4324 /wd4512 /wd4515 -Wundef -Wmissing-declarations -Wshadow -Wunused-parameter)
modules/cudaimgproc/test/test_canny.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_canny.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_canny.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_canny.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_canny.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_histogram.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_histogram.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_histogram.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_histogram.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_histogram.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_blend.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_blend.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_blend.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_blend.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_blend.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_bilateral_filter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_bilateral_filter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_bilateral_filter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_bilateral_filter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_bilateral_filter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_match_template.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_match_template.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_match_template.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_match_template.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_match_template.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_mean_shift.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_mean_shift.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_mean_shift.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_mean_shift.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_mean_shift.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_gftt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_gftt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_gftt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_gftt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_gftt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_gftt.cpp:        bool eq = std::abs(a.x - b.x) < 1 && std::abs(a.y - b.y) < 1;
modules/cudaimgproc/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_corners.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_corners.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_corners.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_corners.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_corners.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_hough.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_hough.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_hough.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_hough.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_hough.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_hough.cpp:            if (std::fabs(cur[0] - gold[0]) < 5 && std::fabs(cur[1] - gold[1]) < 5 && std::fabs(cur[2] - gold[2]) < 5)
modules/cudaimgproc/test/test_hough.cpp:            if (::fabs(p.x - gold.x) < 2 && ::fabs(p.y - gold.y) < 2)
modules/cudaimgproc/test/test_color.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/test/test_color.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/test/test_color.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/test/test_color.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/test/test_color.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, BGR2Lab)
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_BGR2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_BGR2Lab);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, RGB2Lab)
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_RGB2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_RGB2Lab);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, BGRA2Lab4)
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_BGR2Lab, 4);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_BGR2Lab);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, LBGR2Lab)
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_LBGR2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_LBGR2Lab);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, LRGB2Lab)
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_LRGB2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_LRGB2Lab);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, LBGRA2Lab4)
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_LBGR2Lab, 4);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_LBGR2Lab);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, Lab2BGR)
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(img, src, cv::COLOR_BGR2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_Lab2BGR);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_Lab2BGR);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, Lab2RGB)
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(img, src, cv::COLOR_BGR2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_Lab2RGB);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_Lab2RGB);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, Lab2BGRA)
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(img, src, cv::COLOR_BGR2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_Lab2BGR, 4);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_Lab2BGR, 4);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, Lab2LBGR)
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(img, src, cv::COLOR_BGR2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_Lab2LBGR);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_Lab2LBGR);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, Lab2LRGB)
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(img, src, cv::COLOR_BGR2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_Lab2LRGB);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_Lab2LRGB);
modules/cudaimgproc/test/test_color.cpp:CUDA_TEST_P(CvtColor, Lab2LRGBA)
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(img, src, cv::COLOR_BGR2Lab);
modules/cudaimgproc/test/test_color.cpp:    cv::cuda::cvtColor(loadMat(src, useRoi), dst, cv::COLOR_Lab2LRGB, 4);
modules/cudaimgproc/test/test_color.cpp:    cv::cvtColor(src, dst_gold, cv::COLOR_Lab2LRGB, 4);
modules/cudaimgproc/include/opencv2/cudaimgproc.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/include/opencv2/cudaimgproc.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/include/opencv2/cudaimgproc.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/include/opencv2/cudaimgproc.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/include/opencv2/cudaimgproc.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/include/opencv2/cudaimgproc.hpp:    /** @brief Finds line segments in a binary image using the probabilistic Hough transform.
modules/cudaimgproc/include/opencv2/cudaimgproc.hpp:/** @brief Performs a mean-shift procedure and stores information about processed points (their colors and
modules/cudaimgproc/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_color.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_color.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_color.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_color.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_color.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_color.cpp:                           CvtColorInfo(3, 3, cv::COLOR_BGR2Lab),
modules/cudaimgproc/perf/perf_color.cpp:                           CvtColorInfo(3, 3, cv::COLOR_LBGR2Lab),
modules/cudaimgproc/perf/perf_color.cpp:                           CvtColorInfo(3, 3, cv::COLOR_Lab2BGR),
modules/cudaimgproc/perf/perf_color.cpp:                           CvtColorInfo(3, 3, cv::COLOR_Lab2LBGR),
modules/cudaimgproc/perf/perf_hough.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_hough.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_hough.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_hough.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_hough.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_hough.cpp:    // The algorithm is not stable yet.
modules/cudaimgproc/perf/perf_canny.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_canny.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_canny.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_canny.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_canny.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_histogram.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_histogram.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_histogram.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_histogram.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_histogram.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_match_template.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_match_template.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_match_template.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_match_template.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_match_template.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_mean_shift.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_mean_shift.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_mean_shift.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_mean_shift.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_mean_shift.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_blend.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_blend.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_blend.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_blend.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_blend.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_gftt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_gftt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_gftt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_gftt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_gftt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_corners.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_corners.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_corners.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_corners.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_corners.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/perf/perf_bilateral_filter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/perf/perf_bilateral_filter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/perf/perf_bilateral_filter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/perf/perf_bilateral_filter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/perf/perf_bilateral_filter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/blend.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/blend.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/blend.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/blend.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/blend.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/hough_segments.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/hough_segments.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/hough_segments.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/hough_segments.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/hough_segments.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/hough_segments.cpp:        int houghLinesProbabilistic_gpu(PtrStepSzb mask, PtrStepSzi accum, int4* out, int maxSize, float rho, float theta, int lineGap, int lineLength);
modules/cudaimgproc/src/hough_segments.cpp:        int linesCount = houghLinesProbabilistic_gpu(src, accum_, result_.ptr<int4>(), maxLines_, rho_, theta_, maxLineGap_, minLineLength_);
modules/cudaimgproc/src/hough_lines.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/hough_lines.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/hough_lines.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/hough_lines.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/hough_lines.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/match_template.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/match_template.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/match_template.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/match_template.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/match_template.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/match_template.cpp:    // template version, otherwise FFT-based (if available)
modules/cudaimgproc/src/canny.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/canny.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/canny.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/canny.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/canny.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/color.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/color.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/color.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/color.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/color.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/color.cpp:    void BGR_to_Lab(InputArray _src, OutputArray _dst, int dcn, Stream& stream)
modules/cudaimgproc/src/color.cpp:                {BGR_to_Lab_8u, BGR_to_Lab_32f},
modules/cudaimgproc/src/color.cpp:                {BGRA_to_Lab_8u, BGRA_to_Lab_32f}
modules/cudaimgproc/src/color.cpp:                {BGR_to_Lab4_8u, BGR_to_Lab4_32f},
modules/cudaimgproc/src/color.cpp:                {BGRA_to_Lab4_8u, BGRA_to_Lab4_32f}
modules/cudaimgproc/src/color.cpp:    void RGB_to_Lab(InputArray _src, OutputArray _dst, int dcn, Stream& stream)
modules/cudaimgproc/src/color.cpp:                {RGB_to_Lab_8u, RGB_to_Lab_32f},
modules/cudaimgproc/src/color.cpp:                {RGBA_to_Lab_8u, RGBA_to_Lab_32f}
modules/cudaimgproc/src/color.cpp:                {RGB_to_Lab4_8u, RGB_to_Lab4_32f},
modules/cudaimgproc/src/color.cpp:                {RGBA_to_Lab4_8u, RGBA_to_Lab4_32f}
modules/cudaimgproc/src/color.cpp:    void LBGR_to_Lab(InputArray _src, OutputArray _dst, int dcn, Stream& stream)
modules/cudaimgproc/src/color.cpp:                {LBGR_to_Lab_8u, LBGR_to_Lab_32f},
modules/cudaimgproc/src/color.cpp:                {LBGRA_to_Lab_8u, LBGRA_to_Lab_32f}
modules/cudaimgproc/src/color.cpp:                {LBGR_to_Lab4_8u, LBGR_to_Lab4_32f},
modules/cudaimgproc/src/color.cpp:                {LBGRA_to_Lab4_8u, LBGRA_to_Lab4_32f}
modules/cudaimgproc/src/color.cpp:    void LRGB_to_Lab(InputArray _src, OutputArray _dst, int dcn, Stream& stream)
modules/cudaimgproc/src/color.cpp:                {LRGB_to_Lab_8u, LRGB_to_Lab_32f},
modules/cudaimgproc/src/color.cpp:                {LRGBA_to_Lab_8u, LRGBA_to_Lab_32f}
modules/cudaimgproc/src/color.cpp:                {LRGB_to_Lab4_8u, LRGB_to_Lab4_32f},
modules/cudaimgproc/src/color.cpp:                {LRGBA_to_Lab4_8u, LRGBA_to_Lab4_32f}
modules/cudaimgproc/src/color.cpp:    void Lab_to_BGR(InputArray _src, OutputArray _dst, int dcn, Stream& stream)
modules/cudaimgproc/src/color.cpp:                {Lab_to_BGR_8u, Lab_to_BGR_32f},
modules/cudaimgproc/src/color.cpp:                {Lab4_to_BGR_8u, Lab4_to_BGR_32f}
modules/cudaimgproc/src/color.cpp:                {Lab_to_BGRA_8u, Lab_to_BGRA_32f},
modules/cudaimgproc/src/color.cpp:                {Lab4_to_BGRA_8u, Lab4_to_BGRA_32f}
modules/cudaimgproc/src/color.cpp:    void Lab_to_RGB(InputArray _src, OutputArray _dst, int dcn, Stream& stream)
modules/cudaimgproc/src/color.cpp:                {Lab_to_RGB_8u, Lab_to_RGB_32f},
modules/cudaimgproc/src/color.cpp:                {Lab4_to_RGB_8u, Lab4_to_RGB_32f}
modules/cudaimgproc/src/color.cpp:                {Lab_to_RGBA_8u, Lab_to_RGBA_32f},
modules/cudaimgproc/src/color.cpp:                {Lab4_to_RGBA_8u, Lab4_to_RGBA_32f}
modules/cudaimgproc/src/color.cpp:    void Lab_to_LBGR(InputArray _src, OutputArray _dst, int dcn, Stream& stream)
modules/cudaimgproc/src/color.cpp:                {Lab_to_LBGR_8u, Lab_to_LBGR_32f},
modules/cudaimgproc/src/color.cpp:                {Lab4_to_LBGR_8u, Lab4_to_LBGR_32f}
modules/cudaimgproc/src/color.cpp:                {Lab_to_LBGRA_8u, Lab_to_LBGRA_32f},
modules/cudaimgproc/src/color.cpp:                {Lab4_to_LBGRA_8u, Lab4_to_LBGRA_32f}
modules/cudaimgproc/src/color.cpp:    void Lab_to_LRGB(InputArray _src, OutputArray _dst, int dcn, Stream& stream)
modules/cudaimgproc/src/color.cpp:                {Lab_to_LRGB_8u, Lab_to_LRGB_32f},
modules/cudaimgproc/src/color.cpp:                {Lab4_to_LRGB_8u, Lab4_to_LRGB_32f}
modules/cudaimgproc/src/color.cpp:                {Lab_to_LRGBA_8u, Lab_to_LRGBA_32f},
modules/cudaimgproc/src/color.cpp:                {Lab4_to_LRGBA_8u, Lab4_to_LRGBA_32f}
modules/cudaimgproc/src/color.cpp:        BGR_to_Lab,             // CV_BGR2Lab     =44
modules/cudaimgproc/src/color.cpp:        RGB_to_Lab,             // CV_RGB2Lab     =45
modules/cudaimgproc/src/color.cpp:        Lab_to_BGR,             // CV_Lab2BGR     =56
modules/cudaimgproc/src/color.cpp:        Lab_to_RGB,             // CV_Lab2RGB     =57
modules/cudaimgproc/src/color.cpp:        LBGR_to_Lab,            // CV_LBGR2Lab     = 74
modules/cudaimgproc/src/color.cpp:        LRGB_to_Lab,            // CV_LRGB2Lab     = 75
modules/cudaimgproc/src/color.cpp:        Lab_to_LBGR,            // CV_Lab2LBGR     = 78
modules/cudaimgproc/src/color.cpp:        Lab_to_LRGB,            // CV_Lab2LRGB     = 79
modules/cudaimgproc/src/bilateral_filter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/bilateral_filter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/bilateral_filter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/bilateral_filter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/bilateral_filter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/gftt.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/gftt.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/gftt.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/gftt.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/gftt.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/histogram.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/histogram.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/histogram.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/histogram.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/histogram.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/generalized_hough.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/generalized_hough.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/generalized_hough.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/generalized_hough.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/generalized_hough.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/generalized_hough.cpp:        void buildRTable_gpu(const unsigned int* coordList, const float* thetaList, int pointsCount,
modules/cudaimgproc/src/generalized_hough.cpp:                             PtrStepSz<short2> r_table, int* r_sizes,
modules/cudaimgproc/src/generalized_hough.cpp:                                      PtrStepSz<short2> r_table, const int* r_sizes,
modules/cudaimgproc/src/generalized_hough.cpp:        GpuMat r_table_;
modules/cudaimgproc/src/generalized_hough.cpp:        ensureSizeIsEnough(levels_ + 1, maxBufferSize_, CV_16SC2, r_table_);
modules/cudaimgproc/src/generalized_hough.cpp:            buildRTable_gpu(edgePointList_.ptr<unsigned int>(0), edgePointList_.ptr<float>(1), edgePointList_.cols,
modules/cudaimgproc/src/generalized_hough.cpp:                            r_table_, r_sizes_.ptr<int>(), make_short2(templCenter_.x, templCenter_.y), levels_);
modules/cudaimgproc/src/generalized_hough.cpp:        CV_Assert( levels_ > 0 && r_table_.rows == (levels_ + 1) && r_sizes_.cols == (levels_ + 1) );
modules/cudaimgproc/src/generalized_hough.cpp:                                     r_table_, r_sizes_.ptr<int>(),
modules/cudaimgproc/src/generalized_hough.cpp:        return (fabs(clampAngle(a - b)) <= eps);
modules/cudaimgproc/src/corners.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/corners.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/corners.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/corners.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/corners.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/hough_circles.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/hough_circles.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/hough_circles.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/hough_circles.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/hough_circles.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cvt_color_internal.h://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cvt_color_internal.h://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cvt_color_internal.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cvt_color_internal.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cvt_color_internal.h:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(RGB_to_Lab)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(RGBA_to_Lab)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(RGB_to_Lab4)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(RGBA_to_Lab4)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(BGR_to_Lab)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(BGRA_to_Lab)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(BGR_to_Lab4)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(BGRA_to_Lab4)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(LRGB_to_Lab)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(LRGBA_to_Lab)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(LRGB_to_Lab4)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(LRGBA_to_Lab4)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(LBGR_to_Lab)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(LBGRA_to_Lab)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(LBGR_to_Lab4)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(LBGRA_to_Lab4)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab_to_RGB)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab4_to_RGB)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab_to_RGBA)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab4_to_RGBA)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab_to_BGR)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab4_to_BGR)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab_to_BGRA)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab4_to_BGRA)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab_to_LRGB)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab4_to_LRGB)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab_to_LRGBA)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab4_to_LRGBA)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab_to_LBGR)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab4_to_LBGR)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab_to_LBGRA)
modules/cudaimgproc/src/cvt_color_internal.h:    OPENCV_CUDA_DECLARE_CVTCOLOR_8U32F(Lab4_to_LBGRA)
modules/cudaimgproc/src/cuda/match_template.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/match_template.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/match_template.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/match_template.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/match_template.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/match_template.cu:            if (::fabs(num) < denum)
modules/cudaimgproc/src/cuda/match_template.cu:            if (::fabs(num) < denum * 1.125f)
modules/cudaimgproc/src/cuda/match_template.cu:            if (::fabs(num) < denum)
modules/cudaimgproc/src/cuda/match_template.cu:            if (::fabs(num) < denum * 1.125f)
modules/cudaimgproc/src/cuda/hough_circles.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/hough_circles.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/hough_circles.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/hough_circles.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/hough_circles.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/canny.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/canny.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/canny.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/canny.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/canny.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/canny.cu:            return ::abs(x) + ::abs(y);
modules/cudaimgproc/src/cuda/canny.cu:        dxVal = ::abs(dxVal);
modules/cudaimgproc/src/cuda/canny.cu:        dyVal = ::abs(dyVal);
modules/cudaimgproc/src/cuda/color.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/color.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/color.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/color.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/color.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(RGB_to_Lab)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(RGBA_to_Lab)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(RGB_to_Lab4)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(RGBA_to_Lab4)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(BGR_to_Lab)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(BGRA_to_Lab)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(BGR_to_Lab4)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(BGRA_to_Lab4)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(LRGB_to_Lab)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(LRGBA_to_Lab)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(LRGB_to_Lab4)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(LRGBA_to_Lab4)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(LBGR_to_Lab)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(LBGRA_to_Lab)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(LBGR_to_Lab4)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(LBGRA_to_Lab4)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab_to_RGB)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab4_to_RGB)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab_to_RGBA)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab4_to_RGBA)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab_to_BGR)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab4_to_BGR)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab_to_BGRA)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab4_to_BGRA)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab_to_LRGB)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab4_to_LRGB)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab_to_LRGBA)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab4_to_LRGBA)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab_to_LBGR)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab4_to_LBGR)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab_to_LBGRA)
modules/cudaimgproc/src/cuda/color.cu:    OPENCV_CUDA_IMPLEMENT_CVTCOLOR_8U32F(Lab4_to_LBGRA)
modules/cudaimgproc/src/cuda/bilateral_filter.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/bilateral_filter.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/bilateral_filter.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/bilateral_filter.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/bilateral_filter.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/bilateral_filter.cu:        __device__ __forceinline__ float norm_l1(const float& a)  { return ::fabs(a); }
modules/cudaimgproc/src/cuda/bilateral_filter.cu:        __device__ __forceinline__ float norm_l1(const float2& a) { return ::fabs(a.x) + ::fabs(a.y); }
modules/cudaimgproc/src/cuda/bilateral_filter.cu:        __device__ __forceinline__ float norm_l1(const float3& a) { return ::fabs(a.x) + ::fabs(a.y) + ::fabs(a.z); }
modules/cudaimgproc/src/cuda/bilateral_filter.cu:        __device__ __forceinline__ float norm_l1(const float4& a) { return ::fabs(a.x) + ::fabs(a.y) + ::fabs(a.z) + ::fabs(a.w); }
modules/cudaimgproc/src/cuda/build_point_list.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/build_point_list.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/build_point_list.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/build_point_list.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/build_point_list.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/corners.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/corners.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/corners.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/corners.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/corners.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/generalized_hough.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/generalized_hough.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/generalized_hough.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/generalized_hough.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/generalized_hough.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/generalized_hough.cu:        __global__ void buildRTable(const unsigned int* coordList, const float* thetaList, const int pointsCount,
modules/cudaimgproc/src/cuda/generalized_hough.cu:                                    PtrStep<short2> r_table, int* r_sizes, int maxSize,
modules/cudaimgproc/src/cuda/generalized_hough.cu:                r_table(n, ind) = saturate_cast<short2>(p - templCenter);
modules/cudaimgproc/src/cuda/generalized_hough.cu:        void buildRTable_gpu(const unsigned int* coordList, const float* thetaList, int pointsCount,
modules/cudaimgproc/src/cuda/generalized_hough.cu:                             PtrStepSz<short2> r_table, int* r_sizes,
modules/cudaimgproc/src/cuda/generalized_hough.cu:            buildRTable<<<grid, block>>>(coordList, thetaList, pointsCount, r_table, r_sizes, r_table.cols, templCenter, thetaScale);
modules/cudaimgproc/src/cuda/generalized_hough.cu:                                             const PtrStep<short2> r_table, const int* r_sizes,
modules/cudaimgproc/src/cuda/generalized_hough.cu:            const short2* r_row = r_table.ptr(n);
modules/cudaimgproc/src/cuda/generalized_hough.cu:                                      PtrStepSz<short2> r_table, const int* r_sizes,
modules/cudaimgproc/src/cuda/generalized_hough.cu:            Ballard_Pos_calcHist<<<grid, block>>>(coordList, thetaList, pointsCount, r_table, r_sizes, hist, idp, thetaScale);
modules/cudaimgproc/src/cuda/generalized_hough.cu:        struct FeatureTable
modules/cudaimgproc/src/cuda/generalized_hough.cu:        __constant__ FeatureTable c_templFeatures;
modules/cudaimgproc/src/cuda/generalized_hough.cu:        __constant__ FeatureTable c_imageFeatures;
modules/cudaimgproc/src/cuda/generalized_hough.cu:            FeatureTable tbl;
modules/cudaimgproc/src/cuda/generalized_hough.cu:            cudaSafeCall( cudaMemcpyToSymbol(c_templFeatures, &tbl, sizeof(FeatureTable)) );
modules/cudaimgproc/src/cuda/generalized_hough.cu:            FeatureTable tbl;
modules/cudaimgproc/src/cuda/generalized_hough.cu:            cudaSafeCall( cudaMemcpyToSymbol(c_imageFeatures, &tbl, sizeof(FeatureTable)) );
modules/cudaimgproc/src/cuda/generalized_hough.cu:        struct TemplFeatureTable
modules/cudaimgproc/src/cuda/generalized_hough.cu:        struct ImageFeatureTable
modules/cudaimgproc/src/cuda/generalized_hough.cu:            return (::fabs(clampAngle(a - b)) <= eps);
modules/cudaimgproc/src/cuda/generalized_hough.cu:            Guil_Full_buildFeatureList_caller<TemplFeatureTable, true>(coordList, thetaList, pointsCount,
modules/cudaimgproc/src/cuda/generalized_hough.cu:            Guil_Full_buildFeatureList_caller<ImageFeatureTable, false>(coordList, thetaList, pointsCount,
modules/cudaimgproc/src/cuda/generalized_hough.cu:                const float t_p1_theta = TemplFeatureTable::p1_theta(level)[tIdx];
modules/cudaimgproc/src/cuda/generalized_hough.cu:                    const float im_p1_theta = ImageFeatureTable::p1_theta(level)[i];
modules/cudaimgproc/src/cuda/generalized_hough.cu:                const float t_p1_theta = TemplFeatureTable::p1_theta(level)[tIdx] + angle;
modules/cudaimgproc/src/cuda/generalized_hough.cu:                const float t_d12 = TemplFeatureTable::d12(level)[tIdx] + angle;
modules/cudaimgproc/src/cuda/generalized_hough.cu:                    const float im_p1_theta = ImageFeatureTable::p1_theta(level)[i];
modules/cudaimgproc/src/cuda/generalized_hough.cu:                    const float im_d12 = ImageFeatureTable::d12(level)[i];
modules/cudaimgproc/src/cuda/generalized_hough.cu:                const float t_p1_theta = TemplFeatureTable::p1_theta(level)[tIdx] + angle;
modules/cudaimgproc/src/cuda/generalized_hough.cu:                float2 r1 = TemplFeatureTable::r1(level)[tIdx];
modules/cudaimgproc/src/cuda/generalized_hough.cu:                float2 r2 = TemplFeatureTable::r2(level)[tIdx];
modules/cudaimgproc/src/cuda/generalized_hough.cu:                    const float im_p1_theta = ImageFeatureTable::p1_theta(level)[i];
modules/cudaimgproc/src/cuda/generalized_hough.cu:                    const float2 im_p1_pos = ImageFeatureTable::p1_pos(level)[i];
modules/cudaimgproc/src/cuda/generalized_hough.cu:                    const float2 im_p2_pos = ImageFeatureTable::p2_pos(level)[i];
modules/cudaimgproc/src/cuda/generalized_hough.cu:                        if (::fabs(c1.x - c2.x) > 1 || ::fabs(c1.y - c2.y) > 1)
modules/cudaimgproc/src/cuda/clahe.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/clahe.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/clahe.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/clahe.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/clahe.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/hough_lines.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/hough_lines.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/hough_lines.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/hough_lines.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/hough_lines.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/mean_shift.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/mean_shift.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/mean_shift.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/mean_shift.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/mean_shift.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/mean_shift.cu:                bool stopFlag = (x0 == x1 && y0 == y1) || (::abs(x1-x0) + ::abs(y1-y0) + norm2 <= eps);
modules/cudaimgproc/src/cuda/gftt.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/gftt.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/gftt.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/gftt.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/gftt.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/debayer.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/debayer.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/debayer.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/debayer.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/debayer.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/blend.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/blend.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/blend.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/blend.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/blend.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/hough_segments.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/hough_segments.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/hough_segments.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/hough_segments.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/hough_segments.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/cuda/hough_segments.cu:        __global__ void houghLinesProbabilistic(const PtrStepSzi accum,
modules/cudaimgproc/src/cuda/hough_segments.cu:                if (::fabsf(dir.x) > ::fabsf(dir.y))
modules/cudaimgproc/src/cuda/hough_segments.cu:                    d.y = dir.y / ::fabsf(dir.x);
modules/cudaimgproc/src/cuda/hough_segments.cu:                    d.x = dir.x / ::fabsf(dir.y);
modules/cudaimgproc/src/cuda/hough_segments.cu:                            bool good_line = ::abs(line_end[1].x - line_end[0].x) >= lineLength ||
modules/cudaimgproc/src/cuda/hough_segments.cu:                                             ::abs(line_end[1].y - line_end[0].y) >= lineLength;
modules/cudaimgproc/src/cuda/hough_segments.cu:                            bool good_line = ::abs(line_end[1].x - line_end[0].x) >= lineLength ||
modules/cudaimgproc/src/cuda/hough_segments.cu:                                             ::abs(line_end[1].y - line_end[0].y) >= lineLength;
modules/cudaimgproc/src/cuda/hough_segments.cu:        int houghLinesProbabilistic_gpu(PtrStepSzb mask, PtrStepSzi accum, int4* out, int maxSize, float rho, float theta, int lineGap, int lineLength)
modules/cudaimgproc/src/cuda/hough_segments.cu:            houghLinesProbabilistic<<<grid, block>>>(accum,
modules/cudaimgproc/src/cuda/hist.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/cuda/hist.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/cuda/hist.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/cuda/hist.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/cuda/hist.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/mean_shift.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/mean_shift.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/mean_shift.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/mean_shift.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/mean_shift.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaimgproc/src/mssegmentation.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaimgproc/src/mssegmentation.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaimgproc/src/mssegmentation.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaimgproc/src/mssegmentation.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaimgproc/src/mssegmentation.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/CMakeLists.txt:  ocv_module_disable(cudafeatures2d)
modules/cudafeatures2d/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4100 /wd4324 /wd4512 /wd4515 -Wundef -Wmissing-declarations -Wshadow -Wunused-parameter -Wshadow)
modules/cudafeatures2d/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/test/test_features2d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/test/test_features2d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/test/test_features2d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/test/test_features2d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/test/test_features2d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/include/opencv2/cudafeatures2d.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/include/opencv2/cudafeatures2d.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/include/opencv2/cudafeatures2d.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/include/opencv2/cudafeatures2d.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/include/opencv2/cudafeatures2d.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/include/opencv2/cudafeatures2d.hpp:    preferable choices for SIFT and SURF descriptors, NORM_HAMMING should be used with ORB, BRISK and
modules/cudafeatures2d/include/opencv2/cudafeatures2d.hpp:    for the details about query and train descriptors.
modules/cudafeatures2d/include/opencv2/cudafeatures2d.hpp:    for the details about query and train descriptors.
modules/cudafeatures2d/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/perf/perf_features2d.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/perf/perf_features2d.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/perf/perf_features2d.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/perf/perf_features2d.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/perf/perf_features2d.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/orb.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/orb.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/orb.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/orb.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/orb.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/fast.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/fast.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/fast.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/fast.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/fast.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/brute_force_matcher.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/brute_force_matcher.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/brute_force_matcher.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/brute_force_matcher.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/brute_force_matcher.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/feature2d_async.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/feature2d_async.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/feature2d_async.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/feature2d_async.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/feature2d_async.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/cuda/fast.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/cuda/fast.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/cuda/fast.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/cuda/fast.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/cuda/fast.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/cuda/fast.cu:        __constant__ uchar c_table[] = { 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0x80, 0x0, 0xc0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
modules/cudafeatures2d/src/cuda/fast.cu:            return (__popc(mask1) > 8 && (c_table[(mask1 >> 3) - 63] & (1 << (mask1 & 7)))) ||
modules/cudafeatures2d/src/cuda/fast.cu:                   (__popc(mask2) > 8 && (c_table[(mask2 >> 3) - 63] & (1 << (mask2 & 7))));
modules/cudafeatures2d/src/cuda/orb.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/cuda/orb.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/cuda/orb.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/cuda/orb.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/cuda/orb.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/cuda/bf_knnmatch.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/cuda/bf_knnmatch.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/cuda/bf_knnmatch.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/cuda/bf_knnmatch.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/cuda/bf_knnmatch.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/cuda/bf_match.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/cuda/bf_match.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/cuda/bf_match.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/cuda/bf_match.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/cuda/bf_match.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/cuda/bf_radius_match.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/cuda/bf_radius_match.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/cuda/bf_radius_match.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/cuda/bf_radius_match.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/cuda/bf_radius_match.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudafeatures2d/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudafeatures2d/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudafeatures2d/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudafeatures2d/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudafeatures2d/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/CMakeLists.txt:  ocv_module_disable(cudaoptflow)
modules/cudaoptflow/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4324 /wd4512 -Wundef -Wmissing-declarations -Wshadow)
modules/cudaoptflow/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/test/test_optflow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/test/test_optflow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/test/test_optflow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/test/test_optflow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/test/test_optflow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/test/test_optflow.cpp:            bool eq = std::abs(a.x - b.x) <= 1 && std::abs(a.y - b.y) <= 1;
modules/cudaoptflow/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/include/opencv2/cudaoptflow.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/include/opencv2/cudaoptflow.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/include/opencv2/cudaoptflow.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/include/opencv2/cudaoptflow.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/include/opencv2/cudaoptflow.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/include/opencv2/cudaoptflow.hpp: * @sa Javier Sanchez, Enric Meinhardt-Llopis and Gabriele Facciolo. "TV-L1 Optical Flow Estimation".
modules/cudaoptflow/include/opencv2/cudaoptflow.hpp:     * The method is stable for a large range of values of this parameter.
modules/cudaoptflow/include/opencv2/cudaoptflow.hpp:     * parameter used for motion estimation. It adds a variable allowing for illumination variations
modules/cudaoptflow/include/opencv2/cudaoptflow.hpp:     * This is a parameter that assures the stability of the method.
modules/cudaoptflow/perf/perf_optflow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/perf/perf_optflow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/perf/perf_optflow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/perf/perf_optflow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/perf/perf_optflow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/src/tvl1flow.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/src/tvl1flow.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/src/tvl1flow.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/src/tvl1flow.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/src/tvl1flow.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/src/tvl1flow.cpp:    void estimateDualVariables(PtrStepSzf u1, PtrStepSzf u2, PtrStepSzf u3,
modules/cudaoptflow/src/tvl1flow.cpp:                estimateDualVariables(u1, u2, u3, p11, p12, p21, p22, p31, p32, taut, gamma_, stream);
modules/cudaoptflow/src/brox.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/src/brox.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/src/brox.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/src/brox.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/src/brox.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/src/pyrlk.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/src/pyrlk.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/src/pyrlk.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/src/pyrlk.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/src/pyrlk.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/src/farneback.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/src/farneback.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/src/farneback.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/src/farneback.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/src/farneback.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/src/farneback.cpp:// CUDA resize() is fast, but it differs from the CPU analog. Disabling this flag
modules/cudaoptflow/src/farneback.cpp:        CV_Assert(!fastPyramids_ || std::abs(pyrScale_ - 0.5) < 1e-6);
modules/cudaoptflow/src/cuda/tvl1flow.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/src/cuda/tvl1flow.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/src/cuda/tvl1flow.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/src/cuda/tvl1flow.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/src/cuda/tvl1flow.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/src/cuda/tvl1flow.cu:        float x = fabsf(x_);
modules/cudaoptflow/src/cuda/tvl1flow.cu:        // estimate the values of the variable (v1, v2) (thresholding operator TH)
modules/cudaoptflow/src/cuda/tvl1flow.cu:        // compute the divergence of the dual variable (p1, p2)
modules/cudaoptflow/src/cuda/tvl1flow.cu:// estimateDualVariables
modules/cudaoptflow/src/cuda/tvl1flow.cu:    __global__ void estimateDualVariablesKernel(const PtrStepSzf u1, const PtrStepf u2, const PtrStepSzf u3,
modules/cudaoptflow/src/cuda/tvl1flow.cu:    void estimateDualVariables(PtrStepSzf u1, PtrStepSzf u2, PtrStepSzf u3,
modules/cudaoptflow/src/cuda/tvl1flow.cu:        estimateDualVariablesKernel<<<grid, block, 0, stream>>>(u1, u2, u3, p11, p12, p21, p22, p31, p32, taut, gamma);
modules/cudaoptflow/src/cuda/farneback.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/src/cuda/farneback.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/src/cuda/farneback.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/src/cuda/farneback.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/src/cuda/farneback.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/src/cuda/pyrlk.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/src/cuda/pyrlk.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/src/cuda/pyrlk.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/src/cuda/pyrlk.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/src/cuda/pyrlk.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudaoptflow/src/cuda/pyrlk.cu:    __device__ __forceinline__ float abs_(float a)
modules/cudaoptflow/src/cuda/pyrlk.cu:        return ::fabsf(a);
modules/cudaoptflow/src/cuda/pyrlk.cu:    __device__ __forceinline__ float4 abs_(const float4& a)
modules/cudaoptflow/src/cuda/pyrlk.cu:        return abs(a);
modules/cudaoptflow/src/cuda/pyrlk.cu:            if (::fabs(delta.x) < 0.01f && ::fabs(delta.y) < 0.01f)
modules/cudaoptflow/src/cuda/pyrlk.cu:                    accum(errval, abs_(diff));
modules/cudaoptflow/src/cuda/pyrlk.cu:            if (::fabs(delta.x) < 0.01f && ::fabs(delta.y) < 0.01f)
modules/cudaoptflow/src/cuda/pyrlk.cu:                    errval += ::abs(J - I);
modules/cudaoptflow/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudaoptflow/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudaoptflow/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudaoptflow/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudaoptflow/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/CMakeLists.txt:  ocv_module_disable(cudastereo)
modules/cudastereo/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4127 /wd4324 /wd4512 -Wundef -Wmissing-declarations -Wshadow)
modules/cudastereo/test/test_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/test/test_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/test/test_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/test/test_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/test/test_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/test/test_stereo.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/test/test_stereo.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/test/test_stereo.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/test/test_stereo.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/test/test_stereo.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/test/test_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/test/test_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/test/test_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/test/test_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/test/test_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/include/opencv2/cudastereo.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/include/opencv2/cudastereo.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/include/opencv2/cudastereo.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/include/opencv2/cudastereo.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/include/opencv2/cudastereo.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/include/opencv2/cudastereo.hpp:    /** @brief Enables the stereo correspondence operator that finds the disparity for the specified data cost.
modules/cudastereo/include/opencv2/cudastereo.hpp:mentioned above. By default, a local algorithm is used. To enable a global algorithm, set
modules/cudastereo/perf/perf_main.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/perf/perf_main.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/perf/perf_main.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/perf/perf_main.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/perf/perf_main.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/perf/perf_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/perf/perf_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/perf/perf_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/perf/perf_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/perf/perf_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/perf/perf_stereo.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/perf/perf_stereo.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/perf/perf_stereo.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/perf/perf_stereo.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/perf/perf_stereo.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/disparity_bilateral_filter.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/disparity_bilateral_filter.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/disparity_bilateral_filter.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/disparity_bilateral_filter.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/disparity_bilateral_filter.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/disparity_bilateral_filter.cpp:        GpuMat table_color_;
modules/cudastereo/src/disparity_bilateral_filter.cpp:        GpuMat table_space_;
modules/cudastereo/src/disparity_bilateral_filter.cpp:    void calc_color_weighted_table(GpuMat& table_color, float sigma_range, int len)
modules/cudastereo/src/disparity_bilateral_filter.cpp:        Mat cpu_table_color(1, len, CV_32F);
modules/cudastereo/src/disparity_bilateral_filter.cpp:        float* line = cpu_table_color.ptr<float>();
modules/cudastereo/src/disparity_bilateral_filter.cpp:        table_color.upload(cpu_table_color);
modules/cudastereo/src/disparity_bilateral_filter.cpp:    void calc_space_weighted_filter(GpuMat& table_space, int win_size, float dist_space)
modules/cudastereo/src/disparity_bilateral_filter.cpp:        Mat cpu_table_space(half + 1, half + 1, CV_32F);
modules/cudastereo/src/disparity_bilateral_filter.cpp:            float* row = cpu_table_space.ptr<float>(y);
modules/cudastereo/src/disparity_bilateral_filter.cpp:        table_space.upload(cpu_table_space);
modules/cudastereo/src/disparity_bilateral_filter.cpp:        calc_color_weighted_table(table_color_, sigma_range_, 255);
modules/cudastereo/src/disparity_bilateral_filter.cpp:        calc_space_weighted_filter(table_space_, radius_ * 2 + 1, radius_ + 1.0f);
modules/cudastereo/src/disparity_bilateral_filter.cpp:        calc_space_weighted_filter(table_space_, radius_ * 2 + 1, radius_ + 1.0f);
modules/cudastereo/src/disparity_bilateral_filter.cpp:        calc_color_weighted_table(table_color_, sigma_range_, 255);
modules/cudastereo/src/disparity_bilateral_filter.cpp:                                        GpuMat& table_color, GpuMat& table_space,
modules/cudastereo/src/disparity_bilateral_filter.cpp:        size_t table_space_step = table_space.step / sizeof(float);
modules/cudastereo/src/disparity_bilateral_filter.cpp:        disp_bilateral_filter<T>(dst, img, img.channels(), iters, table_color.ptr<float>(), (float *)table_space.data, table_space_step, radius, edge_disc, max_disc, StreamAccessor::getStream(stream));
modules/cudastereo/src/disparity_bilateral_filter.cpp:                                                    GpuMat& table_color, GpuMat& table_space,
modules/cudastereo/src/disparity_bilateral_filter.cpp:                               table_color_, table_space_, disp, img, dst, stream);
modules/cudastereo/src/stereobm.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/stereobm.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/stereobm.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/stereobm.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/stereobm.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/stereobp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/stereobp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/stereobp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/stereobp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/stereobp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/stereocsbp.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/stereocsbp.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/stereocsbp.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/stereocsbp.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/stereocsbp.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/util.cpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/util.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/util.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/util.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/util.cpp:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                uchar x = ::abs(a[0] - b[0]);
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                uchar y = ::abs(a[1] - b[1]);
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                uchar z = ::abs(a[2] - b[2]);
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                return ::abs(a[0] - b[0]);
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:            const float* ctable_color, const float * ctable_space, size_t ctable_space_step,
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                if(::abs(dp[1] - dp[0]) >= cedge_disc || ::abs(dp[2] - dp[0]) >= cedge_disc || ::abs(dp[3] - dp[0]) >= cedge_disc || ::abs(dp[4] - dp[0]) >= cedge_disc)
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                            const float weight = ctable_color[dist_rgb] * (ctable_space + ::abs(y-yi)* ctable_space_step)[::abs(x-xi)];
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                            cost[0] += ::min(cmax_disc, ::abs(disp_reg - dp[0])) * weight;
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                            cost[1] += ::min(cmax_disc, ::abs(disp_reg - dp[1])) * weight;
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                            cost[2] += ::min(cmax_disc, ::abs(disp_reg - dp[2])) * weight;
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                            cost[3] += ::min(cmax_disc, ::abs(disp_reg - dp[3])) * weight;
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                            cost[4] += ::min(cmax_disc, ::abs(disp_reg - dp[4])) * weight;
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:        void disp_bilateral_filter(PtrStepSz<T> disp, PtrStepSzb img, int channels, int iters, const float *table_color, const float* table_space, size_t table_step, int radius, short edge_disc, short max_disc, cudaStream_t stream)
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                    disp_bilateral_filter<1><<<grid, threads, 0, stream>>>(0, disp.data, disp.step/sizeof(T), img.data, img.step, disp.rows, disp.cols, table_color, table_space, table_step, radius, edge_disc, max_disc);
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                    disp_bilateral_filter<1><<<grid, threads, 0, stream>>>(1, disp.data, disp.step/sizeof(T), img.data, img.step, disp.rows, disp.cols, table_color, table_space, table_step, radius, edge_disc, max_disc);
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                    disp_bilateral_filter<3><<<grid, threads, 0, stream>>>(0, disp.data, disp.step/sizeof(T), img.data, img.step, disp.rows, disp.cols, table_color, table_space, table_step, radius, edge_disc, max_disc);
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:                    disp_bilateral_filter<3><<<grid, threads, 0, stream>>>(1, disp.data, disp.step/sizeof(T), img.data, img.step, disp.rows, disp.cols, table_color, table_space, table_step, radius, edge_disc, max_disc);
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:        template void disp_bilateral_filter<uchar>(PtrStepSz<uchar> disp, PtrStepSzb img, int channels, int iters, const float *table_color, const float *table_space, size_t table_step, int radius, short, short, cudaStream_t stream);
modules/cudastereo/src/cuda/disparity_bilateral_filter.cu:        template void disp_bilateral_filter<short>(PtrStepSz<short> disp, PtrStepSzb img, int channels, int iters, const float *table_color, const float *table_space, size_t table_step, int radius, short, short, cudaStream_t stream);
modules/cudastereo/src/cuda/stereobm.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/cuda/stereobm.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/cuda/stereobm.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/cuda/stereobm.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/cuda/stereobm.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/cuda/stereobm.cu:            //See above:  #define COL_SSD_SIZE (BLOCK_W + 2 * RADIUS)
modules/cudastereo/src/cuda/stereobm.cu:            //See above:  #define COL_SSD_SIZE (BLOCK_W + 2 * RADIUS)
modules/cudastereo/src/cuda/stereobm.cu:            //See above:  #define COL_SSD_SIZE (BLOCK_W + 2 * RADIUS)
modules/cudastereo/src/cuda/stereobm.cu:            //See above:  #define COL_SSD_SIZE (BLOCK_W + 2 * RADIUS)
modules/cudastereo/src/cuda/stereobm.cu:            return fabs(conv);
modules/cudastereo/src/cuda/stereobp.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/cuda/stereobp.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/cuda/stereobp.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/cuda/stereobp.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/cuda/stereobp.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/cuda/stereobp.cu:                return ::abs((int)l - *rs);
modules/cudastereo/src/cuda/stereobp.cu:                float val  = tb * ::abs((int)l.x - rs[0]);
modules/cudastereo/src/cuda/stereobp.cu:                      val += tg * ::abs((int)l.y - rs[1]);
modules/cudastereo/src/cuda/stereobp.cu:                      val += tr * ::abs((int)l.z - rs[2]);
modules/cudastereo/src/cuda/stereobp.cu:                float val  = tb * ::abs((int)l.x - r.x);
modules/cudastereo/src/cuda/stereobp.cu:                      val += tg * ::abs((int)l.y - r.y);
modules/cudastereo/src/cuda/stereobp.cu:                      val += tr * ::abs((int)l.z - r.z);
modules/cudastereo/src/cuda/stereocsbp.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/cuda/stereocsbp.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/cuda/stereocsbp.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/cuda/stereocsbp.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/cuda/stereocsbp.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/cuda/stereocsbp.cu:            return fminf( ::abs((int)*left - *right), max_data_term);
modules/cudastereo/src/cuda/stereocsbp.cu:            float tb = 0.114f * ::abs((int)left[0] - right[0]);
modules/cudastereo/src/cuda/stereocsbp.cu:            float tg = 0.587f * ::abs((int)left[1] - right[1]);
modules/cudastereo/src/cuda/stereocsbp.cu:            float tr = 0.299f * ::abs((int)left[2] - right[2]);
modules/cudastereo/src/cuda/stereocsbp.cu:            float tb = 0.114f * ::abs((int)l.x - r.x);
modules/cudastereo/src/cuda/stereocsbp.cu:            float tg = 0.587f * ::abs((int)l.y - r.y);
modules/cudastereo/src/cuda/stereocsbp.cu:            float tr = 0.299f * ::abs((int)l.z - r.z);
modules/cudastereo/src/cuda/stereocsbp.cu:                    cost_min = fmin(cost_min, msg_dst[d2 * disp_step] + disc_single_jump * ::abs(dst_disp[d2 * disp_step] - src_disp_reg));
modules/cudastereo/src/cuda/util.cu://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/cuda/util.cu://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/cuda/util.cu:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/cuda/util.cu:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/cuda/util.cu:// and on any theory of liability, whether in contract, strict liability,
modules/cudastereo/src/precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
modules/cudastereo/src/precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
modules/cudastereo/src/precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
modules/cudastereo/src/precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
modules/cudastereo/src/precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
cmake/OpenCVFindXimea.cmake:# This code sets the following variables:
cmake/OpenCVCRTLinkage.cmake:  message(FATAL_ERROR "CRT options are available only for MSVC")
cmake/OpenCVCRTLinkage.cmake:  # Optional verification checks since we don't know existing contents of variables below
cmake/OpenCVFindLATEX.cmake:# executables are. This code sets the following variables:
cmake/OpenCVCompilerOptions.cmake:  # mingw compiler is known to produce unstable SSE code with -O3 hence we are trying to use -O2 instead
cmake/OpenCVCompilerOptions.cmake:# Gets environment variable and puts its value to the corresponding preprocessor definition
cmake/OpenCVCompilerOptions.cmake:# Useful for WINRT that has no access to environment variables
cmake/OpenCVCompilerOptions.cmake:    message(WARNING "${option} environment variable is empty. Please set it to appropriate location to get correct results")
cmake/OpenCVCompilerOptions.cmake:  # SSE3 and further should be disabled under MingW because it generates compiler errors
cmake/OpenCVCompilerOptions.cmake:  # 64-bit portability warnings, in MSVC80
cmake/OpenCVCompilerOptions.cmake:  # avoid warnings from MSVC about overriding the /W* option
cmake/OpenCVCompilerOptions.cmake:  # and we do not care about their warnings.
cmake/OpenCVCompilerOptions.cmake:    ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4510 /wd4610 /wd4312 /wd4201 /wd4244 /wd4328 /wd4267)
cmake/OpenCVCompilerOptions.cmake:    ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4251) # class 'std::XXX' needs to have dll-interface to be used by clients of YYY
cmake/OpenCVCompilerOptions.cmake:    ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4324) # 'struct_name' : structure was padded due to __declspec(align())
cmake/OpenCVCompilerOptions.cmake:    ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4275) # non dll-interface class 'std::exception' used as base for dll-interface class 'cv::Exception'
cmake/OpenCVCompilerOptions.cmake:    ocv_warnings_disable(CMAKE_CXX_FLAGS /wd4589) # Constructor of abstract class 'cv::ORB' ignores initializer for virtual base class 'cv::Algorithm'
cmake/OpenCVGenAndroidMK.cmake:  configure_file("${OpenCV_SOURCE_DIR}/cmake/templates/OpenCV-abi.mk.in" "${CMAKE_BINARY_DIR}/OpenCV-${ANDROID_NDK_ABI_NAME}.mk" @ONLY)
cmake/OpenCVGenAndroidMK.cmake:  configure_file("${OpenCV_SOURCE_DIR}/cmake/templates/OpenCV-abi.mk.in" "${CMAKE_BINARY_DIR}/unix-install/OpenCV-${ANDROID_NDK_ABI_NAME}.mk" @ONLY)
cmake/FindCUDA/make2cmake.cmake:#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html
cmake/FindCUDA/make2cmake.cmake:# The above copyright notice and this permission notice shall be included
cmake/FindCUDA/make2cmake.cmake:      get_filename_component(file_absolute "${file}" ABSOLUTE)
cmake/FindCUDA/make2cmake.cmake:      list(APPEND dependency_list "${file_absolute}")
cmake/FindCUDA/run_nvcc.cmake:# The above copyright notice and this permission notice shall be included
cmake/FindCUDA/run_nvcc.cmake:# Input variables
cmake/FindCUDA/run_nvcc.cmake:# Set these up as variables to make reading the generated file easier
cmake/FindCUDA/run_nvcc.cmake:# We won't actually use these variables for now, but we need to set this, in
cmake/FindCUDA/run_nvcc.cmake:# and other return variables are present after executing the process.
cmake/FindCUDA/run_nvcc.cmake:    # copy and paste a runnable command line.
cmake/FindCUDA/run_nvcc.cmake:# Generate the cmake readable dependency file to a temp file.  Don't put the
cmake/FindCUDA/run_nvcc.cmake:# quotes just around the filenames for the input_file and output_file variables.
cmake/FindCUDA/run_nvcc.cmake:# CMake will pass the quotes through and not be able to find the file.
cmake/FindCUDA/run_nvcc.cmake:  "Generating temporary cmake readable file: ${cmake_dependency_file}.tmp"
cmake/FindCUDA/parse_cubin.cmake:#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html
cmake/FindCUDA/parse_cubin.cmake:# The above copyright notice and this permission notice shall be included
cmake/FindCUDA/parse_cubin.cmake:# Parses a .cubin file produced by nvcc and reports statistics about the file.
cmake/OpenCVUtils.cmake:  get_cmake_property(_variableNames VARIABLES)
cmake/OpenCVUtils.cmake:  foreach(_variableName ${_variableNames})
cmake/OpenCVUtils.cmake:    if(_variableName MATCHES "${regex}")
cmake/OpenCVUtils.cmake:      set(VARS "${VARS}${_variableName}=${${_variableName}}\n")
cmake/OpenCVUtils.cmake:macro(ocv_check_environment_variables)
cmake/OpenCVUtils.cmake:      message(STATUS "Update variable ${_var} from environment: ${${_var}}")
cmake/OpenCVUtils.cmake:    get_filename_component(__abs_dir "${dir}" ABSOLUTE)
cmake/OpenCVUtils.cmake:    if("${__abs_dir}" MATCHES "^${OpenCV_SOURCE_DIR}" OR "${__abs_dir}" MATCHES "^${OpenCV_BINARY_DIR}")
cmake/OpenCVUtils.cmake:    get_filename_component(__abs_dir "${dir}" ABSOLUTE)
cmake/OpenCVUtils.cmake:    if("${__abs_dir}" MATCHES "^${OpenCV_SOURCE_DIR}" OR "${__abs_dir}" MATCHES "^${OpenCV_BINARY_DIR}")
cmake/OpenCVUtils.cmake:      list(APPEND __params "${__abs_dir}")
cmake/OpenCVUtils.cmake:# clears all passed variables
cmake/OpenCVUtils.cmake:macro(ocv_warnings_disable)
cmake/OpenCVUtils.cmake:# Can accept condition to control when option is available for user.
cmake/OpenCVUtils.cmake:#   option(<option_variable> "help string describing the option" <initial value or boolean expression> [IF <condition>])
cmake/OpenCVUtils.cmake:macro(OCV_OPTION variable description value)
cmake/OpenCVUtils.cmake:        option(${variable} "${description}" ON)
cmake/OpenCVUtils.cmake:        option(${variable} "${description}" OFF)
cmake/OpenCVUtils.cmake:        option(${variable} "${description}" ON)
cmake/OpenCVUtils.cmake:        option(${variable} "${description}" OFF)
cmake/OpenCVUtils.cmake:      option(${variable} "${description}" ${__value})
cmake/OpenCVUtils.cmake:    unset(${variable} CACHE)
cmake/OpenCVUtils.cmake:# stable & safe duplicates removal macro
cmake/OpenCVUtils.cmake:function(ocv_add_executable target)
cmake/OpenCVUtils.cmake:  add_executable(${target} ${ARGN})
cmake/OpenCVUtils.cmake:#  _modules - variable to hold list of all modules
cmake/OpenCVUtils.cmake:#  _extra - variable to hold list of extra dependencies
cmake/OpenCVUtils.cmake:#  _3rdparty - variable to hold list of prebuilt 3rdparty libraries
cmake/OpenCVGenConfig.cmake:#build list of modules available for the OpenCV user
cmake/OpenCVGenConfig.cmake:  # the REPLACE here is needed, because OpenCVModules_armeabi.cmake includes
cmake/OpenCVGenConfig.cmake:  # OpenCVModules_armeabi-*.cmake, which would match OpenCVModules_armeabi-v7a*.cmake.
cmake/OpenCVFindVA_INTEL.cmake:# Main variables:
cmake/OpenCVPCHSupport.cmake:# Variable:
cmake/OpenCVFindIntelPerCSDK.cmake:# Main variables:
cmake/OpenCVFindIntelPerCSDK.cmake:    message(WARNING "Intel Perceptual Computing SDK library directory (set by INTELPERC_LIB_DIR variable) is not found or does not have Intel Perceptual Computing SDK libraries.")
cmake/OpenCVFindOpenNI.cmake:# Main variables:
cmake/OpenCVFindOpenNI.cmake:    message( WARNING, " OpenNI library directory (set by OPENNI_LIB_DIR variable) is not found or does not have OpenNI libraries." )
cmake/OpenCVFindOpenNI.cmake:    message( WARNING, " OpenNI include directory (set by OPENNI_INCLUDE_DIR variable) is not found or does not have OpenNI include files." )
cmake/OpenCVFindOpenNI.cmake:    message( WARNING, " PrimeSensor Module binaries directory (set by OPENNI_PRIME_SENSOR_MODULE_BIN_DIR variable) is not found or does not have PrimeSensor Module binaries." )
cmake/FindCUDA.cmake:# windows, and mac and should be reasonably up to date with CUDA C
cmake/FindCUDA.cmake:# acceptable version of CUDA was found.
cmake/FindCUDA.cmake:# installed version of the toolkit set the environment variable
cmake/FindCUDA.cmake:# The following variables affect the behavior of the macros in the
cmake/FindCUDA.cmake:#   -- Set to ON to enable and extra compilation pass with the -cubin option in
cmake/FindCUDA.cmake:#      CUDA_NVCC_FLAGS_<CONFIG> variables.  For Visual Studio targets
cmake/FindCUDA.cmake:#   -- If set this will enable separable compilation for all CUDA runtime object
cmake/FindCUDA.cmake:#   -- Creates an executable "cuda_target" which is made up of the files
cmake/FindCUDA.cmake:#   -- Compute the name of the intermediate link file used for separable
cmake/FindCUDA.cmake:#      based on cuda_target the list of objects files that need separable
cmake/FindCUDA.cmake:#   -- Generates the link object required by separable compilation from the given
cmake/FindCUDA.cmake:#      custom commands that generate either PTX or linkable objects (use "PTX" or
cmake/FindCUDA.cmake:#        target was generated when in fact an unusable file exists.  The script
cmake/FindCUDA.cmake:# The script defines the following variables::
cmake/FindCUDA.cmake:#                            these variables.  There are also examples of how to
cmake/FindCUDA.cmake:#                            Only available for CUDA version 4.0+.
cmake/FindCUDA.cmake:#                            Only available for CUDA version 3.2+.
cmake/FindCUDA.cmake:#                            Only available for CUDA version 3.2+.
cmake/FindCUDA.cmake:#                            Only available for CUDA version 4.0+.
cmake/FindCUDA.cmake:#                            Only available for CUDA version 5.5+.
cmake/FindCUDA.cmake:#                            Only available for CUDA version 5.5+.
cmake/FindCUDA.cmake:#                            Only available for CUDA version 5.5+.
cmake/FindCUDA.cmake:#                            Only available for CUDA version 3.2+.
cmake/FindCUDA.cmake:#                            Only available for CUDA version 3.2+.
cmake/FindCUDA.cmake:#   Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html
cmake/FindCUDA.cmake:# The above copyright notice and this permission notice shall be included
cmake/FindCUDA.cmake:  # processed.  Using this variable, we can pull out the current path, and
cmake/FindCUDA.cmake:  # Set this variable as internal, so the user isn't bugged with it.
cmake/FindCUDA.cmake:  # here.  If they aren't there we need to just blank this variable and
cmake/FindCUDA.cmake:# Setup variables' defaults
cmake/FindCUDA.cmake:option(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE "Attach the build rule to the CUDA source file.  Enable only when the CUDA source file is added to at most one target." ON)
cmake/FindCUDA.cmake:# Prints out extra information about the cuda file during compilation
cmake/FindCUDA.cmake:# Extra user settable flags
cmake/FindCUDA.cmake:# Enable CUDA_SEPARABLE_COMPILATION
cmake/FindCUDA.cmake:option(CUDA_SEPARABLE_COMPILATION "Compile CUDA objects with separable compilation enabled.  Requires CUDA 5.0+" OFF)
cmake/FindCUDA.cmake:option(CUDA_VERBOSE_BUILD "Print out the commands run while compiling the CUDA source file.  With the Makefile generator this defaults to VERBOSE variable specified on the command line, but can be forced on with this option." OFF)
cmake/FindCUDA.cmake:# if they have then clear the cache variables, so that will be detected again.
cmake/FindCUDA.cmake:  # No specific variables to catch.  Use this kind of code before calling
cmake/FindCUDA.cmake:  # find_package(CUDA) to clean up any variables that may depend on this path.
cmake/FindCUDA.cmake:# Always set this convenience variable
cmake/FindCUDA.cmake:  if("${CUDA_TARGET_OS_VARIANT}" STREQUAL "Android" AND EXISTS "${CUDA_TOOLKIT_ROOT_DIR}/targets/armv7-linux-androideabi")
cmake/FindCUDA.cmake:    set(_cuda_target_triplet_initial "armv7-linux-androideabi")
cmake/FindCUDA.cmake:  elseif(EXISTS "${CUDA_TOOLKIT_ROOT_DIR}/targets/armv7-linux-gnueabihf")
cmake/FindCUDA.cmake:    set(_cuda_target_triplet_initial "armv7-linux-gnueabihf")
cmake/FindCUDA.cmake:  if("${CUDA_TARGET_OS_VARIANT}" STREQUAL "Android" AND EXISTS "${CUDA_TOOLKIT_ROOT_DIR}/targets/aarch64-linux-androideabi")
cmake/FindCUDA.cmake:    set(_cuda_target_triplet_initial "aarch64-linux-androideabi")
cmake/FindCUDA.cmake:  elseif(EXISTS "${CUDA_TOOLKIT_ROOT_DIR}/targets/aarch64-linux-gnueabihf")
cmake/FindCUDA.cmake:    set(_cuda_target_triplet_initial "aarch64-linux-gnueabihf")
cmake/FindCUDA.cmake:file(GLOB __cuda_available_target_tiplets RELATIVE "${CUDA_TOOLKIT_ROOT_DIR}/targets" "${CUDA_TOOLKIT_ROOT_DIR}/targets/*" )
cmake/FindCUDA.cmake:set_property(CACHE CUDA_TARGET_TRIPLET PROPERTY STRINGS ${__cuda_available_target_tiplets})
cmake/FindCUDA.cmake:# Disable emulation for v3.1 onward
cmake/FindCUDA.cmake:    message(FATAL_ERROR "CUDA_BUILD_EMULATION is not supported in version 3.1 and onwards.  You must disable it to proceed.  You have version ${CUDA_VERSION}.")
cmake/FindCUDA.cmake:  # Emulation libraries aren't available in version 3.1 onward.
cmake/FindCUDA.cmake:# Keep the CUDA_SDK_ROOT_DIR first in order to be able to override the
cmake/FindCUDA.cmake:# environment variables.
cmake/FindCUDA.cmake:# Parse the OPTIONS from ARGN and set the variables prefixed by _option_prefix
cmake/FindCUDA.cmake:  # Avoid absolute paths by removing ':'
cmake/FindCUDA.cmake:# This helper macro populates the following variables and setups up custom
cmake/FindCUDA.cmake:  # If CMake doesn't support separable compilation, complain
cmake/FindCUDA.cmake:  # Reset these variables
cmake/FindCUDA.cmake:    # ${CUDA_NVCC_FLAGS_${config_upper}} variable like the CMAKE_HOST_FLAGS_<CONFIG> variable.
cmake/FindCUDA.cmake:  # Reset the output variable
cmake/FindCUDA.cmake:      # Don't add CMAKE_CURRENT_SOURCE_DIR if the path is already an absolute path.
cmake/FindCUDA.cmake:      # Bring in the dependencies.  Creates a variable CUDA_NVCC_DEPEND #######
cmake/FindCUDA.cmake:# Separable Compilation Link
cmake/FindCUDA.cmake:# Setup the build rule for the separable compilation intermediate link file.
cmake/FindCUDA.cmake:  # Compute the file name of the intermedate link file used for separable
cmake/FindCUDA.cmake:  # Add a link phase for the separable compilation if it has been enabled.  If
cmake/FindCUDA.cmake:  # it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS
cmake/FindCUDA.cmake:  # variable will have been defined.
cmake/FindCUDA.cmake:  # Compute the file name of the intermedate link file used for separable
cmake/FindCUDA.cmake:  add_executable(${cuda_target} ${_cmake_options}
cmake/FindCUDA.cmake:  # Add a link phase for the separable compilation if it has been enabled.  If
cmake/FindCUDA.cmake:  # it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS
cmake/FindCUDA.cmake:  # variable will have been defined.
cmake/FindCUDA.cmake:  # Clear out the variable, so the next time we configure it will be empty.
cmake/OpenCVModule.cmake:# Local variables (set for each module):
cmake/OpenCVModule.cmake:# Global variables:
cmake/OpenCVModule.cmake:# OPENCV_MODULE_${the_module}_DEPS_TO_LINK - differs from above for world build only
cmake/OpenCVModule.cmake:# HAVE_${the_module} - for fast check of module availability
cmake/OpenCVModule.cmake:# the_label - label for current module
cmake/OpenCVModule.cmake:# clean flags for modules enabled on previous cmake run
cmake/OpenCVModule.cmake:set(OPENCV_MODULES_DISABLED_USER  "" CACHE INTERNAL "List of OpenCV modules explicitly disabled by user")
cmake/OpenCVModule.cmake:set(OPENCV_MODULES_DISABLED_AUTO  "" CACHE INTERNAL "List of OpenCV modules implicitly disabled due to dependencies")
cmake/OpenCVModule.cmake:    # create option to enable/disable this module
cmake/OpenCVModule.cmake:    if(NOT DEFINED the_label)
cmake/OpenCVModule.cmake:        set(the_label "Extra")
cmake/OpenCVModule.cmake:        set(the_label "Main")
cmake/OpenCVModule.cmake:    set(OPENCV_MODULE_${the_module}_LABEL "${the_label};${the_module}" CACHE INTERNAL "")
cmake/OpenCVModule.cmake:      set(OPENCV_MODULES_DISABLED_USER ${OPENCV_MODULES_DISABLED_USER} "${the_module}" CACHE INTERNAL "List of OpenCV modules explicitly disabled by user")
cmake/OpenCVModule.cmake:macro(ocv_module_disable module)
cmake/OpenCVModule.cmake:    # touch variable controlling build of the module to suppress "unused variable" CMake warning
cmake/OpenCVModule.cmake:# disables OpenCV module with missing dependencies
cmake/OpenCVModule.cmake:          # ... which are not already in the result and are enabled
cmake/OpenCVModule.cmake:  # disable MODULES with unresolved dependencies
cmake/OpenCVModule.cmake:          if(d MATCHES "^opencv_") # TODO Remove this condition in the future and use HAVE_ variables only
cmake/OpenCVModule.cmake:            message(STATUS "Module ${m} disabled because ${d} dependency can't be resolved!")
cmake/OpenCVModule.cmake:            message(STATUS "Assume that non-module dependency is available: ${d} (for module ${m})")
cmake/OpenCVModule.cmake:  set(OPENCV_MODULES_DISABLED_AUTO ${OPENCV_MODULES_DISABLED_AUTO} CACHE INTERNAL "List of OpenCV modules implicitly disabled due to dependencies")
cmake/OpenCVModule.cmake:      # however they are not on path and need to be placed with executables to run from console w/o APPCONTAINER
cmake/OpenCVModule.cmake:# ensures that all passed modules are available
cmake/OpenCVModule.cmake:# sets OCV_DEPENDENCIES_FOUND variable to TRUE/FALSE
cmake/OpenCVModule.cmake:      ocv_add_executable(${the_target} ${OPENCV_PERF_${the_module}_SOURCES} ${${the_target}_pch})
cmake/OpenCVModule.cmake:        # look for detailed description inside of ocv_create_module macro above
cmake/OpenCVModule.cmake:      # TODO: warn about unsatisfied dependencies
cmake/OpenCVModule.cmake:      ocv_add_executable(${the_target} ${OPENCV_TEST_${the_module}_SOURCES} ${${the_target}_pch})
cmake/OpenCVModule.cmake:      # TODO: warn about unsatisfied dependencies
cmake/OpenCVModule.cmake:        ocv_add_executable(${the_target} "${source}")
cmake/OpenCVFindLibsGrfmt.cmake:# --- Add libwebp to 3rdparty/libwebp and compile it if not available ---
cmake/OpenCVFindMatlab.cmake:# ----- Find Matlab/Octave -----
cmake/OpenCVFindMatlab.cmake:# OpenCVFindMatlab.cmake attempts to locate the install path of Matlab in order
cmake/OpenCVFindMatlab.cmake:# successfully, the following variables will be defined
cmake/OpenCVFindMatlab.cmake:#   MATLAB_ROOT_DIR:    Root of Matlab installation
cmake/OpenCVFindMatlab.cmake:#   MATLAB_BIN:         The main Matlab "executable" (shell script)
cmake/OpenCVFindMatlab.cmake:#   MATLAB_LIBRARIES:   The Matlab libs, usually mx, mex, mat
cmake/OpenCVFindMatlab.cmake:# There doesn't appear to be an elegant way to detect all versions of Matlab
cmake/OpenCVFindMatlab.cmake:# across different platforms. If you know the matlab path and want to avoid
cmake/OpenCVFindMatlab.cmake:# the search, you can define the path to the Matlab root when invoking cmake:
cmake/OpenCVFindMatlab.cmake:# Matlab tends to use some non-standard prefixes and suffixes on its libraries.
cmake/OpenCVFindMatlab.cmake:# find_library when finding Matlab libraries. It does not affect scopes
cmake/OpenCVFindMatlab.cmake:# ----- locate_matlab_root -----
cmake/OpenCVFindMatlab.cmake:# Attempt to find the path to the Matlab installation. If successful, sets
cmake/OpenCVFindMatlab.cmake:# the absolute path in the variable MATLAB_ROOT_DIR
cmake/OpenCVFindMatlab.cmake:function(locate_matlab_root)
cmake/OpenCVFindMatlab.cmake:    # 1. search the path environment variable
cmake/OpenCVFindMatlab.cmake:    find_program(MATLAB_ROOT_DIR_ matlab PATHS ENV PATH)
cmake/OpenCVFindMatlab.cmake:      # /path/to/matlab/rootdir/bin/matlab.exe
cmake/OpenCVFindMatlab.cmake:    # determine the available Matlab versions
cmake/OpenCVFindMatlab.cmake:# ----- locate_matlab_components -----
cmake/OpenCVFindMatlab.cmake:# Given a directory MATLAB_ROOT_DIR, attempt to find the Matlab components
cmake/OpenCVFindMatlab.cmake:# sets the variable MATLAB_FOUND to TRUE
cmake/OpenCVFindMatlab.cmake:function(locate_matlab_components MATLAB_ROOT_DIR)
cmake/OpenCVFindMatlab.cmake:  # get the Matlab executable
cmake/OpenCVFindMatlab.cmake:  find_program(MATLAB_BIN_ NAMES matlab PATHS ${MATLAB_ROOT_DIR}/bin NO_DEFAULT_PATH)
cmake/OpenCVFindMatlab.cmake:  # attempt to find the Matlab root folder
cmake/OpenCVFindMatlab.cmake:    locate_matlab_root()
cmake/OpenCVFindMatlab.cmake:  # given the matlab root folder, find the library locations
cmake/OpenCVFindMatlab.cmake:    locate_matlab_components(${MATLAB_ROOT_DIR})
cmake/OpenCVFindMatlab.cmake:  find_package_handle_standard_args(Matlab DEFAULT_MSG
cmake/templates/opencv_run_all_tests_android.sh.in:  echo "Tests are available for architectures: `ls -m ${OPENCV_TEST_PATH}`"
cmake/templates/opencv_modules.hpp.in: * This file defines the list of modules available in current build configuration
cmake/templates/OpenCVConfig.cmake.in:#    This file will define the following variables:
cmake/templates/OpenCVConfig.cmake.in:#      - OpenCV_COMPUTE_CAPABILITIES     : The version of compute capability.
cmake/templates/OpenCVConfig.cmake.in:#    Advanced variables:
cmake/templates/OpenCVConfig.cmake.in:#    Deprecated variables:
cmake/templates/OpenCVConfig.cmake.in:# TODO All things below should be reviewed. What is about of moving this code into related modules (special vars/hooks/files)
cmake/templates/OpenCVConfig.cmake.in:# Version Compute Capability from which OpenCV has been compiled is remembered
cmake/templates/OpenCVConfig.cmake.in:# Enables mangled install paths, that help with side by side installs
cmake/templates/OpenCVConfig.cmake.in:  # Get the absolute path with no ../.. relative marks, to eliminate implicit linker warnings
cmake/templates/OpenCVConfig.cmake.in:#  Version variables:
cmake/templates/OpenCVConfig.cmake.in:  # Target property INTERFACE_INCLUDE_DIRECTORIES available since 2.8.11:
cmake/templates/OpenCVConfig.cmake.in:#  Check OpenCV availability
cmake/templates/OpenCVConfig.cmake.in:    get_filename_component(__abs_dir "${dir}" ABSOLUTE)
cmake/templates/OpenCVConfig.cmake.in:    if("${__abs_dir}" MATCHES "^${__baseDir}")
cmake/templates/cvconfig.h.in:/* Create PTX or BIN for 1.0 compute capability */
cmake/OpenCVPackaging.cmake:foreach(module calib3d core cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters
cmake/OpenCVPackaging.cmake:               photo shape stitching superres ts video videoio videostab viz)
cmake/OpenCVFindIPPAsync.cmake:# Main variables:
cmake/OpenCVFindIPPAsync.cmake:    message(WARNING "Intel IPP Async library directory (set by IPP_A_LIBRARIES_DIR variable) is not found or does not have Intel IPP Async libraries.")
cmake/OpenCVDetectCUDA.cmake:  message(STATUS "CUDA compilation is disabled (due to only Visual Studio compiler supported on your platform).")
cmake/OpenCVDetectCUDA.cmake:  message(STATUS "CUDA compilation is disabled (due to Clang unsupported on your platform).")
cmake/OpenCVDetectCUDA.cmake:  # Ckeck if user specified 1.0 compute capability: we don't support it
cmake/OpenCVDetectCUDA.cmake:  OCV_OPTION(CUDA_FAST_MATH "Enable --use_fast_math for CUDA compiler " OFF)
cmake/OpenCVDetectCUDA.cmake:    # disabled because of multiple warnings during building nvcc auto generated files
cmake/OpenCVDetectCUDA.cmake:      ocv_warnings_disable(CMAKE_CXX_FLAGS -Wunused-but-set-variable)
cmake/OpenCVDetectPython.cmake:#   library_env (value): Name of Python library ENV variable to check
cmake/OpenCVDetectPython.cmake:#   include_dir_env (value): Name of Python include directory ENV variable to check
cmake/OpenCVDetectPython.cmake:#   found (variable): Set if interpreter found
cmake/OpenCVDetectPython.cmake:#   executable (variable): Output of executable found
cmake/OpenCVDetectPython.cmake:#   version_string (variable): Output of found version
cmake/OpenCVDetectPython.cmake:#   version_major (variable): Output of found major version
cmake/OpenCVDetectPython.cmake:#   version_minor (variable): Output of found minor version
cmake/OpenCVDetectPython.cmake:#   libs_found (variable): Set if libs found
cmake/OpenCVDetectPython.cmake:#   libs_version_string (variable): Output of found libs version
cmake/OpenCVDetectPython.cmake:#   libraries (variable): Output of found Python libraries
cmake/OpenCVDetectPython.cmake:#   library (variable): Output of found Python library
cmake/OpenCVDetectPython.cmake:#   debug_libraries (variable): Output of found Python debug libraries
cmake/OpenCVDetectPython.cmake:#   debug_library (variable): Output of found Python debug library
cmake/OpenCVDetectPython.cmake:#   include_path (variable): Output of found Python include path
cmake/OpenCVDetectPython.cmake:#   include_dir (variable): Output of found Python include dir
cmake/OpenCVDetectPython.cmake:#   include_dir2 (variable): Output of found Python include dir2
cmake/OpenCVDetectPython.cmake:#   packages_path (variable): Output of found Python packages path
cmake/OpenCVDetectPython.cmake:#   numpy_include_dirs (variable): Output of found Python Numpy include dirs
cmake/OpenCVDetectPython.cmake:#   numpy_version (variable): Output of found Python Numpy version
cmake/OpenCVDetectPython.cmake:         found executable version_string version_major version_minor
cmake/OpenCVDetectPython.cmake:  ocv_check_environment_variables(${executable})
cmake/OpenCVDetectPython.cmake:  if(${executable})
cmake/OpenCVDetectPython.cmake:    set(PYTHON_EXECUTABLE "${${executable}}")
cmake/OpenCVDetectPython.cmake:  if(WIN32 AND NOT ${executable})
cmake/OpenCVDetectPython.cmake:    # search for executable with the same bitness as resulting binaries
cmake/OpenCVDetectPython.cmake:    # standard FindPythonInterp always prefers executable from system path
cmake/OpenCVDetectPython.cmake:    set(_executable ${PYTHON_EXECUTABLE})
cmake/OpenCVDetectPython.cmake:      ocv_check_environment_variables(${library_env} ${include_dir_env})
cmake/OpenCVDetectPython.cmake:        execute_process(COMMAND ${_executable} -c "from distutils.sysconfig import *; print(get_python_lib())"
cmake/OpenCVDetectPython.cmake:        get_filename_component(_path "${_executable}" PATH)
cmake/OpenCVDetectPython.cmake:          message(STATUS "If you want to enable Python/Numpy support, set the following variables:")
cmake/OpenCVDetectPython.cmake:          execute_process(COMMAND "${_executable}" -c "import os; os.environ['DISTUTILS_USE_SDK']='1'; import numpy.distutils; print(os.pathsep.join(numpy.distutils.misc_util.get_numpy_include_dirs()))"
cmake/OpenCVDetectPython.cmake:          execute_process(COMMAND "${_executable}" -c "import numpy; print(numpy.version.version)"
cmake/OpenCVDetectPython.cmake:  set(${executable} "${_executable}" CACHE FILEPATH "Path to Python interpretor")
cmake/OpenCVConfig.cmake:#    This file will define the following variables:
cmake/OpenCVConfig.cmake:#      - OpenCV_COMPUTE_CAPABILITIES     : The version of compute capability
cmake/OpenCVConfig.cmake:#    Advanced variables:
cmake/OpenCVConfig.cmake:    enable_language(CXX)
cmake/OpenCVConfig.cmake:  # if user' app uses CUDA, then it probably wants CUDA-enabled OpenCV binaries
cmake/OpenCVConfig.cmake:      message(STATUS "You might need to add ${_OpenCV_LIB_PATH} to your PATH to be able to run your applications.")
cmake/OpenCVConfig.cmake:        message(STATUS "GPU support is enabled so you might also need ${_OpenCV_LIB_PATH2} in your PATH (it must go after the ${_OpenCV_LIB_PATH}).")
cmake/OpenCVConfig.cmake:You should manually point CMake variable OpenCV_DIR to your build of OpenCV library."
cmake/OpenCVFindIPP.cmake:# HAVE_IPP_ICV_ONLY - True if Intel IPP ICV version is available
cmake/OpenCVFindIPP.cmake:  # extract info and assign to variables
cmake/OpenCVFindIPP.cmake:# This macro uses IPP_ROOT_DIR variable
cmake/OpenCVFindIPP.cmake:# TODO Cleanup code after ICV package stabilization
cmake/OpenCVFindIPP.cmake:# OPENCV_IPP_PATH is an environment variable for internal usage only, do not use it
cmake/OpenCVFindVA.cmake:# Main variables:
cmake/OpenCVDetectCXXCompiler.cmake:    if(NOT CMAKE_GCC_REGEX_VERSION)#compiler did not return anything reasonable
cmake/OpenCVDetectVTK.cmake:  message(STATUS "VTK support is disabled. VTK ver. 5.8.0 is minimum required, but found VTK ver. ${VTK_VERSION}")
cmake/OpenCVDetectVTK.cmake:    message(STATUS "VTK support is disabled. Incompatible combination: OpenCV + Qt5 and VTK ver.${VTK_VERSION} + Qt4")
cmake/OpenCVDetectVTK.cmake:  message(STATUS "VTK support is disabled. Possible incompatible combination: OpenCV+Qt5, and VTK ver.${VTK_VERSION} with Qt4")
cmake/OpenCVDetectVTK.cmake:    message(STATUS "VTK support is disabled. Incompatible combination: OpenCV + Qt5 and VTK ver.${VTK_VERSION} + Qt4")
cmake/OpenCVDetectVTK.cmake:    message(STATUS "VTK support is disabled. Incompatible combination: OpenCV + Qt4 and VTK ver.${VTK_VERSION} + Qt5")
cmake/OpenCVDetectAndroidSDK.cmake:  #warn about outdated SDK
cmake/OpenCVDetectAndroidSDK.cmake:          ocv_warnings_disable(CMAKE_C_FLAGS -Wstrict-prototypes -Wunused-parameter -Wmissing-prototypes)
cmake/OpenCVDetectAndroidSDK.cmake:    set(__android_project_chain ${target} CACHE INTERNAL "auxiliary variable used for Android progects chaining")
cmake/OpenCVGenABI.cmake:set(filename "opencv_abi.xml")
cmake/OpenCVGenABI.cmake:configure_file("${CMAKE_CURRENT_SOURCE_DIR}/cmake/templates/opencv_abi.xml.in" "${path1}")
cmake/OpenCVFindWebP.cmake:    # all listed variables are TRUE
cmake/OpenCVFindOpenNI2.cmake:# Main variables:
cmake/OpenCVFindOpenNI2.cmake:    message( WARNING, " OpenNI2 library directory (set by OPENNI2_LIB_DIR variable) is not found or does not have OpenNI2 libraries." )
cmake/OpenCVFindOpenNI2.cmake:    message( WARNING, " OpenNI2 include directory (set by OPENNI2_INCLUDE_DIR variable) is not found or does not have OpenNI2 include files." )
LICENSE:  * Redistributions of source code must retain the above copyright notice,
LICENSE:  * Redistributions in binary form must reproduce the above copyright notice,
LICENSE:warranties of merchantability and fitness for a particular purpose are disclaimed.
LICENSE:In no event shall copyright holders or contributors be liable for any direct,
LICENSE:and on any theory of liability, whether in contract, strict liability,
CMakeLists.txt:# but CMAKE_CROSSCOMPILING variable will be set only on project(OpenCV) command
CMakeLists.txt:  # Making definitions available to other configurations and
CMakeLists.txt:  # silence cmake 3.0+ warnings about reading LOCATION attribute
CMakeLists.txt:  # silence cmake 3.0+ warnings about MACOSX_RPATH
CMakeLists.txt:enable_testing()
CMakeLists.txt:OCV_OPTION(WITH_GSTREAMER_0_10 "Enable Gstreamer 0.10 support (instead of 1.x)"                              OFF )
CMakeLists.txt:OCV_OPTION(WITH_MATLAB         "Include Matlab support"                      ON   IF (NOT ANDROID AND NOT IOS AND NOT WINRT))
CMakeLists.txt:OCV_OPTION(BUILD_PACKAGE            "Enables 'make package_source' command"       ON  IF NOT WINRT)
CMakeLists.txt:OCV_OPTION(BUILD_WITH_STATIC_CRT    "Enables use of staticaly linked CRT for staticaly linked OpenCV" ON IF MSVC )
CMakeLists.txt:OCV_OPTION(BUILD_WITH_DYNAMIC_IPP   "Enables dynamic linking of IPP (only for standalone IPP)" OFF )
CMakeLists.txt:OCV_OPTION(INSTALL_TO_MANGLED_PATHS "Enables mangled install paths, that help with side by side installs." OFF IF (UNIX AND NOT ANDROID AND NOT APPLE_FRAMEWORK AND BUILD_SHARED_LIBS) )
CMakeLists.txt:OCV_OPTION(ENABLE_PROFILING           "Enable profiling in the GCC compiler (Add flags: -g -pg)" OFF  IF CMAKE_COMPILER_IS_GNUCXX )
CMakeLists.txt:OCV_OPTION(ENABLE_COVERAGE            "Enable coverage collection with  GCov"                    OFF  IF CMAKE_COMPILER_IS_GNUCXX )
CMakeLists.txt:OCV_OPTION(ENABLE_OMIT_FRAME_POINTER  "Enable -fomit-frame-pointer for GCC"                      ON   IF CMAKE_COMPILER_IS_GNUCXX AND NOT (APPLE AND CMAKE_COMPILER_IS_CLANGCXX) )
CMakeLists.txt:OCV_OPTION(ENABLE_POWERPC             "Enable PowerPC for GCC"                                   ON   IF (CMAKE_COMPILER_IS_GNUCXX AND CMAKE_SYSTEM_PROCESSOR MATCHES powerpc.*) )
CMakeLists.txt:OCV_OPTION(ENABLE_FAST_MATH           "Enable -ffast-math (not recommended for GCC 4.6.x)"       OFF  IF (CMAKE_COMPILER_IS_GNUCXX AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_SSE                 "Enable SSE instructions"                                  ON   IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_SSE2                "Enable SSE2 instructions"                                 ON   IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_SSE3                "Enable SSE3 instructions"                                 ON   IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX OR CV_ICC) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_SSSE3               "Enable SSSE3 instructions"                                OFF  IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_SSE41               "Enable SSE4.1 instructions"                               OFF  IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX OR CV_ICC) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_SSE42               "Enable SSE4.2 instructions"                               OFF  IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_POPCNT              "Enable POPCNT instructions"                               OFF  IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_AVX                 "Enable AVX instructions"                                  OFF  IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_AVX2                "Enable AVX2 instructions"                                 OFF  IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_FMA3                "Enable FMA3 instructions"                                 OFF  IF ((MSVC OR CMAKE_COMPILER_IS_GNUCXX) AND (X86 OR X86_64)) )
CMakeLists.txt:OCV_OPTION(ENABLE_NEON                "Enable NEON instructions"                                 "${NEON}" IF CMAKE_COMPILER_IS_GNUCXX AND (ARM OR AARCH64 OR IOS) )
CMakeLists.txt:OCV_OPTION(ENABLE_VFPV3               "Enable VFPv3-D32 instructions"                            OFF  IF CMAKE_COMPILER_IS_GNUCXX AND (ARM OR AARCH64 OR IOS) )
CMakeLists.txt:OCV_OPTION(GENERATE_ABI_DESCRIPTOR    "Generate XML file for abi_compliance_checker tool" OFF IF UNIX)
CMakeLists.txt:OCV_OPTION(DOWNLOAD_EXTERNAL_TEST_DATA "Download external test data (Python executable and OPENCV_TEST_DATA_PATH environment variable may be required)" OFF )
CMakeLists.txt:# Save libs and executables in the same place
CMakeLists.txt:    message(STATUS "To enable PlantUML support, set PLANTUML_JAR environment variable or pass -DPLANTUML_JAR=<filepath> option to cmake")
CMakeLists.txt:# --- Matlab/Octave ---
CMakeLists.txt:  include(cmake/OpenCVFindMatlab.cmake)
CMakeLists.txt:status("    Disabled:"               OPENCV_MODULES_DISABLED_USER  THEN ${OPENCV_MODULES_DISABLED_USER_ST}  ELSE "-")
CMakeLists.txt:status("    Disabled by dependency:" OPENCV_MODULES_DISABLED_AUTO  THEN ${OPENCV_MODULES_DISABLED_AUTO_ST}  ELSE "-")
CMakeLists.txt:status("    Unavailable:"            OPENCV_MODULES_DISABLED_FORCE THEN ${OPENCV_MODULES_DISABLED_FORCE_ST} ELSE "-")
CMakeLists.txt:  status("    Use IPP:"   WITH_IPP AND NOT HAVE_IPP THEN "IPP not found or implicitly disabled" ELSE NO)
CMakeLists.txt:# ========================= matlab =========================
CMakeLists.txt:  status("  Matlab:")
CMakeLists.txt:  status("  Matlab:"        WITH_MATLAB AND NOT MATLAB_FOUND THEN "Matlab not found or implicitly disabled" ELSE NO)
apps/traincascade/old_ml_data.cpp://   * Redistribution's of source code must retain the above copyright notice,
apps/traincascade/old_ml_data.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/traincascade/old_ml_data.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/traincascade/old_ml_data.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/traincascade/old_ml_data.cpp:// and on any theory of liability, whether in contract, strict liability,
apps/traincascade/old_ml_data.cpp:    // read the first data line and determine the number of variables
apps/traincascade/old_ml_data.cpp:    // create temporary memory storage to store the whole database
apps/traincascade/old_ml_data.cpp:            dm[j] = ( fabs( MISS_VAL - sdata[j] ) <= FLT_EPSILON );
apps/traincascade/old_ml_data.cpp:const std::map<cv::String, int>& CvMLData::get_class_labels_map() const
apps/traincascade/old_ml_data.cpp:        if ( (*stopstring != 0) && (*stopstring != '\n') && (strcmp(stopstring, "\r\n") != 0) ) // class label
apps/traincascade/old_ml_data.cpp:        CV_ERROR( CV_StsBadArg, "it`s impossible to assign CV_VAR_ORDERED type to categorical variable" );
apps/traincascade/old_ml_data.cpp:                    CV_ERROR( CV_StsBadArg, "it`s impossible to assign CV_VAR_ORDERED type to categorical variable" );
apps/traincascade/old_ml_data.cpp:                            CV_ERROR( CV_StsBadArg, "it`s impossible to assign CV_VAR_ORDERED type to categorical variable" );
apps/traincascade/old_ml_data.cpp:        CV_ERROR( CV_StsBadArg, "variable index is not correct" );
apps/traincascade/HOGfeatures.cpp:void CvHOGEvaluator::setImage(const Mat &img, uchar clsLabel, int idx)
apps/traincascade/HOGfeatures.cpp:    CvFeatureEvaluator::setImage( img, clsLabel, idx );
apps/traincascade/haarfeatures.cpp:void CvHaarEvaluator::setImage(const Mat& img, uchar clsLabel, int idx)
apps/traincascade/haarfeatures.cpp:    CvFeatureEvaluator::setImage( img, clsLabel, idx);
apps/traincascade/traincascade_features.h:    virtual void setImage(const cv::Mat& img, uchar clsLabel, int idx);
apps/traincascade/old_ml_inner_functions.cpp://   * Redistribution's of source code must retain the above copyright notice,
apps/traincascade/old_ml_inner_functions.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/traincascade/old_ml_inner_functions.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/traincascade/old_ml_inner_functions.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/traincascade/old_ml_inner_functions.cpp:// and on any theory of liability, whether in contract, strict liability,
apps/traincascade/old_ml_inner_functions.cpp:            "Component mask should contain as many elements as the total number of input variables" );
apps/traincascade/old_ml_inner_functions.cpp:            CV_ERROR( CV_StsOutOfRange, "No components/input_variables is selected!" );
apps/traincascade/old_ml_inner_functions.cpp:            "index array may not contain more elements than the total number of input variables" );
apps/traincascade/old_ml_inner_functions.cpp:        CV_ERROR( var_type ? CV_StsBadArg : CV_StsNullPtr, "Invalid or absent var_type array" );
apps/traincascade/old_ml_inner_functions.cpp:            CV_ERROR( CV_StsBadArg, "The output matrix of probabilities is invalid" );
apps/traincascade/old_ml_inner_functions.cpp:            "The matrix of probabilities must be 1-dimensional vector of 32fC1 type" );
apps/traincascade/old_ml_inner_functions.cpp:            "The vector of probabilities must contain as many elements as "
apps/traincascade/old_ml_inner_functions.cpp:cvWritebackLabels( const CvMat* labels, CvMat* dst_labels,
apps/traincascade/old_ml_inner_functions.cpp:    CV_FUNCNAME( "cvWritebackLabels" );
apps/traincascade/old_ml_inner_functions.cpp:    if( dst_labels && !CV_IS_MAT(dst_labels) )
apps/traincascade/old_ml_inner_functions.cpp:        CV_ERROR( CV_StsBadArg, "Array of output labels is not a valid matrix" );
apps/traincascade/old_ml_inner_functions.cpp:        CV_ERROR( CV_StsBadArg, "Probability matrix is not valid" );
apps/traincascade/old_ml_inner_functions.cpp:    if( dst_labels && (!labels || labels->data.ptr != dst_labels->data.ptr) )
apps/traincascade/old_ml_inner_functions.cpp:        if( !labels )
apps/traincascade/old_ml_inner_functions.cpp:            CV_ERROR( CV_StsNullPtr, "NULL labels" );
apps/traincascade/old_ml_inner_functions.cpp:        CV_ASSERT( labels->rows == 1 );
apps/traincascade/old_ml_inner_functions.cpp:        if( dst_labels->rows != 1 && dst_labels->cols != 1 )
apps/traincascade/old_ml_inner_functions.cpp:            CV_ERROR( CV_StsBadSize, "Array of output labels should be 1d vector" );
apps/traincascade/old_ml_inner_functions.cpp:        if( dst_labels->rows + dst_labels->cols - 1 != samples_all )
apps/traincascade/old_ml_inner_functions.cpp:            "Size of vector of output labels is not equal to the total number of input samples" );
apps/traincascade/old_ml_inner_functions.cpp:        CV_ASSERT( labels->cols == samples_selected );
apps/traincascade/old_ml_inner_functions.cpp:        CV_CALL( icvConvertDataToSparse( labels->data.ptr, labels->step, labels->type,
apps/traincascade/old_ml_inner_functions.cpp:                        dst_labels->data.ptr, dst_labels->step, dst_labels->type,
apps/traincascade/old_ml_inner_functions.cpp:            CV_ERROR( CV_StsUnmatchedSizes, "Invalid number of columns in output probability matrix" );
apps/traincascade/old_ml_inner_functions.cpp:            "Number of rows in output probability matrix is "
apps/traincascade/old_ml_inner_functions.cpp:            CV_ERROR( CV_StsBadArg, "Invalid matrix of probabilities" );
apps/traincascade/old_ml_inner_functions.cpp:            "matrix of probabilities must have as many rows as the total number of samples" );
apps/traincascade/old_ml_inner_functions.cpp:            CV_ERROR( CV_StsUnsupportedFormat, "matrix of probabilities must have 32fC1 type" );
apps/traincascade/old_ml_inner_functions.cpp:    if( normalize_probs && fabs(sum - 1.) > FLT_EPSILON )
apps/traincascade/old_ml_inner_functions.cpp:    if( fabs(r - 1.) > FLT_EPSILON && fabs(sum - 1.) < outlier_thresh )
apps/traincascade/old_ml_inner_functions.cpp:void icvFindClusterLabels( const CvMat* probs, float outlier_thresh, float r,
apps/traincascade/old_ml_inner_functions.cpp:                          const CvMat* labels )
apps/traincascade/old_ml_inner_functions.cpp:    CV_FUNCNAME("icvFindClusterLabels");
apps/traincascade/old_ml_inner_functions.cpp:    CV_ASSERT( ICV_IS_MAT_OF_TYPE(labels, CV_32SC1) );
apps/traincascade/old_ml_inner_functions.cpp:    CV_ASSERT( nsamples == labels->cols );
apps/traincascade/old_ml_inner_functions.cpp:        labels->data.i[i] = icvGetNumberOfCluster( probs->data.db + i*probs->cols,
apps/traincascade/old_ml_inner_functions.cpp:        counts->data.i[labels->data.i[i] + 1]++;
apps/traincascade/old_ml_inner_functions.cpp:    // Filling empty clusters with the vector, that has the maximal probability
apps/traincascade/old_ml_inner_functions.cpp:        // and that has a maximal probability among all these vectors
apps/traincascade/old_ml_inner_functions.cpp:            int label = labels->data.i[i];
apps/traincascade/old_ml_inner_functions.cpp:            if( counts->data.i[label+1] == 0 ||
apps/traincascade/old_ml_inner_functions.cpp:                (counts->data.i[label+1] <= 1 && label != -1) )
apps/traincascade/old_ml_inner_functions.cpp:        counts->data.i[labels->data.i[maxprob_loc] + 1]--;
apps/traincascade/old_ml_inner_functions.cpp:        labels->data.i[maxprob_loc] = j;
apps/traincascade/old_ml_inner_functions.cpp:} // End of icvFindClusterLabels
apps/traincascade/boost.h:    virtual const int* get_class_labels( CvDTreeNode* n, int* labelsBuf );
apps/traincascade/boost.h:    virtual const int* get_cv_labels( CvDTreeNode* n, int* labelsBuf);
apps/traincascade/old_ml_tree.cpp://   * Redistribution's of source code must retain the above copyright notice,
apps/traincascade/old_ml_tree.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/traincascade/old_ml_tree.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/traincascade/old_ml_tree.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/traincascade/old_ml_tree.cpp:// and on any theory of liability, whether in contract, strict liability,
apps/traincascade/old_ml_tree.cpp:                      bool _shared, bool _add_labels )
apps/traincascade/old_ml_tree.cpp:              _var_type, _missing_mask, _params, _shared, _add_labels );
apps/traincascade/old_ml_tree.cpp:    bool _shared, bool _add_labels, bool _update_data )
apps/traincascade/old_ml_tree.cpp:            _sample_idx, _var_type, _missing_mask, _params, _shared, _add_labels );
apps/traincascade/old_ml_tree.cpp:            "The new training data must have the same types and the input and output variables "
apps/traincascade/old_ml_tree.cpp:            "and the same categories for categorical variables" );
apps/traincascade/old_ml_tree.cpp:    // set the two last elements of var_type array to be able
apps/traincascade/old_ml_tree.cpp:    // to locate responses and cross-validation labels using
apps/traincascade/old_ml_tree.cpp:    // in case of single ordered predictor we need dummy cv_labels
apps/traincascade/old_ml_tree.cpp:    have_labels = cv_n > 0 || (ord_var_count == 1 && cat_var_count == 0) || _add_labels;
apps/traincascade/old_ml_tree.cpp:    work_var_count = var_count + (is_classifier ? 1 : 0) // for responses class_labels
apps/traincascade/old_ml_tree.cpp:                               + (have_labels ? 1 : 0); // for cv_labels
apps/traincascade/old_ml_tree.cpp:        if( vi < var_count ) // analyze i-th input variable
apps/traincascade/old_ml_tree.cpp:            (vi == var_count && is_classifier) ) // process categorical variable or response
apps/traincascade/old_ml_tree.cpp:            int c_count, prev_label;
apps/traincascade/old_ml_tree.cpp:                        if( fabs(t - val) > FLT_EPSILON )
apps/traincascade/old_ml_tree.cpp:                                "variable is not an integer", i, vi );
apps/traincascade/old_ml_tree.cpp:                            "variable is too large", i, vi );
apps/traincascade/old_ml_tree.cpp:                prev_label = ~*pair16u32s_ptr[0].i;
apps/traincascade/old_ml_tree.cpp:                    int cur_label = *pair16u32s_ptr[i].i;
apps/traincascade/old_ml_tree.cpp:                    if( cur_label != prev_label )
apps/traincascade/old_ml_tree.cpp:                        c_map[++c_count] = prev_label = cur_label;
apps/traincascade/old_ml_tree.cpp:                // replace labels for missing values with -1
apps/traincascade/old_ml_tree.cpp:                prev_label = ~*int_ptr[0];
apps/traincascade/old_ml_tree.cpp:                    int cur_label = *int_ptr[i];
apps/traincascade/old_ml_tree.cpp:                    if( cur_label != prev_label )
apps/traincascade/old_ml_tree.cpp:                        c_map[++c_count] = prev_label = cur_label;
apps/traincascade/old_ml_tree.cpp:                // replace labels for missing values with -1
apps/traincascade/old_ml_tree.cpp:        else if( ci < 0 ) // process ordered variable
apps/traincascade/old_ml_tree.cpp:                    if( fabs(val) >= ord_nan )
apps/traincascade/old_ml_tree.cpp:                            "variable (=%g) is too large", i, vi, val );
apps/traincascade/old_ml_tree.cpp:    // set sample labels
apps/traincascade/old_ml_tree.cpp:            const int* src = get_class_labels(data_root, (int*)(uchar*)inn_buf);
apps/traincascade/old_ml_tree.cpp:    have_labels = have_priors = is_classifier = false;
apps/traincascade/old_ml_tree.cpp:const int* CvDTreeTrainData::get_class_labels( CvDTreeNode* n, int* labels_buf )
apps/traincascade/old_ml_tree.cpp:        return get_cat_var_data( n, var_count, labels_buf);
apps/traincascade/old_ml_tree.cpp:const int* CvDTreeTrainData::get_cv_labels( CvDTreeNode* n, int* labels_buf )
apps/traincascade/old_ml_tree.cpp:    if (have_labels)
apps/traincascade/old_ml_tree.cpp:        return get_cat_var_data( n, get_work_var_count()- 1, labels_buf);
apps/traincascade/old_ml_tree.cpp:// best (primary) split quality. That is, if a surrogate split is absolutely
apps/traincascade/old_ml_tree.cpp:// minimum possible quality (w/o considering the above mentioned scale)
apps/traincascade/old_ml_tree.cpp:        int* labels_buf = (int*)inn_buf;
apps/traincascade/old_ml_tree.cpp:        const int* labels = data->get_cat_var_data( node, vi, labels_buf );
apps/traincascade/old_ml_tree.cpp:            int sum = 0, sum_abs = 0;
apps/traincascade/old_ml_tree.cpp:                int idx = labels[i];
apps/traincascade/old_ml_tree.cpp:                sum += d; sum_abs += d & 1;
apps/traincascade/old_ml_tree.cpp:            R = (sum_abs + sum) >> 1;
apps/traincascade/old_ml_tree.cpp:            L = (sum_abs - sum) >> 1;
apps/traincascade/old_ml_tree.cpp:            double sum = 0, sum_abs = 0;
apps/traincascade/old_ml_tree.cpp:            int* responses_buf = labels_buf + n;
apps/traincascade/old_ml_tree.cpp:            const int* responses = data->get_class_labels(node, responses_buf);
apps/traincascade/old_ml_tree.cpp:                int idx = labels[i];
apps/traincascade/old_ml_tree.cpp:                sum += d*w; sum_abs += (d & 1)*w;
apps/traincascade/old_ml_tree.cpp:            R = (sum_abs + sum) * 0.5;
apps/traincascade/old_ml_tree.cpp:            L = (sum_abs - sum) * 0.5;
apps/traincascade/old_ml_tree.cpp:            const int* responses = data->get_class_labels(node, responses_buf);
apps/traincascade/old_ml_tree.cpp:    const int* responses = data->get_class_labels( node, responses_buf );
apps/traincascade/old_ml_tree.cpp:                                int* csums, int k, int* labels )
apps/traincascade/old_ml_tree.cpp:    // assign labels randomly
apps/traincascade/old_ml_tree.cpp:        labels[i] = i < k ? i : r->uniform(0, k);
apps/traincascade/old_ml_tree.cpp:        CV_SWAP( labels[i1], labels[i2], j );
apps/traincascade/old_ml_tree.cpp:            int* s = csums + labels[i]*m;
apps/traincascade/old_ml_tree.cpp:            if( min_idx != labels[i] )
apps/traincascade/old_ml_tree.cpp:            labels[i] = min_idx;
apps/traincascade/old_ml_tree.cpp:    int* labels_buf = (int*)ext_buf;
apps/traincascade/old_ml_tree.cpp:    const int* labels = data->get_cat_var_data(node, vi, labels_buf);
apps/traincascade/old_ml_tree.cpp:    int* responses_buf = labels_buf + n;
apps/traincascade/old_ml_tree.cpp:    const int* responses = data->get_class_labels(node, responses_buf);
apps/traincascade/old_ml_tree.cpp:    int* cluster_labels = 0;
apps/traincascade/old_ml_tree.cpp:    // c_{jk} - number of samples that have vi-th input variable = j and response = k.
apps/traincascade/old_ml_tree.cpp:       j = ( labels[i] == 65535 && data->is_buf_16u) ? -1 : labels[i];
apps/traincascade/old_ml_tree.cpp:            cluster_labels = cjk + m*mi;
apps/traincascade/old_ml_tree.cpp:            cluster_categories( _cjk, _mi, m, cjk, mi, cluster_labels );
apps/traincascade/old_ml_tree.cpp:                idx = cluster_labels ? cluster_labels[i] : i;
apps/traincascade/old_ml_tree.cpp:    int* labels_buf = (int*)ext_buf;
apps/traincascade/old_ml_tree.cpp:    const int* labels = data->get_cat_var_data(node, vi, labels_buf);
apps/traincascade/old_ml_tree.cpp:    float* responses_buf = (float*)(labels_buf + n);
apps/traincascade/old_ml_tree.cpp:        int idx = ( (labels[i] == 65535) && data->is_buf_16u ) ? -1 : labels[i];
apps/traincascade/old_ml_tree.cpp:        int sum = 0, sum_abs = 0;
apps/traincascade/old_ml_tree.cpp:            sum += d; sum_abs += d & 1;
apps/traincascade/old_ml_tree.cpp:        // sum_abs = R + L; sum = R - L
apps/traincascade/old_ml_tree.cpp:        RR = (sum_abs + sum) >> 1;
apps/traincascade/old_ml_tree.cpp:        LR = (sum_abs - sum) >> 1;
apps/traincascade/old_ml_tree.cpp:        double sum = 0, sum_abs = 0;
apps/traincascade/old_ml_tree.cpp:        const int* responses = data->get_class_labels(node, responses_buf);
apps/traincascade/old_ml_tree.cpp:            sum += d*w; sum_abs += (d & 1)*w;
apps/traincascade/old_ml_tree.cpp:        // sum_abs = R + L; sum = R - L
apps/traincascade/old_ml_tree.cpp:        RR = (sum_abs + sum)*0.5;
apps/traincascade/old_ml_tree.cpp:        LR = (sum_abs - sum)*0.5;
apps/traincascade/old_ml_tree.cpp:    int* labels_buf = (int*)ext_buf;
apps/traincascade/old_ml_tree.cpp:    const int* labels = data->get_cat_var_data(node, vi, labels_buf);
apps/traincascade/old_ml_tree.cpp:            int idx = ( (labels[i] == 65535) && (data->is_buf_16u) ) ? -1 : labels[i];
apps/traincascade/old_ml_tree.cpp:            int sum_abs = _rc[idx] + (d & 1);
apps/traincascade/old_ml_tree.cpp:            _lc[idx] = sum; _rc[idx] = sum_abs;
apps/traincascade/old_ml_tree.cpp:            int sum_abs = _rc[i];
apps/traincascade/old_ml_tree.cpp:            lc[i] = (sum_abs - sum) >> 1;
apps/traincascade/old_ml_tree.cpp:            rc[i] = (sum_abs + sum) >> 1;
apps/traincascade/old_ml_tree.cpp:        int* responses_buf = labels_buf + n;
apps/traincascade/old_ml_tree.cpp:        const int* responses = data->get_class_labels(node, responses_buf);
apps/traincascade/old_ml_tree.cpp:            int idx = ( (labels[i] == 65535) && (data->is_buf_16u) ) ? -1 : labels[i];
apps/traincascade/old_ml_tree.cpp:            double sum_abs = rc[idx] + (d & 1)*w;
apps/traincascade/old_ml_tree.cpp:            lc[idx] = sum; rc[idx] = sum_abs;
apps/traincascade/old_ml_tree.cpp:            double sum_abs = rc[i];
apps/traincascade/old_ml_tree.cpp:            lc[i] = (sum_abs - sum) * 0.5;
apps/traincascade/old_ml_tree.cpp:            rc[i] = (sum_abs + sum) * 0.5;
apps/traincascade/old_ml_tree.cpp:    int* cv_labels_buf = (int*)ext_buf;
apps/traincascade/old_ml_tree.cpp:    const int* cv_labels = data->get_cv_labels(node, cv_labels_buf);
apps/traincascade/old_ml_tree.cpp:        //  * node value is the label of the class that has the largest weight in the node.
apps/traincascade/old_ml_tree.cpp:        //  * j-th cross-validation fold value and risk are calculated as above,
apps/traincascade/old_ml_tree.cpp:        //    but using the samples with cv_labels(*)!=j.
apps/traincascade/old_ml_tree.cpp:        //    misclassified samples with cv_labels(*)==j.
apps/traincascade/old_ml_tree.cpp:        int* responses_buf = cv_labels_buf + n;
apps/traincascade/old_ml_tree.cpp:        const int* responses = data->get_class_labels(node, responses_buf);
apps/traincascade/old_ml_tree.cpp:                j = cv_labels[i]; k = responses[i];
apps/traincascade/old_ml_tree.cpp:        //  * j-th cross-validation fold value and risk are calculated as above,
apps/traincascade/old_ml_tree.cpp:        //    but using the samples with cv_labels(*)!=j.
apps/traincascade/old_ml_tree.cpp:        //    using samples with cv_labels(*)==j as the test subset:
apps/traincascade/old_ml_tree.cpp:        //    error_j = sum_(i,cv_labels(i)==j)((Y_i - <node_value_j>)^2),
apps/traincascade/old_ml_tree.cpp:        //    over the samples with cv_labels(*)==j.
apps/traincascade/old_ml_tree.cpp:        float* values_buf = (float*)(cv_labels_buf + n);
apps/traincascade/old_ml_tree.cpp:                j = cv_labels[i];
apps/traincascade/old_ml_tree.cpp:                int* labels_buf = (int*)(uchar*)inn_buf;
apps/traincascade/old_ml_tree.cpp:                const int* labels = data->get_cat_var_data(node, vi, labels_buf);
apps/traincascade/old_ml_tree.cpp:                    int idx = labels[i];
apps/traincascade/old_ml_tree.cpp:        // initialize new indices for splitting ordered variables
apps/traincascade/old_ml_tree.cpp:    // split ordered variables, keep both halves sorted.
apps/traincascade/old_ml_tree.cpp:    // split categorical vars, responses and cv_labels using new_idx relocation table
apps/traincascade/old_ml_tree.cpp:            int d = fabs((double)r - response->data.fl[(size_t)si*r_step]) <= FLT_EPSILON ? 0 : 1;
apps/traincascade/old_ml_tree.cpp:    CvMat* ab = 0;
apps/traincascade/old_ml_tree.cpp:    CV_CALL( ab = cvCreateMat( 1, 256, CV_64F ));
apps/traincascade/old_ml_tree.cpp:        if( ab->cols <= tree_count )
apps/traincascade/old_ml_tree.cpp:            CV_CALL( temp = cvCreateMat( 1, ab->cols*3/2, CV_64F ));
apps/traincascade/old_ml_tree.cpp:            for( ti = 0; ti < ab->cols; ti++ )
apps/traincascade/old_ml_tree.cpp:                temp->data.db[ti] = ab->data.db[ti];
apps/traincascade/old_ml_tree.cpp:            cvReleaseMat( &ab );
apps/traincascade/old_ml_tree.cpp:            ab = temp;
apps/traincascade/old_ml_tree.cpp:        ab->data.db[tree_count] = min_alpha;
apps/traincascade/old_ml_tree.cpp:    ab->data.db[0] = 0.;
apps/traincascade/old_ml_tree.cpp:            ab->data.db[ti] = sqrt(ab->data.db[ti]*ab->data.db[ti+1]);
apps/traincascade/old_ml_tree.cpp:        ab->data.db[tree_count-1] = DBL_MAX*0.5;
apps/traincascade/old_ml_tree.cpp:                    if( ab->data.db[tk] > min_alpha )
apps/traincascade/old_ml_tree.cpp:    cvReleaseMat( &ab );
apps/traincascade/old_ml_tree.cpp:        "number of elements as the total number of variables used for training" );
apps/traincascade/old_ml_tree.cpp:    if( data->cat_count && !preprocessed_input ) // cache for categorical variables
apps/traincascade/old_ml_tree.cpp:                            "one of input categorical variable is not an integer" );
apps/traincascade/old_ml_tree.cpp:        CV_ERROR( CV_StsOutOfRange, "Split variable index is out of range" );
apps/traincascade/old_ml_tree.cpp:        // instead we inverse the variable set in the split
apps/traincascade/old_ml_precomp.hpp://   * Redistribution's of source code must retain the above copyright notice,
apps/traincascade/old_ml_precomp.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/traincascade/old_ml_precomp.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/traincascade/old_ml_precomp.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/traincascade/old_ml_precomp.hpp:// and on any theory of liability, whether in contract, strict liability,
apps/traincascade/old_ml_precomp.hpp:/* Fills the <labels> using <probs> by choosing the maximal probability. Outliers are
apps/traincascade/old_ml_precomp.hpp:   fixed by <oulier_tresh> and have cluster label (-1). Function also controls that there
apps/traincascade/old_ml_precomp.hpp:   weren't "empty" clusters by filling empty clusters with the maximal probability vector.
apps/traincascade/old_ml_precomp.hpp:   If probs_sums != NULL, filles it with the sums of probabilities for each sample (it is
apps/traincascade/old_ml_precomp.hpp:   useful for normalizing probabilities' matrice of FCM) */
apps/traincascade/old_ml_precomp.hpp:void icvFindClusterLabels( const CvMat* probs, float outlier_thresh, float r,
apps/traincascade/old_ml_precomp.hpp:                           const CvMat* labels );
apps/traincascade/old_ml_precomp.hpp:   (labels and/or centers and/or probs) back to the output arrays */
apps/traincascade/old_ml_precomp.hpp:cvWritebackLabels( const CvMat* labels, CvMat* dst_labels,
apps/traincascade/old_ml_precomp.hpp:#define cvWritebackResponses cvWritebackLabels
apps/traincascade/haarfeatures.h:    virtual void setImage(const cv::Mat& img, uchar clsLabel, int idx);
apps/traincascade/boost.cpp:            "Component mask should contain as many elements as the total number of input variables" );
apps/traincascade/boost.cpp:            CV_ERROR( CV_StsOutOfRange, "No components/input_variables is selected!" );
apps/traincascade/boost.cpp:            "index array may not contain more elements than the total number of input variables" );
apps/traincascade/boost.cpp:        // subsample ordered variables
apps/traincascade/boost.cpp:        // subsample cv_lables
apps/traincascade/boost.cpp:        const int* src_lbls = get_cv_labels(data_root, (int*)(uchar*)inn_buf);
apps/traincascade/boost.cpp:    have_labels = true;
apps/traincascade/boost.cpp:    work_var_count = ( cat_var_count ? 0 : numPrecalcIdx ) + 1/*cv_lables*/;
apps/traincascade/boost.cpp:    // set sample labels
apps/traincascade/boost.cpp:const int* CvCascadeBoostTrainData::get_class_labels( CvDTreeNode* n, int* labelsBuf)
apps/traincascade/boost.cpp:    int* sampleIndicesBuf = labelsBuf; //
apps/traincascade/boost.cpp:        labelsBuf[si] = (int)responses->data.fl[sidx*rStep];
apps/traincascade/boost.cpp:    return labelsBuf;
apps/traincascade/boost.cpp:const int* CvCascadeBoostTrainData::get_cv_labels( CvDTreeNode* n, int* labels_buf )
apps/traincascade/boost.cpp:    return CvDTreeTrainData::get_cat_var_data( n, get_work_var_count() - 1, labels_buf );
apps/traincascade/boost.cpp:        cv::AutoBuffer<float> abuf(nodeSampleCount);
apps/traincascade/boost.cpp:        float* sampleValues = &abuf[0];
apps/traincascade/boost.cpp:            get_cv_labels( n, catValuesBuf );
apps/traincascade/boost.cpp:        // initialize new indices for splitting ordered variables
apps/traincascade/boost.cpp:    // split ordered variables, keep both halves sorted.
apps/traincascade/boost.cpp:    // split cv_labels using newIdx relocation table
apps/traincascade/boost.cpp:    const int* src_lbls = data->get_cv_labels(node, src_lbls_buf);
apps/traincascade/boost.cpp:        int* classLabelsBuf = (int*)cur_inn_buf_pos; cur_inn_buf_pos = (uchar*)(classLabelsBuf + n);
apps/traincascade/boost.cpp:        const int* classLabels = data->get_class_labels(data->data_root, classLabelsBuf);
apps/traincascade/boost.cpp:        // in case of logitboost and gentle adaboost each weak tree is a regression tree,
apps/traincascade/boost.cpp:        // so we need to convert class labels to floating-point values
apps/traincascade/boost.cpp:            unsigned short* labels = (unsigned short*)(buf->data.s + data->data_root->buf_idx*length_buf_row +
apps/traincascade/boost.cpp:                orig_response->data.i[i] = classLabels[i]*2 - 1;
apps/traincascade/boost.cpp:                weights->data.db[i] = w0*p[classLabels[i]];
apps/traincascade/boost.cpp:                // set the labels to find (from within weak tree learning proc)
apps/traincascade/boost.cpp:                labels[i] = (unsigned short)i;
apps/traincascade/boost.cpp:            int* labels = buf->data.i + data->data_root->buf_idx*length_buf_row +
apps/traincascade/boost.cpp:                orig_response->data.i[i] = classLabels[i]*2 - 1;
apps/traincascade/boost.cpp:                weights->data.db[i] = w0*p[classLabels[i]];
apps/traincascade/boost.cpp:                labels[i] = i;
apps/traincascade/boost.cpp:        if ( abs( eval[i] - threshold) < FLT_EPSILON )
apps/traincascade/CMakeLists.txt:ocv_add_executable(${the_target} ${traincascade_files})
apps/traincascade/lbpfeatures.h:    virtual void setImage(const cv::Mat& img, uchar clsLabel, int idx);
apps/traincascade/old_ml_boost.cpp://   * Redistribution's of source code must retain the above copyright notice,
apps/traincascade/old_ml_boost.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/traincascade/old_ml_boost.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/traincascade/old_ml_boost.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/traincascade/old_ml_boost.cpp:// and on any theory of liability, whether in contract, strict liability,
apps/traincascade/old_ml_boost.cpp:        const int* labels = data->get_cv_labels( node, (int*)inn_buf );
apps/traincascade/old_ml_boost.cpp:            weak_eval[labels[i]] = value;
apps/traincascade/old_ml_boost.cpp:        const int* cat_labels = data->get_cat_var_data( node, vi, (int*)inn_buf );
apps/traincascade/old_ml_boost.cpp:        double sum = 0, sum_abs = 0;
apps/traincascade/old_ml_boost.cpp:            int idx = ((cat_labels[i] == 65535) && data->is_buf_16u) ? -1 : cat_labels[i];
apps/traincascade/old_ml_boost.cpp:            sum += d*w; sum_abs += (d & 1)*w;
apps/traincascade/old_ml_boost.cpp:        R = (sum_abs + sum) * 0.5;
apps/traincascade/old_ml_boost.cpp:        L = (sum_abs - sum) * 0.5;
apps/traincascade/old_ml_boost.cpp:    const int* responses = data->get_class_labels( node, responses_buf );
apps/traincascade/old_ml_boost.cpp:    int* cat_labels_buf = (int*)ext_buf;
apps/traincascade/old_ml_boost.cpp:    const int* cat_labels = data->get_cat_var_data(node, vi, cat_labels_buf);
apps/traincascade/old_ml_boost.cpp:    int* responses_buf = cat_labels_buf + n;
apps/traincascade/old_ml_boost.cpp:    const int* responses = data->get_class_labels(node, responses_buf);
apps/traincascade/old_ml_boost.cpp:    // c_{jk} - number of samples that have vi-th input variable = j and response = k.
apps/traincascade/old_ml_boost.cpp:        j = ((cat_labels[i] == 65535) && data->is_buf_16u) ? -1 : cat_labels[i];
apps/traincascade/old_ml_boost.cpp:    int* cat_labels_buf = (int*)ext_buf;
apps/traincascade/old_ml_boost.cpp:    const int* cat_labels = data->get_cat_var_data(node, vi, cat_labels_buf);
apps/traincascade/old_ml_boost.cpp:    float* responses_buf = (float*)(cat_labels_buf + n);
apps/traincascade/old_ml_boost.cpp:        int idx = ((cat_labels[i] == 65535) && data->is_buf_16u) ? -1 : cat_labels[i];
apps/traincascade/old_ml_boost.cpp:        sum[i] = fabs(counts[i]) > DBL_EPSILON ? sum[i]/counts[i] : 0;
apps/traincascade/old_ml_boost.cpp:    double sum = 0, sum_abs = 0;
apps/traincascade/old_ml_boost.cpp:        sum += d*w; sum_abs += (d & 1)*w;
apps/traincascade/old_ml_boost.cpp:    // sum_abs = R + L; sum = R - L
apps/traincascade/old_ml_boost.cpp:    RR = (sum_abs + sum)*0.5;
apps/traincascade/old_ml_boost.cpp:    LR = (sum_abs - sum)*0.5;
apps/traincascade/old_ml_boost.cpp:    int* cat_labels_buf = (int*)ext_buf;
apps/traincascade/old_ml_boost.cpp:    const int* cat_labels = data->get_cat_var_data(node, vi, cat_labels_buf);
apps/traincascade/old_ml_boost.cpp:    double* lc = (double*)cv::alignPtr(cat_labels_buf + n, sizeof(double)) + 1;
apps/traincascade/old_ml_boost.cpp:        int idx = ((cat_labels[i] == 65535) && data->is_buf_16u) ? -1 : cat_labels[i];
apps/traincascade/old_ml_boost.cpp:        double sum_abs = rc[idx] + (d & 1)*w;
apps/traincascade/old_ml_boost.cpp:        lc[idx] = sum; rc[idx] = sum_abs;
apps/traincascade/old_ml_boost.cpp:        double sum_abs = rc[i];
apps/traincascade/old_ml_boost.cpp:        lc[i] = (sum_abs - sum) * 0.5;
apps/traincascade/old_ml_boost.cpp:        rc[i] = (sum_abs + sum) * 0.5;
apps/traincascade/old_ml_boost.cpp:    int* labels_buf = (int*)(uchar*)inn_buf;
apps/traincascade/old_ml_boost.cpp:    const int* labels = data->get_cv_labels(node, labels_buf);
apps/traincascade/old_ml_boost.cpp:        int* _responses_buf = labels_buf + n;
apps/traincascade/old_ml_boost.cpp:        const int* _responses = data->get_class_labels(node, _responses_buf);
apps/traincascade/old_ml_boost.cpp:            int idx = labels[i];
apps/traincascade/old_ml_boost.cpp:            // store log-ratio of the probability
apps/traincascade/old_ml_boost.cpp:        float* values_buf = (float*)(labels_buf + n);
apps/traincascade/old_ml_boost.cpp:            int idx = labels[i];
apps/traincascade/old_ml_boost.cpp:    active_vars = active_vars_abs = orig_response = sum_response = weak_eval =
apps/traincascade/old_ml_boost.cpp:    cvReleaseMat( &active_vars_abs );
apps/traincascade/old_ml_boost.cpp:    active_vars = active_vars_abs = orig_response = sum_response = weak_eval =
apps/traincascade/old_ml_boost.cpp:    cvReleaseMat( &active_vars_abs );
apps/traincascade/old_ml_boost.cpp:        int* class_labels_buf = (int*)cur_buf_pos;
apps/traincascade/old_ml_boost.cpp:        cur_buf_pos = (uchar*)(class_labels_buf + n);
apps/traincascade/old_ml_boost.cpp:        const int* class_labels = data->get_class_labels(data->data_root, class_labels_buf);
apps/traincascade/old_ml_boost.cpp:        // in case of logitboost and gentle adaboost each weak tree is a regression tree,
apps/traincascade/old_ml_boost.cpp:        // so we need to convert class labels to floating-point values
apps/traincascade/old_ml_boost.cpp:            // compute weight scale for each class from their prior probabilities
apps/traincascade/old_ml_boost.cpp:                c1 += class_labels[i];
apps/traincascade/old_ml_boost.cpp:            unsigned short* labels = (unsigned short*)(dtree_data_buf->data.s + data->data_root->buf_idx*length_buf_row +
apps/traincascade/old_ml_boost.cpp:                orig_response->data.i[i] = class_labels[i]*2 - 1;
apps/traincascade/old_ml_boost.cpp:                weights->data.db[i] = w0*p[class_labels[i]];
apps/traincascade/old_ml_boost.cpp:                // set the labels to find (from within weak tree learning proc)
apps/traincascade/old_ml_boost.cpp:                labels[i] = (unsigned short)i;
apps/traincascade/old_ml_boost.cpp:            int* labels = dtree_data_buf->data.i + data->data_root->buf_idx*length_buf_row +
apps/traincascade/old_ml_boost.cpp:                orig_response->data.i[i] = class_labels[i]*2 - 1;
apps/traincascade/old_ml_boost.cpp:                weights->data.db[i] = w0*p[class_labels[i]];
apps/traincascade/old_ml_boost.cpp:                // set the labels to find (from within weak tree learning proc)
apps/traincascade/old_ml_boost.cpp:                labels[i] = i;
apps/traincascade/old_ml_boost.cpp:CvBoost::get_active_vars( bool absolute_idx )
apps/traincascade/old_ml_boost.cpp:    if( !active_vars || !active_vars_abs )
apps/traincascade/old_ml_boost.cpp:        assert(!active_vars && !active_vars_abs);
apps/traincascade/old_ml_boost.cpp:        // first pass: compute the mask of used variables
apps/traincascade/old_ml_boost.cpp:            active_vars_abs = cvCreateMat( 1, nactive_vars, CV_32S );
apps/traincascade/old_ml_boost.cpp:                    active_vars_abs->data.i[j] = data->var_idx ? data->var_idx->data.i[i] : i;
apps/traincascade/old_ml_boost.cpp:    result = absolute_idx ? active_vars_abs : active_vars;
apps/traincascade/old_ml_boost.cpp:        "number of elements as the total number of variables or "
apps/traincascade/old_ml_boost.cpp:        "as the number of variables used for training" );
apps/traincascade/old_ml_boost.cpp:        const int* vidx_abs = active_vars_abs->data.i;
apps/traincascade/old_ml_boost.cpp:            int idx = vidx[i], idx_abs = vidx_abs[i];
apps/traincascade/old_ml_boost.cpp:            float val = src_sample[idx_abs*sstep];
apps/traincascade/old_ml_boost.cpp:            uchar m = src_mask ? src_mask[idx_abs*mstep] : (uchar)0;
apps/traincascade/old_ml_boost.cpp:                        "one of input categorical variable is not an integer" );
apps/traincascade/old_ml_boost.cpp:            int d = fabs((double)r - response->data.fl[si*r_step]) <= FLT_EPSILON ? 0 : 1;
apps/traincascade/old_ml_boost.cpp:        params.boost_type == DISCRETE ? "DiscreteAdaboost" :
apps/traincascade/old_ml_boost.cpp:        params.boost_type == REAL ? "RealAdaboost" :
apps/traincascade/old_ml_boost.cpp:        params.boost_type == GENTLE ? "GentleAdaboost" : 0;
apps/traincascade/old_ml_boost.cpp:        params.boost_type = strcmp( boost_type_str, "DiscreteAdaboost" ) == 0 ? DISCRETE :
apps/traincascade/old_ml_boost.cpp:                            strcmp( boost_type_str, "RealAdaboost" ) == 0 ? REAL :
apps/traincascade/old_ml_boost.cpp:                            strcmp( boost_type_str, "GentleAdaboost" ) == 0 ? GENTLE : -1;
apps/traincascade/old_ml_boost.cpp:    active_vars = active_vars_abs = orig_response = sum_response = weak_eval =
apps/traincascade/old_ml.hpp://   * Redistribution's of source code must retain the above copyright notice,
apps/traincascade/old_ml.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/traincascade/old_ml.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/traincascade/old_ml.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/traincascade/old_ml.hpp:// and on any theory of liability, whether in contract, strict liability,
apps/traincascade/old_ml.hpp:/* Variable type */
apps/traincascade/old_ml.hpp:    CvMat*  cls_labels;
apps/traincascade/old_ml.hpp:    CvMat* class_labels;
apps/traincascade/old_ml.hpp:                      bool _shared=false, bool _add_labels=false );
apps/traincascade/old_ml.hpp:                          bool _shared=false, bool _add_labels=false,
apps/traincascade/old_ml.hpp:    virtual const int* get_class_labels( CvDTreeNode* n, int* labels_buf );
apps/traincascade/old_ml.hpp:    virtual const int* get_cv_labels( CvDTreeNode* n, int* labels_buf );
apps/traincascade/old_ml.hpp:    bool have_labels, have_priors;
apps/traincascade/old_ml.hpp:        int var_count, int* sums, int k, int* cluster_labels );
apps/traincascade/old_ml.hpp:    CV_PROP_RW bool calc_var_importance; // true <=> RF processes variable importance
apps/traincascade/old_ml.hpp:                          bool _shared=false, bool _add_labels=false,
apps/traincascade/old_ml.hpp:    virtual const int* get_cv_labels( CvDTreeNode* n, int* labels_buf );
apps/traincascade/old_ml.hpp:    virtual const CvMat* get_active_vars(bool absolute_idx=true);
apps/traincascade/old_ml.hpp:    CvMat* active_vars_abs;
apps/traincascade/old_ml.hpp:// class_labels     - output class labels map.
apps/traincascade/old_ml.hpp:    // loss = abs(x - x')
apps/traincascade/old_ml.hpp:    // loss = delta*( abs(x - x') - delta/2), if abs(x - x') > delta
apps/traincascade/old_ml.hpp:    //           1/2*(x - x')^2, if abs(x - x') <= delta,
apps/traincascade/old_ml.hpp:    //                  <count of samples> x <variables count>
apps/traincascade/old_ml.hpp:    //                  or <variables count> x <count of samples>
apps/traincascade/old_ml.hpp:    // varIdx       - indices of used variables. zero value means that all
apps/traincascade/old_ml.hpp:    //                  variables are active.
apps/traincascade/old_ml.hpp:    // varType      - vector of <variables count> length. gives every
apps/traincascade/old_ml.hpp:    //                  variable type CV_VAR_CATEGORICAL or CV_VAR_ORDERED.
apps/traincascade/old_ml.hpp:    //                  varType = 0 means all variables are numerical.
apps/traincascade/old_ml.hpp:    //                  <count of samples> x <variables count>
apps/traincascade/old_ml.hpp:    //                  or <variables count> x <count of samples>
apps/traincascade/old_ml.hpp:    // varIdx       - indices of used variables. zero value means that all
apps/traincascade/old_ml.hpp:    //                  variables are active.
apps/traincascade/old_ml.hpp:    // varType      - vector of <variables count> length. gives every
apps/traincascade/old_ml.hpp:    //                  variable type CV_VAR_CATEGORICAL or CV_VAR_ORDERED.
apps/traincascade/old_ml.hpp:    //                  varType = 0 means all variables are numerical.
apps/traincascade/old_ml.hpp:    //        sample_idx, missing, lass_labels
apps/traincascade/old_ml.hpp:    // data         - contains information about the structure
apps/traincascade/old_ml.hpp:    //                of the data set (count of variables,
apps/traincascade/old_ml.hpp:    // class_labels - output class labels map.
apps/traincascade/old_ml.hpp:    CvMat* class_labels;
apps/traincascade/old_ml.hpp:    // available training flags
apps/traincascade/old_ml.hpp:    void chahge_var_idx( int vi, bool state ); // misspelled (saved for back compitability),
apps/traincascade/old_ml.hpp:    void change_var_idx( int vi, bool state ); // state == true to set vi-variable as predictor
apps/traincascade/old_ml.hpp:    // following 2 methods enable to change vars type
apps/traincascade/old_ml.hpp:    // use these methods to assign CV_VAR_CATEGORICAL type for categorical variable
apps/traincascade/old_ml.hpp:    // with numerical labels; in the other cases var types are correctly determined automatically
apps/traincascade/old_ml.hpp:    const std::map<cv::String, int>& get_class_labels_map() const;
apps/traincascade/HOGfeatures.h:    virtual void setImage(const cv::Mat& img, uchar clsLabel, int idx);
apps/traincascade/lbpfeatures.cpp:void CvLBPEvaluator::setImage(const Mat &img, uchar clsLabel, int idx)
apps/traincascade/lbpfeatures.cpp:    CvFeatureEvaluator::setImage( img, clsLabel, idx );
apps/traincascade/features.cpp:void CvFeatureEvaluator::setImage(const Mat &img, uchar clsLabel, int idx)
apps/traincascade/features.cpp:    cls.ptr<float>(idx)[0] = clsLabel;
apps/annotation/CMakeLists.txt:ocv_add_executable(${the_target} ${annotation_files})
apps/annotation/opencv_annotation.cpp://   * Redistribution's of source code must retain the above copyright notice,
apps/annotation/opencv_annotation.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/annotation/opencv_annotation.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/annotation/opencv_annotation.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/annotation/opencv_annotation.cpp:// and on any theory of liability, whether in contract, strict liability,
apps/annotation/opencv_annotation.cpp:        // Based on the universal ASCII code of the keystroke: http://www.asciitable.com/
apps/createsamples/utility.cpp://   * Redistribution's of source code must retain the above copyright notice,
apps/createsamples/utility.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/createsamples/utility.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/createsamples/utility.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/createsamples/utility.cpp:// and on any theory of liability, whether in contract, strict liability,
apps/createsamples/utility.cpp:    rotVectData[1] = ( maxyangle - fabs( rotVectData[0] ) )
apps/createsamples/utility.cpp:        fprintf( stderr, "Unable to create output file: %s\n", filename );
apps/createsamples/utility.cpp:        fprintf( stderr, "Unable to create directory hierarchy: %s\n", infoname );
apps/createsamples/utility.cpp:        fprintf( stderr, "Unable to create directory hierarchy: %s\n", vecfilename );
apps/createsamples/utility.cpp:        fprintf( stderr, "Unable to open file: %s\n", infoname );
apps/createsamples/utility.cpp:        fprintf( stderr, "Unable to open file: %s\n", vecfilename );
apps/createsamples/utility.cpp:                fprintf( stderr, "Unable to open image: %s\n", fullname );
apps/createsamples/CMakeLists.txt:ocv_add_executable(${the_target} ${createsamples_files})
apps/createsamples/createsamples.cpp://   * Redistribution's of source code must retain the above copyright notice,
apps/createsamples/createsamples.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/createsamples/createsamples.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/createsamples/createsamples.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/createsamples/createsamples.cpp:// and on any theory of liability, whether in contract, strict liability,
apps/createsamples/utility.hpp://   * Redistribution's of source code must retain the above copyright notice,
apps/createsamples/utility.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
apps/createsamples/utility.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
apps/createsamples/utility.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
apps/createsamples/utility.hpp:// and on any theory of liability, whether in contract, strict liability,
samples/cpp/tutorial_code/gpu/gpu-basics-similarity/gpu-basics-similarity.cpp:    absdiff(I1, I2, s1);       // |I1 - I2|
samples/cpp/tutorial_code/gpu/gpu-basics-similarity/gpu-basics-similarity.cpp:    cuda::absdiff(b.t1.reshape(1), b.t2.reshape(1), b.gs);
samples/cpp/tutorial_code/gpu/gpu-basics-similarity/gpu-basics-similarity.cpp:    cuda::absdiff(t1.reshape(1), t2.reshape(1), gs);
samples/cpp/tutorial_code/Histograms_Matching/calcBackProject_Demo2.cpp: * @brief Sample code for backproject function usage ( a bit more elaborated )
samples/cpp/tutorial_code/Histograms_Matching/calcBackProject_Demo2.cpp:/// Global Variables
samples/cpp/tutorial_code/Histograms_Matching/calcBackProject_Demo1.cpp:/// Global Variables
samples/cpp/tutorial_code/Histograms_Matching/MatchTemplate_Demo.cpp:/// Global Variables
samples/cpp/tutorial_code/Histograms_Matching/MatchTemplate_Demo.cpp:  const char* trackbar_label = "Method: \n 0: SQDIFF \n 1: SQDIFF NORMED \n 2: TM CCORR \n 3: TM CCORR NORMED \n 4: TM COEFF \n 5: TM COEFF NORMED";
samples/cpp/tutorial_code/Histograms_Matching/MatchTemplate_Demo.cpp:  createTrackbar( trackbar_label, image_window, &match_method, max_Trackbar, MatchingMethod );
samples/cpp/tutorial_code/Histograms_Matching/calcHist_Demo.cpp:  /// Establish the number of bins
samples/cpp/tutorial_code/core/ippasync/ippasync_sample.cpp:    "{fn file_name|../data/baboon.jpg | image file       }"
samples/cpp/tutorial_code/core/Matrix/Drawing_2.cpp:/// Global Variables
samples/cpp/tutorial_code/core/file_input_output/file_input_output.cpp:        fs << "image1.jpg" << "Awesomeness" << "../data/baboon.jpg";
samples/cpp/tutorial_code/core/discrete_fourier_transform/discrete_fourier_transform.cpp:                                            // viewable image form (float between values 0 and 1).
samples/cpp/tutorial_code/core/mat_the_basic_image_container/mat_the_basic_image_container.cpp:    << " out capabilities"                                                            << endl
samples/cpp/tutorial_code/core/mat_the_basic_image_container/mat_the_basic_image_container.cpp:    //! [matlab]
samples/cpp/tutorial_code/core/mat_the_basic_image_container/mat_the_basic_image_container.cpp:    //! [matlab]
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:Mat& ScanImageAndReduceC(Mat& I, const uchar* table);
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:Mat& ScanImageAndReduceIterator(Mat& I, const uchar* table);
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:Mat& ScanImageAndReduceRandomAccess(Mat& I, const uchar * table);
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:    uchar table[256];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:       table[i] = (uchar)(divideWith * (i/divideWith));
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:        J = ScanImageAndReduceC(clone_i, table);
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:        J = ScanImageAndReduceIterator(clone_i, table);
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:        ScanImageAndReduceRandomAccess(clone_i, table);
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:    //! [table-init]
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:    Mat lookUpTable(1, 256, CV_8U);
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:    uchar* p = lookUpTable.ptr();
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:        p[i] = table[i];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:    //! [table-init]
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:        //! [table-use]
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:        LUT(I, lookUpTable, J);
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:        //! [table-use]
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:Mat& ScanImageAndReduceC(Mat& I, const uchar* const table)
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:            p[j] = table[p[j]];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:Mat& ScanImageAndReduceIterator(Mat& I, const uchar* const table)
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:                *it = table[*it];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:                (*it)[0] = table[(*it)[0]];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:                (*it)[1] = table[(*it)[1]];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:                (*it)[2] = table[(*it)[2]];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:Mat& ScanImageAndReduceRandomAccess(Mat& I, const uchar* const table)
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:                    I.at<uchar>(i,j) = table[I.at<uchar>(i,j)];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:                   _I(i,j)[0] = table[_I(i,j)[0]];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:                   _I(i,j)[1] = table[_I(i,j)[1]];
samples/cpp/tutorial_code/core/how_to_scan_images/how_to_scan_images.cpp:                   _I(i,j)[2] = table[_I(i,j)[2]];
samples/cpp/tutorial_code/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.cpp:    // This expression will not create any temporary arrays ( so should be almost as fast as above)
samples/cpp/tutorial_code/core/interoperability_with_OpenCV_1/interoperability_with_OpenCV_1.cpp:    // this is to demonstrate that I and IplI really share the data - the result of the above
samples/cpp/tutorial_code/HighGUI/BasicLinearTransformsTrackbar.cpp:/** Global Variables */
Binary file samples/cpp/tutorial_code/HighGUI/video-input-psnr-ssim/video/Megamind.avi matches
Binary file samples/cpp/tutorial_code/HighGUI/video-input-psnr-ssim/video/Megamind_bugy.avi matches
samples/cpp/tutorial_code/HighGUI/video-input-psnr-ssim/video-input-psnr-ssim.cpp:    absdiff(I1, I2, s1);       // |I1 - I2|
samples/cpp/tutorial_code/HighGUI/GDAL_IO/gdal-image.cpp:    // if the elevation is above the maximum, return the maximum
samples/cpp/tutorial_code/HighGUI/AddingImagesTrackbar.cpp:/** Global Variables */
samples/cpp/tutorial_code/video/bg_sub.cpp:// Global variables
samples/cpp/tutorial_code/video/bg_sub.cpp:        cerr << "Unable to open video file: " << videoFilename << endl;
samples/cpp/tutorial_code/video/bg_sub.cpp:            cerr << "Unable to read next frame." << endl;
samples/cpp/tutorial_code/video/bg_sub.cpp:        cerr << "Unable to open first image frame: " << fistFrameFilename << endl;
samples/cpp/tutorial_code/video/bg_sub.cpp:            cerr << "Unable to open image frame: " << nextFrameFilename << endl;
samples/cpp/tutorial_code/ShapeDescriptors/pointPolygonTest_demo.cpp:  minVal = abs(minVal); maxVal = abs(maxVal);
samples/cpp/tutorial_code/ShapeDescriptors/pointPolygonTest_demo.cpp:              { drawing.at<Vec3b>(j,i)[0] = (uchar)(255 - abs(raw_dist.at<float>(j,i))*255/minVal); }
samples/cpp/tutorial_code/features2D/AKAZE_tracking/planar_tracking.cpp:const double akaze_thresh = 3e-4; // AKAZE detection threshold set to locate about 1000 keypoints
samples/cpp/tutorial_code/ImgTrans/Sobel_Demo.cpp:  Mat abs_grad_x, abs_grad_y;
samples/cpp/tutorial_code/ImgTrans/Sobel_Demo.cpp:  convertScaleAbs( grad_x, abs_grad_x );
samples/cpp/tutorial_code/ImgTrans/Sobel_Demo.cpp:  convertScaleAbs( grad_y, abs_grad_y );
samples/cpp/tutorial_code/ImgTrans/Sobel_Demo.cpp:  addWeighted( abs_grad_x, 0.5, abs_grad_y, 0.5, 0, grad );
samples/cpp/tutorial_code/ImgTrans/imageSegmentation.cpp:    // Fill labeled objects with random colors
samples/cpp/tutorial_code/ImgTrans/CannyDetector_Demo.cpp:/// Global variables
samples/cpp/tutorial_code/ImgTrans/copyMakeBorder_demo.cpp:/// Global Variables
samples/cpp/tutorial_code/ImgTrans/Laplace_Demo.cpp:  Mat abs_dst;
samples/cpp/tutorial_code/ImgTrans/Laplace_Demo.cpp:  convertScaleAbs( dst, abs_dst );
samples/cpp/tutorial_code/ImgTrans/Laplace_Demo.cpp:  imshow( window_name, abs_dst );
samples/cpp/tutorial_code/ImgTrans/filter2D_demo.cpp:  /// Declare variables
samples/cpp/tutorial_code/ImgTrans/Remap_Demo.cpp:/// Global variables
samples/cpp/tutorial_code/ImgTrans/Geometric_Transforms_Demo.cpp:/// Global variables
samples/cpp/tutorial_code/ImgTrans/Geometric_Transforms_Demo.cpp:  /// Get the rotation matrix with the specifications above
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:/// Global variables
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:/** General variables */
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:Mat standard_hough, probabilistic_hough;
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:const char* probabilistic_name = "Probabilistic Hough Lines Demo";
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:void Probabilistic_Hough( int, void* );
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:   char thresh_label[50];
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:   sprintf( thresh_label, "Thres: %d + input", min_threshold );
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:   createTrackbar( thresh_label, standard_name, &s_trackbar, max_trackbar, Standard_Hough);
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:   namedWindow( probabilistic_name, WINDOW_AUTOSIZE );
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:   createTrackbar( thresh_label, probabilistic_name, &p_trackbar, max_trackbar, Probabilistic_Hough);
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:   Probabilistic_Hough(0, 0);
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp: * @function Probabilistic_Hough
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:void Probabilistic_Hough( int, void* )
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:  cvtColor( edges, probabilistic_hough, COLOR_GRAY2BGR );
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:  /// 2. Use Probabilistic Hough Transform
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:       line( probabilistic_hough, Point(l[0], l[1]), Point(l[2], l[3]), Scalar(255,0,0), 3, LINE_AA);
samples/cpp/tutorial_code/ImgTrans/HoughLines_Demo.cpp:   imshow( probabilistic_name, probabilistic_hough );
samples/cpp/tutorial_code/objectDetection/objectDetection.cpp:/** Global variables */
samples/cpp/tutorial_code/objectDetection/objectDetection2.cpp:/** Global variables */
Binary file samples/cpp/tutorial_code/calib3d/real_time_pose_estimation/Data/resized_IMG_3875.JPG matches
Binary file samples/cpp/tutorial_code/calib3d/real_time_pose_estimation/Data/box.mp4 matches
samples/cpp/tutorial_code/calib3d/real_time_pose_estimation/CMakeLists.txt:add_executable( ${target}pnp_registration ${sample_dir}main_registration.cpp ${sample_pnplib} )
samples/cpp/tutorial_code/calib3d/real_time_pose_estimation/CMakeLists.txt:add_executable( ${target}pnp_detection ${sample_dir}main_detection.cpp ${sample_pnplib} )
samples/cpp/tutorial_code/calib3d/real_time_pose_estimation/src/main_detection.cpp:  // First predict, to update the internal statePre variable
samples/cpp/tutorial_code/calib3d/real_time_pose_estimation/src/main_registration.cpp:      bool is_registrable = registration.is_registrable();
samples/cpp/tutorial_code/calib3d/real_time_pose_estimation/src/main_registration.cpp:      if (is_registrable)
samples/cpp/tutorial_code/calib3d/real_time_pose_estimation/src/ModelRegistration.h:  bool is_registrable() const { return (n_registrations_ < max_registrations_); }
samples/cpp/tutorial_code/ImgProc/Pyramids.cpp:/// Global variables
samples/cpp/tutorial_code/ImgProc/Morphology_2.cpp:/// Global variables
samples/cpp/tutorial_code/ImgProc/Morphology_1.cpp:/// Global variables
samples/cpp/tutorial_code/ImgProc/Smoothing.cpp:/// Global Variables
samples/cpp/tutorial_code/ImgProc/Threshold.cpp:/// Global variables
samples/cpp/tutorial_code/TrackingMotion/cornerDetector_Demo.cpp:/// Global variables
samples/cpp/tutorial_code/TrackingMotion/cornerHarris_Demo.cpp:/// Global variables
samples/cpp/tutorial_code/TrackingMotion/cornerSubPix_Demo.cpp:/// Global variables
samples/cpp/tutorial_code/TrackingMotion/goodFeaturesToTrack_Demo.cpp:/// Global variables
samples/cpp/tutorial_code/ml/non_linear_svms/non_linear_svms.cpp:#define FRAC_LINEAR_SEP		0.9f	    // Fraction of samples which compose the linear separable part
samples/cpp/tutorial_code/ml/non_linear_svms/non_linear_svms.cpp:        << "This program shows Support Vector Machines for Non-Linearly Separable Data. " << endl
samples/cpp/tutorial_code/ml/non_linear_svms/non_linear_svms.cpp:    Mat labels   (2*NTRAINING_SAMPLES, 1, CV_32SC1);
samples/cpp/tutorial_code/ml/non_linear_svms/non_linear_svms.cpp:    // Set up the linearly separable part of the training data
samples/cpp/tutorial_code/ml/non_linear_svms/non_linear_svms.cpp:    //------------------ Set up the non-linearly separable part of the training data ---------------
samples/cpp/tutorial_code/ml/non_linear_svms/non_linear_svms.cpp:    //------------------------- Set up the labels for the classes ---------------------------------
samples/cpp/tutorial_code/ml/non_linear_svms/non_linear_svms.cpp:    labels.rowRange(                0,   NTRAINING_SAMPLES).setTo(1);  // Class 1
samples/cpp/tutorial_code/ml/non_linear_svms/non_linear_svms.cpp:    labels.rowRange(NTRAINING_SAMPLES, 2*NTRAINING_SAMPLES).setTo(2);  // Class 2
samples/cpp/tutorial_code/ml/non_linear_svms/non_linear_svms.cpp:    svm->train(trainData, ROW_SAMPLE, labels);
samples/cpp/tutorial_code/ml/introduction_to_pca/introduction_to_pca.cpp://    cout << "Degrees: " << abs(degrees - 180) << endl; // angle in 0-360 degrees range
samples/cpp/tutorial_code/ml/introduction_to_svm/introduction_to_svm.cpp:    int labels[4] = {1, -1, -1, -1};
samples/cpp/tutorial_code/ml/introduction_to_svm/introduction_to_svm.cpp:    Mat labelsMat(4, 1, CV_32SC1, labels);
samples/cpp/tutorial_code/ml/introduction_to_svm/introduction_to_svm.cpp:    svm->train(trainingDataMat, ROW_SAMPLE, labelsMat);
samples/cpp/tutorial_code/photo/non_photorealistic_rendering/npr_demo.cpp:    cout << "Press number 1-4 to choose from above techniques: ";
samples/cpp/tutorial_code/photo/seamless_cloning/cloning_gui.cpp:    cout << "Press number 1-6 to choose from above techniques: ";
samples/cpp/tutorial_code/photo/seamless_cloning/cloning_demo.cpp:    cout << "Press number 1-6 to choose from above techniques: ";
samples/cpp/tvl1_optical_flow.cpp:    return !cvIsNaN(u.x) && !cvIsNaN(u.y) && fabs(u.x) < 1e9 && fabs(u.y) < 1e9;
samples/cpp/letter_recog.cpp:    "We use the sample database letter-recognition.data\n"
samples/cpp/letter_recog.cpp:    "UCI Repository of machine learning databases\n"
samples/cpp/letter_recog.cpp:        cout << "Could not read the database " << filename << endl;
samples/cpp/letter_recog.cpp:    cout << "The database " << filename << " is loaded.\n";
samples/cpp/letter_recog.cpp:        r = std::abs(r + rdelta - responses.at<int>(i)) <= FLT_EPSILON ? 1.f : 0.f;
samples/cpp/letter_recog.cpp:    // Print variable importance
samples/cpp/letter_recog.cpp:        // for 2-class problems, we transform the training database by
samples/cpp/letter_recog.cpp:        // 1. unroll the database type mask
samples/cpp/letter_recog.cpp:        printf( "Unrolling the database...\n");
samples/cpp/letter_recog.cpp:        double r = std::abs(best_class - responses.at<int>(i)) < FLT_EPSILON ? 1 : 0;
samples/cpp/letter_recog.cpp:        // MLP does not support categorical variables by explicitly.
samples/cpp/letter_recog.cpp:        // So, instead of the output class label, we will use
samples/cpp/letter_recog.cpp:        // therefore, MLP will give us a vector of "probabilities" at the
samples/cpp/letter_recog.cpp:            int cls_label = responses.at<int>(i) - 'A';
samples/cpp/letter_recog.cpp:            train_responses.at<float>(i, cls_label) = 1.f;
samples/cpp/intelperc_capture.cpp:        if (!capture.grab())
samples/cpp/intelperc_capture.cpp:            cout << "Can not grab images." << endl;
samples/cpp/squares.cpp:                // Note: absolute value of an area is used because
samples/cpp/squares.cpp:                    fabs(contourArea(Mat(approx))) > 1000 &&
samples/cpp/squares.cpp:                        double cosine = fabs(angle(approx[j%4], approx[j-2], approx[j-1]));
samples/cpp/em.cpp:    Mat labels;
samples/cpp/em.cpp:    em_model->trainEM( samples, noArray(), labels, noArray() );
samples/cpp/em.cpp:        circle( img, pt, 1, colors[labels.at<int>(i)], FILLED );
samples/cpp/starter_imagelist.cpp:  cout << "\nThis program gets you started being able to read images from a list in a file\n"
samples/cpp/starter_imagelist.cpp:    namedWindow("image", WINDOW_KEEPRATIO); //resizable window;
samples/cpp/camshiftdemo.cpp:        selection.width = std::abs(x - origin.x);
samples/cpp/camshiftdemo.cpp:        selection.height = std::abs(y - origin.y);
samples/cpp/facial_features.cpp:        "The code has been tested on the Japanese Female Facial Expression (JAFFE) database and found"
samples/cpp/facial_features.cpp:        "to give reasonably accurate results. \n";
samples/cpp/facial_features.cpp:        "OPTIONS: \nThere are 3 options available which are described in detail. There must be a "
samples/cpp/distrans.cpp:    Mat edge = gray >= edgeThresh, dist, labels, dist8u;
samples/cpp/distrans.cpp:        distanceTransform( edge, dist, labels, distType, maskSize, voronoiType );
samples/cpp/distrans.cpp:        dist8u.create(labels.size(), CV_8UC3);
samples/cpp/distrans.cpp:        for( int i = 0; i < labels.rows; i++ )
samples/cpp/distrans.cpp:            const int* ll = (const int*)labels.ptr(i);
samples/cpp/distrans.cpp:            for( int j = 0; j < labels.cols; j++ )
samples/cpp/contours2.cpp:                  3, LINE_AA, hierarchy, std::abs(_levels) );
samples/cpp/train_HOG.cpp:void train_svm( const vector< Mat > & gradient_lst, const vector< int > & labels );
samples/cpp/train_HOG.cpp:        cerr << "Unable to open the list of images from " << filename << " filename." << endl;
samples/cpp/train_HOG.cpp:void train_svm( const vector< Mat > & gradient_lst, const vector< int > & labels )
samples/cpp/train_HOG.cpp:    svm->train(train_data, ROW_SAMPLE, Mat(labels));
samples/cpp/train_HOG.cpp:        cerr << "Unable to open the device 0" << endl;
samples/cpp/train_HOG.cpp:    vector< int > labels;
samples/cpp/train_HOG.cpp:    labels.assign( pos_lst.size(), +1 );
samples/cpp/train_HOG.cpp:    const unsigned int old = (unsigned int)labels.size();
samples/cpp/train_HOG.cpp:    labels.insert( labels.end(), neg_lst.size(), -1 );
samples/cpp/train_HOG.cpp:    CV_Assert( old < labels.size() );
samples/cpp/train_HOG.cpp:    train_svm( gradient_lst, labels );
samples/cpp/grabcut.cpp:    cout << "\nThis program demonstrates GrabCut segmentation -- select an object in a region\n"
samples/cpp/grabcut.cpp:            "and then grabcut will attempt to segment it out.\n"
samples/cpp/grabcut.cpp:            "./grabcut <image_name>\n"
samples/cpp/grabcut.cpp:    case EVENT_LBUTTONDOWN: // set rect or GC_BGD(GC_FGD) labels
samples/cpp/grabcut.cpp:    case EVENT_RBUTTONDOWN: // set GC_PR_BGD(GC_PR_FGD) labels
samples/cpp/grabcut.cpp:        grabCut( *image, mask, rect, bgdModel, fgdModel, 1 );
samples/cpp/grabcut.cpp:            grabCut( *image, mask, rect, bgdModel, fgdModel, 1, GC_INIT_WITH_MASK );
samples/cpp/grabcut.cpp:            grabCut( *image, mask, rect, bgdModel, fgdModel, 1, GC_INIT_WITH_RECT );
samples/cpp/starter_video.cpp:        namedWindow(window_name, WINDOW_KEEPRATIO); //resizable window;
samples/cpp/openni_capture.cpp:    cout << "-r=        Filename of .oni video file. The data will grabbed from it." << endl ;
samples/cpp/openni_capture.cpp:        if( !capture.grab() )
samples/cpp/openni_capture.cpp:            cout << "Can not grab images." << endl;
samples/cpp/stereo_calib.cpp:            double errij = fabs(imagePoints[0][i][j].x*lines[1][j][0] +
samples/cpp/stereo_calib.cpp:                           fabs(imagePoints[1][i][j].x*lines[0][j][0] +
samples/cpp/stereo_calib.cpp:    bool isVerticalStereo = fabs(P2.at<double>(1, 3)) > fabs(P2.at<double>(0, 3));
samples/cpp/select3dobj.cpp: * select3obj.cpp With a calibration chessboard on a table, mark an object in a 3D box and
samples/cpp/select3dobj.cpp: *                on a table.
samples/cpp/select3dobj.cpp:"compute the homography of the plane the calibration pattern is on. It also shows grabCut\n"
samples/cpp/select3dobj.cpp:"    ENTER - Confirm the selection. Grab next object in video mode.\n"
samples/cpp/select3dobj.cpp:    double iw = fabs(v(2,0)) > DBL_EPSILON ? 1./v(2,0) : 0;
samples/cpp/select3dobj.cpp:        grabCut(frame, selectedObjMask, roi, bgdModel, fgdModel,
samples/cpp/select3dobj.cpp:    "\tENTER - Confirm the selection. Grab next object in video mode.\n"
samples/cpp/select3dobj.cpp:    bool grabNext = !imageList.empty();
samples/cpp/select3dobj.cpp:        if( boardFound && grabNext )
samples/cpp/select3dobj.cpp:            grabNext = !imageList.empty();
samples/cpp/select3dobj.cpp:            grabNext = true;
samples/cpp/watershed.cpp:            vector<Vec3b> colorTab;
samples/cpp/watershed.cpp:                colorTab.push_back(Vec3b((uchar)b, (uchar)g, (uchar)r));
samples/cpp/watershed.cpp:                        wshed.at<Vec3b>(i,j) = colorTab[index - 1];
samples/cpp/autofocus.cpp: * 1. Redistributions of source code must retain the above copyright notice,
samples/cpp/autofocus.cpp: * 2. Redistributions in binary form must reproduce the above copyright notice,
samples/cpp/autofocus.cpp: * and I don't want to make any assumptions about it.
samples/cpp/autofocus.cpp:            int stepToMax = abs(state.stepToLastMax);
samples/cpp/image_alignment.cpp:        cout << "Unable to open file " << iFilename.c_str() << endl;
samples/cpp/image_alignment.cpp:    parser.about("ECC demo");
samples/cpp/image_alignment.cpp:        cerr << "Unable to load the inputImage" <<  endl;
samples/cpp/image_alignment.cpp:            cerr << "Unable to load the template image" << endl;
samples/cpp/image_alignment.cpp:        imshow ("error (black: no error)",  abs(errorImage)*255/max_of_error);
samples/cpp/stereo_match.cpp:            if(fabs(point[2] - max_z) < FLT_EPSILON || fabs(point[2]) > max_z) continue;
samples/cpp/detect_blob.cpp:    pDefaultBLOB.minRepeatability = 2;
samples/cpp/detect_blob.cpp:    String label;
samples/cpp/detect_blob.cpp:            label = Legende(*itBLOB);
samples/cpp/detect_blob.cpp:            namedWindow(*itDesc + label, WINDOW_AUTOSIZE);
samples/cpp/detect_blob.cpp:            imshow(*itDesc + label, result);
samples/cpp/cout_mat.cpp: * cvout_sample just demonstrates the serial out capabilities of cv::Mat
samples/cpp/cout_mat.cpp:    << " This program shows the serial out capabilities of cv::Mat\n"
samples/cpp/cout_mat.cpp:    << "Output can be formated to OpenCV, matlab, python, numpy, csv and \n"
samples/cpp/cout_mat.cpp:    cout << "r (matlab) = \n" << format(r, Formatter::FMT_MATLAB) << ";" << endl << endl;
samples/cpp/stitching.cpp://   * Redistribution's of source code must retain the above copyright notice,
samples/cpp/stitching.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
samples/cpp/stitching.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
samples/cpp/stitching.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
samples/cpp/stitching.cpp:// and on any theory of liability, whether in contract, strict liability,
samples/cpp/videostab.cpp:#include "opencv2/videostab.hpp"
samples/cpp/videostab.cpp:using namespace cv::videostab;
samples/cpp/videostab.cpp:Ptr<IFrameSource> stabilizedFrames;
samples/cpp/videostab.cpp:    Mat stabilizedFrame;
samples/cpp/videostab.cpp:    // for each stabilized frame
samples/cpp/videostab.cpp:    while (!(stabilizedFrame = stabilizedFrames->nextFrame()).empty())
samples/cpp/videostab.cpp:        // init writer (once) and save stabilized frame
samples/cpp/videostab.cpp:                            outputFps, stabilizedFrame.size());
samples/cpp/videostab.cpp:            writer << stabilizedFrame;
samples/cpp/videostab.cpp:        // show stabilized frame
samples/cpp/videostab.cpp:            imshow("stabilizedFrame", stabilizedFrame);
samples/cpp/videostab.cpp:    cout << "OpenCV video stabilizer.\n"
samples/cpp/videostab.cpp:            "Usage: videostab <file_path> [arguments]\n\n"
samples/cpp/videostab.cpp:            "  -lps=, --lin-prog-stab=(yes|no)\n"
samples/cpp/videostab.cpp:            "      Turn on/off linear programming based stabilization method.\n"
samples/cpp/videostab.cpp:            "      Set output file path explicitely. The default is stabilized.avi.\n"
samples/cpp/videostab.cpp:                "{ lps  lin-prog-stab       | no | }"
samples/cpp/videostab.cpp:                "{ o  output                | stabilized.avi | }"
samples/cpp/videostab.cpp:        StabilizerBase *stabilizer = 0;
samples/cpp/videostab.cpp:        // determine whether we must use one pass or two pass stabilizer
samples/cpp/videostab.cpp:                arg("est-trim") == "yes" || arg("wobble-suppress") == "yes" || arg("lin-prog-stab") == "yes";
samples/cpp/videostab.cpp:            // we must use two pass stabilizer
samples/cpp/videostab.cpp:            TwoPassStabilizer *twoPassStabilizer = new TwoPassStabilizer();
samples/cpp/videostab.cpp:            stabilizer = twoPassStabilizer;
samples/cpp/videostab.cpp:            twoPassStabilizer->setEstimateTrimRatio(arg("est-trim") == "yes");
samples/cpp/videostab.cpp:            // determine stabilization technique
samples/cpp/videostab.cpp:            if (arg("lin-prog-stab") == "yes")
samples/cpp/videostab.cpp:                Ptr<LpMotionStabilizer> stab = makePtr<LpMotionStabilizer>();
samples/cpp/videostab.cpp:                stab->setFrameSize(Size(source->width(), source->height()));
samples/cpp/videostab.cpp:                stab->setTrimRatio(arg("lps-trim-ratio") == "auto" ? argf("trim-ratio") : argf("lps-trim-ratio"));
samples/cpp/videostab.cpp:                stab->setWeight1(argf("lps-w1"));
samples/cpp/videostab.cpp:                stab->setWeight2(argf("lps-w2"));
samples/cpp/videostab.cpp:                stab->setWeight3(argf("lps-w3"));
samples/cpp/videostab.cpp:                stab->setWeight4(argf("lps-w4"));
samples/cpp/videostab.cpp:                twoPassStabilizer->setMotionStabilizer(stab);
samples/cpp/videostab.cpp:                twoPassStabilizer->setMotionStabilizer(makePtr<GaussianMotionFilter>(argi("radius")));
samples/cpp/videostab.cpp:                twoPassStabilizer->setMotionStabilizer(makePtr<GaussianMotionFilter>(argi("radius"), argf("stdev")));
samples/cpp/videostab.cpp:                twoPassStabilizer->setWobbleSuppressor(ws);
samples/cpp/videostab.cpp:            // we must use one pass stabilizer
samples/cpp/videostab.cpp:            OnePassStabilizer *onePassStabilizer = new OnePassStabilizer();
samples/cpp/videostab.cpp:            stabilizer = onePassStabilizer;
samples/cpp/videostab.cpp:                onePassStabilizer->setMotionFilter(makePtr<GaussianMotionFilter>(argi("radius")));
samples/cpp/videostab.cpp:                onePassStabilizer->setMotionFilter(makePtr<GaussianMotionFilter>(argi("radius"), argf("stdev")));
samples/cpp/videostab.cpp:        stabilizer->setFrameSource(source);
samples/cpp/videostab.cpp:        stabilizer->setMotionEstimator(motionEstBuilder->build());
samples/cpp/videostab.cpp:        // cast stabilizer to simple frame source interface to read stabilized frames
samples/cpp/videostab.cpp:        stabilizedFrames.reset(dynamic_cast<IFrameSource*>(stabilizer));
samples/cpp/videostab.cpp:        MotionModel model = stabilizer->motionEstimator()->motionModel();
samples/cpp/videostab.cpp:            stabilizer->setMotionEstimator(makePtr<FromFileMotionReader>(arg("load-motions")));
samples/cpp/videostab.cpp:            stabilizer->motionEstimator()->setMotionModel(model);
samples/cpp/videostab.cpp:            stabilizer->setMotionEstimator(makePtr<ToFileMotionWriter>(arg("save-motions"), stabilizer->motionEstimator()));
samples/cpp/videostab.cpp:            stabilizer->motionEstimator()->setMotionModel(model);
samples/cpp/videostab.cpp:        stabilizer->setRadius(argi("radius"));
samples/cpp/videostab.cpp:            stabilizer->setDeblurer(deblurer);
samples/cpp/videostab.cpp:        stabilizer->setTrimRatio(argf("trim-ratio"));
samples/cpp/videostab.cpp:        stabilizer->setCorrectionForInclusion(arg("incl-constr") == "yes");
samples/cpp/videostab.cpp:            stabilizer->setBorderMode(BORDER_REFLECT);
samples/cpp/videostab.cpp:            stabilizer->setBorderMode(BORDER_REPLICATE);
samples/cpp/videostab.cpp:            stabilizer->setBorderMode(BORDER_CONSTANT);
samples/cpp/videostab.cpp:            stabilizer->setInpainter(inpainters_);
samples/cpp/videostab.cpp:        stabilizedFrames.release();
samples/cpp/videostab.cpp:    stabilizedFrames.release();
samples/cpp/points_classifier.cpp:            //(1)-(2)separable and not sets
samples/cpp/morphology2.cpp://the address of variable which receives trackbar position update
samples/cpp/morphology2.cpp:    cv::CommandLineParser parser(argc, argv, "{help h||}{ @image | ../data/baboon.jpg | }");
samples/cpp/CMakeLists.txt:    opencv_stitching opencv_videostab opencv_shape ${OPENCV_MODULES_PUBLIC} ${OpenCV_LIB_COMPONENTS})
samples/cpp/CMakeLists.txt:  #      Define executable targets
samples/cpp/CMakeLists.txt:    add_executable(${the_target} ${srcs})
samples/cpp/kmeans.cpp:    Scalar colorTab[] =
samples/cpp/kmeans.cpp:        Mat points(sampleCount, 1, CV_32FC2), labels;
samples/cpp/kmeans.cpp:        kmeans(points, clusterCount, labels,
samples/cpp/kmeans.cpp:            int clusterIdx = labels.at<int>(i);
samples/cpp/kmeans.cpp:            circle( img, ipt, 2, colorTab[clusterIdx], FILLED, LINE_AA );
samples/cpp/matchmethod_orb_akaze_brisk.cpp:   // This algorithm would be used to match descriptors see http://docs.opencv.org/trunk/db/d39/classcv_1_1DescriptorMatcher.html#ab5dc5036569ecc8d47565007fa518257
samples/cpp/matchmethod_orb_akaze_brisk.cpp:                    Mat tab(nbMatch, 1, CV_32F);
samples/cpp/matchmethod_orb_akaze_brisk.cpp:                        tab.at<float>(i, 0) = matches[i].distance;
samples/cpp/matchmethod_orb_akaze_brisk.cpp:                    sortIdx(tab, index, SORT_EVERY_COLUMN + SORT_ASCENDING);
samples/cpp/calibration.cpp:        "                              #  of board views actually available)\n"
samples/cpp/logistic_regression.cpp://   * Redistributions of source code must retain the above copyright notice,
samples/cpp/logistic_regression.cpp://   * Redistributions in binary form must reproduce the above copyright notice,
samples/cpp/logistic_regression.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
samples/cpp/logistic_regression.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
samples/cpp/logistic_regression.cpp:// and on any theory of liability, whether in contract, strict liability,
samples/cpp/logistic_regression.cpp:    Mat data, labels;
samples/cpp/logistic_regression.cpp:            f["labelsmat"] >> labels;
samples/cpp/logistic_regression.cpp:        labels.convertTo(labels, CV_32F);
samples/cpp/logistic_regression.cpp:    Mat labels_train, labels_test;
samples/cpp/logistic_regression.cpp:            labels_train.push_back(labels.row(i));
samples/cpp/logistic_regression.cpp:            labels_test.push_back(labels.row(i));
samples/cpp/logistic_regression.cpp:    lr1->train(data_train, ROW_SAMPLE, labels_train);
samples/cpp/logistic_regression.cpp:    labels_test.convertTo(labels_test, CV_32S);
samples/cpp/logistic_regression.cpp:    cout << labels_test.t() << endl;
samples/cpp/logistic_regression.cpp:    cout << "accuracy: " << calculateAccuracyPercent(labels_test, responses) << "%" << endl;
samples/cpp/logistic_regression.cpp:    cout << labels_test.t() << endl;
samples/cpp/logistic_regression.cpp:    cout << "accuracy: " << calculateAccuracyPercent(labels_test, responses2) << "%" << endl;
samples/cpp/segment_objects.cpp:        double area = fabs(contourArea(Mat(c)));
samples/cpp/demhist.cpp:              << "Usage: \n" << "demhist [image_name -- Defaults to ../data/baboon.jpg]" << std::endl;
samples/cpp/demhist.cpp:    "{help h||}{@image|../data/baboon.jpg|input image file}"
samples/cpp/image.cpp:// enable/disable use of mixed API in the code below.
samples/cpp/image.cpp:    // This expression will not create any temporary arrays and should be almost as fast as the above variant
samples/cpp/image.cpp:    // this is to demonstrate that img and iplimg really share the data - the result of the above
samples/cpp/detect_mser.cpp:bool    rotateEnable=true;
samples/cpp/detect_mser.cpp:    glEnable(GL_TEXTURE_2D);
samples/cpp/detect_mser.cpp:    glDisable(GL_CULL_FACE);
samples/cpp/detect_mser.cpp:            rotateEnable = !rotateEnable;
samples/cpp/detect_mser.cpp:    String label;
samples/cpp/detect_mser.cpp:                label = Legende(*itMSER);
samples/cpp/detect_mser.cpp:                label = Legende(*itMSER);
samples/cpp/detect_mser.cpp:            namedWindow(*itDesc + label, WINDOW_AUTOSIZE);
samples/cpp/detect_mser.cpp:            imshow(*itDesc + label, result);
samples/cpp/cloning_gui.cpp:    cout << "Press number 1-6 to choose from above techniques: ";
samples/cpp/ffilldemo.cpp:            "\tf - use gradient floodfill with fixed(absolute) range\n"
samples/cpp/image_sequence.cpp:         << "Using the mask example_%02d.jpg will read in images labeled as 'example_00.jpg', 'example_01.jpg', etc."
samples/cpp/cloning_demo.cpp:    cout << "Press number 1-6 to choose from above techniques: ";
samples/cpp/tree_engine.cpp:    if( (int)data->getClassLabels().total() <= 2 ) // regression or 2-class classification problem
samples/cpp/tree_engine.cpp:    cv::Mat ref_labels = data->getClassLabels();
samples/cpp/tree_engine.cpp:    cv::Mat predict_labels;
samples/cpp/tree_engine.cpp:    rtrees->predict(data->getSamples(), predict_labels);
samples/cpp/tree_engine.cpp:    cv::Mat variable_importance = rtrees->getVarImportance();
samples/cpp/tree_engine.cpp:    std::cout << "Estimated variable importance" << std::endl;
samples/cpp/tree_engine.cpp:    for (int i = 0; i < variable_importance.rows; i++) {
samples/cpp/tree_engine.cpp:        std::cout << "Variable " << i << ": " << variable_importance.at<float>(i, 0) << std::endl;
samples/cpp/filestorage.cpp:      << "\n   outputfile above can have many different extenstions, see below."
samples/cpp/filestorage.cpp:    fs << "image1.jpg" << "myfi.png" << "../data/baboon.jpg";
samples/cpp/filestorage.cpp:    cout << "image1.jpg" << " myfi.png" << " ../data/baboon.jpg" << endl;
samples/cpp/stitching_detailed.cpp://   * Redistribution's of source code must retain the above copyright notice,
samples/cpp/stitching_detailed.cpp://   * Redistribution's in binary form must reproduce the above copyright notice,
samples/cpp/stitching_detailed.cpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
samples/cpp/stitching_detailed.cpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
samples/cpp/stitching_detailed.cpp:// and on any theory of liability, whether in contract, strict liability,
samples/cpp/stitching_detailed.cpp:        "      Labels description: Nm is number of matches, Ni is number of inliers,\n"
samples/cpp/stitching_detailed.cpp:        if (try_cuda && cuda::getCudaEnabledDeviceCount() > 0)
samples/cpp/stitching_detailed.cpp:    if (try_cuda && cuda::getCudaEnabledDeviceCount() > 0)
samples/cpp/stitching_detailed.cpp:        if (try_cuda && cuda::getCudaEnabledDeviceCount() > 0)
samples/cpp/stitching_detailed.cpp:        if (try_cuda && cuda::getCudaEnabledDeviceCount() > 0)
samples/cpp/stitching_detailed.cpp:                if (std::abs(compose_scale - 1) > 1e-1)
samples/cpp/stitching_detailed.cpp:        if (abs(compose_scale - 1) > 1e-1)
samples/cpp/connected_components.cpp:    Mat labelImage(img.size(), CV_32S);
samples/cpp/connected_components.cpp:    int nLabels = connectedComponents(bw, labelImage, 8);
samples/cpp/connected_components.cpp:    std::vector<Vec3b> colors(nLabels);
samples/cpp/connected_components.cpp:    for(int label = 1; label < nLabels; ++label){
samples/cpp/connected_components.cpp:        colors[label] = Vec3b( (rand()&255), (rand()&255), (rand()&255) );
samples/cpp/connected_components.cpp:            int label = labelImage.at<int>(r, c);
samples/cpp/connected_components.cpp:            pixel = colors[label];
samples/cpp/example_cmake/CMakeLists.txt:# Find OpenCV, you may need to set OpenCV_DIR variable
samples/cpp/example_cmake/CMakeLists.txt:# to the absolute path to the directory containing OpenCVConfig.cmake file
samples/cpp/example_cmake/CMakeLists.txt:# If the package has been found, several variables will
samples/cpp/example_cmake/CMakeLists.txt:# Declare the executable target built from your sources
samples/cpp/example_cmake/CMakeLists.txt:add_executable(opencv_example example.cpp)
samples/cpp/npr_demo.cpp:    cout << "Press number 1-4 to choose from above techniques: ";
samples/cpp/pca.cpp:* http://www.cl.cam.ac.uk/research/dtg/attarchive/facedatabase.html
samples/python/hist.py:        print("hist_lines applicable only for grayscale images")
samples/python/digits.py:    labels = np.repeat(np.arange(CLASS_N), len(digits)/CLASS_N)
samples/python/digits.py:    return digits, labels
samples/python/digits.py:    if abs(m['mu02']) < 1e-2:
samples/python/digits.py:def evaluate_model(model, digits, samples, labels):
samples/python/digits.py:    err = (labels != resp).mean()
samples/python/digits.py:    for i, j in zip(labels, resp):
samples/python/digits.py:    for img, flag in zip(digits, resp == labels):
samples/python/digits.py:    digits, labels = load_digits(DIGITS_FN)
samples/python/digits.py:    digits, labels = digits[shuffle], labels[shuffle]
samples/python/digits.py:    labels_train, labels_test = np.split(labels, [train_n])
samples/python/digits.py:    model.train(samples_train, labels_train)
samples/python/digits.py:    vis = evaluate_model(model, digits_test, samples_test, labels_test)
samples/python/digits.py:    model.train(samples_train, labels_train)
samples/python/digits.py:    vis = evaluate_model(model, digits_test, samples_test, labels_test)
samples/python/turing.py:Inspired by http://www.jonathanmccabe.com/Cyclic_Symmetric_Multi-Scale_Turing_Patterns.pdf
samples/python/video_threaded.py:   Shows how python threading capabilities can be used
samples/python/lk_track.py:                d = abs(p0-p0r).reshape(-1, 2).max(-1)
samples/python/lk_homography.py:    d = abs(p0-p0r).reshape(-1, 2).max(-1)
samples/python/demo.py:                if callable(proc):
samples/python/demo.py:        text.config(state='disabled')
samples/python/demo.py:        self.text.config(state='disabled')
samples/python/demo.py:            if callable(tag_proc):
samples/python/demo.py:        Popen(sys.executable + ' ' + cmd, shell=True)
samples/python/letter_recog.py:We use the sample database letter-recognition.data
samples/python/letter_recog.py:UCI Repository of machine learning databases
samples/python/gabor_threads.py:gabor_threads.py
samples/python/gabor_threads.py:- use of multiple Gabor filter convolutions to get Fractalius-like image effect (http://www.redfieldplugins.com/filterFractalius.htm)
samples/python/gabor_threads.py:gabor_threads.py [image filename]
samples/python/gabor_threads.py:        kern = cv2.getGaborKernel((ksize, ksize), 4.0, theta, 10.0, 0.5, 0, ktype=cv2.CV_32F)
samples/python/gabor_threads.py:        img_fn = '../data/baboon.jpg'
samples/python/coherence.py:        fn = '../data/baboon.jpg'
samples/python/stereo_match.py:Resulting .ply file cam be easily viewed using MeshLab ( http://meshlab.sourceforge.net/ )
samples/python/grabcut.py:Interactive Image Segmentation using GrabCut algorithm.
samples/python/grabcut.py:This sample shows interactive image segmentation using grabcut algorithm.
samples/python/grabcut.py:    python grabcut.py <filename>
samples/python/grabcut.py:Key '2' - To select areas of probable background
samples/python/grabcut.py:Key '3' - To select areas of probable foreground
samples/python/grabcut.py:            rect = (min(ix,x),min(iy,y),abs(ix-x),abs(iy-y))
samples/python/grabcut.py:        rect = (min(ix,x),min(iy,y),abs(ix-x),abs(iy-y))
samples/python/grabcut.py:        print("Correct Usage: python grabcut.py <filename> \n")
samples/python/grabcut.py:            cv2.imwrite('grabcut_output.png',res)
samples/python/grabcut.py:            if (rect_or_mask == 0):         # grabcut with rect
samples/python/grabcut.py:                cv2.grabCut(img2,mask,rect,bgdmodel,fgdmodel,1,cv2.GC_INIT_WITH_RECT)
samples/python/grabcut.py:            elif rect_or_mask == 1:         # grabcut with mask
samples/python/grabcut.py:                cv2.grabCut(img2,mask,rect,bgdmodel,fgdmodel,1,cv2.GC_INIT_WITH_MASK)
samples/python/digits_adjust.py:def cross_validate(model_class, params, samples, labels, kfold = 3, pool = None):
samples/python/digits_adjust.py:        train_samples, train_labels = samples[train_idx], labels[train_idx]
samples/python/digits_adjust.py:        test_samples, test_labels = samples[test_idx], labels[test_idx]
samples/python/digits_adjust.py:        model.train(train_samples, train_labels)
samples/python/digits_adjust.py:        score = (resp != test_labels).mean()
samples/python/digits_adjust.py:        self._samples, self._labels = self.preprocess()
samples/python/digits_adjust.py:        digits, labels = load_digits(DIGITS_FN)
samples/python/digits_adjust.py:        digits, labels = digits[shuffle], labels[shuffle]
samples/python/digits_adjust.py:        return samples, labels
samples/python/digits_adjust.py:        return self._samples, self._labels
samples/python/digits_adjust.py:            samples, labels = self.get_dataset()
samples/python/digits_adjust.py:            score = cross_validate(SVM, params, samples, labels)
samples/python/digits_adjust.py:        print('writing score table to "svm_scores.npz"')
samples/python/digits_adjust.py:            samples, labels = self.get_dataset()
samples/python/digits_adjust.py:            err = cross_validate(KNearest, dict(k=k), samples, labels)
samples/python/distrans.py:        dist, labels = cv2.distanceTransformWithLabels(~mark, cv2.DIST_L2, 5)
samples/python/distrans.py:            vis = cm[np.uint8(labels)]
samples/python/common.py:def grouper(n, iterable, fillvalue=None):
samples/python/common.py:    args = [iter(iterable)] * n
samples/python/morphology.py:        fn = '../data/baboon.jpg'
samples/python/morphology.py:            sz = abs(sz)
samples/python/contours.py:            3, cv2.LINE_AA, hierarchy, abs(levels) )
samples/python/_coverage.py:    cv2_callable = set(['cv2.'+name for name in dir(cv2) if callable( getattr(cv2, name) )])
samples/python/_coverage.py:    cv2_used = found & cv2_callable
samples/python/_coverage.py:    cv2_unused = cv2_callable - cv2_used
samples/python/_coverage.py:    r = 1.0 * len(cv2_used) / len(cv2_callable)
samples/python/_coverage.py:    print('\ncv2 api coverage: %d / %d  (%.1f%%)' % ( len(cv2_used), len(cv2_callable), r*100 ))
samples/python/color_histogram.py:    cam = video.create_capture(fn, fallback='synth:bg=../data/baboon.jpg:class=chess:noise=0.05')
samples/python/kmeans.py:        ret, labels, centers = cv2.kmeans(points, cluster_n, None, term_crit, 10, 0)
samples/python/kmeans.py:        for (x, y), label in zip(np.int32(points), labels.ravel()):
samples/python/kmeans.py:            c = list(map(int, colors[label]))
samples/python/camshift.py:    b     - toggle back-projected probability visualization
samples/python/squares.py:    return abs( np.dot(d1, d2) / np.sqrt( np.dot(d1, d1)*np.dot(d2, d2) ) )
samples/python/video.py:        print('Warning: unable to open video source: ', source)
samples/python/plane_tracker.py:                   table_number = 6, # 12
samples/python/dft.py:        im = cv2.imread('../data/baboon.jpg')
samples/python/deconvolution.py:    (image source: http://www.topazlabs.com/infocus/_images/licenseplate_compare.jpg)
samples/python/find_obj.py:                               table_number = 6, # 12
samples/python/digits_video.py:            s = "%f, %f" % (abs(v_in.mean() - v_out.mean()), v_out.std())
samples/python/mouse_and_match.py:            result = np.abs(result)**3
samples/gpu/farneback_optical_flow.cpp:    uMin = ::abs(uMin); uMax = ::abs(uMax);
samples/gpu/farneback_optical_flow.cpp:    vMin = ::abs(vMin); vMax = ::abs(vMax);
samples/gpu/farneback_optical_flow.cpp:    cmd.about("Farneback's optical flow sample.");
samples/gpu/opengl.cpp:    glEnable(GL_TEXTURE_2D);
samples/gpu/opengl.cpp:    glDisable(GL_CULL_FACE);
samples/gpu/performance/performance.h:class Runnable
samples/gpu/performance/performance.h:    explicit Runnable(const std::string& nameStr): name_(nameStr) {}
samples/gpu/performance/performance.h:    virtual ~Runnable() {}
samples/gpu/performance/performance.h:    void addInit(Runnable* init) { inits_.push_back(init); }
samples/gpu/performance/performance.h:    void addTest(Runnable* test) { tests_.push_back(test); }
samples/gpu/performance/performance.h:    std::vector<Runnable*> inits_;
samples/gpu/performance/performance.h:    std::vector<Runnable*> tests_;
samples/gpu/performance/performance.h:    struct name##_init: Runnable { \
samples/gpu/performance/performance.h:        name##_init(): Runnable(#name) { \
samples/gpu/performance/performance.h:    struct name##_test: Runnable { \
samples/gpu/performance/performance.h:        name##_test(): Runnable(#name) { \
samples/gpu/performance/performance.h:// Returns abs path taking into account test system working dir
samples/gpu/performance/performance.h:std::string abspath(const std::string& relpath);
samples/gpu/performance/CMakeLists.txt:add_executable(${the_target} ${sources} ${headers})
samples/gpu/performance/performance.cpp:        for (vector<Runnable*>::iterator it = tests_.begin(); it != tests_.end(); ++it)
samples/gpu/performance/performance.cpp:    for (vector<Runnable*>::iterator it = inits_.begin(); it != inits_.end(); ++it)
samples/gpu/performance/performance.cpp:    for (vector<Runnable*>::iterator it = tests_.begin(); it != tests_.end(); ++it)
samples/gpu/performance/performance.cpp:string abspath(const string& relpath)
samples/gpu/performance/performance.cpp:    int num_devices = getCudaEnabledDeviceCount();
samples/gpu/performance/tests.cpp:#include "opencv2/cudabgsegm.hpp"
samples/gpu/performance/tests.cpp:    Mat src = imread(abspath("../data/aloeL.jpg"), IMREAD_GRAYSCALE);
samples/gpu/performance/tests.cpp:    Mat src = imread(abspath("../data/aloeL.jpg"), IMREAD_GRAYSCALE);
samples/gpu/performance/tests.cpp:    Mat src = imread(abspath("../data/aloeL.jpg"), IMREAD_GRAYSCALE);
samples/gpu/performance/tests.cpp:    Mat img = imread(abspath("../data/aloeL.jpg"), IMREAD_GRAYSCALE);
samples/gpu/performance/tests.cpp:    Mat src = imread(abspath("../data/aloeL.jpg"), IMREAD_GRAYSCALE);
samples/gpu/performance/tests.cpp:    const std::string inputFile = abspath("../data/768x576.avi");
samples/gpu/performance/tests.cpp:    const std::string inputFile = abspath("../data/768x576.avi");
samples/gpu/CMakeLists.txt:                                     opencv_cudafeatures2d opencv_cudaoptflow opencv_cudabgsegm
samples/gpu/CMakeLists.txt:  #      Define executable targets
samples/gpu/CMakeLists.txt:    add_executable(${the_target} ${srcs})
samples/gpu/cascadeclassifier_nvidia_api.cpp:#pragma warning( disable : 4201 4408 4127 4100)
samples/gpu/cascadeclassifier_nvidia_api.cpp:    ncvAssertPrintReturn(cv::cuda::getCudaEnabledDeviceCount() != 0, "No GPU found or the library is compiled without CUDA support", -1);
samples/gpu/cascadeclassifier_nvidia_api.cpp:    // Load the classifier from file (assuming its size is about 1 mb)
samples/gpu/bgfg_segm.cpp:#include "opencv2/cudabgsegm.hpp"
samples/gpu/optical_flow.cpp:    return !cvIsNaN(u.x) && !cvIsNaN(u.y) && fabs(u.x) < 1e9 && fabs(u.y) < 1e9;
samples/gpu/driver_api_stereo_multi.cpp:// Disable some warnings which are caused with CUDA headers
samples/gpu/driver_api_stereo_multi.cpp:#pragma warning(disable: 4201 4408 4100)
samples/gpu/driver_api_stereo_multi.cpp:    int num_devices = getCudaEnabledDeviceCount();
samples/gpu/stereo_multi.cpp:    const int numDevices = getCudaEnabledDeviceCount();
samples/gpu/generalized_hough.cpp:        "{ levels         | 360       | R-Table levels }"
samples/gpu/generalized_hough.cpp:    cmd.about("This program demonstrates arbitary object finding with the Generalized Hough transform.");
samples/gpu/hog.cpp:        // check if the variables are initialized
samples/gpu/opticalflow_nvidia_api.cpp:#pragma warning( disable : 4201 4408 4127 4100)
samples/gpu/opticalflow_nvidia_api.cpp:            float d = std::max ( fabsf(*ptr_u), fabsf(*ptr_v) );
samples/gpu/opticalflow_nvidia_api.cpp:    g_pHostMemAllocator = Ptr<INCVMemAllocator> (new NCVMemNativeAllocator (NCVMemoryTypeHostPageable, static_cast<Ncv32u>(devProp.textureAlignment)));
samples/gpu/driver_api_multi.cpp:// Disable some warnings which are caused with CUDA headers
samples/gpu/driver_api_multi.cpp:#pragma warning(disable: 4201 4408 4100)
samples/gpu/driver_api_multi.cpp:    int num_devices = getCudaEnabledDeviceCount();
samples/gpu/cascadeclassifier.cpp:#pragma warning(disable : 4100)
samples/gpu/cascadeclassifier.cpp:    if (getCudaEnabledDeviceCount() == 0)
samples/gpu/morphology.cpp:    String filename = argc == 2 ? argv[1] : "../data/baboon.jpg";
samples/gpu/multi.cpp:// Disable some warnings which are caused with CUDA headers
samples/gpu/multi.cpp:#pragma warning(disable: 4201 4408 4100)
samples/gpu/multi.cpp:    int num_devices = getCudaEnabledDeviceCount();
samples/android/hello-android/cmake_android.cmd:SET BUILD_DIR=build_armeabi
samples/android/hello-android/cmake_android.cmd:SET ANDROID_ABI=armeabi
samples/android/hello-android/run.cmd::: this batch file copies compiled executable to the device,
samples/android/hello-android/run.cmd::: enable command extensions
samples/android/hello-android/run.cmd:SETLOCAL ENABLEEXTENSIONS || (ECHO Unable to enable command extensions. & EXIT \B)
samples/android/hello-android/run.cmd:IF NOT DEFINED ANDROID_SDK (ECHO. & ECHO You should set an environment variable ANDROID_SDK to the full path to your copy of Android SDK & GOTO end)
samples/android/hello-android/run.cmd:(PUSHD "%ANDROID_SDK%" 2>NUL && POPD) || (ECHO. & ECHO Directory "%ANDROID_SDK%" specified by ANDROID_SDK variable does not exist & GOTO end)
samples/android/hello-android/run.cmd::: cleanup (comment out GOTO above to enable cleanup)
samples/android/hello-android/cmake_android.sh:BUILD_DIR=build_armeabi
samples/android/hello-android/cmake_android.sh:RUN_CMAKE="cmake -DOpenCV_DIR=$opencv_build_dir -DARM_TARGET=armeabi -DCMAKE_TOOLCHAIN_FILE=$opencv_android/android.toolchain.cmake .."
samples/android/tutorial-4-opencl/AndroidManifest.xml:        android:icon="@drawable/icon"
samples/android/tutorial-4-opencl/AndroidManifest.xml:            android:label="@string/app_name"
samples/android/tutorial-4-opencl/.project:            <name>org.eclipse.jdt.core.javabuilder</name>
samples/android/tutorial-4-opencl/jni/Application.mk:APP_ABI := armeabi-v7a
samples/android/tutorial-4-opencl/CMakeLists.txt:  message(STATUS "Sample ${sample} is disabled, because ANDROID_OPENCL_SDK is not specified")
samples/android/tutorial-4-opencl/CMakeLists.txt:  message(STATUS "Sample ${sample} is disabled, because ANDROID_NATIVE_API_LEVEL < 14")
samples/android/tutorial-4-opencl/res/menu/menu.xml:    <group android:checkableBehavior="single">
samples/android/tutorial-4-opencl/.cproject:		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
samples/android/tutorial-4-opencl/.cproject:			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.android.AndroidPerProjectProfile"/>
samples/android/tutorial-4-opencl/src/org/opencv/samples/tutorial4/MyGLSurfaceView.java:        ((Activity) getContext()).runOnUiThread(new Runnable() {
samples/android/tutorial-4-opencl/src/org/opencv/samples/tutorial4/MyGLSurfaceView.java:        ((Activity) getContext()).runOnUiThread(new Runnable() {
samples/android/tutorial-4-opencl/src/org/opencv/samples/tutorial4/MyGLSurfaceView.java:        ((Activity) getContext()).runOnUiThread(new Runnable() {
samples/android/tutorial-4-opencl/src/org/opencv/samples/tutorial4/MyGLSurfaceView.java:                Runnable fpsUpdater = new Runnable() {
samples/android/tutorial-4-opencl/src/org/opencv/samples/tutorial4/Tutorial4Activity.java:        runOnUiThread(new Runnable() {
samples/android/tutorial-4-opencl/src/org/opencv/samples/tutorial4/Tutorial4Activity.java:            runOnUiThread(new Runnable() {
samples/android/tutorial-4-opencl/src/org/opencv/samples/tutorial4/Tutorial4Activity.java:            runOnUiThread(new Runnable() {
samples/android/tutorial-4-opencl/src/org/opencv/samples/tutorial4/Tutorial4Activity.java:            runOnUiThread(new Runnable() {
samples/android/tutorial-4-opencl/src/org/opencv/samples/tutorial4/Tutorial4Activity.java:            runOnUiThread(new Runnable() {
samples/android/tutorial-1-camerapreview/AndroidManifest.xml:        android:label="@string/app_name"
samples/android/tutorial-1-camerapreview/AndroidManifest.xml:        android:icon="@drawable/icon"
samples/android/tutorial-1-camerapreview/AndroidManifest.xml:                  android:label="@string/app_name"
samples/android/tutorial-1-camerapreview/AndroidManifest.xml:    <supports-screens android:resizeable="true"
samples/android/tutorial-1-camerapreview/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
samples/android/tutorial-1-camerapreview/src/org/opencv/samples/tutorial1/Tutorial1Activity.java:                    mOpenCvCameraView.enableView();
samples/android/tutorial-1-camerapreview/src/org/opencv/samples/tutorial1/Tutorial1Activity.java:            mOpenCvCameraView.disableView();
samples/android/tutorial-1-camerapreview/src/org/opencv/samples/tutorial1/Tutorial1Activity.java:            mOpenCvCameraView.disableView();
samples/android/face-detection/AndroidManifest.xml:        android:label="@string/app_name"
samples/android/face-detection/AndroidManifest.xml:        android:icon="@drawable/icon"
samples/android/face-detection/AndroidManifest.xml:                  android:label="@string/app_name"
samples/android/face-detection/AndroidManifest.xml:    <supports-screens android:resizeable="true"
samples/android/face-detection/.project:					<key>org.eclipse.cdt.make.core.enableAutoBuild</key>
samples/android/face-detection/.project:					<key>org.eclipse.cdt.make.core.enableCleanBuild</key>
samples/android/face-detection/.project:					<key>org.eclipse.cdt.make.core.enableFullBuild</key>
samples/android/face-detection/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
samples/android/face-detection/jni/Application.mk:APP_ABI := armeabi-v7a
samples/android/face-detection/.cproject:							<builder autoBuildTarget="" command="${NDKROOT}/ndk-build.cmd" enableAutoBuild="true" enableCleanBuild="false" id="org.eclipse.cdt.build.core.settings.default.builder.180541221" incrementalBuildTarget="" keepEnvironmentInBuildfile="false" managedBuildOn="false" name="Gnu Make Builder" superClass="org.eclipse.cdt.build.core.settings.default.builder"/>
samples/android/face-detection/.cproject:									<listOptionValue builtIn="false" value="&quot;${NDKROOT}/sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a/include&quot;"/>
samples/android/face-detection/.cproject:									<listOptionValue builtIn="false" value="&quot;${NDKROOT}/sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a/include&quot;"/>
samples/android/face-detection/.cproject:		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
samples/android/face-detection/.cproject:			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
samples/android/face-detection/src/org/opencv/samples/facedetect/FdActivity.java:                    mOpenCvCameraView.enableView();
samples/android/face-detection/src/org/opencv/samples/facedetect/FdActivity.java:            mOpenCvCameraView.disableView();
samples/android/face-detection/src/org/opencv/samples/facedetect/FdActivity.java:        mOpenCvCameraView.disableView();
samples/android/face-detection/src/org/opencv/samples/facedetect/FdActivity.java:                Log.i(TAG, "Detection Based Tracker enabled");
samples/android/face-detection/src/org/opencv/samples/facedetect/FdActivity.java:                Log.i(TAG, "Cascade detector enabled");
samples/android/15-puzzle/AndroidManifest.xml:        android:icon="@drawable/icon"
samples/android/15-puzzle/AndroidManifest.xml:        android:label="@string/app_name"
samples/android/15-puzzle/AndroidManifest.xml:            android:label="@string/app_name"
samples/android/15-puzzle/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
samples/android/15-puzzle/src/org/opencv/samples/puzzle15/Puzzle15Processor.java:        } while (!isPuzzleSolvable());
samples/android/15-puzzle/src/org/opencv/samples/puzzle15/Puzzle15Processor.java:     * If the frames will be different size - then the result is unpredictable
samples/android/15-puzzle/src/org/opencv/samples/puzzle15/Puzzle15Processor.java:    private boolean isPuzzleSolvable() {
samples/android/15-puzzle/src/org/opencv/samples/puzzle15/Puzzle15Activity.java:                    /* Now enable camera view to start receiving frames */
samples/android/15-puzzle/src/org/opencv/samples/puzzle15/Puzzle15Activity.java:                    mOpenCvCameraView.enableView();
samples/android/15-puzzle/src/org/opencv/samples/puzzle15/Puzzle15Activity.java:            mOpenCvCameraView.disableView();
samples/android/15-puzzle/src/org/opencv/samples/puzzle15/Puzzle15Activity.java:            mOpenCvCameraView.disableView();
samples/android/15-puzzle/src/org/opencv/samples/puzzle15/Puzzle15Activity.java:            /* We need to enable or disable drawing of the tile numbers */
samples/android/color-blob-detection/AndroidManifest.xml:        android:label="@string/app_name"
samples/android/color-blob-detection/AndroidManifest.xml:        android:icon="@drawable/icon"
samples/android/color-blob-detection/AndroidManifest.xml:                  android:label="@string/app_name"
samples/android/color-blob-detection/AndroidManifest.xml:    <supports-screens android:resizeable="true"
samples/android/color-blob-detection/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
samples/android/color-blob-detection/src/org/opencv/samples/colorblobdetect/ColorBlobDetectionActivity.java:                    mOpenCvCameraView.enableView();
samples/android/color-blob-detection/src/org/opencv/samples/colorblobdetect/ColorBlobDetectionActivity.java:            mOpenCvCameraView.disableView();
samples/android/color-blob-detection/src/org/opencv/samples/colorblobdetect/ColorBlobDetectionActivity.java:            mOpenCvCameraView.disableView();
samples/android/color-blob-detection/src/org/opencv/samples/colorblobdetect/ColorBlobDetectionActivity.java:            Mat colorLabel = mRgba.submat(4, 68, 4, 68);
samples/android/color-blob-detection/src/org/opencv/samples/colorblobdetect/ColorBlobDetectionActivity.java:            colorLabel.setTo(mBlobColorRgba);
samples/android/color-blob-detection/src/org/opencv/samples/colorblobdetect/ColorBlobDetectionActivity.java:            Mat spectrumLabel = mRgba.submat(4, 4 + mSpectrum.rows(), 70, 70 + mSpectrum.cols());
samples/android/color-blob-detection/src/org/opencv/samples/colorblobdetect/ColorBlobDetectionActivity.java:            mSpectrum.copyTo(spectrumLabel);
samples/android/CMakeLists.txt:ocv_warnings_disable(CMAKE_CXX_FLAGS -Wmissing-declarations)
samples/android/CMakeLists.txt:  add_executable(hello-android hello-android/main.cpp)
samples/android/tutorial-2-mixedprocessing/AndroidManifest.xml:        android:label="@string/app_name"
samples/android/tutorial-2-mixedprocessing/AndroidManifest.xml:        android:icon="@drawable/icon"
samples/android/tutorial-2-mixedprocessing/AndroidManifest.xml:                  android:label="@string/app_name"
samples/android/tutorial-2-mixedprocessing/AndroidManifest.xml:    <supports-screens android:resizeable="true"
samples/android/tutorial-2-mixedprocessing/.project:					<key>org.eclipse.cdt.make.core.enableAutoBuild</key>
samples/android/tutorial-2-mixedprocessing/.project:					<key>org.eclipse.cdt.make.core.enableCleanBuild</key>
samples/android/tutorial-2-mixedprocessing/.project:					<key>org.eclipse.cdt.make.core.enableFullBuild</key>
samples/android/tutorial-2-mixedprocessing/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
samples/android/tutorial-2-mixedprocessing/jni/Application.mk:APP_ABI := armeabi-v7a
samples/android/tutorial-2-mixedprocessing/.cproject:							<builder autoBuildTarget="" command="${NDKROOT}/ndk-build.cmd" enableAutoBuild="true" enableCleanBuild="false" id="org.eclipse.cdt.build.core.settings.default.builder.141883337" incrementalBuildTarget="" keepEnvironmentInBuildfile="false" managedBuildOn="false" name="Gnu Make Builder" superClass="org.eclipse.cdt.build.core.settings.default.builder"/>
samples/android/tutorial-2-mixedprocessing/.cproject:									<listOptionValue builtIn="false" value="&quot;${NDKROOT}/sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a/include&quot;"/>
samples/android/tutorial-2-mixedprocessing/.cproject:									<listOptionValue builtIn="false" value="&quot;${NDKROOT}/sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a/include&quot;"/>
samples/android/tutorial-2-mixedprocessing/.cproject:		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
samples/android/tutorial-2-mixedprocessing/.cproject:			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
samples/android/tutorial-2-mixedprocessing/src/org/opencv/samples/tutorial2/Tutorial2Activity.java:                    mOpenCvCameraView.enableView();
samples/android/tutorial-2-mixedprocessing/src/org/opencv/samples/tutorial2/Tutorial2Activity.java:            mOpenCvCameraView.disableView();
samples/android/tutorial-2-mixedprocessing/src/org/opencv/samples/tutorial2/Tutorial2Activity.java:            mOpenCvCameraView.disableView();
samples/android/camera-calibration/AndroidManifest.xml:        android:label="@string/app_name"
samples/android/camera-calibration/AndroidManifest.xml:        android:icon="@drawable/icon"
samples/android/camera-calibration/AndroidManifest.xml:                  android:label="@string/app_name"
samples/android/camera-calibration/AndroidManifest.xml:    <supports-screens android:resizeable="true"
samples/android/camera-calibration/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
samples/android/camera-calibration/res/menu/calibration.xml:    <group android:checkableBehavior="single">
samples/android/camera-calibration/res/menu/calibration.xml:                  <group android:checkableBehavior="single">
Binary file samples/android/camera-calibration/res/drawable/icon.png matches
samples/android/camera-calibration/src/org/opencv/samples/cameracalibration/CalibrationResult.java:public abstract class CalibrationResult {
samples/android/camera-calibration/src/org/opencv/samples/cameracalibration/OnCameraFrameRender.java:abstract class FrameRender {
samples/android/camera-calibration/src/org/opencv/samples/cameracalibration/OnCameraFrameRender.java:    public abstract Mat render(CvCameraViewFrame inputFrame);
samples/android/camera-calibration/src/org/opencv/samples/cameracalibration/CameraCalibrationActivity.java:                mOpenCvCameraView.enableView();
samples/android/camera-calibration/src/org/opencv/samples/cameracalibration/CameraCalibrationActivity.java:            mOpenCvCameraView.disableView();
samples/android/camera-calibration/src/org/opencv/samples/cameracalibration/CameraCalibrationActivity.java:            mOpenCvCameraView.disableView();
samples/android/camera-calibration/src/org/opencv/samples/cameracalibration/CameraCalibrationActivity.java:        menu.findItem(R.id.preview_mode).setEnabled(true);
samples/android/camera-calibration/src/org/opencv/samples/cameracalibration/CameraCalibrationActivity.java:            menu.findItem(R.id.preview_mode).setEnabled(false);
samples/android/camera-calibration/src/org/opencv/samples/cameracalibration/CameraCalibrationActivity.java:                    calibrationProgress.setCancelable(false);
samples/android/image-manipulations/AndroidManifest.xml:        android:label="@string/app_name"
samples/android/image-manipulations/AndroidManifest.xml:        android:icon="@drawable/icon"
samples/android/image-manipulations/AndroidManifest.xml:                  android:label="@string/app_name"
samples/android/image-manipulations/AndroidManifest.xml:    <supports-screens android:resizeable="true"
samples/android/image-manipulations/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
samples/android/image-manipulations/src/org/opencv/samples/imagemanipulations/ImageManipulationsActivity.java:                    mOpenCvCameraView.enableView();
samples/android/image-manipulations/src/org/opencv/samples/imagemanipulations/ImageManipulationsActivity.java:            mOpenCvCameraView.disableView();
samples/android/image-manipulations/src/org/opencv/samples/imagemanipulations/ImageManipulationsActivity.java:            mOpenCvCameraView.disableView();
samples/android/tutorial-3-cameracontrol/AndroidManifest.xml:        android:label="@string/app_name"
samples/android/tutorial-3-cameracontrol/AndroidManifest.xml:        android:icon="@drawable/icon"
samples/android/tutorial-3-cameracontrol/AndroidManifest.xml:                  android:label="@string/app_name"
samples/android/tutorial-3-cameracontrol/AndroidManifest.xml:    <supports-screens android:resizeable="true"
samples/android/tutorial-3-cameracontrol/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
samples/android/tutorial-3-cameracontrol/src/org/opencv/samples/tutorial3/Tutorial3Activity.java:                    mOpenCvCameraView.enableView();
samples/android/tutorial-3-cameracontrol/src/org/opencv/samples/tutorial3/Tutorial3Activity.java:            mOpenCvCameraView.disableView();
samples/android/tutorial-3-cameracontrol/src/org/opencv/samples/tutorial3/Tutorial3Activity.java:            mOpenCvCameraView.disableView();
Binary file samples/java/clojure/simple-sample/resources/images/lena.png matches
samples/java/sbt/README:Anyone familiar with Java should be able to read the Scala examples.
samples/java/sbt/sbt/sbt:java -Xms512M -Xmx1536M -Xss1M -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=384M -jar `dirname $0`/sbt-launch.jar "$@"
Binary file samples/java/sbt/sbt/sbt-launch.jar matches
Binary file samples/java/sbt/src/main/resources/AverageMaleFace.jpg matches
Binary file samples/java/sbt/src/main/resources/img2.png matches
Binary file samples/java/sbt/src/main/resources/img1.png matches
samples/java/eclipse/HelloCV/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
samples/java/eclipse/HelloCV/.settings/org.eclipse.jdt.core.prefs:org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
samples/java/eclipse/HelloCV/.settings/org.eclipse.jdt.core.prefs:org.eclipse.jdt.core.compiler.debug.localVariable=generate
samples/hal/README.md:3. Run make (or `make opencv_perf_core` to build the demonstration test executable only)
samples/hal/c_hal/impl.h:int wrong_absdiff8u(const uchar* src1, size_t sz1, const uchar* src2, size_t sz2, uchar* dst, size_t sz, int w, int h);
samples/hal/c_hal/impl.h:int wrong_absdiff8s(const schar* src1, size_t sz1, const schar* src2, size_t sz2, schar* dst, size_t sz, int w, int h);
samples/hal/c_hal/impl.h:int wrong_absdiff16u(const ushort* src1, size_t sz1, const ushort* src2, size_t sz2, ushort* dst, size_t sz, int w, int h);
samples/hal/c_hal/impl.h:int wrong_absdiff16s(const short* src1, size_t sz1, const short* src2, size_t sz2, short* dst, size_t sz, int w, int h);
samples/hal/c_hal/impl.h:int wrong_absdiff32s(const int* src1, size_t sz1, const int* src2, size_t sz2, int* dst, size_t sz, int w, int h);
samples/hal/c_hal/impl.h:int wrong_absdiff32f(const float* src1, size_t sz1, const float* src2, size_t sz2, float* dst, size_t sz, int w, int h);
samples/hal/c_hal/impl.h:int wrong_absdiff64f(const double* src1, size_t sz1, const double* src2, size_t sz2, double* dst, size_t sz, int w, int h);
samples/hal/c_hal/impl.h:#undef cv_hal_absdiff8u
samples/hal/c_hal/impl.h:#define cv_hal_absdiff8u wrong_absdiff8u
samples/hal/c_hal/impl.h:#undef cv_hal_absdiff8s
samples/hal/c_hal/impl.h:#define cv_hal_absdiff8s wrong_absdiff8s
samples/hal/c_hal/impl.h:#undef cv_hal_absdiff16u
samples/hal/c_hal/impl.h:#define cv_hal_absdiff16u wrong_absdiff16u
samples/hal/c_hal/impl.h:#undef cv_hal_absdiff16s
samples/hal/c_hal/impl.h:#define cv_hal_absdiff16s wrong_absdiff16s
samples/hal/c_hal/impl.h:#undef cv_hal_absdiff32s
samples/hal/c_hal/impl.h:#define cv_hal_absdiff32s wrong_absdiff32s
samples/hal/c_hal/impl.h:#undef cv_hal_absdiff32f
samples/hal/c_hal/impl.h:#define cv_hal_absdiff32f wrong_absdiff32f
samples/hal/c_hal/impl.h:#undef cv_hal_absdiff64f
samples/hal/c_hal/impl.h:#define cv_hal_absdiff64f wrong_absdiff64f
samples/hal/c_hal/impl.c:int wrong_absdiff8u(const uchar* src1, size_t sz1, const uchar* src2, size_t sz2, uchar* dst, size_t sz, int w, int h)
samples/hal/c_hal/impl.c:int wrong_absdiff8s(const schar* src1, size_t sz1, const schar* src2, size_t sz2, schar* dst, size_t sz, int w, int h)
samples/hal/c_hal/impl.c:int wrong_absdiff16u(const ushort* src1, size_t sz1, const ushort* src2, size_t sz2, ushort* dst, size_t sz, int w, int h)
samples/hal/c_hal/impl.c:int wrong_absdiff16s(const short* src1, size_t sz1, const short* src2, size_t sz2, short* dst, size_t sz, int w, int h)
samples/hal/c_hal/impl.c:int wrong_absdiff32s(const int* src1, size_t sz1, const int* src2, size_t sz2, int* dst, size_t sz, int w, int h)
samples/hal/c_hal/impl.c:int wrong_absdiff32f(const float* src1, size_t sz1, const float* src2, size_t sz2, float* dst, size_t sz, int w, int h)
samples/hal/c_hal/impl.c:int wrong_absdiff64f(const double* src1, size_t sz1, const double* src2, size_t sz2, double* dst, size_t sz, int w, int h)
samples/directx/d3d11_interop.cpp:// Sample demonstrating interoperability of OpenCV UMat with Direct X surface
samples/directx/d3d11_interop.cpp:      m_nv12_available(false)
samples/directx/d3d11_interop.cpp:            m_nv12_available = true;
samples/directx/d3d11_interop.cpp:        if(m_nv12_available)
samples/directx/d3d11_interop.cpp:            MODE mode = (m_mode == MODE_GPU_NV12 && !m_nv12_available) ? MODE_GPU_RGBA : m_mode;
samples/directx/d3d11_interop.cpp:    bool                    m_nv12_available;
samples/directx/d3d9_interop.cpp:// Sample demonstrating interoperability of OpenCV UMat with Direct X surface
samples/directx/d3d10_interop.cpp:// Sample demonstrating interoperability of OpenCV UMat with Direct X surface
samples/directx/winapp.hpp:// Sample demonstrating interoperability of OpenCV UMat with Direct X surface
samples/directx/CMakeLists.txt:  #      Define executable targets
samples/directx/CMakeLists.txt:    add_executable(${the_target} ${srcs})
samples/directx/d3dsample.hpp:// Sample demonstrating interoperability of OpenCV UMat with Direct X surface
samples/directx/d3dsample.hpp:        "\nSample demonstrating interoperability of DirectX and OpenCL with OpenCV.\n"
samples/directx/d3d9ex_interop.cpp:// Sample demonstrating interoperability of OpenCV UMat with Direct X surface
samples/winrt_universal/PhoneTutorial/App.xaml.cpp:/// <param name="e">Details about the launch request and process.</param>
samples/winrt_universal/PhoneTutorial/App.xaml.cpp:        DebugSettings->EnableFrameRateCounter = true;
samples/winrt_universal/PhoneTutorial/Package.appxmanifest:    <Application Id="App" Executable="$targetnametoken$.exe" EntryPoint="PhoneTutorial.App">
samples/winrt_universal/PhoneTutorial/Package.appxmanifest:  <Capabilities>
samples/winrt_universal/PhoneTutorial/Package.appxmanifest:    <Capability Name="internetClientServer" />
samples/winrt_universal/PhoneTutorial/Package.appxmanifest:  </Capabilities>
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <PropertyGroup Label="Globals">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <ImportGroup Label="ExtensionSettings">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <PropertyGroup Label="UserMacros" />
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/PhoneTutorial/PhoneTutorial.vcxproj:  <ImportGroup Label="ExtensionTargets">
Binary file samples/winrt_universal/PhoneTutorial/Lena.png matches
samples/winrt_universal/PhoneTutorial/opencv.props:  <ImportGroup Label="PropertySheets" />
samples/winrt_universal/PhoneTutorial/opencv.props:  <PropertyGroup Label="UserMacros">
samples/winrt_universal/PhoneTutorial/MainPage.xaml.cpp:/// Invoked when this page is about to be displayed in a Frame.
samples/winrt_universal/PhoneTutorial/MainPage.xaml.cpp:    // Cast to Object^, then to its underlying IInspectable interface.
samples/winrt_universal/PhoneTutorial/MainPage.xaml.cpp:    ComPtr<IInspectable> insp(reinterpret_cast<IInspectable*>(obj));
samples/winrt_universal/PhoneTutorial/MainPage.xaml.cpp:    // get the pixels from the WriteableBitmap
samples/winrt_universal/PhoneTutorial/MainPage.xaml.cpp:    // copy processed image back to the WriteableBitmap
samples/winrt_universal/PhoneTutorial/MainPage.xaml.cpp:    // update the WriteableBitmap
samples/winrt_universal/PhoneTutorial/MainPage.xaml.cpp:        m_bitmap = ref new Windows::UI::Xaml::Media::Imaging::WriteableBitmap(1, 1);
Binary file samples/winrt_universal/PhoneTutorial/Assets/StoreLogo.scale-240.png matches
samples/winrt_universal/PhoneTutorial/MainPage.xaml.h:        Windows::UI::Xaml::Media::Imaging::WriteableBitmap^ m_bitmap;
samples/winrt_universal/PhoneTutorial/MainPage.xaml:    mc:Ignorable="d"
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/readme.txt:  video is initialized and frames are grabbed on the UI thread
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/readme.txt:  encapsulates the Media Foundation interface needed for video initialization and grabbing.
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Package.appxmanifest:    <Application Id="App" Executable="$targetnametoken$.exe" EntryPoint="video_capture_xaml_Windows.App">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Package.appxmanifest:  <Capabilities>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Package.appxmanifest:    <Capability Name="internetClient" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Package.appxmanifest:    <DeviceCapability Name="webcam" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Package.appxmanifest:  </Capabilities>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/MainPage.xaml.cpp:        // start (1) frame-grabbing loop and (2) message loop
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Assets/haarcascade_frontalface_alt.xml:    Stump-based 20x20 gentle adaboost frontal face detector.
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Assets/haarcascade_frontalface_alt.xml:   * Redistribution's of source code must retain the above copyright notice,
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Assets/haarcascade_frontalface_alt.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Assets/haarcascade_frontalface_alt.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Assets/haarcascade_frontalface_alt.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/Assets/haarcascade_frontalface_alt.xml: and on any theory of liability, whether in contract, strict liability,
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/MainPage.xaml:      mc:Ignorable="d">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <PropertyGroup Label="Globals">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:    <ProjectGuid>{32fdab94-f87e-4f0a-89a4-9ec10a3b1d3d}</ProjectGuid>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <Import Project="..\video_capture_xaml.Shared\video_capture_xaml.Shared.vcxitems" Label="Shared" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <ImportGroup Label="ExtensionSettings">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <PropertyGroup Label="UserMacros" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Windows/video_capture_xaml.Windows.vcxproj:  <ImportGroup Label="ExtensionTargets">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/App.xaml.cpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/App.xaml.cpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/App.xaml.cpp:/// <param name="e">Details about the launch request and process.</param>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/App.xaml.cpp:        DebugSettings->EnableFrameRateCounter = true;
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/App.xaml.h:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/App.xaml.h:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/video_capture_xaml.Shared.vcxitems:  <PropertyGroup Label="Globals">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/video_capture_xaml.Shared.vcxitems:    <ProjectCapability Include="SourceItemsFromImports" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/main.cpp:// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/main.cpp:// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.Shared/main.cpp:            if (!cam.grab()) continue;
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/opencv.props:  <ImportGroup Label="PropertySheets" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/opencv.props:  <PropertyGroup Label="UserMacros">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/Package.appxmanifest:        Executable="$targetnametoken$.exe"
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/Package.appxmanifest:  <Capabilities>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/Package.appxmanifest:    <Capability Name="internetClientServer" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/Package.appxmanifest:    <DeviceCapability Name="webcam" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/Package.appxmanifest:  </Capabilities>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <PropertyGroup Label="Globals">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:    <ProjectGuid>{d7a82e7f-1535-4eec-aba9-2c8447669d33}</ProjectGuid>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <Import Project="..\video_capture_xaml.Shared\video_capture_xaml.Shared.vcxitems" Label="Shared" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <ImportGroup Label="ExtensionSettings">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <PropertyGroup Label="UserMacros" />
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/video_capture_xaml.WindowsPhone.vcxproj:  <ImportGroup Label="ExtensionTargets">
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/MainPage.xaml.cpp:        // start (1) frame-grabbing loop and (2) message loop
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/MainPage.xaml.cpp:    /// Invoked when this page is about to be displayed in a Frame.
Binary file samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/Assets/StoreLogo.scale-240.png matches
samples/winrt_universal/VideoCaptureXAML/video_capture_xaml/video_capture_xaml.WindowsPhone/MainPage.xaml:      mc:Ignorable="d">
samples/winrt_universal/VideoCaptureXAML/VideoCaptureXAML.sln:		video_capture_xaml\video_capture_xaml.Shared\video_capture_xaml.Shared.vcxitems*{d7a82e7f-1535-4eec-aba9-2c8447669d33}*SharedItemsImports = 4
samples/winrt_universal/VideoCaptureXAML/VideoCaptureXAML.sln:		video_capture_xaml\video_capture_xaml.Shared\video_capture_xaml.Shared.vcxitems*{32fdab94-f87e-4f0a-89a4-9ec10a3b1d3d}*SharedItemsImports = 4
samples/opencl/CMakeLists.txt:  #      Define executable targets
samples/opencl/CMakeLists.txt:    add_executable(${the_target} ${srcs})
samples/opencl/opencl-opencv-interop.cpp:// The example of interoperability between OpenCL and OpenCV.
samples/opencl/opencl-opencv-interop.cpp:        query_param(id, CL_DEVICE_MAX_GLOBAL_VARIABLE_SIZE, m_max_global_variable_size);
samples/opencl/opencl-opencv-interop.cpp:        query_param(id, CL_DEVICE_GLOBAL_VARIABLE_PREFERRED_TOTAL_SIZE, m_global_variable_preferred_total_size);
samples/opencl/opencl-opencv-interop.cpp:        query_param(id, CL_DEVICE_AVAILABLE, m_available);
samples/opencl/opencl-opencv-interop.cpp:        query_param(id, CL_DEVICE_COMPILER_AVAILABLE, m_compiler_available);
samples/opencl/opencl-opencv-interop.cpp:        query_param(id, CL_DEVICE_LINKER_AVAILABLE, m_linker_available);
samples/opencl/opencl-opencv-interop.cpp:        query_param(id, CL_DEVICE_EXECUTION_CAPABILITIES, m_execution_capabilities);
samples/opencl/opencl-opencv-interop.cpp:    size_t                                    m_max_global_variable_size;
samples/opencl/opencl-opencv-interop.cpp:    size_t                                    m_global_variable_preferred_total_size;
samples/opencl/opencl-opencv-interop.cpp:    cl_bool                                   m_available;
samples/opencl/opencl-opencv-interop.cpp:    cl_bool                                   m_compiler_available;
samples/opencl/opencl-opencv-interop.cpp:    cl_bool                                   m_linker_available;
samples/opencl/opencl-opencv-interop.cpp:    cl_device_exec_capabilities               m_execution_capabilities;
samples/opencl/opencl-opencv-interop.cpp:// this function is an example of interoperability between OpenCL buffer
samples/opencl/opencl-opencv-interop.cpp:// this function is an example of interoperability between OpenCL image
samples/winrt/ImageManipulations/App.xaml.cpp:/// <param name="pArgs">Details about the launch request and process.</param>
samples/winrt/ImageManipulations/App.xaml.cpp:/// <param name="e">Details about the suspend request.</param>
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                <VisualState x:Name="Disabled">
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                <VisualState x:Name="Disabled">
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                x:Name="TextLabel"
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                <VisualState x:Name="Disabled">
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                <VisualState x:Name="Disabled">
samples/winrt/ImageManipulations/common/StandardStyles.xaml:                                <VisualState x:Name="Disabled">
samples/winrt/ImageManipulations/common/StandardStyles.xaml:      Includes an elaborate tooltip to display title and description text
samples/winrt/ImageManipulations/common/StandardStyles.xaml:        <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
samples/winrt/ImageManipulations/common/StandardStyles.xaml:        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
samples/winrt/ImageManipulations/common/StandardStyles.xaml:        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
samples/winrt/ImageManipulations/common/StandardStyles.xaml:        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
samples/winrt/ImageManipulations/common/StandardStyles.xaml:        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
samples/winrt/ImageManipulations/common/StandardStyles.xaml:        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
samples/winrt/ImageManipulations/common/StandardStyles.xaml:        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
samples/winrt/ImageManipulations/common/StandardStyles.xaml:        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
samples/winrt/ImageManipulations/common/LayoutAwarePage.h:            property Windows::Foundation::Collections::IObservableMap<Platform::String^, Platform::Object^>^ DefaultViewModel
samples/winrt/ImageManipulations/common/LayoutAwarePage.h:                Windows::Foundation::Collections::IObservableMap<Platform::String^, Platform::Object^>^ get();
samples/winrt/ImageManipulations/common/LayoutAwarePage.h:                void set(Windows::Foundation::Collections::IObservableMap<Platform::String^, Platform::Object^>^ value);
samples/winrt/ImageManipulations/common/suspensionmanager.cpp:    // state will be saved (along with any weak references that are no longer reachable)
samples/winrt/ImageManipulations/common/LayoutAwarePage.cpp:    if (Windows::ApplicationModel::DesignMode::DesignModeEnabled)
samples/winrt/ImageManipulations/common/LayoutAwarePage.cpp:    TypeName(IObservableMap<String^, Object^>::typeid), TypeName(LayoutAwarePage::typeid), nullptr);
samples/winrt/ImageManipulations/common/LayoutAwarePage.cpp:/// Gets an implementation of <see cref="IObservableMap&lt;String, Object&gt;"/> designed to be
samples/winrt/ImageManipulations/common/LayoutAwarePage.cpp:IObservableMap<String^, Object^>^ LayoutAwarePage::DefaultViewModel::get()
samples/winrt/ImageManipulations/common/LayoutAwarePage.cpp:    return safe_cast<IObservableMap<String^, Object^>^>(GetValue(DefaultViewModelProperty));
samples/winrt/ImageManipulations/common/LayoutAwarePage.cpp:/// Sets an implementation of <see cref="IObservableMap&lt;String, Object&gt;"/> designed to be
samples/winrt/ImageManipulations/common/LayoutAwarePage.cpp:void LayoutAwarePage::DefaultViewModel::set(IObservableMap<String^, Object^>^ value)
samples/winrt/ImageManipulations/common/LayoutAwarePage.cpp:/// Invoked when this page is about to be displayed in a Frame.
samples/winrt/ImageManipulations/common/LayoutAwarePage.cpp:/// <param name="pageState">An empty map to be populated with serializable state.</param>
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <PropertyGroup Label="Globals">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <ImportGroup Label="ExtensionSettings">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <PropertyGroup Label="UserMacros">
samples/winrt/ImageManipulations/MediaCapture.vcxproj:  <ImportGroup Label="ExtensionTargets">
samples/winrt/ImageManipulations/MediaExtensions/Common/OpQueue.h:#pragma warning( disable : 4355 )  // 'this' used in base member initializer list
samples/winrt/ImageManipulations/MediaExtensions/Common/OpQueue.h:// The OpQueue class is an abstract class. The derived class must
samples/winrt/ImageManipulations/MediaExtensions/Common/AsyncCB.h://  Add this class as a member variable. In the parent class constructor,
samples/winrt/ImageManipulations/MediaExtensions/Common/BufferLock.h:        // Use the 2-D version if available.
samples/winrt/ImageManipulations/MediaExtensions/Common/BufferLock.h:                    *ppbScanLine0 = pData + abs(lDefaultStride) * (dwHeightInPixels - 1);
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.h:    InspectableClass(RuntimeClass_OcvTransform_OcvImageManipulations, BaseTrust)
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.h:    STDMETHODIMP GetInputAvailableType(
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.h:    STDMETHODIMP GetOutputAvailableType(
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/dllmain.cpp:    ActivatableClass(OcvImageManipulations);
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/dllmain.cpp:        DisableThreadLibraryCalls( hInstance );
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/opencv.props:  <ImportGroup Label="PropertySheets" />
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/opencv.props:  <PropertyGroup Label="UserMacros">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:7. Preferred output types: As above.
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:    Microsoft::WRL::ComPtr<ABI::Windows::Foundation::Collections::IMap<HSTRING, IInspectable *>> spSetting;
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:        Microsoft::WRL::ComPtr<IInspectable> spInsp;
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:// Returns information about an input stream.
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:// Returns information about an output stream.
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:// GetInputAvailableType
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:HRESULT OcvImageManipulations::GetInputAvailableType(
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:// GetOutputAvailableType
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:HRESULT OcvImageManipulations::GetOutputAvailableType(
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:        // NOTE: If this MFT were D3D-enabled, it would cache the IDirect3DDeviceManager9
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:    // There must be an input sample available for processing.
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:            const float baseRabge[] = {0.f,256.f};
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.cpp:            const float* ranges[] = {baseRabge};
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <PropertyGroup Label="Globals">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="PropertySheets">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="PropertySheets">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <PropertyGroup Label="UserMacros" />
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:      <EnableWindowsRuntime Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</EnableWindowsRuntime>
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:      <EnableWindowsRuntime Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</EnableWindowsRuntime>
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:      <EnableWindowsRuntime Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">true</EnableWindowsRuntime>
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:      <EnableWindowsRuntime Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">true</EnableWindowsRuntime>
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:      <EnableWindowsRuntime Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</EnableWindowsRuntime>
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:      <EnableWindowsRuntime Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</EnableWindowsRuntime>
samples/winrt/ImageManipulations/MediaExtensions/OcvTransform/OcvTransform.vcxproj:  <ImportGroup Label="ExtensionTargets">
samples/winrt/ImageManipulations/Package.appxmanifest:    <Application Id="MediaCapture.App" Executable="$targetnametoken$.exe" EntryPoint="MediaCapture.App">
samples/winrt/ImageManipulations/Package.appxmanifest:  <Capabilities>
samples/winrt/ImageManipulations/Package.appxmanifest:    <DeviceCapability Name="webcam" />
samples/winrt/ImageManipulations/Package.appxmanifest:    <DeviceCapability Name="microphone" />
samples/winrt/ImageManipulations/Package.appxmanifest:  </Capabilities>
samples/winrt/ImageManipulations/Package.appxmanifest:    <Extension Category="windows.activatableClass.inProcessServer">
samples/winrt/ImageManipulations/Package.appxmanifest:        <ActivatableClass ActivatableClassId="OcvTransform.OcvImageManipulations" ThreadingModel="both" />
Binary file samples/winrt/ImageManipulations/assets/splash-sdk.png matches
samples/winrt/ImageManipulations/opencv.props:  <ImportGroup Label="PropertySheets" />
samples/winrt/ImageManipulations/opencv.props:  <PropertyGroup Label="UserMacros">
samples/winrt/ImageManipulations/MainPage.xaml.cpp:        double availableWidth = windowWidth - listBoxWidth;
samples/winrt/ImageManipulations/MainPage.xaml.cpp:            InputSection->Width = ((availableWidth) -
samples/winrt/ImageManipulations/MainPage.xaml.cpp:/// <param name="pageState">An empty map to be populated with serializable state.</param>
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:/// Invoked when this page is about to be displayed in a Frame.
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:    btnStartDevice2->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:    btnStartPreview2->IsEnabled = false;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:    EffectTypeCombo->IsEnabled = false;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:        EnableButton(false, "StartDevice");
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                EnableButton(true, "StartPreview");
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                EnableButton(true, "StartStopRecord");
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                EnableButton(true, "TakePhoto");
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:        EnableButton(false, "StartPreview");
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:        EnableButton(true, "StartPreview");
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:    btnStartDevice2->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:    btnStartPreview2->IsEnabled = false;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:    EffectTypeCombo->IsEnabled = false;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                    btnStartDevice2->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:            Windows::Foundation::Collections::IVectorView<Windows::Media::MediaProperties::IMediaEncodingProperties^>^ supportedPropsList = mediaCapture->VideoDeviceController->GetAvailableMediaStreamProperties(Windows::Media::Capture::MediaStreamType::Photo);
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                                        EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                                        EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                                EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                    EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                    EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:void AdvancedCapture::EnableButton(bool enabled, String^ name)
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:        btnStartDevice2->IsEnabled = enabled;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:        btnStartPreview2->IsEnabled = enabled;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                                    EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                                    EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                            EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                        EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:                    EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.cpp:        EffectTypeCombo->IsEnabled = true;
samples/winrt/ImageManipulations/AdvancedCapture.xaml.h:            void EnableButton(bool enabled, Platform::String ^name);
samples/winrt/ImageManipulations/MainPage.xaml:    mc:Ignorable="d"
samples/winrt/ImageManipulations/MainPage.xaml:            <ScrollViewer x:Name="MainScrollViewer" Grid.Row="1" ZoomMode="Disabled" IsTabStop="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Padding="0,0,0,20" >
samples/winrt/ImageManipulations/MainPage.xaml:                            <TextBlock x:Name="ScenarioListLabel" Text="Select Scenario:" Grid.Row="1"  Style="{StaticResource SubheaderTextStyle}" Margin="0,5,0,0" />
samples/winrt/ImageManipulations/MainPage.xaml:                                         AutomationProperties.LabeledBy="{Binding ElementName=ScenarioListLabel}" MaxHeight="125">
samples/winrt/ImageManipulations/MainPage.xaml:                            <UserControl x:Name="InputSection" Margin="0,5,0,0" IsTabStop="False" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top"/>
samples/winrt/ImageManipulations/AdvancedCapture.xaml:    mc:Ignorable="d">
samples/winrt/ImageManipulations/AdvancedCapture.xaml:                <Button x:Name="btnStartDevice2" Click="btnStartDevice_Click" IsEnabled="true"  Margin="0,0,10,0" Content="StartDevice"/>
samples/winrt/ImageManipulations/AdvancedCapture.xaml:                <Button x:Name="btnStartPreview2" Click="btnStartPreview_Click" IsEnabled="true"  Margin="0,0,10,0" Content="StartPreview"/>
samples/winrt/OcvImageProcessing/OcvImageProcessing/App.xaml.cpp:/// <param name="args">Details about the launch request and process.</param>
samples/winrt/OcvImageProcessing/OcvImageProcessing/App.xaml.cpp:/// <param name="e">Details about the suspend request.</param>
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <PropertyGroup Label="Globals">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <ImportGroup Label="ExtensionSettings">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <PropertyGroup Label="UserMacros" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:      <DisableSpecificWarnings>4453</DisableSpecificWarnings>
samples/winrt/OcvImageProcessing/OcvImageProcessing/OcvImageProcessing.vcxproj:  <ImportGroup Label="ExtensionTargets">
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                <VisualState x:Name="Disabled">
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                x:Name="TextLabel"
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                <VisualState x:Name="Disabled">
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:    <Style x:Key="DisableUpdatesAppBarButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource AppBarButtonStyle}">
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="AutomationProperties.AutomationId" Value="DisableUpdatesAppBarButton"/>
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="AutomationProperties.Name" Value="Disable Updates"/>
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                <VisualState x:Name="Disabled">
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:                                <VisualState x:Name="Disabled">
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:      Includes an elaborate tooltip to display title and description text
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/Common/StandardStyles.xaml:        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/Package.appxmanifest:    <Application Id="App" Executable="$targetnametoken$.exe" EntryPoint="OcvImageProcessing.App">
samples/winrt/OcvImageProcessing/OcvImageProcessing/opencv.props:  <ImportGroup Label="PropertySheets" />
samples/winrt/OcvImageProcessing/OcvImageProcessing/opencv.props:  <PropertyGroup Label="UserMacros">
samples/winrt/OcvImageProcessing/OcvImageProcessing/MainPage.xaml.cpp:/// Can't use this one: https://msdn.microsoft.com/en-us/library/bb384865.aspx, not available on WinRT.
samples/winrt/OcvImageProcessing/OcvImageProcessing/MainPage.xaml.cpp:/// Invoked when this page is about to be displayed in a Frame.
samples/winrt/OcvImageProcessing/OcvImageProcessing/MainPage.xaml.cpp:    // Create the WriteableBitmap
samples/winrt/OcvImageProcessing/OcvImageProcessing/MainPage.xaml.cpp:    WriteableBitmap^ bitmap = ref new WriteableBitmap(image.cols, image.rows);
samples/winrt/OcvImageProcessing/OcvImageProcessing/MainPage.xaml.cpp:    ComPtr<IInspectable> pBuffer((IInspectable*)buffer);
Binary file samples/winrt/OcvImageProcessing/OcvImageProcessing/Assets/SplashScreen.png matches
Binary file samples/winrt/OcvImageProcessing/OcvImageProcessing/Assets/Lena.png matches
samples/winrt/OcvImageProcessing/OcvImageProcessing/MainPage.xaml:    mc:Ignorable="d">
samples/winrt/JavaScript/package.appxmanifest:  <Capabilities>
samples/winrt/JavaScript/package.appxmanifest:    <Capability Name="internetClient" />
samples/winrt/JavaScript/package.appxmanifest:    <DeviceCapability Name="webcam" />
samples/winrt/JavaScript/package.appxmanifest:  </Capabilities>
samples/winrt/JavaScript/package.appxmanifest:    <Extension Category="windows.activatableClass.inProcessServer">
samples/winrt/JavaScript/package.appxmanifest:        <ActivatableClass ActivatableClassId="OcvTransform.OcvImageManipulations" ThreadingModel="both" />
samples/winrt/JavaScript/default.html:            <h1 id="featureLabel"></h1>
samples/winrt/JavaScript/js/AdvancedCapture.js:        id("btnStartDevice").disabled = false;
samples/winrt/JavaScript/js/AdvancedCapture.js:        id("btnStartPreview").disabled = true;
samples/winrt/JavaScript/js/AdvancedCapture.js:        id("videoEffect").disabled = true;
samples/winrt/JavaScript/js/AdvancedCapture.js:            id("btnStartPreview").disabled = false;
samples/winrt/JavaScript/js/AdvancedCapture.js:            id("btnStartDevice").disabled = true;
samples/winrt/JavaScript/js/AdvancedCapture.js:        id("btnStartPreview").disabled = true;
samples/winrt/JavaScript/js/AdvancedCapture.js:        id("videoEffect").disabled = false;
samples/winrt/JavaScript/js/AdvancedCapture.js:                cameraSelect.disabled = true;
samples/winrt/JavaScript/js/AdvancedCapture.js:                id("btnStartDevice").disabled = true;
samples/winrt/JavaScript/js/AdvancedCapture.js:                cameraSelect.add(new Option("No cameras available"));
samples/winrt/JavaScript/js/AdvancedCapture.js:        id("btnStartDevice").disabled = false;
samples/winrt/JavaScript/js/AdvancedCapture.js:        id("btnStartPreview").disabled = true;
samples/winrt/JavaScript/js/AdvancedCapture.js:        id("videoEffect").disabled = true;
samples/winrt/JavaScript/html/AdvancedCapture.html:        <select id="cameraSelect" aria-labelledby="listLabel"></select>
samples/winrt/JavaScript/html/AdvancedCapture.html:        <button id="btnStartDevice" disabled="disabled">Start Device</button>
samples/winrt/JavaScript/html/AdvancedCapture.html:        <button id="btnStartPreview" disabled="disabled">Start Preview</button>
samples/winrt/JavaScript/html/AdvancedCapture.html:        <select id="videoEffect" disabled="disabled">
samples/winrt/JavaScript/html/AdvancedCapture.html:        <table>
samples/winrt/JavaScript/html/AdvancedCapture.html:        </table>
samples/winrt/JavaScript/MediaCaptureJavaScript.jsproj:  <ItemGroup Label="ProjectConfigurations">
samples/winrt/JavaScript/MediaCaptureJavaScript.jsproj:  <PropertyGroup Label="Globals">
samples/winrt/JavaScript/MediaCaptureJavaScript.jsproj:  <PropertyGroup Label="UserMacros">
samples/winrt/JavaScript/MediaCaptureJavaScript.jsproj:       that target and the DisableFastUpToDateCheck PropertyGroup.
samples/winrt/JavaScript/MediaCaptureJavaScript.jsproj:    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
samples/winrt/JavaScript/sample-utils/scenario-select.html:             <h3 id="listLabel">Select scenario:</h3>
samples/winrt/JavaScript/sample-utils/scenario-select.html:            <select id="scenarioSelect" aria-labelledby="listLabel">
samples/winrt/JavaScript/sample-utils/sample-utils.css:#featureLabel
samples/winrt/JavaScript/sample-utils/sample-utils.css:#inputLabel, #outputLabel
samples/winrt/JavaScript/sample-utils/sample-utils.css:#listLabel, #descLabel
samples/winrt/JavaScript/sample-utils/sample-utils.css:#featureLabel
samples/winrt/JavaScript/sample-utils/sample-utils.css:#inputLabel
samples/winrt/JavaScript/sample-utils/sample-utils.css:#outputLabel
samples/winrt/JavaScript/sample-utils/sample-utils.js:    // The ScenarioInput control inserts the appropriate markup to get labels & controls
samples/winrt/JavaScript/sample-utils/sample-utils.js:                    .setAttribute("aria-labelledby", "inputLabel");
samples/winrt/JavaScript/sample-utils/sample-utils.js:        this.addInputLabel(element);
samples/winrt/JavaScript/sample-utils/sample-utils.js:        addInputLabel: function (element) {
samples/winrt/JavaScript/sample-utils/sample-utils.js:            var label = document.createElement("h2");
samples/winrt/JavaScript/sample-utils/sample-utils.js:            label.textContent = "Input";
samples/winrt/JavaScript/sample-utils/sample-utils.js:            label.id = "inputLabel";
samples/winrt/JavaScript/sample-utils/sample-utils.js:            element.parentNode.insertBefore(label, element);
samples/winrt/JavaScript/sample-utils/sample-utils.js:                        .setAttribute("aria-labelledby", "descLabel")
samples/winrt/JavaScript/sample-utils/sample-utils.js:            var label = document.createElement("h3");
samples/winrt/JavaScript/sample-utils/sample-utils.js:            label.textContent = "Description";
samples/winrt/JavaScript/sample-utils/sample-utils.js:            label.id = "descLabel";
samples/winrt/JavaScript/sample-utils/sample-utils.js:            detailsDiv.appendChild(label);
samples/winrt/JavaScript/sample-utils/sample-utils.js:    // The ScenarioOutput control inserts the appropriate markup to get labels & controls
samples/winrt/JavaScript/sample-utils/sample-utils.js:                    .setAttribute("aria-labelledby", "outputLabel")
samples/winrt/JavaScript/sample-utils/sample-utils.js:        this._addOutputLabel(element);
samples/winrt/JavaScript/sample-utils/sample-utils.js:        _addOutputLabel: function (element) {
samples/winrt/JavaScript/sample-utils/sample-utils.js:            var label = document.createElement("h2");
samples/winrt/JavaScript/sample-utils/sample-utils.js:            label.id = "outputLabel";
samples/winrt/JavaScript/sample-utils/sample-utils.js:            label.textContent = "Output";
samples/winrt/JavaScript/sample-utils/sample-utils.js:            element.parentNode.insertBefore(label, element);
samples/winrt/JavaScript/sample-utils/sample-utils.js:        WinJS.Utilities.query("#featureLabel")[0].textContent = SdkSample.sampleTitle;
samples/winrt/JavaScript/css/default.css:#featureLabel
Binary file samples/winrt/JavaScript/images/storeLogo-sdk.png matches
Binary file samples/winrt/JavaScript/images/splash-sdk.png matches
Binary file samples/winrt/JavaScript/images/smallTile-sdk.png matches
Binary file samples/winrt/JavaScript/images/squareTile-sdk.png matches
Binary file samples/winrt/JavaScript/images/tile-sdk.png matches
samples/winrt/FaceDetection/FaceDetection/App.xaml.cpp:/// <param name="e">Details about the launch request and process.</param>
samples/winrt/FaceDetection/FaceDetection/App.xaml.cpp:             DebugSettings->EnableFrameRateCounter = true;
samples/winrt/FaceDetection/FaceDetection/App.xaml.cpp:/// <param name="e">Details about the suspend request.</param>
samples/winrt/FaceDetection/FaceDetection/App.xaml.cpp:/// <param name="e">Details about the navigation failure</param>
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <PropertyGroup Label="Globals">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:    <ProjectGuid>{0fae44e0-6c15-4cca-abda-29556b391390}</ProjectGuid>
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <ImportGroup Label="ExtensionSettings">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <PropertyGroup Label="UserMacros" />
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj:  <ImportGroup Label="ExtensionTargets">
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj.filters:      <UniqueIdentifier>0fae44e0-6c15-4cca-abda-29556b391390</UniqueIdentifier>
samples/winrt/FaceDetection/FaceDetection/FaceDetection.vcxproj.filters:      <UniqueIdentifier>cee6a8fd-c14c-4eab-b410-54073b7fc217</UniqueIdentifier>
samples/winrt/FaceDetection/FaceDetection/Package.appxmanifest:        Executable="$targetnametoken$.exe"
samples/winrt/FaceDetection/FaceDetection/Package.appxmanifest:  <Capabilities>
samples/winrt/FaceDetection/FaceDetection/Package.appxmanifest:    <Capability Name="internetClient" />
samples/winrt/FaceDetection/FaceDetection/Package.appxmanifest:  </Capabilities>
samples/winrt/FaceDetection/FaceDetection/opencv.props:  <ImportGroup Label="PropertySheets" />
samples/winrt/FaceDetection/FaceDetection/opencv.props:  <PropertyGroup Label="UserMacros">
samples/winrt/FaceDetection/FaceDetection/Assets/haarcascade_frontalface_alt.xml:    Stump-based 20x20 gentle adaboost frontal face detector.
samples/winrt/FaceDetection/FaceDetection/Assets/haarcascade_frontalface_alt.xml:   * Redistribution's of source code must retain the above copyright notice,
samples/winrt/FaceDetection/FaceDetection/Assets/haarcascade_frontalface_alt.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
samples/winrt/FaceDetection/FaceDetection/Assets/haarcascade_frontalface_alt.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
samples/winrt/FaceDetection/FaceDetection/Assets/haarcascade_frontalface_alt.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
samples/winrt/FaceDetection/FaceDetection/Assets/haarcascade_frontalface_alt.xml: and on any theory of liability, whether in contract, strict liability,
Binary file samples/winrt/FaceDetection/FaceDetection/Assets/group2.jpg matches
Binary file samples/winrt/FaceDetection/FaceDetection/Assets/group1.jpg matches
Binary file samples/winrt/FaceDetection/FaceDetection/Assets/group3.jpg matches
samples/winrt/FaceDetection/FaceDetection/MainPage.xaml:      mc:Ignorable="d">
samples/opengl/opengl_interop.cpp:// Sample demonstrating interoperability of OpenCV UMat with OpenGL texture.
samples/opengl/opengl_interop.cpp:        glEnable(GL_TEXTURE_2D);
samples/opengl/opengl_interop.cpp:        glEnable(GL_DEPTH_TEST);
samples/opengl/opengl_interop.cpp:            glEnable(GL_TEXTURE_2D);
samples/opengl/opengl_interop.cpp:        "\nSample demonstrating interoperability of OpenGL and OpenCL with OpenCV.\n"
samples/opengl/CMakeLists.txt:  #      Define executable targets
samples/opengl/CMakeLists.txt:    add_executable(${the_target} ${srcs})
samples/va_intel/va_intel_interop.cpp: * The above copyright notice and this permission notice (including the
samples/va_intel/va_intel_interop.cpp:static void checkIfAvailableYUV420()
samples/va_intel/va_intel_interop.cpp:            throw std::runtime_error("Failed to open VA display for CL-VA interoperability");
samples/va_intel/va_intel_interop.cpp:        checkIfAvailableYUV420();
samples/va_intel/CMakeLists.txt:  #      Define executable targets
samples/va_intel/CMakeLists.txt:    add_executable(${the_target} ${srcs})
Binary file samples/data/aloeL.jpg matches
Binary file samples/data/right12.jpg matches
Binary file samples/data/left06.jpg matches
Binary file samples/data/aloeR.jpg matches
Binary file samples/data/box_in_scene.png matches
Binary file samples/data/left12.jpg matches
Binary file samples/data/digits.png matches
Binary file samples/data/starry_night.jpg matches
Binary file samples/data/pic2.png matches
Binary file samples/data/rubberwhale1.png matches
Binary file samples/data/aero1.jpg matches
Binary file samples/data/left.jpg matches
Binary file samples/data/tree.avi matches
samples/data/data01.xml:<labelsmat type_id="opencv-matrix">
samples/data/data01.xml:</labelsmat>
Binary file samples/data/baboon.jpg matches
Binary file samples/data/licenseplate_motion.jpg matches
Binary file samples/data/stuff.jpg matches
Binary file samples/data/chicky_512.png matches
Binary file samples/data/board.jpg matches
Binary file samples/data/detect_blob.png matches
Binary file samples/data/pic3.png matches
Binary file samples/data/basketball1.png matches
Binary file samples/data/pca_test1.jpg matches
Binary file samples/data/left11.jpg matches
Binary file samples/data/left08.jpg matches
Binary file samples/data/imageTextN.png matches
Binary file samples/data/768x576.avi matches
Binary file samples/data/left01.jpg matches
Binary file samples/data/text_defocus.jpg matches
Binary file samples/data/right08.jpg matches
Binary file samples/data/pic4.png matches
Binary file samples/data/cards.png matches
Binary file samples/data/graf3.png matches
Binary file samples/data/aero3.jpg matches
Binary file samples/data/right04.jpg matches
Binary file samples/data/right.jpg matches
Binary file samples/data/aloeGT.png matches
Binary file samples/data/pic1.png matches
Binary file samples/data/right09.jpg matches
Binary file samples/data/basketball2.png matches
Binary file samples/data/graf1.png matches
Binary file samples/data/left05.jpg matches
Binary file samples/data/rubberwhale2.png matches
samples/tapi/tvl1_optical_flow.cpp:            float d = max(fabsf(ptr_u[j]), fabsf(ptr_v[j]));
samples/tapi/tvl1_optical_flow.cpp:        "{ c camera   | 0               | enable camera capturing }"
samples/tapi/tvl1_optical_flow.cpp:        cout << "Available options:" << endl;
samples/tapi/tvl1_optical_flow.cpp:            std::cout << "OpenCL was disabled" << std::endl;
samples/tapi/squares.cpp:                // Note: absolute value of an area is used because
samples/tapi/squares.cpp:                        fabs(contourArea(Mat(approx))) > 1000 &&
samples/tapi/squares.cpp:                        double cosine = fabs(angle(approx[j%4], approx[j-2], approx[j-1]));
samples/tapi/squares.cpp:        cout << "Available options:" << endl;
samples/tapi/squares.cpp:        std::cout << "OpenCL was disabled" << std::endl;
samples/tapi/CMakeLists.txt:  #      Define executable targets
samples/tapi/CMakeLists.txt:    add_executable(${the_target} ${srcs})
samples/tapi/bgfg_segm.cpp:        cout << "Available options:" << endl;
samples/tapi/bgfg_segm.cpp:            cout << "Switched to " << (ocl::useOpenCL() ? "OpenCL enabled" : "CPU") << " mode\n";
samples/tapi/hog.cpp:        "{ c camera    | -1             | enable camera capturing }"
samples/tapi/hog.cpp:        cout << "Available options:" << endl;
samples/tapi/hog.cpp:            if (abs(scale-1.0)>0.001)
samples/tapi/hog.cpp:        cout << "Switched to " << (ocl::useOpenCL() ? "OpenCL enabled" : "CPU") << " mode\n";
samples/tapi/clahe.cpp:        cout << "Available options:" << endl;
samples/tapi/clahe.cpp:            cout << "Switched to " << (ocl::useOpenCL() ? "OpenCL enabled" : "CPU") << " mode\n";
samples/tapi/camshift.cpp:        selection.width = std::abs(x - origin.x);
samples/tapi/camshift.cpp:        selection.height = std::abs(y - origin.y);
samples/tapi/pyrlk_optical_flow.cpp:        "{ c camera         | 0               | enable camera capturing }"
samples/tapi/pyrlk_optical_flow.cpp:        cout << "Available options:" << endl;
samples/tapi/pyrlk_optical_flow.cpp:            std::cout << "OpenCL was disabled" << std::endl;
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <PropertyGroup Label="Globals">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <ImportGroup Label="PropertySheets">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <PropertyGroup Label="UserMacros" />
samples/wp8/OpenCVXaml/OpenCVComponent/OpenCVComponent.vcxproj:  <ImportGroup Label="ExtensionTargets">
samples/wp8/OpenCVXaml/OpenCVComponent/opencv.props:  <ImportGroup Label="PropertySheets" />
samples/wp8/OpenCVXaml/OpenCVComponent/opencv.props:  <PropertyGroup Label="UserMacros">
samples/wp8/OpenCVXaml/OpenCVXaml/Properties/WMAppManifest.xml:  <App xmlns="" ProductID="{af139c56-d9c7-4afe-8972-e5b30aaba1bc}" Title="OpenCVXaml" RuntimeType="Silverlight" Version="1.0.0.0" Genre="apps.normal"  Author="OpenCVXaml author" Description="Sample description" Publisher="OpenCVXaml" PublisherID="{8dd284a7-c759-40d0-9076-a1ced47c6a9a}">
samples/wp8/OpenCVXaml/OpenCVXaml/Properties/WMAppManifest.xml:    <Capabilities>
samples/wp8/OpenCVXaml/OpenCVXaml/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_NETWORKING"/>
samples/wp8/OpenCVXaml/OpenCVXaml/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_MEDIALIB_AUDIO"/>
samples/wp8/OpenCVXaml/OpenCVXaml/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_MEDIALIB_PLAYBACK"/>
samples/wp8/OpenCVXaml/OpenCVXaml/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_SENSORS"/>
samples/wp8/OpenCVXaml/OpenCVXaml/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_WEBBROWSERCOMPONENT"/>
samples/wp8/OpenCVXaml/OpenCVXaml/Properties/WMAppManifest.xml:    </Capabilities>
samples/wp8/OpenCVXaml/OpenCVXaml/Properties/AssemblyInfo.cs:// General Information about an assembly is controlled through the following
samples/wp8/OpenCVXaml/OpenCVXaml/App.xaml.cs:                Application.Current.Host.Settings.EnableFrameRateCounter = true;
samples/wp8/OpenCVXaml/OpenCVXaml/App.xaml.cs:                //Application.Current.Host.Settings.EnableRedrawRegions = true;
samples/wp8/OpenCVXaml/OpenCVXaml/App.xaml.cs:                // Enable non-production analysis visualization mode,
samples/wp8/OpenCVXaml/OpenCVXaml/App.xaml.cs:                //Application.Current.Host.Settings.EnableCacheVisualization = true;
samples/wp8/OpenCVXaml/OpenCVXaml/App.xaml.cs:                // Prevent the screen from turning off while under the debugger by disabling
samples/wp8/OpenCVXaml/OpenCVXaml/App.xaml.cs:                // Caution:- Use this under debug mode only. Application that disables user idle detection will continue to run
samples/wp8/OpenCVXaml/OpenCVXaml/App.xaml.cs:                PhoneApplicationService.Current.UserIdleDetectionMode = IdleDetectionMode.Disabled;
samples/wp8/OpenCVXaml/OpenCVXaml/Resources/AppResources.Designer.cs:        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
samples/wp8/OpenCVXaml/OpenCVXaml/Resources/AppResources.Designer.cs:        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
samples/wp8/OpenCVXaml/OpenCVXaml/Resources/AppResources.resx:    that is mostly human readable. The generation and parsing of the
samples/wp8/OpenCVXaml/OpenCVXaml/MainPage.xaml.cs:                ProcessButton.IsEnabled = false;
samples/wp8/OpenCVXaml/OpenCVXaml/MainPage.xaml.cs:                // Get WriteableBitmap. ImageToModify is defined in MainPage.xaml
samples/wp8/OpenCVXaml/OpenCVXaml/MainPage.xaml.cs:                WriteableBitmap bitmap = new WriteableBitmap(Preview.Source as BitmapSource);
samples/wp8/OpenCVXaml/OpenCVXaml/MainPage.xaml.cs:                // copy the pixels into the WriteableBitmap
samples/wp8/OpenCVXaml/OpenCVXaml/MainPage.xaml.cs:                ProcessButton.IsEnabled = true;
Binary file samples/wp8/OpenCVXaml/OpenCVXaml/Assets/Lena.png matches
samples/wp8/OpenCVXaml/OpenCVXaml/MainPage.xaml:    mc:Ignorable="d"
samples/wp8/OpenCVXaml/OpenCVXaml/MainPage.xaml:            Adding supported languages in the Project Properties tab will create a
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DBase.h:ref class Direct3DBase abstract
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DBase.cpp:    // If the project is in a debug build, enable debugging via SDK Layers with this flag.
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DInterop.cpp:        reinterpret_cast<IInspectable*>( pixelBuffer)->QueryInterface(IID_PPV_ARGS(&bufferByteAccess));
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Label="Globals">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:    <!-- After OutDir has been fixed, disable Microsoft.common.targets from fixing it again -->
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ImportGroup Label="PropertySheets">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Label="UserMacros" />
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ImportGroup Label="ExtensionTargets">
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/CubeRenderer.cpp:    rtbd.BlendEnable = TRUE;
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/CubeRenderer.cpp:    blendDesc.AlphaToCoverageEnable = false;
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/CubeRenderer.cpp:    cmdesc.DepthClipEnable = TRUE;
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/opencv.props:  <ImportGroup Label="PropertySheets" />
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/opencv.props:  <PropertyGroup Label="UserMacros">
Binary file samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/SplashScreenImage.jpg matches
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:    <Capabilities>
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_SENSORS" />
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_WEBBROWSERCOMPONENT" />
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_MEDIALIB_PLAYBACK" />
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_MEDIALIB_PHOTO" />
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_MEDIALIB_AUDIO" />
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_NETWORKING" />
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:    </Capabilities>
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/AssemblyInfo.cs:// General Information about an assembly is controlled through the following
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                Application.Current.Host.Settings.EnableFrameRateCounter = true;
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                //Application.Current.Host.Settings.EnableRedrawRegions = true;
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                // Enable non-production analysis visualization mode,
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                //Application.Current.Host.Settings.EnableCacheVisualization = true;
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                // Prevent the screen from turning off while under the debugger by disabling
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                // Caution:- Use this under debug mode only. Application that disables user idle detection will continue to run
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                PhoneApplicationService.Current.UserIdleDetectionMode = IdleDetectionMode.Disabled;
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Resources/AppResources.Designer.cs:        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Resources/AppResources.Designer.cs:        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Resources/AppResources.resx:    that is mostly human readable. The generation and parsing of the
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/MainPage.xaml.cs:        WriteableBitmap m_bmp;
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/MainPage.xaml.cs:                    m_bmp = new WriteableBitmap(bitmap);
Binary file samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Assets/Lena.png matches
samples/wp8/OcvRotatingCube/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/MainPage.xaml:                            mc:Ignorable="d">
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DBase.h:ref class Direct3DBase abstract
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DBase.cpp:    // If the project is in a debug build, enable debugging via SDK Layers with this flag.
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DInterop.cpp:    // Called each time a preview frame is available
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DInterop.cpp:    void CameraCapturePreviewSink::OnFrameAvailable(
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DInterop.cpp:    // Called each time a captured frame is available
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DInterop.cpp:    void CameraCaptureSampleSink::OnSampleAvailable(
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/QuadRenderer.cpp:    rtbd.BlendEnable = TRUE;
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/QuadRenderer.cpp:    blendDesc.AlphaToCoverageEnable = false;
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/QuadRenderer.cpp:    cmdesc.DepthClipEnable = TRUE;
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DInterop.h:    IFACEMETHODIMP_(void) OnFrameAvailable(
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/Direct3DInterop.h:    IFACEMETHODIMP_(void) OnSampleAvailable(
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ItemGroup Label="ProjectConfigurations">
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Label="Globals">
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:    <!-- After OutDir has been fixed, disable Microsoft.common.targets from fixing it again -->
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ImportGroup Label="PropertySheets">
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <PropertyGroup Label="UserMacros" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/PhoneXamlDirect3DApp1Comp.vcxproj:  <ImportGroup Label="ExtensionTargets">
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/opencv.props:  <ImportGroup Label="PropertySheets" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1Comp/opencv.props:  <PropertyGroup Label="UserMacros">
Binary file samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/SplashScreenImage.jpg matches
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:    <Capabilities>
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_SENSORS" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_WEBBROWSERCOMPONENT" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_MEDIALIB_PLAYBACK" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_MEDIALIB_PHOTO" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_MEDIALIB_AUDIO" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_NETWORKING" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:      <Capability Name="ID_CAP_ISV_CAMERA" />
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/WMAppManifest.xml:    </Capabilities>
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Properties/AssemblyInfo.cs:// General Information about an assembly is controlled through the following
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                Application.Current.Host.Settings.EnableFrameRateCounter = true;
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                //Application.Current.Host.Settings.EnableRedrawRegions = true;
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                // Enable non-production analysis visualization mode,
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                //Application.Current.Host.Settings.EnableCacheVisualization = true;
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                // Prevent the screen from turning off while under the debugger by disabling
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                // Caution:- Use this under debug mode only. Application that disables user idle detection will continue to run
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/App.xaml.cs:                PhoneApplicationService.Current.UserIdleDetectionMode = IdleDetectionMode.Disabled;
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Resources/AppResources.Designer.cs:        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Resources/AppResources.Designer.cs:        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/Resources/AppResources.resx:    that is mostly human readable. The generation and parsing of the
samples/wp8/OcvImageManipulation/PhoneXamlDirect3DApp1/PhoneXamlDirect3DApp1/MainPage.xaml:                            mc:Ignorable="d">
include/opencv2/opencv.hpp://   * Redistribution's of source code must retain the above copyright notice,
include/opencv2/opencv.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv2/opencv.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv2/opencv.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv2/opencv.hpp:// and on any theory of liability, whether in contract, strict liability,
include/opencv/cxeigen.hpp://   * Redistribution's of source code must retain the above copyright notice,
include/opencv/cxeigen.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/cxeigen.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv/cxeigen.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv/cxeigen.hpp:// and on any theory of liability, whether in contract, strict liability,
include/opencv/cvaux.hpp://   * Redistribution's of source code must retain the above copyright notice,
include/opencv/cvaux.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/cvaux.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv/cvaux.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv/cvaux.hpp:// and on any theory of liability, whether in contract, strict liability,
include/opencv/cxcore.hpp://   * Redistribution's of source code must retain the above copyright notice,
include/opencv/cxcore.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/cxcore.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv/cxcore.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv/cxcore.hpp:// and on any theory of liability, whether in contract, strict liability,
include/opencv/highgui.h://   * Redistribution's of source code must retain the above copyright notice,
include/opencv/highgui.h://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/highgui.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv/highgui.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv/highgui.h:// and on any theory of liability, whether in contract, strict liability,
include/opencv/cvwimage.h://  * Redistribution's of source code must retain the above copyright notice,
include/opencv/cvwimage.h://  * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/cvwimage.h:// implied warranties of merchantability and fitness for a particular purpose
include/opencv/cvwimage.h:// liable for any direct, indirect, incidental, special, exemplary, or
include/opencv/cvwimage.h:// and on any theory of liability, whether in contract, strict liability,
include/opencv/cv.h://   * Redistribution's of source code must retain the above copyright notice,
include/opencv/cv.h://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/cv.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv/cv.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv/cv.h:// and on any theory of liability, whether in contract, strict liability,
include/opencv/cv.hpp://   * Redistribution's of source code must retain the above copyright notice,
include/opencv/cv.hpp://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/cv.hpp:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv/cv.hpp:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv/cv.hpp:// and on any theory of liability, whether in contract, strict liability,
include/opencv/cvaux.h://   * Redistribution's of source code must retain the above copyright notice,
include/opencv/cvaux.h://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/cvaux.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv/cvaux.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv/cvaux.h:// and on any theory of liability, whether in contract, strict liability,
include/opencv/ml.h://   * Redistribution's of source code must retain the above copyright notice,
include/opencv/ml.h://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/ml.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv/ml.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv/ml.h:// and on any theory of liability, whether in contract, strict liability,
include/opencv/cxcore.h://   * Redistribution's of source code must retain the above copyright notice,
include/opencv/cxcore.h://   * Redistribution's in binary form must reproduce the above copyright notice,
include/opencv/cxcore.h:// warranties of merchantability and fitness for a particular purpose are disclaimed.
include/opencv/cxcore.h:// In no event shall the Intel Corporation or contributors be liable for any direct,
include/opencv/cxcore.h:// and on any theory of liability, whether in contract, strict liability,
platforms/scripts/cmake_carma.sh:-DCUDA_TOOLKIT_ROOT_DIR=/usr/arm-linux-gnueabi/cuda/ -DCUDA_ARCH_BIN="2.1(2.0)" -DCUDA_ARCH_PTX="" \
platforms/scripts/cmake_carma.sh:-DCMAKE_TOOLCHAIN_FILE=../arm-gnueabi.toolchain.cmake $@ ../../..
platforms/scripts/cmake_arm_gnueabi_softfp.sh:cmake -DSOFTFP=ON -DCMAKE_TOOLCHAIN_FILE=../linux/arm-gnueabi.toolchain.cmake $@ ../..
platforms/scripts/cmake_android_service.sh:cmake -DCMAKE_TOOLCHAIN_FILE=../android/android.toolchain.cmake -DANDROID_TOOLCHAIN_NAME="arm-linux-androideabi-4.4.3" -DANDROID_STL=stlport_static -DANDROID_STL_FORCE_FEATURES=OFF -DBUILD_ANDROID_SERVICE=ON -DANDROID_SOURCE_TREE=~/Projects/AndroidSource/ServiceStub/ $@ ../..
platforms/scripts/cmake_android_all_cameras.py:    print("Warning: ANDROID_STUB_ROOT environment variable is not set or is empty")
platforms/scripts/ABI_compat_generator.py:architecture = 'armeabi'
platforms/scripts/ABI_compat_generator.py:    'sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a/include']
platforms/scripts/ABI_compat_generator.py:gcc_options = ['-fexceptions', '-frtti', '-Wno-psabi', '--sysroot=/opt/android-ndk-r8c/platforms/android-8/arch-arm', '-fpic', '-D__ARM_ARCH_5__', '-D__ARM_ARCH_5T__', '-D__ARM_ARCH_5E__', '-D__ARM_ARCH_5TE__', '-fsigned-char', '-march=armv5te', '-mtune=xscale', '-msoft-float', '-fdata-sections', '-ffunction-sections', '-Wa,--noexecstack   ', '-W', '-Wall', '-Werror=return-type', '-Werror=address', '-Werror=sequence-point', '-Wformat', '-Werror=format-security', '-Wmissing-declarations', '-Wundef', '-Winit-self', '-Wpointer-arith', '-Wshadow', '-Wsign-promo', '-Wno-narrowing', '-fdiagnostics-show-option', '-fomit-frame-pointer', '-mthumb', '-fomit-frame-pointer', '-O3', '-DNDEBUG ', '-DNDEBUG']
platforms/scripts/camera_build.conf:native_camera_r2.2.0; armeabi;     8;  $ANDROID_STUB_ROOT/2.2.2
platforms/scripts/camera_build.conf:native_camera_r2.2.0; armeabi-v7a; 8;  $ANDROID_STUB_ROOT/2.2.2
platforms/scripts/camera_build.conf:native_camera_r2.3.3; armeabi;     9;  $ANDROID_STUB_ROOT/2.3.3
platforms/scripts/camera_build.conf:native_camera_r2.3.3; armeabi-v7a; 9;  $ANDROID_STUB_ROOT/2.3.3
platforms/scripts/camera_build.conf:native_camera_r3.0.1; armeabi;     9;  $ANDROID_STUB_ROOT/3.0.1
platforms/scripts/camera_build.conf:native_camera_r3.0.1; armeabi-v7a; 9;  $ANDROID_STUB_ROOT/3.0.1
platforms/scripts/camera_build.conf:native_camera_r4.0.3; armeabi;     14; $ANDROID_STUB_ROOT/4.0.3
platforms/scripts/camera_build.conf:native_camera_r4.0.3; armeabi-v7a; 14; $ANDROID_STUB_ROOT/4.0.3
platforms/scripts/camera_build.conf:native_camera_r4.0.0; armeabi;     14; $ANDROID_STUB_ROOT/4.0.0
platforms/scripts/camera_build.conf:native_camera_r4.0.0; armeabi-v7a; 14; $ANDROID_STUB_ROOT/4.0.0
platforms/scripts/camera_build.conf:native_camera_r4.1.1; armeabi;     14; $ANDROID_STUB_ROOT/4.1.1
platforms/scripts/camera_build.conf:native_camera_r4.1.1; armeabi-v7a; 14; $ANDROID_STUB_ROOT/4.1.1
platforms/scripts/camera_build.conf:native_camera_r4.2.0; armeabi-v7a; 14; $ANDROID_STUB_ROOT/4.2.0
platforms/scripts/camera_build.conf:native_camera_r4.2.0; armeabi;     14; $ANDROID_STUB_ROOT/4.2.0
platforms/scripts/camera_build.conf:native_camera_r4.3.0; armeabi;     14; $ANDROID_STUB_ROOT/4.3.0
platforms/scripts/camera_build.conf:native_camera_r4.3.0; armeabi-v7a; 14; $ANDROID_STUB_ROOT/4.3.0
platforms/scripts/camera_build.conf:native_camera_r4.4.0; armeabi;     14; $ANDROID_STUB_ROOT/4.4.0
platforms/scripts/camera_build.conf:native_camera_r4.4.0; armeabi-v7a; 14; $ANDROID_STUB_ROOT/4.4.0
platforms/scripts/cmake_arm_gnueabi_hardfp.sh:cmake -DCMAKE_TOOLCHAIN_FILE=../linux/arm-gnueabi.toolchain.cmake $@ ../..
platforms/linux/arm-gnueabi.toolchain.cmake:find_program(CMAKE_C_COMPILER NAMES arm-linux-gnueabi${FLOAT_ABI_SUFFIX}-gcc-${GCC_COMPILER_VERSION})
platforms/linux/arm-gnueabi.toolchain.cmake:find_program(CMAKE_CXX_COMPILER NAMES arm-linux-gnueabi${FLOAT_ABI_SUFFIX}-g++-${GCC_COMPILER_VERSION})
platforms/linux/arm-gnueabi.toolchain.cmake:set(ARM_LINUX_SYSROOT /usr/arm-linux-gnueabi${FLOAT_ABI_SUFFIX} CACHE PATH "ARM cross compilation system root")
platforms/linux/arm-gnueabi.toolchain.cmake:set(CMAKE_EXE_LINKER_FLAGS    "-Wl,-z,nocopyreloc"  CACHE STRING "executable linker flags")
platforms/linux/arm-gnueabi.toolchain.cmake:set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mthumb -fdata-sections -Wa,--noexecstack -fsigned-char -Wno-psabi")
platforms/linux/arm-gnueabi.toolchain.cmake:set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} -mthumb -fdata-sections -Wa,--noexecstack -fsigned-char -Wno-psabi")
platforms/linux/arm-gnueabi.toolchain.cmake:  message(WARNING "You use obsolete variable USE_NEON to enable NEON instruction set. Use -DENABLE_NEON=ON instead." )
platforms/linux/arm-gnueabi.toolchain.cmake:  message(WARNING "You use obsolete variable USE_VFPV3 to enable VFPV3 instruction set. Use -DENABLE_VFPV3=ON instead." )
platforms/android/build-tests/test_cmake_build.py:    def __init__(self, libset, abi, toolchain, opencv_cmake_path, workdir, *args, **kwargs):
platforms/android/build-tests/test_cmake_build.py:        self.abi = abi
platforms/android/build-tests/test_cmake_build.py:        return "ABI: %s, TOOLCHAIN: %s, LIBSET: %s" % (self.abi, self.toolchain, self.libset)
platforms/android/build-tests/test_cmake_build.py:            "-DANDROID_ABI=%s" % self.abi,
platforms/android/build-tests/test_cmake_build.py:    abis = {
platforms/android/build-tests/test_cmake_build.py:        "armeabi":"arm-linux-androideabi-4.8",
platforms/android/build-tests/test_cmake_build.py:        "armeabi-v7a":"arm-linux-androideabi-4.8",
platforms/android/build-tests/test_cmake_build.py:        for abi, toolchain in abis.items():
platforms/android/build-tests/test_cmake_build.py:            suite.addTest(TestCmakeBuild(libset, abi, toolchain, opencv_cmake_path, workdir))
platforms/android/build-tests/test_cmake_build.py:        os.environ["ANDROID_SDK"] = os.path.abspath(args.sdk_path)
platforms/android/build-tests/test_cmake_build.py:        os.environ["ANDROID_NDK"] = os.path.abspath(args.ndk_path)
platforms/android/build-tests/test_cmake_build.py:    res = unittest.TextTestRunner(verbosity=3).run(suite(os.path.abspath(args.workdir), os.path.abspath(args.opencv_cmake_path)))
platforms/android/build-tests/test_ndk_build.py:APP_ABI := {abi}
platforms/android/build-tests/test_ndk_build.py:    def __init__(self, abi, libtype, opencv_mk_path, workdir, *args, **kwargs):
platforms/android/build-tests/test_ndk_build.py:        self.abi = abi # official NDK ABI name or 'all'
platforms/android/build-tests/test_ndk_build.py:        return "ABI: %s, LIBTYPE: %s" % (self.abi, self.libtype)
platforms/android/build-tests/test_ndk_build.py:        return TEMPLATE_APPLICATION_MK.format(abi = self.abi)
platforms/android/build-tests/test_ndk_build.py:    abis = ["armeabi", "armeabi-v7a", "x86", "mips"]
platforms/android/build-tests/test_ndk_build.py:            abis.extend(["arm64-v8a", "x86", "x86_64"])
platforms/android/build-tests/test_ndk_build.py:    abis.append("all")
platforms/android/build-tests/test_ndk_build.py:        for abi in abis:
platforms/android/build-tests/test_ndk_build.py:            suite.addTest(TestNDKBuild(abi, libtype, opencv_mk_path, workdir))
platforms/android/build-tests/test_ndk_build.py:        os.environ["ANDROID_NDK"] = os.path.abspath(args.ndk_path)
platforms/android/build-tests/test_ndk_build.py:    res = unittest.TextTestRunner(verbosity=3).run(suite(os.path.abspath(args.workdir), os.path.abspath(args.opencv_mk_path)))
platforms/android/build-tests/test_ant_build.py:from os.path import abspath
platforms/android/build-tests/test_ant_build.py:        os.environ["ANDROID_SDK"] = os.path.abspath(args.sdk_path)
platforms/android/build-tests/test_ant_build.py:    s = suite(abspath(args.workdir), abspath(args.opencv_lib_path), abspath(args.opencv_samples_path))
platforms/android/service/engine/AndroidManifest.xml:        android:icon="@drawable/icon"
platforms/android/service/engine/AndroidManifest.xml:        android:label="@string/app_name" android:allowBackup="true">
platforms/android/service/engine/AndroidManifest.xml:        android:label="@string/app_name"
platforms/android/service/engine/.project:			<name>org.eclipse.jdt.core.javabuilder</name>
platforms/android/service/engine/build.xml:         For other overridable properties, look at the beginning of the rules
platforms/android/service/engine/build.xml:            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
platforms/android/service/engine/build.xml:                           Compiled code location: ${out.classes.absolute.dir}
platforms/android/service/engine/build.xml:                           If this is not done in place, override ${out.dex.input.absolute.dir})
platforms/android/service/engine/res/layout/main.xml:            android:text="@string/about"
platforms/android/service/engine/res/values/strings.xml:    <string name="about">About</string>
platforms/android/service/engine/project.properties:# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
platforms/android/service/engine/src/org/opencv/engine/manager/ManagerActivity.java:                            "Google Play is not avaliable", Toast.LENGTH_SHORT);
platforms/android/service/engine/src/org/opencv/engine/manager/ManagerActivity.java:        TextView aboutText = (TextView) findViewById(R.id.textView4);
platforms/android/service/engine/src/org/opencv/engine/manager/ManagerActivity.java:        aboutText.setText("About (" + packageName + ")");
platforms/android/service/engine/src/org/opencv/engine/manager/ManagerActivity.java:            mVersionText.setText("not avaliable");
platforms/android/service/engine/src/org/opencv/engine/manager/ManagerActivity.java:            mVersionText.setText("available");
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:        List<String> abis = Arrays.asList(Build.CPU_ABI, Build.CPU_ABI2);
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:        Log.i(TAG, "ABIs: " + abis.toString());
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:        if (abis.contains("x86_64")) {
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:        } else if (abis.contains("x86")) {
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:        } else if (abis.contains("arm64-v8a")) {
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:        } else if (abis.contains("armeabi-v7a")
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:                || abis.contains("armeabi-v7a-hard")) {
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:        } else if (abis.contains("armeabi")) {
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:        } else if (abis.contains("mips64")) {
platforms/android/service/engine/src/org/opencv/engine/HardwareDetector.java:        } else if (abis.contains("mips")) {
platforms/android/service/readme.txt:If Google Play is not available (i.e. on emulator, developer board, etc), you can install it
platforms/android/service/readme.txt:- OpenCV_3.1.0-dev_Manager_3.10_armeabi.apk - armeabi (ARMv5, ARMv6)
platforms/android/service/readme.txt:- OpenCV_3.1.0-dev_Manager_3.10_armeabi-v7a.apk - armeabi-v7a (ARMv7-A + NEON)
platforms/android/build_sdk.py:    d = os.path.abspath(d)
platforms/android/build_sdk.py:    d = os.path.abspath(d)
platforms/android/build_sdk.py:    ABI("2", "armeabi-v7a", "arm-linux-androideabi-4.8", cmake_name="armeabi-v7a with NEON"),
platforms/android/build_sdk.py:    ABI("1", "armeabi",     "arm-linux-androideabi-4.8"),
platforms/android/build_sdk.py:    def build_library(self, abi, do_install):
platforms/android/build_sdk.py:            "-DWITH_IPP=%s" % ("ON" if abi.haveIPP() else "OFF"),
platforms/android/build_sdk.py:            "-DANDROID_ABI='%s'" % abi.cmake_name,
platforms/android/build_sdk.py:            "-DANDROID_TOOLCHAIN_NAME=%s" % abi.toolchain,
platforms/android/build_sdk.py:    def build_engine(self, abi, engdest):
platforms/android/build_sdk.py:            "-DANDROID_ABI='%s'" % abi.cmake_name,
platforms/android/build_sdk.py:            "-DANDROID_PLATFORM_ID=%s" % abi.platform_id,
platforms/android/build_sdk.py:        apklibdest = check_dir(os.path.join(apkdest, "libs", abi.name), create=True)
platforms/android/build_sdk.py:            for f in glob.glob(os.path.join(d, abi.name, "*.so")):
platforms/android/build_sdk.py:        for abi, engdest in engines:
platforms/android/build_sdk.py:            log.info("Copy engine: %s (%s)", abi, engdest)
platforms/android/build_sdk.py:            resname = "OpenCV_%s_Manager_%s_%s.apk" % (self.opencv_version, self.engine_version, abi)
platforms/android/build_sdk.py:    for i, abi in enumerate(ABIs):
platforms/android/build_sdk.py:        engdest = check_dir(os.path.join(builder.workdir, "build_service_%s" % abi.name), create=True, clean=True)
platforms/android/build_sdk.py:        log.info("===== Building library for %s", abi)
platforms/android/build_sdk.py:        builder.build_library(abi, do_install)
platforms/android/build_sdk.py:        log.info("===== Building engine for %s", abi)
platforms/android/build_sdk.py:        builder.build_engine(abi, engdest)
platforms/android/build_sdk.py:        engines.append((abi.name, engdest))
platforms/android/android.toolchain.cmake:# 1.  Redistributions of source code must retain the above copyright notice,
platforms/android/android.toolchain.cmake:# 2.  Redistributions in binary form must reproduce the above copyright notice,
platforms/android/android.toolchain.cmake:#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk
platforms/android/android.toolchain.cmake:#   $ SET ANDROID_NDK=C:\absolute\path\to\the\android-ndk
platforms/android/android.toolchain.cmake:#      Can be set as environment variable. Can be set only at first cmake run.
platforms/android/android.toolchain.cmake:#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary
platforms/android/android.toolchain.cmake:#      Interface (ABI). This option nearly matches to the APP_ABI variable
platforms/android/android.toolchain.cmake:#        "armeabi" - ARMv5TE based CPU with software floating point operations
platforms/android/android.toolchain.cmake:#        "armeabi-v7a" - ARMv7 based devices with hardware FPU instructions
platforms/android/android.toolchain.cmake:#        "armeabi-v7a-hard with NEON" - ARMv7 based devices with hardware FPU instructions and hardfp
platforms/android/android.toolchain.cmake:#        "armeabi-v7a with NEON" - same as armeabi-v7a, but
platforms/android/android.toolchain.cmake:#        "armeabi-v7a with VFPV3" - same as armeabi-v7a, but
platforms/android/android.toolchain.cmake:#        "armeabi-v6 with VFP" - tuned for ARMv6 processors having VFP
platforms/android/android.toolchain.cmake:#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler
platforms/android/android.toolchain.cmake:#        * arm-linux-androideabi-4.6
platforms/android/android.toolchain.cmake:#        * arm-linux-androideabi-4.8
platforms/android/android.toolchain.cmake:#        * arm-linux-androideabi-4.9 (default)
platforms/android/android.toolchain.cmake:#        * arm-linux-androideabi-clang3.4
platforms/android/android.toolchain.cmake:#        * arm-linux-androideabi-clang3.5
platforms/android/android.toolchain.cmake:#      instead of Thumb. Is not available for "armeabi-v6 with VFP"
platforms/android/android.toolchain.cmake:#                          Is not available for standalone toolchain.
platforms/android/android.toolchain.cmake:#                          Is not available for standalone toolchain.
platforms/android/android.toolchain.cmake:#        gabi++_static  -> Use the GAbi++ runtime as a static library.
platforms/android/android.toolchain.cmake:#                          Available for NDK r7 and newer.
platforms/android/android.toolchain.cmake:#                          Is not available for standalone toolchain.
platforms/android/android.toolchain.cmake:#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.
platforms/android/android.toolchain.cmake:#                          Available for NDK r7 and newer.
platforms/android/android.toolchain.cmake:#                          Is not available for standalone toolchain.
platforms/android/android.toolchain.cmake:#                          Is not available for standalone toolchain.
platforms/android/android.toolchain.cmake:#                          Is not available for standalone toolchain.
platforms/android/android.toolchain.cmake:#                          Available for NDK r7b and newer.
platforms/android/android.toolchain.cmake:#                          Silently degrades to gnustl_static if not available.
platforms/android/android.toolchain.cmake:#      chosen runtime. If disabled, then the user is responsible for settings
platforms/android/android.toolchain.cmake:#      ANDROID_NDK - environment variable
platforms/android/android.toolchain.cmake:#      ANDROID_STANDALONE_TOOLCHAIN - environment variable
platforms/android/android.toolchain.cmake:#    variables to make necessary Android-specific configuration changes.
platforms/android/android.toolchain.cmake: # touch toolchain variable to suppress "unused variable" warning
platforms/android/android.toolchain.cmake:set( ANDROID_SUPPORTED_ABIS_arm "armeabi-v7a;armeabi;armeabi-v7a with NEON;armeabi-v7a-hard with NEON;armeabi-v7a with VFPV3;armeabi-v6 with VFP" )
platforms/android/android.toolchain.cmake:    message( SEND_ERROR "Could not get Android native API level. Probably you have specified invalid level value, or your copy of NDK/toolchain is broken." )
platforms/android/android.toolchain.cmake:  message( FATAL_ERROR "Android NDK and android-cmake toolchain are not welcome Cygwin. It is unlikely that this cmake toolchain will work under cygwin. But if you want to try then you can set cmake variable ANDROID_FORBID_SYGWIN to FALSE and rerun cmake." )
platforms/android/android.toolchain.cmake:   message( STATUS "  If you prefer to use a different location, please define a cmake or environment variable: ANDROID_NDK" )
platforms/android/android.toolchain.cmake:    message( STATUS "  If you prefer to use a different location, please define the variable: ANDROID_STANDALONE_TOOLCHAIN" )
platforms/android/android.toolchain.cmake: string( FIND " abcdefghijklmnopqastuvwxyz" "${CMAKE_MATCH_2}" __ndkReleaseLetterNum )
platforms/android/android.toolchain.cmake:    You should either set an environment variable:
platforms/android/android.toolchain.cmake:# get all the details about standalone toolchain
platforms/android/android.toolchain.cmake: set( __availableToolchains "standalone" )
platforms/android/android.toolchain.cmake: __DETECT_TOOLCHAIN_MACHINE_NAME( __availableToolchainMachines "${ANDROID_STANDALONE_TOOLCHAIN}" )
platforms/android/android.toolchain.cmake: if( NOT __availableToolchainMachines )
platforms/android/android.toolchain.cmake:  message( FATAL_ERROR "Could not determine machine name of your toolchain. Probably your Android standalone toolchain is broken." )
platforms/android/android.toolchain.cmake: if( __availableToolchainMachines MATCHES x86_64 )
platforms/android/android.toolchain.cmake:  set( __availableToolchainArchs "x86_64" )
platforms/android/android.toolchain.cmake: elseif( __availableToolchainMachines MATCHES i686 )
platforms/android/android.toolchain.cmake:  set( __availableToolchainArchs "x86" )
platforms/android/android.toolchain.cmake: elseif( __availableToolchainMachines MATCHES aarch64 )
platforms/android/android.toolchain.cmake:  set( __availableToolchainArchs "arm64" )
platforms/android/android.toolchain.cmake: elseif( __availableToolchainMachines MATCHES arm )
platforms/android/android.toolchain.cmake:  set( __availableToolchainArchs "arm" )
platforms/android/android.toolchain.cmake: elseif( __availableToolchainMachines MATCHES mips64el )
platforms/android/android.toolchain.cmake:  set( __availableToolchainArchs "mips64" )
platforms/android/android.toolchain.cmake: elseif( __availableToolchainMachines MATCHES mipsel )
platforms/android/android.toolchain.cmake:  set( __availableToolchainArchs "mips" )
platforms/android/android.toolchain.cmake: execute_process( COMMAND "${ANDROID_STANDALONE_TOOLCHAIN}/bin/${__availableToolchainMachines}-gcc${TOOL_OS_SUFFIX}" -dumpversion
platforms/android/android.toolchain.cmake:                  OUTPUT_VARIABLE __availableToolchainCompilerVersions OUTPUT_STRIP_TRAILING_WHITESPACE )
platforms/android/android.toolchain.cmake: string( REGEX MATCH "[0-9]+[.][0-9]+([.][0-9]+)?" __availableToolchainCompilerVersions "${__availableToolchainCompilerVersions}" )
platforms/android/android.toolchain.cmake:  list( APPEND __availableToolchains "standalone-clang" )
platforms/android/android.toolchain.cmake:  list( APPEND __availableToolchainMachines ${__availableToolchainMachines} )
platforms/android/android.toolchain.cmake:  list( APPEND __availableToolchainArchs ${__availableToolchainArchs} )
platforms/android/android.toolchain.cmake:  list( APPEND __availableToolchainCompilerVersions ${__availableToolchainCompilerVersions} )
platforms/android/android.toolchain.cmake:macro( __GLOB_NDK_TOOLCHAINS __availableToolchainsVar __availableToolchainsLst __toolchain_subpath )
platforms/android/android.toolchain.cmake: foreach( __toolchain ${${__availableToolchainsLst}} )
platforms/android/android.toolchain.cmake:    list( APPEND __availableToolchainMachines "${__machine}" )
platforms/android/android.toolchain.cmake:    list( APPEND __availableToolchainArchs "${__arch}" )
platforms/android/android.toolchain.cmake:    list( APPEND __availableToolchainCompilerVersions "${__version}" )
platforms/android/android.toolchain.cmake:    list( APPEND ${__availableToolchainsVar} "${__toolchain}" )
platforms/android/android.toolchain.cmake:# get all the details about NDK
platforms/android/android.toolchain.cmake: set( __availableToolchains "" )
platforms/android/android.toolchain.cmake: set( __availableToolchainMachines "" )
platforms/android/android.toolchain.cmake: set( __availableToolchainArchs "" )
platforms/android/android.toolchain.cmake: set( __availableToolchainCompilerVersions "" )
platforms/android/android.toolchain.cmake:  set( __availableToolchainsLst "${ANDROID_TOOLCHAIN_NAME}" )
platforms/android/android.toolchain.cmake:  __GLOB_NDK_TOOLCHAINS( __availableToolchains __availableToolchainsLst "${ANDROID_NDK_TOOLCHAINS_SUBPATH}" )
platforms/android/android.toolchain.cmake:  if( NOT __availableToolchains AND NOT ANDROID_NDK_TOOLCHAINS_SUBPATH STREQUAL ANDROID_NDK_TOOLCHAINS_SUBPATH2 )
platforms/android/android.toolchain.cmake:   __GLOB_NDK_TOOLCHAINS( __availableToolchains __availableToolchainsLst "${ANDROID_NDK_TOOLCHAINS_SUBPATH2}" )
platforms/android/android.toolchain.cmake:   if( __availableToolchains )
platforms/android/android.toolchain.cmake: if( NOT __availableToolchains )
platforms/android/android.toolchain.cmake:  file( GLOB __availableToolchainsLst RELATIVE "${ANDROID_NDK_TOOLCHAINS_PATH}" "${ANDROID_NDK_TOOLCHAINS_PATH}/*" )
platforms/android/android.toolchain.cmake:  if( __availableToolchainsLst )
platforms/android/android.toolchain.cmake:   list(SORT __availableToolchainsLst) # we need clang to go after gcc
platforms/android/android.toolchain.cmake:  __LIST_FILTER( __availableToolchainsLst "^[.]" )
platforms/android/android.toolchain.cmake:  __LIST_FILTER( __availableToolchainsLst "llvm" )
platforms/android/android.toolchain.cmake:  __LIST_FILTER( __availableToolchainsLst "renderscript" )
platforms/android/android.toolchain.cmake:  __GLOB_NDK_TOOLCHAINS( __availableToolchains __availableToolchainsLst "${ANDROID_NDK_TOOLCHAINS_SUBPATH}" )
platforms/android/android.toolchain.cmake:  if( NOT __availableToolchains AND NOT ANDROID_NDK_TOOLCHAINS_SUBPATH STREQUAL ANDROID_NDK_TOOLCHAINS_SUBPATH2 )
platforms/android/android.toolchain.cmake:   __GLOB_NDK_TOOLCHAINS( __availableToolchains __availableToolchainsLst "${ANDROID_NDK_TOOLCHAINS_SUBPATH2}" )
platforms/android/android.toolchain.cmake:   if( __availableToolchains )
platforms/android/android.toolchain.cmake: if( NOT __availableToolchains )
platforms/android/android.toolchain.cmake:  message( FATAL_ERROR "Could not find any working toolchain in the NDK. Probably your Android NDK is broken." )
platforms/android/android.toolchain.cmake:# build list of available ABIs
platforms/android/android.toolchain.cmake:set( __uniqToolchainArchNames ${__availableToolchainArchs} )
platforms/android/android.toolchain.cmake:elseif( ANDROID_ABI STREQUAL "armeabi" )
platforms/android/android.toolchain.cmake: set( ANDROID_NDK_ABI_NAME "armeabi" )
platforms/android/android.toolchain.cmake: set( ANDROID_LLVM_TRIPLE "armv5te-none-linux-androideabi" )
platforms/android/android.toolchain.cmake:elseif( ANDROID_ABI STREQUAL "armeabi-v6 with VFP" )
platforms/android/android.toolchain.cmake: set( ANDROID_NDK_ABI_NAME "armeabi" )
platforms/android/android.toolchain.cmake: set( ANDROID_LLVM_TRIPLE "armv5te-none-linux-androideabi" )
platforms/android/android.toolchain.cmake:elseif( ANDROID_ABI STREQUAL "armeabi-v7a")
platforms/android/android.toolchain.cmake: set( ANDROID_NDK_ABI_NAME "armeabi-v7a" )
platforms/android/android.toolchain.cmake: set( ANDROID_LLVM_TRIPLE "armv7-none-linux-androideabi" )
platforms/android/android.toolchain.cmake:elseif( ANDROID_ABI STREQUAL "armeabi-v7a with VFPV3" )
platforms/android/android.toolchain.cmake: set( ANDROID_NDK_ABI_NAME "armeabi-v7a" )
platforms/android/android.toolchain.cmake: set( ANDROID_LLVM_TRIPLE "armv7-none-linux-androideabi" )
platforms/android/android.toolchain.cmake:elseif( ANDROID_ABI STREQUAL "armeabi-v7a with NEON" )
platforms/android/android.toolchain.cmake: set( ANDROID_NDK_ABI_NAME "armeabi-v7a" )
platforms/android/android.toolchain.cmake: set( ANDROID_LLVM_TRIPLE "armv7-none-linux-androideabi" )
platforms/android/android.toolchain.cmake:elseif( ANDROID_ABI STREQUAL "armeabi-v7a-hard with NEON" )
platforms/android/android.toolchain.cmake: set( ANDROID_NDK_ABI_NAME "armeabi-v7a-hard" )
platforms/android/android.toolchain.cmake: set( ANDROID_LLVM_TRIPLE "armv7-none-linux-androideabi" )
platforms/android/android.toolchain.cmake: list( FIND __availableToolchains "${ANDROID_TOOLCHAIN_NAME}" __toolchainIdx )
platforms/android/android.toolchain.cmake:  list( SORT __availableToolchains )
platforms/android/android.toolchain.cmake:  string( REPLACE ";" "\n  * " toolchains_list "${__availableToolchains}" )
platforms/android/android.toolchain.cmake:To configure the toolchain set CMake variable ANDROID_TOOLCHAIN_NAME to one of the following values:\n${toolchains_list}\n" )
platforms/android/android.toolchain.cmake: list( GET __availableToolchainArchs ${__toolchainIdx} __toolchainArch )
platforms/android/android.toolchain.cmake:  message( SEND_ERROR "Selected toolchain \"${ANDROID_TOOLCHAIN_NAME}\" is not able to compile binaries for the \"${ANDROID_ARCH_NAME}\" platform." )
platforms/android/android.toolchain.cmake: set( __applicableToolchains "" )
platforms/android/android.toolchain.cmake: list( LENGTH __availableToolchains __availableToolchainsCount )
platforms/android/android.toolchain.cmake: math( EXPR __availableToolchainsCount "${__availableToolchainsCount}-1" )
platforms/android/android.toolchain.cmake: foreach( __idx RANGE ${__availableToolchainsCount} )
platforms/android/android.toolchain.cmake:  list( GET __availableToolchainArchs ${__idx} __toolchainArch )
platforms/android/android.toolchain.cmake:   list( GET __availableToolchainCompilerVersions ${__idx} __toolchainVersion )
platforms/android/android.toolchain.cmake: unset( __availableToolchainsCount )
platforms/android/android.toolchain.cmake: message( FATAL_ERROR "No one of available compiler toolchains is able to compile for ${ANDROID_ARCH_NAME} platform." )
platforms/android/android.toolchain.cmake:list( GET __availableToolchains ${__toolchainIdx} ANDROID_TOOLCHAIN_NAME )
platforms/android/android.toolchain.cmake:list( GET __availableToolchainMachines ${__toolchainIdx} ANDROID_TOOLCHAIN_MACHINE_NAME )
platforms/android/android.toolchain.cmake:list( GET __availableToolchainCompilerVersions ${__toolchainIdx} ANDROID_COMPILER_VERSION )
platforms/android/android.toolchain.cmake:unset( __availableToolchains )
platforms/android/android.toolchain.cmake:unset( __availableToolchainMachines )
platforms/android/android.toolchain.cmake:unset( __availableToolchainArchs )
platforms/android/android.toolchain.cmake:unset( __availableToolchainCompilerVersions )
platforms/android/android.toolchain.cmake:   message( SEND_ERROR "Specified Android API level (${ANDROID_NATIVE_API_LEVEL}) does not match to the level found (${__realApiLevel}). Probably your copy of NDK is broken." )
platforms/android/android.toolchain.cmake:set( ANDROID_ABI "${ANDROID_ABI}" CACHE STRING "The target ABI for Android. If arm, then armeabi-v7a is recommended for hardware floating point." FORCE )
platforms/android/android.toolchain.cmake: if( NOT "${ANDROID_STL}" MATCHES "^(none|system|system_re|gabi\\+\\+_static|gabi\\+\\+_shared|stlport_static|stlport_shared|gnustl_static|gnustl_shared)$")
platforms/android/android.toolchain.cmake:  gabi++_static  -> Use the GAbi++ runtime as a static library.
platforms/android/android.toolchain.cmake:  gabi++_shared  -> Use the GAbi++ runtime as a shared library.
platforms/android/android.toolchain.cmake: message( WARNING  "The GNU STL armeabi-v7a binaries from NDK r7b can crash non-NEON devices. The files provided with NDK r7b were not configured properly, resulting in crashes on Tegra2-based devices and others when trying to use certain floating-point functions (e.g., cosf, sinf, expf).
platforms/android/android.toolchain.cmake:See https://android.googlesource.com/platform/development.git f907f4f9d4e56ccc8093df6fee54454b8bcab6c2
platforms/android/android.toolchain.cmake: elseif( ANDROID_STL MATCHES "gabi" )
platforms/android/android.toolchain.cmake:   message( FATAL_ERROR "gabi++ is not available in your NDK. You have to upgrade to NDK r7 or newer to use gabi++.")
platforms/android/android.toolchain.cmake:  set( ANDROID_STL_INCLUDE_DIRS "${ANDROID_NDK}/sources/cxx-stl/gabi++/include" )
platforms/android/android.toolchain.cmake:  set( __libstl                 "${ANDROID_NDK}/sources/cxx-stl/gabi++/libs/${ANDROID_NDK_ABI_NAME}/libgabi++_static.a" )
platforms/android/android.toolchain.cmake: set( ANDROID_CXX_FLAGS         "${ANDROID_CXX_FLAGS} -funwind-tables" )
platforms/android/android.toolchain.cmake: set( ANDROID_CXX_FLAGS "${ANDROID_CXX_FLAGS} -funwind-tables" )
platforms/android/android.toolchain.cmake: set( ANDROID_CXX_FLAGS "${ANDROID_CXX_FLAGS} -funwind-tables" )
platforms/android/android.toolchain.cmake: set( ANDROID_CXX_FLAGS         "${ANDROID_CXX_FLAGS} -fno-strict-aliasing -finline-functions -funwind-tables -fmessage-length=0" )
platforms/android/android.toolchain.cmake: set( ANDROID_CXX_FLAGS "-Wno-psabi ${ANDROID_CXX_FLAGS}" )
platforms/android/android.toolchain.cmake: set( ANDROID_CXX_FLAGS "${ANDROID_CXX_FLAGS} -march=armv7-a -mfloat-abi=hard -mhard-float -D_NDK_MATH_NO_SOFTFP=1" )
platforms/android/android.toolchain.cmake: set( ANDROID_CXX_FLAGS "${ANDROID_CXX_FLAGS} -march=armv7-a -mfloat-abi=softfp" )
platforms/android/android.toolchain.cmake: set( ANDROID_CXX_FLAGS "${ANDROID_CXX_FLAGS} -march=armv6 -mfloat-abi=softfp -mfpu=vfp" ) # vfp == vfpv2
platforms/android/android.toolchain.cmake:# variables controlling optional build flags
platforms/android/android.toolchain.cmake:set( ANDROID_FUNCTION_LEVEL_LINKING ${ANDROID_FUNCTION_LEVEL_LINKING} CACHE BOOL "Put each function in separate section and enable garbage collection of unused input sections at link time" )
platforms/android/android.toolchain.cmake:set( ANDROID_GOLD_LINKER            ${ANDROID_GOLD_LINKER}            CACHE BOOL "Enables gold linker" )
platforms/android/android.toolchain.cmake:set( ANDROID_RELRO                  ${ANDROID_RELRO}                  CACHE BOOL "Enables RELRO - a memory corruption mitigation technique" )
platforms/android/android.toolchain.cmake:  message( WARNING "The default bfd linker from arm GCC 4.6 toolchain can fail with 'unresolvable R_ARM_THM_CALL relocation' error message. See https://code.google.com/p/android/issues/detail?id=35342
platforms/android/android.toolchain.cmake:set( CMAKE_EXE_LINKER_FLAGS    "-Wl,-z,nocopyreloc"      CACHE STRING "executable linker flags" )
platforms/android/android.toolchain.cmake: enable_language( C )
platforms/android/android.toolchain.cmake: enable_language( CXX )
platforms/android/android.toolchain.cmake:# Variables controlling behavior or set by cmake toolchain:
platforms/android/android.toolchain.cmake:#   ANDROID_ABI : "armeabi-v7a" (default), "armeabi", "armeabi-v7a with NEON", "armeabi-v7a-hard with NEON", "armeabi-v7a with VFPV3", "armeabi-v6 with VFP", "x86", "mips", "arm64-v8a", "x86_64", "mips64"
platforms/android/android.toolchain.cmake:#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none
platforms/android/android.toolchain.cmake:#   NDK_CCACHE : path to your ccache executable
platforms/android/android.toolchain.cmake:# Primary read-only variables:
platforms/android/android.toolchain.cmake:#   NEON : TRUE if NEON unit is enabled
platforms/android/android.toolchain.cmake:#   VFPV3 : TRUE if VFP version 3 is enabled
platforms/android/android.toolchain.cmake:#   ANDROID_NDK_ABI_NAME : "armeabi", "armeabi-v7a", "armeabi-v7a-hard", "x86", "mips", "arm64-v8a", "x86_64", "mips64" depending on ANDROID_ABI
platforms/android/android.toolchain.cmake:# Secondary (less stable) read-only variables:
platforms/android/android.toolchain.cmake:#   ANDROID_TOOLCHAIN_MACHINE_NAME : "arm-linux-androideabi", "arm-eabi" or "i686-android-linux"
platforms/android/android.toolchain.cmake:#   ANDROID_RTTI : if rtti is enabled by the runtime
platforms/android/android.toolchain.cmake:#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime
platforms/osx/build_framework.py:sys.path.insert(0, os.path.abspath(os.path.abspath(os.path.dirname(__file__))+'/../ios'))
platforms/osx/build_framework.py:    folder = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]), "../.."))
platforms/readme.txt:http://docs.opencv.org/doc/tutorials/introduction/table_of_content_introduction/table_of_content_introduction.html#table-of-content-introduction
platforms/winrt/readme.txt:For example, to be able to build all Windows Phone and Windows Store projects install the following:
platforms/winrt/readme.txt:"-b" flag in the command above builds each generated solutions in both "Debug" and "Release" configurations. It also builds the predefined "INSTALL" project within generated solutions. Building it creates a separate install location that accumulates binaries and includes for specified platforms. Default location is "<ocv-src>\bin\install\".
platforms/winrt/readme.txt:WinRT samples reference 'install' binaries and include files via "OPENCV_WINRT_INSTALL_DIR" environment variable. Please declare it and point to "<ocv-src>\bin\install\" directory to resolve references within sample applications.
platforms/winrt/readme.txt:2. Set OPENCV_TEST_DATA_PATH environment variable to location of opencv_extra/testdata (cloning of https://github.com/Itseez/opencv_extra repo required) to get tests work correctly. Also, set OPENCV_PERF_VALIDATION_DIR environment variable in case you are planning to have place where to store performance test results and compare them with the future test runs.
platforms/winrt/readme.txt:4. Set OCV solution to Release mode and build it. They should build without errors and generate executables in "bin\WS\8.1\x64\bin\Release\" (or similar path depending on the configuration)
platforms/winrt/setup_winrt.ps1:1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
platforms/winrt/setup_winrt.ps1:2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
platforms/winrt/setup_winrt.ps1:# Enables access to Visual Studio variables via "vsvars32.bat"
platforms/winrt/setup_winrt.ps1:    # Setting up Visual Studio variables to enable build
platforms/winrt/setup_winrt.ps1:    Write-Host "                 Options: 8.0, 8.1. Available options may be limited depending on your local setup (e.g. SDK availability). "
platforms/winrt/setup_winrt.ps1:    Write-Host "                 Options: x86, ARM, x64. Available options may be limited depending on your local setup. "
platforms/winrt/setup_winrt.ps1:    Write-Host "                 Use 'cmake --help' to find all available option on your machine. "
platforms/ios/cmake/Modules/Platform/iOS.cmake:# More desirable, but does not work:
platforms/ios/cmake/Modules/Platform/iOS.cmake:    # Set the default based on this file and not the environment variable
platforms/ios/cmake/Modules/Platform/iOS.cmake:      # Enable shared library versioning.  This flag is not actually referenced
platforms/ios/build_framework.py:        self.opencv = os.path.abspath(opencv)
platforms/ios/build_framework.py:                self.contrib = os.path.abspath(modpath)
platforms/ios/build_framework.py:        return os.path.abspath(res)
platforms/ios/build_framework.py:        outdir = os.path.abspath(outdir)
platforms/ios/build_framework.py:    folder = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]), "../.."))
data/haarcascades_cuda/haarcascade_frontalface_alt.xml:    Stump-based 20x20 gentle adaboost frontal face detector.
data/haarcascades_cuda/haarcascade_frontalface_alt.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades_cuda/haarcascade_frontalface_alt.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades_cuda/haarcascade_frontalface_alt.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades_cuda/haarcascade_frontalface_alt.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades_cuda/haarcascade_frontalface_alt.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades_cuda/haarcascade_smile.xml:  More information can be found at http://visilab.etsii.uclm.es/personas/oscar/oscar.html
data/haarcascades_cuda/haarcascade_smile.xml:|    * Redistributions of source code must retain the above copyright
data/haarcascades_cuda/haarcascade_smile.xml:|    * Redistributions in binary form must reproduce the above
data/haarcascades_cuda/haarcascade_lowerbody.xml:|    * Redistributions of source code must retain the above copyright
data/haarcascades_cuda/haarcascade_lowerbody.xml:|    * Redistributions in binary form must reproduce the above
data/haarcascades_cuda/haarcascade_lowerbody.xml:this paper (available at www.vision.ethz.ch/publications/):
data/haarcascades_cuda/haarcascade_lowerbody.xml:available in my PhD thesis report (available end of June). Check out
data/haarcascades_cuda/haarcascade_lefteye_2splits.xml:    The detector is trained by 6665 positive samples from FERET, VALID and BioID face databases.
data/haarcascades_cuda/haarcascade_lefteye_2splits.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades_cuda/haarcascade_lefteye_2splits.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades_cuda/haarcascade_lefteye_2splits.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades_cuda/haarcascade_lefteye_2splits.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades_cuda/haarcascade_lefteye_2splits.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades_cuda/haarcascade_profileface.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades_cuda/haarcascade_profileface.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades_cuda/haarcascade_profileface.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades_cuda/haarcascade_profileface.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades_cuda/haarcascade_profileface.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades_cuda/haarcascade_frontalface_alt_tree.xml:    Stump-based 20x20 gentle adaboost frontal face detector.
data/haarcascades_cuda/haarcascade_frontalface_alt_tree.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades_cuda/haarcascade_frontalface_alt_tree.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades_cuda/haarcascade_frontalface_alt_tree.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades_cuda/haarcascade_frontalface_alt_tree.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades_cuda/haarcascade_frontalface_alt_tree.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades_cuda/haarcascade_frontalface_alt2.xml:    Tree-based 20x20 gentle adaboost frontal face detector.
data/haarcascades_cuda/haarcascade_frontalface_alt2.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades_cuda/haarcascade_frontalface_alt2.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades_cuda/haarcascade_frontalface_alt2.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades_cuda/haarcascade_frontalface_alt2.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades_cuda/haarcascade_frontalface_alt2.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades_cuda/haarcascade_eye.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades_cuda/haarcascade_eye.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades_cuda/haarcascade_eye.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades_cuda/haarcascade_eye.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades_cuda/haarcascade_eye.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades_cuda/haarcascade_upperbody.xml:|    * Redistributions of source code must retain the above copyright
data/haarcascades_cuda/haarcascade_upperbody.xml:|    * Redistributions in binary form must reproduce the above
data/haarcascades_cuda/haarcascade_upperbody.xml:this paper (available at www.vision.ethz.ch/publications/):
data/haarcascades_cuda/haarcascade_upperbody.xml:available in my PhD thesis report (available end of June). Check out
data/haarcascades_cuda/haarcascade_frontalface_default.xml:    Stump-based 24x24 discrete(?) adaboost frontal face detector.
data/haarcascades_cuda/haarcascade_frontalface_default.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades_cuda/haarcascade_frontalface_default.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades_cuda/haarcascade_frontalface_default.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades_cuda/haarcascade_frontalface_default.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades_cuda/haarcascade_frontalface_default.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades_cuda/haarcascade_eye_tree_eyeglasses.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades_cuda/haarcascade_eye_tree_eyeglasses.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades_cuda/haarcascade_eye_tree_eyeglasses.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades_cuda/haarcascade_eye_tree_eyeglasses.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades_cuda/haarcascade_eye_tree_eyeglasses.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades_cuda/haarcascade_fullbody.xml:|    * Redistributions of source code must retain the above copyright
data/haarcascades_cuda/haarcascade_fullbody.xml:|    * Redistributions in binary form must reproduce the above
data/haarcascades_cuda/haarcascade_fullbody.xml:this paper (available at www.vision.ethz.ch/publications/):
data/haarcascades_cuda/haarcascade_fullbody.xml:available in my PhD thesis report (available end of June). Check out
data/haarcascades_cuda/haarcascade_righteye_2splits.xml:    The detector is trained by 6665 positive samples from FERET, VALID and BioID face databases.
data/haarcascades_cuda/haarcascade_righteye_2splits.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades_cuda/haarcascade_righteye_2splits.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades_cuda/haarcascade_righteye_2splits.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades_cuda/haarcascade_righteye_2splits.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades_cuda/haarcascade_righteye_2splits.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_frontalface_alt.xml:    Stump-based 20x20 gentle adaboost frontal face detector.
data/haarcascades/haarcascade_frontalface_alt.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades/haarcascade_frontalface_alt.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades/haarcascade_frontalface_alt.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades/haarcascade_frontalface_alt.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades/haarcascade_frontalface_alt.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_smile.xml:  More information can be found at http://visilab.etsii.uclm.es/personas/oscar/oscar.html
data/haarcascades/haarcascade_smile.xml:|    * Redistributions of source code must retain the above copyright
data/haarcascades/haarcascade_smile.xml:|    * Redistributions in binary form must reproduce the above
data/haarcascades/haarcascade_lowerbody.xml:|    * Redistributions of source code must retain the above copyright
data/haarcascades/haarcascade_lowerbody.xml:|    * Redistributions in binary form must reproduce the above
data/haarcascades/haarcascade_lowerbody.xml:this paper (available at www.vision.ethz.ch/publications/):
data/haarcascades/haarcascade_lowerbody.xml:available in my PhD thesis report (available end of June). Check out
data/haarcascades/haarcascade_lefteye_2splits.xml:    The detector is trained by 6665 positive samples from FERET, VALID and BioID face databases. 
data/haarcascades/haarcascade_lefteye_2splits.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades/haarcascade_lefteye_2splits.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades/haarcascade_lefteye_2splits.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades/haarcascade_lefteye_2splits.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades/haarcascade_lefteye_2splits.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_profileface.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades/haarcascade_profileface.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades/haarcascade_profileface.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades/haarcascade_profileface.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades/haarcascade_profileface.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_frontalface_alt_tree.xml:    Stump-based 20x20 gentle adaboost frontal face detector.
data/haarcascades/haarcascade_frontalface_alt_tree.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades/haarcascade_frontalface_alt_tree.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades/haarcascade_frontalface_alt_tree.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades/haarcascade_frontalface_alt_tree.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades/haarcascade_frontalface_alt_tree.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_frontalface_alt2.xml:    Tree-based 20x20 gentle adaboost frontal face detector.
data/haarcascades/haarcascade_frontalface_alt2.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades/haarcascade_frontalface_alt2.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades/haarcascade_frontalface_alt2.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades/haarcascade_frontalface_alt2.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades/haarcascade_frontalface_alt2.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_eye.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades/haarcascade_eye.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades/haarcascade_eye.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades/haarcascade_eye.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades/haarcascade_eye.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_frontalcatface_extended.xml: |    * Redistributions of source code must retain the above copyright
data/haarcascades/haarcascade_frontalcatface_extended.xml: |    * Redistributions in binary form must reproduce the above
data/haarcascades/haarcascade_upperbody.xml:|    * Redistributions of source code must retain the above copyright
data/haarcascades/haarcascade_upperbody.xml:|    * Redistributions in binary form must reproduce the above
data/haarcascades/haarcascade_upperbody.xml:this paper (available at www.vision.ethz.ch/publications/):
data/haarcascades/haarcascade_upperbody.xml:available in my PhD thesis report (available end of June). Check out
data/haarcascades/haarcascade_frontalface_default.xml:    Stump-based 24x24 discrete(?) adaboost frontal face detector.
data/haarcascades/haarcascade_frontalface_default.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades/haarcascade_frontalface_default.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades/haarcascade_frontalface_default.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades/haarcascade_frontalface_default.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades/haarcascade_frontalface_default.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_eye_tree_eyeglasses.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades/haarcascade_eye_tree_eyeglasses.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades/haarcascade_eye_tree_eyeglasses.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades/haarcascade_eye_tree_eyeglasses.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades/haarcascade_eye_tree_eyeglasses.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_fullbody.xml:|    * Redistributions of source code must retain the above copyright
data/haarcascades/haarcascade_fullbody.xml:|    * Redistributions in binary form must reproduce the above
data/haarcascades/haarcascade_fullbody.xml:this paper (available at www.vision.ethz.ch/publications/):
data/haarcascades/haarcascade_fullbody.xml:available in my PhD thesis report (available end of June). Check out
data/haarcascades/haarcascade_righteye_2splits.xml:    The detector is trained by 6665 positive samples from FERET, VALID and BioID face databases. 
data/haarcascades/haarcascade_righteye_2splits.xml:   * Redistribution's of source code must retain the above copyright notice,
data/haarcascades/haarcascade_righteye_2splits.xml:   * Redistribution's in binary form must reproduce the above copyright notice,
data/haarcascades/haarcascade_righteye_2splits.xml: warranties of merchantability and fitness for a particular purpose are disclaimed.
data/haarcascades/haarcascade_righteye_2splits.xml: In no event shall the Intel Corporation or contributors be liable for any direct,
data/haarcascades/haarcascade_righteye_2splits.xml: and on any theory of liability, whether in contract, strict liability,
data/haarcascades/haarcascade_frontalcatface.xml: |    * Redistributions of source code must retain the above copyright
data/haarcascades/haarcascade_frontalcatface.xml: |    * Redistributions in binary form must reproduce the above
data/lbpcascades/lbpcascade_frontalcatface.xml: |    * Redistributions of source code must retain the above copyright
data/lbpcascades/lbpcascade_frontalcatface.xml: |    * Redistributions in binary form must reproduce the above
data/lbpcascades/lbpcascade_silverware.xml:    (probably should run detector several times).
data/lbpcascades/lbpcascade_silverware.xml:    It also assumes the "top view" when the camera optical axis is orthogonal to the table plane.
